/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/maininfotaiment_screen/MainInfotaimentViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MainInfotaimentViewBase::MainInfotaimentViewBase() :
    buttonCallback(this, &MainInfotaimentViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    txtGear.setXY(363, 40);
    txtGear.setColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    txtGear.setLinespacing(0);
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B1YM).getText());
    txtGear.setWildcard(txtGearBuffer);
    txtGear.resizeToCurrentText();
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VH0));
    add(txtGear);

    txtSpeed.setXY(670, 71);
    txtSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    txtSpeed.setLinespacing(0);
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KTQV).getText());
    txtSpeed.setWildcard(txtSpeedBuffer);
    txtSpeed.resizeToCurrentText();
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UXLR));
    add(txtSpeed);

    labelSpeed.setXY(767, 78);
    labelSpeed.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelSpeed.setLinespacing(0);
    labelSpeed.setRotation(touchgfx::TEXT_ROTATE_90);
    labelSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FQ22));
    add(labelSpeed);

    line1.setPosition(752, 75, 15, 42);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1.setPainter(line1Painter);
    line1.setStart(0, 0);
    line1.setEnd(0, 45);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1);

    txtRpm.setPosition(12, 71, 128, 49);
    txtRpm.setColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    txtRpm.setLinespacing(0);
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y39W).getText());
    txtRpm.setWildcard(txtRpmBuffer);
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VS7F));
    add(txtRpm);

    labelRpm.setXY(158, 79);
    labelRpm.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelRpm.setLinespacing(0);
    labelRpm.setRotation(touchgfx::TEXT_ROTATE_90);
    labelRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SAL));
    add(labelRpm);

    boxThrottle.setPosition(305, 169, 190, 24);
    boxThrottle.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxThrottle.setBorderColor(touchgfx::Color::getColorFromRGB(244, 255, 31));
    boxThrottle.setBorderSize(4);
    add(boxThrottle);

    boxBrake.setPosition(305, 216, 190, 24);
    boxBrake.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxBrake.setBorderColor(touchgfx::Color::getColorFromRGB(244, 255, 31));
    boxBrake.setBorderSize(4);
    add(boxBrake);

    progressThrottle.setXY(308, 171);
    progressThrottle.setProgressIndicatorPosition(2, 2, 180, 16);
    progressThrottle.setRange(0, 100);
    progressThrottle.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressThrottle.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    progressThrottle.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
    progressThrottle.setValue(0);
    add(progressThrottle);

    progressBrakeFront.setXY(308, 218);
    progressBrakeFront.setProgressIndicatorPosition(2, 2, 180, 16);
    progressBrakeFront.setRange(0, 100);
    progressBrakeFront.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressBrakeFront.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    progressBrakeFront.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
    progressBrakeFront.setValue(0);
    add(progressBrakeFront);

    boxBrake_1.setPosition(305, 238, 190, 24);
    boxBrake_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxBrake_1.setBorderColor(touchgfx::Color::getColorFromRGB(244, 255, 31));
    boxBrake_1.setBorderSize(4);
    add(boxBrake_1);

    progressBrakeRear.setXY(308, 240);
    progressBrakeRear.setProgressIndicatorPosition(2, 2, 180, 16);
    progressBrakeRear.setRange(0, 100);
    progressBrakeRear.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressBrakeRear.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
    progressBrakeRear.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
    progressBrakeRear.setValue(0);
    add(progressBrakeRear);

    boxRES.setPosition(5, 253, 135, 64);
    boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxRES.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxRES.setBorderSize(4);
    add(boxRES);

    line1_1.setPosition(143, 75, 15, 42);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(0, 0);
    line1_1.setEnd(0, 45);
    line1_1.setLineWidth(10);
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_1);

    line1_1_1.setPosition(143, 154, 15, 42);
    line1_1_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_1_1.setPainter(line1_1_1Painter);
    line1_1_1.setStart(0, 0);
    line1_1_1.setEnd(0, 45);
    line1_1_1.setLineWidth(10);
    line1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_1_1);

    labelLapCounter.setXY(158, 161);
    labelLapCounter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelLapCounter.setLinespacing(0);
    labelLapCounter.setRotation(touchgfx::TEXT_ROTATE_90);
    labelLapCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPF6));
    add(labelLapCounter);

    txtLap.setPosition(5, 150, 135, 49);
    txtLap.setColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    txtLap.setLinespacing(0);
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AR7I).getText());
    txtLap.setWildcard(txtLapBuffer);
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9DFI));
    add(txtLap);

    labelRES.setXY(36, 267);
    labelRES.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelRES.setLinespacing(0);
    labelRES.setTypedText(touchgfx::TypedText(T_RES));
    add(labelRES);

    progressRpmLow.setXY(12, 20);
    progressRpmLow.setProgressIndicatorPosition(2, 2, 246, 16);
    progressRpmLow.setRange(0, 100);
    progressRpmLow.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressRpmLow.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
    progressRpmLow.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
    progressRpmLow.setValue(0);
    add(progressRpmLow);

    progressRpmMed.setXY(275, 20);
    progressRpmMed.setProgressIndicatorPosition(2, 2, 246, 16);
    progressRpmMed.setRange(0, 100);
    progressRpmMed.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressRpmMed.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
    progressRpmMed.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    progressRpmMed.setValue(0);
    add(progressRpmMed);

    progressRpmHigh.setXY(536, 20);
    progressRpmHigh.setProgressIndicatorPosition(2, 2, 246, 16);
    progressRpmHigh.setRange(0, 100);
    progressRpmHigh.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
    progressRpmHigh.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
    progressRpmHigh.setColor(touchgfx::Color::getColorFromRGB(149, 0, 255));
    progressRpmHigh.setValue(0);
    add(progressRpmHigh);

    boxTWater.setPosition(150, 373, 90, 38);
    boxTWater.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxTWater.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxTWater.setBorderSize(5);
    add(boxTWater);

    txtTWater.setPosition(157, 383, 75, 19);
    txtTWater.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTWater.setLinespacing(0);
    Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K6X0).getText());
    txtTWater.setWildcard(txtTWaterBuffer);
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
    add(txtTWater);

    boxTOil.setPosition(150, 333, 90, 38);
    boxTOil.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxTOil.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxTOil.setBorderSize(5);
    add(boxTOil);

    boxPOil.setPosition(150, 293, 90, 38);
    boxPOil.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxPOil.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxPOil.setBorderSize(5);
    add(boxPOil);

    txtTOil.setPosition(157, 343, 75, 19);
    txtTOil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTOil.setLinespacing(0);
    Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZRFT).getText());
    txtTOil.setWildcard(txtTOilBuffer);
    txtTOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YR52));
    add(txtTOil);

    txtPOil.setPosition(157, 303, 75, 19);
    txtPOil.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtPOil.setLinespacing(0);
    Unicode::snprintf(txtPOilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1M75).getText());
    txtPOil.setWildcard(txtPOilBuffer);
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
    add(txtPOil);

    boxLC.setPosition(5, 321, 135, 63);
    boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxLC.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxLC.setBorderSize(4);
    add(boxLC);

    labelLC.setXY(47, 335);
    labelLC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelLC.setLinespacing(0);
    labelLC.setTypedText(touchgfx::TypedText(T_LC));
    add(labelLC);

    boxClutch.setPosition(5, 388, 135, 63);
    boxClutch.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxClutch.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxClutch.setBorderSize(4);
    add(boxClutch);

    labelClutch.setXY(39, 402);
    labelClutch.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelClutch.setLinespacing(0);
    labelClutch.setTypedText(touchgfx::TypedText(T_CLUTCH));
    add(labelClutch);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_185X111_ID));
    scalableImage1.setPosition(308, 340, 185, 111);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    labelDS.setXY(766, 160);
    labelDS.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelDS.setLinespacing(0);
    labelDS.setRotation(touchgfx::TEXT_ROTATE_90);
    labelDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67FN));
    add(labelDS);

    line1_2.setPosition(751, 150, 15, 42);
    line1_2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_2.setPainter(line1_2Painter);
    line1_2.setStart(0, 0);
    line1_2.setEnd(0, 45);
    line1_2.setLineWidth(10);
    line1_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_2);

    line1_2_1.setPosition(751, 195, 15, 42);
    line1_2_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_2_1.setPainter(line1_2_1Painter);
    line1_2_1.setStart(0, 0);
    line1_2_1.setEnd(0, 45);
    line1_2_1.setLineWidth(10);
    line1_2_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_2_1);

    boxDS.setPosition(586, 150, 145, 42);
    boxDS.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxDS.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxDS.setBorderSize(5);
    add(boxDS);

    labelAS.setXY(766, 207);
    labelAS.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelAS.setLinespacing(0);
    labelAS.setRotation(touchgfx::TEXT_ROTATE_90);
    labelAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MIUL));
    add(labelAS);

    boxAS.setPosition(586, 195, 145, 42);
    boxAS.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxAS.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxAS.setBorderSize(5);
    add(boxAS);

    line1_2_2.setPosition(751, 240, 15, 42);
    line1_2_2Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_2_2.setPainter(line1_2_2Painter);
    line1_2_2.setStart(0, 0);
    line1_2_2.setEnd(0, 45);
    line1_2_2.setLineWidth(10);
    line1_2_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_2_2);

    boxAMI.setPosition(586, 240, 145, 42);
    boxAMI.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxAMI.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxAMI.setBorderSize(5);
    add(boxAMI);

    line1_2_1_1_1.setPosition(751, 284, 15, 42);
    line1_2_1_1_1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    line1_2_1_1_1.setPainter(line1_2_1_1_1Painter);
    line1_2_1_1_1.setStart(0, 0);
    line1_2_1_1_1.setEnd(0, 45);
    line1_2_1_1_1.setLineWidth(10);
    line1_2_1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
    add(line1_2_1_1_1);

    boxEBS.setPosition(586, 284, 145, 42);
    boxEBS.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxEBS.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxEBS.setBorderSize(5);
    add(boxEBS);

    labelAS_1.setXY(767, 247);
    labelAS_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelAS_1.setLinespacing(0);
    labelAS_1.setRotation(touchgfx::TEXT_ROTATE_90);
    labelAS_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9LL));
    add(labelAS_1);

    labelAS_2.setXY(766, 290);
    labelAS_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    labelAS_2.setLinespacing(0);
    labelAS_2.setRotation(touchgfx::TEXT_ROTATE_90);
    labelAS_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W7WZ));
    add(labelAS_2);

    txtDS.setXY(595, 158);
    txtDS.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtDS.setLinespacing(0);
    Unicode::snprintf(txtDSBuffer, TXTDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q3EN).getText());
    txtDS.setWildcard(txtDSBuffer);
    txtDS.resizeToCurrentText();
    txtDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J40F));
    add(txtDS);

    txtAS.setXY(595, 202);
    txtAS.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtAS.setLinespacing(0);
    txtAS.setWildcard(touchgfx::TypedText(T___SINGLEUSE_MCPR).getText());
    txtAS.resizeToCurrentText();
    txtAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J70));
    add(txtAS);

    txtAMI.setXY(595, 247);
    txtAMI.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtAMI.setLinespacing(0);
    Unicode::snprintf(txtAMIBuffer, TXTAMI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VLUE).getText());
    txtAMI.setWildcard(txtAMIBuffer);
    txtAMI.resizeToCurrentText();
    txtAMI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_74WN));
    add(txtAMI);

    txtEBS.setXY(595, 293);
    txtEBS.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtEBS.setLinespacing(0);
    Unicode::snprintf(txtEBSBuffer, TXTEBS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V415).getText());
    txtEBS.setWildcard(txtEBSBuffer);
    txtEBS.resizeToCurrentText();
    txtEBS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ17));
    add(txtEBS);

    boxBattery_V.setPosition(526, 376, 87, 38);
    boxBattery_V.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxBattery_V.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxBattery_V.setBorderSize(5);
    add(boxBattery_V);

    txtBattery_V.setPosition(536, 386, 70, 19);
    txtBattery_V.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtBattery_V.setLinespacing(0);
    Unicode::snprintf(txtBattery_VBuffer, TXTBATTERY_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G99E).getText());
    txtBattery_V.setWildcard(txtBattery_VBuffer);
    txtBattery_V.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J87C));
    add(txtBattery_V);

    imgOilPres.setXY(242, 293);
    imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_OK_ID));
    add(imgOilPres);

    boxPFuel.setPosition(150, 253, 90, 38);
    boxPFuel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxPFuel.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxPFuel.setBorderSize(5);
    add(boxPFuel);

    txtPFuel.setPosition(157, 263, 75, 19);
    txtPFuel.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtPFuel.setLinespacing(0);
    Unicode::snprintf(txtPFuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B7Z3).getText());
    txtPFuel.setWildcard(txtPFuelBuffer);
    txtPFuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EUMO));
    add(txtPFuel);

    imgOilTemp.setXY(242, 330);
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_OK_ID));
    add(imgOilTemp);

    imgWaterTemp.setXY(242, 377);
    imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
    add(imgWaterTemp);

    imgTOrin.setXY(246, 415);
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
    add(imgTOrin);

    boxTOrin.setPosition(150, 413, 90, 38);
    boxTOrin.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxTOrin.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    boxTOrin.setBorderSize(5);
    add(boxTOrin);

    txtTOrin.setPosition(157, 423, 75, 19);
    txtTOrin.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txtTOrin.setLinespacing(0);
    Unicode::snprintf(txtTOrinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMBT).getText());
    txtTOrin.setWildcard(txtTOrinBuffer);
    txtTOrin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9UXZ));
    add(txtTOrin);

    imgBatteryV.setXY(529, 337);
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
    add(imgBatteryV);

    img24v.setXY(609, 337);
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
    add(img24v);

    box24v.setPosition(608, 376, 87, 38);
    box24v.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    box24v.setBorderColor(touchgfx::Color::getColorFromRGB(255, 234, 0));
    box24v.setBorderSize(5);
    add(box24v);

    txt24v.setPosition(616, 386, 70, 19);
    txt24v.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    txt24v.setLinespacing(0);
    Unicode::snprintf(txt24vBuffer, TXT24V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8BB2).getText());
    txt24v.setWildcard(txt24vBuffer);
    txt24v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JG35));
    add(txt24v);

    btnNextPage.setXY(735, 415);
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
    btnNextPage.setAction(buttonCallback);
    add(btnNextPage);

    dbgTextArea.setPosition(5, 454, 741, 23);
    dbgTextArea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    dbgTextArea.setLinespacing(0);
    dbgTextAreaBuffer[0] = 0;
    dbgTextArea.setWildcard(dbgTextAreaBuffer);
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
    add(dbgTextArea);

    textArea1.setXY(635, 414);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J3QN));
    add(textArea1);

    textArea1_1.setXY(557, 414);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BU43));
    add(textArea1_1);

    textArea2.setXY(246, 261);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ONGO));
    add(textArea2);

    toDriver1.setXY(308, 341);
    toDriver1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
    toDriver1.setAlpha(0);
    toDriver1.setAction(buttonCallback);
    add(toDriver1);

    toDriver2.setXY(351, 393);
    toDriver2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
    toDriver2.setAlpha(0);
    toDriver2.setVisible(false);
    toDriver2.setAction(buttonCallback);
    add(toDriver2);
}

MainInfotaimentViewBase::~MainInfotaimentViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void MainInfotaimentViewBase::setupScreen()
{

}

void MainInfotaimentViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btnNextPage)
    {
        //fromLiveDataToMissionSelect
        //When btnNextPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards East
        application().gotoMissionSelectScreenSlideTransitionEast();
    }
    if (&src == &toDriver1)
    {
        //toDriverEasterEgg1
        //When toDriver1 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
    }
    if (&src == &toDriver2)
    {
        //toDriverEasterEgg2
        //When toDriver2 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
    }
}
