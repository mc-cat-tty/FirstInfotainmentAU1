/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef COMPETITIONSCREENVIEWBASE_HPP
#define COMPETITIONSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/competitionscreen_screen/CompetitionScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class CompetitionScreenViewBase : public touchgfx::View<CompetitionScreenPresenter>
{
public:
    CompetitionScreenViewBase();
    virtual ~CompetitionScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Button btnPrevPage;
    touchgfx::Button btnNextPage;
    touchgfx::TextAreaWithOneWildcard txtMission;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TXTMISSION_SIZE = 15;
    touchgfx::Unicode::UnicodeChar txtMissionBuffer[TXTMISSION_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CompetitionScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // COMPETITIONSCREENVIEWBASE_HPP
