// 4.22.0 0x0939d0d5
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_36_medium_rounded_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_NORMAL_ID = 0, Size: 214x36 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_36_medium_rounded_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_MEDIUM_ROUNDED_PRESSED_ID = 1, Size: 214x36 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_small_rounded_normal[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID = 2, Size: 228x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_small_rounded_pressed[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID = 3, Size: 228x60 pixels
extern const unsigned char image_alternate_theme_images_widgets_button_regular_height_60_tiny_rounded_disabled[]; // BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID = 4, Size: 144x60 pixels
extern const unsigned char image_battery_high[]; // BITMAP_BATTERY_HIGH_ID = 5, Size: 83x48 pixels
extern const unsigned char image_battery_low[]; // BITMAP_BATTERY_LOW_ID = 6, Size: 83x48 pixels
extern const unsigned char image_battery_ok[]; // BITMAP_BATTERY_OK_ID = 7, Size: 83x48 pixels
extern const unsigned char image_blue_buttons_round_edge_small[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID = 8, Size: 170x60 pixels
extern const unsigned char image_blue_buttons_round_edge_small_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID = 9, Size: 170x60 pixels
extern const unsigned char image_blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID = 10, Size: 184x20 pixels
extern const unsigned char image_btn_next[]; // BITMAP_BTN_NEXT_ID = 11, Size: 50x50 pixels
extern const unsigned char image_btn_prev[]; // BITMAP_BTN_PREV_ID = 12, Size: 50x50 pixels
extern const unsigned char image_mmrd_logo_nuovo_185x111[]; // BITMAP_MMRD_LOGO_NUOVO_185X111_ID = 13, Size: 185x111 pixels
extern const unsigned char image_mmrd_logo_nuovo_800x480[]; // BITMAP_MMRD_LOGO_NUOVO_800X480_ID = 14, Size: 800x480 pixels
extern const unsigned char image_oil_pres_high[]; // BITMAP_OIL_PRES_HIGH_ID = 15, Size: 43x38 pixels
extern const unsigned char image_oil_pres_low[]; // BITMAP_OIL_PRES_LOW_ID = 16, Size: 43x38 pixels
extern const unsigned char image_oil_pres_ok[]; // BITMAP_OIL_PRES_OK_ID = 17, Size: 43x38 pixels
extern const unsigned char image_oil_temp_high[]; // BITMAP_OIL_TEMP_HIGH_ID = 18, Size: 43x41 pixels
extern const unsigned char image_oil_temp_low[]; // BITMAP_OIL_TEMP_LOW_ID = 19, Size: 43x41 pixels
extern const unsigned char image_oil_temp_ok[]; // BITMAP_OIL_TEMP_OK_ID = 20, Size: 43x41 pixels
extern const unsigned char image_orin_t_high[]; // BITMAP_ORIN_T_HIGH_ID = 21, Size: 35x34 pixels
extern const unsigned char image_orin_t_ok[]; // BITMAP_ORIN_T_OK_ID = 22, Size: 35x34 pixels
extern const unsigned char image_progress_bar_large[]; // BITMAP_PROGRESS_BAR_LARGE_ID = 23, Size: 250x20 pixels
extern const unsigned char image_water_high[]; // BITMAP_WATER_HIGH_ID = 24, Size: 43x31 pixels
extern const unsigned char image_water_low[]; // BITMAP_WATER_LOW_ID = 25, Size: 43x31 pixels
extern const unsigned char image_water_ok[]; // BITMAP_WATER_OK_ID = 26, Size: 43x31 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_widgets_button_regular_height_36_medium_rounded_normal, 0, 214, 36, 3, 0, 208, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_36_medium_rounded_pressed, 0, 214, 36, 3, 0, 208, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 36, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_small_rounded_normal, 0, 228, 60, 7, 1, 214, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_small_rounded_pressed, 0, 228, 60, 7, 1, 214, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_alternate_theme_images_widgets_button_regular_height_60_tiny_rounded_disabled, 0, 144, 60, 7, 1, 130, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 58, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_high, 0, 83, 48, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_low, 0, 83, 48, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_battery_ok, 0, 83, 48, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_small, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_small_pressed, 0, 170, 60, 11, 4, 148, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 50, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_bg_medium_progress_indicator_bg_square_0_degrees, 0, 184, 20, 0, 0, 184, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 20, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_btn_next, 0, 50, 50, 47, 19, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_btn_prev, 0, 50, 50, 47, 19, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mmrd_logo_nuovo_185x111, 0, 185, 111, 3, 93, 175, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_mmrd_logo_nuovo_800x480, 0, 800, 480, 12, 402, 760, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 21, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_pres_high, 0, 43, 38, 9, 16, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_pres_low, 0, 43, 38, 39, 20, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_pres_ok, 0, 43, 38, 9, 16, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_temp_high, 0, 43, 41, 19, 8, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_temp_low, 0, 43, 41, 19, 8, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_oil_temp_ok, 0, 43, 41, 19, 8, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 18, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_orin_t_high, 0, 35, 34, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_orin_t_ok, 0, 35, 34, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_progress_bar_large, 0, 250, 20, 0, 0, 250, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 20, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_water_high, 0, 43, 31, 21, 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 21, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_water_low, 0, 43, 31, 21, 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 21, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_water_ok, 0, 43, 31, 21, 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 21, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
