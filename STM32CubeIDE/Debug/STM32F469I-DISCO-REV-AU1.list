
STM32F469I-DISCO-REV-AU1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002735c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000334c  0802751c  0802751c  0003751c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000066c  0802a868  0802a868  0003a868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802aed4  0802aed4  002871f8  2**0
                  CONTENTS
  5 .ARM          00000008  0802aed4  0802aed4  0003aed4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802aedc  0802aedc  002871f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802aedc  0802aedc  0003aedc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802aef4  0802aef4  0003aef4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000148  20000000  0802aefc  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000f8d0  20000148  0802b044  00040148  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000fa18  0802b044  0004fa18  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  002871f8  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 001f6274  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 0004090c  901f6274  901f6274  00246274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000678  90236b80  90236b80  00286b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00077958  00000000  00000000  00287228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00155d27  00000000  00000000  002feb80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00020c8d  00000000  00000000  004548a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003f28  00000000  00000000  00475538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013ee1a  00000000  00000000  00479460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000a6c8  00000000  00000000  005b8280  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00043fec  00000000  00000000  005c2948  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003e2e0  00000000  00000000  00606934  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00644c14  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000af8c  00000000  00000000  00644ce4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000148 	.word	0x20000148
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08027504 	.word	0x08027504

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	2000014c 	.word	0x2000014c
 80001fc:	08027504 	.word	0x08027504

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__gedf2>:
 8000618:	f04f 3cff 	mov.w	ip, #4294967295
 800061c:	e006      	b.n	800062c <__cmpdf2+0x4>
 800061e:	bf00      	nop

08000620 <__ledf2>:
 8000620:	f04f 0c01 	mov.w	ip, #1
 8000624:	e002      	b.n	800062c <__cmpdf2+0x4>
 8000626:	bf00      	nop

08000628 <__cmpdf2>:
 8000628:	f04f 0c01 	mov.w	ip, #1
 800062c:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000630:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000634:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000638:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 800063c:	bf18      	it	ne
 800063e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000642:	d01b      	beq.n	800067c <__cmpdf2+0x54>
 8000644:	b001      	add	sp, #4
 8000646:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800064a:	bf0c      	ite	eq
 800064c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000650:	ea91 0f03 	teqne	r1, r3
 8000654:	bf02      	ittt	eq
 8000656:	ea90 0f02 	teqeq	r0, r2
 800065a:	2000      	moveq	r0, #0
 800065c:	4770      	bxeq	lr
 800065e:	f110 0f00 	cmn.w	r0, #0
 8000662:	ea91 0f03 	teq	r1, r3
 8000666:	bf58      	it	pl
 8000668:	4299      	cmppl	r1, r3
 800066a:	bf08      	it	eq
 800066c:	4290      	cmpeq	r0, r2
 800066e:	bf2c      	ite	cs
 8000670:	17d8      	asrcs	r0, r3, #31
 8000672:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000676:	f040 0001 	orr.w	r0, r0, #1
 800067a:	4770      	bx	lr
 800067c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000680:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000684:	d102      	bne.n	800068c <__cmpdf2+0x64>
 8000686:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800068a:	d107      	bne.n	800069c <__cmpdf2+0x74>
 800068c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000690:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000694:	d1d6      	bne.n	8000644 <__cmpdf2+0x1c>
 8000696:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800069a:	d0d3      	beq.n	8000644 <__cmpdf2+0x1c>
 800069c:	f85d 0b04 	ldr.w	r0, [sp], #4
 80006a0:	4770      	bx	lr
 80006a2:	bf00      	nop

080006a4 <__aeabi_cdrcmple>:
 80006a4:	4684      	mov	ip, r0
 80006a6:	4610      	mov	r0, r2
 80006a8:	4662      	mov	r2, ip
 80006aa:	468c      	mov	ip, r1
 80006ac:	4619      	mov	r1, r3
 80006ae:	4663      	mov	r3, ip
 80006b0:	e000      	b.n	80006b4 <__aeabi_cdcmpeq>
 80006b2:	bf00      	nop

080006b4 <__aeabi_cdcmpeq>:
 80006b4:	b501      	push	{r0, lr}
 80006b6:	f7ff ffb7 	bl	8000628 <__cmpdf2>
 80006ba:	2800      	cmp	r0, #0
 80006bc:	bf48      	it	mi
 80006be:	f110 0f00 	cmnmi.w	r0, #0
 80006c2:	bd01      	pop	{r0, pc}

080006c4 <__aeabi_dcmpeq>:
 80006c4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006c8:	f7ff fff4 	bl	80006b4 <__aeabi_cdcmpeq>
 80006cc:	bf0c      	ite	eq
 80006ce:	2001      	moveq	r0, #1
 80006d0:	2000      	movne	r0, #0
 80006d2:	f85d fb08 	ldr.w	pc, [sp], #8
 80006d6:	bf00      	nop

080006d8 <__aeabi_dcmplt>:
 80006d8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006dc:	f7ff ffea 	bl	80006b4 <__aeabi_cdcmpeq>
 80006e0:	bf34      	ite	cc
 80006e2:	2001      	movcc	r0, #1
 80006e4:	2000      	movcs	r0, #0
 80006e6:	f85d fb08 	ldr.w	pc, [sp], #8
 80006ea:	bf00      	nop

080006ec <__aeabi_dcmple>:
 80006ec:	f84d ed08 	str.w	lr, [sp, #-8]!
 80006f0:	f7ff ffe0 	bl	80006b4 <__aeabi_cdcmpeq>
 80006f4:	bf94      	ite	ls
 80006f6:	2001      	movls	r0, #1
 80006f8:	2000      	movhi	r0, #0
 80006fa:	f85d fb08 	ldr.w	pc, [sp], #8
 80006fe:	bf00      	nop

08000700 <__aeabi_dcmpge>:
 8000700:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000704:	f7ff ffce 	bl	80006a4 <__aeabi_cdrcmple>
 8000708:	bf94      	ite	ls
 800070a:	2001      	movls	r0, #1
 800070c:	2000      	movhi	r0, #0
 800070e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000712:	bf00      	nop

08000714 <__aeabi_dcmpgt>:
 8000714:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000718:	f7ff ffc4 	bl	80006a4 <__aeabi_cdrcmple>
 800071c:	bf34      	ite	cc
 800071e:	2001      	movcc	r0, #1
 8000720:	2000      	movcs	r0, #0
 8000722:	f85d fb08 	ldr.w	pc, [sp], #8
 8000726:	bf00      	nop

08000728 <__aeabi_uldivmod>:
 8000728:	b953      	cbnz	r3, 8000740 <__aeabi_uldivmod+0x18>
 800072a:	b94a      	cbnz	r2, 8000740 <__aeabi_uldivmod+0x18>
 800072c:	2900      	cmp	r1, #0
 800072e:	bf08      	it	eq
 8000730:	2800      	cmpeq	r0, #0
 8000732:	bf1c      	itt	ne
 8000734:	f04f 31ff 	movne.w	r1, #4294967295
 8000738:	f04f 30ff 	movne.w	r0, #4294967295
 800073c:	f000 b974 	b.w	8000a28 <__aeabi_idiv0>
 8000740:	f1ad 0c08 	sub.w	ip, sp, #8
 8000744:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000748:	f000 f806 	bl	8000758 <__udivmoddi4>
 800074c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000750:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000754:	b004      	add	sp, #16
 8000756:	4770      	bx	lr

08000758 <__udivmoddi4>:
 8000758:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800075c:	9d08      	ldr	r5, [sp, #32]
 800075e:	4604      	mov	r4, r0
 8000760:	468e      	mov	lr, r1
 8000762:	2b00      	cmp	r3, #0
 8000764:	d14d      	bne.n	8000802 <__udivmoddi4+0xaa>
 8000766:	428a      	cmp	r2, r1
 8000768:	4694      	mov	ip, r2
 800076a:	d969      	bls.n	8000840 <__udivmoddi4+0xe8>
 800076c:	fab2 f282 	clz	r2, r2
 8000770:	b152      	cbz	r2, 8000788 <__udivmoddi4+0x30>
 8000772:	fa01 f302 	lsl.w	r3, r1, r2
 8000776:	f1c2 0120 	rsb	r1, r2, #32
 800077a:	fa20 f101 	lsr.w	r1, r0, r1
 800077e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000782:	ea41 0e03 	orr.w	lr, r1, r3
 8000786:	4094      	lsls	r4, r2
 8000788:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800078c:	0c21      	lsrs	r1, r4, #16
 800078e:	fbbe f6f8 	udiv	r6, lr, r8
 8000792:	fa1f f78c 	uxth.w	r7, ip
 8000796:	fb08 e316 	mls	r3, r8, r6, lr
 800079a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800079e:	fb06 f107 	mul.w	r1, r6, r7
 80007a2:	4299      	cmp	r1, r3
 80007a4:	d90a      	bls.n	80007bc <__udivmoddi4+0x64>
 80007a6:	eb1c 0303 	adds.w	r3, ip, r3
 80007aa:	f106 30ff 	add.w	r0, r6, #4294967295
 80007ae:	f080 811f 	bcs.w	80009f0 <__udivmoddi4+0x298>
 80007b2:	4299      	cmp	r1, r3
 80007b4:	f240 811c 	bls.w	80009f0 <__udivmoddi4+0x298>
 80007b8:	3e02      	subs	r6, #2
 80007ba:	4463      	add	r3, ip
 80007bc:	1a5b      	subs	r3, r3, r1
 80007be:	b2a4      	uxth	r4, r4
 80007c0:	fbb3 f0f8 	udiv	r0, r3, r8
 80007c4:	fb08 3310 	mls	r3, r8, r0, r3
 80007c8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80007cc:	fb00 f707 	mul.w	r7, r0, r7
 80007d0:	42a7      	cmp	r7, r4
 80007d2:	d90a      	bls.n	80007ea <__udivmoddi4+0x92>
 80007d4:	eb1c 0404 	adds.w	r4, ip, r4
 80007d8:	f100 33ff 	add.w	r3, r0, #4294967295
 80007dc:	f080 810a 	bcs.w	80009f4 <__udivmoddi4+0x29c>
 80007e0:	42a7      	cmp	r7, r4
 80007e2:	f240 8107 	bls.w	80009f4 <__udivmoddi4+0x29c>
 80007e6:	4464      	add	r4, ip
 80007e8:	3802      	subs	r0, #2
 80007ea:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80007ee:	1be4      	subs	r4, r4, r7
 80007f0:	2600      	movs	r6, #0
 80007f2:	b11d      	cbz	r5, 80007fc <__udivmoddi4+0xa4>
 80007f4:	40d4      	lsrs	r4, r2
 80007f6:	2300      	movs	r3, #0
 80007f8:	e9c5 4300 	strd	r4, r3, [r5]
 80007fc:	4631      	mov	r1, r6
 80007fe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000802:	428b      	cmp	r3, r1
 8000804:	d909      	bls.n	800081a <__udivmoddi4+0xc2>
 8000806:	2d00      	cmp	r5, #0
 8000808:	f000 80ef 	beq.w	80009ea <__udivmoddi4+0x292>
 800080c:	2600      	movs	r6, #0
 800080e:	e9c5 0100 	strd	r0, r1, [r5]
 8000812:	4630      	mov	r0, r6
 8000814:	4631      	mov	r1, r6
 8000816:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800081a:	fab3 f683 	clz	r6, r3
 800081e:	2e00      	cmp	r6, #0
 8000820:	d14a      	bne.n	80008b8 <__udivmoddi4+0x160>
 8000822:	428b      	cmp	r3, r1
 8000824:	d302      	bcc.n	800082c <__udivmoddi4+0xd4>
 8000826:	4282      	cmp	r2, r0
 8000828:	f200 80f9 	bhi.w	8000a1e <__udivmoddi4+0x2c6>
 800082c:	1a84      	subs	r4, r0, r2
 800082e:	eb61 0303 	sbc.w	r3, r1, r3
 8000832:	2001      	movs	r0, #1
 8000834:	469e      	mov	lr, r3
 8000836:	2d00      	cmp	r5, #0
 8000838:	d0e0      	beq.n	80007fc <__udivmoddi4+0xa4>
 800083a:	e9c5 4e00 	strd	r4, lr, [r5]
 800083e:	e7dd      	b.n	80007fc <__udivmoddi4+0xa4>
 8000840:	b902      	cbnz	r2, 8000844 <__udivmoddi4+0xec>
 8000842:	deff      	udf	#255	; 0xff
 8000844:	fab2 f282 	clz	r2, r2
 8000848:	2a00      	cmp	r2, #0
 800084a:	f040 8092 	bne.w	8000972 <__udivmoddi4+0x21a>
 800084e:	eba1 010c 	sub.w	r1, r1, ip
 8000852:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000856:	fa1f fe8c 	uxth.w	lr, ip
 800085a:	2601      	movs	r6, #1
 800085c:	0c20      	lsrs	r0, r4, #16
 800085e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000862:	fb07 1113 	mls	r1, r7, r3, r1
 8000866:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800086a:	fb0e f003 	mul.w	r0, lr, r3
 800086e:	4288      	cmp	r0, r1
 8000870:	d908      	bls.n	8000884 <__udivmoddi4+0x12c>
 8000872:	eb1c 0101 	adds.w	r1, ip, r1
 8000876:	f103 38ff 	add.w	r8, r3, #4294967295
 800087a:	d202      	bcs.n	8000882 <__udivmoddi4+0x12a>
 800087c:	4288      	cmp	r0, r1
 800087e:	f200 80cb 	bhi.w	8000a18 <__udivmoddi4+0x2c0>
 8000882:	4643      	mov	r3, r8
 8000884:	1a09      	subs	r1, r1, r0
 8000886:	b2a4      	uxth	r4, r4
 8000888:	fbb1 f0f7 	udiv	r0, r1, r7
 800088c:	fb07 1110 	mls	r1, r7, r0, r1
 8000890:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000894:	fb0e fe00 	mul.w	lr, lr, r0
 8000898:	45a6      	cmp	lr, r4
 800089a:	d908      	bls.n	80008ae <__udivmoddi4+0x156>
 800089c:	eb1c 0404 	adds.w	r4, ip, r4
 80008a0:	f100 31ff 	add.w	r1, r0, #4294967295
 80008a4:	d202      	bcs.n	80008ac <__udivmoddi4+0x154>
 80008a6:	45a6      	cmp	lr, r4
 80008a8:	f200 80bb 	bhi.w	8000a22 <__udivmoddi4+0x2ca>
 80008ac:	4608      	mov	r0, r1
 80008ae:	eba4 040e 	sub.w	r4, r4, lr
 80008b2:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80008b6:	e79c      	b.n	80007f2 <__udivmoddi4+0x9a>
 80008b8:	f1c6 0720 	rsb	r7, r6, #32
 80008bc:	40b3      	lsls	r3, r6
 80008be:	fa22 fc07 	lsr.w	ip, r2, r7
 80008c2:	ea4c 0c03 	orr.w	ip, ip, r3
 80008c6:	fa20 f407 	lsr.w	r4, r0, r7
 80008ca:	fa01 f306 	lsl.w	r3, r1, r6
 80008ce:	431c      	orrs	r4, r3
 80008d0:	40f9      	lsrs	r1, r7
 80008d2:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80008d6:	fa00 f306 	lsl.w	r3, r0, r6
 80008da:	fbb1 f8f9 	udiv	r8, r1, r9
 80008de:	0c20      	lsrs	r0, r4, #16
 80008e0:	fa1f fe8c 	uxth.w	lr, ip
 80008e4:	fb09 1118 	mls	r1, r9, r8, r1
 80008e8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80008ec:	fb08 f00e 	mul.w	r0, r8, lr
 80008f0:	4288      	cmp	r0, r1
 80008f2:	fa02 f206 	lsl.w	r2, r2, r6
 80008f6:	d90b      	bls.n	8000910 <__udivmoddi4+0x1b8>
 80008f8:	eb1c 0101 	adds.w	r1, ip, r1
 80008fc:	f108 3aff 	add.w	sl, r8, #4294967295
 8000900:	f080 8088 	bcs.w	8000a14 <__udivmoddi4+0x2bc>
 8000904:	4288      	cmp	r0, r1
 8000906:	f240 8085 	bls.w	8000a14 <__udivmoddi4+0x2bc>
 800090a:	f1a8 0802 	sub.w	r8, r8, #2
 800090e:	4461      	add	r1, ip
 8000910:	1a09      	subs	r1, r1, r0
 8000912:	b2a4      	uxth	r4, r4
 8000914:	fbb1 f0f9 	udiv	r0, r1, r9
 8000918:	fb09 1110 	mls	r1, r9, r0, r1
 800091c:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000920:	fb00 fe0e 	mul.w	lr, r0, lr
 8000924:	458e      	cmp	lr, r1
 8000926:	d908      	bls.n	800093a <__udivmoddi4+0x1e2>
 8000928:	eb1c 0101 	adds.w	r1, ip, r1
 800092c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000930:	d26c      	bcs.n	8000a0c <__udivmoddi4+0x2b4>
 8000932:	458e      	cmp	lr, r1
 8000934:	d96a      	bls.n	8000a0c <__udivmoddi4+0x2b4>
 8000936:	3802      	subs	r0, #2
 8000938:	4461      	add	r1, ip
 800093a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800093e:	fba0 9402 	umull	r9, r4, r0, r2
 8000942:	eba1 010e 	sub.w	r1, r1, lr
 8000946:	42a1      	cmp	r1, r4
 8000948:	46c8      	mov	r8, r9
 800094a:	46a6      	mov	lr, r4
 800094c:	d356      	bcc.n	80009fc <__udivmoddi4+0x2a4>
 800094e:	d053      	beq.n	80009f8 <__udivmoddi4+0x2a0>
 8000950:	b15d      	cbz	r5, 800096a <__udivmoddi4+0x212>
 8000952:	ebb3 0208 	subs.w	r2, r3, r8
 8000956:	eb61 010e 	sbc.w	r1, r1, lr
 800095a:	fa01 f707 	lsl.w	r7, r1, r7
 800095e:	fa22 f306 	lsr.w	r3, r2, r6
 8000962:	40f1      	lsrs	r1, r6
 8000964:	431f      	orrs	r7, r3
 8000966:	e9c5 7100 	strd	r7, r1, [r5]
 800096a:	2600      	movs	r6, #0
 800096c:	4631      	mov	r1, r6
 800096e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000972:	f1c2 0320 	rsb	r3, r2, #32
 8000976:	40d8      	lsrs	r0, r3
 8000978:	fa0c fc02 	lsl.w	ip, ip, r2
 800097c:	fa21 f303 	lsr.w	r3, r1, r3
 8000980:	4091      	lsls	r1, r2
 8000982:	4301      	orrs	r1, r0
 8000984:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000988:	fa1f fe8c 	uxth.w	lr, ip
 800098c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000990:	fb07 3610 	mls	r6, r7, r0, r3
 8000994:	0c0b      	lsrs	r3, r1, #16
 8000996:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800099a:	fb00 f60e 	mul.w	r6, r0, lr
 800099e:	429e      	cmp	r6, r3
 80009a0:	fa04 f402 	lsl.w	r4, r4, r2
 80009a4:	d908      	bls.n	80009b8 <__udivmoddi4+0x260>
 80009a6:	eb1c 0303 	adds.w	r3, ip, r3
 80009aa:	f100 38ff 	add.w	r8, r0, #4294967295
 80009ae:	d22f      	bcs.n	8000a10 <__udivmoddi4+0x2b8>
 80009b0:	429e      	cmp	r6, r3
 80009b2:	d92d      	bls.n	8000a10 <__udivmoddi4+0x2b8>
 80009b4:	3802      	subs	r0, #2
 80009b6:	4463      	add	r3, ip
 80009b8:	1b9b      	subs	r3, r3, r6
 80009ba:	b289      	uxth	r1, r1
 80009bc:	fbb3 f6f7 	udiv	r6, r3, r7
 80009c0:	fb07 3316 	mls	r3, r7, r6, r3
 80009c4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80009c8:	fb06 f30e 	mul.w	r3, r6, lr
 80009cc:	428b      	cmp	r3, r1
 80009ce:	d908      	bls.n	80009e2 <__udivmoddi4+0x28a>
 80009d0:	eb1c 0101 	adds.w	r1, ip, r1
 80009d4:	f106 38ff 	add.w	r8, r6, #4294967295
 80009d8:	d216      	bcs.n	8000a08 <__udivmoddi4+0x2b0>
 80009da:	428b      	cmp	r3, r1
 80009dc:	d914      	bls.n	8000a08 <__udivmoddi4+0x2b0>
 80009de:	3e02      	subs	r6, #2
 80009e0:	4461      	add	r1, ip
 80009e2:	1ac9      	subs	r1, r1, r3
 80009e4:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80009e8:	e738      	b.n	800085c <__udivmoddi4+0x104>
 80009ea:	462e      	mov	r6, r5
 80009ec:	4628      	mov	r0, r5
 80009ee:	e705      	b.n	80007fc <__udivmoddi4+0xa4>
 80009f0:	4606      	mov	r6, r0
 80009f2:	e6e3      	b.n	80007bc <__udivmoddi4+0x64>
 80009f4:	4618      	mov	r0, r3
 80009f6:	e6f8      	b.n	80007ea <__udivmoddi4+0x92>
 80009f8:	454b      	cmp	r3, r9
 80009fa:	d2a9      	bcs.n	8000950 <__udivmoddi4+0x1f8>
 80009fc:	ebb9 0802 	subs.w	r8, r9, r2
 8000a00:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000a04:	3801      	subs	r0, #1
 8000a06:	e7a3      	b.n	8000950 <__udivmoddi4+0x1f8>
 8000a08:	4646      	mov	r6, r8
 8000a0a:	e7ea      	b.n	80009e2 <__udivmoddi4+0x28a>
 8000a0c:	4620      	mov	r0, r4
 8000a0e:	e794      	b.n	800093a <__udivmoddi4+0x1e2>
 8000a10:	4640      	mov	r0, r8
 8000a12:	e7d1      	b.n	80009b8 <__udivmoddi4+0x260>
 8000a14:	46d0      	mov	r8, sl
 8000a16:	e77b      	b.n	8000910 <__udivmoddi4+0x1b8>
 8000a18:	3b02      	subs	r3, #2
 8000a1a:	4461      	add	r1, ip
 8000a1c:	e732      	b.n	8000884 <__udivmoddi4+0x12c>
 8000a1e:	4630      	mov	r0, r6
 8000a20:	e709      	b.n	8000836 <__udivmoddi4+0xde>
 8000a22:	4464      	add	r4, ip
 8000a24:	3802      	subs	r0, #2
 8000a26:	e742      	b.n	80008ae <__udivmoddi4+0x156>

08000a28 <__aeabi_idiv0>:
 8000a28:	4770      	bx	lr
 8000a2a:	bf00      	nop

08000a2c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000a2c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000a64 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000a30:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000a32:	e003      	b.n	8000a3c <LoopCopyDataInit>

08000a34 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000a34:	4b0c      	ldr	r3, [pc, #48]	; (8000a68 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000a36:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000a38:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000a3a:	3104      	adds	r1, #4

08000a3c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000a3c:	480b      	ldr	r0, [pc, #44]	; (8000a6c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000a3e:	4b0c      	ldr	r3, [pc, #48]	; (8000a70 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000a40:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000a42:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000a44:	d3f6      	bcc.n	8000a34 <CopyDataInit>
  ldr  r2, =_sbss
 8000a46:	4a0b      	ldr	r2, [pc, #44]	; (8000a74 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000a48:	e002      	b.n	8000a50 <LoopFillZerobss>

08000a4a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000a4a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000a4c:	f842 3b04 	str.w	r3, [r2], #4

08000a50 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000a50:	4b09      	ldr	r3, [pc, #36]	; (8000a78 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000a52:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000a54:	d3f9      	bcc.n	8000a4a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000a56:	f009 f895 	bl	8009b84 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000a5a:	f025 fcd9 	bl	8026410 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000a5e:	f001 f857 	bl	8001b10 <main>
  bx  lr    
 8000a62:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000a64:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000a68:	0802aefc 	.word	0x0802aefc
  ldr  r0, =_sdata
 8000a6c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000a70:	20000148 	.word	0x20000148
  ldr  r2, =_sbss
 8000a74:	20000148 	.word	0x20000148
  ldr  r3, = _ebss
 8000a78:	2000fa18 	.word	0x2000fa18

08000a7c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000a7c:	e7fe      	b.n	8000a7c <ADC_IRQHandler>

08000a7e <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000a7e:	4770      	bx	lr

08000a80 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000a80:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000a82:	f000 febb 	bl	80017fc <touchgfx_components_init>
  touchgfx_init();
}
 8000a86:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000a8a:	f000 be43 	b.w	8001714 <touchgfx_init>

08000a8e <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000a8e:	f000 beb7 	b.w	8001800 <touchgfx_taskEntry>

08000a92 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000a92:	2100      	movs	r1, #0
 8000a94:	4608      	mov	r0, r1
 8000a96:	f008 bbdd 	b.w	8009254 <BSP_PB_Init>

08000a9a <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000a9a:	2000      	movs	r0, #0
 8000a9c:	f008 bc14 	b.w	80092c8 <BSP_PB_GetState>

08000aa0 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000aa0:	6840      	ldr	r0, [r0, #4]
    }
 8000aa2:	4770      	bx	lr

08000aa4 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000aa4:	6041      	str	r1, [r0, #4]
    }
 8000aa6:	4770      	bx	lr

08000aa8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000aa8:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000aac:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000ab0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000ab4:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000ab8:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000abc:	6813      	ldr	r3, [r2, #0]
 8000abe:	f043 0301 	orr.w	r3, r3, #1
 8000ac2:	6013      	str	r3, [r2, #0]
}
 8000ac4:	4770      	bx	lr

08000ac6 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000ac6:	1a51      	subs	r1, r2, r1
 8000ac8:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000acc:	fbb1 f0f3 	udiv	r0, r1, r3
 8000ad0:	4770      	bx	lr
	...

08000ad4 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000ad4:	4b01      	ldr	r3, [pc, #4]	; (8000adc <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000ad6:	6858      	ldr	r0, [r3, #4]
}
 8000ad8:	4770      	bx	lr
 8000ada:	bf00      	nop
 8000adc:	e0001000 	.word	0xe0001000

08000ae0 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000ae0:	4770      	bx	lr

08000ae2 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000ae2:	b510      	push	{r4, lr}
 8000ae4:	210c      	movs	r1, #12
 8000ae6:	4604      	mov	r4, r0
 8000ae8:	f025 fc1a 	bl	8026320 <_ZdlPvj>
 8000aec:	4620      	mov	r0, r4
 8000aee:	bd10      	pop	{r4, pc}

08000af0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000af0:	6803      	ldr	r3, [r0, #0]
{
 8000af2:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000af4:	691b      	ldr	r3, [r3, #16]
{
 8000af6:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000af8:	b131      	cbz	r1, 8000b08 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000afa:	4798      	blx	r3
 8000afc:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000afe:	6863      	ldr	r3, [r4, #4]
 8000b00:	1a9b      	subs	r3, r3, r2
 8000b02:	4418      	add	r0, r3
 8000b04:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000b06:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000b08:	4798      	blx	r3
 8000b0a:	60a0      	str	r0, [r4, #8]
}
 8000b0c:	e7fb      	b.n	8000b06 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000b0e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000b0e:	4770      	bx	lr

08000b10 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000b10:	4770      	bx	lr
	...

08000b14 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000b14:	b508      	push	{r3, lr}
    Buttons::init();
 8000b16:	f7ff ffbc 	bl	8000a92 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000b1a:	4b02      	ldr	r3, [pc, #8]	; (8000b24 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000b1c:	2200      	movs	r2, #0
 8000b1e:	601a      	str	r2, [r3, #0]
}
 8000b20:	bd08      	pop	{r3, pc}
 8000b22:	bf00      	nop
 8000b24:	20000164 	.word	0x20000164

08000b28 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000b28:	b570      	push	{r4, r5, r6, lr}
 8000b2a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000b2c:	f7ff ffb5 	bl	8000a9a <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000b30:	4a0b      	ldr	r2, [pc, #44]	; (8000b60 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000b32:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000b34:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000b36:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000b38:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000b3a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000b3c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000b40:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000b42:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000b44:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000b46:	d00a      	beq.n	8000b5e <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000b48:	f016 0001 	ands.w	r0, r6, #1
 8000b4c:	d007      	beq.n	8000b5e <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000b4e:	f011 0001 	ands.w	r0, r1, #1
 8000b52:	d004      	beq.n	8000b5e <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000b54:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000b56:	bf5a      	itte	pl
 8000b58:	2001      	movpl	r0, #1
 8000b5a:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000b5c:	2000      	movmi	r0, #0
}
 8000b5e:	bd70      	pop	{r4, r5, r6, pc}
 8000b60:	20000164 	.word	0x20000164

08000b64 <_ZN8touchgfx10KeySamplerD0Ev>:
 8000b64:	b510      	push	{r4, lr}
 8000b66:	2104      	movs	r1, #4
 8000b68:	4604      	mov	r4, r0
 8000b6a:	f025 fbd9 	bl	8026320 <_ZdlPvj>
 8000b6e:	4620      	mov	r0, r4
 8000b70:	bd10      	pop	{r4, pc}

08000b72 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000b72:	4770      	bx	lr

08000b74 <_ZN20STM32TouchControllerD0Ev>:
 8000b74:	b510      	push	{r4, lr}
 8000b76:	2104      	movs	r1, #4
 8000b78:	4604      	mov	r4, r0
 8000b7a:	f025 fbd1 	bl	8026320 <_ZdlPvj>
 8000b7e:	4620      	mov	r0, r4
 8000b80:	bd10      	pop	{r4, pc}
	...

08000b84 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000b84:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000b86:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000b8a:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000b8e:	f008 ff4b 	bl	8009a28 <BSP_TS_Init>
 8000b92:	4b07      	ldr	r3, [pc, #28]	; (8000bb0 <_ZN20STM32TouchController4initEv+0x2c>)
 8000b94:	b910      	cbnz	r0, 8000b9c <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000b96:	2201      	movs	r2, #1
 8000b98:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000b9a:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000b9c:	781b      	ldrb	r3, [r3, #0]
 8000b9e:	2b00      	cmp	r3, #0
 8000ba0:	d1fb      	bne.n	8000b9a <_ZN20STM32TouchController4initEv+0x16>
 8000ba2:	4b04      	ldr	r3, [pc, #16]	; (8000bb4 <_ZN20STM32TouchController4initEv+0x30>)
 8000ba4:	4a04      	ldr	r2, [pc, #16]	; (8000bb8 <_ZN20STM32TouchController4initEv+0x34>)
 8000ba6:	4805      	ldr	r0, [pc, #20]	; (8000bbc <_ZN20STM32TouchController4initEv+0x38>)
 8000ba8:	2127      	movs	r1, #39	; 0x27
 8000baa:	f025 fbe7 	bl	802637c <__assert_func>
 8000bae:	bf00      	nop
 8000bb0:	20000168 	.word	0x20000168
 8000bb4:	0802764c 	.word	0x0802764c
 8000bb8:	0802765f 	.word	0x0802765f
 8000bbc:	08027689 	.word	0x08027689

08000bc0 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000bc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000bc2:	4b0b      	ldr	r3, [pc, #44]	; (8000bf0 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000bc4:	781c      	ldrb	r4, [r3, #0]
{
 8000bc6:	460e      	mov	r6, r1
 8000bc8:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000bca:	b15c      	cbz	r4, 8000be4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000bcc:	a801      	add	r0, sp, #4
 8000bce:	f008 ff63 	bl	8009a98 <BSP_TS_GetState>
        if (state.touchDetected)
 8000bd2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000bd6:	b143      	cbz	r3, 8000bea <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000bd8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000bdc:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000bde:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000be2:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000be4:	4620      	mov	r0, r4
 8000be6:	b004      	add	sp, #16
 8000be8:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000bea:	461c      	mov	r4, r3
 8000bec:	e7fa      	b.n	8000be4 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000bee:	bf00      	nop
 8000bf0:	20000168 	.word	0x20000168

08000bf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000bf4:	2803      	cmp	r0, #3
 8000bf6:	d823      	bhi.n	8000c40 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000bf8:	e8df f000 	tbb	[pc, r0]
 8000bfc:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000c00:	4b10      	ldr	r3, [pc, #64]	; (8000c44 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c02:	681a      	ldr	r2, [r3, #0]
 8000c04:	fab2 f282 	clz	r2, r2
 8000c08:	0952      	lsrs	r2, r2, #5
 8000c0a:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000c0c:	480e      	ldr	r0, [pc, #56]	; (8000c48 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c0e:	f009 bfdd 	b.w	800abcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000c12:	4b0c      	ldr	r3, [pc, #48]	; (8000c44 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c14:	685a      	ldr	r2, [r3, #4]
 8000c16:	fab2 f282 	clz	r2, r2
 8000c1a:	0952      	lsrs	r2, r2, #5
 8000c1c:	2140      	movs	r1, #64	; 0x40
 8000c1e:	e7f5      	b.n	8000c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000c20:	4b08      	ldr	r3, [pc, #32]	; (8000c44 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c22:	689a      	ldr	r2, [r3, #8]
 8000c24:	fab2 f282 	clz	r2, r2
 8000c28:	0952      	lsrs	r2, r2, #5
 8000c2a:	2102      	movs	r1, #2
 8000c2c:	e7ee      	b.n	8000c0c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000c2e:	4b05      	ldr	r3, [pc, #20]	; (8000c44 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000c30:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8000c32:	68da      	ldr	r2, [r3, #12]
 8000c34:	fab2 f282 	clz	r2, r2
 8000c38:	0952      	lsrs	r2, r2, #5
 8000c3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c3e:	e7e6      	b.n	8000c0e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000c40:	4770      	bx	lr
 8000c42:	bf00      	nop
 8000c44:	2000016c 	.word	0x2000016c
 8000c48:	40020000 	.word	0x40020000
 8000c4c:	40021800 	.word	0x40021800

08000c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000c50:	2803      	cmp	r0, #3
 8000c52:	d823      	bhi.n	8000c9c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8000c54:	e8df f000 	tbb	[pc, r0]
 8000c58:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000c5c:	4b10      	ldr	r3, [pc, #64]	; (8000ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c5e:	681a      	ldr	r2, [r3, #0]
 8000c60:	3a00      	subs	r2, #0
 8000c62:	bf18      	it	ne
 8000c64:	2201      	movne	r2, #1
 8000c66:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000c68:	480e      	ldr	r0, [pc, #56]	; (8000ca4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000c6a:	f009 bfaf 	b.w	800abcc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000c6e:	4b0c      	ldr	r3, [pc, #48]	; (8000ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c70:	685a      	ldr	r2, [r3, #4]
 8000c72:	3a00      	subs	r2, #0
 8000c74:	bf18      	it	ne
 8000c76:	2201      	movne	r2, #1
 8000c78:	2140      	movs	r1, #64	; 0x40
 8000c7a:	e7f5      	b.n	8000c68 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000c7c:	4b08      	ldr	r3, [pc, #32]	; (8000ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c7e:	689a      	ldr	r2, [r3, #8]
 8000c80:	3a00      	subs	r2, #0
 8000c82:	bf18      	it	ne
 8000c84:	2201      	movne	r2, #1
 8000c86:	2102      	movs	r1, #2
 8000c88:	e7ee      	b.n	8000c68 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000c8a:	4b05      	ldr	r3, [pc, #20]	; (8000ca0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000c8c:	4806      	ldr	r0, [pc, #24]	; (8000ca8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8000c8e:	68da      	ldr	r2, [r3, #12]
 8000c90:	3a00      	subs	r2, #0
 8000c92:	bf18      	it	ne
 8000c94:	2201      	movne	r2, #1
 8000c96:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000c9a:	e7e6      	b.n	8000c6a <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000c9c:	4770      	bx	lr
 8000c9e:	bf00      	nop
 8000ca0:	2000016c 	.word	0x2000016c
 8000ca4:	40020000 	.word	0x40020000
 8000ca8:	40021800 	.word	0x40021800

08000cac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000cac:	2803      	cmp	r0, #3
 8000cae:	d80f      	bhi.n	8000cd0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8000cb0:	e8df f000 	tbb	[pc, r0]
 8000cb4:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cb8:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000cba:	4806      	ldr	r0, [pc, #24]	; (8000cd4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000cbc:	f009 bf8b 	b.w	800abd6 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000cc0:	2140      	movs	r1, #64	; 0x40
 8000cc2:	e7fa      	b.n	8000cba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000cc4:	2102      	movs	r1, #2
 8000cc6:	e7f8      	b.n	8000cba <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000cc8:	4803      	ldr	r0, [pc, #12]	; (8000cd8 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 8000cca:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000cce:	e7f5      	b.n	8000cbc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8000cd0:	4770      	bx	lr
 8000cd2:	bf00      	nop
 8000cd4:	40020000 	.word	0x40020000
 8000cd8:	40021800 	.word	0x40021800

08000cdc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000cdc:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000cde:	2803      	cmp	r0, #3
 8000ce0:	d813      	bhi.n	8000d0a <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8000ce2:	e8df f000 	tbb	[pc, r0]
 8000ce6:	0a02      	.short	0x0a02
 8000ce8:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000cea:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000cec:	4808      	ldr	r0, [pc, #32]	; (8000d10 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000cee:	f009 ff67 	bl	800abc0 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000cf2:	1e43      	subs	r3, r0, #1
 8000cf4:	4258      	negs	r0, r3
 8000cf6:	4158      	adcs	r0, r3
 8000cf8:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000cfa:	2140      	movs	r1, #64	; 0x40
 8000cfc:	e7f6      	b.n	8000cec <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000cfe:	2102      	movs	r1, #2
 8000d00:	e7f4      	b.n	8000cec <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000d02:	4804      	ldr	r0, [pc, #16]	; (8000d14 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8000d04:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000d08:	e7f1      	b.n	8000cee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 8000d0a:	2000      	movs	r0, #0
 8000d0c:	e7f1      	b.n	8000cf2 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000d0e:	bf00      	nop
 8000d10:	40020000 	.word	0x40020000
 8000d14:	40021800 	.word	0x40021800

08000d18 <_ZN8touchgfx4GPIO4initEv>:
{
 8000d18:	b570      	push	{r4, r5, r6, lr}
 8000d1a:	4d08      	ldr	r5, [pc, #32]	; (8000d3c <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000d1c:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000d1e:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000d20:	b2e0      	uxtb	r0, r4
 8000d22:	f7ff ffdb 	bl	8000cdc <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000d26:	b118      	cbz	r0, 8000d30 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000d28:	682b      	ldr	r3, [r5, #0]
 8000d2a:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000d2c:	bf18      	it	ne
 8000d2e:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000d30:	3401      	adds	r4, #1
 8000d32:	2c05      	cmp	r4, #5
 8000d34:	f105 0504 	add.w	r5, r5, #4
 8000d38:	d1f2      	bne.n	8000d20 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000d3a:	bd70      	pop	{r4, r5, r6, pc}
 8000d3c:	2000016c 	.word	0x2000016c

08000d40 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000d40:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000d42:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000d46:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000d4a:	4770      	bx	lr

08000d4c <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000d4c:	2000      	movs	r0, #0
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d50:	4b03      	ldr	r3, [pc, #12]	; (8000d60 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000d52:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000d54:	3900      	subs	r1, #0
 8000d56:	bf18      	it	ne
 8000d58:	2101      	movne	r1, #1
 8000d5a:	7019      	strb	r1, [r3, #0]
    }
 8000d5c:	4770      	bx	lr
 8000d5e:	bf00      	nop
 8000d60:	2000ef1b 	.word	0x2000ef1b

08000d64 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000d64:	2000      	movs	r0, #0
 8000d66:	4770      	bx	lr

08000d68 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000d68:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000d6a:	b10b      	cbz	r3, 8000d70 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000d6c:	4608      	mov	r0, r1
 8000d6e:	4718      	bx	r3
        }
    }
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000d72:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8000d76:	4770      	bx	lr

08000d78 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000d78:	6840      	ldr	r0, [r0, #4]
 8000d7a:	6803      	ldr	r3, [r0, #0]
 8000d7c:	699b      	ldr	r3, [r3, #24]
 8000d7e:	4718      	bx	r3

08000d80 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000d80:	4770      	bx	lr

08000d82 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000d82:	4770      	bx	lr

08000d84 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000d84:	4b01      	ldr	r3, [pc, #4]	; (8000d8c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 8000d86:	6818      	ldr	r0, [r3, #0]
 8000d88:	4770      	bx	lr
 8000d8a:	bf00      	nop
 8000d8c:	2000017c 	.word	0x2000017c

08000d90 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000d90:	4770      	bx	lr
	...

08000d94 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000d94:	b538      	push	{r3, r4, r5, lr}
 8000d96:	4604      	mov	r4, r0
    mcuInstr.init();
 8000d98:	4d09      	ldr	r5, [pc, #36]	; (8000dc0 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 8000d9a:	f7ff ffbd 	bl	8000d18 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000d9e:	4620      	mov	r0, r4
 8000da0:	f000 fdfa 	bl	8001998 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000da4:	2300      	movs	r3, #0
 8000da6:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 8000daa:	4628      	mov	r0, r5
 8000dac:	f7ff fe7c 	bl	8000aa8 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000db0:	2301      	movs	r3, #1
 8000db2:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
        buttonController = btnCtrl;
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 8000db8:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 8000dba:	6163      	str	r3, [r4, #20]
}
 8000dbc:	bd38      	pop	{r3, r4, r5, pc}
 8000dbe:	bf00      	nop
 8000dc0:	20000188 	.word	0x20000188
 8000dc4:	20000184 	.word	0x20000184

08000dc8 <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 8000dc8:	6803      	ldr	r3, [r0, #0]
{
 8000dca:	4604      	mov	r4, r0
 8000dcc:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8000dce:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8000dd2:	4798      	blx	r3
    enableInterrupts();
 8000dd4:	6823      	ldr	r3, [r4, #0]
 8000dd6:	4620      	mov	r0, r4
 8000dd8:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8000dda:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8000ddc:	f000 fa2e 	bl	800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8000de0:	6823      	ldr	r3, [r4, #0]
 8000de2:	4620      	mov	r0, r4
 8000de4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000de6:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
 8000de8:	2100      	movs	r1, #0
 8000dea:	4806      	ldr	r0, [pc, #24]	; (8000e04 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8000dec:	9100      	str	r1, [sp, #0]
 8000dee:	2329      	movs	r3, #41	; 0x29
 8000df0:	2215      	movs	r2, #21
 8000df2:	f009 fcd4 	bl	800a79e <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 8000df6:	f000 fa21 	bl	800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8000dfa:	6823      	ldr	r3, [r4, #0]
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8000e00:	4798      	blx	r3
    for (;;)
 8000e02:	e7f8      	b.n	8000df6 <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8000e04:	20005b78 	.word	0x20005b78

08000e08 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4604      	mov	r4, r0
        swapFrameBuffers();
 8000e0c:	f00f fb82 	bl	8010514 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8000e10:	6823      	ldr	r3, [r4, #0]
 8000e12:	4620      	mov	r0, r4
 8000e14:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 8000e18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000e1c:	4718      	bx	r3

08000e1e <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000e1e:	f000 bdba 	b.w	8001996 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000e22 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000e22:	f000 bdd0 	b.w	80019c6 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

08000e26 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 8000e26:	f000 bdd0 	b.w	80019ca <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

08000e2a <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 8000e2a:	f000 bda3 	b.w	8001974 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000e2e <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000e2e:	f000 bda9 	b.w	8001984 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000e32 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000e32:	f000 bdd3 	b.w	80019dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

08000e38 <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 8000e38:	4b02      	ldr	r3, [pc, #8]	; (8000e44 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 8000e3a:	2200      	movs	r2, #0
 8000e3c:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000e3e:	f00e be11 	b.w	800fa64 <_ZN8touchgfx3HAL10beginFrameEv>
 8000e42:	bf00      	nop
 8000e44:	20000014 	.word	0x20000014

08000e48 <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 8000e48:	b510      	push	{r4, lr}
 8000e4a:	4604      	mov	r4, r0
    HAL::endFrame();
 8000e4c:	f00e fe16 	bl	800fa7c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000e50:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000e54:	b113      	cbz	r3, 8000e5c <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 8000e56:	4b02      	ldr	r3, [pc, #8]	; (8000e60 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 8000e58:	2201      	movs	r2, #1
 8000e5a:	701a      	strb	r2, [r3, #0]
    }
}
 8000e5c:	bd10      	pop	{r4, pc}
 8000e5e:	bf00      	nop
 8000e60:	20000014 	.word	0x20000014

08000e64 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000e64:	f00e bdc2 	b.w	800f9ec <_ZN8touchgfx3HAL16flushFrameBufferEv>

08000e68 <_ZN11TouchGFXHALD0Ev>:
 8000e68:	b510      	push	{r4, lr}
 8000e6a:	217c      	movs	r1, #124	; 0x7c
 8000e6c:	4604      	mov	r4, r0
 8000e6e:	f025 fa57 	bl	8026320 <_ZdlPvj>
 8000e72:	4620      	mov	r0, r4
 8000e74:	bd10      	pop	{r4, pc}

08000e76 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 8000e76:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 8000e7a:	b11b      	cbz	r3, 8000e84 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000e7c:	6840      	ldr	r0, [r0, #4]
 8000e7e:	6803      	ldr	r3, [r0, #0]
 8000e80:	681b      	ldr	r3, [r3, #0]
 8000e82:	4718      	bx	r3
    }
 8000e84:	4618      	mov	r0, r3
 8000e86:	4770      	bx	lr

08000e88 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 8000e88:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 8000e8a:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000e8e:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8000e92:	4b0c      	ldr	r3, [pc, #48]	; (8000ec4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000e94:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8000e96:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8000e98:	d009      	beq.n	8000eae <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8000e9a:	b93a      	cbnz	r2, 8000eac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000e9c:	4a0a      	ldr	r2, [pc, #40]	; (8000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000e9e:	490b      	ldr	r1, [pc, #44]	; (8000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000ea0:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000ea2:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000ea4:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000ea6:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8000ea8:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000eaa:	701a      	strb	r2, [r3, #0]
    }
 8000eac:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000eae:	2a00      	cmp	r2, #0
 8000eb0:	d0fc      	beq.n	8000eac <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000eb2:	4a05      	ldr	r2, [pc, #20]	; (8000ec8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000eb4:	4905      	ldr	r1, [pc, #20]	; (8000ecc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000eb6:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000eb8:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8000eba:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000ebc:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	e7f3      	b.n	8000eaa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000ec2:	bf00      	nop
 8000ec4:	2000ef14 	.word	0x2000ef14
 8000ec8:	2000ef10 	.word	0x2000ef10
 8000ecc:	2000ef12 	.word	0x2000ef12

08000ed0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8000ed0:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8000ed2:	4b09      	ldr	r3, [pc, #36]	; (8000ef8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8000ed4:	881b      	ldrh	r3, [r3, #0]
 8000ed6:	428b      	cmp	r3, r1
 8000ed8:	d803      	bhi.n	8000ee2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8000eda:	4b08      	ldr	r3, [pc, #32]	; (8000efc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8000edc:	881b      	ldrh	r3, [r3, #0]
 8000ede:	4293      	cmp	r3, r2
 8000ee0:	d905      	bls.n	8000eee <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8000ee2:	4b07      	ldr	r3, [pc, #28]	; (8000f00 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8000ee4:	4a07      	ldr	r2, [pc, #28]	; (8000f04 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8000ee6:	4808      	ldr	r0, [pc, #32]	; (8000f08 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8000ee8:	219e      	movs	r1, #158	; 0x9e
 8000eea:	f025 fa47 	bl	802637c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8000eee:	4b07      	ldr	r3, [pc, #28]	; (8000f0c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8000ef0:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8000ef2:	4b07      	ldr	r3, [pc, #28]	; (8000f10 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8000ef4:	801a      	strh	r2, [r3, #0]
    }
 8000ef6:	bd08      	pop	{r3, pc}
 8000ef8:	2000ef10 	.word	0x2000ef10
 8000efc:	2000ef12 	.word	0x2000ef12
 8000f00:	080276f4 	.word	0x080276f4
 8000f04:	08027757 	.word	0x08027757
 8000f08:	0802779a 	.word	0x0802779a
 8000f0c:	2000ef16 	.word	0x2000ef16
 8000f10:	2000ef18 	.word	0x2000ef18

08000f14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8000f14:	b570      	push	{r4, r5, r6, lr}
 8000f16:	460d      	mov	r5, r1
 8000f18:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 8000f1a:	4b0b      	ldr	r3, [pc, #44]	; (8000f48 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8000f1c:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8000f1e:	b935      	cbnz	r5, 8000f2e <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8000f20:	4b0a      	ldr	r3, [pc, #40]	; (8000f4c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8000f22:	4a0b      	ldr	r2, [pc, #44]	; (8000f50 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8000f24:	480b      	ldr	r0, [pc, #44]	; (8000f54 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 8000f26:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000f2a:	f025 fa27 	bl	802637c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8000f2e:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8000f32:	4b09      	ldr	r3, [pc, #36]	; (8000f58 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8000f34:	3a00      	subs	r2, #0
 8000f36:	bf18      	it	ne
 8000f38:	2201      	movne	r2, #1
 8000f3a:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000f3c:	6803      	ldr	r3, [r0, #0]
}
 8000f3e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f42:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000f46:	4718      	bx	r3
 8000f48:	2000017c 	.word	0x2000017c
 8000f4c:	080277df 	.word	0x080277df
 8000f50:	08027817 	.word	0x08027817
 8000f54:	0802779a 	.word	0x0802779a
 8000f58:	2000ef1a 	.word	0x2000ef1a

08000f5c <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000f5c:	2801      	cmp	r0, #1
    {
 8000f5e:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000f60:	d80a      	bhi.n	8000f78 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000f62:	784b      	ldrb	r3, [r1, #1]
 8000f64:	9300      	str	r3, [sp, #0]
 8000f66:	780b      	ldrb	r3, [r1, #0]
 8000f68:	4808      	ldr	r0, [pc, #32]	; (8000f8c <DSI_IO_WriteCmd+0x30>)
 8000f6a:	2215      	movs	r2, #21
 8000f6c:	2100      	movs	r1, #0
 8000f6e:	f009 fc16 	bl	800a79e <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000f72:	b003      	add	sp, #12
 8000f74:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000f78:	9101      	str	r1, [sp, #4]
 8000f7a:	5c0b      	ldrb	r3, [r1, r0]
 8000f7c:	9300      	str	r3, [sp, #0]
 8000f7e:	2239      	movs	r2, #57	; 0x39
 8000f80:	4603      	mov	r3, r0
 8000f82:	2100      	movs	r1, #0
 8000f84:	4801      	ldr	r0, [pc, #4]	; (8000f8c <DSI_IO_WriteCmd+0x30>)
 8000f86:	f009 fc1b 	bl	800a7c0 <HAL_DSI_LongWrite>
    }
 8000f8a:	e7f2      	b.n	8000f72 <DSI_IO_WriteCmd+0x16>
 8000f8c:	20005b78 	.word	0x20005b78

08000f90 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000f90:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000f92:	4a0b      	ldr	r2, [pc, #44]	; (8000fc0 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000f94:	4c0b      	ldr	r4, [pc, #44]	; (8000fc4 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000f96:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000f98:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000f9a:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000f9c:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000f9e:	9201      	str	r2, [sp, #4]
 8000fa0:	2244      	movs	r2, #68	; 0x44
 8000fa2:	9200      	str	r2, [sp, #0]
 8000fa4:	2100      	movs	r1, #0
 8000fa6:	2239      	movs	r2, #57	; 0x39
 8000fa8:	4620      	mov	r0, r4
 8000faa:	f009 fc09 	bl	800a7c0 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000fae:	2100      	movs	r1, #0
 8000fb0:	9100      	str	r1, [sp, #0]
 8000fb2:	2335      	movs	r3, #53	; 0x35
 8000fb4:	462a      	mov	r2, r5
 8000fb6:	4620      	mov	r0, r4
 8000fb8:	f009 fbf1 	bl	800a79e <HAL_DSI_ShortWrite>
    }
 8000fbc:	b003      	add	sp, #12
 8000fbe:	bd30      	pop	{r4, r5, pc}
 8000fc0:	20000194 	.word	0x20000194
 8000fc4:	20005b78 	.word	0x20005b78

08000fc8 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000fc8:	b507      	push	{r0, r1, r2, lr}
 8000fca:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000fcc:	f7ff ffe0 	bl	8000f90 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fd0:	9801      	ldr	r0, [sp, #4]
}
 8000fd2:	b003      	add	sp, #12
 8000fd4:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000fd8:	f000 bcdc 	b.w	8001994 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000fdc <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000fdc:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pCols[idx]);
 8000fde:	4b07      	ldr	r3, [pc, #28]	; (8000ffc <LCD_SetUpdateRegion+0x20>)
 8000fe0:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000fe4:	232a      	movs	r3, #42	; 0x2a
 8000fe6:	9001      	str	r0, [sp, #4]
 8000fe8:	9300      	str	r3, [sp, #0]
 8000fea:	2239      	movs	r2, #57	; 0x39
 8000fec:	2304      	movs	r3, #4
 8000fee:	2100      	movs	r1, #0
 8000ff0:	4803      	ldr	r0, [pc, #12]	; (8001000 <LCD_SetUpdateRegion+0x24>)
 8000ff2:	f009 fbe5 	bl	800a7c0 <HAL_DSI_LongWrite>
    }
 8000ff6:	b003      	add	sp, #12
 8000ff8:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ffc:	20000004 	.word	0x20000004
 8001000:	20005b78 	.word	0x20005b78

08001004 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8001004:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8001006:	4d15      	ldr	r5, [pc, #84]	; (800105c <HAL_DSI_TearingEffectCallback+0x58>)
 8001008:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 800100a:	2000      	movs	r0, #0
 800100c:	f7ff fdf2 	bl	8000bf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8001010:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8001012:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 8001016:	3301      	adds	r3, #1
 8001018:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 800101c:	f000 f902 	bl	8001224 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8001020:	4b0f      	ldr	r3, [pc, #60]	; (8001060 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8001022:	6828      	ldr	r0, [r5, #0]
 8001024:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8001026:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8001028:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 800102c:	b123      	cbz	r3, 8001038 <HAL_DSI_TearingEffectCallback+0x34>
 800102e:	4d0d      	ldr	r5, [pc, #52]	; (8001064 <HAL_DSI_TearingEffectCallback+0x60>)
 8001030:	782b      	ldrb	r3, [r5, #0]
 8001032:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8001036:	b123      	cbz	r3, 8001042 <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001038:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 800103c:	2000      	movs	r0, #0
 800103e:	f7ff be07 	b.w	8000c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8001042:	f00f fa67 	bl	8010514 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8001046:	4b08      	ldr	r3, [pc, #32]	; (8001068 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8001048:	4630      	mov	r0, r6
            updateRegion = 0;
 800104a:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 800104c:	f7ff ffc6 	bl	8000fdc <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8001050:	4620      	mov	r0, r4
 8001052:	f009 fb94 	bl	800a77e <HAL_DSI_Refresh>
            displayRefreshing = true;
 8001056:	2301      	movs	r3, #1
 8001058:	702b      	strb	r3, [r5, #0]
    }
 800105a:	bd70      	pop	{r4, r5, r6, pc}
 800105c:	2000ef1c 	.word	0x2000ef1c
 8001060:	20000014 	.word	0x20000014
 8001064:	20000196 	.word	0x20000196
 8001068:	20000180 	.word	0x20000180

0800106c <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 800106c:	4b33      	ldr	r3, [pc, #204]	; (800113c <HAL_DSI_EndOfRefreshCallback+0xd0>)
 800106e:	681a      	ldr	r2, [r3, #0]
 8001070:	3201      	adds	r2, #1
    {
 8001072:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8001074:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001076:	4b32      	ldr	r3, [pc, #200]	; (8001140 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8001078:	4c32      	ldr	r4, [pc, #200]	; (8001144 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 800107a:	6819      	ldr	r1, [r3, #0]
 800107c:	4b32      	ldr	r3, [pc, #200]	; (8001148 <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 800107e:	2a03      	cmp	r2, #3
    {
 8001080:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8001082:	dc2e      	bgt.n	80010e2 <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001084:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 8001088:	f020 0008 	bic.w	r0, r0, #8
 800108c:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001090:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8001094:	fb00 1102 	mla	r1, r0, r2, r1
 8001098:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 800109c:	bf0c      	ite	eq
 800109e:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 80010a0:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 80010a2:	3302      	adds	r3, #2
 80010a4:	4928      	ldr	r1, [pc, #160]	; (8001148 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 80010a6:	041b      	lsls	r3, r3, #16
 80010a8:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 80010ac:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 80010ae:	4b27      	ldr	r3, [pc, #156]	; (800114c <HAL_DSI_EndOfRefreshCallback+0xe0>)
 80010b0:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 80010b2:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 80010b6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 80010ba:	4b25      	ldr	r3, [pc, #148]	; (8001150 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 80010bc:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010c0:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 80010c2:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80010c4:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 80010c6:	f7ff ff89 	bl	8000fdc <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 80010ca:	4a1e      	ldr	r2, [pc, #120]	; (8001144 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 80010cc:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 80010d0:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 80010d4:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 80010d6:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 80010da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 80010de:	f009 bb4e 	b.w	800a77e <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 80010e2:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 80010e6:	f022 0208 	bic.w	r2, r2, #8
 80010ea:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 80010ee:	4a19      	ldr	r2, [pc, #100]	; (8001154 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 80010f0:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 80010f4:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 80010f6:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 80010fa:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 80010fc:	4a16      	ldr	r2, [pc, #88]	; (8001158 <HAL_DSI_EndOfRefreshCallback+0xec>)
 80010fe:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8001102:	4a13      	ldr	r2, [pc, #76]	; (8001150 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001104:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001108:	2201      	movs	r2, #1
 800110a:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 800110c:	2000      	movs	r0, #0
 800110e:	f7ff ff65 	bl	8000fdc <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8001112:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8001116:	f043 0308 	orr.w	r3, r3, #8
 800111a:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 800111e:	2000      	movs	r0, #0
 8001120:	f7ff fd96 	bl	8000c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8001124:	4b0d      	ldr	r3, [pc, #52]	; (800115c <HAL_DSI_EndOfRefreshCallback+0xf0>)
 8001126:	2200      	movs	r2, #0
 8001128:	701a      	strb	r2, [r3, #0]
        return instance;
 800112a:	4b0d      	ldr	r3, [pc, #52]	; (8001160 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 800112c:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 800112e:	b120      	cbz	r0, 800113a <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8001130:	6803      	ldr	r3, [r0, #0]
    }
 8001132:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001136:	6a1b      	ldr	r3, [r3, #32]
 8001138:	4718      	bx	r3
 800113a:	bd70      	pop	{r4, r5, r6, pc}
 800113c:	20000180 	.word	0x20000180
 8001140:	2000017c 	.word	0x2000017c
 8001144:	40016c00 	.word	0x40016c00
 8001148:	40016800 	.word	0x40016800
 800114c:	00ca01e3 	.word	0x00ca01e3
 8001150:	06800193 	.word	0x06800193
 8001154:	00ca01e2 	.word	0x00ca01e2
 8001158:	00ca0003 	.word	0x00ca0003
 800115c:	20000196 	.word	0x20000196
 8001160:	2000ef1c 	.word	0x2000ef1c

08001164 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001164:	b508      	push	{r3, lr}
        return instance;
 8001166:	4b04      	ldr	r3, [pc, #16]	; (8001178 <IdleTaskHook+0x14>)
 8001168:	4601      	mov	r1, r0
 800116a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 800116c:	b101      	cbz	r1, 8001170 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 800116e:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001170:	f00f f9ea 	bl	8010548 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001174:	2001      	movs	r0, #1
 8001176:	bd08      	pop	{r3, pc}
 8001178:	2000ef1c 	.word	0x2000ef1c

0800117c <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 800117c:	4b05      	ldr	r3, [pc, #20]	; (8001194 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 800117e:	4806      	ldr	r0, [pc, #24]	; (8001198 <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8001180:	2200      	movs	r2, #0
 8001182:	605a      	str	r2, [r3, #4]
 8001184:	609a      	str	r2, [r3, #8]
 8001186:	4a05      	ldr	r2, [pc, #20]	; (800119c <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8001188:	601a      	str	r2, [r3, #0]
 800118a:	4b05      	ldr	r3, [pc, #20]	; (80011a0 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 800118c:	6003      	str	r3, [r0, #0]
        init();
 800118e:	f7ff bcc1 	b.w	8000b14 <_ZN8touchgfx10KeySampler4initEv>
 8001192:	bf00      	nop
 8001194:	20000188 	.word	0x20000188
 8001198:	20000184 	.word	0x20000184
 800119c:	08027610 	.word	0x08027610
 80011a0:	08027638 	.word	0x08027638

080011a4 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80011a4:	2101      	movs	r1, #1
{
 80011a6:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80011a8:	2200      	movs	r2, #0
 80011aa:	4608      	mov	r0, r1
 80011ac:	f00b fdeb 	bl	800cd86 <osSemaphoreNew>
 80011b0:	4b0a      	ldr	r3, [pc, #40]	; (80011dc <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80011b2:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80011b4:	b928      	cbnz	r0, 80011c2 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80011b6:	4b0a      	ldr	r3, [pc, #40]	; (80011e0 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80011b8:	4a0a      	ldr	r2, [pc, #40]	; (80011e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80011ba:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80011bc:	480a      	ldr	r0, [pc, #40]	; (80011e8 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80011be:	f025 f8dd 	bl	802637c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80011c2:	2200      	movs	r2, #0
 80011c4:	2104      	movs	r1, #4
 80011c6:	2001      	movs	r0, #1
 80011c8:	f00b fe7a 	bl	800cec0 <osMessageQueueNew>
 80011cc:	4b07      	ldr	r3, [pc, #28]	; (80011ec <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80011ce:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80011d0:	b918      	cbnz	r0, 80011da <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80011d2:	4b07      	ldr	r3, [pc, #28]	; (80011f0 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80011d4:	4a03      	ldr	r2, [pc, #12]	; (80011e4 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80011d6:	212c      	movs	r1, #44	; 0x2c
 80011d8:	e7f0      	b.n	80011bc <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80011da:	bd08      	pop	{r3, pc}
 80011dc:	2000019c 	.word	0x2000019c
 80011e0:	08027940 	.word	0x08027940
 80011e4:	08027989 	.word	0x08027989
 80011e8:	080279b8 	.word	0x080279b8
 80011ec:	20000198 	.word	0x20000198
 80011f0:	08027a0b 	.word	0x08027a0b

080011f4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 80011f4:	4b02      	ldr	r3, [pc, #8]	; (8001200 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 80011f6:	f04f 31ff 	mov.w	r1, #4294967295
 80011fa:	6818      	ldr	r0, [r3, #0]
 80011fc:	f00b be0d 	b.w	800ce1a <osSemaphoreAcquire>
 8001200:	2000019c 	.word	0x2000019c

08001204 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001204:	4b01      	ldr	r3, [pc, #4]	; (800120c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001206:	6818      	ldr	r0, [r3, #0]
 8001208:	f00b be32 	b.w	800ce70 <osSemaphoreRelease>
 800120c:	2000019c 	.word	0x2000019c

08001210 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001210:	4b02      	ldr	r3, [pc, #8]	; (800121c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001212:	2100      	movs	r1, #0
 8001214:	6818      	ldr	r0, [r3, #0]
 8001216:	f00b be00 	b.w	800ce1a <osSemaphoreAcquire>
 800121a:	bf00      	nop
 800121c:	2000019c 	.word	0x2000019c

08001220 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001220:	f7ff bff0 	b.w	8001204 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001224 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001224:	4803      	ldr	r0, [pc, #12]	; (8001234 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001226:	4904      	ldr	r1, [pc, #16]	; (8001238 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001228:	6800      	ldr	r0, [r0, #0]
 800122a:	2300      	movs	r3, #0
 800122c:	461a      	mov	r2, r3
 800122e:	f00b be82 	b.w	800cf36 <osMessageQueuePut>
 8001232:	bf00      	nop
 8001234:	20000198 	.word	0x20000198
 8001238:	20000018 	.word	0x20000018

0800123c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 800123c:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800123e:	4c08      	ldr	r4, [pc, #32]	; (8001260 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8001240:	2300      	movs	r3, #0
 8001242:	461a      	mov	r2, r3
 8001244:	a901      	add	r1, sp, #4
 8001246:	6820      	ldr	r0, [r4, #0]
 8001248:	f00b fea5 	bl	800cf96 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 800124c:	6820      	ldr	r0, [r4, #0]
 800124e:	f04f 33ff 	mov.w	r3, #4294967295
 8001252:	2200      	movs	r2, #0
 8001254:	a901      	add	r1, sp, #4
 8001256:	f00b fe9e 	bl	800cf96 <osMessageQueueGet>
}
 800125a:	b002      	add	sp, #8
 800125c:	bd10      	pop	{r4, pc}
 800125e:	bf00      	nop
 8001260:	20000198 	.word	0x20000198

08001264 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001264:	6803      	ldr	r3, [r0, #0]
 8001266:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001268:	4718      	bx	r3

0800126a <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800126a:	2001      	movs	r0, #1
 800126c:	4770      	bx	lr

0800126e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800126e:	6803      	ldr	r3, [r0, #0]
 8001270:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001272:	4718      	bx	r3

08001274 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001274:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001276:	2300      	movs	r3, #0
 8001278:	9301      	str	r3, [sp, #4]
 800127a:	4b0d      	ldr	r3, [pc, #52]	; (80012b0 <_ZN8STM32DMA10initializeEv+0x3c>)
 800127c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800127e:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001282:	631a      	str	r2, [r3, #48]	; 0x30
 8001284:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001286:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 800128a:	9201      	str	r2, [sp, #4]
 800128c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800128e:	691a      	ldr	r2, [r3, #16]
 8001290:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001294:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8001296:	691a      	ldr	r2, [r3, #16]
 8001298:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 800129c:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800129e:	4b05      	ldr	r3, [pc, #20]	; (80012b4 <_ZN8STM32DMA10initializeEv+0x40>)
 80012a0:	4a05      	ldr	r2, [pc, #20]	; (80012b8 <_ZN8STM32DMA10initializeEv+0x44>)
 80012a2:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012a4:	4b05      	ldr	r3, [pc, #20]	; (80012bc <_ZN8STM32DMA10initializeEv+0x48>)
 80012a6:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012aa:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80012ac:	b002      	add	sp, #8
 80012ae:	4770      	bx	lr
 80012b0:	40023800 	.word	0x40023800
 80012b4:	20005b38 	.word	0x20005b38
 80012b8:	08001301 	.word	0x08001301
 80012bc:	e000e100 	.word	0xe000e100

080012c0 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80012c0:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80012c4:	4770      	bx	lr
	...

080012c8 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80012c8:	4b05      	ldr	r3, [pc, #20]	; (80012e0 <_ZN8STM32DMAD1Ev+0x18>)
 80012ca:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80012cc:	4b05      	ldr	r3, [pc, #20]	; (80012e4 <_ZN8STM32DMAD1Ev+0x1c>)
 80012ce:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80012d2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80012d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80012da:	f3bf 8f6f 	isb	sy
}
 80012de:	4770      	bx	lr
 80012e0:	08027bb0 	.word	0x08027bb0
 80012e4:	e000e100 	.word	0xe000e100

080012e8 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 80012e8:	b510      	push	{r4, lr}
 80012ea:	4604      	mov	r4, r0
}
 80012ec:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 80012f0:	f7ff ffea 	bl	80012c8 <_ZN8STM32DMAD1Ev>
 80012f4:	4620      	mov	r0, r4
 80012f6:	f025 f813 	bl	8026320 <_ZdlPvj>
 80012fa:	4620      	mov	r0, r4
 80012fc:	bd10      	pop	{r4, pc}
	...

08001300 <DMA2D_XferCpltCallback>:
 8001300:	4b02      	ldr	r3, [pc, #8]	; (800130c <DMA2D_XferCpltCallback+0xc>)
 8001302:	681b      	ldr	r3, [r3, #0]
 8001304:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001306:	6803      	ldr	r3, [r0, #0]
 8001308:	695b      	ldr	r3, [r3, #20]
 800130a:	4718      	bx	r3
 800130c:	2000ef1c 	.word	0x2000ef1c

08001310 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001310:	b570      	push	{r4, r5, r6, lr}
 8001312:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001314:	4625      	mov	r5, r4
 8001316:	4b0a      	ldr	r3, [pc, #40]	; (8001340 <_ZN8STM32DMAC1Ev+0x30>)
 8001318:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800131a:	2600      	movs	r6, #0
 800131c:	6060      	str	r0, [r4, #4]
 800131e:	7226      	strb	r6, [r4, #8]
 8001320:	7266      	strb	r6, [r4, #9]
 8001322:	f845 3b20 	str.w	r3, [r5], #32
 8001326:	2260      	movs	r2, #96	; 0x60
 8001328:	4629      	mov	r1, r5
 800132a:	f00f fa63 	bl	80107f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800132e:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001332:	60ee      	str	r6, [r5, #12]
 8001334:	3524      	adds	r5, #36	; 0x24
 8001336:	42ab      	cmp	r3, r5
 8001338:	d1fb      	bne.n	8001332 <_ZN8STM32DMAC1Ev+0x22>
}
 800133a:	4620      	mov	r0, r4
 800133c:	bd70      	pop	{r4, r5, r6, pc}
 800133e:	bf00      	nop
 8001340:	08027bb0 	.word	0x08027bb0

08001344 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001344:	b508      	push	{r3, lr}
    switch (format)
 8001346:	290b      	cmp	r1, #11
 8001348:	d80b      	bhi.n	8001362 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 800134a:	e8df f001 	tbb	[pc, r1]
 800134e:	0612      	.short	0x0612
 8001350:	0a0a0a10 	.word	0x0a0a0a10
 8001354:	0808080a 	.word	0x0808080a
 8001358:	0808      	.short	0x0808
 800135a:	2001      	movs	r0, #1
}
 800135c:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800135e:	2005      	movs	r0, #5
        break;
 8001360:	e7fc      	b.n	800135c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001362:	4b05      	ldr	r3, [pc, #20]	; (8001378 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001364:	4a05      	ldr	r2, [pc, #20]	; (800137c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001366:	4806      	ldr	r0, [pc, #24]	; (8001380 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001368:	2165      	movs	r1, #101	; 0x65
 800136a:	f025 f807 	bl	802637c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800136e:	2000      	movs	r0, #0
 8001370:	e7f4      	b.n	800135c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001372:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001374:	e7f2      	b.n	800135c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001376:	bf00      	nop
 8001378:	08027a4d 	.word	0x08027a4d
 800137c:	08027a68 	.word	0x08027a68
 8001380:	08027ab2 	.word	0x08027ab2

08001384 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001384:	b508      	push	{r3, lr}
    switch (format)
 8001386:	290a      	cmp	r1, #10
 8001388:	d809      	bhi.n	800139e <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 800138a:	e8df f001 	tbb	[pc, r1]
 800138e:	0610      	.short	0x0610
 8001390:	0808080e 	.word	0x0808080e
 8001394:	06060608 	.word	0x06060608
 8001398:	06          	.byte	0x06
 8001399:	00          	.byte	0x00
 800139a:	2001      	movs	r0, #1
}
 800139c:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 800139e:	4b05      	ldr	r3, [pc, #20]	; (80013b4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80013a0:	4a05      	ldr	r2, [pc, #20]	; (80013b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80013a2:	4806      	ldr	r0, [pc, #24]	; (80013bc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80013a4:	2186      	movs	r1, #134	; 0x86
 80013a6:	f024 ffe9 	bl	802637c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80013aa:	2000      	movs	r0, #0
 80013ac:	e7f6      	b.n	800139c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80013ae:	2002      	movs	r0, #2
    return dma2dColorMode;
 80013b0:	e7f4      	b.n	800139c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80013b2:	bf00      	nop
 80013b4:	08027a4d 	.word	0x08027a4d
 80013b8:	08027b03 	.word	0x08027b03
 80013bc:	08027ab2 	.word	0x08027ab2

080013c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 80013c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013c4:	7f4f      	ldrb	r7, [r1, #29]
{
 80013c6:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013c8:	4639      	mov	r1, r7
{
 80013ca:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013cc:	f7ff ffba 	bl	8001344 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013d0:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80013d4:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013d6:	4641      	mov	r1, r8
 80013d8:	4648      	mov	r0, r9
 80013da:	f7ff ffb3 	bl	8001344 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013de:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013e0:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80013e2:	4648      	mov	r0, r9
 80013e4:	f7ff ffce 	bl	8001384 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013e8:	8aa1      	ldrh	r1, [r4, #20]
 80013ea:	8b62      	ldrh	r2, [r4, #26]
 80013ec:	4b42      	ldr	r3, [pc, #264]	; (80014f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80013ee:	1a52      	subs	r2, r2, r1
 80013f0:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80013f2:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 80013f4:	8b22      	ldrh	r2, [r4, #24]
 80013f6:	1a52      	subs	r2, r2, r1
 80013f8:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013fa:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80013fc:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80013fe:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001402:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001404:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001406:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001408:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800140a:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800140c:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800140e:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8001412:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001414:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001418:	d026      	beq.n	8001468 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 800141a:	d810      	bhi.n	800143e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 800141c:	2920      	cmp	r1, #32
 800141e:	ea45 0402 	orr.w	r4, r5, r2
 8001422:	d061      	beq.n	80014e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001424:	2940      	cmp	r1, #64	; 0x40
 8001426:	d05f      	beq.n	80014e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001428:	2904      	cmp	r1, #4
 800142a:	d05d      	beq.n	80014e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800142c:	4b32      	ldr	r3, [pc, #200]	; (80014f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800142e:	432a      	orrs	r2, r5
 8001430:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001434:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001436:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001438:	d05a      	beq.n	80014f0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800143a:	4a30      	ldr	r2, [pc, #192]	; (80014fc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 800143c:	e040      	b.n	80014c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 800143e:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8001442:	d007      	beq.n	8001454 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001444:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001448:	d1f0      	bne.n	800142c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800144a:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800144e:	f042 0209 	orr.w	r2, r2, #9
 8001452:	e003      	b.n	800145c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001454:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001458:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800145c:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800145e:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001460:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001462:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001464:	6158      	str	r0, [r3, #20]
 8001466:	e02a      	b.n	80014be <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001468:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800146a:	432a      	orrs	r2, r5
 800146c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001470:	1d21      	adds	r1, r4, #4
 8001472:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001474:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8001476:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001478:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800147a:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 800147c:	b142      	cbz	r2, 8001490 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800147e:	2a01      	cmp	r2, #1
 8001480:	d021      	beq.n	80014c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001482:	4b1f      	ldr	r3, [pc, #124]	; (8001500 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001484:	4a1f      	ldr	r2, [pc, #124]	; (8001504 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8001486:	4820      	ldr	r0, [pc, #128]	; (8001508 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8001488:	f44f 7188 	mov.w	r1, #272	; 0x110
 800148c:	f024 ff76 	bl	802637c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001490:	69da      	ldr	r2, [r3, #28]
 8001492:	8861      	ldrh	r1, [r4, #2]
 8001494:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8001498:	3901      	subs	r1, #1
 800149a:	f022 0210 	bic.w	r2, r2, #16
 800149e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80014a2:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80014a4:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80014a6:	4b14      	ldr	r3, [pc, #80]	; (80014f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80014a8:	69da      	ldr	r2, [r3, #28]
 80014aa:	f042 0220 	orr.w	r2, r2, #32
 80014ae:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80014b0:	69da      	ldr	r2, [r3, #28]
 80014b2:	0692      	lsls	r2, r2, #26
 80014b4:	d4fc      	bmi.n	80014b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80014b6:	2210      	movs	r2, #16
 80014b8:	609a      	str	r2, [r3, #8]
            if (blend)
 80014ba:	2800      	cmp	r0, #0
 80014bc:	d0bd      	beq.n	800143a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80014be:	4a13      	ldr	r2, [pc, #76]	; (800150c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80014c0:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 80014c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014c6:	8862      	ldrh	r2, [r4, #2]
 80014c8:	69d9      	ldr	r1, [r3, #28]
 80014ca:	1e54      	subs	r4, r2, #1
 80014cc:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 80014d0:	f022 0210 	bic.w	r2, r2, #16
 80014d4:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 80014d8:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014dc:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 80014e0:	bf18      	it	ne
 80014e2:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80014e4:	61da      	str	r2, [r3, #28]
                break;
 80014e6:	e7de      	b.n	80014a6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80014e8:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 80014ec:	61dc      	str	r4, [r3, #28]
 80014ee:	e7b8      	b.n	8001462 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80014f0:	f240 2201 	movw	r2, #513	; 0x201
 80014f4:	e7e4      	b.n	80014c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 80014f6:	bf00      	nop
 80014f8:	4002b000 	.word	0x4002b000
 80014fc:	00010201 	.word	0x00010201
 8001500:	08027b4e 	.word	0x08027b4e
 8001504:	08027b68 	.word	0x08027b68
 8001508:	08027ab2 	.word	0x08027ab2
 800150c:	00020201 	.word	0x00020201

08001510 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001510:	b570      	push	{r4, r5, r6, lr}
 8001512:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001514:	7f89      	ldrb	r1, [r1, #30]
 8001516:	f7ff ff35 	bl	8001384 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800151a:	8aa6      	ldrh	r6, [r4, #20]
 800151c:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800151e:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001520:	4b15      	ldr	r3, [pc, #84]	; (8001578 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001522:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001524:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001526:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800152a:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800152c:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800152e:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001530:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001532:	6826      	ldr	r6, [r4, #0]
 8001534:	68e1      	ldr	r1, [r4, #12]
 8001536:	2e08      	cmp	r6, #8
 8001538:	d10d      	bne.n	8001556 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800153a:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800153c:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800153e:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001540:	7f20      	ldrb	r0, [r4, #28]
 8001542:	4a0e      	ldr	r2, [pc, #56]	; (800157c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001544:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001548:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 800154a:	4a0d      	ldr	r2, [pc, #52]	; (8001580 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800154c:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800154e:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001550:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001552:	601a      	str	r2, [r3, #0]
    }
}
 8001554:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001556:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001558:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 800155a:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 800155c:	0948      	lsrs	r0, r1, #5
 800155e:	0a0a      	lsrs	r2, r1, #8
 8001560:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001564:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8001568:	4302      	orrs	r2, r0
 800156a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800156e:	430a      	orrs	r2, r1
 8001570:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001572:	4a04      	ldr	r2, [pc, #16]	; (8001584 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001574:	e7ed      	b.n	8001552 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001576:	bf00      	nop
 8001578:	4002b000 	.word	0x4002b000
 800157c:	00010009 	.word	0x00010009
 8001580:	00020201 	.word	0x00020201
 8001584:	00030201 	.word	0x00030201

08001588 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001588:	4b03      	ldr	r3, [pc, #12]	; (8001598 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 800158a:	681a      	ldr	r2, [r3, #0]
 800158c:	07d2      	lsls	r2, r2, #31
 800158e:	d4fc      	bmi.n	800158a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001590:	2223      	movs	r2, #35	; 0x23
 8001592:	609a      	str	r2, [r3, #8]
}
 8001594:	4770      	bx	lr
 8001596:	bf00      	nop
 8001598:	4002b000 	.word	0x4002b000

0800159c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 800159c:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800159e:	4c0f      	ldr	r4, [pc, #60]	; (80015dc <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 80015a0:	6825      	ldr	r5, [r4, #0]
 80015a2:	07ed      	lsls	r5, r5, #31
 80015a4:	d4fc      	bmi.n	80015a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015a6:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015a8:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80015aa:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015ac:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015b0:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 80015b2:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80015b4:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80015b6:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80015b8:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 80015ba:	d00a      	beq.n	80015d2 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80015bc:	4908      	ldr	r1, [pc, #32]	; (80015e0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80015be:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80015c0:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 80015c4:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 80015c6:	4b07      	ldr	r3, [pc, #28]	; (80015e4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 80015c8:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 80015ca:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 80015cc:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80015ce:	6023      	str	r3, [r4, #0]
    }
}
 80015d0:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80015d2:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 80015d4:	9b03      	ldr	r3, [sp, #12]
 80015d6:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 80015d8:	4b03      	ldr	r3, [pc, #12]	; (80015e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 80015da:	e7f8      	b.n	80015ce <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 80015dc:	4002b000 	.word	0x4002b000
 80015e0:	00010009 	.word	0x00010009
 80015e4:	00020001 	.word	0x00020001
 80015e8:	00030001 	.word	0x00030001

080015ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80015ec:	2001      	movs	r0, #1
 80015ee:	4770      	bx	lr

080015f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80015f0:	2040      	movs	r0, #64	; 0x40
 80015f2:	4770      	bx	lr

080015f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80015f4:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 80015f8:	3008      	adds	r0, #8
 80015fa:	4770      	bx	lr

080015fc <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80015fc:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001600:	3008      	adds	r0, #8
 8001602:	4770      	bx	lr

08001604 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001604:	2001      	movs	r0, #1
 8001606:	4770      	bx	lr

08001608 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001608:	f244 7098 	movw	r0, #18328	; 0x4798
 800160c:	4770      	bx	lr

0800160e <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800160e:	f244 7398 	movw	r3, #18328	; 0x4798
 8001612:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001616:	3008      	adds	r0, #8
 8001618:	4770      	bx	lr

0800161a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800161a:	f244 7398 	movw	r3, #18328	; 0x4798
 800161e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001622:	3008      	adds	r0, #8
 8001624:	4770      	bx	lr

08001626 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001626:	2001      	movs	r0, #1
 8001628:	4770      	bx	lr

0800162a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 800162a:	2010      	movs	r0, #16
 800162c:	4770      	bx	lr

0800162e <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800162e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001632:	3008      	adds	r0, #8
 8001634:	4770      	bx	lr

08001636 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001636:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800163a:	3008      	adds	r0, #8
 800163c:	4770      	bx	lr

0800163e <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartupScreenNoTransition();
 800163e:	4608      	mov	r0, r1
 8001640:	f002 bf22 	b.w	8004488 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>

08001644 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001644:	b510      	push	{r4, lr}
 8001646:	4b03      	ldr	r3, [pc, #12]	; (8001654 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001648:	6003      	str	r3, [r0, #0]
 800164a:	4604      	mov	r4, r0
 800164c:	f00d fc55 	bl	800eefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001650:	4620      	mov	r0, r4
 8001652:	bd10      	pop	{r4, pc}
 8001654:	08027c68 	.word	0x08027c68

08001658 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8001658:	b510      	push	{r4, lr}
 800165a:	4604      	mov	r4, r0
 800165c:	f7ff fff2 	bl	8001644 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001660:	4620      	mov	r0, r4
 8001662:	2148      	movs	r1, #72	; 0x48
 8001664:	f024 fe5c 	bl	8026320 <_ZdlPvj>
 8001668:	4620      	mov	r0, r4
 800166a:	bd10      	pop	{r4, pc}

0800166c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800166c:	b510      	push	{r4, lr}
 800166e:	4b03      	ldr	r3, [pc, #12]	; (800167c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001670:	6003      	str	r3, [r0, #0]
 8001672:	4604      	mov	r4, r0
 8001674:	f00d fc41 	bl	800eefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001678:	4620      	mov	r0, r4
 800167a:	bd10      	pop	{r4, pc}
 800167c:	08027c34 	.word	0x08027c34

08001680 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001680:	b510      	push	{r4, lr}
 8001682:	4604      	mov	r4, r0
 8001684:	f7ff fff2 	bl	800166c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001688:	4620      	mov	r0, r4
 800168a:	f244 71a0 	movw	r1, #18336	; 0x47a0
 800168e:	f024 fe47 	bl	8026320 <_ZdlPvj>
 8001692:	4620      	mov	r0, r4
 8001694:	bd10      	pop	{r4, pc}
	...

08001698 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001698:	b510      	push	{r4, lr}
 800169a:	4b03      	ldr	r3, [pc, #12]	; (80016a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800169c:	6003      	str	r3, [r0, #0]
 800169e:	4604      	mov	r4, r0
 80016a0:	f00d fc2b 	bl	800eefa <_ZN8touchgfx17AbstractPartitionD1Ev>
 80016a4:	4620      	mov	r0, r4
 80016a6:	bd10      	pop	{r4, pc}
 80016a8:	08027c00 	.word	0x08027c00

080016ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80016ac:	b510      	push	{r4, lr}
 80016ae:	4604      	mov	r4, r0
 80016b0:	f7ff fff2 	bl	8001698 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016b4:	4620      	mov	r0, r4
 80016b6:	2118      	movs	r1, #24
 80016b8:	f024 fe32 	bl	8026320 <_ZdlPvj>
 80016bc:	4620      	mov	r0, r4
 80016be:	bd10      	pop	{r4, pc}

080016c0 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 80016c0:	b510      	push	{r4, lr}
 80016c2:	4b09      	ldr	r3, [pc, #36]	; (80016e8 <_ZN12FrontendHeapD1Ev+0x28>)
 80016c4:	6003      	str	r3, [r0, #0]
 80016c6:	4604      	mov	r4, r0
 80016c8:	f500 408f 	add.w	r0, r0, #18304	; 0x4780
 80016cc:	304c      	adds	r0, #76	; 0x4c
 80016ce:	f7ff ffb9 	bl	8001644 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80016d2:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 80016d6:	f7ff ffc9 	bl	800166c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016da:	f104 0014 	add.w	r0, r4, #20
 80016de:	f7ff ffdb 	bl	8001698 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80016e2:	4620      	mov	r0, r4
 80016e4:	bd10      	pop	{r4, pc}
 80016e6:	bf00      	nop
 80016e8:	08027c9c 	.word	0x08027c9c

080016ec <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 80016ec:	b508      	push	{r3, lr}
 80016ee:	4802      	ldr	r0, [pc, #8]	; (80016f8 <__tcf_0+0xc>)
 80016f0:	f7ff ffe6 	bl	80016c0 <_ZN12FrontendHeapD1Ev>
 80016f4:	bd08      	pop	{r3, pc}
 80016f6:	bf00      	nop
 80016f8:	200001a4 	.word	0x200001a4

080016fc <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80016fc:	b510      	push	{r4, lr}
 80016fe:	4604      	mov	r4, r0
 8001700:	f7ff ffde 	bl	80016c0 <_ZN12FrontendHeapD1Ev>
 8001704:	4620      	mov	r0, r4
 8001706:	f644 21d4 	movw	r1, #19156	; 0x4ad4
 800170a:	f024 fe09 	bl	8026320 <_ZdlPvj>
 800170e:	4620      	mov	r0, r4
 8001710:	bd10      	pop	{r4, pc}
	...

08001714 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8001714:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001718:	f001 f892 	bl	8002840 <_ZN14BitmapDatabase11getInstanceEv>
 800171c:	4605      	mov	r5, r0
 800171e:	f001 f893 	bl	8002848 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001722:	2400      	movs	r4, #0
 8001724:	4601      	mov	r1, r0
 8001726:	4623      	mov	r3, r4
 8001728:	4628      	mov	r0, r5
 800172a:	4622      	mov	r2, r4
 800172c:	9400      	str	r4, [sp, #0]
 800172e:	f016 fe61 	bl	80183f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001732:	4b26      	ldr	r3, [pc, #152]	; (80017cc <touchgfx_init+0xb8>)
 8001734:	4a26      	ldr	r2, [pc, #152]	; (80017d0 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001736:	4d27      	ldr	r5, [pc, #156]	; (80017d4 <touchgfx_init+0xc0>)
 8001738:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 800173a:	4620      	mov	r0, r4
 800173c:	f006 fb84 	bl	8007e48 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001740:	4825      	ldr	r0, [pc, #148]	; (80017d8 <touchgfx_init+0xc4>)
 8001742:	f016 fdbf 	bl	80182c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001746:	782b      	ldrb	r3, [r5, #0]
 8001748:	f3bf 8f5b 	dmb	ish
 800174c:	07db      	lsls	r3, r3, #31
 800174e:	d436      	bmi.n	80017be <touchgfx_init+0xaa>
 8001750:	4628      	mov	r0, r5
 8001752:	f024 fde7 	bl	8026324 <__cxa_guard_acquire>
 8001756:	b390      	cbz	r0, 80017be <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001758:	4c20      	ldr	r4, [pc, #128]	; (80017dc <touchgfx_init+0xc8>)
 800175a:	4f21      	ldr	r7, [pc, #132]	; (80017e0 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 800175c:	4b21      	ldr	r3, [pc, #132]	; (80017e4 <touchgfx_init+0xd0>)
 800175e:	6023      	str	r3, [r4, #0]
 8001760:	f507 76d6 	add.w	r6, r7, #428	; 0x1ac
 8001764:	f104 0014 	add.w	r0, r4, #20
 8001768:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 800176c:	6060      	str	r0, [r4, #4]
 800176e:	f8c4 8008 	str.w	r8, [r4, #8]
 8001772:	60e7      	str	r7, [r4, #12]
 8001774:	6126      	str	r6, [r4, #16]
 8001776:	f00d fbc1 	bl	800eefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800177a:	4b1b      	ldr	r3, [pc, #108]	; (80017e8 <touchgfx_init+0xd4>)
 800177c:	6163      	str	r3, [r4, #20]
 800177e:	4640      	mov	r0, r8
 8001780:	f00d fbbc 	bl	800eefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001784:	4b19      	ldr	r3, [pc, #100]	; (80017ec <touchgfx_init+0xd8>)
 8001786:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001788:	4638      	mov	r0, r7
 800178a:	f00d fbb7 	bl	800eefc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800178e:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 8001792:	4a17      	ldr	r2, [pc, #92]	; (80017f0 <touchgfx_init+0xdc>)
 8001794:	f8c3 27cc 	str.w	r2, [r3, #1996]	; 0x7cc
 8001798:	f603 0014 	addw	r0, r3, #2068	; 0x814
 800179c:	f007 fa1a 	bl	8008bd4 <_ZN5ModelC1Ev>
 80017a0:	4622      	mov	r2, r4
 80017a2:	f107 0148 	add.w	r1, r7, #72	; 0x48
 80017a6:	4630      	mov	r0, r6
 80017a8:	f006 fe54 	bl	8008454 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 80017ac:	4630      	mov	r0, r6
 80017ae:	f002 fe6b 	bl	8004488 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>
        static FrontendHeap instance;
 80017b2:	4810      	ldr	r0, [pc, #64]	; (80017f4 <touchgfx_init+0xe0>)
 80017b4:	f024 fe00 	bl	80263b8 <atexit>
 80017b8:	4628      	mov	r0, r5
 80017ba:	f024 fdbf 	bl	802633c <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 80017be:	480e      	ldr	r0, [pc, #56]	; (80017f8 <touchgfx_init+0xe4>)
}
 80017c0:	b002      	add	sp, #8
 80017c2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 80017c6:	f7ff bae5 	b.w	8000d94 <_ZN11TouchGFXHAL10initializeEv>
 80017ca:	bf00      	nop
 80017cc:	2000ef80 	.word	0x2000ef80
 80017d0:	20005a98 	.word	0x20005a98
 80017d4:	200001a0 	.word	0x200001a0
 80017d8:	2000001c 	.word	0x2000001c
 80017dc:	200001a4 	.word	0x200001a4
 80017e0:	20004970 	.word	0x20004970
 80017e4:	08027c9c 	.word	0x08027c9c
 80017e8:	08027c00 	.word	0x08027c00
 80017ec:	08027c34 	.word	0x08027c34
 80017f0:	08027c68 	.word	0x08027c68
 80017f4:	080016ed 	.word	0x080016ed
 80017f8:	20005a1c 	.word	0x20005a1c

080017fc <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 80017fc:	4770      	bx	lr
	...

08001800 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001800:	4801      	ldr	r0, [pc, #4]	; (8001808 <touchgfx_taskEntry+0x8>)
 8001802:	f7ff bae1 	b.w	8000dc8 <_ZN11TouchGFXHAL9taskEntryEv>
 8001806:	bf00      	nop
 8001808:	20005a1c 	.word	0x20005a1c

0800180c <_GLOBAL__sub_I_touchgfx_init>:
}
 800180c:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 800180e:	4e22      	ldr	r6, [pc, #136]	; (8001898 <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001810:	4c22      	ldr	r4, [pc, #136]	; (800189c <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8001812:	4d23      	ldr	r5, [pc, #140]	; (80018a0 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001814:	4b23      	ldr	r3, [pc, #140]	; (80018a4 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001816:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001818:	4630      	mov	r0, r6
 800181a:	f7ff fd79 	bl	8001310 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800181e:	4628      	mov	r0, r5
 8001820:	f01b f8b4 	bl	801c98c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001824:	4b20      	ldr	r3, [pc, #128]	; (80018a8 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001826:	4821      	ldr	r0, [pc, #132]	; (80018ac <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8001828:	60dc      	str	r4, [r3, #12]
 800182a:	2200      	movs	r2, #0
 800182c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001830:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001834:	491e      	ldr	r1, [pc, #120]	; (80018b0 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001836:	861a      	strh	r2, [r3, #48]	; 0x30
 8001838:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 800183c:	491d      	ldr	r1, [pc, #116]	; (80018b4 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 800183e:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001840:	491d      	ldr	r1, [pc, #116]	; (80018b8 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001842:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8001846:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001848:	f44f 7150 	mov.w	r1, #832	; 0x340
 800184c:	8001      	strh	r1, [r0, #0]
 800184e:	481b      	ldr	r0, [pc, #108]	; (80018bc <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001850:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001852:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001854:	481a      	ldr	r0, [pc, #104]	; (80018c0 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001856:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800185a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 800185e:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001862:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001866:	e9c3 2208 	strd	r2, r2, [r3, #32]
 800186a:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 800186e:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001872:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001876:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 800187a:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 800187e:	675a      	str	r2, [r3, #116]	; 0x74
 8001880:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001884:	8001      	strh	r1, [r0, #0]
 8001886:	480f      	ldr	r0, [pc, #60]	; (80018c4 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001888:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800188c:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 800188e:	490e      	ldr	r1, [pc, #56]	; (80018c8 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001890:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001892:	4a0e      	ldr	r2, [pc, #56]	; (80018cc <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001894:	601a      	str	r2, [r3, #0]
}
 8001896:	bd70      	pop	{r4, r5, r6, pc}
 8001898:	20004c7c 	.word	0x20004c7c
 800189c:	20004c78 	.word	0x20004c78
 80018a0:	20005a9c 	.word	0x20005a9c
 80018a4:	080276e4 	.word	0x080276e4
 80018a8:	20005a1c 	.word	0x20005a1c
 80018ac:	2000ef10 	.word	0x2000ef10
 80018b0:	01000001 	.word	0x01000001
 80018b4:	01010000 	.word	0x01010000
 80018b8:	2000ef1c 	.word	0x2000ef1c
 80018bc:	2000ef16 	.word	0x2000ef16
 80018c0:	2000ef12 	.word	0x2000ef12
 80018c4:	2000ef18 	.word	0x2000ef18
 80018c8:	2000ef14 	.word	0x2000ef14
 80018cc:	08027870 	.word	0x08027870

080018d0 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 80018d0:	4801      	ldr	r0, [pc, #4]	; (80018d8 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 80018d2:	f7ff bcf9 	b.w	80012c8 <_ZN8STM32DMAD1Ev>
 80018d6:	bf00      	nop
 80018d8:	20004c7c 	.word	0x20004c7c

080018dc <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 80018dc:	2000      	movs	r0, #0
 80018de:	4770      	bx	lr

080018e0 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 80018e0:	8081      	strh	r1, [r0, #4]
    }
 80018e2:	4770      	bx	lr

080018e4 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 80018e4:	80c1      	strh	r1, [r0, #6]
    }
 80018e6:	4770      	bx	lr

080018e8 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80018e8:	8101      	strh	r1, [r0, #8]
    }
 80018ea:	4770      	bx	lr

080018ec <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80018ec:	8141      	strh	r1, [r0, #10]
    }
 80018ee:	4770      	bx	lr

080018f0 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80018f0:	4770      	bx	lr

080018f2 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80018f2:	4770      	bx	lr

080018f4 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80018f4:	4770      	bx	lr

080018f6 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80018f6:	4770      	bx	lr

080018f8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80018f8:	4770      	bx	lr

080018fa <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80018fa:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80018fc:	88c4      	ldrh	r4, [r0, #6]
 80018fe:	6803      	ldr	r3, [r0, #0]
 8001900:	1b12      	subs	r2, r2, r4
 8001902:	8884      	ldrh	r4, [r0, #4]
 8001904:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001906:	1b09      	subs	r1, r1, r4
 8001908:	b212      	sxth	r2, r2
    }
 800190a:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 800190e:	b209      	sxth	r1, r1
 8001910:	4718      	bx	r3

08001912 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001912:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001916:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001918:	f04f 33ff 	mov.w	r3, #4294967295
 800191c:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 800191e:	6813      	ldr	r3, [r2, #0]
 8001920:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001922:	6010      	str	r0, [r2, #0]
    }
 8001924:	4770      	bx	lr

08001926 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001926:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800192a:	b11a      	cbz	r2, 8001934 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 800192c:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001930:	b102      	cbz	r2, 8001934 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001932:	6018      	str	r0, [r3, #0]
        }
    }
 8001934:	4770      	bx	lr

08001936 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001936:	2000      	movs	r0, #0
 8001938:	4770      	bx	lr

0800193a <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 800193a:	888b      	ldrh	r3, [r1, #4]
 800193c:	8083      	strh	r3, [r0, #4]
        return true;
    }
 800193e:	2001      	movs	r0, #1
 8001940:	4770      	bx	lr

08001942 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001942:	4770      	bx	lr

08001944 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001944:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001948:	4770      	bx	lr

0800194a <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 800194a:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800194e:	4770      	bx	lr

08001950 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001950:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001952:	2200      	movs	r2, #0
        return rect.width;
 8001954:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001958:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800195c:	8002      	strh	r2, [r0, #0]
 800195e:	8042      	strh	r2, [r0, #2]
 8001960:	8084      	strh	r4, [r0, #4]
 8001962:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001964:	bd10      	pop	{r4, pc}

08001966 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001966:	2200      	movs	r2, #0
 8001968:	8002      	strh	r2, [r0, #0]
 800196a:	8042      	strh	r2, [r0, #2]
 800196c:	8082      	strh	r2, [r0, #4]
 800196e:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001970:	4770      	bx	lr
	...

08001974 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001974:	4b02      	ldr	r3, [pc, #8]	; (8001980 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001976:	2290      	movs	r2, #144	; 0x90
 8001978:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 800197c:	4770      	bx	lr
 800197e:	bf00      	nop
 8001980:	e000e100 	.word	0xe000e100

08001984 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001984:	4b02      	ldr	r3, [pc, #8]	; (8001990 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001986:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800198a:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 800198c:	4770      	bx	lr
 800198e:	bf00      	nop
 8001990:	e000e100 	.word	0xe000e100

08001994 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001994:	4770      	bx	lr

08001996 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001996:	4770      	bx	lr

08001998 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001998:	b570      	push	{r4, r5, r6, lr}
 800199a:	4604      	mov	r4, r0
    HAL::initialize();
 800199c:	f00e f87b 	bl	800fa96 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80019a0:	6823      	ldr	r3, [r4, #0]
 80019a2:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80019a4:	f013 f928 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 80019a8:	4601      	mov	r1, r0
 80019aa:	4620      	mov	r0, r4
 80019ac:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80019ae:	6823      	ldr	r3, [r4, #0]
 80019b0:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80019b4:	2300      	movs	r3, #0
 80019b6:	4620      	mov	r0, r4
 80019b8:	46ac      	mov	ip, r5
 80019ba:	461a      	mov	r2, r3
}
 80019bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80019c0:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80019c4:	4760      	bx	ip

080019c6 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80019c6:	f00e b817 	b.w	800f9f8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080019ca <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80019ca:	f00e b978 	b.w	800fcbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080019ce <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80019ce:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80019d2:	b112      	cbz	r2, 80019da <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80019d4:	6803      	ldr	r3, [r0, #0]
 80019d6:	695b      	ldr	r3, [r3, #20]
 80019d8:	4718      	bx	r3
    }
 80019da:	4770      	bx	lr

080019dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80019dc:	4b04      	ldr	r3, [pc, #16]	; (80019f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80019de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80019e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80019e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80019ea:	f3bf 8f6f 	isb	sy
}
 80019ee:	4770      	bx	lr
 80019f0:	e000e100 	.word	0xe000e100

080019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80019f4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80019f6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80019f8:	4e12      	ldr	r6, [pc, #72]	; (8001a44 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80019fa:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80019fc:	4b12      	ldr	r3, [pc, #72]	; (8001a48 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80019fe:	6003      	str	r3, [r0, #0]
 8001a00:	6833      	ldr	r3, [r6, #0]
 8001a02:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001a06:	4605      	mov	r5, r0
 8001a08:	b10a      	cbz	r2, 8001a0e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001a0a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001a0c:	b900      	cbnz	r0, 8001a10 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001a0e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001a10:	6803      	ldr	r3, [r0, #0]
 8001a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a14:	4798      	blx	r3
        return auxiliaryLCD;
 8001a16:	6833      	ldr	r3, [r6, #0]
 8001a18:	fab0 f480 	clz	r4, r0
 8001a1c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001a1e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001a20:	b130      	cbz	r0, 8001a30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001a22:	6803      	ldr	r3, [r0, #0]
 8001a24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001a26:	4798      	blx	r3
 8001a28:	2800      	cmp	r0, #0
 8001a2a:	bf08      	it	eq
 8001a2c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001a30:	b92c      	cbnz	r4, 8001a3e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001a32:	4b06      	ldr	r3, [pc, #24]	; (8001a4c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001a34:	4a06      	ldr	r2, [pc, #24]	; (8001a50 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001a36:	4807      	ldr	r0, [pc, #28]	; (8001a54 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001a38:	212c      	movs	r1, #44	; 0x2c
 8001a3a:	f024 fc9f 	bl	802637c <__assert_func>
    }
 8001a3e:	4628      	mov	r0, r5
 8001a40:	bd70      	pop	{r4, r5, r6, pc}
 8001a42:	bf00      	nop
 8001a44:	2000ef1c 	.word	0x2000ef1c
 8001a48:	08027dac 	.word	0x08027dac
 8001a4c:	08027ca8 	.word	0x08027ca8
 8001a50:	08027d06 	.word	0x08027d06
 8001a54:	08027d3f 	.word	0x08027d3f

08001a58 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001a58:	4901      	ldr	r1, [pc, #4]	; (8001a60 <vApplicationIdleHook+0x8>)
 8001a5a:	2000      	movs	r0, #0
 8001a5c:	f00c bdd2 	b.w	800e604 <vTaskSetApplicationTaskTag>
 8001a60:	08001165 	.word	0x08001165

08001a64 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001a64:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001a66:	2064      	movs	r0, #100	; 0x64
 8001a68:	f00b f981 	bl	800cd6e <osDelay>
  for(;;)
 8001a6c:	e7fb      	b.n	8001a66 <StartDefaultTask+0x2>
	...

08001a70 <SystemClock_Config>:
{
 8001a70:	b530      	push	{r4, r5, lr}
 8001a72:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001a74:	2210      	movs	r2, #16
 8001a76:	2100      	movs	r1, #0
 8001a78:	a809      	add	r0, sp, #36	; 0x24
 8001a7a:	f024 fd0b 	bl	8026494 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001a7e:	2214      	movs	r2, #20
 8001a80:	2100      	movs	r1, #0
 8001a82:	a802      	add	r0, sp, #8
 8001a84:	f024 fd06 	bl	8026494 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001a88:	2400      	movs	r4, #0
 8001a8a:	4b1f      	ldr	r3, [pc, #124]	; (8001b08 <SystemClock_Config+0x98>)
 8001a8c:	9400      	str	r4, [sp, #0]
 8001a8e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001a90:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001a94:	641a      	str	r2, [r3, #64]	; 0x40
 8001a96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a98:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001a9c:	9300      	str	r3, [sp, #0]
 8001a9e:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001aa0:	4b1a      	ldr	r3, [pc, #104]	; (8001b0c <SystemClock_Config+0x9c>)
 8001aa2:	9401      	str	r4, [sp, #4]
 8001aa4:	681a      	ldr	r2, [r3, #0]
 8001aa6:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001aaa:	601a      	str	r2, [r3, #0]
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001ab2:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ab4:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001ab6:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001ab8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001abc:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ac0:	2502      	movs	r5, #2
 8001ac2:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001ac6:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001ac8:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001acc:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001ad0:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001ad4:	2004      	movs	r0, #4
 8001ad6:	2306      	movs	r3, #6
 8001ad8:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001adc:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ade:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001ae0:	f00a fc22 	bl	800c328 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001ae4:	f009 fe76 	bl	800b7d4 <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001ae8:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001aea:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001aee:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001af0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001af4:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001af8:	2105      	movs	r1, #5
 8001afa:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001afc:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001b00:	f00a f9e6 	bl	800bed0 <HAL_RCC_ClockConfig>
}
 8001b04:	b015      	add	sp, #84	; 0x54
 8001b06:	bd30      	pop	{r4, r5, pc}
 8001b08:	40023800 	.word	0x40023800
 8001b0c:	40007000 	.word	0x40007000

08001b10 <main>:
{
 8001b10:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001b14:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 8001b16:	f008 f843 	bl	8009ba0 <HAL_Init>
  SystemClock_Config();
 8001b1a:	f7ff ffa9 	bl	8001a70 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b1e:	2214      	movs	r2, #20
 8001b20:	2100      	movs	r1, #0
 8001b22:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b24:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b26:	f024 fcb5 	bl	8026494 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b2a:	4bc1      	ldr	r3, [pc, #772]	; (8001e30 <main+0x320>)
 8001b2c:	9403      	str	r4, [sp, #12]
 8001b2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001b30:	48c0      	ldr	r0, [pc, #768]	; (8001e34 <main+0x324>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001b32:	f042 0210 	orr.w	r2, r2, #16
 8001b36:	631a      	str	r2, [r3, #48]	; 0x30
 8001b38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b3a:	f002 0210 	and.w	r2, r2, #16
 8001b3e:	9203      	str	r2, [sp, #12]
 8001b40:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b42:	9404      	str	r4, [sp, #16]
 8001b44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b46:	f042 0202 	orr.w	r2, r2, #2
 8001b4a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4e:	f002 0202 	and.w	r2, r2, #2
 8001b52:	9204      	str	r2, [sp, #16]
 8001b54:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001b56:	9405      	str	r4, [sp, #20]
 8001b58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b5a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001b5e:	631a      	str	r2, [r3, #48]	; 0x30
 8001b60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b62:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001b66:	9205      	str	r2, [sp, #20]
 8001b68:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001b6a:	9406      	str	r4, [sp, #24]
 8001b6c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b6e:	f042 0208 	orr.w	r2, r2, #8
 8001b72:	631a      	str	r2, [r3, #48]	; 0x30
 8001b74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b76:	f002 0208 	and.w	r2, r2, #8
 8001b7a:	9206      	str	r2, [sp, #24]
 8001b7c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001b7e:	9407      	str	r4, [sp, #28]
 8001b80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b82:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b86:	631a      	str	r2, [r3, #48]	; 0x30
 8001b88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b8a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001b8e:	9207      	str	r2, [sp, #28]
 8001b90:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b92:	9408      	str	r4, [sp, #32]
 8001b94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b96:	f042 0204 	orr.w	r2, r2, #4
 8001b9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001b9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b9e:	f002 0204 	and.w	r2, r2, #4
 8001ba2:	9208      	str	r2, [sp, #32]
 8001ba4:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001ba6:	9409      	str	r4, [sp, #36]	; 0x24
 8001ba8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001baa:	f042 0220 	orr.w	r2, r2, #32
 8001bae:	631a      	str	r2, [r3, #48]	; 0x30
 8001bb0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bb2:	f002 0220 	and.w	r2, r2, #32
 8001bb6:	9209      	str	r2, [sp, #36]	; 0x24
 8001bb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001bba:	940a      	str	r4, [sp, #40]	; 0x28
 8001bbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bbe:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001bc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001bc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bc6:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001bca:	920a      	str	r2, [sp, #40]	; 0x28
 8001bcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001bce:	940b      	str	r4, [sp, #44]	; 0x2c
 8001bd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bd2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001bd6:	631a      	str	r2, [r3, #48]	; 0x30
 8001bd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bda:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001bde:	920b      	str	r2, [sp, #44]	; 0x2c
 8001be0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001be2:	940c      	str	r4, [sp, #48]	; 0x30
 8001be4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001be6:	f042 0201 	orr.w	r2, r2, #1
 8001bea:	631a      	str	r2, [r3, #48]	; 0x30
 8001bec:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bee:	f002 0201 	and.w	r2, r2, #1
 8001bf2:	920c      	str	r2, [sp, #48]	; 0x30
 8001bf4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001bf6:	940d      	str	r4, [sp, #52]	; 0x34
 8001bf8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bfa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001bfe:	631a      	str	r2, [r3, #48]	; 0x30
 8001c00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c02:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c06:	4622      	mov	r2, r4
 8001c08:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001c0c:	930d      	str	r3, [sp, #52]	; 0x34
 8001c0e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001c10:	f008 ffdc 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SDC_CTRL_GPIO_Port, SDC_CTRL_Pin, GPIO_PIN_SET);
 8001c14:	4887      	ldr	r0, [pc, #540]	; (8001e34 <main+0x324>)
 8001c16:	2201      	movs	r2, #1
 8001c18:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001c1c:	f008 ffd6 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LAP_COUNTER_TRIGGER_GPIO_Port, LAP_COUNTER_TRIGGER_Pin, GPIO_PIN_SET);
 8001c20:	4885      	ldr	r0, [pc, #532]	; (8001e38 <main+0x328>)
 8001c22:	2201      	movs	r2, #1
 8001c24:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001c28:	f008 ffd0 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001c2c:	4883      	ldr	r0, [pc, #524]	; (8001e3c <main+0x32c>)
 8001c2e:	2201      	movs	r2, #1
 8001c30:	2108      	movs	r1, #8
 8001c32:	f008 ffcb 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001c36:	4882      	ldr	r0, [pc, #520]	; (8001e40 <main+0x330>)
 8001c38:	4622      	mov	r2, r4
 8001c3a:	2146      	movs	r1, #70	; 0x46
 8001c3c:	f008 ffc6 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DASHBOARD_NEUTRAL_LED_GPIO_Port, DASHBOARD_NEUTRAL_LED_Pin, GPIO_PIN_RESET);
 8001c40:	487d      	ldr	r0, [pc, #500]	; (8001e38 <main+0x328>)
 8001c42:	4622      	mov	r2, r4
 8001c44:	2110      	movs	r1, #16
 8001c46:	f008 ffc1 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7|MCP2515_CS_Pin, GPIO_PIN_RESET);
 8001c4a:	4622      	mov	r2, r4
 8001c4c:	487d      	ldr	r0, [pc, #500]	; (8001e44 <main+0x334>)
 8001c4e:	21c0      	movs	r1, #192	; 0xc0
 8001c50:	f008 ffbc 	bl	800abcc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = STEERING_RIGHT_RED_BUTTON_Pin;
 8001c54:	f44f 5a00 	mov.w	sl, #8192	; 0x2000
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001c58:	4876      	ldr	r0, [pc, #472]	; (8001e34 <main+0x324>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c5a:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001c5c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c5e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c60:	2503      	movs	r5, #3
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001c62:	e9cd a42d 	strd	sl, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001c66:	f008 fe23 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c6a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001c6e:	4871      	ldr	r0, [pc, #452]	; (8001e34 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c70:	9530      	str	r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001c72:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c74:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = SDC_CTRL_Pin;
 8001c78:	f44f 6980 	mov.w	r9, #1024	; 0x400
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c7c:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001c7e:	f008 fe17 	bl	800a8b0 <HAL_GPIO_Init>
  HAL_GPIO_Init(SDC_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001c82:	486c      	ldr	r0, [pc, #432]	; (8001e34 <main+0x324>)
 8001c84:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001c86:	2711      	movs	r7, #17
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001c88:	e9cd 962d 	strd	r9, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c8c:	e9cd 642f 	strd	r6, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(SDC_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001c90:	f008 fe0e 	bl	800a8b0 <HAL_GPIO_Init>
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001c94:	4868      	ldr	r0, [pc, #416]	; (8001e38 <main+0x328>)
  GPIO_InitStruct.Pin = LAP_COUNTER_TRIGGER_Pin;
 8001c96:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001c9a:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c9c:	e9cd 742e 	strd	r7, r4, [sp, #184]	; 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ca0:	9430      	str	r4, [sp, #192]	; 0xc0
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001ca2:	f008 fe05 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001ca6:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001ca8:	4864      	ldr	r0, [pc, #400]	; (8001e3c <main+0x32c>)
 8001caa:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001cac:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cb0:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001cb4:	f008 fdfc 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001cb8:	2346      	movs	r3, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cba:	4861      	ldr	r0, [pc, #388]	; (8001e40 <main+0x330>)
  hdma2d.Instance = DMA2D;
 8001cbc:	4f62      	ldr	r7, [pc, #392]	; (8001e48 <main+0x338>)
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cbe:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cc0:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cc4:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc8:	f008 fdf2 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_LEFT_RED_BUTTON_Pin|STEERING_RIGHT_PADDLE_BUTTON_Pin;
 8001ccc:	2390      	movs	r3, #144	; 0x90
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cce:	485c      	ldr	r0, [pc, #368]	; (8001e40 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cd0:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd2:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001cd4:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd8:	f008 fdea 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DASHBOARD_NEUTRAL_LED_Pin;
 8001cdc:	2310      	movs	r3, #16
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001cde:	4856      	ldr	r0, [pc, #344]	; (8001e38 <main+0x328>)
 8001ce0:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001ce2:	f04f 0b80 	mov.w	fp, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ce6:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cea:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001cee:	f008 fddf 	bl	800a8b0 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001cf2:	4854      	ldr	r0, [pc, #336]	; (8001e44 <main+0x334>)
 8001cf4:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001cf6:	e9cd b62d 	strd	fp, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cfa:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001cfe:	f008 fdd7 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_GREEN_BUTTON_Pin;
 8001d02:	2320      	movs	r3, #32
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001d04:	484c      	ldr	r0, [pc, #304]	; (8001e38 <main+0x328>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d06:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001d08:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d0a:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001d0e:	f008 fdcf 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCP2515_CS_Pin;
 8001d12:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001d14:	484b      	ldr	r0, [pc, #300]	; (8001e44 <main+0x334>)
 8001d16:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001d18:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = STEERING_LEFT_PADDLE_BUTTON_Pin;
 8001d1c:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d20:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001d24:	f008 fdc4 	bl	800a8b0 <HAL_GPIO_Init>
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001d28:	a92d      	add	r1, sp, #180	; 0xb4
 8001d2a:	4848      	ldr	r0, [pc, #288]	; (8001e4c <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d2c:	942f      	str	r4, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001d2e:	e9cd 842d 	strd	r8, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001d32:	f008 fdbd 	bl	800a8b0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001d36:	4846      	ldr	r0, [pc, #280]	; (8001e50 <main+0x340>)
 8001d38:	4a46      	ldr	r2, [pc, #280]	; (8001e54 <main+0x344>)
 8001d3a:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001d3c:	f007 ffd6 	bl	8009cec <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001d40:	4a45      	ldr	r2, [pc, #276]	; (8001e58 <main+0x348>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001d42:	e9c7 440a 	strd	r4, r4, [r7, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001d46:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001d4a:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8001d4c:	e9c7 2400 	strd	r2, r4, [r7]
  hdma2d.Init.OutputOffset = 0;
 8001d50:	e9c7 4402 	strd	r4, r4, [r7, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001d54:	f008 f8de 	bl	8009f14 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001d58:	4631      	mov	r1, r6
 8001d5a:	4638      	mov	r0, r7
 8001d5c:	f008 f992 	bl	800a084 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001d60:	4622      	mov	r2, r4
 8001d62:	4659      	mov	r1, fp
 8001d64:	4837      	ldr	r0, [pc, #220]	; (8001e44 <main+0x334>)
  hdsi.Instance = DSI;
 8001d66:	4f3d      	ldr	r7, [pc, #244]	; (8001e5c <main+0x34c>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001d68:	f008 ff30 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001d6c:	2014      	movs	r0, #20
 8001d6e:	f007 ff43 	bl	8009bf8 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8001d72:	4632      	mov	r2, r6
 8001d74:	4659      	mov	r1, fp
 8001d76:	4833      	ldr	r0, [pc, #204]	; (8001e44 <main+0x334>)
 8001d78:	f008 ff28 	bl	800abcc <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001d7c:	200a      	movs	r0, #10
 8001d7e:	f007 ff3b 	bl	8009bf8 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001d82:	2224      	movs	r2, #36	; 0x24
 8001d84:	4621      	mov	r1, r4
 8001d86:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 8001d88:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8001d8a:	f024 fb83 	bl	8026494 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001d8e:	2218      	movs	r2, #24
 8001d90:	4621      	mov	r1, r4
 8001d92:	a811      	add	r0, sp, #68	; 0x44
 8001d94:	f024 fb7e 	bl	8026494 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001d98:	2234      	movs	r2, #52	; 0x34
 8001d9a:	4621      	mov	r1, r4
 8001d9c:	a82d      	add	r0, sp, #180	; 0xb4
 8001d9e:	f024 fb79 	bl	8026494 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8001da2:	222c      	movs	r2, #44	; 0x2c
 8001da4:	4621      	mov	r1, r4
 8001da6:	eb0d 000b 	add.w	r0, sp, fp
 8001daa:	f024 fb73 	bl	8026494 <memset>
  hdsi.Instance = DSI;
 8001dae:	4a2c      	ldr	r2, [pc, #176]	; (8001e60 <main+0x350>)
  PLLInit.PLLNDIV = 125;
 8001db0:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8001db2:	e9c7 2400 	strd	r2, r4, [r7]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001db6:	e9cd 180e 	strd	r1, r8, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001dba:	2204      	movs	r2, #4
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001dbc:	a90e      	add	r1, sp, #56	; 0x38
 8001dbe:	4638      	mov	r0, r7
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001dc0:	e9c7 2602 	strd	r2, r6, [r7, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001dc4:	f008 fa26 	bl	800a214 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001dc8:	a917      	add	r1, sp, #92	; 0x5c
 8001dca:	4638      	mov	r0, r7
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8001dcc:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8001dd0:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8001dd4:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8001dd8:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8001ddc:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8001dde:	f008 fc45 	bl	800a66c <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8001de2:	231c      	movs	r3, #28
 8001de4:	2121      	movs	r1, #33	; 0x21
 8001de6:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8001dea:	220f      	movs	r2, #15
 8001dec:	2119      	movs	r1, #25
 8001dee:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001df2:	4638      	mov	r0, r7
 8001df4:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 8001df6:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8001dfa:	f008 fbfa 	bl	800a5f2 <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 8001dfe:	2204      	movs	r2, #4
 8001e00:	4611      	mov	r1, r2
 8001e02:	4638      	mov	r0, r7
 8001e04:	f008 fbe4 	bl	800a5d0 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8001e08:	f242 7110 	movw	r1, #10000	; 0x2710
 8001e0c:	4638      	mov	r0, r7
 8001e0e:	f008 fd38 	bl	800a882 <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 8001e12:	4621      	mov	r1, r4
 8001e14:	4638      	mov	r0, r7
 8001e16:	f008 f99a 	bl	800a14e <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8001e1a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001e1e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001e22:	e9cd 132d 	strd	r1, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_ENABLE;
 8001e26:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001e2a:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001e2e:	e019      	b.n	8001e64 <main+0x354>
 8001e30:	40023800 	.word	0x40023800
 8001e34:	40021800 	.word	0x40021800
 8001e38:	40020800 	.word	0x40020800
 8001e3c:	40022800 	.word	0x40022800
 8001e40:	40020000 	.word	0x40020000
 8001e44:	40021c00 	.word	0x40021c00
 8001e48:	20005b38 	.word	0x20005b38
 8001e4c:	40020400 	.word	0x40020400
 8001e50:	20005b30 	.word	0x20005b30
 8001e54:	40023000 	.word	0x40023000
 8001e58:	4002b000 	.word	0x4002b000
 8001e5c:	20005b78 	.word	0x20005b78
 8001e60:	40016c00 	.word	0x40016c00
 8001e64:	e9cd 1330 	strd	r1, r3, [sp, #192]	; 0xc0
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001e68:	f8cd a0c8 	str.w	sl, [sp, #200]	; 0xc8
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001e6c:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8001e70:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 8001e74:	e9cd a133 	strd	sl, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001e78:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001e7c:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001e80:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001e84:	e9cd 0135 	strd	r0, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001e88:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001e8c:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001e90:	4638      	mov	r0, r7
 8001e92:	a92d      	add	r1, sp, #180	; 0xb4
  LPCmd.LPGenShortWriteTwoP = DSI_LP_GSW2P_ENABLE;
 8001e94:	f8cd 90bc 	str.w	r9, [sp, #188]	; 0xbc
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 8001e98:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001e9c:	f008 fb64 	bl	800a568 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001ea0:	f04f 0ec8 	mov.w	lr, #200	; 0xc8
 8001ea4:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001ea6:	eb0d 010b 	add.w	r1, sp, fp
 8001eaa:	4638      	mov	r0, r7
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8001eac:	e9cd e322 	strd	lr, r3, [sp, #136]	; 0x88
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8001eb0:	962a      	str	r6, [sp, #168]	; 0xa8
  CmdCfg.ColorCoding = DSI_RGB565;
 8001eb2:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 8001eb6:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001eba:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8001ebe:	e9cd b428 	strd	fp, r4, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001ec2:	f008 fadf 	bl	800a484 <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001ec6:	4621      	mov	r1, r4
 8001ec8:	4638      	mov	r0, r7
 8001eca:	f008 faca 	bl	800a462 <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001ece:	4875      	ldr	r0, [pc, #468]	; (80020a4 <main+0x594>)
 8001ed0:	4b75      	ldr	r3, [pc, #468]	; (80020a8 <main+0x598>)
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8001ed2:	6084      	str	r4, [r0, #8]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8001ed4:	2204      	movs	r2, #4
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001ed6:	e9c0 3400 	strd	r3, r4, [r0]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8001eda:	2320      	movs	r3, #32
 8001edc:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001ee0:	2140      	movs	r1, #64	; 0x40
 8001ee2:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8001ee6:	e9c0 1305 	strd	r1, r3, [r0, #20]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8001eea:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001eee:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8001ef0:	e9c0 3a09 	strd	r3, sl, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001ef4:	2307      	movs	r3, #7
  SdramTiming.SelfRefreshTime = 4;
 8001ef6:	e9cd 322e 	strd	r3, r2, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 8001efa:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001efe:	e9c0 4407 	strd	r4, r4, [r0, #28]
  SdramTiming.RCDDelay = 2;
 8001f02:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8001f06:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001f0a:	f00a fbc7 	bl	800c69c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 8001f0e:	f007 fd75 	bl	80099fc <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8001f12:	f007 fd25 	bl	8009960 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001f16:	2234      	movs	r2, #52	; 0x34
 8001f18:	4621      	mov	r1, r4
 8001f1a:	eb0d 000b 	add.w	r0, sp, fp
 8001f1e:	f024 fab9 	bl	8026494 <memset>
  hltdc.Instance = LTDC;
 8001f22:	4d62      	ldr	r5, [pc, #392]	; (80020ac <main+0x59c>)
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8001f24:	4862      	ldr	r0, [pc, #392]	; (80020b0 <main+0x5a0>)
  hltdc.Init.Backcolor.Blue = 0;
 8001f26:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8001f28:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8001f2c:	e9c5 0300 	strd	r0, r3, [r5]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 8001f30:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  hltdc.Init.AccumulatedActiveH = 482;
 8001f34:	f04f 0cca 	mov.w	ip, #202	; 0xca
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001f38:	e9c5 3402 	strd	r3, r4, [r5, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 8001f3c:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 8001f40:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 8001f44:	f04f 0ecb 	mov.w	lr, #203	; 0xcb
 8001f48:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f4c:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 8001f4e:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.HorizontalSync = 1;
 8001f52:	e9c5 4604 	strd	r4, r6, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 8001f56:	e9c5 6806 	strd	r6, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 8001f5a:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001f5e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001f62:	f009 fb01 	bl	800b568 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001f66:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 8001f68:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.WindowX1 = 200;
 8001f6c:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001f6e:	2105      	movs	r1, #5
 8001f70:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
 8001f74:	e9cd 1228 	strd	r1, r2, [sp, #160]	; 0xa0
  pLayerCfg.WindowY0 = 0;
 8001f78:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  pLayerCfg.ImageWidth = 200;
 8001f7c:	22c8      	movs	r2, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8001f7e:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.ImageHeight = 480;
 8001f82:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001f86:	eb0d 010b 	add.w	r1, sp, fp
 8001f8a:	4622      	mov	r2, r4
 8001f8c:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001f8e:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.WindowX0 = 0;
 8001f92:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001f94:	f8cd 909c 	str.w	r9, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 8001f98:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8001f9c:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001fa0:	f009 fbae 	bl	800b700 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001fa4:	682a      	ldr	r2, [r5, #0]
 8001fa6:	6993      	ldr	r3, [r2, #24]
 8001fa8:	f023 0301 	bic.w	r3, r3, #1
 8001fac:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8001fae:	4638      	mov	r0, r7
 8001fb0:	f008 fbc2 	bl	800a738 <HAL_DSI_Start>
  NT35510_Init(NT35510_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001fb4:	4631      	mov	r1, r6
 8001fb6:	4640      	mov	r0, r8
 8001fb8:	f006 ff76 	bl	8008ea8 <NT35510_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPOFF, 0x00);
 8001fbc:	2328      	movs	r3, #40	; 0x28
 8001fbe:	2215      	movs	r2, #21
 8001fc0:	4621      	mov	r1, r4
 8001fc2:	4638      	mov	r0, r7
 8001fc4:	9400      	str	r4, [sp, #0]
 8001fc6:	f008 fbea 	bl	800a79e <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001fca:	a92d      	add	r1, sp, #180	; 0xb4
 8001fcc:	4638      	mov	r0, r7
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8001fce:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8001fd2:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8001fd6:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8001fda:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8001fde:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8001fe2:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001fe4:	f008 fac0 	bl	800a568 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8001fe8:	f44f 7148 	mov.w	r1, #800	; 0x320
 8001fec:	4622      	mov	r2, r4
 8001fee:	4628      	mov	r0, r5
 8001ff0:	f009 fbb4 	bl	800b75c <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8001ff4:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8001ff6:	482f      	ldr	r0, [pc, #188]	; (80020b4 <main+0x5a4>)
  __HAL_LTDC_ENABLE(&hltdc);
 8001ff8:	6993      	ldr	r3, [r2, #24]
  hqspi.Init.FifoThreshold = 1;
 8001ffa:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 8001ffc:	4333      	orrs	r3, r6
 8001ffe:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8002000:	4b2d      	ldr	r3, [pc, #180]	; (80020b8 <main+0x5a8>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8002002:	4f2e      	ldr	r7, [pc, #184]	; (80020bc <main+0x5ac>)
  hqspi.Init.ClockPrescaler = 1;
 8002004:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 8002008:	2510      	movs	r5, #16
 800200a:	231b      	movs	r3, #27
 800200c:	e9c0 5303 	strd	r5, r3, [r0, #12]
  hi2c1.Instance = I2C1;
 8002010:	4d2b      	ldr	r5, [pc, #172]	; (80020c0 <main+0x5b0>)
  hi2c1.Init.ClockSpeed = 400000;
 8002012:	4e2c      	ldr	r6, [pc, #176]	; (80020c4 <main+0x5b4>)
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8002014:	e9c0 9405 	strd	r9, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8002018:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800201c:	f009 fce8 	bl	800b9f0 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8002020:	f007 fb64 	bl	80096ec <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8002024:	f007 fa98 	bl	8009558 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8002028:	f007 fa0e 	bl	8009448 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 800202c:	4b26      	ldr	r3, [pc, #152]	; (80020c8 <main+0x5b8>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800202e:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002030:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 8002032:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8002036:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800203a:	e9c5 a404 	strd	sl, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800203e:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002042:	f008 ffad 	bl	800afa0 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8002046:	4628      	mov	r0, r5
 8002048:	f009 f852 	bl	800b0f0 <HAL_I2C_DeInit>
  hspi2.Instance = SPI2;
 800204c:	481f      	ldr	r0, [pc, #124]	; (80020cc <main+0x5bc>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800204e:	f44f 7382 	mov.w	r3, #260	; 0x104
 8002052:	e9c0 7300 	strd	r7, r3, [r0]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8002056:	f44f 7300 	mov.w	r3, #512	; 0x200
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800205a:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 800205e:	230a      	movs	r3, #10
 8002060:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8002062:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8002066:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800206a:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800206e:	6284      	str	r4, [r0, #40]	; 0x28
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8002070:	f00a fb78 	bl	800c764 <HAL_SPI_Init>
  MX_TouchGFX_Init();
 8002074:	f7fe fd04 	bl	8000a80 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002078:	f7fe fd01 	bl	8000a7e <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 800207c:	f00a fe02 	bl	800cc84 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002080:	4a13      	ldr	r2, [pc, #76]	; (80020d0 <main+0x5c0>)
 8002082:	4814      	ldr	r0, [pc, #80]	; (80020d4 <main+0x5c4>)
 8002084:	4621      	mov	r1, r4
 8002086:	f00a fe29 	bl	800ccdc <osThreadNew>
 800208a:	4b13      	ldr	r3, [pc, #76]	; (80020d8 <main+0x5c8>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800208c:	4a13      	ldr	r2, [pc, #76]	; (80020dc <main+0x5cc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800208e:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002090:	4621      	mov	r1, r4
 8002092:	4813      	ldr	r0, [pc, #76]	; (80020e0 <main+0x5d0>)
 8002094:	f00a fe22 	bl	800ccdc <osThreadNew>
 8002098:	4b12      	ldr	r3, [pc, #72]	; (80020e4 <main+0x5d4>)
 800209a:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800209c:	f00a fe04 	bl	800cca8 <osKernelStart>
  while (1)
 80020a0:	e7fe      	b.n	80020a0 <main+0x590>
 80020a2:	bf00      	nop
 80020a4:	20005cdc 	.word	0x20005cdc
 80020a8:	a0000140 	.word	0xa0000140
 80020ac:	20005be8 	.word	0x20005be8
 80020b0:	40016800 	.word	0x40016800
 80020b4:	20005c90 	.word	0x20005c90
 80020b8:	a0001000 	.word	0xa0001000
 80020bc:	40003800 	.word	0x40003800
 80020c0:	20005b94 	.word	0x20005b94
 80020c4:	40005400 	.word	0x40005400
 80020c8:	00061a80 	.word	0x00061a80
 80020cc:	20005d10 	.word	0x20005d10
 80020d0:	08027e04 	.word	0x08027e04
 80020d4:	08001a65 	.word	0x08001a65
 80020d8:	20005b28 	.word	0x20005b28
 80020dc:	08027de0 	.word	0x08027de0
 80020e0:	08000a8f 	.word	0x08000a8f
 80020e4:	20005b20 	.word	0x20005b20

080020e8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 80020e8:	6802      	ldr	r2, [r0, #0]
 80020ea:	4b03      	ldr	r3, [pc, #12]	; (80020f8 <HAL_TIM_PeriodElapsedCallback+0x10>)
 80020ec:	429a      	cmp	r2, r3
 80020ee:	d101      	bne.n	80020f4 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 80020f0:	f007 bd70 	b.w	8009bd4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80020f4:	4770      	bx	lr
 80020f6:	bf00      	nop
 80020f8:	40001000 	.word	0x40001000

080020fc <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80020fc:	4770      	bx	lr
	...

08002100 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002100:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002102:	4b0e      	ldr	r3, [pc, #56]	; (800213c <HAL_MspInit+0x3c>)
 8002104:	2200      	movs	r2, #0
 8002106:	9200      	str	r2, [sp, #0]
 8002108:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800210a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800210e:	6459      	str	r1, [r3, #68]	; 0x44
 8002110:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002112:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8002116:	9100      	str	r1, [sp, #0]
 8002118:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800211a:	9201      	str	r2, [sp, #4]
 800211c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800211e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002122:	6419      	str	r1, [r3, #64]	; 0x40
 8002124:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002126:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800212a:	9301      	str	r3, [sp, #4]
 800212c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800212e:	210f      	movs	r1, #15
 8002130:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002134:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002136:	f007 bd85 	b.w	8009c44 <HAL_NVIC_SetPriority>
 800213a:	bf00      	nop
 800213c:	40023800 	.word	0x40023800

08002140 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002140:	6802      	ldr	r2, [r0, #0]
 8002142:	4b09      	ldr	r3, [pc, #36]	; (8002168 <HAL_CRC_MspInit+0x28>)
 8002144:	429a      	cmp	r2, r3
{
 8002146:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002148:	d10b      	bne.n	8002162 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800214a:	2300      	movs	r3, #0
 800214c:	9301      	str	r3, [sp, #4]
 800214e:	4b07      	ldr	r3, [pc, #28]	; (800216c <HAL_CRC_MspInit+0x2c>)
 8002150:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002152:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002156:	631a      	str	r2, [r3, #48]	; 0x30
 8002158:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800215a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800215e:	9301      	str	r3, [sp, #4]
 8002160:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002162:	b002      	add	sp, #8
 8002164:	4770      	bx	lr
 8002166:	bf00      	nop
 8002168:	40023000 	.word	0x40023000
 800216c:	40023800 	.word	0x40023800

08002170 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002170:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002172:	4b0f      	ldr	r3, [pc, #60]	; (80021b0 <HAL_DMA2D_MspInit+0x40>)
 8002174:	6802      	ldr	r2, [r0, #0]
 8002176:	429a      	cmp	r2, r3
 8002178:	d116      	bne.n	80021a8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800217a:	2200      	movs	r2, #0
 800217c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002180:	9201      	str	r2, [sp, #4]
 8002182:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002184:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002188:	6319      	str	r1, [r3, #48]	; 0x30
 800218a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800218c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002190:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002192:	2105      	movs	r1, #5
 8002194:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002196:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002198:	f007 fd54 	bl	8009c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800219c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 800219e:	b003      	add	sp, #12
 80021a0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80021a4:	f007 bd80 	b.w	8009ca8 <HAL_NVIC_EnableIRQ>
}
 80021a8:	b003      	add	sp, #12
 80021aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80021ae:	bf00      	nop
 80021b0:	4002b000 	.word	0x4002b000

080021b4 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 80021b4:	b510      	push	{r4, lr}
 80021b6:	4604      	mov	r4, r0
 80021b8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80021ba:	2214      	movs	r2, #20
 80021bc:	2100      	movs	r1, #0
 80021be:	a803      	add	r0, sp, #12
 80021c0:	f024 f968 	bl	8026494 <memset>
  if(hdsi->Instance==DSI)
 80021c4:	6822      	ldr	r2, [r4, #0]
 80021c6:	4b17      	ldr	r3, [pc, #92]	; (8002224 <HAL_DSI_MspInit+0x70>)
 80021c8:	429a      	cmp	r2, r3
 80021ca:	d128      	bne.n	800221e <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 80021cc:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 80021d0:	2400      	movs	r4, #0
 80021d2:	9401      	str	r4, [sp, #4]
 80021d4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80021d6:	4814      	ldr	r0, [pc, #80]	; (8002228 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 80021d8:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 80021dc:	645a      	str	r2, [r3, #68]	; 0x44
 80021de:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80021e0:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 80021e4:	9201      	str	r2, [sp, #4]
 80021e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80021e8:	9402      	str	r4, [sp, #8]
 80021ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80021ec:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80021f0:	631a      	str	r2, [r3, #48]	; 0x30
 80021f2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80021f4:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80021f8:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021fa:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80021fc:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021fe:	2302      	movs	r3, #2
 8002200:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002204:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8002206:	230d      	movs	r3, #13
 8002208:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 800220a:	f008 fb51 	bl	800a8b0 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 800220e:	205c      	movs	r0, #92	; 0x5c
 8002210:	4622      	mov	r2, r4
 8002212:	2105      	movs	r1, #5
 8002214:	f007 fd16 	bl	8009c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8002218:	205c      	movs	r0, #92	; 0x5c
 800221a:	f007 fd45 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 800221e:	b008      	add	sp, #32
 8002220:	bd10      	pop	{r4, pc}
 8002222:	bf00      	nop
 8002224:	40016c00 	.word	0x40016c00
 8002228:	40022400 	.word	0x40022400

0800222c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 800222c:	b530      	push	{r4, r5, lr}
 800222e:	4604      	mov	r4, r0
 8002230:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002232:	2214      	movs	r2, #20
 8002234:	2100      	movs	r1, #0
 8002236:	a803      	add	r0, sp, #12
 8002238:	f024 f92c 	bl	8026494 <memset>
  if(hi2c->Instance==I2C1)
 800223c:	6822      	ldr	r2, [r4, #0]
 800223e:	4b1a      	ldr	r3, [pc, #104]	; (80022a8 <HAL_I2C_MspInit+0x7c>)
 8002240:	429a      	cmp	r2, r3
 8002242:	d12f      	bne.n	80022a4 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002244:	4c19      	ldr	r4, [pc, #100]	; (80022ac <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002246:	481a      	ldr	r0, [pc, #104]	; (80022b0 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002248:	2500      	movs	r5, #0
 800224a:	9501      	str	r5, [sp, #4]
 800224c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800224e:	f043 0302 	orr.w	r3, r3, #2
 8002252:	6323      	str	r3, [r4, #48]	; 0x30
 8002254:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002256:	f003 0302 	and.w	r3, r3, #2
 800225a:	9301      	str	r3, [sp, #4]
 800225c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800225e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8002262:	2312      	movs	r3, #18
 8002264:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002268:	2101      	movs	r1, #1
 800226a:	2303      	movs	r3, #3
 800226c:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002270:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002272:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002274:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002276:	f008 fb1b 	bl	800a8b0 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800227a:	9502      	str	r5, [sp, #8]
 800227c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800227e:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002282:	6423      	str	r3, [r4, #64]	; 0x40
 8002284:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002286:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800228a:	9302      	str	r3, [sp, #8]
 800228c:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 800228e:	6a23      	ldr	r3, [r4, #32]
 8002290:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002294:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8002296:	6a23      	ldr	r3, [r4, #32]
 8002298:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800229c:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 800229e:	2064      	movs	r0, #100	; 0x64
 80022a0:	f007 fcaa 	bl	8009bf8 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80022a4:	b009      	add	sp, #36	; 0x24
 80022a6:	bd30      	pop	{r4, r5, pc}
 80022a8:	40005400 	.word	0x40005400
 80022ac:	40023800 	.word	0x40023800
 80022b0:	40020400 	.word	0x40020400

080022b4 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 80022b4:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 80022b6:	6802      	ldr	r2, [r0, #0]
 80022b8:	4b0a      	ldr	r3, [pc, #40]	; (80022e4 <HAL_I2C_MspDeInit+0x30>)
 80022ba:	429a      	cmp	r2, r3
 80022bc:	d110      	bne.n	80022e0 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 80022be:	4a0a      	ldr	r2, [pc, #40]	; (80022e8 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 80022c0:	480a      	ldr	r0, [pc, #40]	; (80022ec <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 80022c2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80022c4:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80022c8:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 80022ca:	f44f 7180 	mov.w	r1, #256	; 0x100
 80022ce:	f008 fbd5 	bl	800aa7c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 80022d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 80022d6:	4805      	ldr	r0, [pc, #20]	; (80022ec <HAL_I2C_MspDeInit+0x38>)
 80022d8:	f44f 7100 	mov.w	r1, #512	; 0x200
 80022dc:	f008 bbce 	b.w	800aa7c <HAL_GPIO_DeInit>
}
 80022e0:	bd08      	pop	{r3, pc}
 80022e2:	bf00      	nop
 80022e4:	40005400 	.word	0x40005400
 80022e8:	40023800 	.word	0x40023800
 80022ec:	40020400 	.word	0x40020400

080022f0 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 80022f0:	b510      	push	{r4, lr}
 80022f2:	4604      	mov	r4, r0
 80022f4:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80022f6:	223c      	movs	r2, #60	; 0x3c
 80022f8:	2100      	movs	r1, #0
 80022fa:	a801      	add	r0, sp, #4
 80022fc:	f024 f8ca 	bl	8026494 <memset>
  if(hltdc->Instance==LTDC)
 8002300:	6822      	ldr	r2, [r4, #0]
 8002302:	4b12      	ldr	r3, [pc, #72]	; (800234c <HAL_LTDC_MspInit+0x5c>)
 8002304:	429a      	cmp	r2, r3
 8002306:	d11f      	bne.n	8002348 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002308:	2308      	movs	r3, #8
 800230a:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 800230c:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8002310:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002312:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8002314:	2306      	movs	r3, #6
 8002316:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002318:	f009 fea4 	bl	800c064 <HAL_RCCEx_PeriphCLKConfig>
 800231c:	b108      	cbz	r0, 8002322 <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 800231e:	f7ff feed 	bl	80020fc <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002322:	4b0b      	ldr	r3, [pc, #44]	; (8002350 <HAL_LTDC_MspInit+0x60>)
 8002324:	2200      	movs	r2, #0
 8002326:	9200      	str	r2, [sp, #0]
 8002328:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800232a:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800232e:	6459      	str	r1, [r3, #68]	; 0x44
 8002330:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002332:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8002336:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002338:	2058      	movs	r0, #88	; 0x58
 800233a:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 800233c:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 800233e:	f007 fc81 	bl	8009c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002342:	2058      	movs	r0, #88	; 0x58
 8002344:	f007 fcb0 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002348:	b010      	add	sp, #64	; 0x40
 800234a:	bd10      	pop	{r4, pc}
 800234c:	40016800 	.word	0x40016800
 8002350:	40023800 	.word	0x40023800

08002354 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8002354:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002356:	4604      	mov	r4, r0
 8002358:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800235a:	2214      	movs	r2, #20
 800235c:	2100      	movs	r1, #0
 800235e:	a803      	add	r0, sp, #12
 8002360:	f024 f898 	bl	8026494 <memset>
  if(hqspi->Instance==QUADSPI)
 8002364:	6822      	ldr	r2, [r4, #0]
 8002366:	4b24      	ldr	r3, [pc, #144]	; (80023f8 <HAL_QSPI_MspInit+0xa4>)
 8002368:	429a      	cmp	r2, r3
 800236a:	d142      	bne.n	80023f2 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 800236c:	4b23      	ldr	r3, [pc, #140]	; (80023fc <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800236e:	4824      	ldr	r0, [pc, #144]	; (8002400 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002370:	2400      	movs	r4, #0
 8002372:	9400      	str	r4, [sp, #0]
 8002374:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002376:	f042 0202 	orr.w	r2, r2, #2
 800237a:	639a      	str	r2, [r3, #56]	; 0x38
 800237c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800237e:	f002 0202 	and.w	r2, r2, #2
 8002382:	9200      	str	r2, [sp, #0]
 8002384:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002386:	9401      	str	r4, [sp, #4]
 8002388:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800238a:	f042 0202 	orr.w	r2, r2, #2
 800238e:	631a      	str	r2, [r3, #48]	; 0x30
 8002390:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002392:	f002 0202 	and.w	r2, r2, #2
 8002396:	9201      	str	r2, [sp, #4]
 8002398:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800239a:	9402      	str	r4, [sp, #8]
 800239c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800239e:	f042 0220 	orr.w	r2, r2, #32
 80023a2:	631a      	str	r2, [r3, #48]	; 0x30
 80023a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023a6:	f003 0320 	and.w	r3, r3, #32
 80023aa:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023ac:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80023ae:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80023b0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80023b2:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023b4:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023b6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023b8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80023bc:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80023c0:	f008 fa76 	bl	800a8b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 80023c4:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023c8:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023cc:	480d      	ldr	r0, [pc, #52]	; (8002404 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 80023ce:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023d0:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 80023d2:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023d4:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023d8:	f008 fa6a 	bl	800a8b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 80023dc:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e0:	4808      	ldr	r0, [pc, #32]	; (8002404 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 80023e2:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023e4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80023e6:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80023ea:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80023ee:	f008 fa5f 	bl	800a8b0 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 80023f2:	b009      	add	sp, #36	; 0x24
 80023f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80023f6:	bf00      	nop
 80023f8:	a0001000 	.word	0xa0001000
 80023fc:	40023800 	.word	0x40023800
 8002400:	40020400 	.word	0x40020400
 8002404:	40021400 	.word	0x40021400

08002408 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8002408:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 800240a:	6802      	ldr	r2, [r0, #0]
 800240c:	4b09      	ldr	r3, [pc, #36]	; (8002434 <HAL_QSPI_MspDeInit+0x2c>)
 800240e:	429a      	cmp	r2, r3
 8002410:	d10f      	bne.n	8002432 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8002412:	4a09      	ldr	r2, [pc, #36]	; (8002438 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8002414:	4809      	ldr	r0, [pc, #36]	; (800243c <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8002416:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002418:	f023 0302 	bic.w	r3, r3, #2
 800241c:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 800241e:	2140      	movs	r1, #64	; 0x40
 8002420:	f008 fb2c 	bl	800aa7c <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8002424:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8002428:	4805      	ldr	r0, [pc, #20]	; (8002440 <HAL_QSPI_MspDeInit+0x38>)
 800242a:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 800242e:	f008 bb25 	b.w	800aa7c <HAL_GPIO_DeInit>
}
 8002432:	bd08      	pop	{r3, pc}
 8002434:	a0001000 	.word	0xa0001000
 8002438:	40023800 	.word	0x40023800
 800243c:	40020400 	.word	0x40020400
 8002440:	40021400 	.word	0x40021400

08002444 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002444:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002446:	4604      	mov	r4, r0
 8002448:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800244a:	2214      	movs	r2, #20
 800244c:	2100      	movs	r1, #0
 800244e:	a803      	add	r0, sp, #12
 8002450:	f024 f820 	bl	8026494 <memset>
  if(hspi->Instance==SPI2)
 8002454:	6822      	ldr	r2, [r4, #0]
 8002456:	4b1e      	ldr	r3, [pc, #120]	; (80024d0 <HAL_SPI_MspInit+0x8c>)
 8002458:	429a      	cmp	r2, r3
 800245a:	d137      	bne.n	80024cc <HAL_SPI_MspInit+0x88>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 800245c:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8002460:	2400      	movs	r4, #0
 8002462:	9400      	str	r4, [sp, #0]
 8002464:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002466:	481b      	ldr	r0, [pc, #108]	; (80024d4 <HAL_SPI_MspInit+0x90>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002468:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800246c:	641a      	str	r2, [r3, #64]	; 0x40
 800246e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002470:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002474:	9200      	str	r2, [sp, #0]
 8002476:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002478:	9401      	str	r4, [sp, #4]
 800247a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800247c:	f042 0208 	orr.w	r2, r2, #8
 8002480:	631a      	str	r2, [r3, #48]	; 0x30
 8002482:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002484:	f002 0208 	and.w	r2, r2, #8
 8002488:	9201      	str	r2, [sp, #4]
 800248a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800248c:	9402      	str	r4, [sp, #8]
 800248e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002490:	f042 0202 	orr.w	r2, r2, #2
 8002494:	631a      	str	r2, [r3, #48]	; 0x30
 8002496:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002498:	f003 0302 	and.w	r3, r3, #2
 800249c:	9302      	str	r3, [sp, #8]
 800249e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024a0:	2702      	movs	r7, #2
 80024a2:	2308      	movs	r3, #8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80024a4:	2603      	movs	r6, #3
 80024a6:	2505      	movs	r5, #5
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024a8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024aa:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80024ae:	e9cd 6506 	strd	r6, r5, [sp, #24]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80024b2:	f008 f9fd 	bl	800a8b0 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 80024b6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ba:	4807      	ldr	r0, [pc, #28]	; (80024d8 <HAL_SPI_MspInit+0x94>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 80024bc:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024be:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024c0:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80024c4:	e9cd 4605 	strd	r4, r6, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024c8:	f008 f9f2 	bl	800a8b0 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 80024cc:	b009      	add	sp, #36	; 0x24
 80024ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024d0:	40003800 	.word	0x40003800
 80024d4:	40020c00 	.word	0x40020c00
 80024d8:	40020400 	.word	0x40020400

080024dc <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80024dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80024de:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80024e0:	2300      	movs	r3, #0
 80024e2:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80024e4:	4b30      	ldr	r3, [pc, #192]	; (80025a8 <HAL_SDRAM_MspInit+0xcc>)
 80024e6:	681c      	ldr	r4, [r3, #0]
 80024e8:	2c00      	cmp	r4, #0
 80024ea:	d15a      	bne.n	80025a2 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 80024ec:	2201      	movs	r2, #1
 80024ee:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 80024f0:	4b2e      	ldr	r3, [pc, #184]	; (80025ac <HAL_SDRAM_MspInit+0xd0>)
 80024f2:	9400      	str	r4, [sp, #0]
 80024f4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80024f6:	482e      	ldr	r0, [pc, #184]	; (80025b0 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80024f8:	f042 0201 	orr.w	r2, r2, #1
 80024fc:	639a      	str	r2, [r3, #56]	; 0x38
 80024fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002500:	f003 0301 	and.w	r3, r3, #1
 8002504:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002506:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002508:	2603      	movs	r6, #3
 800250a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 800250c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800250e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002510:	f64f 7383 	movw	r3, #65411	; 0xff83
 8002514:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002518:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800251c:	f008 f9c8 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002520:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002524:	4823      	ldr	r0, [pc, #140]	; (80025b4 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002526:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002528:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800252a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800252e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002532:	f008 f9bd 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002536:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800253a:	481f      	ldr	r0, [pc, #124]	; (80025b8 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800253c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800253e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002540:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002544:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002548:	f008 f9b2 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 800254c:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002550:	481a      	ldr	r0, [pc, #104]	; (80025bc <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002552:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002554:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002556:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800255a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 800255e:	f008 f9a7 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002562:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002566:	4816      	ldr	r0, [pc, #88]	; (80025c0 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002568:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800256a:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800256c:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002570:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002574:	f008 f99c 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002578:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800257c:	4811      	ldr	r0, [pc, #68]	; (80025c4 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800257e:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002580:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002582:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002586:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800258a:	f008 f991 	bl	800a8b0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 800258e:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002590:	480d      	ldr	r0, [pc, #52]	; (80025c8 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002592:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002594:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002596:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800259a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800259e:	f008 f987 	bl	800a8b0 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 80025a2:	b007      	add	sp, #28
 80025a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025a6:	bf00      	nop
 80025a8:	20005d70 	.word	0x20005d70
 80025ac:	40023800 	.word	0x40023800
 80025b0:	40021000 	.word	0x40021000
 80025b4:	40021800 	.word	0x40021800
 80025b8:	40020c00 	.word	0x40020c00
 80025bc:	40022000 	.word	0x40022000
 80025c0:	40021400 	.word	0x40021400
 80025c4:	40021c00 	.word	0x40021c00
 80025c8:	40020800 	.word	0x40020800

080025cc <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 80025cc:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 80025ce:	4b17      	ldr	r3, [pc, #92]	; (800262c <HAL_SDRAM_MspDeInit+0x60>)
 80025d0:	681a      	ldr	r2, [r3, #0]
 80025d2:	bb52      	cbnz	r2, 800262a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 80025d4:	2201      	movs	r2, #1
 80025d6:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 80025d8:	4a15      	ldr	r2, [pc, #84]	; (8002630 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 80025da:	4816      	ldr	r0, [pc, #88]	; (8002634 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 80025dc:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80025de:	f023 0301 	bic.w	r3, r3, #1
 80025e2:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 80025e4:	f64f 7183 	movw	r1, #65411	; 0xff83
 80025e8:	f008 fa48 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80025ec:	4812      	ldr	r0, [pc, #72]	; (8002638 <HAL_SDRAM_MspDeInit+0x6c>)
 80025ee:	f248 1133 	movw	r1, #33075	; 0x8133
 80025f2:	f008 fa43 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80025f6:	4811      	ldr	r0, [pc, #68]	; (800263c <HAL_SDRAM_MspDeInit+0x70>)
 80025f8:	f24c 7103 	movw	r1, #50947	; 0xc703
 80025fc:	f008 fa3e 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002600:	480f      	ldr	r0, [pc, #60]	; (8002640 <HAL_SDRAM_MspDeInit+0x74>)
 8002602:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8002606:	f008 fa39 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800260a:	480e      	ldr	r0, [pc, #56]	; (8002644 <HAL_SDRAM_MspDeInit+0x78>)
 800260c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8002610:	f008 fa34 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002614:	480c      	ldr	r0, [pc, #48]	; (8002648 <HAL_SDRAM_MspDeInit+0x7c>)
 8002616:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 800261a:	f008 fa2f 	bl	800aa7c <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 800261e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8002622:	480a      	ldr	r0, [pc, #40]	; (800264c <HAL_SDRAM_MspDeInit+0x80>)
 8002624:	210d      	movs	r1, #13
 8002626:	f008 ba29 	b.w	800aa7c <HAL_GPIO_DeInit>
}
 800262a:	bd08      	pop	{r3, pc}
 800262c:	20005d6c 	.word	0x20005d6c
 8002630:	40023800 	.word	0x40023800
 8002634:	40021000 	.word	0x40021000
 8002638:	40021800 	.word	0x40021800
 800263c:	40020c00 	.word	0x40020c00
 8002640:	40022000 	.word	0x40022000
 8002644:	40021400 	.word	0x40021400
 8002648:	40021c00 	.word	0x40021c00
 800264c:	40020800 	.word	0x40020800

08002650 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002650:	b570      	push	{r4, r5, r6, lr}
 8002652:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002654:	2300      	movs	r3, #0
 8002656:	9302      	str	r3, [sp, #8]
 8002658:	4b20      	ldr	r3, [pc, #128]	; (80026dc <HAL_InitTick+0x8c>)
 800265a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800265c:	f042 0210 	orr.w	r2, r2, #16
 8002660:	641a      	str	r2, [r3, #64]	; 0x40
 8002662:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002664:	f003 0310 	and.w	r3, r3, #16
 8002668:	9302      	str	r3, [sp, #8]
{
 800266a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800266c:	a901      	add	r1, sp, #4
 800266e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002670:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002672:	f009 fcd9 	bl	800c028 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002676:	9b06      	ldr	r3, [sp, #24]
 8002678:	bb4b      	cbnz	r3, 80026ce <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800267a:	f009 fcc5 	bl	800c008 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800267e:	4e18      	ldr	r6, [pc, #96]	; (80026e0 <HAL_InitTick+0x90>)
 8002680:	4b18      	ldr	r3, [pc, #96]	; (80026e4 <HAL_InitTick+0x94>)
 8002682:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002684:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002688:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800268a:	4b17      	ldr	r3, [pc, #92]	; (80026e8 <HAL_InitTick+0x98>)
 800268c:	fbb0 f3f3 	udiv	r3, r0, r3
 8002690:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002692:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002694:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002696:	2300      	movs	r3, #0
 8002698:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800269a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800269c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800269e:	f00a fa05 	bl	800caac <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 80026a2:	4604      	mov	r4, r0
 80026a4:	b980      	cbnz	r0, 80026c8 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 80026a6:	4630      	mov	r0, r6
 80026a8:	f00a f8ba 	bl	800c820 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 80026ac:	4604      	mov	r4, r0
 80026ae:	b958      	cbnz	r0, 80026c8 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80026b0:	2036      	movs	r0, #54	; 0x36
 80026b2:	f007 faf9 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80026b6:	2d0f      	cmp	r5, #15
 80026b8:	d80d      	bhi.n	80026d6 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80026ba:	4622      	mov	r2, r4
 80026bc:	4629      	mov	r1, r5
 80026be:	2036      	movs	r0, #54	; 0x36
 80026c0:	f007 fac0 	bl	8009c44 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80026c4:	4b09      	ldr	r3, [pc, #36]	; (80026ec <HAL_InitTick+0x9c>)
 80026c6:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80026c8:	4620      	mov	r0, r4
 80026ca:	b008      	add	sp, #32
 80026cc:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80026ce:	f009 fc9b 	bl	800c008 <HAL_RCC_GetPCLK1Freq>
 80026d2:	0040      	lsls	r0, r0, #1
 80026d4:	e7d3      	b.n	800267e <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 80026d6:	2401      	movs	r4, #1
 80026d8:	e7f6      	b.n	80026c8 <HAL_InitTick+0x78>
 80026da:	bf00      	nop
 80026dc:	40023800 	.word	0x40023800
 80026e0:	20005d74 	.word	0x20005d74
 80026e4:	40001000 	.word	0x40001000
 80026e8:	000f4240 	.word	0x000f4240
 80026ec:	20000058 	.word	0x20000058

080026f0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80026f0:	4770      	bx	lr

080026f2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80026f2:	e7fe      	b.n	80026f2 <HardFault_Handler>

080026f4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80026f4:	e7fe      	b.n	80026f4 <MemManage_Handler>

080026f6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80026f6:	e7fe      	b.n	80026f6 <BusFault_Handler>

080026f8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80026f8:	e7fe      	b.n	80026f8 <UsageFault_Handler>

080026fa <DebugMon_Handler>:
 80026fa:	4770      	bx	lr

080026fc <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80026fc:	4801      	ldr	r0, [pc, #4]	; (8002704 <TIM6_DAC_IRQHandler+0x8>)
 80026fe:	f00a b8cd 	b.w	800c89c <HAL_TIM_IRQHandler>
 8002702:	bf00      	nop
 8002704:	20005d74 	.word	0x20005d74

08002708 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002708:	4801      	ldr	r0, [pc, #4]	; (8002710 <LTDC_IRQHandler+0x8>)
 800270a:	f008 bf9c 	b.w	800b646 <HAL_LTDC_IRQHandler>
 800270e:	bf00      	nop
 8002710:	20005be8 	.word	0x20005be8

08002714 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002714:	4801      	ldr	r0, [pc, #4]	; (800271c <DMA2D_IRQHandler+0x8>)
 8002716:	f007 bc2b 	b.w	8009f70 <HAL_DMA2D_IRQHandler>
 800271a:	bf00      	nop
 800271c:	20005b38 	.word	0x20005b38

08002720 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8002720:	4801      	ldr	r0, [pc, #4]	; (8002728 <DSI_IRQHandler+0x8>)
 8002722:	f007 be2c 	b.w	800a37e <HAL_DSI_IRQHandler>
 8002726:	bf00      	nop
 8002728:	20005b78 	.word	0x20005b78

0800272c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 800272c:	2001      	movs	r0, #1
 800272e:	4770      	bx	lr

08002730 <_kill>:

int _kill(int pid, int sig)
{
 8002730:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002732:	f023 fe55 	bl	80263e0 <__errno>
 8002736:	2316      	movs	r3, #22
 8002738:	6003      	str	r3, [r0, #0]
	return -1;
}
 800273a:	f04f 30ff 	mov.w	r0, #4294967295
 800273e:	bd08      	pop	{r3, pc}

08002740 <_exit>:

void _exit (int status)
{
 8002740:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002742:	f023 fe4d 	bl	80263e0 <__errno>
 8002746:	2316      	movs	r3, #22
 8002748:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 800274a:	e7fe      	b.n	800274a <_exit+0xa>

0800274c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800274c:	b570      	push	{r4, r5, r6, lr}
 800274e:	460d      	mov	r5, r1
 8002750:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002752:	460e      	mov	r6, r1
 8002754:	1b73      	subs	r3, r6, r5
 8002756:	429c      	cmp	r4, r3
 8002758:	dc01      	bgt.n	800275e <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 800275a:	4620      	mov	r0, r4
 800275c:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800275e:	f3af 8000 	nop.w
 8002762:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002766:	e7f5      	b.n	8002754 <_read+0x8>

08002768 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002768:	b570      	push	{r4, r5, r6, lr}
 800276a:	460d      	mov	r5, r1
 800276c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800276e:	460e      	mov	r6, r1
 8002770:	1b73      	subs	r3, r6, r5
 8002772:	429c      	cmp	r4, r3
 8002774:	dc01      	bgt.n	800277a <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002776:	4620      	mov	r0, r4
 8002778:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 800277a:	f816 0b01 	ldrb.w	r0, [r6], #1
 800277e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002782:	e7f5      	b.n	8002770 <_write+0x8>

08002784 <_close>:

int _close(int file)
{
	return -1;
}
 8002784:	f04f 30ff 	mov.w	r0, #4294967295
 8002788:	4770      	bx	lr

0800278a <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 800278a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800278e:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002790:	2000      	movs	r0, #0
 8002792:	4770      	bx	lr

08002794 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002794:	2001      	movs	r0, #1
 8002796:	4770      	bx	lr

08002798 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002798:	2000      	movs	r0, #0
 800279a:	4770      	bx	lr

0800279c <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 800279c:	4a0a      	ldr	r2, [pc, #40]	; (80027c8 <_sbrk+0x2c>)
 800279e:	6811      	ldr	r1, [r2, #0]
{
 80027a0:	b508      	push	{r3, lr}
 80027a2:	4603      	mov	r3, r0
	if (heap_end == 0)
 80027a4:	b909      	cbnz	r1, 80027aa <_sbrk+0xe>
		heap_end = &end;
 80027a6:	4909      	ldr	r1, [pc, #36]	; (80027cc <_sbrk+0x30>)
 80027a8:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80027aa:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80027ac:	4669      	mov	r1, sp
 80027ae:	4403      	add	r3, r0
 80027b0:	428b      	cmp	r3, r1
 80027b2:	d906      	bls.n	80027c2 <_sbrk+0x26>
	{
		errno = ENOMEM;
 80027b4:	f023 fe14 	bl	80263e0 <__errno>
 80027b8:	230c      	movs	r3, #12
 80027ba:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80027bc:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80027c0:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80027c2:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80027c4:	e7fc      	b.n	80027c0 <_sbrk+0x24>
 80027c6:	bf00      	nop
 80027c8:	20005dbc 	.word	0x20005dbc
 80027cc:	2000fa18 	.word	0x2000fa18

080027d0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId PRIMARYDRIVERINFO = 7;   // verdana_180_4bpp
    static const touchgfx::FontId SECONDARYDRIVERINFO = 8; // verdana_57_4bpp
    static const uint16_t NUMBER_OF_FONTS = 9;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80027d0:	4770      	bx	lr

080027d2 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80027d2:	b508      	push	{r3, lr}
    switch (typography)
 80027d4:	2909      	cmp	r1, #9
 80027d6:	d82a      	bhi.n	800282e <_ZN23ApplicationFontProvider7getFontEt+0x5c>
 80027d8:	e8df f001 	tbb	[pc, r1]
 80027dc:	0d090519 	.word	0x0d090519
 80027e0:	1d191511 	.word	0x1d191511
 80027e4:	2521      	.short	0x2521
    case Typography::LARGE:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80027e6:	f005 fb7b 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 80027ea:	6840      	ldr	r0, [r0, #4]
        // verdana_57_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
    default:
        return 0;
    }
}
 80027ec:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80027ee:	f005 fb77 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 80027f2:	6880      	ldr	r0, [r0, #8]
 80027f4:	e7fa      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 80027f6:	f005 fb73 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 80027fa:	68c0      	ldr	r0, [r0, #12]
 80027fc:	e7f6      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 80027fe:	f005 fb6f 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 8002802:	6900      	ldr	r0, [r0, #16]
 8002804:	e7f2      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002806:	f005 fb6b 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 800280a:	6940      	ldr	r0, [r0, #20]
 800280c:	e7ee      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800280e:	f005 fb67 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 8002812:	6800      	ldr	r0, [r0, #0]
 8002814:	e7ea      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8002816:	f005 fb63 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 800281a:	6980      	ldr	r0, [r0, #24]
 800281c:	e7e6      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
 800281e:	f005 fb5f 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 8002822:	69c0      	ldr	r0, [r0, #28]
 8002824:	e7e2      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
 8002826:	f005 fb5b 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 800282a:	6a00      	ldr	r0, [r0, #32]
 800282c:	e7de      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 800282e:	2000      	movs	r0, #0
 8002830:	e7dc      	b.n	80027ec <_ZN23ApplicationFontProvider7getFontEt+0x1a>

08002832 <_ZN23ApplicationFontProviderD0Ev>:
 8002832:	b510      	push	{r4, lr}
 8002834:	2104      	movs	r1, #4
 8002836:	4604      	mov	r4, r0
 8002838:	f023 fd72 	bl	8026320 <_ZdlPvj>
 800283c:	4620      	mov	r0, r4
 800283e:	bd10      	pop	{r4, pc}

08002840 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002840:	4800      	ldr	r0, [pc, #0]	; (8002844 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002842:	4770      	bx	lr
 8002844:	08027e3c 	.word	0x08027e3c

08002848 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002848:	201b      	movs	r0, #27
 800284a:	4770      	bx	lr

0800284c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800284c:	b513      	push	{r0, r1, r4, lr}
 800284e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002850:	b151      	cbz	r1, 8002868 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002852:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002854:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002856:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800285a:	aa01      	add	r2, sp, #4
 800285c:	689c      	ldr	r4, [r3, #8]
 800285e:	f10d 0303 	add.w	r3, sp, #3
 8002862:	47a0      	blx	r4
        return glyph;
    }
 8002864:	b002      	add	sp, #8
 8002866:	bd10      	pop	{r4, pc}
            return 0;
 8002868:	4608      	mov	r0, r1
 800286a:	e7fb      	b.n	8002864 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800286c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800286c:	89c0      	ldrh	r0, [r0, #14]
 800286e:	4770      	bx	lr

08002870 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002870:	8a00      	ldrh	r0, [r0, #16]
 8002872:	4770      	bx	lr

08002874 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002874:	88c0      	ldrh	r0, [r0, #6]
 8002876:	4770      	bx	lr

08002878 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002878:	8880      	ldrh	r0, [r0, #4]
 800287a:	4770      	bx	lr

0800287c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800287c:	7a80      	ldrb	r0, [r0, #10]
    }
 800287e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002882:	4770      	bx	lr

08002884 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002884:	7a80      	ldrb	r0, [r0, #10]
    }
 8002886:	09c0      	lsrs	r0, r0, #7
 8002888:	4770      	bx	lr

0800288a <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800288a:	4770      	bx	lr

0800288c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800288c:	4770      	bx	lr

0800288e <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 800288e:	4770      	bx	lr

08002890 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002890:	4770      	bx	lr

08002892 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002892:	4770      	bx	lr

08002894 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002894:	4770      	bx	lr

08002896 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002896:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002898:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800289a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800289c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800289e:	466d      	mov	r5, sp
 80028a0:	4601      	mov	r1, r0
 80028a2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 80028a6:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028a8:	4628      	mov	r0, r5
 80028aa:	4798      	blx	r3
 80028ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028b0:	343c      	adds	r4, #60	; 0x3c
 80028b2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028b6:	b005      	add	sp, #20
 80028b8:	bd30      	pop	{r4, r5, pc}

080028ba <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 80028ba:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 80028bc:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 80028be:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 80028c0:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 80028c2:	466d      	mov	r5, sp
 80028c4:	4601      	mov	r1, r0
 80028c6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 80028ca:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 80028cc:	4628      	mov	r0, r5
 80028ce:	4798      	blx	r3
 80028d0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80028d4:	343c      	adds	r4, #60	; 0x3c
 80028d6:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 80028da:	b005      	add	sp, #20
 80028dc:	bd30      	pop	{r4, r5, pc}

080028de <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 80028de:	2200      	movs	r2, #0
 80028e0:	8002      	strh	r2, [r0, #0]
 80028e2:	8042      	strh	r2, [r0, #2]
 80028e4:	8082      	strh	r2, [r0, #4]
 80028e6:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 80028e8:	4770      	bx	lr

080028ea <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80028ea:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 80028ee:	4770      	bx	lr

080028f0 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028f0:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 80028f2:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028f4:	4604      	mov	r4, r0
        setX(x);
 80028f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80028f8:	4615      	mov	r5, r2
        setX(x);
 80028fa:	4798      	blx	r3
        setBaselineY(baselineY);
 80028fc:	6823      	ldr	r3, [r4, #0]
 80028fe:	4629      	mov	r1, r5
 8002900:	4620      	mov	r0, r4
 8002902:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002908:	4718      	bx	r3

0800290a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800290a:	2000      	movs	r0, #0
 800290c:	4770      	bx	lr

0800290e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800290e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002910:	4770      	bx	lr

08002912 <_ZN25CompetitionScreenViewBaseD1Ev>:
}

CompetitionScreenViewBase::~CompetitionScreenViewBase()
{

}
 8002912:	4770      	bx	lr

08002914 <_ZN25CompetitionScreenViewBase11setupScreenEv>:

void CompetitionScreenViewBase::setupScreen()
{

}
 8002914:	4770      	bx	lr

08002916 <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002916:	4770      	bx	lr

08002918 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002918:	4770      	bx	lr

0800291a <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 800291a:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 800291c:	68c2      	ldr	r2, [r0, #12]
 800291e:	6844      	ldr	r4, [r0, #4]
 8002920:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002922:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002924:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002928:	07d2      	lsls	r2, r2, #31
 800292a:	bf48      	it	mi
 800292c:	5962      	ldrmi	r2, [r4, r5]
 800292e:	689b      	ldr	r3, [r3, #8]
    }
 8002930:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002932:	bf48      	it	mi
 8002934:	58d3      	ldrmi	r3, [r2, r3]
 8002936:	4718      	bx	r3

08002938 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002938:	6843      	ldr	r3, [r0, #4]
 800293a:	b12b      	cbz	r3, 8002948 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800293c:	6883      	ldr	r3, [r0, #8]
 800293e:	b92b      	cbnz	r3, 800294c <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002940:	68c0      	ldr	r0, [r0, #12]
 8002942:	f000 0001 	and.w	r0, r0, #1
 8002946:	4770      	bx	lr
 8002948:	4618      	mov	r0, r3
 800294a:	4770      	bx	lr
 800294c:	2001      	movs	r0, #1
    }
 800294e:	4770      	bx	lr

08002950 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002950:	b510      	push	{r4, lr}
    }
 8002952:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002954:	4604      	mov	r4, r0
    }
 8002956:	f023 fce3 	bl	8026320 <_ZdlPvj>
 800295a:	4620      	mov	r0, r4
 800295c:	bd10      	pop	{r4, pc}

0800295e <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800295e:	b510      	push	{r4, lr}
 8002960:	214c      	movs	r1, #76	; 0x4c
 8002962:	4604      	mov	r4, r0
 8002964:	f023 fcdc 	bl	8026320 <_ZdlPvj>
 8002968:	4620      	mov	r0, r4
 800296a:	bd10      	pop	{r4, pc}

0800296c <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800296c:	b510      	push	{r4, lr}
 800296e:	2110      	movs	r1, #16
 8002970:	4604      	mov	r4, r0
 8002972:	f023 fcd5 	bl	8026320 <_ZdlPvj>
 8002976:	4620      	mov	r0, r4
 8002978:	bd10      	pop	{r4, pc}

0800297a <_ZN25CompetitionScreenViewBaseD0Ev>:
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 800297a:	b510      	push	{r4, lr}
}
 800297c:	f44f 71a8 	mov.w	r1, #336	; 0x150
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 8002980:	4604      	mov	r4, r0
}
 8002982:	f023 fccd 	bl	8026320 <_ZdlPvj>
 8002986:	4620      	mov	r0, r4
 8002988:	bd10      	pop	{r4, pc}

0800298a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 800298a:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 800298c:	f7ff f81f 	bl	80019ce <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002990:	bd08      	pop	{r3, pc}
	...

08002994 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002994:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002996:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002998:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800299a:	4b12      	ldr	r3, [pc, #72]	; (80029e4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 800299c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 800299e:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029a0:	b28d      	uxth	r5, r1
 80029a2:	b92b      	cbnz	r3, 80029b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80029a4:	4b10      	ldr	r3, [pc, #64]	; (80029e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80029a6:	4a11      	ldr	r2, [pc, #68]	; (80029ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029a8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029aa:	4811      	ldr	r0, [pc, #68]	; (80029f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80029ac:	f023 fce6 	bl	802637c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80029b0:	4910      	ldr	r1, [pc, #64]	; (80029f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80029b2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80029b4:	8809      	ldrh	r1, [r1, #0]
 80029b6:	4291      	cmp	r1, r2
 80029b8:	d803      	bhi.n	80029c2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80029ba:	4b0f      	ldr	r3, [pc, #60]	; (80029f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80029bc:	4a0b      	ldr	r2, [pc, #44]	; (80029ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80029be:	216d      	movs	r1, #109	; 0x6d
 80029c0:	e7f3      	b.n	80029aa <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80029c2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80029c6:	4b0d      	ldr	r3, [pc, #52]	; (80029fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80029ce:	6803      	ldr	r3, [r0, #0]
 80029d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d2:	4798      	blx	r3
 80029d4:	1a28      	subs	r0, r5, r0
 80029d6:	b201      	sxth	r1, r0
 80029d8:	4633      	mov	r3, r6
 80029da:	4620      	mov	r0, r4
    }
 80029dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80029e0:	4718      	bx	r3
 80029e2:	bf00      	nop
 80029e4:	2000ef74 	.word	0x2000ef74
 80029e8:	08028058 	.word	0x08028058
 80029ec:	0802809a 	.word	0x0802809a
 80029f0:	080280d5 	.word	0x080280d5
 80029f4:	2000ef78 	.word	0x2000ef78
 80029f8:	0802811c 	.word	0x0802811c
 80029fc:	2000ef7c 	.word	0x2000ef7c

08002a00 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CompetitionScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002a00:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002a02:	f100 03a0 	add.w	r3, r0, #160	; 0xa0
 8002a06:	4299      	cmp	r1, r3
{
 8002a08:	4604      	mov	r4, r0
 8002a0a:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002a0c:	d103      	bne.n	8002a16 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CompetitionScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002a0e:	f012 f8f3 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromCompetitionViewToDriverView
        //When btnNextPage clicked change screen to DriverScreen
        //Go to DriverScreen with screen transition towards East
        application().gotoDriverScreenScreenSlideTransitionEast();
 8002a12:	f001 fdc9 	bl	80045a8 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002a16:	346c      	adds	r4, #108	; 0x6c
 8002a18:	42a5      	cmp	r5, r4
 8002a1a:	d105      	bne.n	8002a28 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002a1c:	f012 f8ec 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromCompetitionScreenToMissionSelect
        //When btnPrevPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards West
        application().gotoMissionSelectScreenSlideTransitionWest();
    }
}
 8002a20:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMissionSelectScreenSlideTransitionWest();
 8002a24:	f001 bd80 	b.w	8004528 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>
}
 8002a28:	bd38      	pop	{r3, r4, r5, pc}

08002a2a <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	f04f 31ff 	mov.w	r1, #4294967295
 8002a30:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002a34:	6082      	str	r2, [r0, #8]
    }
 8002a36:	4770      	bx	lr

08002a38 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002a38:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002a3a:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002a3c:	4604      	mov	r4, r0
        setX(x);
 8002a3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002a40:	4615      	mov	r5, r2
        setX(x);
 8002a42:	4798      	blx	r3
        setY(y);
 8002a44:	6823      	ldr	r3, [r4, #0]
 8002a46:	4629      	mov	r1, r5
 8002a48:	4620      	mov	r0, r4
 8002a4a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002a50:	4718      	bx	r3

08002a52 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002a52:	b570      	push	{r4, r5, r6, lr}
 8002a54:	4604      	mov	r4, r0
 8002a56:	461d      	mov	r5, r3
 8002a58:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002a5c:	f7ff ffec 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002a60:	6823      	ldr	r3, [r4, #0]
 8002a62:	4629      	mov	r1, r5
 8002a64:	4620      	mov	r0, r4
 8002a66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002a68:	4798      	blx	r3
        setHeight(height);
 8002a6a:	6823      	ldr	r3, [r4, #0]
 8002a6c:	4631      	mov	r1, r6
 8002a6e:	4620      	mov	r0, r4
 8002a70:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002a72:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002a76:	4718      	bx	r3

08002a78 <_ZN8touchgfx6WidgetC1Ev>:
 8002a78:	2200      	movs	r2, #0
 8002a7a:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002a7e:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002a82:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002a86:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002a8a:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002a8e:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002a90:	4a01      	ldr	r2, [pc, #4]	; (8002a98 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002a92:	6002      	str	r2, [r0, #0]
 8002a94:	4770      	bx	lr
 8002a96:	bf00      	nop
 8002a98:	080281a0 	.word	0x080281a0

08002a9c <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 8002a9c:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002a9e:	2226      	movs	r2, #38	; 0x26
 8002aa0:	4604      	mov	r4, r0
 8002aa2:	2100      	movs	r1, #0
 8002aa4:	f023 fcf6 	bl	8026494 <memset>
 8002aa8:	4620      	mov	r0, r4
 8002aaa:	f7ff ffe5 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8002aae:	2300      	movs	r3, #0
 8002ab0:	62a3      	str	r3, [r4, #40]	; 0x28
 8002ab2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002ab6:	2301      	movs	r3, #1
 8002ab8:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButton(), up(), down(), alpha(255)
 8002abc:	4b04      	ldr	r3, [pc, #16]	; (8002ad0 <_ZN8touchgfx6ButtonC1Ev+0x34>)
 8002abe:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002ac0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002ac4:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8002ac6:	8623      	strh	r3, [r4, #48]	; 0x30
 8002ac8:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
    {
    }
 8002acc:	4620      	mov	r0, r4
 8002ace:	bd10      	pop	{r4, pc}
 8002ad0:	0802a150 	.word	0x0802a150

08002ad4 <_ZN25CompetitionScreenViewBaseC1Ev>:
CompetitionScreenViewBase::CompetitionScreenViewBase() :
 8002ad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ad8:	4604      	mov	r4, r0
 8002ada:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &CompetitionScreenViewBase::buttonCallbackHandler)
 8002adc:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002ade:	2500      	movs	r5, #0
 8002ae0:	f013 fd0a 	bl	80164f8 <_ZN8touchgfx6ScreenC1Ev>
 8002ae4:	4b69      	ldr	r3, [pc, #420]	; (8002c8c <_ZN25CompetitionScreenViewBaseC1Ev+0x1b8>)
 8002ae6:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ae8:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002aec:	4629      	mov	r1, r5
 8002aee:	2226      	movs	r2, #38	; 0x26
 8002af0:	4638      	mov	r0, r7
 8002af2:	f023 fccf 	bl	8026494 <memset>
 8002af6:	4638      	mov	r0, r7
 8002af8:	f7ff ffbe 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8002afc:	4b64      	ldr	r3, [pc, #400]	; (8002c90 <_ZN25CompetitionScreenViewBaseC1Ev+0x1bc>)
 8002afe:	6423      	str	r3, [r4, #64]	; 0x40
 8002b00:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002b04:	23ff      	movs	r3, #255	; 0xff
 8002b06:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002b0a:	f104 09a0 	add.w	r9, r4, #160	; 0xa0
        : color(col)
 8002b0e:	66a5      	str	r5, [r4, #104]	; 0x68
 8002b10:	4650      	mov	r0, sl
 8002b12:	f7ff ffc3 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 8002b16:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 8002b1a:	4648      	mov	r0, r9
 8002b1c:	f7ff ffbe 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002b20:	4629      	mov	r1, r5
 8002b22:	2226      	movs	r2, #38	; 0x26
 8002b24:	4630      	mov	r0, r6
 8002b26:	f023 fcb5 	bl	8026494 <memset>
 8002b2a:	4630      	mov	r0, r6
 8002b2c:	f7ff ffa4 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002b30:	4b58      	ldr	r3, [pc, #352]	; (8002c94 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002b32:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8002b36:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002b3a:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8002b3e:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002b42:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        : TextAreaWithWildcardBase(), wc1(0)
 8002b46:	4b54      	ldr	r3, [pc, #336]	; (8002c98 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c4>)
 8002b48:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        : pobject(pObject), pmemfun(pmemfun_1)
 8002b4c:	4b53      	ldr	r3, [pc, #332]	; (8002c9c <_ZN25CompetitionScreenViewBaseC1Ev+0x1c8>)
 8002b4e:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8002b52:	e9c4 3450 	strd	r3, r4, [r4, #320]	; 0x140
 8002b56:	4b52      	ldr	r3, [pc, #328]	; (8002ca0 <_ZN25CompetitionScreenViewBaseC1Ev+0x1cc>)
 8002b58:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
 8002b5c:	e9c4 3552 	strd	r3, r5, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002b60:	f04f 3bff 	mov.w	fp, #4294967295
    __background.setPosition(0, 0, 800, 480);
 8002b64:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002b68:	462a      	mov	r2, r5
 8002b6a:	4629      	mov	r1, r5
 8002b6c:	4638      	mov	r0, r7
              text(0)
 8002b6e:	e9c4 b545 	strd	fp, r5, [r4, #276]	; 0x114
 8002b72:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 8002b76:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002b7a:	9300      	str	r3, [sp, #0]
 8002b7c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002b80:	f7ff ff67 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002b84:	f104 0804 	add.w	r8, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002b88:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002b8c:	66a3      	str	r3, [r4, #104]	; 0x68
 8002b8e:	4639      	mov	r1, r7
 8002b90:	4640      	mov	r0, r8
 8002b92:	f00c fc95 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8002b96:	f240 129f 	movw	r2, #415	; 0x19f
 8002b9a:	2111      	movs	r1, #17
 8002b9c:	4650      	mov	r0, sl
 8002b9e:	f7ff ff4b 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 8002ba2:	f504 77a0 	add.w	r7, r4, #320	; 0x140
 8002ba6:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 8002ba8:	aa08      	add	r2, sp, #32
 8002baa:	a907      	add	r1, sp, #28
 8002bac:	4650      	mov	r0, sl
 8002bae:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002bb2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002bb6:	f00f f951 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002bba:	4651      	mov	r1, sl
 8002bbc:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002bbe:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8002bc2:	f00c fc7d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 8002bc6:	f240 129f 	movw	r2, #415	; 0x19f
 8002bca:	f240 21df 	movw	r1, #735	; 0x2df
 8002bce:	4648      	mov	r0, r9
 8002bd0:	f7ff ff32 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8002bd4:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8002bd6:	aa08      	add	r2, sp, #32
 8002bd8:	a907      	add	r1, sp, #28
 8002bda:	4648      	mov	r0, r9
 8002bdc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002be0:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002be4:	f00f f93a 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002be8:	4649      	mov	r1, r9
 8002bea:	4640      	mov	r0, r8
 8002bec:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
 8002bf0:	f00c fc66 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtMission.setPosition(0, 158, 800, 165);
 8002bf4:	23a5      	movs	r3, #165	; 0xa5
 8002bf6:	229e      	movs	r2, #158	; 0x9e
 8002bf8:	4629      	mov	r1, r5
 8002bfa:	9300      	str	r3, [sp, #0]
 8002bfc:	4630      	mov	r0, r6
 8002bfe:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002c02:	f7ff ff26 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002c06:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
        linespace = space;
 8002c0a:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 8002c0e:	ad02      	add	r5, sp, #8
 8002c10:	4628      	mov	r0, r5
 8002c12:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002c16:	f8c4 b104 	str.w	fp, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 8002c1a:	4631      	mov	r1, r6
 8002c1c:	4798      	blx	r3
 8002c1e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c22:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8002c26:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c2a:	4b1e      	ldr	r3, [pc, #120]	; (8002ca4 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d0>)
 8002c2c:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtMissionBuffer, TXTMISSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FAAC).getText());
 8002c2e:	f504 7590 	add.w	r5, r4, #288	; 0x120
 8002c32:	b92b      	cbnz	r3, 8002c40 <_ZN25CompetitionScreenViewBaseC1Ev+0x16c>
 8002c34:	4b1c      	ldr	r3, [pc, #112]	; (8002ca8 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d4>)
 8002c36:	4a1d      	ldr	r2, [pc, #116]	; (8002cac <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002c38:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c3a:	481d      	ldr	r0, [pc, #116]	; (8002cb0 <_ZN25CompetitionScreenViewBaseC1Ev+0x1dc>)
 8002c3c:	f023 fb9e 	bl	802637c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c40:	4b1c      	ldr	r3, [pc, #112]	; (8002cb4 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c42:	881b      	ldrh	r3, [r3, #0]
 8002c44:	2b40      	cmp	r3, #64	; 0x40
 8002c46:	d803      	bhi.n	8002c50 <_ZN25CompetitionScreenViewBaseC1Ev+0x17c>
 8002c48:	4b1b      	ldr	r3, [pc, #108]	; (8002cb8 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e4>)
 8002c4a:	4a18      	ldr	r2, [pc, #96]	; (8002cac <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002c4c:	2161      	movs	r1, #97	; 0x61
 8002c4e:	e7f4      	b.n	8002c3a <_ZN25CompetitionScreenViewBaseC1Ev+0x166>
        return texts->getText(typedTextId);
 8002c50:	4b1a      	ldr	r3, [pc, #104]	; (8002cbc <_ZN25CompetitionScreenViewBaseC1Ev+0x1e8>)
 8002c52:	2140      	movs	r1, #64	; 0x40
 8002c54:	6818      	ldr	r0, [r3, #0]
 8002c56:	f005 f933 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8002c5a:	4a19      	ldr	r2, [pc, #100]	; (8002cc0 <_ZN25CompetitionScreenViewBaseC1Ev+0x1ec>)
 8002c5c:	4603      	mov	r3, r0
 8002c5e:	210f      	movs	r1, #15
 8002c60:	4628      	mov	r0, r5
 8002c62:	f015 f939 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002c66:	4b0b      	ldr	r3, [pc, #44]	; (8002c94 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002c68:	9308      	str	r3, [sp, #32]
    txtMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ZY1));
 8002c6a:	a908      	add	r1, sp, #32
 8002c6c:	2341      	movs	r3, #65	; 0x41
 8002c6e:	4630      	mov	r0, r6
        wc1 = value;
 8002c70:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002c74:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002c78:	f00f f892 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002c7c:	4640      	mov	r0, r8
 8002c7e:	4631      	mov	r1, r6
 8002c80:	f00c fc1e 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002c84:	4620      	mov	r0, r4
 8002c86:	b00b      	add	sp, #44	; 0x2c
 8002c88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c8c:	080282c0 	.word	0x080282c0
 8002c90:	0802a0e8 	.word	0x0802a0e8
 8002c94:	08028208 	.word	0x08028208
 8002c98:	08028218 	.word	0x08028218
 8002c9c:	080282a8 	.word	0x080282a8
 8002ca0:	08002a01 	.word	0x08002a01
 8002ca4:	2000ef74 	.word	0x2000ef74
 8002ca8:	08028058 	.word	0x08028058
 8002cac:	0802815a 	.word	0x0802815a
 8002cb0:	080280d5 	.word	0x080280d5
 8002cb4:	2000ef78 	.word	0x2000ef78
 8002cb8:	0802811c 	.word	0x0802811c
 8002cbc:	2000ef80 	.word	0x2000ef80
 8002cc0:	08028192 	.word	0x08028192

08002cc4 <_ZN20DriverScreenViewBaseD1Ev>:
}

DriverScreenViewBase::~DriverScreenViewBase()
{

}
 8002cc4:	4770      	bx	lr

08002cc6 <_ZN20DriverScreenViewBase11setupScreenEv>:

void DriverScreenViewBase::setupScreen()
{

}
 8002cc6:	4770      	bx	lr

08002cc8 <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002cc8:	4770      	bx	lr

08002cca <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002cca:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ccc:	68c2      	ldr	r2, [r0, #12]
 8002cce:	6844      	ldr	r4, [r0, #4]
 8002cd0:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002cd2:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002cd4:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002cd8:	07d2      	lsls	r2, r2, #31
 8002cda:	bf48      	it	mi
 8002cdc:	5962      	ldrmi	r2, [r4, r5]
 8002cde:	689b      	ldr	r3, [r3, #8]
    }
 8002ce0:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002ce2:	bf48      	it	mi
 8002ce4:	58d3      	ldrmi	r3, [r2, r3]
 8002ce6:	4718      	bx	r3

08002ce8 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002ce8:	6843      	ldr	r3, [r0, #4]
 8002cea:	b12b      	cbz	r3, 8002cf8 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002cec:	6883      	ldr	r3, [r0, #8]
 8002cee:	b92b      	cbnz	r3, 8002cfc <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002cf0:	68c0      	ldr	r0, [r0, #12]
 8002cf2:	f000 0001 	and.w	r0, r0, #1
 8002cf6:	4770      	bx	lr
 8002cf8:	4618      	mov	r0, r3
 8002cfa:	4770      	bx	lr
 8002cfc:	2001      	movs	r0, #1
    }
 8002cfe:	4770      	bx	lr

08002d00 <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002d00:	b510      	push	{r4, lr}
 8002d02:	2110      	movs	r1, #16
 8002d04:	4604      	mov	r4, r0
 8002d06:	f023 fb0b 	bl	8026320 <_ZdlPvj>
 8002d0a:	4620      	mov	r0, r4
 8002d0c:	bd10      	pop	{r4, pc}

08002d0e <_ZN20DriverScreenViewBaseD0Ev>:
DriverScreenViewBase::~DriverScreenViewBase()
 8002d0e:	b510      	push	{r4, lr}
}
 8002d10:	f640 411c 	movw	r1, #3100	; 0xc1c
DriverScreenViewBase::~DriverScreenViewBase()
 8002d14:	4604      	mov	r4, r0
}
 8002d16:	f023 fb03 	bl	8026320 <_ZdlPvj>
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	bd10      	pop	{r4, pc}

08002d1e <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DriverScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002d1e:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002d20:	f100 03e8 	add.w	r3, r0, #232	; 0xe8
 8002d24:	4299      	cmp	r1, r3
{
 8002d26:	4604      	mov	r4, r0
 8002d28:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002d2a:	d103      	bne.n	8002d34 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~DriverScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d2c:	f011 ff64 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromDriverScreenToMainInfotaiment
        //When btnNextPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards East
        application().gotoMainInfotaimentScreenSlideTransitionEast();
 8002d30:	f001 fbda 	bl	80044e8 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002d34:	34b4      	adds	r4, #180	; 0xb4
 8002d36:	42a5      	cmp	r5, r4
 8002d38:	d105      	bne.n	8002d46 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002d3a:	f011 ff5d 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromDriverScreenToCompetitionScreen
        //When btnPrevPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards West
        application().gotoCompetitionScreenScreenSlideTransitionWest();
    }
}
 8002d3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCompetitionScreenScreenSlideTransitionWest();
 8002d42:	f001 bc11 	b.w	8004568 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>
}
 8002d46:	bd38      	pop	{r3, r4, r5, pc}

08002d48 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002d48:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002d4a:	2226      	movs	r2, #38	; 0x26
    Box()
 8002d4c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002d4e:	2100      	movs	r1, #0
 8002d50:	f023 fba0 	bl	8026494 <memset>
 8002d54:	4620      	mov	r0, r4
 8002d56:	f7ff fe8f 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8002d5a:	4b04      	ldr	r3, [pc, #16]	; (8002d6c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002d5c:	6023      	str	r3, [r4, #0]
 8002d5e:	23ff      	movs	r3, #255	; 0xff
 8002d60:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d64:	2300      	movs	r3, #0
 8002d66:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d68:	4620      	mov	r0, r4
 8002d6a:	bd10      	pop	{r4, pc}
 8002d6c:	0802a0e8 	.word	0x0802a0e8

08002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d70:	2200      	movs	r2, #0
 8002d72:	f04f 31ff 	mov.w	r1, #4294967295
 8002d76:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d7a:	6082      	str	r2, [r0, #8]
        {
        }
 8002d7c:	4770      	bx	lr
	...

08002d80 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d80:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d82:	2100      	movs	r1, #0
    TextArea()
 8002d84:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d86:	2226      	movs	r2, #38	; 0x26
 8002d88:	f023 fb84 	bl	8026494 <memset>
 8002d8c:	4620      	mov	r0, r4
 8002d8e:	f7ff fe73 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8002d92:	4b09      	ldr	r3, [pc, #36]	; (8002db8 <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8002d94:	6023      	str	r3, [r4, #0]
 8002d96:	4b09      	ldr	r3, [pc, #36]	; (8002dbc <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d98:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d9a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d9e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002da0:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002da4:	2300      	movs	r3, #0
 8002da6:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 8002daa:	8723      	strh	r3, [r4, #56]	; 0x38
 8002dac:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8002db0:	f7ff ffde 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8002db4:	4620      	mov	r0, r4
 8002db6:	bd10      	pop	{r4, pc}
 8002db8:	0802a058 	.word	0x0802a058
 8002dbc:	08028208 	.word	0x08028208

08002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 8002dc0:	b510      	push	{r4, lr}
 8002dc2:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002dc4:	f7ff ffc0 	bl	8002d48 <_ZN8touchgfx3BoxC1Ev>
 8002dc8:	4b03      	ldr	r3, [pc, #12]	; (8002dd8 <_ZN8touchgfx13BoxWithBorderC1Ev+0x18>)
 8002dca:	6023      	str	r3, [r4, #0]
        : color(col)
 8002dcc:	2300      	movs	r3, #0
 8002dce:	62e3      	str	r3, [r4, #44]	; 0x2c
 8002dd0:	8623      	strh	r3, [r4, #48]	; 0x30
    {
    }
 8002dd2:	4620      	mov	r0, r4
 8002dd4:	bd10      	pop	{r4, pc}
 8002dd6:	bf00      	nop
 8002dd8:	0802a1c4 	.word	0x0802a1c4

08002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8002ddc:	b510      	push	{r4, lr}
 8002dde:	4604      	mov	r4, r0
        : TextArea()
 8002de0:	f7ff ffce 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002de4:	4b02      	ldr	r3, [pc, #8]	; (8002df0 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8002de6:	6023      	str	r3, [r4, #0]
 8002de8:	2300      	movs	r3, #0
 8002dea:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8002dec:	4620      	mov	r0, r4
 8002dee:	bd10      	pop	{r4, pc}
 8002df0:	08028218 	.word	0x08028218

08002df4 <_ZN20DriverScreenViewBaseC1Ev>:
DriverScreenViewBase::DriverScreenViewBase() :
 8002df4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002df8:	ed2d 8b10 	vpush	{d8-d15}
 8002dfc:	4683      	mov	fp, r0
 8002dfe:	b0a5      	sub	sp, #148	; 0x94
    buttonCallback(this, &DriverScreenViewBase::buttonCallbackHandler)
 8002e00:	465c      	mov	r4, fp
 8002e02:	f04f 0800 	mov.w	r8, #0
 8002e06:	f013 fb77 	bl	80164f8 <_ZN8touchgfx6ScreenC1Ev>
 8002e0a:	4be7      	ldr	r3, [pc, #924]	; (80031a8 <_ZN20DriverScreenViewBaseC1Ev+0x3b4>)
 8002e0c:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
 8002e10:	f844 3b40 	str.w	r3, [r4], #64
 8002e14:	f10b 066c 	add.w	r6, fp, #108	; 0x6c
 8002e18:	4620      	mov	r0, r4
 8002e1a:	f7ff ff95 	bl	8002d48 <_ZN8touchgfx3BoxC1Ev>
 8002e1e:	4630      	mov	r0, r6
 8002e20:	f7ff ffae 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002e24:	f10b 03b4 	add.w	r3, fp, #180	; 0xb4
 8002e28:	f10b 07e8 	add.w	r7, fp, #232	; 0xe8
 8002e2c:	4618      	mov	r0, r3
 8002e2e:	ee0e 3a90 	vmov	s29, r3
 8002e32:	f7ff fe33 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 8002e36:	4638      	mov	r0, r7
 8002e38:	f7ff fe30 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 8002e3c:	f50b 738e 	add.w	r3, fp, #284	; 0x11c
 8002e40:	4618      	mov	r0, r3
 8002e42:	930c      	str	r3, [sp, #48]	; 0x30
 8002e44:	f7ff ffbc 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e48:	f50b 73a8 	add.w	r3, fp, #336	; 0x150
 8002e4c:	4618      	mov	r0, r3
 8002e4e:	930d      	str	r3, [sp, #52]	; 0x34
 8002e50:	f7ff ffb6 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e54:	f50b 73c2 	add.w	r3, fp, #388	; 0x184
 8002e58:	4618      	mov	r0, r3
 8002e5a:	930e      	str	r3, [sp, #56]	; 0x38
 8002e5c:	f7ff ffb0 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e60:	f50b 73dc 	add.w	r3, fp, #440	; 0x1b8
 8002e64:	4618      	mov	r0, r3
 8002e66:	930f      	str	r3, [sp, #60]	; 0x3c
 8002e68:	f7ff ffaa 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e6c:	f50b 73f6 	add.w	r3, fp, #492	; 0x1ec
 8002e70:	4618      	mov	r0, r3
 8002e72:	9310      	str	r3, [sp, #64]	; 0x40
 8002e74:	f7ff ffa4 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e78:	f50b 7308 	add.w	r3, fp, #544	; 0x220
 8002e7c:	4618      	mov	r0, r3
 8002e7e:	9311      	str	r3, [sp, #68]	; 0x44
 8002e80:	f7ff ff9e 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e84:	f50b 7315 	add.w	r3, fp, #596	; 0x254
 8002e88:	4618      	mov	r0, r3
 8002e8a:	9312      	str	r3, [sp, #72]	; 0x48
 8002e8c:	f7ff ff98 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e90:	f50b 7322 	add.w	r3, fp, #648	; 0x288
 8002e94:	4618      	mov	r0, r3
 8002e96:	9313      	str	r3, [sp, #76]	; 0x4c
 8002e98:	f7ff ff92 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002e9c:	f50b 732f 	add.w	r3, fp, #700	; 0x2bc
 8002ea0:	4618      	mov	r0, r3
 8002ea2:	9314      	str	r3, [sp, #80]	; 0x50
 8002ea4:	f7ff ff8c 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ea8:	f50b 733c 	add.w	r3, fp, #752	; 0x2f0
 8002eac:	4618      	mov	r0, r3
 8002eae:	9315      	str	r3, [sp, #84]	; 0x54
 8002eb0:	f7ff ff86 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002eb4:	f50b 7349 	add.w	r3, fp, #804	; 0x324
 8002eb8:	4618      	mov	r0, r3
 8002eba:	9316      	str	r3, [sp, #88]	; 0x58
 8002ebc:	f7ff ff80 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ec0:	f50b 7356 	add.w	r3, fp, #856	; 0x358
 8002ec4:	4618      	mov	r0, r3
 8002ec6:	9317      	str	r3, [sp, #92]	; 0x5c
 8002ec8:	f7ff ff7a 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ecc:	f50b 7363 	add.w	r3, fp, #908	; 0x38c
 8002ed0:	4618      	mov	r0, r3
 8002ed2:	9318      	str	r3, [sp, #96]	; 0x60
 8002ed4:	f7ff ff74 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ed8:	f50b 7370 	add.w	r3, fp, #960	; 0x3c0
 8002edc:	4618      	mov	r0, r3
 8002ede:	9319      	str	r3, [sp, #100]	; 0x64
 8002ee0:	f7ff ff6e 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ee4:	f50b 737d 	add.w	r3, fp, #1012	; 0x3f4
 8002ee8:	4618      	mov	r0, r3
 8002eea:	931a      	str	r3, [sp, #104]	; 0x68
 8002eec:	f7ff ff68 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002ef0:	f50b 6385 	add.w	r3, fp, #1064	; 0x428
 8002ef4:	4618      	mov	r0, r3
 8002ef6:	931b      	str	r3, [sp, #108]	; 0x6c
 8002ef8:	f7ff ff62 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8002efc:	f20b 435c 	addw	r3, fp, #1116	; 0x45c
 8002f00:	4618      	mov	r0, r3
 8002f02:	ee08 3a10 	vmov	s16, r3
 8002f06:	f7ff ff69 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f0a:	f50b 6395 	add.w	r3, fp, #1192	; 0x4a8
 8002f0e:	4618      	mov	r0, r3
 8002f10:	ee0f 3a10 	vmov	s30, r3
 8002f14:	f7ff ff62 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f18:	f20b 43f4 	addw	r3, fp, #1268	; 0x4f4
 8002f1c:	4618      	mov	r0, r3
 8002f1e:	ee0f 3a90 	vmov	s31, r3
 8002f22:	f7ff ff5b 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002f26:	f50b 63a8 	add.w	r3, fp, #1344	; 0x540
 8002f2a:	4618      	mov	r0, r3
 8002f2c:	ee08 3a90 	vmov	s17, r3
 8002f30:	f7ff ff26 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f34:	f50b 63b1 	add.w	r3, fp, #1416	; 0x588
 8002f38:	4618      	mov	r0, r3
 8002f3a:	ee09 3a10 	vmov	s18, r3
 8002f3e:	f7ff ff1f 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f42:	f50b 63ba 	add.w	r3, fp, #1488	; 0x5d0
 8002f46:	4618      	mov	r0, r3
 8002f48:	ee09 3a90 	vmov	s19, r3
 8002f4c:	f7ff ff18 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f50:	f50b 63c3 	add.w	r3, fp, #1560	; 0x618
 8002f54:	4618      	mov	r0, r3
 8002f56:	ee0a 3a10 	vmov	s20, r3
 8002f5a:	f7ff ff11 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f5e:	f50b 63cc 	add.w	r3, fp, #1632	; 0x660
 8002f62:	4618      	mov	r0, r3
 8002f64:	ee0a 3a90 	vmov	s21, r3
 8002f68:	f7ff ff0a 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f6c:	f50b 63d5 	add.w	r3, fp, #1704	; 0x6a8
 8002f70:	4618      	mov	r0, r3
 8002f72:	ee0b 3a10 	vmov	s22, r3
 8002f76:	f7ff ff03 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f7a:	f50b 63de 	add.w	r3, fp, #1776	; 0x6f0
 8002f7e:	4618      	mov	r0, r3
 8002f80:	ee0b 3a90 	vmov	s23, r3
 8002f84:	f7ff fefc 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f88:	f50b 63e7 	add.w	r3, fp, #1848	; 0x738
 8002f8c:	4618      	mov	r0, r3
 8002f8e:	ee0c 3a10 	vmov	s24, r3
 8002f92:	f7ff fef5 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002f96:	f50b 63f0 	add.w	r3, fp, #1920	; 0x780
 8002f9a:	4618      	mov	r0, r3
 8002f9c:	ee0c 3a90 	vmov	s25, r3
 8002fa0:	f7ff feee 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002fa4:	f50b 63f9 	add.w	r3, fp, #1992	; 0x7c8
 8002fa8:	4618      	mov	r0, r3
 8002faa:	ee0d 3a10 	vmov	s26, r3
 8002fae:	f7ff fee7 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002fb2:	f50b 6301 	add.w	r3, fp, #2064	; 0x810
 8002fb6:	4618      	mov	r0, r3
 8002fb8:	ee0d 3a90 	vmov	s27, r3
 8002fbc:	f7ff fee0 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002fc0:	f60b 0358 	addw	r3, fp, #2136	; 0x858
 8002fc4:	4618      	mov	r0, r3
 8002fc6:	ee0e 3a10 	vmov	s28, r3
 8002fca:	f7ff fed9 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8002fce:	f50b 630a 	add.w	r3, fp, #2208	; 0x8a0
 8002fd2:	4618      	mov	r0, r3
 8002fd4:	9302      	str	r3, [sp, #8]
 8002fd6:	f7ff ff01 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002fda:	f60b 03ec 	addw	r3, fp, #2284	; 0x8ec
 8002fde:	4618      	mov	r0, r3
 8002fe0:	9303      	str	r3, [sp, #12]
 8002fe2:	f7ff fefb 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002fe6:	f60b 1338 	addw	r3, fp, #2360	; 0x938
 8002fea:	4618      	mov	r0, r3
 8002fec:	9304      	str	r3, [sp, #16]
 8002fee:	f7ff fef5 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ff2:	f60b 1384 	addw	r3, fp, #2436	; 0x984
 8002ff6:	4618      	mov	r0, r3
 8002ff8:	9305      	str	r3, [sp, #20]
 8002ffa:	f7ff feef 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8002ffe:	f50b 631d 	add.w	r3, fp, #2512	; 0x9d0
 8003002:	4618      	mov	r0, r3
 8003004:	9306      	str	r3, [sp, #24]
 8003006:	f7ff fee9 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800300a:	f60b 231c 	addw	r3, fp, #2588	; 0xa1c
 800300e:	4618      	mov	r0, r3
 8003010:	9307      	str	r3, [sp, #28]
 8003012:	f7ff fee3 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003016:	f60b 2368 	addw	r3, fp, #2664	; 0xa68
 800301a:	4618      	mov	r0, r3
 800301c:	9308      	str	r3, [sp, #32]
 800301e:	f7ff fedd 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003022:	f60b 23b4 	addw	r3, fp, #2740	; 0xab4
 8003026:	4618      	mov	r0, r3
 8003028:	9309      	str	r3, [sp, #36]	; 0x24
 800302a:	f7ff fed7 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800302e:	f50b 6330 	add.w	r3, fp, #2816	; 0xb00
 8003032:	4618      	mov	r0, r3
 8003034:	930a      	str	r3, [sp, #40]	; 0x28
 8003036:	f7ff fed1 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800303a:	f60b 334c 	addw	r3, fp, #2892	; 0xb4c
 800303e:	4618      	mov	r0, r3
 8003040:	930b      	str	r3, [sp, #44]	; 0x2c
 8003042:	f7ff fecb 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003046:	4b59      	ldr	r3, [pc, #356]	; (80031ac <_ZN20DriverScreenViewBaseC1Ev+0x3b8>)
 8003048:	f8cb 3c0c 	str.w	r3, [fp, #3084]	; 0xc0c
 800304c:	4b58      	ldr	r3, [pc, #352]	; (80031b0 <_ZN20DriverScreenViewBaseC1Ev+0x3bc>)
 800304e:	f8cb 3c14 	str.w	r3, [fp, #3092]	; 0xc14
    __background.setPosition(0, 0, 800, 480);
 8003052:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003056:	4642      	mov	r2, r8
 8003058:	4620      	mov	r0, r4
 800305a:	9300      	str	r3, [sp, #0]
 800305c:	4641      	mov	r1, r8
 800305e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003062:	f8cb bc10 	str.w	fp, [fp, #3088]	; 0xc10
 8003066:	f8cb 8c18 	str.w	r8, [fp, #3096]	; 0xc18
 800306a:	f10b 0904 	add.w	r9, fp, #4
 800306e:	f7ff fcf0 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003072:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003076:	4621      	mov	r1, r4
 8003078:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 800307c:	4648      	mov	r0, r9
 800307e:	f00c fa1f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot_1.setPosition(531, 384, 133, 73);
 8003082:	2349      	movs	r3, #73	; 0x49
        color = newColor;
 8003084:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 8003088:	ac1c      	add	r4, sp, #112	; 0x70
 800308a:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800308e:	4630      	mov	r0, r6
 8003090:	9300      	str	r3, [sp, #0]
 8003092:	f240 2113 	movw	r1, #531	; 0x213
 8003096:	2385      	movs	r3, #133	; 0x85
 8003098:	f7ff fcdb 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800309c:	4631      	mov	r1, r6
 800309e:	4620      	mov	r0, r4
        color = newColor;
 80030a0:	f8cb a09c 	str.w	sl, [fp, #156]	; 0x9c
        linespace = space;
 80030a4:	f8ab 80a0 	strh.w	r8, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 80030a8:	f00e fbe0 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030ac:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80030b0:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80030b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtTmot_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCFN));
 80030b8:	ad21      	add	r5, sp, #132	; 0x84
 80030ba:	4b3e      	ldr	r3, [pc, #248]	; (80031b4 <_ZN20DriverScreenViewBaseC1Ev+0x3c0>)
 80030bc:	9321      	str	r3, [sp, #132]	; 0x84
 80030be:	4630      	mov	r0, r6
 80030c0:	2313      	movs	r3, #19
 80030c2:	4629      	mov	r1, r5
 80030c4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80030c8:	f00e fe6a 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80030cc:	4631      	mov	r1, r6
 80030ce:	4648      	mov	r0, r9
 80030d0:	f00c f9f6 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 80030d4:	ee1e 0a90 	vmov	r0, s29
 80030d8:	f240 129f 	movw	r2, #415	; 0x19f
 80030dc:	2111      	movs	r1, #17
 80030de:	f7ff fcab 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 80030e2:	f60b 460c 	addw	r6, fp, #3084	; 0xc0c
 80030e6:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 80030e8:	462a      	mov	r2, r5
 80030ea:	ee1e 0a90 	vmov	r0, s29
 80030ee:	a920      	add	r1, sp, #128	; 0x80
 80030f0:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80030f4:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80030f8:	f00e feb0 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80030fc:	ee1e 1a90 	vmov	r1, s29
 8003100:	f8cb 60dc 	str.w	r6, [fp, #220]	; 0xdc
 8003104:	4648      	mov	r0, r9
 8003106:	f00c f9db 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 800310a:	4638      	mov	r0, r7
 800310c:	f240 129f 	movw	r2, #415	; 0x19f
 8003110:	f240 21df 	movw	r1, #735	; 0x2df
 8003114:	f7ff fc90 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8003118:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 800311a:	462a      	mov	r2, r5
 800311c:	4638      	mov	r0, r7
 800311e:	a920      	add	r1, sp, #128	; 0x80
 8003120:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003124:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 8003128:	f00e fe98 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800312c:	4639      	mov	r1, r7
 800312e:	f8cb 6110 	str.w	r6, [fp, #272]	; 0x110
 8003132:	4648      	mov	r0, r9
    boxRpm.setPosition(1, 0, 266, 120);
 8003134:	2678      	movs	r6, #120	; 0x78
 8003136:	f00c f9c3 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800313a:	4642      	mov	r2, r8
 800313c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800313e:	9600      	str	r6, [sp, #0]
 8003140:	f44f 7385 	mov.w	r3, #266	; 0x10a
 8003144:	2101      	movs	r1, #1
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003146:	2702      	movs	r7, #2
 8003148:	f7ff fc83 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800314c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003150:	e9cb 3a51 	strd	r3, sl, [fp, #324]	; 0x144
 8003154:	990c      	ldr	r1, [sp, #48]	; 0x30
        borderSize = size;
 8003156:	f8ab 714c 	strh.w	r7, [fp, #332]	; 0x14c
 800315a:	4648      	mov	r0, r9
 800315c:	f00c f9b0 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(531, 360, 133, 120);
 8003160:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003164:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003166:	9600      	str	r6, [sp, #0]
 8003168:	2385      	movs	r3, #133	; 0x85
 800316a:	f240 2113 	movw	r1, #531	; 0x213
 800316e:	f7ff fc70 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003172:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003176:	e9cb 3a5e 	strd	r3, sl, [fp, #376]	; 0x178
 800317a:	990d      	ldr	r1, [sp, #52]	; 0x34
        borderSize = size;
 800317c:	f8ab 7180 	strh.w	r7, [fp, #384]	; 0x180
 8003180:	4648      	mov	r0, r9
 8003182:	f00c f99d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTmot.setPosition(134, 120, 133, 120);
 8003186:	4632      	mov	r2, r6
 8003188:	980e      	ldr	r0, [sp, #56]	; 0x38
 800318a:	9600      	str	r6, [sp, #0]
 800318c:	2385      	movs	r3, #133	; 0x85
 800318e:	2186      	movs	r1, #134	; 0x86
 8003190:	f7ff fc5f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003194:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003198:	e9cb 3a6b 	strd	r3, sl, [fp, #428]	; 0x1ac
 800319c:	990e      	ldr	r1, [sp, #56]	; 0x38
        borderSize = size;
 800319e:	f8ab 71b4 	strh.w	r7, [fp, #436]	; 0x1b4
 80031a2:	4648      	mov	r0, r9
 80031a4:	e008      	b.n	80031b8 <_ZN20DriverScreenViewBaseC1Ev+0x3c4>
 80031a6:	bf00      	nop
 80031a8:	0802830c 	.word	0x0802830c
 80031ac:	080282f4 	.word	0x080282f4
 80031b0:	08002d1f 	.word	0x08002d1f
 80031b4:	08028208 	.word	0x08028208
 80031b8:	f00c f982 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxCLT.setPosition(1, 240, 133, 120);
 80031bc:	22f0      	movs	r2, #240	; 0xf0
 80031be:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80031c0:	9600      	str	r6, [sp, #0]
 80031c2:	2385      	movs	r3, #133	; 0x85
 80031c4:	2101      	movs	r1, #1
 80031c6:	f7ff fc44 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031ca:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80031ce:	e9cb 3a78 	strd	r3, sl, [fp, #480]	; 0x1e0
 80031d2:	990f      	ldr	r1, [sp, #60]	; 0x3c
        borderSize = size;
 80031d4:	f8ab 71e8 	strh.w	r7, [fp, #488]	; 0x1e8
 80031d8:	4648      	mov	r0, r9
 80031da:	f00c f971 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxToil.setPosition(134, 240, 133, 120);
 80031de:	22f0      	movs	r2, #240	; 0xf0
 80031e0:	9810      	ldr	r0, [sp, #64]	; 0x40
 80031e2:	9600      	str	r6, [sp, #0]
 80031e4:	2385      	movs	r3, #133	; 0x85
 80031e6:	2186      	movs	r1, #134	; 0x86
 80031e8:	f7ff fc33 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80031ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80031f0:	e9cb 3a85 	strd	r3, sl, [fp, #532]	; 0x214
 80031f4:	9910      	ldr	r1, [sp, #64]	; 0x40
        borderSize = size;
 80031f6:	f8ab 721c 	strh.w	r7, [fp, #540]	; 0x21c
 80031fa:	4648      	mov	r0, r9
 80031fc:	f00c f960 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(1, 120, 133, 120);
 8003200:	4632      	mov	r2, r6
 8003202:	9811      	ldr	r0, [sp, #68]	; 0x44
 8003204:	9600      	str	r6, [sp, #0]
 8003206:	2385      	movs	r3, #133	; 0x85
 8003208:	2101      	movs	r1, #1
 800320a:	f7ff fc22 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800320e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003212:	e9cb 3a92 	strd	r3, sl, [fp, #584]	; 0x248
 8003216:	9911      	ldr	r1, [sp, #68]	; 0x44
        borderSize = size;
 8003218:	f8ab 7250 	strh.w	r7, [fp, #592]	; 0x250
 800321c:	4648      	mov	r0, r9
 800321e:	f00c f94f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTorin.setPosition(134, 360, 133, 120);
 8003222:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003226:	9812      	ldr	r0, [sp, #72]	; 0x48
 8003228:	9600      	str	r6, [sp, #0]
 800322a:	2385      	movs	r3, #133	; 0x85
 800322c:	2186      	movs	r1, #134	; 0x86
 800322e:	f7ff fc10 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003232:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003236:	e9cb 3a9f 	strd	r3, sl, [fp, #636]	; 0x27c
 800323a:	9912      	ldr	r1, [sp, #72]	; 0x48
        borderSize = size;
 800323c:	f8ab 7284 	strh.w	r7, [fp, #644]	; 0x284
 8003240:	4648      	mov	r0, r9
 8003242:	f00c f93d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat24.setPosition(398, 360, 133, 120);
 8003246:	f44f 72b4 	mov.w	r2, #360	; 0x168
 800324a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800324c:	9600      	str	r6, [sp, #0]
 800324e:	2385      	movs	r3, #133	; 0x85
 8003250:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8003254:	f7ff fbfd 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003258:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800325c:	e9cb 3aac 	strd	r3, sl, [fp, #688]	; 0x2b0
 8003260:	9913      	ldr	r1, [sp, #76]	; 0x4c
        borderSize = size;
 8003262:	f8ab 72b8 	strh.w	r7, [fp, #696]	; 0x2b8
 8003266:	4648      	mov	r0, r9
 8003268:	f00c f92a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat12.setPosition(267, 360, 131, 120);
 800326c:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003270:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003272:	9600      	str	r6, [sp, #0]
 8003274:	2383      	movs	r3, #131	; 0x83
 8003276:	f240 110b 	movw	r1, #267	; 0x10b
 800327a:	f7ff fbea 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800327e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003282:	e9cb 3ab9 	strd	r3, sl, [fp, #740]	; 0x2e4
 8003286:	9914      	ldr	r1, [sp, #80]	; 0x50
        borderSize = size;
 8003288:	f8ab 72ec 	strh.w	r7, [fp, #748]	; 0x2ec
 800328c:	4648      	mov	r0, r9
 800328e:	f00c f917 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPoil.setPosition(531, 120, 133, 120);
 8003292:	4632      	mov	r2, r6
 8003294:	9815      	ldr	r0, [sp, #84]	; 0x54
 8003296:	9600      	str	r6, [sp, #0]
 8003298:	2385      	movs	r3, #133	; 0x85
 800329a:	f240 2113 	movw	r1, #531	; 0x213
 800329e:	f7ff fbd8 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032a2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80032a6:	e9cb 3ac6 	strd	r3, sl, [fp, #792]	; 0x318
 80032aa:	9915      	ldr	r1, [sp, #84]	; 0x54
        borderSize = size;
 80032ac:	f8ab 7320 	strh.w	r7, [fp, #800]	; 0x320
 80032b0:	4648      	mov	r0, r9
 80032b2:	f00c f905 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPfuel.setPosition(531, 240, 133, 120);
 80032b6:	22f0      	movs	r2, #240	; 0xf0
 80032b8:	9816      	ldr	r0, [sp, #88]	; 0x58
 80032ba:	9600      	str	r6, [sp, #0]
 80032bc:	2385      	movs	r3, #133	; 0x85
 80032be:	f240 2113 	movw	r1, #531	; 0x213
 80032c2:	f7ff fbc6 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032c6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80032ca:	e9cb 3ad3 	strd	r3, sl, [fp, #844]	; 0x34c
 80032ce:	9916      	ldr	r1, [sp, #88]	; 0x58
        borderSize = size;
 80032d0:	f8ab 7354 	strh.w	r7, [fp, #852]	; 0x354
 80032d4:	4648      	mov	r0, r9
 80032d6:	f00c f8f3 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTPS.setPosition(663, 120, 137, 120);
 80032da:	4632      	mov	r2, r6
 80032dc:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80032de:	9600      	str	r6, [sp, #0]
 80032e0:	2389      	movs	r3, #137	; 0x89
 80032e2:	f240 2197 	movw	r1, #663	; 0x297
 80032e6:	f7ff fbb4 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80032ea:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80032ee:	e9cb 3ae0 	strd	r3, sl, [fp, #896]	; 0x380
 80032f2:	9917      	ldr	r1, [sp, #92]	; 0x5c
        borderSize = size;
 80032f4:	f8ab 7388 	strh.w	r7, [fp, #904]	; 0x388
 80032f8:	4648      	mov	r0, r9
 80032fa:	f00c f8e1 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPbrake.setPosition(664, 240, 136, 120);
 80032fe:	22f0      	movs	r2, #240	; 0xf0
 8003300:	9818      	ldr	r0, [sp, #96]	; 0x60
 8003302:	9600      	str	r6, [sp, #0]
 8003304:	2388      	movs	r3, #136	; 0x88
 8003306:	f44f 7126 	mov.w	r1, #664	; 0x298
 800330a:	f7ff fba2 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800330e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003312:	e9cb 3aed 	strd	r3, sl, [fp, #948]	; 0x3b4
 8003316:	9918      	ldr	r1, [sp, #96]	; 0x60
        borderSize = size;
 8003318:	f8ab 73bc 	strh.w	r7, [fp, #956]	; 0x3bc
 800331c:	4648      	mov	r0, r9
 800331e:	f00c f8cf 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLap.setPosition(267, 0, 265, 120);
 8003322:	4642      	mov	r2, r8
 8003324:	9819      	ldr	r0, [sp, #100]	; 0x64
 8003326:	9600      	str	r6, [sp, #0]
 8003328:	f240 1309 	movw	r3, #265	; 0x109
 800332c:	f240 110b 	movw	r1, #267	; 0x10b
 8003330:	f7ff fb8f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003334:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003338:	e9cb 3afa 	strd	r3, sl, [fp, #1000]	; 0x3e8
 800333c:	9919      	ldr	r1, [sp, #100]	; 0x64
        borderSize = size;
 800333e:	f8ab 73f0 	strh.w	r7, [fp, #1008]	; 0x3f0
 8003342:	4648      	mov	r0, r9
 8003344:	f00c f8bc 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxSpeed.setPosition(531, 0, 269, 120);
 8003348:	4642      	mov	r2, r8
 800334a:	981a      	ldr	r0, [sp, #104]	; 0x68
 800334c:	9600      	str	r6, [sp, #0]
 800334e:	f240 130d 	movw	r3, #269	; 0x10d
 8003352:	f240 2113 	movw	r1, #531	; 0x213
 8003356:	f7ff fb7c 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800335a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800335e:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003360:	f8cb 341c 	str.w	r3, [fp, #1052]	; 0x41c
 8003364:	4648      	mov	r0, r9
        borderColor = colorBorder;
 8003366:	f8cb a420 	str.w	sl, [fp, #1056]	; 0x420
        borderSize = size;
 800336a:	f8ab 7424 	strh.w	r7, [fp, #1060]	; 0x424
 800336e:	f00c f8a7 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxGear.setPosition(267, 120, 265, 240);
 8003372:	23f0      	movs	r3, #240	; 0xf0
 8003374:	4632      	mov	r2, r6
 8003376:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003378:	9300      	str	r3, [sp, #0]
 800337a:	f240 110b 	movw	r1, #267	; 0x10b
 800337e:	f240 1309 	movw	r3, #265	; 0x109
 8003382:	f7ff fb66 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003386:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800338a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800338c:	f8cb 3450 	str.w	r3, [fp, #1104]	; 0x450
 8003390:	4648      	mov	r0, r9
        borderColor = colorBorder;
 8003392:	f8cb a454 	str.w	sl, [fp, #1108]	; 0x454
        borderSize = size;
 8003396:	f8ab 7458 	strh.w	r7, [fp, #1112]	; 0x458
 800339a:	f00c f891 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setPosition(267, 120, 265, 240);
 800339e:	23f0      	movs	r3, #240	; 0xf0
 80033a0:	4632      	mov	r2, r6
 80033a2:	ee18 0a10 	vmov	r0, s16
 80033a6:	9300      	str	r3, [sp, #0]
 80033a8:	f240 110b 	movw	r1, #267	; 0x10b
 80033ac:	f240 1309 	movw	r3, #265	; 0x109
 80033b0:	f7ff fb4f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033b4:	f8db 345c 	ldr.w	r3, [fp, #1116]	; 0x45c
        color = newColor;
 80033b8:	f8cb a48c 	str.w	sl, [fp, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 80033bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 80033c0:	f8ab 8490 	strh.w	r8, [fp, #1168]	; 0x490
        boundingArea = calculateBoundingArea();
 80033c4:	ee18 1a10 	vmov	r1, s16
 80033c8:	4620      	mov	r0, r4
 80033ca:	4798      	blx	r3
 80033cc:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80033d0:	f50b 6393 	add.w	r3, fp, #1176	; 0x498
 80033d4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80033d8:	4b09      	ldr	r3, [pc, #36]	; (8003400 <_ZN20DriverScreenViewBaseC1Ev+0x60c>)
 80033da:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BNQX).getText());
 80033dc:	f60b 3698 	addw	r6, fp, #2968	; 0xb98
 80033e0:	b92b      	cbnz	r3, 80033ee <_ZN20DriverScreenViewBaseC1Ev+0x5fa>
 80033e2:	4b08      	ldr	r3, [pc, #32]	; (8003404 <_ZN20DriverScreenViewBaseC1Ev+0x610>)
 80033e4:	4a08      	ldr	r2, [pc, #32]	; (8003408 <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 80033e6:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80033e8:	4808      	ldr	r0, [pc, #32]	; (800340c <_ZN20DriverScreenViewBaseC1Ev+0x618>)
 80033ea:	f022 ffc7 	bl	802637c <__assert_func>
 80033ee:	4b08      	ldr	r3, [pc, #32]	; (8003410 <_ZN20DriverScreenViewBaseC1Ev+0x61c>)
 80033f0:	881b      	ldrh	r3, [r3, #0]
 80033f2:	2b3d      	cmp	r3, #61	; 0x3d
 80033f4:	d810      	bhi.n	8003418 <_ZN20DriverScreenViewBaseC1Ev+0x624>
 80033f6:	4b07      	ldr	r3, [pc, #28]	; (8003414 <_ZN20DriverScreenViewBaseC1Ev+0x620>)
 80033f8:	4a03      	ldr	r2, [pc, #12]	; (8003408 <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 80033fa:	2161      	movs	r1, #97	; 0x61
 80033fc:	e7f4      	b.n	80033e8 <_ZN20DriverScreenViewBaseC1Ev+0x5f4>
 80033fe:	bf00      	nop
 8003400:	2000ef74 	.word	0x2000ef74
 8003404:	08028058 	.word	0x08028058
 8003408:	0802815a 	.word	0x0802815a
 800340c:	080280d5 	.word	0x080280d5
 8003410:	2000ef78 	.word	0x2000ef78
 8003414:	0802811c 	.word	0x0802811c
        return texts->getText(typedTextId);
 8003418:	4be7      	ldr	r3, [pc, #924]	; (80037b8 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 800341a:	213d      	movs	r1, #61	; 0x3d
 800341c:	6818      	ldr	r0, [r3, #0]
 800341e:	f004 fd4f 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003422:	4ae6      	ldr	r2, [pc, #920]	; (80037bc <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 8003424:	4603      	mov	r3, r0
 8003426:	4639      	mov	r1, r7
 8003428:	4630      	mov	r0, r6
 800342a:	f014 fd55 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800342e:	4fe4      	ldr	r7, [pc, #912]	; (80037c0 <_ZN20DriverScreenViewBaseC1Ev+0x9cc>)
        wc1 = value;
 8003430:	f8cb 64a4 	str.w	r6, [fp, #1188]	; 0x4a4
 8003434:	233e      	movs	r3, #62	; 0x3e
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0O7B));
 8003436:	ee18 0a10 	vmov	r0, s16
 800343a:	4629      	mov	r1, r5
 800343c:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003440:	9721      	str	r7, [sp, #132]	; 0x84
 8003442:	f00e fcad 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003446:	ee18 1a10 	vmov	r1, s16
 800344a:	4648      	mov	r0, r9
 800344c:	f00c f838 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(1, 24, 266, 72);
 8003450:	2348      	movs	r3, #72	; 0x48
 8003452:	2218      	movs	r2, #24
 8003454:	2101      	movs	r1, #1
 8003456:	ee1f 0a10 	vmov	r0, s30
 800345a:	9300      	str	r3, [sp, #0]
 800345c:	f44f 7385 	mov.w	r3, #266	; 0x10a
 8003460:	f7ff faf7 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003464:	f8cb a4d8 	str.w	sl, [fp, #1240]	; 0x4d8
        linespace = space;
 8003468:	f8ab 84dc 	strh.w	r8, [fp, #1244]	; 0x4dc
        return TextArea::BoundingArea();
 800346c:	4628      	mov	r0, r5
 800346e:	f7ff fc7f 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003472:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003476:	f20b 43e4 	addw	r3, fp, #1252	; 0x4e4
 800347a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800347e:	4ad1      	ldr	r2, [pc, #836]	; (80037c4 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 8003480:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2FOI).getText());
 8003482:	f60b 369c 	addw	r6, fp, #2972	; 0xb9c
 8003486:	2b00      	cmp	r3, #0
 8003488:	d0ab      	beq.n	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800348a:	4acf      	ldr	r2, [pc, #828]	; (80037c8 <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 800348c:	8813      	ldrh	r3, [r2, #0]
 800348e:	2b34      	cmp	r3, #52	; 0x34
 8003490:	d9b1      	bls.n	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003492:	4bc9      	ldr	r3, [pc, #804]	; (80037b8 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 8003494:	2134      	movs	r1, #52	; 0x34
 8003496:	6818      	ldr	r0, [r3, #0]
 8003498:	f004 fd12 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 800349c:	4ac7      	ldr	r2, [pc, #796]	; (80037bc <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 800349e:	4603      	mov	r3, r0
 80034a0:	2106      	movs	r1, #6
 80034a2:	4630      	mov	r0, r6
 80034a4:	f014 fd18 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80034a8:	2336      	movs	r3, #54	; 0x36
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YH8M));
 80034aa:	ee1f 0a10 	vmov	r0, s30
        wc1 = value;
 80034ae:	f8cb 64f0 	str.w	r6, [fp, #1264]	; 0x4f0
 80034b2:	4629      	mov	r1, r5
 80034b4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80034b8:	9721      	str	r7, [sp, #132]	; 0x84
 80034ba:	f00e fc71 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80034be:	ee1f 1a10 	vmov	r1, s30
 80034c2:	4648      	mov	r0, r9
 80034c4:	f00b fffc 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot.setPosition(134, 167, 133, 73);
 80034c8:	2049      	movs	r0, #73	; 0x49
 80034ca:	2385      	movs	r3, #133	; 0x85
 80034cc:	22a7      	movs	r2, #167	; 0xa7
 80034ce:	2186      	movs	r1, #134	; 0x86
 80034d0:	9000      	str	r0, [sp, #0]
 80034d2:	ee1f 0a90 	vmov	r0, s31
 80034d6:	f7ff fabc 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80034da:	f8cb a524 	str.w	sl, [fp, #1316]	; 0x524
        linespace = space;
 80034de:	f8ab 8528 	strh.w	r8, [fp, #1320]	; 0x528
        return TextArea::BoundingArea();
 80034e2:	4628      	mov	r0, r5
 80034e4:	f7ff fc44 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80034e8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80034ec:	f50b 63a6 	add.w	r3, fp, #1328	; 0x530
 80034f0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80034f4:	49b3      	ldr	r1, [pc, #716]	; (80037c4 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 80034f6:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HO5R).getText());
 80034f8:	f60b 36a8 	addw	r6, fp, #2984	; 0xba8
 80034fc:	2b00      	cmp	r3, #0
 80034fe:	f43f af70 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003502:	4ab1      	ldr	r2, [pc, #708]	; (80037c8 <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 8003504:	8813      	ldrh	r3, [r2, #0]
 8003506:	2b2f      	cmp	r3, #47	; 0x2f
 8003508:	f67f af75 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 800350c:	4baa      	ldr	r3, [pc, #680]	; (80037b8 <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 800350e:	212f      	movs	r1, #47	; 0x2f
 8003510:	6818      	ldr	r0, [r3, #0]
 8003512:	f004 fcd5 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003516:	4aa9      	ldr	r2, [pc, #676]	; (80037bc <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 8003518:	4603      	mov	r3, r0
 800351a:	2104      	movs	r1, #4
 800351c:	4630      	mov	r0, r6
 800351e:	f014 fcdb 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003522:	2330      	movs	r3, #48	; 0x30
    txtTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_73JB));
 8003524:	ee1f 0a90 	vmov	r0, s31
        wc1 = value;
 8003528:	f8cb 653c 	str.w	r6, [fp, #1340]	; 0x53c
 800352c:	4629      	mov	r1, r5
 800352e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003532:	9721      	str	r7, [sp, #132]	; 0x84
 8003534:	f00e fc34 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003538:	ee1f 1a90 	vmov	r1, s31
 800353c:	4648      	mov	r0, r9
 800353e:	f00b ffbf 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setPosition(531, 384, 133, 73);
 8003542:	2049      	movs	r0, #73	; 0x49
 8003544:	2385      	movs	r3, #133	; 0x85
 8003546:	f44f 72c0 	mov.w	r2, #384	; 0x180
 800354a:	9000      	str	r0, [sp, #0]
 800354c:	f240 2113 	movw	r1, #531	; 0x213
 8003550:	ee18 0a90 	vmov	r0, s17
 8003554:	f7ff fa7d 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003558:	4620      	mov	r0, r4
 800355a:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800355e:	f8cb a570 	str.w	sl, [fp, #1392]	; 0x570
        linespace = space;
 8003562:	f8ab 8574 	strh.w	r8, [fp, #1396]	; 0x574
        boundingArea = calculateBoundingArea();
 8003566:	f00e f981 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800356a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800356e:	f20b 537c 	addw	r3, fp, #1404	; 0x57c
 8003572:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003576:	2315      	movs	r3, #21
    labelLC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_43VM));
 8003578:	ee18 0a90 	vmov	r0, s17
 800357c:	4629      	mov	r1, r5
 800357e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003582:	9721      	str	r7, [sp, #132]	; 0x84
 8003584:	f00e fc0c 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003588:	ee18 1a90 	vmov	r1, s17
 800358c:	4648      	mov	r0, r9
 800358e:	f00b ff97 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setPosition(1, 146, 131, 69);
 8003592:	2345      	movs	r3, #69	; 0x45
 8003594:	2292      	movs	r2, #146	; 0x92
 8003596:	ee19 0a10 	vmov	r0, s18
 800359a:	9300      	str	r3, [sp, #0]
 800359c:	2101      	movs	r1, #1
 800359e:	2383      	movs	r3, #131	; 0x83
 80035a0:	f7ff fa57 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035a4:	4620      	mov	r0, r4
 80035a6:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 80035aa:	f8cb a5b8 	str.w	sl, [fp, #1464]	; 0x5b8
        linespace = space;
 80035ae:	f8ab 85bc 	strh.w	r8, [fp, #1468]	; 0x5bc
        boundingArea = calculateBoundingArea();
 80035b2:	f00e f95b 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80035b6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80035ba:	f20b 53c4 	addw	r3, fp, #1476	; 0x5c4
 80035be:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80035c2:	2311      	movs	r3, #17
    labelRES.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8DL));
 80035c4:	ee19 0a10 	vmov	r0, s18
 80035c8:	4629      	mov	r1, r5
 80035ca:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80035ce:	9721      	str	r7, [sp, #132]	; 0x84
 80035d0:	f00e fbe6 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035d4:	ee19 1a10 	vmov	r1, s18
 80035d8:	4648      	mov	r0, r9
 80035da:	f00b ff71 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelCLT.setPosition(1, 264, 132, 73);
 80035de:	2049      	movs	r0, #73	; 0x49
 80035e0:	2384      	movs	r3, #132	; 0x84
 80035e2:	f44f 7284 	mov.w	r2, #264	; 0x108
 80035e6:	9000      	str	r0, [sp, #0]
 80035e8:	2101      	movs	r1, #1
 80035ea:	ee19 0a90 	vmov	r0, s19
 80035ee:	f7ff fa30 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035f2:	4620      	mov	r0, r4
 80035f4:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 80035f8:	f8cb a600 	str.w	sl, [fp, #1536]	; 0x600
        linespace = space;
 80035fc:	f8ab 8604 	strh.w	r8, [fp, #1540]	; 0x604
        boundingArea = calculateBoundingArea();
 8003600:	f00e f934 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003604:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003608:	f20b 630c 	addw	r3, fp, #1548	; 0x60c
 800360c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003610:	2314      	movs	r3, #20
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 8003612:	ee19 0a90 	vmov	r0, s19
 8003616:	4629      	mov	r1, r5
    labelTmot.setPosition(134, 130, 133, 37);
 8003618:	2625      	movs	r6, #37	; 0x25
 800361a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800361e:	9721      	str	r7, [sp, #132]	; 0x84
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 8003620:	f00e fbbe 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003624:	ee19 1a90 	vmov	r1, s19
 8003628:	4648      	mov	r0, r9
 800362a:	f00b ff49 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTmot.setPosition(134, 130, 133, 37);
 800362e:	2385      	movs	r3, #133	; 0x85
 8003630:	2282      	movs	r2, #130	; 0x82
 8003632:	ee1a 0a10 	vmov	r0, s20
 8003636:	9600      	str	r6, [sp, #0]
 8003638:	2186      	movs	r1, #134	; 0x86
 800363a:	f7ff fa0a 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800363e:	4620      	mov	r0, r4
 8003640:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 8003644:	f8cb a648 	str.w	sl, [fp, #1608]	; 0x648
        linespace = space;
 8003648:	f8ab 864c 	strh.w	r8, [fp, #1612]	; 0x64c
        boundingArea = calculateBoundingArea();
 800364c:	f00e f90e 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003650:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003654:	f20b 6354 	addw	r3, fp, #1620	; 0x654
 8003658:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800365c:	231e      	movs	r3, #30
    labelTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S2KY));
 800365e:	ee1a 0a10 	vmov	r0, s20
 8003662:	4629      	mov	r1, r5
 8003664:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003668:	9721      	str	r7, [sp, #132]	; 0x84
 800366a:	f00e fb99 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800366e:	ee1a 1a10 	vmov	r1, s20
 8003672:	4648      	mov	r0, r9
 8003674:	f00b ff24 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelToil.setPosition(134, 250, 133, 37);
 8003678:	2385      	movs	r3, #133	; 0x85
 800367a:	22fa      	movs	r2, #250	; 0xfa
 800367c:	ee1a 0a90 	vmov	r0, s21
 8003680:	9600      	str	r6, [sp, #0]
 8003682:	2186      	movs	r1, #134	; 0x86
 8003684:	f7ff f9e5 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003688:	4620      	mov	r0, r4
 800368a:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 800368e:	f8cb a690 	str.w	sl, [fp, #1680]	; 0x690
        linespace = space;
 8003692:	f8ab 8694 	strh.w	r8, [fp, #1684]	; 0x694
        boundingArea = calculateBoundingArea();
 8003696:	f00e f8e9 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800369a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800369e:	f20b 639c 	addw	r3, fp, #1692	; 0x69c
 80036a2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80036a6:	231d      	movs	r3, #29
    labelToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2Q01));
 80036a8:	ee1a 0a90 	vmov	r0, s21
 80036ac:	4629      	mov	r1, r5
 80036ae:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80036b2:	9721      	str	r7, [sp, #132]	; 0x84
 80036b4:	f00e fb74 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036b8:	ee1a 1a90 	vmov	r1, s21
 80036bc:	4648      	mov	r0, r9
 80036be:	f00b feff 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin.setPosition(134, 367, 133, 37);
 80036c2:	2385      	movs	r3, #133	; 0x85
 80036c4:	f240 126f 	movw	r2, #367	; 0x16f
 80036c8:	ee1b 0a10 	vmov	r0, s22
 80036cc:	9600      	str	r6, [sp, #0]
 80036ce:	2186      	movs	r1, #134	; 0x86
 80036d0:	f7ff f9bf 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80036d4:	4620      	mov	r0, r4
 80036d6:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80036da:	f8cb a6d8 	str.w	sl, [fp, #1752]	; 0x6d8
        linespace = space;
 80036de:	f8ab 86dc 	strh.w	r8, [fp, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 80036e2:	f00e f8c3 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80036e6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80036ea:	f20b 63e4 	addw	r3, fp, #1764	; 0x6e4
 80036ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80036f2:	231c      	movs	r3, #28
    labelTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VFR));
 80036f4:	ee1b 0a10 	vmov	r0, s22
 80036f8:	4629      	mov	r1, r5
 80036fa:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80036fe:	9721      	str	r7, [sp, #132]	; 0x84
 8003700:	f00e fb4e 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003704:	ee1b 1a10 	vmov	r1, s22
 8003708:	4648      	mov	r0, r9
 800370a:	f00b fed9 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelBat12.setPosition(268, 370, 130, 37);
 800370e:	2382      	movs	r3, #130	; 0x82
 8003710:	f44f 72b9 	mov.w	r2, #370	; 0x172
 8003714:	ee1b 0a90 	vmov	r0, s23
 8003718:	9600      	str	r6, [sp, #0]
 800371a:	f44f 7186 	mov.w	r1, #268	; 0x10c
 800371e:	f7ff f998 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003722:	4620      	mov	r0, r4
 8003724:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8003728:	f8cb a720 	str.w	sl, [fp, #1824]	; 0x720
        linespace = space;
 800372c:	f8ab 8724 	strh.w	r8, [fp, #1828]	; 0x724
        boundingArea = calculateBoundingArea();
 8003730:	f00e f89c 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003734:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003738:	f20b 732c 	addw	r3, fp, #1836	; 0x72c
 800373c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003740:	231b      	movs	r3, #27
    labelBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DE5T));
 8003742:	ee1b 0a90 	vmov	r0, s23
 8003746:	4629      	mov	r1, r5
 8003748:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800374c:	9721      	str	r7, [sp, #132]	; 0x84
 800374e:	f00e fb27 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003752:	ee1b 1a90 	vmov	r1, s23
 8003756:	4648      	mov	r0, r9
 8003758:	f00b feb2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin_1_1.setPosition(399, 370, 130, 37);
 800375c:	2382      	movs	r3, #130	; 0x82
 800375e:	f44f 72b9 	mov.w	r2, #370	; 0x172
 8003762:	ee1c 0a10 	vmov	r0, s24
 8003766:	9600      	str	r6, [sp, #0]
 8003768:	f240 118f 	movw	r1, #399	; 0x18f
 800376c:	f7ff f971 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003770:	4620      	mov	r0, r4
 8003772:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8003776:	f8cb a768 	str.w	sl, [fp, #1896]	; 0x768
        linespace = space;
 800377a:	f8ab 876c 	strh.w	r8, [fp, #1900]	; 0x76c
        boundingArea = calculateBoundingArea();
 800377e:	f00e f875 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003782:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003786:	f20b 7374 	addw	r3, fp, #1908	; 0x774
 800378a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800378e:	231a      	movs	r3, #26
    labelTorin_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6T5M));
 8003790:	ee1c 0a10 	vmov	r0, s24
 8003794:	4629      	mov	r1, r5
 8003796:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800379a:	9721      	str	r7, [sp, #132]	; 0x84
 800379c:	f00e fb00 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037a0:	ee1c 1a10 	vmov	r1, s24
 80037a4:	4648      	mov	r0, r9
 80037a6:	f00b fe8b 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPoil.setPosition(532, 130, 132, 37);
 80037aa:	2384      	movs	r3, #132	; 0x84
 80037ac:	2282      	movs	r2, #130	; 0x82
 80037ae:	ee1c 0a90 	vmov	r0, s25
 80037b2:	9600      	str	r6, [sp, #0]
 80037b4:	e00a      	b.n	80037cc <_ZN20DriverScreenViewBaseC1Ev+0x9d8>
 80037b6:	bf00      	nop
 80037b8:	2000ef80 	.word	0x2000ef80
 80037bc:	08028192 	.word	0x08028192
 80037c0:	08028208 	.word	0x08028208
 80037c4:	2000ef74 	.word	0x2000ef74
 80037c8:	2000ef78 	.word	0x2000ef78
 80037cc:	f44f 7105 	mov.w	r1, #532	; 0x214
 80037d0:	f7ff f93f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037d4:	4620      	mov	r0, r4
 80037d6:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 80037da:	f8cb a7b0 	str.w	sl, [fp, #1968]	; 0x7b0
        linespace = space;
 80037de:	f8ab 87b4 	strh.w	r8, [fp, #1972]	; 0x7b4
        boundingArea = calculateBoundingArea();
 80037e2:	f00e f843 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80037e6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80037ea:	f20b 73bc 	addw	r3, fp, #1980	; 0x7bc
 80037ee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80037f2:	2319      	movs	r3, #25
    labelPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8R8S));
 80037f4:	ee1c 0a90 	vmov	r0, s25
 80037f8:	4629      	mov	r1, r5
 80037fa:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80037fe:	9721      	str	r7, [sp, #132]	; 0x84
 8003800:	f00e face 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003804:	ee1c 1a90 	vmov	r1, s25
 8003808:	4648      	mov	r0, r9
 800380a:	f00b fe59 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTPS.setPosition(664, 130, 136, 37);
 800380e:	2388      	movs	r3, #136	; 0x88
 8003810:	2282      	movs	r2, #130	; 0x82
 8003812:	ee1d 0a10 	vmov	r0, s26
 8003816:	9600      	str	r6, [sp, #0]
 8003818:	f44f 7126 	mov.w	r1, #664	; 0x298
 800381c:	f7ff f919 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003820:	4620      	mov	r0, r4
 8003822:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 8003826:	f8cb a7f8 	str.w	sl, [fp, #2040]	; 0x7f8
        linespace = space;
 800382a:	f8ab 87fc 	strh.w	r8, [fp, #2044]	; 0x7fc
        boundingArea = calculateBoundingArea();
 800382e:	f00e f81d 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003832:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003836:	f60b 0304 	addw	r3, fp, #2052	; 0x804
 800383a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800383e:	2317      	movs	r3, #23
    labelTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OXBY));
 8003840:	ee1d 0a10 	vmov	r0, s26
 8003844:	4629      	mov	r1, r5
 8003846:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800384a:	9721      	str	r7, [sp, #132]	; 0x84
 800384c:	f00e faa8 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003850:	ee1d 1a10 	vmov	r1, s26
 8003854:	4648      	mov	r0, r9
 8003856:	f00b fe33 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPbrake.setPosition(665, 250, 131, 37);
 800385a:	2383      	movs	r3, #131	; 0x83
 800385c:	22fa      	movs	r2, #250	; 0xfa
 800385e:	ee1d 0a90 	vmov	r0, s27
 8003862:	9600      	str	r6, [sp, #0]
 8003864:	f240 2199 	movw	r1, #665	; 0x299
 8003868:	f7ff f8f3 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800386c:	4620      	mov	r0, r4
 800386e:	ee1d 1a90 	vmov	r1, s27
        color = newColor;
 8003872:	f8cb a840 	str.w	sl, [fp, #2112]	; 0x840
        linespace = space;
 8003876:	f8ab 8844 	strh.w	r8, [fp, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 800387a:	f00d fff7 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800387e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003882:	f60b 034c 	addw	r3, fp, #2124	; 0x84c
 8003886:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800388a:	2316      	movs	r3, #22
    labelPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7E8Q));
 800388c:	ee1d 0a90 	vmov	r0, s27
 8003890:	4629      	mov	r1, r5
 8003892:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003896:	9721      	str	r7, [sp, #132]	; 0x84
 8003898:	f00e fa82 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800389c:	ee1d 1a90 	vmov	r1, s27
 80038a0:	4648      	mov	r0, r9
 80038a2:	f00b fe0d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPfuel.setPosition(532, 250, 131, 37);
 80038a6:	2383      	movs	r3, #131	; 0x83
 80038a8:	22fa      	movs	r2, #250	; 0xfa
 80038aa:	ee1e 0a10 	vmov	r0, s28
 80038ae:	9600      	str	r6, [sp, #0]
 80038b0:	f44f 7105 	mov.w	r1, #532	; 0x214
 80038b4:	f7ff f8cd 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038b8:	4620      	mov	r0, r4
 80038ba:	ee1e 1a10 	vmov	r1, s28
        color = newColor;
 80038be:	f8cb a888 	str.w	sl, [fp, #2184]	; 0x888
        linespace = space;
 80038c2:	f8ab 888c 	strh.w	r8, [fp, #2188]	; 0x88c
        boundingArea = calculateBoundingArea();
 80038c6:	f00d ffd1 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038ca:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80038ce:	f60b 0394 	addw	r3, fp, #2196	; 0x894
 80038d2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80038d6:	2318      	movs	r3, #24
    labelPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z9U2));
 80038d8:	ee1e 0a10 	vmov	r0, s28
 80038dc:	4629      	mov	r1, r5
 80038de:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80038e2:	9721      	str	r7, [sp, #132]	; 0x84
 80038e4:	f00e fa5c 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038e8:	ee1e 1a10 	vmov	r1, s28
 80038ec:	4648      	mov	r0, r9
 80038ee:	f00b fde7 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPoil.setPosition(532, 167, 131, 73);
 80038f2:	2049      	movs	r0, #73	; 0x49
 80038f4:	2383      	movs	r3, #131	; 0x83
 80038f6:	22a7      	movs	r2, #167	; 0xa7
 80038f8:	f44f 7105 	mov.w	r1, #532	; 0x214
 80038fc:	9000      	str	r0, [sp, #0]
 80038fe:	9802      	ldr	r0, [sp, #8]
 8003900:	f7ff f8a7 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003904:	f8cb a8d0 	str.w	sl, [fp, #2256]	; 0x8d0
        linespace = space;
 8003908:	f8ab 88d4 	strh.w	r8, [fp, #2260]	; 0x8d4
        return TextArea::BoundingArea();
 800390c:	4628      	mov	r0, r5
 800390e:	f7ff fa2f 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003912:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003916:	f60b 03dc 	addw	r3, fp, #2268	; 0x8dc
 800391a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800391e:	49cc      	ldr	r1, [pc, #816]	; (8003c50 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003920:	680b      	ldr	r3, [r1, #0]
        : typedTextId(id)
 8003922:	463e      	mov	r6, r7
    Unicode::snprintf(txtPoilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TP9G).getText());
 8003924:	f50b 643b 	add.w	r4, fp, #2992	; 0xbb0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003928:	2b00      	cmp	r3, #0
 800392a:	f43f ad5a 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800392e:	4ac9      	ldr	r2, [pc, #804]	; (8003c54 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 8003930:	8813      	ldrh	r3, [r2, #0]
 8003932:	2b29      	cmp	r3, #41	; 0x29
 8003934:	f67f ad5f 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003938:	4fc7      	ldr	r7, [pc, #796]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 800393a:	2129      	movs	r1, #41	; 0x29
 800393c:	6838      	ldr	r0, [r7, #0]
 800393e:	f004 fabf 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003942:	4ac6      	ldr	r2, [pc, #792]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003944:	4603      	mov	r3, r0
 8003946:	2105      	movs	r1, #5
 8003948:	4620      	mov	r0, r4
 800394a:	f014 fac5 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800394e:	232a      	movs	r3, #42	; 0x2a
    txtPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E4IL));
 8003950:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8003952:	f8cb 48e8 	str.w	r4, [fp, #2280]	; 0x8e8
 8003956:	4629      	mov	r1, r5
 8003958:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800395c:	9621      	str	r6, [sp, #132]	; 0x84
 800395e:	f00e fa1f 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003962:	9902      	ldr	r1, [sp, #8]
 8003964:	4648      	mov	r0, r9
 8003966:	f00b fdab 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTPS.setPosition(664, 167, 137, 73);
 800396a:	2349      	movs	r3, #73	; 0x49
 800396c:	22a7      	movs	r2, #167	; 0xa7
 800396e:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003972:	9803      	ldr	r0, [sp, #12]
 8003974:	9300      	str	r3, [sp, #0]
 8003976:	2389      	movs	r3, #137	; 0x89
 8003978:	f7ff f86b 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800397c:	f8cb a91c 	str.w	sl, [fp, #2332]	; 0x91c
        linespace = space;
 8003980:	f8ab 8920 	strh.w	r8, [fp, #2336]	; 0x920
        return TextArea::BoundingArea();
 8003984:	4628      	mov	r0, r5
 8003986:	f7ff f9f3 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800398a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800398e:	f60b 1328 	addw	r3, fp, #2344	; 0x928
 8003992:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003996:	49ae      	ldr	r1, [pc, #696]	; (8003c50 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003998:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2VKQ).getText());
 800399a:	f60b 34ba 	addw	r4, fp, #3002	; 0xbba
 800399e:	2b00      	cmp	r3, #0
 80039a0:	f43f ad1f 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80039a4:	4aab      	ldr	r2, [pc, #684]	; (8003c54 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 80039a6:	8813      	ldrh	r3, [r2, #0]
 80039a8:	2b23      	cmp	r3, #35	; 0x23
 80039aa:	f67f ad24 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 80039ae:	6838      	ldr	r0, [r7, #0]
 80039b0:	2123      	movs	r1, #35	; 0x23
 80039b2:	f004 fa85 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80039b6:	4aa9      	ldr	r2, [pc, #676]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 80039b8:	4603      	mov	r3, r0
 80039ba:	2103      	movs	r1, #3
 80039bc:	4620      	mov	r0, r4
 80039be:	f014 fa8b 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 80039c2:	f8cb 4934 	str.w	r4, [fp, #2356]	; 0x934
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 80039c6:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 80039c8:	2324      	movs	r3, #36	; 0x24
 80039ca:	9803      	ldr	r0, [sp, #12]
 80039cc:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80039d0:	4621      	mov	r1, r4
 80039d2:	9621      	str	r6, [sp, #132]	; 0x84
    txtPbrake.setPosition(664, 287, 136, 73);
 80039d4:	f04f 0a49 	mov.w	sl, #73	; 0x49
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 80039d8:	f00e f9e2 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039dc:	9903      	ldr	r1, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80039de:	4e9c      	ldr	r6, [pc, #624]	; (8003c50 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 80039e0:	4648      	mov	r0, r9
 80039e2:	f00b fd6d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 80039e6:	f04f 38ff 	mov.w	r8, #4294967295
    txtPbrake.setPosition(664, 287, 136, 73);
 80039ea:	2388      	movs	r3, #136	; 0x88
 80039ec:	f240 121f 	movw	r2, #287	; 0x11f
 80039f0:	f44f 7126 	mov.w	r1, #664	; 0x298
 80039f4:	9804      	ldr	r0, [sp, #16]
 80039f6:	f8cd a000 	str.w	sl, [sp]
        linespace = space;
 80039fa:	2700      	movs	r7, #0
 80039fc:	f7ff f829 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003a00:	f8cb 8968 	str.w	r8, [fp, #2408]	; 0x968
        linespace = space;
 8003a04:	f8ab 796c 	strh.w	r7, [fp, #2412]	; 0x96c
        return TextArea::BoundingArea();
 8003a08:	4620      	mov	r0, r4
 8003a0a:	f7ff f9b1 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a0e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a12:	f60b 1374 	addw	r3, fp, #2420	; 0x974
 8003a16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a1a:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5Z8O).getText());
 8003a1c:	f50b 613c 	add.w	r1, fp, #3008	; 0xbc0
 8003a20:	9102      	str	r1, [sp, #8]
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	f43f acdd 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        return typedTextId < numberOfTypedTexts;
 8003a28:	4d8a      	ldr	r5, [pc, #552]	; (8003c54 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003a2a:	882b      	ldrh	r3, [r5, #0]
 8003a2c:	2b21      	cmp	r3, #33	; 0x21
 8003a2e:	f67f ace2 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003a32:	4a89      	ldr	r2, [pc, #548]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003a34:	2121      	movs	r1, #33	; 0x21
 8003a36:	6810      	ldr	r0, [r2, #0]
 8003a38:	f004 fa42 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003a3c:	4a87      	ldr	r2, [pc, #540]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003a3e:	4603      	mov	r3, r0
 8003a40:	2104      	movs	r1, #4
 8003a42:	9802      	ldr	r0, [sp, #8]
 8003a44:	f014 fa48 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003a48:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003a4a:	4b85      	ldr	r3, [pc, #532]	; (8003c60 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IEE9));
 8003a4c:	9804      	ldr	r0, [sp, #16]
 8003a4e:	f8cb 1980 	str.w	r1, [fp, #2432]	; 0x980
 8003a52:	9321      	str	r3, [sp, #132]	; 0x84
 8003a54:	4621      	mov	r1, r4
 8003a56:	2322      	movs	r3, #34	; 0x22
 8003a58:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003a5c:	f00e f9a0 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a60:	9904      	ldr	r1, [sp, #16]
 8003a62:	4648      	mov	r0, r9
 8003a64:	f00b fd2c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat24.setPosition(399, 407, 130, 73);
 8003a68:	2382      	movs	r3, #130	; 0x82
 8003a6a:	f240 1297 	movw	r2, #407	; 0x197
 8003a6e:	f240 118f 	movw	r1, #399	; 0x18f
 8003a72:	9805      	ldr	r0, [sp, #20]
 8003a74:	f8cd a000 	str.w	sl, [sp]
 8003a78:	f7fe ffeb 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003a7c:	f8cb 89b4 	str.w	r8, [fp, #2484]	; 0x9b4
        linespace = space;
 8003a80:	f8ab 79b8 	strh.w	r7, [fp, #2488]	; 0x9b8
        return TextArea::BoundingArea();
 8003a84:	4620      	mov	r0, r4
 8003a86:	f7ff f973 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003a8a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a8e:	f50b 631c 	add.w	r3, fp, #2496	; 0x9c0
 8003a92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003a96:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat24Buffer, TXTBAT24_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1E1Q).getText());
 8003a98:	f60b 31c8 	addw	r1, fp, #3016	; 0xbc8
 8003a9c:	9102      	str	r1, [sp, #8]
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	f43f ac9f 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003aa4:	882b      	ldrh	r3, [r5, #0]
 8003aa6:	2b1f      	cmp	r3, #31
 8003aa8:	f67f aca5 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003aac:	4a6a      	ldr	r2, [pc, #424]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003aae:	211f      	movs	r1, #31
 8003ab0:	6810      	ldr	r0, [r2, #0]
 8003ab2:	f004 fa05 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003ab6:	4a69      	ldr	r2, [pc, #420]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003ab8:	4603      	mov	r3, r0
 8003aba:	2105      	movs	r1, #5
 8003abc:	9802      	ldr	r0, [sp, #8]
 8003abe:	f014 fa0b 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003ac2:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003ac4:	4b66      	ldr	r3, [pc, #408]	; (8003c60 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat24.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BB62));
 8003ac6:	9805      	ldr	r0, [sp, #20]
 8003ac8:	f8cb 19cc 	str.w	r1, [fp, #2508]	; 0x9cc
 8003acc:	9321      	str	r3, [sp, #132]	; 0x84
 8003ace:	4621      	mov	r1, r4
 8003ad0:	2320      	movs	r3, #32
 8003ad2:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ad6:	f00e f963 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ada:	9905      	ldr	r1, [sp, #20]
 8003adc:	4648      	mov	r0, r9
 8003ade:	f00b fcef 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPfuel.setPosition(533, 287, 131, 73);
 8003ae2:	2383      	movs	r3, #131	; 0x83
 8003ae4:	f240 121f 	movw	r2, #287	; 0x11f
 8003ae8:	f240 2115 	movw	r1, #533	; 0x215
 8003aec:	9806      	ldr	r0, [sp, #24]
 8003aee:	f8cd a000 	str.w	sl, [sp]
 8003af2:	f7fe ffae 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003af6:	f8cb 8a00 	str.w	r8, [fp, #2560]	; 0xa00
        linespace = space;
 8003afa:	f8ab 7a04 	strh.w	r7, [fp, #2564]	; 0xa04
        return TextArea::BoundingArea();
 8003afe:	4620      	mov	r0, r4
 8003b00:	f7ff f936 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003b04:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b08:	f60b 230c 	addw	r3, fp, #2572	; 0xa0c
 8003b0c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b10:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPfuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AJ0J).getText());
 8003b12:	f60b 31d2 	addw	r1, fp, #3026	; 0xbd2
 8003b16:	9102      	str	r1, [sp, #8]
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	f43f ac62 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b1e:	882b      	ldrh	r3, [r5, #0]
 8003b20:	2b27      	cmp	r3, #39	; 0x27
 8003b22:	f67f ac68 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003b26:	4a4c      	ldr	r2, [pc, #304]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003b28:	2127      	movs	r1, #39	; 0x27
 8003b2a:	6810      	ldr	r0, [r2, #0]
 8003b2c:	f004 f9c8 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003b30:	4a4a      	ldr	r2, [pc, #296]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003b32:	4603      	mov	r3, r0
 8003b34:	2104      	movs	r1, #4
 8003b36:	9802      	ldr	r0, [sp, #8]
 8003b38:	f014 f9ce 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003b3c:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003b3e:	4b48      	ldr	r3, [pc, #288]	; (8003c60 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q9H4));
 8003b40:	9806      	ldr	r0, [sp, #24]
 8003b42:	f8cb 1a18 	str.w	r1, [fp, #2584]	; 0xa18
 8003b46:	9321      	str	r3, [sp, #132]	; 0x84
 8003b48:	4621      	mov	r1, r4
 8003b4a:	2328      	movs	r3, #40	; 0x28
 8003b4c:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003b50:	f00e f926 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b54:	9906      	ldr	r1, [sp, #24]
 8003b56:	4648      	mov	r0, r9
 8003b58:	f00b fcb2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat12.setPosition(267, 407, 131, 73);
 8003b5c:	2383      	movs	r3, #131	; 0x83
 8003b5e:	f240 1297 	movw	r2, #407	; 0x197
 8003b62:	f240 110b 	movw	r1, #267	; 0x10b
 8003b66:	9807      	ldr	r0, [sp, #28]
 8003b68:	f8cd a000 	str.w	sl, [sp]
 8003b6c:	f7fe ff71 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003b70:	f8cb 8a4c 	str.w	r8, [fp, #2636]	; 0xa4c
        linespace = space;
 8003b74:	f8ab 7a50 	strh.w	r7, [fp, #2640]	; 0xa50
        return TextArea::BoundingArea();
 8003b78:	4620      	mov	r0, r4
 8003b7a:	f7ff f8f9 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003b7e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b82:	f60b 2358 	addw	r3, fp, #2648	; 0xa58
 8003b86:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003b8a:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat12Buffer, TXTBAT12_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KOX0).getText());
 8003b8c:	f60b 31da 	addw	r1, fp, #3034	; 0xbda
 8003b90:	9102      	str	r1, [sp, #8]
 8003b92:	2b00      	cmp	r3, #0
 8003b94:	f43f ac25 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003b98:	882b      	ldrh	r3, [r5, #0]
 8003b9a:	2b25      	cmp	r3, #37	; 0x25
 8003b9c:	f67f ac2b 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003ba0:	4a2d      	ldr	r2, [pc, #180]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003ba2:	2125      	movs	r1, #37	; 0x25
 8003ba4:	6810      	ldr	r0, [r2, #0]
 8003ba6:	f004 f98b 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003baa:	4a2c      	ldr	r2, [pc, #176]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003bac:	4603      	mov	r3, r0
 8003bae:	2105      	movs	r1, #5
 8003bb0:	9802      	ldr	r0, [sp, #8]
 8003bb2:	f014 f991 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003bb6:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003bb8:	4b29      	ldr	r3, [pc, #164]	; (8003c60 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1UNR));
 8003bba:	9807      	ldr	r0, [sp, #28]
 8003bbc:	f8cb 1a64 	str.w	r1, [fp, #2660]	; 0xa64
 8003bc0:	9321      	str	r3, [sp, #132]	; 0x84
 8003bc2:	4621      	mov	r1, r4
 8003bc4:	2326      	movs	r3, #38	; 0x26
 8003bc6:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003bca:	f00e f8e9 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003bce:	9907      	ldr	r1, [sp, #28]
 8003bd0:	4648      	mov	r0, r9
 8003bd2:	f00b fc75 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtToil.setPosition(134, 287, 133, 73);
 8003bd6:	2385      	movs	r3, #133	; 0x85
 8003bd8:	f240 121f 	movw	r2, #287	; 0x11f
 8003bdc:	2186      	movs	r1, #134	; 0x86
 8003bde:	9808      	ldr	r0, [sp, #32]
 8003be0:	f8cd a000 	str.w	sl, [sp]
 8003be4:	f7fe ff35 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        return TextArea::BoundingArea();
 8003be8:	4620      	mov	r0, r4
        color = newColor;
 8003bea:	f8cb 8a98 	str.w	r8, [fp, #2712]	; 0xa98
        linespace = space;
 8003bee:	f8ab 7a9c 	strh.w	r7, [fp, #2716]	; 0xa9c
 8003bf2:	f7ff f8bd 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003bf6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003bfa:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 8003bfe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c02:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUPH).getText());
 8003c04:	f60b 34e4 	addw	r4, fp, #3044	; 0xbe4
 8003c08:	2b00      	cmp	r3, #0
 8003c0a:	f43f abea 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c0e:	882b      	ldrh	r3, [r5, #0]
 8003c10:	2b2d      	cmp	r3, #45	; 0x2d
 8003c12:	f67f abf0 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003c16:	4e10      	ldr	r6, [pc, #64]	; (8003c58 <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
        : typedTextId(id)
 8003c18:	4d11      	ldr	r5, [pc, #68]	; (8003c60 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
        return texts->getText(typedTextId);
 8003c1a:	6830      	ldr	r0, [r6, #0]
 8003c1c:	212d      	movs	r1, #45	; 0x2d
 8003c1e:	f004 f94f 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003c22:	4a0e      	ldr	r2, [pc, #56]	; (8003c5c <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003c24:	4603      	mov	r3, r0
 8003c26:	2104      	movs	r1, #4
 8003c28:	4620      	mov	r0, r4
 8003c2a:	f014 f955 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003c2e:	f8cb 4ab0 	str.w	r4, [fp, #2736]	; 0xab0
    txtToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BID7));
 8003c32:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 8003c34:	232e      	movs	r3, #46	; 0x2e
 8003c36:	9808      	ldr	r0, [sp, #32]
 8003c38:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003c3c:	4621      	mov	r1, r4
 8003c3e:	9521      	str	r5, [sp, #132]	; 0x84
 8003c40:	f00e f8ae 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c44:	9908      	ldr	r1, [sp, #32]
 8003c46:	4648      	mov	r0, r9
 8003c48:	f00b fc3a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003c4c:	e00a      	b.n	8003c64 <_ZN20DriverScreenViewBaseC1Ev+0xe70>
 8003c4e:	bf00      	nop
 8003c50:	2000ef74 	.word	0x2000ef74
 8003c54:	2000ef78 	.word	0x2000ef78
 8003c58:	2000ef80 	.word	0x2000ef80
 8003c5c:	08028192 	.word	0x08028192
 8003c60:	08028208 	.word	0x08028208
    txtTorin.setPosition(134, 404, 133, 76);
 8003c64:	234c      	movs	r3, #76	; 0x4c
 8003c66:	f44f 72ca 	mov.w	r2, #404	; 0x194
 8003c6a:	2186      	movs	r1, #134	; 0x86
 8003c6c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003c6e:	9300      	str	r3, [sp, #0]
 8003c70:	2385      	movs	r3, #133	; 0x85
 8003c72:	f7fe feee 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c76:	f8cb 8ae4 	str.w	r8, [fp, #2788]	; 0xae4
        linespace = space;
 8003c7a:	f8ab 7ae8 	strh.w	r7, [fp, #2792]	; 0xae8
        return TextArea::BoundingArea();
 8003c7e:	4620      	mov	r0, r4
 8003c80:	f7ff f876 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c84:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
        linespace = space;
 8003c88:	46b8      	mov	r8, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c8a:	4f53      	ldr	r7, [pc, #332]	; (8003dd8 <_ZN20DriverScreenViewBaseC1Ev+0xfe4>)
        boundingArea = calculateBoundingArea();
 8003c8c:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 8003c90:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003c94:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IM6N).getText());
 8003c96:	f60b 3aec 	addw	sl, fp, #3052	; 0xbec
 8003c9a:	2b00      	cmp	r3, #0
 8003c9c:	f43f aba1 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003ca0:	4a4e      	ldr	r2, [pc, #312]	; (8003ddc <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003ca2:	8813      	ldrh	r3, [r2, #0]
 8003ca4:	2b2b      	cmp	r3, #43	; 0x2b
 8003ca6:	f67f aba6 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003caa:	212b      	movs	r1, #43	; 0x2b
 8003cac:	6830      	ldr	r0, [r6, #0]
 8003cae:	f004 f907 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003cb2:	4a4b      	ldr	r2, [pc, #300]	; (8003de0 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003cb4:	4603      	mov	r3, r0
 8003cb6:	2104      	movs	r1, #4
 8003cb8:	4650      	mov	r0, sl
 8003cba:	f014 f90d 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003cbe:	232c      	movs	r3, #44	; 0x2c
    txtTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9US));
 8003cc0:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003cc2:	f8cb aafc 	str.w	sl, [fp, #2812]	; 0xafc
 8003cc6:	4621      	mov	r1, r4
 8003cc8:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ccc:	9521      	str	r5, [sp, #132]	; 0x84
 8003cce:	f00e f867 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003cd2:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003cd4:	4648      	mov	r0, r9
 8003cd6:	f00b fbf3 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(267, 24, 264, 72);
 8003cda:	2348      	movs	r3, #72	; 0x48
 8003cdc:	2218      	movs	r2, #24
 8003cde:	f240 110b 	movw	r1, #267	; 0x10b
 8003ce2:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003ce4:	9300      	str	r3, [sp, #0]
 8003ce6:	f44f 7384 	mov.w	r3, #264	; 0x108
 8003cea:	f7fe feb2 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003cee:	f04f 33ff 	mov.w	r3, #4294967295
 8003cf2:	f8cb 3b30 	str.w	r3, [fp, #2864]	; 0xb30
        linespace = space;
 8003cf6:	f8ab 8b34 	strh.w	r8, [fp, #2868]	; 0xb34
        return TextArea::BoundingArea();
 8003cfa:	4620      	mov	r0, r4
 8003cfc:	f7ff f838 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d00:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003d04:	f60b 333c 	addw	r3, fp, #2876	; 0xb3c
 8003d08:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d0c:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1QOJ).getText());
 8003d0e:	f60b 3af4 	addw	sl, fp, #3060	; 0xbf4
 8003d12:	2b00      	cmp	r3, #0
 8003d14:	f43f ab65 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d18:	4a30      	ldr	r2, [pc, #192]	; (8003ddc <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003d1a:	8813      	ldrh	r3, [r2, #0]
 8003d1c:	2b33      	cmp	r3, #51	; 0x33
 8003d1e:	f67f ab6a 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003d22:	2133      	movs	r1, #51	; 0x33
 8003d24:	6830      	ldr	r0, [r6, #0]
 8003d26:	f004 f8cb 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003d2a:	4a2d      	ldr	r2, [pc, #180]	; (8003de0 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003d2c:	4603      	mov	r3, r0
 8003d2e:	2103      	movs	r1, #3
 8003d30:	4650      	mov	r0, sl
 8003d32:	f014 f8d1 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003d36:	2335      	movs	r3, #53	; 0x35
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QZ30));
 8003d38:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003d3a:	f8cb ab48 	str.w	sl, [fp, #2888]	; 0xb48
 8003d3e:	4621      	mov	r1, r4
 8003d40:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003d44:	9521      	str	r5, [sp, #132]	; 0x84
 8003d46:	f00e f82b 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d4a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003d4c:	4648      	mov	r0, r9
 8003d4e:	f00b fbb7 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setPosition(532, 24, 268, 72);
 8003d52:	2348      	movs	r3, #72	; 0x48
 8003d54:	2218      	movs	r2, #24
 8003d56:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003d5a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8003d5c:	9300      	str	r3, [sp, #0]
 8003d5e:	f44f 7386 	mov.w	r3, #268	; 0x10c
 8003d62:	f7fe fe76 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d66:	f04f 33ff 	mov.w	r3, #4294967295
 8003d6a:	f8cb 3b7c 	str.w	r3, [fp, #2940]	; 0xb7c
        linespace = space;
 8003d6e:	f8ab 8b80 	strh.w	r8, [fp, #2944]	; 0xb80
        return TextArea::BoundingArea();
 8003d72:	4620      	mov	r0, r4
 8003d74:	f7fe fffc 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d78:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003d7c:	f60b 3388 	addw	r3, fp, #2952	; 0xb88
 8003d80:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d84:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AHJH).getText());
 8003d86:	f60b 38fa 	addw	r8, fp, #3066	; 0xbfa
 8003d8a:	2b00      	cmp	r3, #0
 8003d8c:	f43f ab29 	beq.w	80033e2 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d90:	4a12      	ldr	r2, [pc, #72]	; (8003ddc <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003d92:	8813      	ldrh	r3, [r2, #0]
 8003d94:	2b31      	cmp	r3, #49	; 0x31
 8003d96:	f67f ab2e 	bls.w	80033f6 <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003d9a:	6830      	ldr	r0, [r6, #0]
 8003d9c:	2131      	movs	r1, #49	; 0x31
 8003d9e:	f004 f88f 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8003da2:	4a0f      	ldr	r2, [pc, #60]	; (8003de0 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003da4:	4603      	mov	r3, r0
 8003da6:	2108      	movs	r1, #8
 8003da8:	4640      	mov	r0, r8
 8003daa:	f014 f895 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003dae:	2332      	movs	r3, #50	; 0x32
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0URK));
 8003db0:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8003db2:	f8cb 8b94 	str.w	r8, [fp, #2964]	; 0xb94
 8003db6:	4621      	mov	r1, r4
 8003db8:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003dbc:	9521      	str	r5, [sp, #132]	; 0x84
 8003dbe:	f00d ffef 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003dc2:	4648      	mov	r0, r9
 8003dc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003dc6:	f00b fb7b 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003dca:	4658      	mov	r0, fp
 8003dcc:	b025      	add	sp, #148	; 0x94
 8003dce:	ecbd 8b10 	vpop	{d8-d15}
 8003dd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003dd6:	bf00      	nop
 8003dd8:	2000ef74 	.word	0x2000ef74
 8003ddc:	2000ef78 	.word	0x2000ef78
 8003de0:	08028192 	.word	0x08028192

08003de4 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8003de4:	4770      	bx	lr

08003de6 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8003de6:	4770      	bx	lr

08003de8 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8003de8:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003dec:	6808      	ldr	r0, [r1, #0]
 8003dee:	6849      	ldr	r1, [r1, #4]
 8003df0:	c303      	stmia	r3!, {r0, r1}
    }
 8003df2:	4770      	bx	lr

08003df4 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8003df4:	4770      	bx	lr

08003df6 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8003df6:	4770      	bx	lr

08003df8 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8003df8:	6041      	str	r1, [r0, #4]
    }
 8003dfa:	4770      	bx	lr

08003dfc <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 8003dfc:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003dfe:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 8003e00:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8003e04:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003e08:	8002      	strh	r2, [r0, #0]
 8003e0a:	8042      	strh	r2, [r0, #2]
 8003e0c:	8084      	strh	r4, [r0, #4]
 8003e0e:	80c1      	strh	r1, [r0, #6]
        }
 8003e10:	bd10      	pop	{r4, pc}

08003e12 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 8003e12:	4770      	bx	lr

08003e14 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003e14:	4770      	bx	lr
	...

08003e18 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003e18:	4b06      	ldr	r3, [pc, #24]	; (8003e34 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003e1a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003e1e:	2300      	movs	r3, #0
 8003e20:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Startup

void FrontendApplicationBase::gotoStartupScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartupScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003e24:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003e28:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003e2c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoStartupScreenNoTransition();
    }
 8003e30:	4770      	bx	lr
 8003e32:	bf00      	nop
 8003e34:	080042c1 	.word	0x080042c1

08003e38 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003e38:	2301      	movs	r3, #1
 8003e3a:	7203      	strb	r3, [r0, #8]
    }
 8003e3c:	4770      	bx	lr

08003e3e <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 8003e3e:	4770      	bx	lr

08003e40 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 8003e40:	4770      	bx	lr

08003e42 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 8003e42:	4770      	bx	lr

08003e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 8003e44:	4770      	bx	lr

08003e46 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003e46:	4770      	bx	lr

08003e48 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003e48:	4770      	bx	lr

08003e4a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 8003e4a:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8003e4c:	6840      	ldr	r0, [r0, #4]
 8003e4e:	6803      	ldr	r3, [r0, #0]
 8003e50:	3110      	adds	r1, #16
 8003e52:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003e54:	4718      	bx	r3

08003e56 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8003e56:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8003e58:	6840      	ldr	r0, [r0, #4]
 8003e5a:	6803      	ldr	r3, [r0, #0]
 8003e5c:	3110      	adds	r1, #16
 8003e5e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8003e60:	4718      	bx	r3

08003e62 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8003e62:	4770      	bx	lr

08003e64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003e64:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003e66:	68c2      	ldr	r2, [r0, #12]
 8003e68:	6841      	ldr	r1, [r0, #4]
 8003e6a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8003e6c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003e6e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003e72:	07d2      	lsls	r2, r2, #31
 8003e74:	bf48      	it	mi
 8003e76:	590a      	ldrmi	r2, [r1, r4]
 8003e78:	689b      	ldr	r3, [r3, #8]
    }
 8003e7a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003e7e:	bf48      	it	mi
 8003e80:	58d3      	ldrmi	r3, [r2, r3]
 8003e82:	4718      	bx	r3

08003e84 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003e84:	6843      	ldr	r3, [r0, #4]
 8003e86:	b12b      	cbz	r3, 8003e94 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8003e88:	6883      	ldr	r3, [r0, #8]
 8003e8a:	b92b      	cbnz	r3, 8003e98 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8003e8c:	68c0      	ldr	r0, [r0, #12]
 8003e8e:	f000 0001 	and.w	r0, r0, #1
 8003e92:	4770      	bx	lr
 8003e94:	4618      	mov	r0, r3
 8003e96:	4770      	bx	lr
 8003e98:	2001      	movs	r0, #1
    }
 8003e9a:	4770      	bx	lr

08003e9c <_ZN8touchgfx12NoTransitionD0Ev>:
 8003e9c:	b510      	push	{r4, lr}
 8003e9e:	210c      	movs	r1, #12
 8003ea0:	4604      	mov	r4, r0
 8003ea2:	f022 fa3d 	bl	8026320 <_ZdlPvj>
 8003ea6:	4620      	mov	r0, r4
 8003ea8:	bd10      	pop	{r4, pc}

08003eaa <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003eaa:	b510      	push	{r4, lr}
 8003eac:	2110      	movs	r1, #16
 8003eae:	4604      	mov	r4, r0
 8003eb0:	f022 fa36 	bl	8026320 <_ZdlPvj>
 8003eb4:	4620      	mov	r0, r4
 8003eb6:	bd10      	pop	{r4, pc}

08003eb8 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003eb8:	b510      	push	{r4, lr}
 8003eba:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003ebe:	4604      	mov	r4, r0
 8003ec0:	f022 fa2e 	bl	8026320 <_ZdlPvj>
 8003ec4:	4620      	mov	r0, r4
 8003ec6:	bd10      	pop	{r4, pc}

08003ec8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8003ec8:	b510      	push	{r4, lr}
 8003eca:	2138      	movs	r1, #56	; 0x38
 8003ecc:	4604      	mov	r4, r0
 8003ece:	f022 fa27 	bl	8026320 <_ZdlPvj>
 8003ed2:	4620      	mov	r0, r4
 8003ed4:	bd10      	pop	{r4, pc}

08003ed6 <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 8003ed6:	b510      	push	{r4, lr}
 8003ed8:	2128      	movs	r1, #40	; 0x28
 8003eda:	4604      	mov	r4, r0
 8003edc:	f022 fa20 	bl	8026320 <_ZdlPvj>
 8003ee0:	4620      	mov	r0, r4
 8003ee2:	bd10      	pop	{r4, pc}

08003ee4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8003ee4:	b510      	push	{r4, lr}
 8003ee6:	2140      	movs	r1, #64	; 0x40
 8003ee8:	4604      	mov	r4, r0
 8003eea:	f022 fa19 	bl	8026320 <_ZdlPvj>
 8003eee:	4620      	mov	r0, r4
 8003ef0:	bd10      	pop	{r4, pc}

08003ef2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8003ef2:	b510      	push	{r4, lr}
 8003ef4:	2140      	movs	r1, #64	; 0x40
 8003ef6:	4604      	mov	r4, r0
 8003ef8:	f022 fa12 	bl	8026320 <_ZdlPvj>
 8003efc:	4620      	mov	r0, r4
 8003efe:	bd10      	pop	{r4, pc}

08003f00 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8003f00:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 8003f02:	f010 fe79 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 8003f06:	6803      	ldr	r3, [r0, #0]
    }
 8003f08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 8003f0c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8003f0e:	4718      	bx	r3

08003f10 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8003f10:	4b05      	ldr	r3, [pc, #20]	; (8003f28 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 8003f12:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8003f14:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8003f16:	b12b      	cbz	r3, 8003f24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 8003f18:	6840      	ldr	r0, [r0, #4]
 8003f1a:	b118      	cbz	r0, 8003f24 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 8003f1c:	6803      	ldr	r3, [r0, #0]
 8003f1e:	310c      	adds	r1, #12
 8003f20:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003f22:	4718      	bx	r3
        }
    }
 8003f24:	4770      	bx	lr
 8003f26:	bf00      	nop
 8003f28:	2000ef1b 	.word	0x2000ef1b

08003f2c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8003f2c:	4b05      	ldr	r3, [pc, #20]	; (8003f44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 8003f2e:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 8003f30:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 8003f32:	b12b      	cbz	r3, 8003f40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8003f34:	6840      	ldr	r0, [r0, #4]
 8003f36:	b118      	cbz	r0, 8003f40 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8003f38:	6803      	ldr	r3, [r0, #0]
 8003f3a:	310c      	adds	r1, #12
 8003f3c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8003f3e:	4718      	bx	r3
    }
 8003f40:	4770      	bx	lr
 8003f42:	bf00      	nop
 8003f44:	2000ef1b 	.word	0x2000ef1b

08003f48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8003f48:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8003f4a:	b570      	push	{r4, r5, r6, lr}
 8003f4c:	4605      	mov	r5, r0
        if (done)
 8003f4e:	b9bb      	cbnz	r3, 8003f80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 8003f50:	6840      	ldr	r0, [r0, #4]
 8003f52:	6803      	ldr	r3, [r0, #0]
 8003f54:	69db      	ldr	r3, [r3, #28]
 8003f56:	4798      	blx	r3
 8003f58:	4604      	mov	r4, r0
        while (d)
 8003f5a:	b14c      	cbz	r4, 8003f70 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 8003f5c:	88a1      	ldrh	r1, [r4, #4]
 8003f5e:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 8003f60:	1ac9      	subs	r1, r1, r3
 8003f62:	6823      	ldr	r3, [r4, #0]
 8003f64:	4620      	mov	r0, r4
 8003f66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f68:	b209      	sxth	r1, r1
 8003f6a:	4798      	blx	r3
        return nextSibling;
 8003f6c:	69a4      	ldr	r4, [r4, #24]
        while (d)
 8003f6e:	e7f4      	b.n	8003f5a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 8003f70:	6868      	ldr	r0, [r5, #4]
 8003f72:	6803      	ldr	r3, [r0, #0]
 8003f74:	f105 010c 	add.w	r1, r5, #12
 8003f78:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8003f7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8003f7e:	4718      	bx	r3
    }
 8003f80:	bd70      	pop	{r4, r5, r6, pc}

08003f82 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8003f82:	b570      	push	{r4, r5, r6, lr}
 8003f84:	4604      	mov	r4, r0
        animationCounter++;
 8003f86:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003f8a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 8003f8e:	3001      	adds	r0, #1
 8003f90:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8003f92:	4298      	cmp	r0, r3
        animationCounter++;
 8003f94:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003f98:	d905      	bls.n	8003fa6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
 8003f9a:	2301      	movs	r3, #1
 8003f9c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8003f9e:	2300      	movs	r3, #0
 8003fa0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8003fa4:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003fa6:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8003faa:	2100      	movs	r1, #0
 8003fac:	f012 fc56 	bl	801685c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8003fb0:	f010 0201 	ands.w	r2, r0, #1
 8003fb4:	b283      	uxth	r3, r0
 8003fb6:	d006      	beq.n	8003fc6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003fb8:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003fbc:	2800      	cmp	r0, #0
 8003fbe:	bfd8      	it	le
 8003fc0:	460a      	movle	r2, r1
 8003fc2:	1898      	adds	r0, r3, r2
 8003fc4:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8003fc6:	8a23      	ldrh	r3, [r4, #16]
 8003fc8:	1ac0      	subs	r0, r0, r3
 8003fca:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8003fcc:	6860      	ldr	r0, [r4, #4]
 8003fce:	6803      	ldr	r3, [r0, #0]
 8003fd0:	69db      	ldr	r3, [r3, #28]
 8003fd2:	4798      	blx	r3
 8003fd4:	4605      	mov	r5, r0
        while (d)
 8003fd6:	b14d      	cbz	r5, 8003fec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8003fd8:	88a9      	ldrh	r1, [r5, #4]
 8003fda:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8003fdc:	4419      	add	r1, r3
 8003fde:	682b      	ldr	r3, [r5, #0]
 8003fe0:	4628      	mov	r0, r5
 8003fe2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003fe4:	b209      	sxth	r1, r1
 8003fe6:	4798      	blx	r3
 8003fe8:	69ad      	ldr	r5, [r5, #24]
        while (d)
 8003fea:	e7f4      	b.n	8003fd6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8003fec:	6860      	ldr	r0, [r4, #4]
 8003fee:	6803      	ldr	r3, [r0, #0]
    }
 8003ff0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8003ff4:	695b      	ldr	r3, [r3, #20]
 8003ff6:	4718      	bx	r3

08003ff8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
        if (done)
 8003ff8:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8003ffa:	b570      	push	{r4, r5, r6, lr}
 8003ffc:	4605      	mov	r5, r0
        if (done)
 8003ffe:	b9bb      	cbnz	r3, 8004030 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        Drawable* d = screenContainer->getFirstChild();
 8004000:	6840      	ldr	r0, [r0, #4]
 8004002:	6803      	ldr	r3, [r0, #0]
 8004004:	69db      	ldr	r3, [r3, #28]
 8004006:	4798      	blx	r3
 8004008:	4604      	mov	r4, r0
        while (d)
 800400a:	b14c      	cbz	r4, 8004020 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
                d->setX(d->getX() - targetValue);
 800400c:	88a1      	ldrh	r1, [r4, #4]
 800400e:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 8004010:	1ac9      	subs	r1, r1, r3
 8004012:	6823      	ldr	r3, [r4, #0]
 8004014:	4620      	mov	r0, r4
 8004016:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004018:	b209      	sxth	r1, r1
 800401a:	4798      	blx	r3
 800401c:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800401e:	e7f4      	b.n	800400a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
        screenContainer->add(snapshot);
 8004020:	6868      	ldr	r0, [r5, #4]
 8004022:	6803      	ldr	r3, [r0, #0]
 8004024:	f105 010c 	add.w	r1, r5, #12
 8004028:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 800402a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 800402e:	4718      	bx	r3
    }
 8004030:	bd70      	pop	{r4, r5, r6, pc}

08004032 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004032:	b570      	push	{r4, r5, r6, lr}
 8004034:	4604      	mov	r4, r0
        animationCounter++;
 8004036:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 800403a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 800403e:	3001      	adds	r0, #1
 8004040:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004042:	4298      	cmp	r0, r3
        animationCounter++;
 8004044:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8004048:	d905      	bls.n	8004056 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 800404a:	2301      	movs	r3, #1
 800404c:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800404e:	2300      	movs	r3, #0
 8004050:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8004054:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8004056:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800405a:	2100      	movs	r1, #0
 800405c:	f012 fbfe 	bl	801685c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004060:	f010 0201 	ands.w	r2, r0, #1
 8004064:	b283      	uxth	r3, r0
 8004066:	d006      	beq.n	8004076 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8004068:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800406c:	2800      	cmp	r0, #0
 800406e:	bfd8      	it	le
 8004070:	460a      	movle	r2, r1
 8004072:	1898      	adds	r0, r3, r2
 8004074:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8004076:	8a23      	ldrh	r3, [r4, #16]
 8004078:	1ac0      	subs	r0, r0, r3
 800407a:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 800407c:	6860      	ldr	r0, [r4, #4]
 800407e:	6803      	ldr	r3, [r0, #0]
 8004080:	69db      	ldr	r3, [r3, #28]
 8004082:	4798      	blx	r3
 8004084:	4605      	mov	r5, r0
        while (d)
 8004086:	b14d      	cbz	r5, 800409c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8004088:	88a9      	ldrh	r1, [r5, #4]
 800408a:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 800408c:	4419      	add	r1, r3
 800408e:	682b      	ldr	r3, [r5, #0]
 8004090:	4628      	mov	r0, r5
 8004092:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004094:	b209      	sxth	r1, r1
 8004096:	4798      	blx	r3
 8004098:	69ad      	ldr	r5, [r5, #24]
        while (d)
 800409a:	e7f4      	b.n	8004086 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 800409c:	6860      	ldr	r0, [r4, #4]
 800409e:	6803      	ldr	r3, [r0, #0]
    }
 80040a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 80040a4:	695b      	ldr	r3, [r3, #20]
 80040a6:	4718      	bx	r3

080040a8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80040a8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80040aa:	4604      	mov	r4, r0
        animationCounter++;
 80040ac:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 80040ae:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80040b0:	3001      	adds	r0, #1
 80040b2:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80040b4:	4298      	cmp	r0, r3
        animationCounter++;
 80040b6:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 80040b8:	d905      	bls.n	80040c6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 80040ba:	2301      	movs	r3, #1
 80040bc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80040be:	2300      	movs	r3, #0
 80040c0:	72a3      	strb	r3, [r4, #10]
    }
 80040c2:	b003      	add	sp, #12
 80040c4:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80040c6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80040ca:	2100      	movs	r1, #0
 80040cc:	f012 fbc6 	bl	801685c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 80040d0:	f010 0201 	ands.w	r2, r0, #1
 80040d4:	b283      	uxth	r3, r0
 80040d6:	d128      	bne.n	800412a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80040d8:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040da:	4b18      	ldr	r3, [pc, #96]	; (800413c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80040dc:	4818      	ldr	r0, [pc, #96]	; (8004140 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040de:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 80040e0:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040e2:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 80040e4:	f9b0 0000 	ldrsh.w	r0, [r0]
 80040e8:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040ec:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 80040ee:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 80040f0:	442b      	add	r3, r5
 80040f2:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 80040f4:	b212      	sxth	r2, r2
 80040f6:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 80040fa:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80040fc:	8322      	strh	r2, [r4, #24]
 80040fe:	f8ad 2000 	strh.w	r2, [sp]
 8004102:	2200      	movs	r2, #0
 8004104:	691b      	ldr	r3, [r3, #16]
 8004106:	f8ad 2002 	strh.w	r2, [sp, #2]
 800410a:	4669      	mov	r1, sp
 800410c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800410e:	7aa3      	ldrb	r3, [r4, #10]
 8004110:	2b01      	cmp	r3, #1
 8004112:	d1d6      	bne.n	80040c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 8004114:	4b0b      	ldr	r3, [pc, #44]	; (8004144 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 8004116:	781b      	ldrb	r3, [r3, #0]
 8004118:	2b00      	cmp	r3, #0
 800411a:	d0d2      	beq.n	80040c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800411c:	f010 fd6c 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8004120:	b003      	add	sp, #12
 8004122:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 8004126:	f010 bd6d 	b.w	8014c04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800412a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800412e:	2800      	cmp	r0, #0
 8004130:	bfd8      	it	le
 8004132:	460a      	movle	r2, r1
 8004134:	4413      	add	r3, r2
 8004136:	81e3      	strh	r3, [r4, #14]
 8004138:	e7cf      	b.n	80040da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 800413a:	bf00      	nop
 800413c:	2000ef10 	.word	0x2000ef10
 8004140:	2000ef12 	.word	0x2000ef12
 8004144:	2000ef1a 	.word	0x2000ef1a

08004148 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8004148:	b510      	push	{r4, lr}
 800414a:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800414c:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8004150:	b158      	cbz	r0, 800416a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8004152:	6803      	ldr	r3, [r0, #0]
 8004154:	68db      	ldr	r3, [r3, #12]
 8004156:	4798      	blx	r3
 8004158:	b138      	cbz	r0, 800416a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800415a:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800415e:	6803      	ldr	r3, [r0, #0]
 8004160:	689b      	ldr	r3, [r3, #8]
 8004162:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004164:	2300      	movs	r3, #0
 8004166:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800416a:	bd10      	pop	{r4, pc}

0800416c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl()
{
 800416c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004170:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004174:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004176:	68a8      	ldr	r0, [r5, #8]
 8004178:	6803      	ldr	r3, [r0, #0]
 800417a:	6a1b      	ldr	r3, [r3, #32]
 800417c:	4798      	blx	r3
 800417e:	f640 431b 	movw	r3, #3099	; 0xc1b
 8004182:	4298      	cmp	r0, r3
 8004184:	d805      	bhi.n	8004192 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x26>
 8004186:	4b46      	ldr	r3, [pc, #280]	; (80042a0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x134>)
 8004188:	4a46      	ldr	r2, [pc, #280]	; (80042a4 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 800418a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800418c:	4846      	ldr	r0, [pc, #280]	; (80042a8 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x13c>)
 800418e:	f022 f8f5 	bl	802637c <__assert_func>
 8004192:	6868      	ldr	r0, [r5, #4]
 8004194:	6803      	ldr	r3, [r0, #0]
 8004196:	6a1b      	ldr	r3, [r3, #32]
 8004198:	4798      	blx	r3
 800419a:	280f      	cmp	r0, #15
 800419c:	d803      	bhi.n	80041a6 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x3a>
 800419e:	4b43      	ldr	r3, [pc, #268]	; (80042ac <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x140>)
 80041a0:	4a40      	ldr	r2, [pc, #256]	; (80042a4 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 80041a2:	21a4      	movs	r1, #164	; 0xa4
 80041a4:	e7f2      	b.n	800418c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80041a6:	68e8      	ldr	r0, [r5, #12]
 80041a8:	6803      	ldr	r3, [r0, #0]
 80041aa:	6a1b      	ldr	r3, [r3, #32]
 80041ac:	4798      	blx	r3
 80041ae:	280b      	cmp	r0, #11
 80041b0:	d803      	bhi.n	80041ba <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x4e>
 80041b2:	4b3f      	ldr	r3, [pc, #252]	; (80042b0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x144>)
 80041b4:	4a3b      	ldr	r2, [pc, #236]	; (80042a4 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 80041b6:	21a5      	movs	r1, #165	; 0xa5
 80041b8:	e7e8      	b.n	800418c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80041ba:	f010 fd1d 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80041be:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80042b8 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x14c>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80041c2:	3004      	adds	r0, #4
 80041c4:	f010 fd7e 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80041c8:	f8d9 0000 	ldr.w	r0, [r9]
 80041cc:	b110      	cbz	r0, 80041d4 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80041ce:	6803      	ldr	r3, [r0, #0]
 80041d0:	68db      	ldr	r3, [r3, #12]
 80041d2:	4798      	blx	r3
    if (*currentTrans)
 80041d4:	f8d9 0000 	ldr.w	r0, [r9]
 80041d8:	b110      	cbz	r0, 80041e0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80041da:	6803      	ldr	r3, [r0, #0]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	4798      	blx	r3
    if (*currentScreen)
 80041e0:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80042bc <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x150>
 80041e4:	f8d8 0000 	ldr.w	r0, [r8]
 80041e8:	b110      	cbz	r0, 80041f0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041ea:	6803      	ldr	r3, [r0, #0]
 80041ec:	695b      	ldr	r3, [r3, #20]
 80041ee:	4798      	blx	r3
    if (*currentPresenter)
 80041f0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041f4:	b110      	cbz	r0, 80041fc <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80041f6:	6803      	ldr	r3, [r0, #0]
 80041f8:	685b      	ldr	r3, [r3, #4]
 80041fa:	4798      	blx	r3
    if (*currentScreen)
 80041fc:	f8d8 0000 	ldr.w	r0, [r8]
 8004200:	b110      	cbz	r0, 8004208 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004202:	6803      	ldr	r3, [r0, #0]
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4798      	blx	r3
    if (*currentPresenter)
 8004208:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800420c:	b110      	cbz	r0, 8004214 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 800420e:	6803      	ldr	r3, [r0, #0]
 8004210:	689b      	ldr	r3, [r3, #8]
 8004212:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004214:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	2100      	movs	r1, #0
 800421a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800421c:	4798      	blx	r3
        : screenContainer(0), done(false)
 800421e:	f04f 0b00 	mov.w	fp, #0
 8004222:	4b24      	ldr	r3, [pc, #144]	; (80042b4 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x148>)
 8004224:	6003      	str	r3, [r0, #0]
 8004226:	4604      	mov	r4, r0
 8004228:	f8c0 b004 	str.w	fp, [r0, #4]
 800422c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004230:	68a8      	ldr	r0, [r5, #8]
 8004232:	6803      	ldr	r3, [r0, #0]
 8004234:	4659      	mov	r1, fp
 8004236:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004238:	4798      	blx	r3
 800423a:	4606      	mov	r6, r0
 800423c:	f003 ff9a 	bl	8008174 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004240:	6868      	ldr	r0, [r5, #4]
 8004242:	6803      	ldr	r3, [r0, #0]
 8004244:	4659      	mov	r1, fp
 8004246:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004248:	4798      	blx	r3
 800424a:	4631      	mov	r1, r6
 800424c:	4605      	mov	r5, r0
 800424e:	f003 ff6b 	bl	8008128 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 8004252:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8004256:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800425a:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800425e:	b1e5      	cbz	r5, 800429a <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x12e>
 8004260:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004262:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004266:	6833      	ldr	r3, [r6, #0]
    virtual void debugMessageChanged() {};
    virtual void missionChanged() {};

    void bind(Model* m)
    {
        model = m;
 8004268:	f8c5 a008 	str.w	sl, [r5, #8]
 800426c:	4630      	mov	r0, r6
 800426e:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004270:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004272:	4798      	blx	r3
    newPresenter->activate();
 8004274:	682b      	ldr	r3, [r5, #0]
 8004276:	4628      	mov	r0, r5
 8004278:	681b      	ldr	r3, [r3, #0]
 800427a:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800427c:	4621      	mov	r1, r4
 800427e:	4630      	mov	r0, r6
 8004280:	f012 fae6 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004284:	6823      	ldr	r3, [r4, #0]
 8004286:	4620      	mov	r0, r4
 8004288:	691b      	ldr	r3, [r3, #16]
 800428a:	4798      	blx	r3
    newTransition->invalidate();
 800428c:	6823      	ldr	r3, [r4, #0]
 800428e:	695b      	ldr	r3, [r3, #20]
 8004290:	4620      	mov	r0, r4
}
 8004292:	b001      	add	sp, #4
 8004294:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004298:	4718      	bx	r3
    model->bind(newPresenter);
 800429a:	462b      	mov	r3, r5
 800429c:	e7e1      	b.n	8004262 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xf6>
 800429e:	bf00      	nop
 80042a0:	08028338 	.word	0x08028338
 80042a4:	080283c6 	.word	0x080283c6
 80042a8:	080284d4 	.word	0x080284d4
 80042ac:	0802851b 	.word	0x0802851b
 80042b0:	080285be 	.word	0x080285be
 80042b4:	08029174 	.word	0x08029174
 80042b8:	2000ef64 	.word	0x2000ef64
 80042bc:	2000ef60 	.word	0x2000ef60

080042c0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv>:
{
 80042c0:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartupView, StartupPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80042c4:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80042c8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80042ca:	68a8      	ldr	r0, [r5, #8]
 80042cc:	6803      	ldr	r3, [r0, #0]
 80042ce:	6a1b      	ldr	r3, [r3, #32]
 80042d0:	4798      	blx	r3
 80042d2:	28e3      	cmp	r0, #227	; 0xe3
 80042d4:	d805      	bhi.n	80042e2 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x22>
 80042d6:	4b46      	ldr	r3, [pc, #280]	; (80043f0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 80042d8:	4a46      	ldr	r2, [pc, #280]	; (80043f4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 80042da:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80042dc:	4846      	ldr	r0, [pc, #280]	; (80043f8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x138>)
 80042de:	f022 f84d 	bl	802637c <__assert_func>
 80042e2:	6868      	ldr	r0, [r5, #4]
 80042e4:	6803      	ldr	r3, [r0, #0]
 80042e6:	6a1b      	ldr	r3, [r3, #32]
 80042e8:	4798      	blx	r3
 80042ea:	280f      	cmp	r0, #15
 80042ec:	d803      	bhi.n	80042f6 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x36>
 80042ee:	4b43      	ldr	r3, [pc, #268]	; (80043fc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x13c>)
 80042f0:	4a40      	ldr	r2, [pc, #256]	; (80043f4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 80042f2:	21a4      	movs	r1, #164	; 0xa4
 80042f4:	e7f2      	b.n	80042dc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80042f6:	68e8      	ldr	r0, [r5, #12]
 80042f8:	6803      	ldr	r3, [r0, #0]
 80042fa:	6a1b      	ldr	r3, [r3, #32]
 80042fc:	4798      	blx	r3
 80042fe:	280b      	cmp	r0, #11
 8004300:	d803      	bhi.n	800430a <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x4a>
 8004302:	4b3f      	ldr	r3, [pc, #252]	; (8004400 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x140>)
 8004304:	4a3b      	ldr	r2, [pc, #236]	; (80043f4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 8004306:	21a5      	movs	r1, #165	; 0xa5
 8004308:	e7e8      	b.n	80042dc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 800430a:	f010 fc75 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800430e:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8004408 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x148>
 8004312:	3004      	adds	r0, #4
 8004314:	f010 fcd6 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004318:	f8d9 0000 	ldr.w	r0, [r9]
 800431c:	b110      	cbz	r0, 8004324 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800431e:	6803      	ldr	r3, [r0, #0]
 8004320:	68db      	ldr	r3, [r3, #12]
 8004322:	4798      	blx	r3
    if (*currentTrans)
 8004324:	f8d9 0000 	ldr.w	r0, [r9]
 8004328:	b110      	cbz	r0, 8004330 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800432a:	6803      	ldr	r3, [r0, #0]
 800432c:	681b      	ldr	r3, [r3, #0]
 800432e:	4798      	blx	r3
    if (*currentScreen)
 8004330:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 800440c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x14c>
 8004334:	f8d8 0000 	ldr.w	r0, [r8]
 8004338:	b110      	cbz	r0, 8004340 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800433a:	6803      	ldr	r3, [r0, #0]
 800433c:	695b      	ldr	r3, [r3, #20]
 800433e:	4798      	blx	r3
    if (*currentPresenter)
 8004340:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004344:	b110      	cbz	r0, 800434c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8004346:	6803      	ldr	r3, [r0, #0]
 8004348:	685b      	ldr	r3, [r3, #4]
 800434a:	4798      	blx	r3
    if (*currentScreen)
 800434c:	f8d8 0000 	ldr.w	r0, [r8]
 8004350:	b110      	cbz	r0, 8004358 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8004352:	6803      	ldr	r3, [r0, #0]
 8004354:	681b      	ldr	r3, [r3, #0]
 8004356:	4798      	blx	r3
    if (*currentPresenter)
 8004358:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800435c:	b110      	cbz	r0, 8004364 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800435e:	6803      	ldr	r3, [r0, #0]
 8004360:	689b      	ldr	r3, [r3, #8]
 8004362:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004364:	68e8      	ldr	r0, [r5, #12]
 8004366:	6803      	ldr	r3, [r0, #0]
 8004368:	2100      	movs	r1, #0
 800436a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800436c:	4798      	blx	r3
 800436e:	f04f 0b00 	mov.w	fp, #0
 8004372:	4b24      	ldr	r3, [pc, #144]	; (8004404 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x144>)
 8004374:	6003      	str	r3, [r0, #0]
 8004376:	4604      	mov	r4, r0
 8004378:	f8c0 b004 	str.w	fp, [r0, #4]
 800437c:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004380:	68a8      	ldr	r0, [r5, #8]
 8004382:	6803      	ldr	r3, [r0, #0]
 8004384:	4659      	mov	r1, fp
 8004386:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004388:	4798      	blx	r3
 800438a:	4606      	mov	r6, r0
 800438c:	f004 fcfe 	bl	8008d8c <_ZN11StartupViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004390:	6868      	ldr	r0, [r5, #4]
 8004392:	6803      	ldr	r3, [r0, #0]
 8004394:	4659      	mov	r1, fp
 8004396:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004398:	4798      	blx	r3
 800439a:	4631      	mov	r1, r6
 800439c:	4605      	mov	r5, r0
 800439e:	f004 fcd1 	bl	8008d44 <_ZN16StartupPresenterC1ER11StartupView>
    *currentTrans = newTransition;
 80043a2:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80043a6:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80043aa:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80043ae:	b1e5      	cbz	r5, 80043ea <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x12a>
 80043b0:	1d2b      	adds	r3, r5, #4
 80043b2:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80043b6:	6833      	ldr	r3, [r6, #0]
 80043b8:	f8c5 a008 	str.w	sl, [r5, #8]
 80043bc:	4630      	mov	r0, r6
 80043be:	68db      	ldr	r3, [r3, #12]
 80043c0:	63f5      	str	r5, [r6, #60]	; 0x3c
 80043c2:	4798      	blx	r3
    newPresenter->activate();
 80043c4:	682b      	ldr	r3, [r5, #0]
 80043c6:	4628      	mov	r0, r5
 80043c8:	681b      	ldr	r3, [r3, #0]
 80043ca:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80043cc:	4621      	mov	r1, r4
 80043ce:	4630      	mov	r0, r6
 80043d0:	f012 fa3e 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80043d4:	6823      	ldr	r3, [r4, #0]
 80043d6:	4620      	mov	r0, r4
 80043d8:	691b      	ldr	r3, [r3, #16]
 80043da:	4798      	blx	r3
    newTransition->invalidate();
 80043dc:	6823      	ldr	r3, [r4, #0]
 80043de:	695b      	ldr	r3, [r3, #20]
 80043e0:	4620      	mov	r0, r4
}
 80043e2:	b001      	add	sp, #4
 80043e4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80043e8:	4718      	bx	r3
    model->bind(newPresenter);
 80043ea:	462b      	mov	r3, r5
 80043ec:	e7e1      	b.n	80043b2 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xf2>
 80043ee:	bf00      	nop
 80043f0:	08028338 	.word	0x08028338
 80043f4:	08028661 	.word	0x08028661
 80043f8:	080284d4 	.word	0x080284d4
 80043fc:	0802851b 	.word	0x0802851b
 8004400:	080285be 	.word	0x080285be
 8004404:	08029174 	.word	0x08029174
 8004408:	2000ef64 	.word	0x2000ef64
 800440c:	2000ef60 	.word	0x2000ef60

08004410 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8004410:	4b04      	ldr	r3, [pc, #16]	; (8004424 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8004418:	b10a      	cbz	r2, 800441e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800441a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800441c:	b900      	cbnz	r0, 8004420 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800441e:	6898      	ldr	r0, [r3, #8]
    }
 8004420:	4770      	bx	lr
 8004422:	bf00      	nop
 8004424:	2000ef1c 	.word	0x2000ef1c

08004428 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8004428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800442a:	4604      	mov	r4, r0
 800442c:	4617      	mov	r7, r2
 800442e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8004430:	f010 fd16 	bl	8014e60 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8004434:	4b10      	ldr	r3, [pc, #64]	; (8004478 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 8004436:	601c      	str	r4, [r3, #0]
      model(m)
 8004438:	4b10      	ldr	r3, [pc, #64]	; (800447c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800443a:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 800443c:	4b10      	ldr	r3, [pc, #64]	; (8004480 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 800443e:	2500      	movs	r5, #0
 8004440:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 8004444:	4b0f      	ldr	r3, [pc, #60]	; (8004484 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8004446:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800444a:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800444c:	6803      	ldr	r3, [r0, #0]
 800444e:	4629      	mov	r1, r5
 8004450:	689b      	ldr	r3, [r3, #8]
 8004452:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 8004456:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800445a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800445c:	4628      	mov	r0, r5
 800445e:	f003 fcf3 	bl	8007e48 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004462:	f7ff ffd5 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 8004466:	f01a f8c0 	bl	801e5ea <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800446a:	f7ff ffd1 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 800446e:	f01a f937 	bl	801e6e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004472:	4620      	mov	r0, r4
 8004474:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004476:	bf00      	nop
 8004478:	2000ef70 	.word	0x2000ef70
 800447c:	08029120 	.word	0x08029120
 8004480:	08029108 	.word	0x08029108
 8004484:	2000ef1c 	.word	0x2000ef1c

08004488 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8004488:	4b06      	ldr	r3, [pc, #24]	; (80044a4 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv+0x1c>)
 800448a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800448e:	2300      	movs	r3, #0
 8004490:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004494:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004498:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800449c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044a0:	4770      	bx	lr
 80044a2:	bf00      	nop
 80044a4:	080042c1 	.word	0x080042c1

080044a8 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>:
 80044a8:	4b06      	ldr	r3, [pc, #24]	; (80044c4 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv+0x1c>)
 80044aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044ae:	2300      	movs	r3, #0
 80044b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044c0:	4770      	bx	lr
 80044c2:	bf00      	nop
 80044c4:	080045d5 	.word	0x080045d5

080044c8 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>:
 80044c8:	4b06      	ldr	r3, [pc, #24]	; (80044e4 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv+0x1c>)
 80044ca:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044ce:	2300      	movs	r3, #0
 80044d0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044d4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044d8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044dc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80044e0:	4770      	bx	lr
 80044e2:	bf00      	nop
 80044e4:	08004a61 	.word	0x08004a61

080044e8 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>:
 80044e8:	4b06      	ldr	r3, [pc, #24]	; (8004504 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv+0x1c>)
 80044ea:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80044ee:	2300      	movs	r3, #0
 80044f0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80044f4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80044f8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80044fc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004500:	4770      	bx	lr
 8004502:	bf00      	nop
 8004504:	08004fd1 	.word	0x08004fd1

08004508 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>:
 8004508:	4b06      	ldr	r3, [pc, #24]	; (8004524 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv+0x1c>)
 800450a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800450e:	2300      	movs	r3, #0
 8004510:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004514:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004518:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800451c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004520:	4770      	bx	lr
 8004522:	bf00      	nop
 8004524:	08004e91 	.word	0x08004e91

08004528 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>:
 8004528:	4b06      	ldr	r3, [pc, #24]	; (8004544 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv+0x1c>)
 800452a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800452e:	2300      	movs	r3, #0
 8004530:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004534:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004538:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800453c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004540:	4770      	bx	lr
 8004542:	bf00      	nop
 8004544:	08004921 	.word	0x08004921

08004548 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>:
 8004548:	4b06      	ldr	r3, [pc, #24]	; (8004564 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv+0x1c>)
 800454a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800454e:	2300      	movs	r3, #0
 8004550:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004554:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004558:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800455c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004560:	4770      	bx	lr
 8004562:	bf00      	nop
 8004564:	08004d51 	.word	0x08004d51

08004568 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>:
 8004568:	4b06      	ldr	r3, [pc, #24]	; (8004584 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv+0x1c>)
 800456a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800456e:	2300      	movs	r3, #0
 8004570:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004574:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004578:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800457c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004580:	4770      	bx	lr
 8004582:	bf00      	nop
 8004584:	080047e1 	.word	0x080047e1

08004588 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>:
 8004588:	4b06      	ldr	r3, [pc, #24]	; (80045a4 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv+0x1c>)
 800458a:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800458e:	2300      	movs	r3, #0
 8004590:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004594:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8004598:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 800459c:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045a0:	4770      	bx	lr
 80045a2:	bf00      	nop
 80045a4:	0800416d 	.word	0x0800416d

080045a8 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>:
 80045a8:	4b06      	ldr	r3, [pc, #24]	; (80045c4 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv+0x1c>)
 80045aa:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80045ae:	2300      	movs	r3, #0
 80045b0:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80045b4:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80045b8:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80045bc:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80045c0:	4770      	bx	lr
 80045c2:	bf00      	nop
 80045c4:	08004c11 	.word	0x08004c11

080045c8 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>:
 80045c8:	6803      	ldr	r3, [r0, #0]
 80045ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045cc:	4718      	bx	r3

080045ce <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>:
 80045ce:	6803      	ldr	r3, [r0, #0]
 80045d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80045d2:	4718      	bx	r3

080045d4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv>:
{
 80045d4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80045d8:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	; 0x154
{
 80045dc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80045de:	f8db 0008 	ldr.w	r0, [fp, #8]
 80045e2:	6803      	ldr	r3, [r0, #0]
 80045e4:	6a1b      	ldr	r3, [r3, #32]
 80045e6:	4798      	blx	r3
 80045e8:	f244 7397 	movw	r3, #18327	; 0x4797
 80045ec:	4298      	cmp	r0, r3
 80045ee:	d805      	bhi.n	80045fc <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x28>
 80045f0:	4b54      	ldr	r3, [pc, #336]	; (8004744 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x170>)
 80045f2:	4a55      	ldr	r2, [pc, #340]	; (8004748 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 80045f4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80045f6:	4855      	ldr	r0, [pc, #340]	; (800474c <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x178>)
 80045f8:	f021 fec0 	bl	802637c <__assert_func>
 80045fc:	f8db 0004 	ldr.w	r0, [fp, #4]
 8004600:	6803      	ldr	r3, [r0, #0]
 8004602:	6a1b      	ldr	r3, [r3, #32]
 8004604:	4798      	blx	r3
 8004606:	280f      	cmp	r0, #15
 8004608:	d803      	bhi.n	8004612 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x3e>
 800460a:	4b51      	ldr	r3, [pc, #324]	; (8004750 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x17c>)
 800460c:	4a4e      	ldr	r2, [pc, #312]	; (8004748 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 800460e:	21a4      	movs	r1, #164	; 0xa4
 8004610:	e7f1      	b.n	80045f6 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004612:	f8db 000c 	ldr.w	r0, [fp, #12]
 8004616:	6803      	ldr	r3, [r0, #0]
 8004618:	6a1b      	ldr	r3, [r3, #32]
 800461a:	4798      	blx	r3
 800461c:	2837      	cmp	r0, #55	; 0x37
 800461e:	d803      	bhi.n	8004628 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x54>
 8004620:	4b4c      	ldr	r3, [pc, #304]	; (8004754 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x180>)
 8004622:	4a49      	ldr	r2, [pc, #292]	; (8004748 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 8004624:	21a5      	movs	r1, #165	; 0xa5
 8004626:	e7e6      	b.n	80045f6 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 8004628:	f010 fae6 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800462c:	f8df 9138 	ldr.w	r9, [pc, #312]	; 8004768 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x194>
 8004630:	3004      	adds	r0, #4
 8004632:	f010 fb47 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004636:	f8d9 0000 	ldr.w	r0, [r9]
 800463a:	b110      	cbz	r0, 8004642 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x6e>
        (*currentTrans)->tearDown();
 800463c:	6803      	ldr	r3, [r0, #0]
 800463e:	68db      	ldr	r3, [r3, #12]
 8004640:	4798      	blx	r3
    if (*currentTrans)
 8004642:	f8d9 0000 	ldr.w	r0, [r9]
 8004646:	b110      	cbz	r0, 800464e <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x7a>
        (*currentTrans)->~Transition();
 8004648:	6803      	ldr	r3, [r0, #0]
 800464a:	681b      	ldr	r3, [r3, #0]
 800464c:	4798      	blx	r3
    if (*currentScreen)
 800464e:	f8df 811c 	ldr.w	r8, [pc, #284]	; 800476c <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x198>
 8004652:	f8d8 0000 	ldr.w	r0, [r8]
 8004656:	b110      	cbz	r0, 800465e <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x8a>
        (*currentScreen)->tearDownScreen();
 8004658:	6803      	ldr	r3, [r0, #0]
 800465a:	695b      	ldr	r3, [r3, #20]
 800465c:	4798      	blx	r3
    if (*currentPresenter)
 800465e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004662:	b110      	cbz	r0, 800466a <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x96>
        (*currentPresenter)->deactivate();
 8004664:	6803      	ldr	r3, [r0, #0]
 8004666:	685b      	ldr	r3, [r3, #4]
 8004668:	4798      	blx	r3
    if (*currentScreen)
 800466a:	f8d8 0000 	ldr.w	r0, [r8]
 800466e:	b110      	cbz	r0, 8004676 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xa2>
        (*currentScreen)->~Screen();
 8004670:	6803      	ldr	r3, [r0, #0]
 8004672:	681b      	ldr	r3, [r3, #0]
 8004674:	4798      	blx	r3
    if (*currentPresenter)
 8004676:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800467a:	b110      	cbz	r0, 8004682 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xae>
        (*currentPresenter)->~Presenter();
 800467c:	6803      	ldr	r3, [r0, #0]
 800467e:	689b      	ldr	r3, [r3, #8]
 8004680:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004682:	f8db 000c 	ldr.w	r0, [fp, #12]
 8004686:	6803      	ldr	r3, [r0, #0]
 8004688:	2100      	movs	r1, #0
 800468a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800468c:	4798      	blx	r3
          solid()
 800468e:	4b32      	ldr	r3, [pc, #200]	; (8004758 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x184>)
 8004690:	6003      	str	r3, [r0, #0]
 8004692:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8004696:	8103      	strh	r3, [r0, #8]
 8004698:	f44f 7380 	mov.w	r3, #256	; 0x100
 800469c:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 800469e:	4b2f      	ldr	r3, [pc, #188]	; (800475c <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x188>)
 80046a0:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80046a2:	4a2f      	ldr	r2, [pc, #188]	; (8004760 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x18c>)
            targetValue = HAL::DISPLAY_WIDTH;
 80046a4:	4b2f      	ldr	r3, [pc, #188]	; (8004764 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x190>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80046a6:	f9b2 2000 	ldrsh.w	r2, [r2]
            targetValue = HAL::DISPLAY_WIDTH;
 80046aa:	f9b3 3000 	ldrsh.w	r3, [r3]
 80046ae:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 80046b0:	2500      	movs	r5, #0
 80046b2:	6045      	str	r5, [r0, #4]
          solid()
 80046b4:	7285      	strb	r5, [r0, #10]
 80046b6:	81c5      	strh	r5, [r0, #14]
 80046b8:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80046bc:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80046c0:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 80046c4:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80046c8:	4629      	mov	r1, r5
 80046ca:	4604      	mov	r4, r0
 80046cc:	9200      	str	r2, [sp, #0]
 80046ce:	3010      	adds	r0, #16
 80046d0:	462a      	mov	r2, r5
 80046d2:	f7fe f9be 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80046d6:	4629      	mov	r1, r5
 80046d8:	f8db 0008 	ldr.w	r0, [fp, #8]
 80046dc:	f7ff ff74 	bl	80045c8 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 80046e0:	4606      	mov	r6, r0
 80046e2:	f003 ff81 	bl	80085e8 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80046e6:	4629      	mov	r1, r5
 80046e8:	f8db 0004 	ldr.w	r0, [fp, #4]
 80046ec:	f7ff ff6f 	bl	80045ce <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 80046f0:	4631      	mov	r1, r6
 80046f2:	4605      	mov	r5, r0
 80046f4:	f003 ff52 	bl	800859c <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 80046f8:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80046fc:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004700:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004704:	b1e5      	cbz	r5, 8004740 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x16c>
 8004706:	1d2b      	adds	r3, r5, #4
 8004708:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800470c:	6833      	ldr	r3, [r6, #0]
 800470e:	f8c5 a008 	str.w	sl, [r5, #8]
 8004712:	4630      	mov	r0, r6
 8004714:	68db      	ldr	r3, [r3, #12]
 8004716:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004718:	4798      	blx	r3
    newPresenter->activate();
 800471a:	682b      	ldr	r3, [r5, #0]
 800471c:	4628      	mov	r0, r5
 800471e:	681b      	ldr	r3, [r3, #0]
 8004720:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004722:	4621      	mov	r1, r4
 8004724:	4630      	mov	r0, r6
 8004726:	f012 f893 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800472a:	6823      	ldr	r3, [r4, #0]
 800472c:	4620      	mov	r0, r4
 800472e:	691b      	ldr	r3, [r3, #16]
 8004730:	4798      	blx	r3
    newTransition->invalidate();
 8004732:	6823      	ldr	r3, [r4, #0]
 8004734:	695b      	ldr	r3, [r3, #20]
 8004736:	4620      	mov	r0, r4
}
 8004738:	b003      	add	sp, #12
 800473a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800473e:	4718      	bx	r3
    model->bind(newPresenter);
 8004740:	462b      	mov	r3, r5
 8004742:	e7e1      	b.n	8004708 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x134>
 8004744:	08028338 	.word	0x08028338
 8004748:	08028765 	.word	0x08028765
 800474c:	080284d4 	.word	0x080284d4
 8004750:	0802851b 	.word	0x0802851b
 8004754:	080285be 	.word	0x080285be
 8004758:	080291e0 	.word	0x080291e0
 800475c:	080290a0 	.word	0x080290a0
 8004760:	2000ef12 	.word	0x2000ef12
 8004764:	2000ef10 	.word	0x2000ef10
 8004768:	2000ef64 	.word	0x2000ef64
 800476c:	2000ef60 	.word	0x2000ef60

08004770 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
 8004770:	6803      	ldr	r3, [r0, #0]
 8004772:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004774:	4718      	bx	r3
	...

08004778 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004778:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 800477a:	4605      	mov	r5, r0
 800477c:	2600      	movs	r6, #0
 800477e:	4b14      	ldr	r3, [pc, #80]	; (80047d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x58>)
 8004780:	6046      	str	r6, [r0, #4]
 8004782:	7206      	strb	r6, [r0, #8]
 8004784:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004788:	4604      	mov	r4, r0
          relativeValue(0)
 800478a:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 800478c:	460f      	mov	r7, r1
          relativeValue(0)
 800478e:	f00c fd55 	bl	801123c <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004792:	4b10      	ldr	r3, [pc, #64]	; (80047d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x5c>)
          relativeValue(0)
 8004794:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004798:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 800479a:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 800479e:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 80047a0:	b923      	cbnz	r3, 80047ac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x34>
            done = true;
 80047a2:	2301      	movs	r3, #1
 80047a4:	7223      	strb	r3, [r4, #8]
    }
 80047a6:	4620      	mov	r0, r4
 80047a8:	b003      	add	sp, #12
 80047aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80047ac:	4b0a      	ldr	r3, [pc, #40]	; (80047d8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>)
 80047ae:	4f0b      	ldr	r7, [pc, #44]	; (80047dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x64>)
 80047b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80047b4:	9300      	str	r3, [sp, #0]
 80047b6:	f9b7 3000 	ldrsh.w	r3, [r7]
 80047ba:	4632      	mov	r2, r6
 80047bc:	4631      	mov	r1, r6
 80047be:	4628      	mov	r0, r5
 80047c0:	f7fe f947 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 80047c4:	4628      	mov	r0, r5
 80047c6:	f00c fcb4 	bl	8011132 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
 80047ca:	883b      	ldrh	r3, [r7, #0]
 80047cc:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 80047ce:	e7ea      	b.n	80047a6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x2e>
 80047d0:	080291bc 	.word	0x080291bc
 80047d4:	2000ef1b 	.word	0x2000ef1b
 80047d8:	2000ef12 	.word	0x2000ef12
 80047dc:	2000ef10 	.word	0x2000ef10

080047e0 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv>:
{
 80047e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80047e4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 80047e8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80047ea:	68a0      	ldr	r0, [r4, #8]
 80047ec:	6803      	ldr	r3, [r0, #0]
 80047ee:	6a1b      	ldr	r3, [r3, #32]
 80047f0:	4798      	blx	r3
 80047f2:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 80047f6:	d205      	bcs.n	8004804 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x24>
 80047f8:	4b42      	ldr	r3, [pc, #264]	; (8004904 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x124>)
 80047fa:	4a43      	ldr	r2, [pc, #268]	; (8004908 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 80047fc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80047fe:	4843      	ldr	r0, [pc, #268]	; (800490c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x12c>)
 8004800:	f021 fdbc 	bl	802637c <__assert_func>
 8004804:	6860      	ldr	r0, [r4, #4]
 8004806:	6803      	ldr	r3, [r0, #0]
 8004808:	6a1b      	ldr	r3, [r3, #32]
 800480a:	4798      	blx	r3
 800480c:	280f      	cmp	r0, #15
 800480e:	d803      	bhi.n	8004818 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x38>
 8004810:	4b3f      	ldr	r3, [pc, #252]	; (8004910 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x130>)
 8004812:	4a3d      	ldr	r2, [pc, #244]	; (8004908 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004814:	21a4      	movs	r1, #164	; 0xa4
 8004816:	e7f2      	b.n	80047fe <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004818:	68e0      	ldr	r0, [r4, #12]
 800481a:	6803      	ldr	r3, [r0, #0]
 800481c:	6a1b      	ldr	r3, [r3, #32]
 800481e:	4798      	blx	r3
 8004820:	283f      	cmp	r0, #63	; 0x3f
 8004822:	d803      	bhi.n	800482c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x4c>
 8004824:	4b3b      	ldr	r3, [pc, #236]	; (8004914 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x134>)
 8004826:	4a38      	ldr	r2, [pc, #224]	; (8004908 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004828:	21a5      	movs	r1, #165	; 0xa5
 800482a:	e7e8      	b.n	80047fe <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800482c:	f010 f9e4 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004830:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004918 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x138>
 8004834:	3004      	adds	r0, #4
 8004836:	f010 fa45 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800483a:	f8d9 0000 	ldr.w	r0, [r9]
 800483e:	b110      	cbz	r0, 8004846 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004840:	6803      	ldr	r3, [r0, #0]
 8004842:	68db      	ldr	r3, [r3, #12]
 8004844:	4798      	blx	r3
    if (*currentTrans)
 8004846:	f8d9 0000 	ldr.w	r0, [r9]
 800484a:	b110      	cbz	r0, 8004852 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 800484c:	6803      	ldr	r3, [r0, #0]
 800484e:	681b      	ldr	r3, [r3, #0]
 8004850:	4798      	blx	r3
    if (*currentScreen)
 8004852:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800491c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x13c>
 8004856:	f8d8 0000 	ldr.w	r0, [r8]
 800485a:	b110      	cbz	r0, 8004862 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800485c:	6803      	ldr	r3, [r0, #0]
 800485e:	695b      	ldr	r3, [r3, #20]
 8004860:	4798      	blx	r3
    if (*currentPresenter)
 8004862:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004866:	b110      	cbz	r0, 800486e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004868:	6803      	ldr	r3, [r0, #0]
 800486a:	685b      	ldr	r3, [r3, #4]
 800486c:	4798      	blx	r3
    if (*currentScreen)
 800486e:	f8d8 0000 	ldr.w	r0, [r8]
 8004872:	b110      	cbz	r0, 800487a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004874:	6803      	ldr	r3, [r0, #0]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	4798      	blx	r3
    if (*currentPresenter)
 800487a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800487e:	b110      	cbz	r0, 8004886 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004880:	6803      	ldr	r3, [r0, #0]
 8004882:	689b      	ldr	r3, [r3, #8]
 8004884:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004886:	68e0      	ldr	r0, [r4, #12]
 8004888:	2100      	movs	r1, #0
 800488a:	f7ff ff71 	bl	8004770 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 800488e:	2114      	movs	r1, #20
 8004890:	4605      	mov	r5, r0
 8004892:	f7ff ff71 	bl	8004778 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004896:	68a0      	ldr	r0, [r4, #8]
 8004898:	6803      	ldr	r3, [r0, #0]
 800489a:	2100      	movs	r1, #0
 800489c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800489e:	4798      	blx	r3
 80048a0:	4606      	mov	r6, r0
 80048a2:	f003 fb97 	bl	8007fd4 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80048a6:	6860      	ldr	r0, [r4, #4]
 80048a8:	6803      	ldr	r3, [r0, #0]
 80048aa:	2100      	movs	r1, #0
 80048ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80048ae:	4798      	blx	r3
 80048b0:	4631      	mov	r1, r6
 80048b2:	4604      	mov	r4, r0
 80048b4:	f003 fb68 	bl	8007f88 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 80048b8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80048bc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80048c0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80048c4:	b1dc      	cbz	r4, 80048fe <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x11e>
 80048c6:	1d23      	adds	r3, r4, #4
 80048c8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80048cc:	6833      	ldr	r3, [r6, #0]
 80048ce:	f8c4 a008 	str.w	sl, [r4, #8]
 80048d2:	4630      	mov	r0, r6
 80048d4:	68db      	ldr	r3, [r3, #12]
 80048d6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80048d8:	4798      	blx	r3
    newPresenter->activate();
 80048da:	6823      	ldr	r3, [r4, #0]
 80048dc:	4620      	mov	r0, r4
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80048e2:	4629      	mov	r1, r5
 80048e4:	4630      	mov	r0, r6
 80048e6:	f011 ffb3 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80048ea:	682b      	ldr	r3, [r5, #0]
 80048ec:	4628      	mov	r0, r5
 80048ee:	691b      	ldr	r3, [r3, #16]
 80048f0:	4798      	blx	r3
    newTransition->invalidate();
 80048f2:	682b      	ldr	r3, [r5, #0]
 80048f4:	4628      	mov	r0, r5
 80048f6:	695b      	ldr	r3, [r3, #20]
}
 80048f8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80048fc:	4718      	bx	r3
    model->bind(newPresenter);
 80048fe:	4623      	mov	r3, r4
 8004900:	e7e2      	b.n	80048c8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xe8>
 8004902:	bf00      	nop
 8004904:	08028338 	.word	0x08028338
 8004908:	0802888b 	.word	0x0802888b
 800490c:	080284d4 	.word	0x080284d4
 8004910:	0802851b 	.word	0x0802851b
 8004914:	080285be 	.word	0x080285be
 8004918:	2000ef64 	.word	0x2000ef64
 800491c:	2000ef60 	.word	0x2000ef60

08004920 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv>:
{
 8004920:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004924:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004928:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800492a:	68a0      	ldr	r0, [r4, #8]
 800492c:	6803      	ldr	r3, [r0, #0]
 800492e:	6a1b      	ldr	r3, [r3, #32]
 8004930:	4798      	blx	r3
 8004932:	f240 438b 	movw	r3, #1163	; 0x48b
 8004936:	4298      	cmp	r0, r3
 8004938:	d805      	bhi.n	8004946 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x26>
 800493a:	4b42      	ldr	r3, [pc, #264]	; (8004a44 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x124>)
 800493c:	4a42      	ldr	r2, [pc, #264]	; (8004a48 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 800493e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004940:	4842      	ldr	r0, [pc, #264]	; (8004a4c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x12c>)
 8004942:	f021 fd1b 	bl	802637c <__assert_func>
 8004946:	6860      	ldr	r0, [r4, #4]
 8004948:	6803      	ldr	r3, [r0, #0]
 800494a:	6a1b      	ldr	r3, [r3, #32]
 800494c:	4798      	blx	r3
 800494e:	280f      	cmp	r0, #15
 8004950:	d803      	bhi.n	800495a <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x3a>
 8004952:	4b3f      	ldr	r3, [pc, #252]	; (8004a50 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x130>)
 8004954:	4a3c      	ldr	r2, [pc, #240]	; (8004a48 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004956:	21a4      	movs	r1, #164	; 0xa4
 8004958:	e7f2      	b.n	8004940 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800495a:	68e0      	ldr	r0, [r4, #12]
 800495c:	6803      	ldr	r3, [r0, #0]
 800495e:	6a1b      	ldr	r3, [r3, #32]
 8004960:	4798      	blx	r3
 8004962:	283f      	cmp	r0, #63	; 0x3f
 8004964:	d803      	bhi.n	800496e <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x4e>
 8004966:	4b3b      	ldr	r3, [pc, #236]	; (8004a54 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x134>)
 8004968:	4a37      	ldr	r2, [pc, #220]	; (8004a48 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 800496a:	21a5      	movs	r1, #165	; 0xa5
 800496c:	e7e8      	b.n	8004940 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800496e:	f010 f943 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004972:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004a58 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x138>
 8004976:	3004      	adds	r0, #4
 8004978:	f010 f9a4 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800497c:	f8d9 0000 	ldr.w	r0, [r9]
 8004980:	b110      	cbz	r0, 8004988 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004982:	6803      	ldr	r3, [r0, #0]
 8004984:	68db      	ldr	r3, [r3, #12]
 8004986:	4798      	blx	r3
    if (*currentTrans)
 8004988:	f8d9 0000 	ldr.w	r0, [r9]
 800498c:	b110      	cbz	r0, 8004994 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 800498e:	6803      	ldr	r3, [r0, #0]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	4798      	blx	r3
    if (*currentScreen)
 8004994:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004a5c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x13c>
 8004998:	f8d8 0000 	ldr.w	r0, [r8]
 800499c:	b110      	cbz	r0, 80049a4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800499e:	6803      	ldr	r3, [r0, #0]
 80049a0:	695b      	ldr	r3, [r3, #20]
 80049a2:	4798      	blx	r3
    if (*currentPresenter)
 80049a4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049a8:	b110      	cbz	r0, 80049b0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 80049aa:	6803      	ldr	r3, [r0, #0]
 80049ac:	685b      	ldr	r3, [r3, #4]
 80049ae:	4798      	blx	r3
    if (*currentScreen)
 80049b0:	f8d8 0000 	ldr.w	r0, [r8]
 80049b4:	b110      	cbz	r0, 80049bc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 80049b6:	6803      	ldr	r3, [r0, #0]
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	4798      	blx	r3
    if (*currentPresenter)
 80049bc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80049c0:	b110      	cbz	r0, 80049c8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80049c2:	6803      	ldr	r3, [r0, #0]
 80049c4:	689b      	ldr	r3, [r3, #8]
 80049c6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80049c8:	68e0      	ldr	r0, [r4, #12]
 80049ca:	2100      	movs	r1, #0
 80049cc:	f7ff fed0 	bl	8004770 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 80049d0:	2114      	movs	r1, #20
 80049d2:	4605      	mov	r5, r0
 80049d4:	f7ff fed0 	bl	8004778 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80049d8:	68a0      	ldr	r0, [r4, #8]
 80049da:	6803      	ldr	r3, [r0, #0]
 80049dc:	2100      	movs	r1, #0
 80049de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049e0:	4798      	blx	r3
 80049e2:	4606      	mov	r6, r0
 80049e4:	f004 f8ea 	bl	8008bbc <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80049e8:	6860      	ldr	r0, [r4, #4]
 80049ea:	6803      	ldr	r3, [r0, #0]
 80049ec:	2100      	movs	r1, #0
 80049ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80049f0:	4798      	blx	r3
 80049f2:	4631      	mov	r1, r6
 80049f4:	4604      	mov	r4, r0
 80049f6:	f004 f88f 	bl	8008b18 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 80049fa:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80049fe:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004a02:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004a06:	b1dc      	cbz	r4, 8004a40 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x120>
 8004a08:	1d23      	adds	r3, r4, #4
 8004a0a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004a0e:	6833      	ldr	r3, [r6, #0]
 8004a10:	f8c4 a008 	str.w	sl, [r4, #8]
 8004a14:	4630      	mov	r0, r6
 8004a16:	68db      	ldr	r3, [r3, #12]
 8004a18:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004a1a:	4798      	blx	r3
    newPresenter->activate();
 8004a1c:	6823      	ldr	r3, [r4, #0]
 8004a1e:	4620      	mov	r0, r4
 8004a20:	681b      	ldr	r3, [r3, #0]
 8004a22:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004a24:	4629      	mov	r1, r5
 8004a26:	4630      	mov	r0, r6
 8004a28:	f011 ff12 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004a2c:	682b      	ldr	r3, [r5, #0]
 8004a2e:	4628      	mov	r0, r5
 8004a30:	691b      	ldr	r3, [r3, #16]
 8004a32:	4798      	blx	r3
    newTransition->invalidate();
 8004a34:	682b      	ldr	r3, [r5, #0]
 8004a36:	4628      	mov	r0, r5
 8004a38:	695b      	ldr	r3, [r3, #20]
}
 8004a3a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004a3e:	4718      	bx	r3
    model->bind(newPresenter);
 8004a40:	4623      	mov	r3, r4
 8004a42:	e7e2      	b.n	8004a0a <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xea>
 8004a44:	08028338 	.word	0x08028338
 8004a48:	080289b6 	.word	0x080289b6
 8004a4c:	080284d4 	.word	0x080284d4
 8004a50:	0802851b 	.word	0x0802851b
 8004a54:	080285be 	.word	0x080285be
 8004a58:	2000ef64 	.word	0x2000ef64
 8004a5c:	2000ef60 	.word	0x2000ef60

08004a60 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv>:
{
 8004a60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a64:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a68:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a6a:	68a0      	ldr	r0, [r4, #8]
 8004a6c:	6803      	ldr	r3, [r0, #0]
 8004a6e:	6a1b      	ldr	r3, [r3, #32]
 8004a70:	4798      	blx	r3
 8004a72:	f244 7397 	movw	r3, #18327	; 0x4797
 8004a76:	4298      	cmp	r0, r3
 8004a78:	d805      	bhi.n	8004a86 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x26>
 8004a7a:	4b41      	ldr	r3, [pc, #260]	; (8004b80 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x120>)
 8004a7c:	4a41      	ldr	r2, [pc, #260]	; (8004b84 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004a7e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004a80:	4841      	ldr	r0, [pc, #260]	; (8004b88 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x128>)
 8004a82:	f021 fc7b 	bl	802637c <__assert_func>
 8004a86:	6860      	ldr	r0, [r4, #4]
 8004a88:	6803      	ldr	r3, [r0, #0]
 8004a8a:	6a1b      	ldr	r3, [r3, #32]
 8004a8c:	4798      	blx	r3
 8004a8e:	280f      	cmp	r0, #15
 8004a90:	d803      	bhi.n	8004a9a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x3a>
 8004a92:	4b3e      	ldr	r3, [pc, #248]	; (8004b8c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x12c>)
 8004a94:	4a3b      	ldr	r2, [pc, #236]	; (8004b84 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004a96:	21a4      	movs	r1, #164	; 0xa4
 8004a98:	e7f2      	b.n	8004a80 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004a9a:	68e0      	ldr	r0, [r4, #12]
 8004a9c:	6803      	ldr	r3, [r0, #0]
 8004a9e:	6a1b      	ldr	r3, [r3, #32]
 8004aa0:	4798      	blx	r3
 8004aa2:	283f      	cmp	r0, #63	; 0x3f
 8004aa4:	d803      	bhi.n	8004aae <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x4e>
 8004aa6:	4b3a      	ldr	r3, [pc, #232]	; (8004b90 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x130>)
 8004aa8:	4a36      	ldr	r2, [pc, #216]	; (8004b84 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004aaa:	21a5      	movs	r1, #165	; 0xa5
 8004aac:	e7e8      	b.n	8004a80 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004aae:	f010 f8a3 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ab2:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8004b94 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x134>
 8004ab6:	3004      	adds	r0, #4
 8004ab8:	f010 f904 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004abc:	f8d9 0000 	ldr.w	r0, [r9]
 8004ac0:	b110      	cbz	r0, 8004ac8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ac2:	6803      	ldr	r3, [r0, #0]
 8004ac4:	68db      	ldr	r3, [r3, #12]
 8004ac6:	4798      	blx	r3
    if (*currentTrans)
 8004ac8:	f8d9 0000 	ldr.w	r0, [r9]
 8004acc:	b110      	cbz	r0, 8004ad4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004ace:	6803      	ldr	r3, [r0, #0]
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	4798      	blx	r3
    if (*currentScreen)
 8004ad4:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8004b98 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x138>
 8004ad8:	f8d8 0000 	ldr.w	r0, [r8]
 8004adc:	b110      	cbz	r0, 8004ae4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004ade:	6803      	ldr	r3, [r0, #0]
 8004ae0:	695b      	ldr	r3, [r3, #20]
 8004ae2:	4798      	blx	r3
    if (*currentPresenter)
 8004ae4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004ae8:	b110      	cbz	r0, 8004af0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004aea:	6803      	ldr	r3, [r0, #0]
 8004aec:	685b      	ldr	r3, [r3, #4]
 8004aee:	4798      	blx	r3
    if (*currentScreen)
 8004af0:	f8d8 0000 	ldr.w	r0, [r8]
 8004af4:	b110      	cbz	r0, 8004afc <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004af6:	6803      	ldr	r3, [r0, #0]
 8004af8:	681b      	ldr	r3, [r3, #0]
 8004afa:	4798      	blx	r3
    if (*currentPresenter)
 8004afc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b00:	b110      	cbz	r0, 8004b08 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004b02:	6803      	ldr	r3, [r0, #0]
 8004b04:	689b      	ldr	r3, [r3, #8]
 8004b06:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b08:	68e0      	ldr	r0, [r4, #12]
 8004b0a:	2100      	movs	r1, #0
 8004b0c:	f7ff fe30 	bl	8004770 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004b10:	2114      	movs	r1, #20
 8004b12:	4605      	mov	r5, r0
 8004b14:	f7ff fe30 	bl	8004778 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b18:	2100      	movs	r1, #0
 8004b1a:	68a0      	ldr	r0, [r4, #8]
 8004b1c:	f7ff fd54 	bl	80045c8 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8004b20:	4606      	mov	r6, r0
 8004b22:	f003 fd61 	bl	80085e8 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b26:	6860      	ldr	r0, [r4, #4]
 8004b28:	2100      	movs	r1, #0
 8004b2a:	f7ff fd50 	bl	80045ce <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 8004b2e:	4631      	mov	r1, r6
 8004b30:	4604      	mov	r4, r0
 8004b32:	f003 fd33 	bl	800859c <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 8004b36:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b3a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b3e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b42:	b1dc      	cbz	r4, 8004b7c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x11c>
 8004b44:	1d23      	adds	r3, r4, #4
 8004b46:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b4a:	6833      	ldr	r3, [r6, #0]
 8004b4c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b50:	4630      	mov	r0, r6
 8004b52:	68db      	ldr	r3, [r3, #12]
 8004b54:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b56:	4798      	blx	r3
    newPresenter->activate();
 8004b58:	6823      	ldr	r3, [r4, #0]
 8004b5a:	4620      	mov	r0, r4
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b60:	4629      	mov	r1, r5
 8004b62:	4630      	mov	r0, r6
 8004b64:	f011 fe74 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b68:	682b      	ldr	r3, [r5, #0]
 8004b6a:	4628      	mov	r0, r5
 8004b6c:	691b      	ldr	r3, [r3, #16]
 8004b6e:	4798      	blx	r3
    newTransition->invalidate();
 8004b70:	682b      	ldr	r3, [r5, #0]
 8004b72:	4628      	mov	r0, r5
 8004b74:	695b      	ldr	r3, [r3, #20]
}
 8004b76:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004b7a:	4718      	bx	r3
    model->bind(newPresenter);
 8004b7c:	4623      	mov	r3, r4
 8004b7e:	e7e2      	b.n	8004b46 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xe6>
 8004b80:	08028338 	.word	0x08028338
 8004b84:	08028ad9 	.word	0x08028ad9
 8004b88:	080284d4 	.word	0x080284d4
 8004b8c:	0802851b 	.word	0x0802851b
 8004b90:	080285be 	.word	0x080285be
 8004b94:	2000ef64 	.word	0x2000ef64
 8004b98:	2000ef60 	.word	0x2000ef60

08004b9c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8004b9c:	6803      	ldr	r3, [r0, #0]
 8004b9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ba0:	4718      	bx	r3
	...

08004ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004ba4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8004ba6:	4605      	mov	r5, r0
 8004ba8:	2600      	movs	r6, #0
 8004baa:	4b15      	ldr	r3, [pc, #84]	; (8004c00 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 8004bac:	6046      	str	r6, [r0, #4]
 8004bae:	7206      	strb	r6, [r0, #8]
 8004bb0:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004bb4:	4604      	mov	r4, r0
          relativeValue(0)
 8004bb6:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004bb8:	460f      	mov	r7, r1
          relativeValue(0)
 8004bba:	f00c fb3f 	bl	801123c <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004bbe:	4b11      	ldr	r3, [pc, #68]	; (8004c04 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x60>)
          relativeValue(0)
 8004bc0:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004bc4:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8004bc6:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8004bca:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8004bcc:	b923      	cbnz	r3, 8004bd8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x34>
            done = true;
 8004bce:	2301      	movs	r3, #1
 8004bd0:	7223      	strb	r3, [r4, #8]
    }
 8004bd2:	4620      	mov	r0, r4
 8004bd4:	b003      	add	sp, #12
 8004bd6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004bd8:	4b0b      	ldr	r3, [pc, #44]	; (8004c08 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8004bda:	4f0c      	ldr	r7, [pc, #48]	; (8004c0c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8004bdc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004be0:	9300      	str	r3, [sp, #0]
 8004be2:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004be6:	4632      	mov	r2, r6
 8004be8:	4631      	mov	r1, r6
 8004bea:	4628      	mov	r0, r5
 8004bec:	f7fd ff31 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8004bf0:	4628      	mov	r0, r5
 8004bf2:	f00c fa9e 	bl	8011132 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8004bf6:	883b      	ldrh	r3, [r7, #0]
 8004bf8:	425b      	negs	r3, r3
 8004bfa:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8004bfc:	e7e9      	b.n	8004bd2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x2e>
 8004bfe:	bf00      	nop
 8004c00:	08029198 	.word	0x08029198
 8004c04:	2000ef1b 	.word	0x2000ef1b
 8004c08:	2000ef12 	.word	0x2000ef12
 8004c0c:	2000ef10 	.word	0x2000ef10

08004c10 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl()
{
 8004c10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004c14:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004c18:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004c1a:	68a0      	ldr	r0, [r4, #8]
 8004c1c:	6803      	ldr	r3, [r0, #0]
 8004c1e:	6a1b      	ldr	r3, [r3, #32]
 8004c20:	4798      	blx	r3
 8004c22:	f640 431b 	movw	r3, #3099	; 0xc1b
 8004c26:	4298      	cmp	r0, r3
 8004c28:	d805      	bhi.n	8004c36 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x26>
 8004c2a:	4b42      	ldr	r3, [pc, #264]	; (8004d34 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x124>)
 8004c2c:	4a42      	ldr	r2, [pc, #264]	; (8004d38 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004c2e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004c30:	4842      	ldr	r0, [pc, #264]	; (8004d3c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004c32:	f021 fba3 	bl	802637c <__assert_func>
 8004c36:	6860      	ldr	r0, [r4, #4]
 8004c38:	6803      	ldr	r3, [r0, #0]
 8004c3a:	6a1b      	ldr	r3, [r3, #32]
 8004c3c:	4798      	blx	r3
 8004c3e:	280f      	cmp	r0, #15
 8004c40:	d803      	bhi.n	8004c4a <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x3a>
 8004c42:	4b3f      	ldr	r3, [pc, #252]	; (8004d40 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x130>)
 8004c44:	4a3c      	ldr	r2, [pc, #240]	; (8004d38 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004c46:	21a4      	movs	r1, #164	; 0xa4
 8004c48:	e7f2      	b.n	8004c30 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004c4a:	68e0      	ldr	r0, [r4, #12]
 8004c4c:	6803      	ldr	r3, [r0, #0]
 8004c4e:	6a1b      	ldr	r3, [r3, #32]
 8004c50:	4798      	blx	r3
 8004c52:	283f      	cmp	r0, #63	; 0x3f
 8004c54:	d803      	bhi.n	8004c5e <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x4e>
 8004c56:	4b3b      	ldr	r3, [pc, #236]	; (8004d44 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x134>)
 8004c58:	4a37      	ldr	r2, [pc, #220]	; (8004d38 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004c5a:	21a5      	movs	r1, #165	; 0xa5
 8004c5c:	e7e8      	b.n	8004c30 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c5e:	f00f ffcb 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c62:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004d48 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x138>
 8004c66:	3004      	adds	r0, #4
 8004c68:	f010 f82c 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c6c:	f8d9 0000 	ldr.w	r0, [r9]
 8004c70:	b110      	cbz	r0, 8004c78 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c72:	6803      	ldr	r3, [r0, #0]
 8004c74:	68db      	ldr	r3, [r3, #12]
 8004c76:	4798      	blx	r3
    if (*currentTrans)
 8004c78:	f8d9 0000 	ldr.w	r0, [r9]
 8004c7c:	b110      	cbz	r0, 8004c84 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c7e:	6803      	ldr	r3, [r0, #0]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	4798      	blx	r3
    if (*currentScreen)
 8004c84:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d4c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x13c>
 8004c88:	f8d8 0000 	ldr.w	r0, [r8]
 8004c8c:	b110      	cbz	r0, 8004c94 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c8e:	6803      	ldr	r3, [r0, #0]
 8004c90:	695b      	ldr	r3, [r3, #20]
 8004c92:	4798      	blx	r3
    if (*currentPresenter)
 8004c94:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c98:	b110      	cbz	r0, 8004ca0 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c9a:	6803      	ldr	r3, [r0, #0]
 8004c9c:	685b      	ldr	r3, [r3, #4]
 8004c9e:	4798      	blx	r3
    if (*currentScreen)
 8004ca0:	f8d8 0000 	ldr.w	r0, [r8]
 8004ca4:	b110      	cbz	r0, 8004cac <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004ca6:	6803      	ldr	r3, [r0, #0]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	4798      	blx	r3
    if (*currentPresenter)
 8004cac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004cb0:	b110      	cbz	r0, 8004cb8 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004cb2:	6803      	ldr	r3, [r0, #0]
 8004cb4:	689b      	ldr	r3, [r3, #8]
 8004cb6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004cb8:	68e0      	ldr	r0, [r4, #12]
 8004cba:	2100      	movs	r1, #0
 8004cbc:	f7ff ff6e 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004cc0:	2114      	movs	r1, #20
 8004cc2:	4605      	mov	r5, r0
 8004cc4:	f7ff ff6e 	bl	8004ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004cc8:	68a0      	ldr	r0, [r4, #8]
 8004cca:	6803      	ldr	r3, [r0, #0]
 8004ccc:	2100      	movs	r1, #0
 8004cce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004cd0:	4798      	blx	r3
 8004cd2:	4606      	mov	r6, r0
 8004cd4:	f003 fa4e 	bl	8008174 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004cd8:	6860      	ldr	r0, [r4, #4]
 8004cda:	6803      	ldr	r3, [r0, #0]
 8004cdc:	2100      	movs	r1, #0
 8004cde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ce0:	4798      	blx	r3
 8004ce2:	4631      	mov	r1, r6
 8004ce4:	4604      	mov	r4, r0
 8004ce6:	f003 fa1f 	bl	8008128 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 8004cea:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004cee:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004cf2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004cf6:	b1dc      	cbz	r4, 8004d30 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x120>
 8004cf8:	1d23      	adds	r3, r4, #4
 8004cfa:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cfe:	6833      	ldr	r3, [r6, #0]
 8004d00:	f8c4 a008 	str.w	sl, [r4, #8]
 8004d04:	4630      	mov	r0, r6
 8004d06:	68db      	ldr	r3, [r3, #12]
 8004d08:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004d0a:	4798      	blx	r3
    newPresenter->activate();
 8004d0c:	6823      	ldr	r3, [r4, #0]
 8004d0e:	4620      	mov	r0, r4
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004d14:	4629      	mov	r1, r5
 8004d16:	4630      	mov	r0, r6
 8004d18:	f011 fd9a 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004d1c:	682b      	ldr	r3, [r5, #0]
 8004d1e:	4628      	mov	r0, r5
 8004d20:	691b      	ldr	r3, [r3, #16]
 8004d22:	4798      	blx	r3
    newTransition->invalidate();
 8004d24:	682b      	ldr	r3, [r5, #0]
 8004d26:	4628      	mov	r0, r5
 8004d28:	695b      	ldr	r3, [r3, #20]
}
 8004d2a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d2e:	4718      	bx	r3
    model->bind(newPresenter);
 8004d30:	4623      	mov	r3, r4
 8004d32:	e7e2      	b.n	8004cfa <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xea>
 8004d34:	08028338 	.word	0x08028338
 8004d38:	08028c00 	.word	0x08028c00
 8004d3c:	080284d4 	.word	0x080284d4
 8004d40:	0802851b 	.word	0x0802851b
 8004d44:	080285be 	.word	0x080285be
 8004d48:	2000ef64 	.word	0x2000ef64
 8004d4c:	2000ef60 	.word	0x2000ef60

08004d50 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv>:
{
 8004d50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d54:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d58:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d5a:	68a0      	ldr	r0, [r4, #8]
 8004d5c:	6803      	ldr	r3, [r0, #0]
 8004d5e:	6a1b      	ldr	r3, [r3, #32]
 8004d60:	4798      	blx	r3
 8004d62:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 8004d66:	d205      	bcs.n	8004d74 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x24>
 8004d68:	4b42      	ldr	r3, [pc, #264]	; (8004e74 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x124>)
 8004d6a:	4a43      	ldr	r2, [pc, #268]	; (8004e78 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8004d6c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d6e:	4843      	ldr	r0, [pc, #268]	; (8004e7c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004d70:	f021 fb04 	bl	802637c <__assert_func>
 8004d74:	6860      	ldr	r0, [r4, #4]
 8004d76:	6803      	ldr	r3, [r0, #0]
 8004d78:	6a1b      	ldr	r3, [r3, #32]
 8004d7a:	4798      	blx	r3
 8004d7c:	280f      	cmp	r0, #15
 8004d7e:	d803      	bhi.n	8004d88 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x38>
 8004d80:	4b3f      	ldr	r3, [pc, #252]	; (8004e80 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x130>)
 8004d82:	4a3d      	ldr	r2, [pc, #244]	; (8004e78 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8004d84:	21a4      	movs	r1, #164	; 0xa4
 8004d86:	e7f2      	b.n	8004d6e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d88:	68e0      	ldr	r0, [r4, #12]
 8004d8a:	6803      	ldr	r3, [r0, #0]
 8004d8c:	6a1b      	ldr	r3, [r3, #32]
 8004d8e:	4798      	blx	r3
 8004d90:	283f      	cmp	r0, #63	; 0x3f
 8004d92:	d803      	bhi.n	8004d9c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x4c>
 8004d94:	4b3b      	ldr	r3, [pc, #236]	; (8004e84 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x134>)
 8004d96:	4a38      	ldr	r2, [pc, #224]	; (8004e78 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8004d98:	21a5      	movs	r1, #165	; 0xa5
 8004d9a:	e7e8      	b.n	8004d6e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004d9c:	f00f ff2c 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004da0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004e88 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x138>
 8004da4:	3004      	adds	r0, #4
 8004da6:	f00f ff8d 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004daa:	f8d9 0000 	ldr.w	r0, [r9]
 8004dae:	b110      	cbz	r0, 8004db6 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004db0:	6803      	ldr	r3, [r0, #0]
 8004db2:	68db      	ldr	r3, [r3, #12]
 8004db4:	4798      	blx	r3
    if (*currentTrans)
 8004db6:	f8d9 0000 	ldr.w	r0, [r9]
 8004dba:	b110      	cbz	r0, 8004dc2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8004dbc:	6803      	ldr	r3, [r0, #0]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	4798      	blx	r3
    if (*currentScreen)
 8004dc2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004e8c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x13c>
 8004dc6:	f8d8 0000 	ldr.w	r0, [r8]
 8004dca:	b110      	cbz	r0, 8004dd2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004dcc:	6803      	ldr	r3, [r0, #0]
 8004dce:	695b      	ldr	r3, [r3, #20]
 8004dd0:	4798      	blx	r3
    if (*currentPresenter)
 8004dd2:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dd6:	b110      	cbz	r0, 8004dde <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004dd8:	6803      	ldr	r3, [r0, #0]
 8004dda:	685b      	ldr	r3, [r3, #4]
 8004ddc:	4798      	blx	r3
    if (*currentScreen)
 8004dde:	f8d8 0000 	ldr.w	r0, [r8]
 8004de2:	b110      	cbz	r0, 8004dea <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004de4:	6803      	ldr	r3, [r0, #0]
 8004de6:	681b      	ldr	r3, [r3, #0]
 8004de8:	4798      	blx	r3
    if (*currentPresenter)
 8004dea:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004dee:	b110      	cbz	r0, 8004df6 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004df0:	6803      	ldr	r3, [r0, #0]
 8004df2:	689b      	ldr	r3, [r3, #8]
 8004df4:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004df6:	68e0      	ldr	r0, [r4, #12]
 8004df8:	2100      	movs	r1, #0
 8004dfa:	f7ff fecf 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004dfe:	2114      	movs	r1, #20
 8004e00:	4605      	mov	r5, r0
 8004e02:	f7ff fecf 	bl	8004ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004e06:	68a0      	ldr	r0, [r4, #8]
 8004e08:	6803      	ldr	r3, [r0, #0]
 8004e0a:	2100      	movs	r1, #0
 8004e0c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e0e:	4798      	blx	r3
 8004e10:	4606      	mov	r6, r0
 8004e12:	f003 f8df 	bl	8007fd4 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004e16:	6860      	ldr	r0, [r4, #4]
 8004e18:	6803      	ldr	r3, [r0, #0]
 8004e1a:	2100      	movs	r1, #0
 8004e1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e1e:	4798      	blx	r3
 8004e20:	4631      	mov	r1, r6
 8004e22:	4604      	mov	r4, r0
 8004e24:	f003 f8b0 	bl	8007f88 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 8004e28:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004e2c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004e30:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004e34:	b1dc      	cbz	r4, 8004e6e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x11e>
 8004e36:	1d23      	adds	r3, r4, #4
 8004e38:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004e3c:	6833      	ldr	r3, [r6, #0]
 8004e3e:	f8c4 a008 	str.w	sl, [r4, #8]
 8004e42:	4630      	mov	r0, r6
 8004e44:	68db      	ldr	r3, [r3, #12]
 8004e46:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004e48:	4798      	blx	r3
    newPresenter->activate();
 8004e4a:	6823      	ldr	r3, [r4, #0]
 8004e4c:	4620      	mov	r0, r4
 8004e4e:	681b      	ldr	r3, [r3, #0]
 8004e50:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e52:	4629      	mov	r1, r5
 8004e54:	4630      	mov	r0, r6
 8004e56:	f011 fcfb 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e5a:	682b      	ldr	r3, [r5, #0]
 8004e5c:	4628      	mov	r0, r5
 8004e5e:	691b      	ldr	r3, [r3, #16]
 8004e60:	4798      	blx	r3
    newTransition->invalidate();
 8004e62:	682b      	ldr	r3, [r5, #0]
 8004e64:	4628      	mov	r0, r5
 8004e66:	695b      	ldr	r3, [r3, #20]
}
 8004e68:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e6c:	4718      	bx	r3
    model->bind(newPresenter);
 8004e6e:	4623      	mov	r3, r4
 8004e70:	e7e2      	b.n	8004e38 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xe8>
 8004e72:	bf00      	nop
 8004e74:	08028338 	.word	0x08028338
 8004e78:	08028d21 	.word	0x08028d21
 8004e7c:	080284d4 	.word	0x080284d4
 8004e80:	0802851b 	.word	0x0802851b
 8004e84:	080285be 	.word	0x080285be
 8004e88:	2000ef64 	.word	0x2000ef64
 8004e8c:	2000ef60 	.word	0x2000ef60

08004e90 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv>:
{
 8004e90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004e94:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004e98:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004e9a:	68a0      	ldr	r0, [r4, #8]
 8004e9c:	6803      	ldr	r3, [r0, #0]
 8004e9e:	6a1b      	ldr	r3, [r3, #32]
 8004ea0:	4798      	blx	r3
 8004ea2:	f240 438b 	movw	r3, #1163	; 0x48b
 8004ea6:	4298      	cmp	r0, r3
 8004ea8:	d805      	bhi.n	8004eb6 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x26>
 8004eaa:	4b42      	ldr	r3, [pc, #264]	; (8004fb4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x124>)
 8004eac:	4a42      	ldr	r2, [pc, #264]	; (8004fb8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8004eae:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004eb0:	4842      	ldr	r0, [pc, #264]	; (8004fbc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x12c>)
 8004eb2:	f021 fa63 	bl	802637c <__assert_func>
 8004eb6:	6860      	ldr	r0, [r4, #4]
 8004eb8:	6803      	ldr	r3, [r0, #0]
 8004eba:	6a1b      	ldr	r3, [r3, #32]
 8004ebc:	4798      	blx	r3
 8004ebe:	280f      	cmp	r0, #15
 8004ec0:	d803      	bhi.n	8004eca <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x3a>
 8004ec2:	4b3f      	ldr	r3, [pc, #252]	; (8004fc0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x130>)
 8004ec4:	4a3c      	ldr	r2, [pc, #240]	; (8004fb8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8004ec6:	21a4      	movs	r1, #164	; 0xa4
 8004ec8:	e7f2      	b.n	8004eb0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004eca:	68e0      	ldr	r0, [r4, #12]
 8004ecc:	6803      	ldr	r3, [r0, #0]
 8004ece:	6a1b      	ldr	r3, [r3, #32]
 8004ed0:	4798      	blx	r3
 8004ed2:	283f      	cmp	r0, #63	; 0x3f
 8004ed4:	d803      	bhi.n	8004ede <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x4e>
 8004ed6:	4b3b      	ldr	r3, [pc, #236]	; (8004fc4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x134>)
 8004ed8:	4a37      	ldr	r2, [pc, #220]	; (8004fb8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8004eda:	21a5      	movs	r1, #165	; 0xa5
 8004edc:	e7e8      	b.n	8004eb0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004ede:	f00f fe8b 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ee2:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fc8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x138>
 8004ee6:	3004      	adds	r0, #4
 8004ee8:	f00f feec 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004eec:	f8d9 0000 	ldr.w	r0, [r9]
 8004ef0:	b110      	cbz	r0, 8004ef8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004ef2:	6803      	ldr	r3, [r0, #0]
 8004ef4:	68db      	ldr	r3, [r3, #12]
 8004ef6:	4798      	blx	r3
    if (*currentTrans)
 8004ef8:	f8d9 0000 	ldr.w	r0, [r9]
 8004efc:	b110      	cbz	r0, 8004f04 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004efe:	6803      	ldr	r3, [r0, #0]
 8004f00:	681b      	ldr	r3, [r3, #0]
 8004f02:	4798      	blx	r3
    if (*currentScreen)
 8004f04:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004fcc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x13c>
 8004f08:	f8d8 0000 	ldr.w	r0, [r8]
 8004f0c:	b110      	cbz	r0, 8004f14 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f0e:	6803      	ldr	r3, [r0, #0]
 8004f10:	695b      	ldr	r3, [r3, #20]
 8004f12:	4798      	blx	r3
    if (*currentPresenter)
 8004f14:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f18:	b110      	cbz	r0, 8004f20 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f1a:	6803      	ldr	r3, [r0, #0]
 8004f1c:	685b      	ldr	r3, [r3, #4]
 8004f1e:	4798      	blx	r3
    if (*currentScreen)
 8004f20:	f8d8 0000 	ldr.w	r0, [r8]
 8004f24:	b110      	cbz	r0, 8004f2c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f26:	6803      	ldr	r3, [r0, #0]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	4798      	blx	r3
    if (*currentPresenter)
 8004f2c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f30:	b110      	cbz	r0, 8004f38 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f32:	6803      	ldr	r3, [r0, #0]
 8004f34:	689b      	ldr	r3, [r3, #8]
 8004f36:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f38:	68e0      	ldr	r0, [r4, #12]
 8004f3a:	2100      	movs	r1, #0
 8004f3c:	f7ff fe2e 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004f40:	2114      	movs	r1, #20
 8004f42:	4605      	mov	r5, r0
 8004f44:	f7ff fe2e 	bl	8004ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f48:	68a0      	ldr	r0, [r4, #8]
 8004f4a:	6803      	ldr	r3, [r0, #0]
 8004f4c:	2100      	movs	r1, #0
 8004f4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f50:	4798      	blx	r3
 8004f52:	4606      	mov	r6, r0
 8004f54:	f003 fe32 	bl	8008bbc <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f58:	6860      	ldr	r0, [r4, #4]
 8004f5a:	6803      	ldr	r3, [r0, #0]
 8004f5c:	2100      	movs	r1, #0
 8004f5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f60:	4798      	blx	r3
 8004f62:	4631      	mov	r1, r6
 8004f64:	4604      	mov	r4, r0
 8004f66:	f003 fdd7 	bl	8008b18 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 8004f6a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f6e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f72:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f76:	b1dc      	cbz	r4, 8004fb0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x120>
 8004f78:	1d23      	adds	r3, r4, #4
 8004f7a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004f7e:	6833      	ldr	r3, [r6, #0]
 8004f80:	f8c4 a008 	str.w	sl, [r4, #8]
 8004f84:	4630      	mov	r0, r6
 8004f86:	68db      	ldr	r3, [r3, #12]
 8004f88:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004f8a:	4798      	blx	r3
    newPresenter->activate();
 8004f8c:	6823      	ldr	r3, [r4, #0]
 8004f8e:	4620      	mov	r0, r4
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004f94:	4629      	mov	r1, r5
 8004f96:	4630      	mov	r0, r6
 8004f98:	f011 fc5a 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004f9c:	682b      	ldr	r3, [r5, #0]
 8004f9e:	4628      	mov	r0, r5
 8004fa0:	691b      	ldr	r3, [r3, #16]
 8004fa2:	4798      	blx	r3
    newTransition->invalidate();
 8004fa4:	682b      	ldr	r3, [r5, #0]
 8004fa6:	4628      	mov	r0, r5
 8004fa8:	695b      	ldr	r3, [r3, #20]
}
 8004faa:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fae:	4718      	bx	r3
    model->bind(newPresenter);
 8004fb0:	4623      	mov	r3, r4
 8004fb2:	e7e2      	b.n	8004f7a <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xea>
 8004fb4:	08028338 	.word	0x08028338
 8004fb8:	08028e4c 	.word	0x08028e4c
 8004fbc:	080284d4 	.word	0x080284d4
 8004fc0:	0802851b 	.word	0x0802851b
 8004fc4:	080285be 	.word	0x080285be
 8004fc8:	2000ef64 	.word	0x2000ef64
 8004fcc:	2000ef60 	.word	0x2000ef60

08004fd0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv>:
{
 8004fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004fd4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004fd8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004fda:	68a0      	ldr	r0, [r4, #8]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	6a1b      	ldr	r3, [r3, #32]
 8004fe0:	4798      	blx	r3
 8004fe2:	f244 7397 	movw	r3, #18327	; 0x4797
 8004fe6:	4298      	cmp	r0, r3
 8004fe8:	d805      	bhi.n	8004ff6 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x26>
 8004fea:	4b41      	ldr	r3, [pc, #260]	; (80050f0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x120>)
 8004fec:	4a41      	ldr	r2, [pc, #260]	; (80050f4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 8004fee:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ff0:	4841      	ldr	r0, [pc, #260]	; (80050f8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x128>)
 8004ff2:	f021 f9c3 	bl	802637c <__assert_func>
 8004ff6:	6860      	ldr	r0, [r4, #4]
 8004ff8:	6803      	ldr	r3, [r0, #0]
 8004ffa:	6a1b      	ldr	r3, [r3, #32]
 8004ffc:	4798      	blx	r3
 8004ffe:	280f      	cmp	r0, #15
 8005000:	d803      	bhi.n	800500a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x3a>
 8005002:	4b3e      	ldr	r3, [pc, #248]	; (80050fc <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x12c>)
 8005004:	4a3b      	ldr	r2, [pc, #236]	; (80050f4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 8005006:	21a4      	movs	r1, #164	; 0xa4
 8005008:	e7f2      	b.n	8004ff0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800500a:	68e0      	ldr	r0, [r4, #12]
 800500c:	6803      	ldr	r3, [r0, #0]
 800500e:	6a1b      	ldr	r3, [r3, #32]
 8005010:	4798      	blx	r3
 8005012:	283f      	cmp	r0, #63	; 0x3f
 8005014:	d803      	bhi.n	800501e <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x4e>
 8005016:	4b3a      	ldr	r3, [pc, #232]	; (8005100 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x130>)
 8005018:	4a36      	ldr	r2, [pc, #216]	; (80050f4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 800501a:	21a5      	movs	r1, #165	; 0xa5
 800501c:	e7e8      	b.n	8004ff0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800501e:	f00f fdeb 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005022:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8005104 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x134>
 8005026:	3004      	adds	r0, #4
 8005028:	f00f fe4c 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800502c:	f8d9 0000 	ldr.w	r0, [r9]
 8005030:	b110      	cbz	r0, 8005038 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005032:	6803      	ldr	r3, [r0, #0]
 8005034:	68db      	ldr	r3, [r3, #12]
 8005036:	4798      	blx	r3
    if (*currentTrans)
 8005038:	f8d9 0000 	ldr.w	r0, [r9]
 800503c:	b110      	cbz	r0, 8005044 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800503e:	6803      	ldr	r3, [r0, #0]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	4798      	blx	r3
    if (*currentScreen)
 8005044:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8005108 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x138>
 8005048:	f8d8 0000 	ldr.w	r0, [r8]
 800504c:	b110      	cbz	r0, 8005054 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800504e:	6803      	ldr	r3, [r0, #0]
 8005050:	695b      	ldr	r3, [r3, #20]
 8005052:	4798      	blx	r3
    if (*currentPresenter)
 8005054:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005058:	b110      	cbz	r0, 8005060 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 800505a:	6803      	ldr	r3, [r0, #0]
 800505c:	685b      	ldr	r3, [r3, #4]
 800505e:	4798      	blx	r3
    if (*currentScreen)
 8005060:	f8d8 0000 	ldr.w	r0, [r8]
 8005064:	b110      	cbz	r0, 800506c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8005066:	6803      	ldr	r3, [r0, #0]
 8005068:	681b      	ldr	r3, [r3, #0]
 800506a:	4798      	blx	r3
    if (*currentPresenter)
 800506c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005070:	b110      	cbz	r0, 8005078 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005072:	6803      	ldr	r3, [r0, #0]
 8005074:	689b      	ldr	r3, [r3, #8]
 8005076:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8005078:	68e0      	ldr	r0, [r4, #12]
 800507a:	2100      	movs	r1, #0
 800507c:	f7ff fd8e 	bl	8004b9c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8005080:	2114      	movs	r1, #20
 8005082:	4605      	mov	r5, r0
 8005084:	f7ff fd8e 	bl	8004ba4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8005088:	2100      	movs	r1, #0
 800508a:	68a0      	ldr	r0, [r4, #8]
 800508c:	f7ff fa9c 	bl	80045c8 <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8005090:	4606      	mov	r6, r0
 8005092:	f003 faa9 	bl	80085e8 <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8005096:	6860      	ldr	r0, [r4, #4]
 8005098:	2100      	movs	r1, #0
 800509a:	f7ff fa98 	bl	80045ce <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 800509e:	4631      	mov	r1, r6
 80050a0:	4604      	mov	r4, r0
 80050a2:	f003 fa7b 	bl	800859c <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 80050a6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050aa:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050ae:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050b2:	b1dc      	cbz	r4, 80050ec <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x11c>
 80050b4:	1d23      	adds	r3, r4, #4
 80050b6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050ba:	6833      	ldr	r3, [r6, #0]
 80050bc:	f8c4 a008 	str.w	sl, [r4, #8]
 80050c0:	4630      	mov	r0, r6
 80050c2:	68db      	ldr	r3, [r3, #12]
 80050c4:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050c6:	4798      	blx	r3
    newPresenter->activate();
 80050c8:	6823      	ldr	r3, [r4, #0]
 80050ca:	4620      	mov	r0, r4
 80050cc:	681b      	ldr	r3, [r3, #0]
 80050ce:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050d0:	4629      	mov	r1, r5
 80050d2:	4630      	mov	r0, r6
 80050d4:	f011 fbbc 	bl	8016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050d8:	682b      	ldr	r3, [r5, #0]
 80050da:	4628      	mov	r0, r5
 80050dc:	691b      	ldr	r3, [r3, #16]
 80050de:	4798      	blx	r3
    newTransition->invalidate();
 80050e0:	682b      	ldr	r3, [r5, #0]
 80050e2:	4628      	mov	r0, r5
 80050e4:	695b      	ldr	r3, [r3, #20]
}
 80050e6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80050ea:	4718      	bx	r3
    model->bind(newPresenter);
 80050ec:	4623      	mov	r3, r4
 80050ee:	e7e2      	b.n	80050b6 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xe6>
 80050f0:	08028338 	.word	0x08028338
 80050f4:	08028f6f 	.word	0x08028f6f
 80050f8:	080284d4 	.word	0x080284d4
 80050fc:	0802851b 	.word	0x0802851b
 8005100:	080285be 	.word	0x080285be
 8005104:	2000ef64 	.word	0x2000ef64
 8005108:	2000ef60 	.word	0x2000ef60

0800510c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800510c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800510e:	4770      	bx	lr

08005110 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8005110:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8005112:	4770      	bx	lr

08005114 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8005114:	4770      	bx	lr

08005116 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8005116:	888b      	ldrh	r3, [r1, #4]
 8005118:	69c0      	ldr	r0, [r0, #28]
 800511a:	680a      	ldr	r2, [r1, #0]
 800511c:	0adb      	lsrs	r3, r3, #11
 800511e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8005122:	4410      	add	r0, r2
 8005124:	4770      	bx	lr

08005126 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8005126:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8005128:	b1c2      	cbz	r2, 800515c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800512a:	7b13      	ldrb	r3, [r2, #12]
 800512c:	b1b3      	cbz	r3, 800515c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800512e:	7b54      	ldrb	r4, [r2, #13]
 8005130:	7ad2      	ldrb	r2, [r2, #11]
 8005132:	0224      	lsls	r4, r4, #8
 8005134:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8005138:	4314      	orrs	r4, r2
 800513a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800513c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800513e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8005142:	8813      	ldrh	r3, [r2, #0]
 8005144:	428b      	cmp	r3, r1
 8005146:	d102      	bne.n	800514e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8005148:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 800514c:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 800514e:	d805      	bhi.n	800515c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8005150:	3801      	subs	r0, #1
 8005152:	b280      	uxth	r0, r0
 8005154:	3204      	adds	r2, #4
 8005156:	2800      	cmp	r0, #0
 8005158:	d1f3      	bne.n	8005142 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800515a:	e7f7      	b.n	800514c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 800515c:	2000      	movs	r0, #0
 800515e:	e7f5      	b.n	800514c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005160 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005160:	b510      	push	{r4, lr}
 8005162:	212c      	movs	r1, #44	; 0x2c
 8005164:	4604      	mov	r4, r0
 8005166:	f021 f8db 	bl	8026320 <_ZdlPvj>
 800516a:	4620      	mov	r0, r4
 800516c:	bd10      	pop	{r4, pc}
	...

08005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005170:	b530      	push	{r4, r5, lr}
 8005172:	b08b      	sub	sp, #44	; 0x2c
 8005174:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8005176:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800517a:	9508      	str	r5, [sp, #32]
 800517c:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005180:	9507      	str	r5, [sp, #28]
 8005182:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8005186:	9506      	str	r5, [sp, #24]
 8005188:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 800518c:	9505      	str	r5, [sp, #20]
 800518e:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005192:	9504      	str	r5, [sp, #16]
 8005194:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8005198:	9503      	str	r5, [sp, #12]
 800519a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 800519e:	9502      	str	r5, [sp, #8]
 80051a0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80051a4:	9501      	str	r5, [sp, #4]
 80051a6:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 80051aa:	9500      	str	r5, [sp, #0]
 80051ac:	f010 feba 	bl	8015f24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80051b0:	4b06      	ldr	r3, [pc, #24]	; (80051cc <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 80051b2:	6023      	str	r3, [r4, #0]
 80051b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80051b6:	61e3      	str	r3, [r4, #28]
 80051b8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80051ba:	6223      	str	r3, [r4, #32]
 80051bc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80051be:	6263      	str	r3, [r4, #36]	; 0x24
 80051c0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80051c2:	62a3      	str	r3, [r4, #40]	; 0x28
}
 80051c4:	4620      	mov	r0, r4
 80051c6:	b00b      	add	sp, #44	; 0x2c
 80051c8:	bd30      	pop	{r4, r5, pc}
 80051ca:	bf00      	nop
 80051cc:	08029204 	.word	0x08029204

080051d0 <_ZN23MainInfotaimentViewBase11setupScreenEv>:
}

void MainInfotaimentViewBase::setupScreen()
{

}
 80051d0:	4770      	bx	lr

080051d2 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80051d2:	4770      	bx	lr

080051d4 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80051d4:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051d6:	68c2      	ldr	r2, [r0, #12]
 80051d8:	6844      	ldr	r4, [r0, #4]
 80051da:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80051dc:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80051de:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80051e2:	07d2      	lsls	r2, r2, #31
 80051e4:	bf48      	it	mi
 80051e6:	5962      	ldrmi	r2, [r4, r5]
 80051e8:	689b      	ldr	r3, [r3, #8]
    }
 80051ea:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80051ec:	bf48      	it	mi
 80051ee:	58d3      	ldrmi	r3, [r2, r3]
 80051f0:	4718      	bx	r3

080051f2 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80051f2:	6843      	ldr	r3, [r0, #4]
 80051f4:	b12b      	cbz	r3, 8005202 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80051f6:	6883      	ldr	r3, [r0, #8]
 80051f8:	b92b      	cbnz	r3, 8005206 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80051fa:	68c0      	ldr	r0, [r0, #12]
 80051fc:	f000 0001 	and.w	r0, r0, #1
 8005200:	4770      	bx	lr
 8005202:	4618      	mov	r0, r3
 8005204:	4770      	bx	lr
 8005206:	2001      	movs	r0, #1
    }
 8005208:	4770      	bx	lr

0800520a <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800520a:	b510      	push	{r4, lr}
 800520c:	2110      	movs	r1, #16
 800520e:	4604      	mov	r4, r0
 8005210:	f021 f886 	bl	8026320 <_ZdlPvj>
 8005214:	4620      	mov	r0, r4
 8005216:	bd10      	pop	{r4, pc}

08005218 <_ZN23MainInfotaimentViewBaseD1Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 8005218:	b510      	push	{r4, lr}
 800521a:	4b03      	ldr	r3, [pc, #12]	; (8005228 <_ZN23MainInfotaimentViewBaseD1Ev+0x10>)
 800521c:	6003      	str	r3, [r0, #0]
 800521e:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005220:	f00d ffe8 	bl	80131f4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005224:	4620      	mov	r0, r4
 8005226:	bd10      	pop	{r4, pc}
 8005228:	0802927c 	.word	0x0802927c

0800522c <_ZN23MainInfotaimentViewBaseD0Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 800522c:	b507      	push	{r0, r1, r2, lr}
 800522e:	4b07      	ldr	r3, [pc, #28]	; (800524c <_ZN23MainInfotaimentViewBaseD0Ev+0x20>)
 8005230:	6003      	str	r3, [r0, #0]
 8005232:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8005234:	f00d ffde 	bl	80131f4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8005238:	9801      	ldr	r0, [sp, #4]
 800523a:	f244 7198 	movw	r1, #18328	; 0x4798
 800523e:	f021 f86f 	bl	8026320 <_ZdlPvj>
 8005242:	9801      	ldr	r0, [sp, #4]
 8005244:	b003      	add	sp, #12
 8005246:	f85d fb04 	ldr.w	pc, [sp], #4
 800524a:	bf00      	nop
 800524c:	0802927c 	.word	0x0802927c

08005250 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainInfotaimentViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8005250:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8005252:	f500 53aa 	add.w	r3, r0, #5440	; 0x1540
 8005256:	330c      	adds	r3, #12
 8005258:	4299      	cmp	r1, r3
{
 800525a:	4604      	mov	r4, r0
 800525c:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 800525e:	d103      	bne.n	8005268 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
    virtual ~MainInfotaimentViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005260:	f00f fcca 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromLiveDataToMissionSelect
        //When btnNextPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards East
        application().gotoMissionSelectScreenSlideTransitionEast();
 8005264:	f7ff f950 	bl	8004508 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>
    }
    if (&src == &toDriver1)
 8005268:	f504 53b5 	add.w	r3, r4, #5792	; 0x16a0
 800526c:	3304      	adds	r3, #4
 800526e:	429d      	cmp	r5, r3
 8005270:	d103      	bne.n	800527a <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8005272:	f00f fcc1 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //toDriverEasterEgg1
        //When toDriver1 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
 8005276:	f7ff f987 	bl	8004588 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
    }
    if (&src == &toDriver2)
 800527a:	f504 54b6 	add.w	r4, r4, #5824	; 0x16c0
 800527e:	3418      	adds	r4, #24
 8005280:	42a5      	cmp	r5, r4
 8005282:	d105      	bne.n	8005290 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x40>
 8005284:	f00f fcb8 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
        //toDriverEasterEgg2
        //When toDriver2 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
    }
}
 8005288:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoDriverScreenScreenNoTransition();
 800528c:	f7ff b97c 	b.w	8004588 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
}
 8005290:	bd38      	pop	{r3, r4, r5, pc}
	...

08005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8005294:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8005296:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8005298:	4604      	mov	r4, r0
 800529a:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 800529c:	2100      	movs	r1, #0
 800529e:	f021 f8f9 	bl	8026494 <memset>
 80052a2:	4620      	mov	r0, r4
 80052a4:	f7fd fbe8 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 80052a8:	4b06      	ldr	r3, [pc, #24]	; (80052c4 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 80052aa:	6023      	str	r3, [r4, #0]
 80052ac:	882b      	ldrh	r3, [r5, #0]
 80052ae:	84e3      	strh	r3, [r4, #38]	; 0x26
 80052b0:	23ff      	movs	r3, #255	; 0xff
    {
        Image::setBitmap(bmp);
 80052b2:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 80052b4:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 80052b8:	4629      	mov	r1, r5
 80052ba:	f00c ff9d 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 80052be:	4620      	mov	r0, r4
 80052c0:	bd38      	pop	{r3, r4, r5, pc}
 80052c2:	bf00      	nop
 80052c4:	0802a22c 	.word	0x0802a22c

080052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80052c8:	0152      	lsls	r2, r2, #5
 80052ca:	0149      	lsls	r1, r1, #5
 80052cc:	f00b be60 	b.w	8010f90 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

080052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 80052d0:	0152      	lsls	r2, r2, #5
 80052d2:	0149      	lsls	r1, r1, #5
 80052d4:	f00b be67 	b.w	8010fa6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

080052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 80052d8:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 80052da:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 80052dc:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 80052e0:	ea4f 1241 	mov.w	r2, r1, lsl #5
 80052e4:	d004      	beq.n	80052f0 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 80052e6:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 80052ea:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 80052ec:	f00b bd5a 	b.w	8010da4 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 80052f0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80052f4:	4770      	bx	lr
	...

080052f8 <_ZN23MainInfotaimentViewBaseC1Ev>:
MainInfotaimentViewBase::MainInfotaimentViewBase() :
 80052f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80052fc:	ed2d 8b10 	vpush	{d8-d15}
 8005300:	4683      	mov	fp, r0
 8005302:	b0c5      	sub	sp, #276	; 0x114
    buttonCallback(this, &MainInfotaimentViewBase::buttonCallbackHandler)
 8005304:	46da      	mov	sl, fp
        : presenter(0)
 8005306:	2500      	movs	r5, #0
 8005308:	f011 f8f6 	bl	80164f8 <_ZN8touchgfx6ScreenC1Ev>
 800530c:	4be3      	ldr	r3, [pc, #908]	; (800569c <_ZN23MainInfotaimentViewBaseC1Ev+0x3a4>)
 800530e:	f8cb 503c 	str.w	r5, [fp, #60]	; 0x3c
 8005312:	f84a 3b40 	str.w	r3, [sl], #64
 8005316:	f10b 096c 	add.w	r9, fp, #108	; 0x6c
 800531a:	4650      	mov	r0, sl
 800531c:	f7fd fd14 	bl	8002d48 <_ZN8touchgfx3BoxC1Ev>
 8005320:	4648      	mov	r0, r9
 8005322:	f7fd fd5b 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005326:	f10b 03b8 	add.w	r3, fp, #184	; 0xb8
 800532a:	4618      	mov	r0, r3
 800532c:	9308      	str	r3, [sp, #32]
 800532e:	f7fd fd55 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005332:	f50b 7382 	add.w	r3, fp, #260	; 0x104
 8005336:	4618      	mov	r0, r3
 8005338:	f50b 78a6 	add.w	r8, fp, #332	; 0x14c
 800533c:	9309      	str	r3, [sp, #36]	; 0x24
 800533e:	f7fd fd1f 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005342:	4640      	mov	r0, r8
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8005344:	4cd6      	ldr	r4, [pc, #856]	; (80056a0 <_ZN23MainInfotaimentViewBaseC1Ev+0x3a8>)
 8005346:	f00b fd0d 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 800534a:	f50b 73de 	add.w	r3, fp, #444	; 0x1bc
 800534e:	4618      	mov	r0, r3
 8005350:	f104 0624 	add.w	r6, r4, #36	; 0x24
 8005354:	9336      	str	r3, [sp, #216]	; 0xd8
 8005356:	f7fc fb4d 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800535a:	f50b 73e8 	add.w	r3, fp, #464	; 0x1d0
 800535e:	f8cb 41bc 	str.w	r4, [fp, #444]	; 0x1bc
 8005362:	f8cb 61c4 	str.w	r6, [fp, #452]	; 0x1c4
 8005366:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8005368:	f8cb 51c8 	str.w	r5, [fp, #456]	; 0x1c8
 800536c:	9319      	str	r3, [sp, #100]	; 0x64
 800536e:	f7fd fd35 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005372:	f50b 7307 	add.w	r3, fp, #540	; 0x21c
 8005376:	4618      	mov	r0, r3
 8005378:	930a      	str	r3, [sp, #40]	; 0x28
 800537a:	f7fd fd01 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 800537e:	f50b 7319 	add.w	r3, fp, #612	; 0x264
 8005382:	4618      	mov	r0, r3
 8005384:	932a      	str	r3, [sp, #168]	; 0xa8
 8005386:	f7fd fd1b 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800538a:	f50b 7326 	add.w	r3, fp, #664	; 0x298
 800538e:	4618      	mov	r0, r3
 8005390:	932b      	str	r3, [sp, #172]	; 0xac
 8005392:	f7fd fd15 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005396:	f50b 7333 	add.w	r3, fp, #716	; 0x2cc
 800539a:	4618      	mov	r0, r3
 800539c:	ee08 3a10 	vmov	s16, r3
 80053a0:	f009 fe7a 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 80053a4:	f50b 736c 	add.w	r3, fp, #944	; 0x3b0
 80053a8:	4618      	mov	r0, r3
 80053aa:	ee08 3a90 	vmov	s17, r3
 80053ae:	f009 fe73 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 80053b2:	f20b 4394 	addw	r3, fp, #1172	; 0x494
 80053b6:	4618      	mov	r0, r3
 80053b8:	932c      	str	r3, [sp, #176]	; 0xb0
 80053ba:	f7fd fd01 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80053be:	f50b 6399 	add.w	r3, fp, #1224	; 0x4c8
 80053c2:	4618      	mov	r0, r3
 80053c4:	ee09 3a10 	vmov	s18, r3
 80053c8:	f009 fe66 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 80053cc:	f20b 53ac 	addw	r3, fp, #1452	; 0x5ac
 80053d0:	4618      	mov	r0, r3
 80053d2:	932d      	str	r3, [sp, #180]	; 0xb4
 80053d4:	f7fd fcf4 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80053d8:	f50b 63bc 	add.w	r3, fp, #1504	; 0x5e0
 80053dc:	4618      	mov	r0, r3
 80053de:	ee0d 3a90 	vmov	s27, r3
 80053e2:	f00b fcbf 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 80053e6:	f50b 63ca 	add.w	r3, fp, #1616	; 0x650
 80053ea:	4618      	mov	r0, r3
 80053ec:	9337      	str	r3, [sp, #220]	; 0xdc
 80053ee:	f7fc fb01 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80053f2:	f20b 6364 	addw	r3, fp, #1636	; 0x664
 80053f6:	f8cb 4650 	str.w	r4, [fp, #1616]	; 0x650
 80053fa:	f8cb 6658 	str.w	r6, [fp, #1624]	; 0x658
 80053fe:	4618      	mov	r0, r3
 8005400:	f8cb 565c 	str.w	r5, [fp, #1628]	; 0x65c
 8005404:	ee0e 3a10 	vmov	s28, r3
 8005408:	f00b fcac 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 800540c:	f20b 63d4 	addw	r3, fp, #1748	; 0x6d4
 8005410:	4618      	mov	r0, r3
 8005412:	9338      	str	r3, [sp, #224]	; 0xe0
 8005414:	f7fc faee 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005418:	f50b 63dd 	add.w	r3, fp, #1768	; 0x6e8
 800541c:	f8cb 46d4 	str.w	r4, [fp, #1748]	; 0x6d4
 8005420:	f8cb 66dc 	str.w	r6, [fp, #1756]	; 0x6dc
 8005424:	4618      	mov	r0, r3
 8005426:	f8cb 56e0 	str.w	r5, [fp, #1760]	; 0x6e0
 800542a:	930b      	str	r3, [sp, #44]	; 0x2c
 800542c:	f7fd fca8 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005430:	f50b 63e6 	add.w	r3, fp, #1840	; 0x730
 8005434:	4618      	mov	r0, r3
 8005436:	9322      	str	r3, [sp, #136]	; 0x88
 8005438:	f7fd fcd0 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800543c:	f20b 737c 	addw	r3, fp, #1916	; 0x77c
 8005440:	4618      	mov	r0, r3
 8005442:	931a      	str	r3, [sp, #104]	; 0x68
 8005444:	f7fd fc9c 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005448:	f20b 73c4 	addw	r3, fp, #1988	; 0x7c4
 800544c:	4618      	mov	r0, r3
 800544e:	ee09 3a90 	vmov	s19, r3
 8005452:	f009 fe21 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 8005456:	f60b 03a8 	addw	r3, fp, #2216	; 0x8a8
 800545a:	4618      	mov	r0, r3
 800545c:	ee0a 3a10 	vmov	s20, r3
 8005460:	f009 fe1a 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 8005464:	f60b 138c 	addw	r3, fp, #2444	; 0x98c
 8005468:	4618      	mov	r0, r3
 800546a:	ee0a 3a90 	vmov	s21, r3
 800546e:	f009 fe13 	bl	800f098 <_ZN8touchgfx11BoxProgressC1Ev>
 8005472:	f50b 6327 	add.w	r3, fp, #2672	; 0xa70
 8005476:	4618      	mov	r0, r3
 8005478:	932e      	str	r3, [sp, #184]	; 0xb8
 800547a:	f7fd fca1 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800547e:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 8005482:	4618      	mov	r0, r3
 8005484:	9323      	str	r3, [sp, #140]	; 0x8c
 8005486:	f7fd fca9 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800548a:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 800548e:	4618      	mov	r0, r3
 8005490:	932f      	str	r3, [sp, #188]	; 0xbc
 8005492:	f7fd fc95 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005496:	f60b 3324 	addw	r3, fp, #2852	; 0xb24
 800549a:	4618      	mov	r0, r3
 800549c:	9330      	str	r3, [sp, #192]	; 0xc0
 800549e:	f7fd fc8f 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80054a2:	f60b 3358 	addw	r3, fp, #2904	; 0xb58
 80054a6:	4618      	mov	r0, r3
 80054a8:	9324      	str	r3, [sp, #144]	; 0x90
 80054aa:	f7fd fc97 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80054ae:	f60b 33a4 	addw	r3, fp, #2980	; 0xba4
 80054b2:	4618      	mov	r0, r3
 80054b4:	9325      	str	r3, [sp, #148]	; 0x94
 80054b6:	f7fd fc91 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80054ba:	f50b 633f 	add.w	r3, fp, #3056	; 0xbf0
 80054be:	4618      	mov	r0, r3
 80054c0:	9331      	str	r3, [sp, #196]	; 0xc4
 80054c2:	f7fd fc7d 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80054c6:	f60b 4324 	addw	r3, fp, #3108	; 0xc24
 80054ca:	4618      	mov	r0, r3
 80054cc:	930c      	str	r3, [sp, #48]	; 0x30
 80054ce:	f7fd fc57 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 80054d2:	f60b 436c 	addw	r3, fp, #3180	; 0xc6c
 80054d6:	4618      	mov	r0, r3
 80054d8:	9332      	str	r3, [sp, #200]	; 0xc8
 80054da:	f7fd fc71 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80054de:	f50b 634a 	add.w	r3, fp, #3232	; 0xca0
 80054e2:	4618      	mov	r0, r3
 80054e4:	930d      	str	r3, [sp, #52]	; 0x34
 80054e6:	f7fd fc4b 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 80054ea:	f60b 43e8 	addw	r3, fp, #3304	; 0xce8
 80054ee:	af41      	add	r7, sp, #260	; 0x104
 80054f0:	931b      	str	r3, [sp, #108]	; 0x6c
 80054f2:	4639      	mov	r1, r7
 80054f4:	f04f 33ff 	mov.w	r3, #4294967295
 80054f8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80054fa:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 80054fe:	f00b ff0b 	bl	8011318 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8005502:	f60b 5314 	addw	r3, fp, #3348	; 0xd14
 8005506:	4618      	mov	r0, r3
 8005508:	ee0e 3a90 	vmov	s29, r3
 800550c:	f7fd fc38 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005510:	f60b 535c 	addw	r3, fp, #3420	; 0xd5c
 8005514:	4618      	mov	r0, r3
 8005516:	ee0f 3a10 	vmov	s30, r3
 800551a:	f00b fc23 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 800551e:	f60b 53cc 	addw	r3, fp, #3532	; 0xdcc
 8005522:	4618      	mov	r0, r3
 8005524:	9339      	str	r3, [sp, #228]	; 0xe4
 8005526:	f7fc fa65 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800552a:	f50b 635e 	add.w	r3, fp, #3552	; 0xde0
 800552e:	f8cb 4dcc 	str.w	r4, [fp, #3532]	; 0xdcc
 8005532:	f8cb 6dd4 	str.w	r6, [fp, #3540]	; 0xdd4
 8005536:	4618      	mov	r0, r3
 8005538:	f8cb 5dd8 	str.w	r5, [fp, #3544]	; 0xdd8
 800553c:	ee0f 3a90 	vmov	s31, r3
 8005540:	f00b fc10 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 8005544:	f50b 6365 	add.w	r3, fp, #3664	; 0xe50
 8005548:	4618      	mov	r0, r3
 800554a:	933a      	str	r3, [sp, #232]	; 0xe8
 800554c:	f7fc fa52 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005550:	f60b 6364 	addw	r3, fp, #3684	; 0xe64
 8005554:	f8cb 4e50 	str.w	r4, [fp, #3664]	; 0xe50
 8005558:	f8cb 6e58 	str.w	r6, [fp, #3672]	; 0xe58
 800555c:	4618      	mov	r0, r3
 800555e:	f8cb 5e5c 	str.w	r5, [fp, #3676]	; 0xe5c
 8005562:	9333      	str	r3, [sp, #204]	; 0xcc
 8005564:	f7fd fc2c 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005568:	f60b 6398 	addw	r3, fp, #3736	; 0xe98
 800556c:	4618      	mov	r0, r3
 800556e:	9302      	str	r3, [sp, #8]
 8005570:	f7fd fc06 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005574:	f50b 636e 	add.w	r3, fp, #3808	; 0xee0
 8005578:	4618      	mov	r0, r3
 800557a:	9334      	str	r3, [sp, #208]	; 0xd0
 800557c:	f7fd fc20 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005580:	f60b 7314 	addw	r3, fp, #3860	; 0xf14
 8005584:	4618      	mov	r0, r3
 8005586:	9303      	str	r3, [sp, #12]
 8005588:	f00b fbec 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 800558c:	f60b 7384 	addw	r3, fp, #3972	; 0xf84
 8005590:	4618      	mov	r0, r3
 8005592:	933b      	str	r3, [sp, #236]	; 0xec
 8005594:	f7fc fa2e 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005598:	f60b 7398 	addw	r3, fp, #3992	; 0xf98
 800559c:	f8cb 4f84 	str.w	r4, [fp, #3972]	; 0xf84
 80055a0:	f8cb 6f8c 	str.w	r6, [fp, #3980]	; 0xf8c
 80055a4:	4618      	mov	r0, r3
 80055a6:	f8cb 5f90 	str.w	r5, [fp, #3984]	; 0xf90
 80055aa:	9335      	str	r3, [sp, #212]	; 0xd4
 80055ac:	f7fd fc08 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80055b0:	f60b 73cc 	addw	r3, fp, #4044	; 0xfcc
 80055b4:	4618      	mov	r0, r3
 80055b6:	9304      	str	r3, [sp, #16]
 80055b8:	f00b fbd4 	bl	8010d64 <_ZN8touchgfx4LineC1Ev>
 80055bc:	f50b 5381 	add.w	r3, fp, #4128	; 0x1020
 80055c0:	331c      	adds	r3, #28
 80055c2:	4618      	mov	r0, r3
 80055c4:	9326      	str	r3, [sp, #152]	; 0x98
 80055c6:	f7fc fa15 	bl	80019f4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80055ca:	f50b 5380 	add.w	r3, fp, #4096	; 0x1000
 80055ce:	63dc      	str	r4, [r3, #60]	; 0x3c
 80055d0:	645e      	str	r6, [r3, #68]	; 0x44
 80055d2:	649d      	str	r5, [r3, #72]	; 0x48
 80055d4:	f50b 5382 	add.w	r3, fp, #4160	; 0x1040
 80055d8:	3310      	adds	r3, #16
 80055da:	4618      	mov	r0, r3
 80055dc:	931c      	str	r3, [sp, #112]	; 0x70
 80055de:	f7fd fbef 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80055e2:	f50b 5384 	add.w	r3, fp, #4224	; 0x1080
 80055e6:	3304      	adds	r3, #4
 80055e8:	4618      	mov	r0, r3
 80055ea:	ee0b 3a10 	vmov	s22, r3
 80055ee:	f7fd fbc7 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 80055f2:	f50b 5386 	add.w	r3, fp, #4288	; 0x10c0
 80055f6:	330c      	adds	r3, #12
 80055f8:	4618      	mov	r0, r3
 80055fa:	ee0b 3a90 	vmov	s23, r3
 80055fe:	f7fd fbbf 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005602:	f50b 5388 	add.w	r3, fp, #4352	; 0x1100
 8005606:	3314      	adds	r3, #20
 8005608:	4618      	mov	r0, r3
 800560a:	9305      	str	r3, [sp, #20]
 800560c:	f7fd fbe6 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005610:	f50b 538b 	add.w	r3, fp, #4448	; 0x1160
 8005614:	4618      	mov	r0, r3
 8005616:	931d      	str	r3, [sp, #116]	; 0x74
 8005618:	f7fd fbe0 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800561c:	f50b 538d 	add.w	r3, fp, #4512	; 0x11a0
 8005620:	330c      	adds	r3, #12
 8005622:	4618      	mov	r0, r3
 8005624:	9306      	str	r3, [sp, #24]
 8005626:	f7fd fbd9 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800562a:	f50b 538f 	add.w	r3, fp, #4576	; 0x11e0
 800562e:	3318      	adds	r3, #24
 8005630:	4618      	mov	r0, r3
 8005632:	9307      	str	r3, [sp, #28]
 8005634:	f7fd fbd2 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005638:	f50b 5392 	add.w	r3, fp, #4672	; 0x1240
 800563c:	3304      	adds	r3, #4
 800563e:	4618      	mov	r0, r3
 8005640:	931e      	str	r3, [sp, #120]	; 0x78
 8005642:	f7fd fbbd 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005646:	f50b 5393 	add.w	r3, fp, #4704	; 0x1260
 800564a:	3318      	adds	r3, #24
 800564c:	4618      	mov	r0, r3
 800564e:	930e      	str	r3, [sp, #56]	; 0x38
 8005650:	f7fd fbc4 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005654:	f50b 5396 	add.w	r3, fp, #4800	; 0x12c0
 8005658:	3304      	adds	r3, #4
 800565a:	f04f 34ff 	mov.w	r4, #4294967295
 800565e:	4639      	mov	r1, r7
 8005660:	4618      	mov	r0, r3
 8005662:	930f      	str	r3, [sp, #60]	; 0x3c
 8005664:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005668:	f7ff fe14 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800566c:	f50b 5397 	add.w	r3, fp, #4832	; 0x12e0
 8005670:	3310      	adds	r3, #16
 8005672:	4618      	mov	r0, r3
 8005674:	931f      	str	r3, [sp, #124]	; 0x7c
 8005676:	f7fd fba3 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800567a:	f50b 5399 	add.w	r3, fp, #4896	; 0x1320
 800567e:	3304      	adds	r3, #4
 8005680:	4618      	mov	r0, r3
 8005682:	9310      	str	r3, [sp, #64]	; 0x40
 8005684:	f7fd fbaa 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005688:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 800568c:	3310      	adds	r3, #16
 800568e:	4639      	mov	r1, r7
 8005690:	4618      	mov	r0, r3
 8005692:	9311      	str	r3, [sp, #68]	; 0x44
 8005694:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005698:	e004      	b.n	80056a4 <_ZN23MainInfotaimentViewBaseC1Ev+0x3ac>
 800569a:	bf00      	nop
 800569c:	0802927c 	.word	0x0802927c
 80056a0:	08029d38 	.word	0x08029d38
 80056a4:	f7ff fdf6 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056a8:	f50b 539c 	add.w	r3, fp, #4992	; 0x1380
 80056ac:	331c      	adds	r3, #28
 80056ae:	4639      	mov	r1, r7
 80056b0:	4618      	mov	r0, r3
 80056b2:	9312      	str	r3, [sp, #72]	; 0x48
 80056b4:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80056b8:	f7ff fdec 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056bc:	f50b 539e 	add.w	r3, fp, #5056	; 0x13c0
 80056c0:	3308      	adds	r3, #8
 80056c2:	4639      	mov	r1, r7
 80056c4:	4618      	mov	r0, r3
 80056c6:	9313      	str	r3, [sp, #76]	; 0x4c
 80056c8:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80056cc:	f7ff fde2 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80056d0:	f50b 539f 	add.w	r3, fp, #5088	; 0x13e0
 80056d4:	3314      	adds	r3, #20
 80056d6:	4618      	mov	r0, r3
 80056d8:	9320      	str	r3, [sp, #128]	; 0x80
 80056da:	f7fd fb71 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80056de:	f50b 53a1 	add.w	r3, fp, #5152	; 0x1420
 80056e2:	3308      	adds	r3, #8
 80056e4:	4618      	mov	r0, r3
 80056e6:	9314      	str	r3, [sp, #80]	; 0x50
 80056e8:	f7fd fb78 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80056ec:	f50b 53a3 	add.w	r3, fp, #5216	; 0x1460
 80056f0:	3314      	adds	r3, #20
 80056f2:	4639      	mov	r1, r7
 80056f4:	4618      	mov	r0, r3
 80056f6:	9315      	str	r3, [sp, #84]	; 0x54
 80056f8:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80056fc:	f7ff fdca 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005700:	f50b 53a5 	add.w	r3, fp, #5280	; 0x14a0
 8005704:	4639      	mov	r1, r7
 8005706:	4618      	mov	r0, r3
 8005708:	9327      	str	r3, [sp, #156]	; 0x9c
 800570a:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 800570e:	f7ff fdc1 	bl	8005294 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005712:	f50b 53a6 	add.w	r3, fp, #5312	; 0x14c0
 8005716:	330c      	adds	r3, #12
 8005718:	4618      	mov	r0, r3
 800571a:	9321      	str	r3, [sp, #132]	; 0x84
 800571c:	f7fd fb50 	bl	8002dc0 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005720:	f50b 53a8 	add.w	r3, fp, #5376	; 0x1500
 8005724:	4618      	mov	r0, r3
 8005726:	9328      	str	r3, [sp, #160]	; 0xa0
 8005728:	f7fd fb58 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800572c:	f50b 53aa 	add.w	r3, fp, #5440	; 0x1540
 8005730:	330c      	adds	r3, #12
 8005732:	4618      	mov	r0, r3
 8005734:	9316      	str	r3, [sp, #88]	; 0x58
 8005736:	f7fd f9b1 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 800573a:	f50b 53ac 	add.w	r3, fp, #5504	; 0x1580
 800573e:	4618      	mov	r0, r3
 8005740:	9329      	str	r3, [sp, #164]	; 0xa4
 8005742:	f7fd fb4b 	bl	8002ddc <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005746:	f50b 53ae 	add.w	r3, fp, #5568	; 0x15c0
 800574a:	330c      	adds	r3, #12
 800574c:	4618      	mov	r0, r3
 800574e:	ee0c 3a10 	vmov	s24, r3
 8005752:	f7fd fb15 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005756:	f50b 53b0 	add.w	r3, fp, #5632	; 0x1600
 800575a:	3314      	adds	r3, #20
 800575c:	4618      	mov	r0, r3
 800575e:	ee0c 3a90 	vmov	s25, r3
 8005762:	f7fd fb0d 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005766:	f50b 53b2 	add.w	r3, fp, #5696	; 0x1640
 800576a:	331c      	adds	r3, #28
 800576c:	4618      	mov	r0, r3
 800576e:	ee0d 3a10 	vmov	s26, r3
 8005772:	f7fd fb05 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 8005776:	f50b 53b5 	add.w	r3, fp, #5792	; 0x16a0
 800577a:	3304      	adds	r3, #4
 800577c:	4618      	mov	r0, r3
 800577e:	9317      	str	r3, [sp, #92]	; 0x5c
 8005780:	f7fd f98c 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 8005784:	f50b 53b6 	add.w	r3, fp, #5824	; 0x16c0
 8005788:	3318      	adds	r3, #24
 800578a:	4618      	mov	r0, r3
 800578c:	9318      	str	r3, [sp, #96]	; 0x60
 800578e:	f7fd f985 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005792:	f50b 4380 	add.w	r3, fp, #16384	; 0x4000
 8005796:	4a29      	ldr	r2, [pc, #164]	; (800583c <_ZN23MainInfotaimentViewBaseC1Ev+0x544>)
 8005798:	f8c3 2788 	str.w	r2, [r3, #1928]	; 0x788
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800579c:	f50b 50c5 	add.w	r0, fp, #6304	; 0x18a0
 80057a0:	4a27      	ldr	r2, [pc, #156]	; (8005840 <_ZN23MainInfotaimentViewBaseC1Ev+0x548>)
 80057a2:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
 80057a6:	f8c3 b78c 	str.w	fp, [r3, #1932]	; 0x78c
 80057aa:	f8c3 5794 	str.w	r5, [r3, #1940]	; 0x794
 80057ae:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 80057b2:	3008      	adds	r0, #8
 80057b4:	f00d fd14 	bl	80131e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 80057b8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80057bc:	462a      	mov	r2, r5
 80057be:	4650      	mov	r0, sl
 80057c0:	9300      	str	r3, [sp, #0]
 80057c2:	4629      	mov	r1, r5
 80057c4:	f44f 7348 	mov.w	r3, #800	; 0x320
 80057c8:	f7fd f943 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80057cc:	f10b 0404 	add.w	r4, fp, #4
 80057d0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80057d4:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 80057d8:	4651      	mov	r1, sl
 80057da:	4620      	mov	r0, r4
 80057dc:	f009 fe70 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setXY(363, 40);
 80057e0:	2228      	movs	r2, #40	; 0x28
 80057e2:	f240 116b 	movw	r1, #363	; 0x16b
 80057e6:	4648      	mov	r0, r9
 80057e8:	f7fd f926 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80057ec:	4b15      	ldr	r3, [pc, #84]	; (8005844 <_ZN23MainInfotaimentViewBaseC1Ev+0x54c>)
 80057ee:	f8cb 309c 	str.w	r3, [fp, #156]	; 0x9c
        boundingArea = calculateBoundingArea();
 80057f2:	f8db 306c 	ldr.w	r3, [fp, #108]	; 0x6c
        linespace = space;
 80057f6:	f8ab 50a0 	strh.w	r5, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 80057fa:	ae3c      	add	r6, sp, #240	; 0xf0
 80057fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005800:	4649      	mov	r1, r9
 8005802:	4630      	mov	r0, r6
 8005804:	4798      	blx	r3
 8005806:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800580a:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800580e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005812:	4b0d      	ldr	r3, [pc, #52]	; (8005848 <_ZN23MainInfotaimentViewBaseC1Ev+0x550>)
 8005814:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B1YM).getText());
 8005816:	f50b 5ab8 	add.w	sl, fp, #5888	; 0x1700
 800581a:	f10a 0a0c 	add.w	sl, sl, #12
 800581e:	b92b      	cbnz	r3, 800582c <_ZN23MainInfotaimentViewBaseC1Ev+0x534>
 8005820:	4b0a      	ldr	r3, [pc, #40]	; (800584c <_ZN23MainInfotaimentViewBaseC1Ev+0x554>)
 8005822:	4a0b      	ldr	r2, [pc, #44]	; (8005850 <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005824:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005826:	480b      	ldr	r0, [pc, #44]	; (8005854 <_ZN23MainInfotaimentViewBaseC1Ev+0x55c>)
 8005828:	f020 fda8 	bl	802637c <__assert_func>
 800582c:	4b0a      	ldr	r3, [pc, #40]	; (8005858 <_ZN23MainInfotaimentViewBaseC1Ev+0x560>)
 800582e:	881b      	ldrh	r3, [r3, #0]
 8005830:	2b7f      	cmp	r3, #127	; 0x7f
 8005832:	d815      	bhi.n	8005860 <_ZN23MainInfotaimentViewBaseC1Ev+0x568>
 8005834:	4b09      	ldr	r3, [pc, #36]	; (800585c <_ZN23MainInfotaimentViewBaseC1Ev+0x564>)
 8005836:	4a06      	ldr	r2, [pc, #24]	; (8005850 <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005838:	2161      	movs	r1, #97	; 0x61
 800583a:	e7f4      	b.n	8005826 <_ZN23MainInfotaimentViewBaseC1Ev+0x52e>
 800583c:	08029264 	.word	0x08029264
 8005840:	08005251 	.word	0x08005251
 8005844:	ffffea00 	.word	0xffffea00
 8005848:	2000ef74 	.word	0x2000ef74
 800584c:	08028058 	.word	0x08028058
 8005850:	0802815a 	.word	0x0802815a
 8005854:	080280d5 	.word	0x080280d5
 8005858:	2000ef78 	.word	0x2000ef78
 800585c:	0802811c 	.word	0x0802811c
        return texts->getText(typedTextId);
 8005860:	4bdc      	ldr	r3, [pc, #880]	; (8005bd4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005862:	217f      	movs	r1, #127	; 0x7f
 8005864:	6818      	ldr	r0, [r3, #0]
 8005866:	f002 fb2b 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 800586a:	4adb      	ldr	r2, [pc, #876]	; (8005bd8 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 800586c:	4603      	mov	r3, r0
 800586e:	2102      	movs	r1, #2
 8005870:	4650      	mov	r0, sl
 8005872:	f012 fb31 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtGear.resizeToCurrentText();
 8005876:	4648      	mov	r0, r9
 8005878:	f8cb a0b4 	str.w	sl, [fp, #180]	; 0xb4
 800587c:	f00c fa70 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005880:	4bd6      	ldr	r3, [pc, #856]	; (8005bdc <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005882:	9341      	str	r3, [sp, #260]	; 0x104
 8005884:	f04f 0280 	mov.w	r2, #128	; 0x80
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VH0));
 8005888:	4648      	mov	r0, r9
 800588a:	4639      	mov	r1, r7
 800588c:	f8ad 2108 	strh.w	r2, [sp, #264]	; 0x108
 8005890:	f00c fa86 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005894:	4649      	mov	r1, r9
 8005896:	4620      	mov	r0, r4
 8005898:	f009 fe12 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setXY(670, 71);
 800589c:	9808      	ldr	r0, [sp, #32]
 800589e:	2247      	movs	r2, #71	; 0x47
 80058a0:	f240 219e 	movw	r1, #670	; 0x29e
 80058a4:	f7fd f8c8 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 80058a8:	f8db 30b8 	ldr.w	r3, [fp, #184]	; 0xb8
        color = newColor;
 80058ac:	4acc      	ldr	r2, [pc, #816]	; (8005be0 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 80058ae:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80058b2:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 80058b4:	f8cb 20e8 	str.w	r2, [fp, #232]	; 0xe8
        boundingArea = calculateBoundingArea();
 80058b8:	4630      	mov	r0, r6
        linespace = space;
 80058ba:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 80058be:	4798      	blx	r3
 80058c0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80058c4:	f10b 03f4 	add.w	r3, fp, #244	; 0xf4
 80058c8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80058cc:	49c5      	ldr	r1, [pc, #788]	; (8005be4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 80058ce:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KTQV).getText());
 80058d0:	f50b 59b8 	add.w	r9, fp, #5888	; 0x1700
 80058d4:	f109 0910 	add.w	r9, r9, #16
 80058d8:	2b00      	cmp	r3, #0
 80058da:	d0a1      	beq.n	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80058dc:	49c2      	ldr	r1, [pc, #776]	; (8005be8 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 80058de:	880b      	ldrh	r3, [r1, #0]
 80058e0:	2b7d      	cmp	r3, #125	; 0x7d
 80058e2:	d9a7      	bls.n	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80058e4:	48bb      	ldr	r0, [pc, #748]	; (8005bd4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 80058e6:	217d      	movs	r1, #125	; 0x7d
 80058e8:	6800      	ldr	r0, [r0, #0]
 80058ea:	f002 fae9 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80058ee:	4aba      	ldr	r2, [pc, #744]	; (8005bd8 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 80058f0:	4603      	mov	r3, r0
 80058f2:	2104      	movs	r1, #4
 80058f4:	4648      	mov	r0, r9
 80058f6:	f012 faef 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.resizeToCurrentText();
 80058fa:	9808      	ldr	r0, [sp, #32]
 80058fc:	f8cb 9100 	str.w	r9, [fp, #256]	; 0x100
 8005900:	f00c fa2e 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005904:	4bb5      	ldr	r3, [pc, #724]	; (8005bdc <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UXLR));
 8005906:	9808      	ldr	r0, [sp, #32]
 8005908:	9341      	str	r3, [sp, #260]	; 0x104
 800590a:	4639      	mov	r1, r7
 800590c:	237e      	movs	r3, #126	; 0x7e
 800590e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005912:	f00c fa45 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005916:	9908      	ldr	r1, [sp, #32]
 8005918:	4620      	mov	r0, r4
 800591a:	f009 fdd1 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 800591e:	f04f 3aff 	mov.w	sl, #4294967295
    labelSpeed.setXY(767, 78);
 8005922:	224e      	movs	r2, #78	; 0x4e
 8005924:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005926:	f240 21ff 	movw	r1, #767	; 0x2ff
 800592a:	f7fd f885 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800592e:	9909      	ldr	r1, [sp, #36]	; 0x24
        color = newColor;
 8005930:	f8cb a134 	str.w	sl, [fp, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005934:	4630      	mov	r0, r6
        linespace = space;
 8005936:	f8ab 5138 	strh.w	r5, [fp, #312]	; 0x138
        boundingArea = calculateBoundingArea();
 800593a:	f00b ff97 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800593e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005942:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005946:	f50b 79a0 	add.w	r9, fp, #320	; 0x140
 800594a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 800594e:	f88b c13c 	strb.w	ip, [fp, #316]	; 0x13c
        boundingArea = calculateBoundingArea();
 8005952:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005954:	4630      	mov	r0, r6
 8005956:	f00b ff89 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800595a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800595e:	4b9f      	ldr	r3, [pc, #636]	; (8005bdc <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005960:	9341      	str	r3, [sp, #260]	; 0x104
 8005962:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8005966:	237c      	movs	r3, #124	; 0x7c
    labelSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FQ22));
 8005968:	9809      	ldr	r0, [sp, #36]	; 0x24
 800596a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 800596e:	4639      	mov	r1, r7
 8005970:	f00c fa16 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005974:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005976:	4620      	mov	r0, r4
 8005978:	f009 fda2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(752, 75, 15, 42);
 800597c:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005980:	f8cd e000 	str.w	lr, [sp]
 8005984:	230f      	movs	r3, #15
 8005986:	4640      	mov	r0, r8
 8005988:	224b      	movs	r2, #75	; 0x4b
 800598a:	f44f 713c 	mov.w	r1, #752	; 0x2f0
 800598e:	f7fd f860 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8005992:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8005994:	f8cb 2174 	str.w	r2, [fp, #372]	; 0x174
    line1.setStart(0, 0);
 8005998:	4640      	mov	r0, r8
 800599a:	462a      	mov	r2, r5
 800599c:	4629      	mov	r1, r5
 800599e:	f8cb a1c8 	str.w	sl, [fp, #456]	; 0x1c8
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80059a2:	f8ab a1cc 	strh.w	sl, [fp, #460]	; 0x1cc
 80059a6:	f7ff fc8f 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(0, 45);
 80059aa:	222d      	movs	r2, #45	; 0x2d
 80059ac:	4640      	mov	r0, r8
 80059ae:	4629      	mov	r1, r5
 80059b0:	f7ff fc8e 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(10);
 80059b4:	4640      	mov	r0, r8
 80059b6:	210a      	movs	r1, #10
 80059b8:	f7ff fc8e 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80059bc:	4640      	mov	r0, r8
 80059be:	4629      	mov	r1, r5
 80059c0:	f00b fafc 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80059c4:	4641      	mov	r1, r8
 80059c6:	4620      	mov	r0, r4
 80059c8:	f009 fd7a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(12, 71, 128, 49);
 80059cc:	f04f 0e31 	mov.w	lr, #49	; 0x31
 80059d0:	9819      	ldr	r0, [sp, #100]	; 0x64
 80059d2:	f8cd e000 	str.w	lr, [sp]
 80059d6:	2380      	movs	r3, #128	; 0x80
 80059d8:	2247      	movs	r2, #71	; 0x47
 80059da:	210c      	movs	r1, #12
 80059dc:	f7fd f839 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 80059e0:	f8db 31d0 	ldr.w	r3, [fp, #464]	; 0x1d0
        color = newColor;
 80059e4:	4a7e      	ldr	r2, [pc, #504]	; (8005be0 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 80059e6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80059ea:	9919      	ldr	r1, [sp, #100]	; 0x64
        color = newColor;
 80059ec:	f8cb 2200 	str.w	r2, [fp, #512]	; 0x200
        boundingArea = calculateBoundingArea();
 80059f0:	4630      	mov	r0, r6
        linespace = space;
 80059f2:	f8ab 5204 	strh.w	r5, [fp, #516]	; 0x204
        boundingArea = calculateBoundingArea();
 80059f6:	4798      	blx	r3
 80059f8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80059fc:	f50b 7303 	add.w	r3, fp, #524	; 0x20c
 8005a00:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005a04:	4977      	ldr	r1, [pc, #476]	; (8005be4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 8005a06:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y39W).getText());
 8005a08:	f50b 58b8 	add.w	r8, fp, #5888	; 0x1700
 8005a0c:	f108 0818 	add.w	r8, r8, #24
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	f43f af05 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005a16:	4974      	ldr	r1, [pc, #464]	; (8005be8 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 8005a18:	880b      	ldrh	r3, [r1, #0]
 8005a1a:	2b7a      	cmp	r3, #122	; 0x7a
 8005a1c:	f67f af0a 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005a20:	486c      	ldr	r0, [pc, #432]	; (8005bd4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005a22:	217a      	movs	r1, #122	; 0x7a
 8005a24:	6800      	ldr	r0, [r0, #0]
 8005a26:	f002 fa4b 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8005a2a:	4a6b      	ldr	r2, [pc, #428]	; (8005bd8 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005a2c:	4603      	mov	r3, r0
 8005a2e:	2107      	movs	r1, #7
 8005a30:	4640      	mov	r0, r8
 8005a32:	f012 fa51 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005a36:	4b69      	ldr	r3, [pc, #420]	; (8005bdc <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VS7F));
 8005a38:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005a3a:	f8cb 8218 	str.w	r8, [fp, #536]	; 0x218
 8005a3e:	9341      	str	r3, [sp, #260]	; 0x104
 8005a40:	4639      	mov	r1, r7
 8005a42:	237b      	movs	r3, #123	; 0x7b
 8005a44:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005a48:	f00c f9aa 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005a4c:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005a4e:	4620      	mov	r0, r4
 8005a50:	f009 fd36 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRpm.setXY(158, 79);
 8005a54:	224f      	movs	r2, #79	; 0x4f
 8005a56:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005a58:	219e      	movs	r1, #158	; 0x9e
 8005a5a:	f7fc ffed 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8005a5e:	990a      	ldr	r1, [sp, #40]	; 0x28
        color = newColor;
 8005a60:	f8cb a24c 	str.w	sl, [fp, #588]	; 0x24c
        boundingArea = calculateBoundingArea();
 8005a64:	4630      	mov	r0, r6
        linespace = space;
 8005a66:	f8ab 5250 	strh.w	r5, [fp, #592]	; 0x250
        boundingArea = calculateBoundingArea();
 8005a6a:	f00b feff 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a6e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005a72:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005a76:	f50b 7816 	add.w	r8, fp, #600	; 0x258
 8005a7a:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005a7e:	f88b c254 	strb.w	ip, [fp, #596]	; 0x254
        boundingArea = calculateBoundingArea();
 8005a82:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005a84:	4630      	mov	r0, r6
 8005a86:	f00b fef1 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005a8a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005a8e:	4b53      	ldr	r3, [pc, #332]	; (8005bdc <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005a90:	9341      	str	r3, [sp, #260]	; 0x104
 8005a92:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005a96:	2379      	movs	r3, #121	; 0x79
    labelRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SAL));
 8005a98:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005a9a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005a9e:	4639      	mov	r1, r7
 8005aa0:	f00c f97e 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005aa4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005aa6:	4620      	mov	r0, r4
 8005aa8:	f009 fd0a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxThrottle.setPosition(305, 169, 190, 24);
 8005aac:	f04f 0e18 	mov.w	lr, #24
 8005ab0:	f8cd e000 	str.w	lr, [sp]
 8005ab4:	23be      	movs	r3, #190	; 0xbe
 8005ab6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8005ab8:	22a9      	movs	r2, #169	; 0xa9
 8005aba:	f240 1131 	movw	r1, #305	; 0x131
 8005abe:	f7fc ffc8 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ac2:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 8005ac6:	4a49      	ldr	r2, [pc, #292]	; (8005bec <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005ac8:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8005aca:	f8cb 2290 	str.w	r2, [fp, #656]	; 0x290
        borderSize = size;
 8005ace:	f8ab 8294 	strh.w	r8, [fp, #660]	; 0x294
 8005ad2:	4620      	mov	r0, r4
 8005ad4:	f8cb a28c 	str.w	sl, [fp, #652]	; 0x28c
 8005ad8:	f009 fcf2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake.setPosition(305, 216, 190, 24);
 8005adc:	f04f 0e18 	mov.w	lr, #24
 8005ae0:	f8cd e000 	str.w	lr, [sp]
 8005ae4:	23be      	movs	r3, #190	; 0xbe
 8005ae6:	982b      	ldr	r0, [sp, #172]	; 0xac
 8005ae8:	22d8      	movs	r2, #216	; 0xd8
 8005aea:	f240 1131 	movw	r1, #305	; 0x131
 8005aee:	f7fc ffb0 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005af2:	4a3e      	ldr	r2, [pc, #248]	; (8005bec <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005af4:	992b      	ldr	r1, [sp, #172]	; 0xac
 8005af6:	f8cb 22c4 	str.w	r2, [fp, #708]	; 0x2c4
        borderSize = size;
 8005afa:	f8ab 82c8 	strh.w	r8, [fp, #712]	; 0x2c8
 8005afe:	4620      	mov	r0, r4
 8005b00:	f8cb a2c0 	str.w	sl, [fp, #704]	; 0x2c0
 8005b04:	f009 fcdc 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressThrottle.setXY(308, 171);
 8005b08:	ee18 0a10 	vmov	r0, s16
 8005b0c:	22ab      	movs	r2, #171	; 0xab
 8005b0e:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005b12:	f7fc ff91 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressThrottle.setProgressIndicatorPosition(2, 2, 180, 16);
 8005b16:	f04f 0910 	mov.w	r9, #16
 8005b1a:	2202      	movs	r2, #2
 8005b1c:	4611      	mov	r1, r2
 8005b1e:	ee18 0a10 	vmov	r0, s16
 8005b22:	23b4      	movs	r3, #180	; 0xb4
 8005b24:	f8cd 9000 	str.w	r9, [sp]
 8005b28:	f009 fa11 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressThrottle.setRange(0, 100);
 8005b2c:	462b      	mov	r3, r5
 8005b2e:	2264      	movs	r2, #100	; 0x64
 8005b30:	ee18 0a10 	vmov	r0, s16
 8005b34:	4629      	mov	r1, r5
 8005b36:	9500      	str	r5, [sp, #0]
 8005b38:	f009 fb26 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressThrottle.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005b3c:	ee18 0a10 	vmov	r0, s16
 8005b40:	4629      	mov	r1, r5
 8005b42:	f009 fb00 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 8005b46:	f04f 080a 	mov.w	r8, #10
    progressThrottle.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005b4a:	ee18 0a10 	vmov	r0, s16
 8005b4e:	4639      	mov	r1, r7
 8005b50:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005b54:	f009 fc46 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressThrottle.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 8005b58:	4925      	ldr	r1, [pc, #148]	; (8005bf0 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f8>)
 8005b5a:	ee18 0a10 	vmov	r0, s16
 8005b5e:	f009 f9e0 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressThrottle.setValue(0);
 8005b62:	ee18 0a10 	vmov	r0, s16
 8005b66:	4629      	mov	r1, r5
 8005b68:	f009 fa09 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005b6c:	ee18 1a10 	vmov	r1, s16
 8005b70:	4620      	mov	r0, r4
 8005b72:	f009 fca5 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeFront.setXY(308, 218);
 8005b76:	ee18 0a90 	vmov	r0, s17
 8005b7a:	22da      	movs	r2, #218	; 0xda
 8005b7c:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005b80:	f7fc ff5a 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeFront.setProgressIndicatorPosition(2, 2, 180, 16);
 8005b84:	2202      	movs	r2, #2
 8005b86:	4611      	mov	r1, r2
 8005b88:	ee18 0a90 	vmov	r0, s17
 8005b8c:	23b4      	movs	r3, #180	; 0xb4
 8005b8e:	f8cd 9000 	str.w	r9, [sp]
 8005b92:	f009 f9dc 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeFront.setRange(0, 100);
 8005b96:	462b      	mov	r3, r5
 8005b98:	2264      	movs	r2, #100	; 0x64
 8005b9a:	ee18 0a90 	vmov	r0, s17
 8005b9e:	4629      	mov	r1, r5
 8005ba0:	9500      	str	r5, [sp, #0]
 8005ba2:	f009 faf1 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeFront.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005ba6:	ee18 0a90 	vmov	r0, s17
 8005baa:	4629      	mov	r1, r5
 8005bac:	f009 facb 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeFront.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005bb0:	ee18 0a90 	vmov	r0, s17
 8005bb4:	4639      	mov	r1, r7
 8005bb6:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005bba:	f009 fc13 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeFront.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005bbe:	490d      	ldr	r1, [pc, #52]	; (8005bf4 <_ZN23MainInfotaimentViewBaseC1Ev+0x8fc>)
 8005bc0:	ee18 0a90 	vmov	r0, s17
 8005bc4:	f009 f9ad 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeFront.setValue(0);
 8005bc8:	ee18 0a90 	vmov	r0, s17
 8005bcc:	4629      	mov	r1, r5
 8005bce:	f009 f9d6 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005bd2:	e011      	b.n	8005bf8 <_ZN23MainInfotaimentViewBaseC1Ev+0x900>
 8005bd4:	2000ef80 	.word	0x2000ef80
 8005bd8:	08028192 	.word	0x08028192
 8005bdc:	08028208 	.word	0x08028208
 8005be0:	ffffea00 	.word	0xffffea00
 8005be4:	2000ef74 	.word	0x2000ef74
 8005be8:	2000ef78 	.word	0x2000ef78
 8005bec:	fff4ff1f 	.word	0xfff4ff1f
 8005bf0:	ff09ff00 	.word	0xff09ff00
 8005bf4:	fff50f0f 	.word	0xfff50f0f
 8005bf8:	ee18 1a90 	vmov	r1, s17
 8005bfc:	4620      	mov	r0, r4
 8005bfe:	f009 fc5f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake_1.setPosition(305, 238, 190, 24);
 8005c02:	f04f 0e18 	mov.w	lr, #24
 8005c06:	23be      	movs	r3, #190	; 0xbe
 8005c08:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8005c0a:	f8cd e000 	str.w	lr, [sp]
 8005c0e:	22ee      	movs	r2, #238	; 0xee
 8005c10:	f240 1131 	movw	r1, #305	; 0x131
 8005c14:	f7fc ff1d 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005c18:	f04f 0e04 	mov.w	lr, #4
        borderColor = colorBorder;
 8005c1c:	4ae7      	ldr	r2, [pc, #924]	; (8005fbc <_ZN23MainInfotaimentViewBaseC1Ev+0xcc4>)
        borderSize = size;
 8005c1e:	f8ab e4c4 	strh.w	lr, [fp, #1220]	; 0x4c4
 8005c22:	992c      	ldr	r1, [sp, #176]	; 0xb0
        borderColor = colorBorder;
 8005c24:	f8cb 24c0 	str.w	r2, [fp, #1216]	; 0x4c0
 8005c28:	4620      	mov	r0, r4
 8005c2a:	f8cb a4bc 	str.w	sl, [fp, #1212]	; 0x4bc
 8005c2e:	f009 fc47 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeRear.setXY(308, 240);
 8005c32:	ee19 0a10 	vmov	r0, s18
 8005c36:	22f0      	movs	r2, #240	; 0xf0
 8005c38:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005c3c:	f7fc fefc 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeRear.setProgressIndicatorPosition(2, 2, 180, 16);
 8005c40:	2202      	movs	r2, #2
 8005c42:	4611      	mov	r1, r2
 8005c44:	ee19 0a10 	vmov	r0, s18
 8005c48:	23b4      	movs	r3, #180	; 0xb4
 8005c4a:	f8cd 9000 	str.w	r9, [sp]
 8005c4e:	f009 f97e 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeRear.setRange(0, 100);
 8005c52:	462b      	mov	r3, r5
 8005c54:	2264      	movs	r2, #100	; 0x64
 8005c56:	ee19 0a10 	vmov	r0, s18
 8005c5a:	4629      	mov	r1, r5
 8005c5c:	9500      	str	r5, [sp, #0]
 8005c5e:	f009 fa93 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeRear.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005c62:	ee19 0a10 	vmov	r0, s18
 8005c66:	4629      	mov	r1, r5
 8005c68:	f009 fa6d 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeRear.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005c6c:	ee19 0a10 	vmov	r0, s18
 8005c70:	4639      	mov	r1, r7
 8005c72:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005c76:	f009 fbb5 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeRear.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005c7a:	49d1      	ldr	r1, [pc, #836]	; (8005fc0 <_ZN23MainInfotaimentViewBaseC1Ev+0xcc8>)
 8005c7c:	ee19 0a10 	vmov	r0, s18
 8005c80:	f009 f94f 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeRear.setValue(0);
 8005c84:	ee19 0a10 	vmov	r0, s18
 8005c88:	4629      	mov	r1, r5
 8005c8a:	f009 f978 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005c8e:	ee19 1a10 	vmov	r1, s18
 8005c92:	4620      	mov	r0, r4
 8005c94:	f009 fc14 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(5, 253, 135, 64);
 8005c98:	2340      	movs	r3, #64	; 0x40
 8005c9a:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8005c9c:	9300      	str	r3, [sp, #0]
 8005c9e:	22fd      	movs	r2, #253	; 0xfd
 8005ca0:	2387      	movs	r3, #135	; 0x87
 8005ca2:	2105      	movs	r1, #5
 8005ca4:	f7fc fed5 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ca8:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        borderSize = size;
 8005cac:	f04f 0e04 	mov.w	lr, #4
 8005cb0:	f8cb 25d4 	str.w	r2, [fp, #1492]	; 0x5d4
        borderColor = colorBorder;
 8005cb4:	4ac3      	ldr	r2, [pc, #780]	; (8005fc4 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8005cb6:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8005cb8:	f8cb 25d8 	str.w	r2, [fp, #1496]	; 0x5d8
        borderSize = size;
 8005cbc:	f8ab e5dc 	strh.w	lr, [fp, #1500]	; 0x5dc
 8005cc0:	4620      	mov	r0, r4
 8005cc2:	f009 fbfd 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(143, 75, 15, 42);
 8005cc6:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005cca:	230f      	movs	r3, #15
 8005ccc:	ee1d 0a90 	vmov	r0, s27
 8005cd0:	f8cd e000 	str.w	lr, [sp]
 8005cd4:	224b      	movs	r2, #75	; 0x4b
 8005cd6:	218f      	movs	r1, #143	; 0x8f
 8005cd8:	f7fc febb 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005cdc:	f04f 3eff 	mov.w	lr, #4294967295
 8005ce0:	9837      	ldr	r0, [sp, #220]	; 0xdc
 8005ce2:	f8ab e660 	strh.w	lr, [fp, #1632]	; 0x660
 8005ce6:	f8cb 0608 	str.w	r0, [fp, #1544]	; 0x608
    line1_1.setStart(0, 0);
 8005cea:	462a      	mov	r2, r5
 8005cec:	ee1d 0a90 	vmov	r0, s27
 8005cf0:	4629      	mov	r1, r5
 8005cf2:	f8cb a65c 	str.w	sl, [fp, #1628]	; 0x65c
 8005cf6:	f7ff fae7 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(0, 45);
 8005cfa:	222d      	movs	r2, #45	; 0x2d
 8005cfc:	ee1d 0a90 	vmov	r0, s27
 8005d00:	4629      	mov	r1, r5
 8005d02:	f7ff fae5 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(10);
 8005d06:	4641      	mov	r1, r8
 8005d08:	ee1d 0a90 	vmov	r0, s27
 8005d0c:	f7ff fae4 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005d10:	ee1d 0a90 	vmov	r0, s27
 8005d14:	4629      	mov	r1, r5
 8005d16:	f00b f951 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005d1a:	ee1d 1a90 	vmov	r1, s27
 8005d1e:	4620      	mov	r0, r4
 8005d20:	f009 fbce 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_1.setPosition(143, 154, 15, 42);
 8005d24:	202a      	movs	r0, #42	; 0x2a
 8005d26:	230f      	movs	r3, #15
 8005d28:	9000      	str	r0, [sp, #0]
 8005d2a:	229a      	movs	r2, #154	; 0x9a
 8005d2c:	ee1e 0a10 	vmov	r0, s28
 8005d30:	218f      	movs	r1, #143	; 0x8f
 8005d32:	f7fc fe8e 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d36:	f04f 3eff 	mov.w	lr, #4294967295
 8005d3a:	9838      	ldr	r0, [sp, #224]	; 0xe0
 8005d3c:	f8ab e6e4 	strh.w	lr, [fp, #1764]	; 0x6e4
 8005d40:	f8cb 068c 	str.w	r0, [fp, #1676]	; 0x68c
    line1_1_1.setStart(0, 0);
 8005d44:	462a      	mov	r2, r5
 8005d46:	ee1e 0a10 	vmov	r0, s28
 8005d4a:	4629      	mov	r1, r5
 8005d4c:	f8cb a6e0 	str.w	sl, [fp, #1760]	; 0x6e0
 8005d50:	f7ff faba 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1.setEnd(0, 45);
 8005d54:	222d      	movs	r2, #45	; 0x2d
 8005d56:	ee1e 0a10 	vmov	r0, s28
 8005d5a:	4629      	mov	r1, r5
 8005d5c:	f7ff fab8 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1.setLineWidth(10);
 8005d60:	4641      	mov	r1, r8
 8005d62:	ee1e 0a10 	vmov	r0, s28
 8005d66:	f7ff fab7 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005d6a:	ee1e 0a10 	vmov	r0, s28
 8005d6e:	4629      	mov	r1, r5
 8005d70:	f00b f924 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005d74:	ee1e 1a10 	vmov	r1, s28
 8005d78:	4620      	mov	r0, r4
 8005d7a:	f009 fba1 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLapCounter.setXY(158, 161);
 8005d7e:	22a1      	movs	r2, #161	; 0xa1
 8005d80:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005d82:	219e      	movs	r1, #158	; 0x9e
 8005d84:	f7fc fe58 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005d88:	990b      	ldr	r1, [sp, #44]	; 0x2c
        color = newColor;
 8005d8a:	f8cb a718 	str.w	sl, [fp, #1816]	; 0x718
        boundingArea = calculateBoundingArea();
 8005d8e:	4630      	mov	r0, r6
        linespace = space;
 8005d90:	f8ab 571c 	strh.w	r5, [fp, #1820]	; 0x71c
        boundingArea = calculateBoundingArea();
 8005d94:	f00b fd6a 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d98:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005d9c:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005da0:	f20b 7824 	addw	r8, fp, #1828	; 0x724
 8005da4:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005da8:	f88b c720 	strb.w	ip, [fp, #1824]	; 0x720
        boundingArea = calculateBoundingArea();
 8005dac:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005dae:	4630      	mov	r0, r6
 8005db0:	f00b fd5c 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005db4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005db8:	4b83      	ldr	r3, [pc, #524]	; (8005fc8 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
 8005dba:	9341      	str	r3, [sp, #260]	; 0x104
 8005dbc:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005dc0:	2358      	movs	r3, #88	; 0x58
    labelLapCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPF6));
 8005dc2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8005dc4:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005dc8:	4639      	mov	r1, r7
 8005dca:	f00b ffe9 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005dce:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005dd0:	4620      	mov	r0, r4
 8005dd2:	f009 fb75 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(5, 150, 135, 49);
 8005dd6:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8005dda:	2387      	movs	r3, #135	; 0x87
 8005ddc:	2105      	movs	r1, #5
 8005dde:	9822      	ldr	r0, [sp, #136]	; 0x88
 8005de0:	f8cd e000 	str.w	lr, [sp]
 8005de4:	2296      	movs	r2, #150	; 0x96
 8005de6:	f7fc fe34 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8005dea:	4a76      	ldr	r2, [pc, #472]	; (8005fc4 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8005dec:	f8cb 2760 	str.w	r2, [fp, #1888]	; 0x760
        linespace = space;
 8005df0:	f8ab 5764 	strh.w	r5, [fp, #1892]	; 0x764
        return TextArea::BoundingArea();
 8005df4:	4638      	mov	r0, r7
 8005df6:	f7fc ffbb 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8005dfa:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8005dfe:	f20b 736c 	addw	r3, fp, #1900	; 0x76c
 8005e02:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005e06:	4971      	ldr	r1, [pc, #452]	; (8005fcc <_ZN23MainInfotaimentViewBaseC1Ev+0xcd4>)
 8005e08:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AR7I).getText());
 8005e0a:	f50b 58b9 	add.w	r8, fp, #5920	; 0x1720
 8005e0e:	f108 0806 	add.w	r8, r8, #6
 8005e12:	2b00      	cmp	r3, #0
 8005e14:	f43f ad04 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005e18:	496d      	ldr	r1, [pc, #436]	; (8005fd0 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd8>)
 8005e1a:	880b      	ldrh	r3, [r1, #0]
 8005e1c:	2b59      	cmp	r3, #89	; 0x59
 8005e1e:	f67f ad09 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005e22:	486c      	ldr	r0, [pc, #432]	; (8005fd4 <_ZN23MainInfotaimentViewBaseC1Ev+0xcdc>)
 8005e24:	2159      	movs	r1, #89	; 0x59
 8005e26:	6800      	ldr	r0, [r0, #0]
 8005e28:	f002 f84a 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8005e2c:	4a6a      	ldr	r2, [pc, #424]	; (8005fd8 <_ZN23MainInfotaimentViewBaseC1Ev+0xce0>)
 8005e2e:	4603      	mov	r3, r0
 8005e30:	2103      	movs	r1, #3
 8005e32:	4640      	mov	r0, r8
 8005e34:	f012 f850 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005e38:	4b63      	ldr	r3, [pc, #396]	; (8005fc8 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9DFI));
 8005e3a:	9822      	ldr	r0, [sp, #136]	; 0x88
        wc1 = value;
 8005e3c:	f8cb 8778 	str.w	r8, [fp, #1912]	; 0x778
 8005e40:	4639      	mov	r1, r7
 8005e42:	f04f 085a 	mov.w	r8, #90	; 0x5a
 8005e46:	9341      	str	r3, [sp, #260]	; 0x104
 8005e48:	f8ad 8108 	strh.w	r8, [sp, #264]	; 0x108
 8005e4c:	f00b ffa8 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e50:	9922      	ldr	r1, [sp, #136]	; 0x88
 8005e52:	4620      	mov	r0, r4
 8005e54:	f009 fb34 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setXY(36, 267);
 8005e58:	f240 120b 	movw	r2, #267	; 0x10b
 8005e5c:	981a      	ldr	r0, [sp, #104]	; 0x68
 8005e5e:	2124      	movs	r1, #36	; 0x24
 8005e60:	f7fc fdea 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8005e64:	4630      	mov	r0, r6
 8005e66:	991a      	ldr	r1, [sp, #104]	; 0x68
        linespace = space;
 8005e68:	f8ab 57b0 	strh.w	r5, [fp, #1968]	; 0x7b0
        color = newColor;
 8005e6c:	f8cb a7ac 	str.w	sl, [fp, #1964]	; 0x7ac
        boundingArea = calculateBoundingArea();
 8005e70:	f00b fcfc 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005e74:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005e78:	f50b 63f7 	add.w	r3, fp, #1976	; 0x7b8
 8005e7c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005e80:	260c      	movs	r6, #12
 8005e82:	4b51      	ldr	r3, [pc, #324]	; (8005fc8 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    labelRES.setTypedText(touchgfx::TypedText(T_RES));
 8005e84:	981a      	ldr	r0, [sp, #104]	; 0x68
 8005e86:	9341      	str	r3, [sp, #260]	; 0x104
 8005e88:	4639      	mov	r1, r7
 8005e8a:	f8ad 6108 	strh.w	r6, [sp, #264]	; 0x108
 8005e8e:	f00b ff87 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005e92:	991a      	ldr	r1, [sp, #104]	; 0x68
 8005e94:	4620      	mov	r0, r4
 8005e96:	f009 fb13 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmLow.setXY(12, 20);
 8005e9a:	4631      	mov	r1, r6
 8005e9c:	ee19 0a90 	vmov	r0, s19
 8005ea0:	2214      	movs	r2, #20
 8005ea2:	f7fc fdc9 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmLow.setProgressIndicatorPosition(2, 2, 246, 16);
 8005ea6:	2202      	movs	r2, #2
 8005ea8:	4611      	mov	r1, r2
 8005eaa:	ee19 0a90 	vmov	r0, s19
 8005eae:	23f6      	movs	r3, #246	; 0xf6
 8005eb0:	f8cd 9000 	str.w	r9, [sp]
 8005eb4:	f009 f84b 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmLow.setRange(0, 100);
 8005eb8:	462b      	mov	r3, r5
 8005eba:	2264      	movs	r2, #100	; 0x64
 8005ebc:	4629      	mov	r1, r5
 8005ebe:	ee19 0a90 	vmov	r0, s19
 8005ec2:	9500      	str	r5, [sp, #0]
 8005ec4:	f009 f960 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmLow.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005ec8:	4629      	mov	r1, r5
 8005eca:	ee19 0a90 	vmov	r0, s19
 8005ece:	f009 f93a 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 8005ed2:	2617      	movs	r6, #23
    progressRpmLow.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8005ed4:	ee19 0a90 	vmov	r0, s19
 8005ed8:	4639      	mov	r1, r7
 8005eda:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 8005ede:	f009 fa81 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmLow.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 8005ee2:	493e      	ldr	r1, [pc, #248]	; (8005fdc <_ZN23MainInfotaimentViewBaseC1Ev+0xce4>)
 8005ee4:	ee19 0a90 	vmov	r0, s19
 8005ee8:	f009 f81b 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmLow.setValue(0);
 8005eec:	4629      	mov	r1, r5
 8005eee:	ee19 0a90 	vmov	r0, s19
 8005ef2:	f009 f844 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005ef6:	ee19 1a90 	vmov	r1, s19
 8005efa:	4620      	mov	r0, r4
 8005efc:	f009 fae0 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmMed.setXY(275, 20);
 8005f00:	ee1a 0a10 	vmov	r0, s20
 8005f04:	2214      	movs	r2, #20
 8005f06:	f240 1113 	movw	r1, #275	; 0x113
 8005f0a:	f7fc fd95 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmMed.setProgressIndicatorPosition(2, 2, 246, 16);
 8005f0e:	2202      	movs	r2, #2
 8005f10:	4611      	mov	r1, r2
 8005f12:	ee1a 0a10 	vmov	r0, s20
 8005f16:	23f6      	movs	r3, #246	; 0xf6
 8005f18:	f8cd 9000 	str.w	r9, [sp]
 8005f1c:	f009 f817 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmMed.setRange(0, 100);
 8005f20:	462b      	mov	r3, r5
 8005f22:	2264      	movs	r2, #100	; 0x64
 8005f24:	4629      	mov	r1, r5
 8005f26:	ee1a 0a10 	vmov	r0, s20
 8005f2a:	9500      	str	r5, [sp, #0]
 8005f2c:	f009 f92c 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmMed.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005f30:	4629      	mov	r1, r5
 8005f32:	ee1a 0a10 	vmov	r0, s20
 8005f36:	f009 f906 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmMed.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8005f3a:	ee1a 0a10 	vmov	r0, s20
 8005f3e:	4639      	mov	r1, r7
 8005f40:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 8005f44:	f009 fa4e 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmMed.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
 8005f48:	4925      	ldr	r1, [pc, #148]	; (8005fe0 <_ZN23MainInfotaimentViewBaseC1Ev+0xce8>)
 8005f4a:	ee1a 0a10 	vmov	r0, s20
 8005f4e:	f008 ffe8 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmMed.setValue(0);
 8005f52:	4629      	mov	r1, r5
 8005f54:	ee1a 0a10 	vmov	r0, s20
 8005f58:	f009 f811 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005f5c:	ee1a 1a10 	vmov	r1, s20
 8005f60:	4620      	mov	r0, r4
 8005f62:	f009 faad 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmHigh.setXY(536, 20);
 8005f66:	ee1a 0a90 	vmov	r0, s21
 8005f6a:	2214      	movs	r2, #20
 8005f6c:	f44f 7106 	mov.w	r1, #536	; 0x218
 8005f70:	f7fc fd62 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmHigh.setProgressIndicatorPosition(2, 2, 246, 16);
 8005f74:	2202      	movs	r2, #2
 8005f76:	4611      	mov	r1, r2
 8005f78:	ee1a 0a90 	vmov	r0, s21
 8005f7c:	23f6      	movs	r3, #246	; 0xf6
 8005f7e:	f8cd 9000 	str.w	r9, [sp]
 8005f82:	f008 ffe4 	bl	800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmHigh.setRange(0, 100);
 8005f86:	462b      	mov	r3, r5
 8005f88:	2264      	movs	r2, #100	; 0x64
 8005f8a:	4629      	mov	r1, r5
 8005f8c:	ee1a 0a90 	vmov	r0, s21
 8005f90:	9500      	str	r5, [sp, #0]
 8005f92:	f009 f8f9 	bl	800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmHigh.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005f96:	4629      	mov	r1, r5
 8005f98:	ee1a 0a90 	vmov	r0, s21
 8005f9c:	f009 f8d3 	bl	800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmHigh.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8005fa0:	ee1a 0a90 	vmov	r0, s21
 8005fa4:	4639      	mov	r1, r7
 8005fa6:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 8005faa:	f009 fa1b 	bl	800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmHigh.setColor(touchgfx::Color::getColorFromRGB(149, 0, 255));
 8005fae:	490d      	ldr	r1, [pc, #52]	; (8005fe4 <_ZN23MainInfotaimentViewBaseC1Ev+0xcec>)
 8005fb0:	ee1a 0a90 	vmov	r0, s21
 8005fb4:	f008 ffb5 	bl	800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmHigh.setValue(0);
 8005fb8:	4629      	mov	r1, r5
 8005fba:	e015      	b.n	8005fe8 <_ZN23MainInfotaimentViewBaseC1Ev+0xcf0>
 8005fbc:	fff4ff1f 	.word	0xfff4ff1f
 8005fc0:	fff50f0f 	.word	0xfff50f0f
 8005fc4:	ffffea00 	.word	0xffffea00
 8005fc8:	08028208 	.word	0x08028208
 8005fcc:	2000ef74 	.word	0x2000ef74
 8005fd0:	2000ef78 	.word	0x2000ef78
 8005fd4:	2000ef80 	.word	0x2000ef80
 8005fd8:	08028192 	.word	0x08028192
 8005fdc:	ff09ff00 	.word	0xff09ff00
 8005fe0:	ffff0000 	.word	0xffff0000
 8005fe4:	ff9500ff 	.word	0xff9500ff
 8005fe8:	ee1a 0a90 	vmov	r0, s21
 8005fec:	f008 ffc7 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005ff0:	ee1a 1a90 	vmov	r1, s21
 8005ff4:	4620      	mov	r0, r4
 8005ff6:	f009 fa63 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTWater.setPosition(150, 373, 90, 38);
 8005ffa:	2326      	movs	r3, #38	; 0x26
 8005ffc:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8005ffe:	9300      	str	r3, [sp, #0]
 8006000:	f240 1275 	movw	r2, #373	; 0x175
 8006004:	4643      	mov	r3, r8
 8006006:	2196      	movs	r1, #150	; 0x96
 8006008:	f7fc fd23 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800600c:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006010:	4ad5      	ldr	r2, [pc, #852]	; (8006368 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 8006012:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8006014:	f8cb 6a98 	str.w	r6, [fp, #2712]	; 0xa98
        borderSize = size;
 8006018:	2305      	movs	r3, #5
        borderColor = colorBorder;
 800601a:	f8cb 2a9c 	str.w	r2, [fp, #2716]	; 0xa9c
        borderSize = size;
 800601e:	f8ab 3aa0 	strh.w	r3, [fp, #2720]	; 0xaa0
 8006022:	4620      	mov	r0, r4
 8006024:	f009 fa4c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTWater.setPosition(157, 383, 75, 19);
 8006028:	2313      	movs	r3, #19
 800602a:	f240 127f 	movw	r2, #383	; 0x17f
 800602e:	219d      	movs	r1, #157	; 0x9d
 8006030:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8006032:	9300      	str	r3, [sp, #0]
 8006034:	234b      	movs	r3, #75	; 0x4b
 8006036:	f7fc fd0c 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        linespace = space;
 800603a:	f8ab 5ad8 	strh.w	r5, [fp, #2776]	; 0xad8
        color = newColor;
 800603e:	f8cb aad4 	str.w	sl, [fp, #2772]	; 0xad4
        return TextArea::BoundingArea();
 8006042:	4638      	mov	r0, r7
 8006044:	f7fc fe94 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006048:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800604c:	4ec7      	ldr	r6, [pc, #796]	; (800636c <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 800604e:	f50b 632e 	add.w	r3, fp, #2784	; 0xae0
 8006052:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006056:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K6X0).getText());
 8006058:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 800605c:	350c      	adds	r5, #12
 800605e:	2b00      	cmp	r3, #0
 8006060:	f43f abde 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006064:	49c2      	ldr	r1, [pc, #776]	; (8006370 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 8006066:	880b      	ldrh	r3, [r1, #0]
 8006068:	2b77      	cmp	r3, #119	; 0x77
 800606a:	f67f abe3 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 800606e:	48c1      	ldr	r0, [pc, #772]	; (8006374 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
        borderColor = colorBorder;
 8006070:	4fbd      	ldr	r7, [pc, #756]	; (8006368 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 8006072:	6800      	ldr	r0, [r0, #0]
 8006074:	2177      	movs	r1, #119	; 0x77
 8006076:	f001 ff23 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 800607a:	4abf      	ldr	r2, [pc, #764]	; (8006378 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 800607c:	4603      	mov	r3, r0
 800607e:	2104      	movs	r1, #4
 8006080:	4628      	mov	r0, r5
 8006082:	f011 ff29 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 8006086:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006088:	4bbc      	ldr	r3, [pc, #752]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 800608a:	9823      	ldr	r0, [sp, #140]	; 0x8c
        wc1 = value;
 800608c:	f8cb 5aec 	str.w	r5, [fp, #2796]	; 0xaec
 8006090:	9341      	str	r3, [sp, #260]	; 0x104
 8006092:	4631      	mov	r1, r6
 8006094:	2378      	movs	r3, #120	; 0x78
 8006096:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxTOil.setPosition(150, 333, 90, 38);
 800609a:	2526      	movs	r5, #38	; 0x26
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 800609c:	f00b fe80 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060a0:	9923      	ldr	r1, [sp, #140]	; 0x8c
 80060a2:	4620      	mov	r0, r4
 80060a4:	f009 fa0c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOil.setPosition(150, 333, 90, 38);
 80060a8:	4643      	mov	r3, r8
 80060aa:	f240 124d 	movw	r2, #333	; 0x14d
 80060ae:	982f      	ldr	r0, [sp, #188]	; 0xbc
 80060b0:	9500      	str	r5, [sp, #0]
 80060b2:	2196      	movs	r1, #150	; 0x96
 80060b4:	f7fc fccd 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 80060b8:	f04f 0905 	mov.w	r9, #5
 80060bc:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 80060c0:	f8cb eb18 	str.w	lr, [fp, #2840]	; 0xb18
 80060c4:	992f      	ldr	r1, [sp, #188]	; 0xbc
        borderColor = colorBorder;
 80060c6:	f8cb 7b1c 	str.w	r7, [fp, #2844]	; 0xb1c
 80060ca:	4620      	mov	r0, r4
        borderSize = size;
 80060cc:	f8ab 9b20 	strh.w	r9, [fp, #2848]	; 0xb20
 80060d0:	f009 f9f6 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPOil.setPosition(150, 293, 90, 38);
 80060d4:	4643      	mov	r3, r8
 80060d6:	f240 1225 	movw	r2, #293	; 0x125
 80060da:	9830      	ldr	r0, [sp, #192]	; 0xc0
 80060dc:	9500      	str	r5, [sp, #0]
 80060de:	2196      	movs	r1, #150	; 0x96
 80060e0:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 80060e4:	f7fc fcb5 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
    txtTOil.setPosition(157, 343, 75, 19);
 80060e8:	f04f 0813 	mov.w	r8, #19
 80060ec:	9930      	ldr	r1, [sp, #192]	; 0xc0
 80060ee:	f8cb 5b4c 	str.w	r5, [fp, #2892]	; 0xb4c
        borderColor = colorBorder;
 80060f2:	f8cb 7b50 	str.w	r7, [fp, #2896]	; 0xb50
 80060f6:	4620      	mov	r0, r4
        borderSize = size;
 80060f8:	f8ab 9b54 	strh.w	r9, [fp, #2900]	; 0xb54
 80060fc:	f009 f9e0 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 8006100:	2700      	movs	r7, #0
 8006102:	234b      	movs	r3, #75	; 0x4b
 8006104:	f240 1257 	movw	r2, #343	; 0x157
 8006108:	219d      	movs	r1, #157	; 0x9d
 800610a:	9824      	ldr	r0, [sp, #144]	; 0x90
 800610c:	f8cd 8000 	str.w	r8, [sp]
 8006110:	f7fc fc9f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006114:	f8cb ab88 	str.w	sl, [fp, #2952]	; 0xb88
        linespace = space;
 8006118:	f8ab 7b8c 	strh.w	r7, [fp, #2956]	; 0xb8c
        return TextArea::BoundingArea();
 800611c:	4630      	mov	r0, r6
 800611e:	f7fc fe27 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006122:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006126:	f60b 3394 	addw	r3, fp, #2964	; 0xb94
 800612a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800612e:	4a8f      	ldr	r2, [pc, #572]	; (800636c <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 8006130:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZRFT).getText());
 8006132:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 8006136:	3514      	adds	r5, #20
 8006138:	2b00      	cmp	r3, #0
 800613a:	f43f ab71 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800613e:	498c      	ldr	r1, [pc, #560]	; (8006370 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 8006140:	880b      	ldrh	r3, [r1, #0]
 8006142:	2b75      	cmp	r3, #117	; 0x75
 8006144:	f67f ab76 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006148:	488a      	ldr	r0, [pc, #552]	; (8006374 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 800614a:	2175      	movs	r1, #117	; 0x75
 800614c:	6800      	ldr	r0, [r0, #0]
 800614e:	f001 feb7 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8006152:	4a89      	ldr	r2, [pc, #548]	; (8006378 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 8006154:	4603      	mov	r3, r0
 8006156:	2104      	movs	r1, #4
 8006158:	4628      	mov	r0, r5
 800615a:	f011 febd 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800615e:	4b87      	ldr	r3, [pc, #540]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtTOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YR52));
 8006160:	9824      	ldr	r0, [sp, #144]	; 0x90
        wc1 = value;
 8006162:	f8cb 5ba0 	str.w	r5, [fp, #2976]	; 0xba0
 8006166:	9341      	str	r3, [sp, #260]	; 0x104
 8006168:	4631      	mov	r1, r6
 800616a:	2376      	movs	r3, #118	; 0x76
 800616c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006170:	f00b fe16 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006174:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006176:	4620      	mov	r0, r4
 8006178:	f009 f9a2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPOil.setPosition(157, 303, 75, 19);
 800617c:	234b      	movs	r3, #75	; 0x4b
 800617e:	f240 122f 	movw	r2, #303	; 0x12f
 8006182:	219d      	movs	r1, #157	; 0x9d
 8006184:	9825      	ldr	r0, [sp, #148]	; 0x94
 8006186:	f8cd 8000 	str.w	r8, [sp]
 800618a:	f7fc fc62 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800618e:	f8cb abd4 	str.w	sl, [fp, #3028]	; 0xbd4
        linespace = space;
 8006192:	f8ab 7bd8 	strh.w	r7, [fp, #3032]	; 0xbd8
        return TextArea::BoundingArea();
 8006196:	4630      	mov	r0, r6
 8006198:	f7fc fdea 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800619c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80061a0:	f50b 633e 	add.w	r3, fp, #3040	; 0xbe0
 80061a4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80061a8:	4a70      	ldr	r2, [pc, #448]	; (800636c <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 80061aa:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtPOilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1M75).getText());
 80061ac:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 80061b0:	351c      	adds	r5, #28
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	f43f ab34 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80061b8:	496d      	ldr	r1, [pc, #436]	; (8006370 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 80061ba:	880b      	ldrh	r3, [r1, #0]
 80061bc:	2b73      	cmp	r3, #115	; 0x73
 80061be:	f67f ab39 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80061c2:	486c      	ldr	r0, [pc, #432]	; (8006374 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 80061c4:	2173      	movs	r1, #115	; 0x73
 80061c6:	6800      	ldr	r0, [r0, #0]
 80061c8:	f001 fe7a 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80061cc:	4a6a      	ldr	r2, [pc, #424]	; (8006378 <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 80061ce:	4603      	mov	r3, r0
 80061d0:	2106      	movs	r1, #6
 80061d2:	4628      	mov	r0, r5
 80061d4:	f011 fe80 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80061d8:	4b68      	ldr	r3, [pc, #416]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 80061da:	9825      	ldr	r0, [sp, #148]	; 0x94
        wc1 = value;
 80061dc:	f8cb 5bec 	str.w	r5, [fp, #3052]	; 0xbec
 80061e0:	9341      	str	r3, [sp, #260]	; 0x104
 80061e2:	4631      	mov	r1, r6
 80061e4:	2374      	movs	r3, #116	; 0x74
 80061e6:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxLC.setPosition(5, 321, 135, 63);
 80061ea:	253f      	movs	r5, #63	; 0x3f
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 80061ec:	f00b fdd8 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80061f0:	9925      	ldr	r1, [sp, #148]	; 0x94
 80061f2:	4620      	mov	r0, r4
 80061f4:	f009 f964 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(5, 321, 135, 63);
 80061f8:	2387      	movs	r3, #135	; 0x87
 80061fa:	4649      	mov	r1, r9
 80061fc:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80061fe:	9500      	str	r5, [sp, #0]
 8006200:	f240 1241 	movw	r2, #321	; 0x141
 8006204:	f7fc fc25 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006208:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 800620c:	4a56      	ldr	r2, [pc, #344]	; (8006368 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 800620e:	9931      	ldr	r1, [sp, #196]	; 0xc4
 8006210:	f8cb 2c1c 	str.w	r2, [fp, #3100]	; 0xc1c
 8006214:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 8006218:	f8cb 5c18 	str.w	r5, [fp, #3096]	; 0xc18
        borderSize = size;
 800621c:	f8ab 8c20 	strh.w	r8, [fp, #3104]	; 0xc20
 8006220:	4620      	mov	r0, r4
 8006222:	ad3c      	add	r5, sp, #240	; 0xf0
 8006224:	f009 f94c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setXY(47, 335);
 8006228:	f240 124f 	movw	r2, #335	; 0x14f
 800622c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800622e:	212f      	movs	r1, #47	; 0x2f
 8006230:	f7fc fc02 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006234:	4628      	mov	r0, r5
 8006236:	990c      	ldr	r1, [sp, #48]	; 0x30
        color = newColor;
 8006238:	f8cb ac54 	str.w	sl, [fp, #3156]	; 0xc54
        linespace = space;
 800623c:	f8ab 7c58 	strh.w	r7, [fp, #3160]	; 0xc58
        boundingArea = calculateBoundingArea();
 8006240:	f00b fb14 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006244:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006246:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 800624a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800624e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006252:	4b4a      	ldr	r3, [pc, #296]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelLC.setTypedText(touchgfx::TypedText(T_LC));
 8006254:	980c      	ldr	r0, [sp, #48]	; 0x30
 8006256:	9341      	str	r3, [sp, #260]	; 0x104
 8006258:	4631      	mov	r1, r6
 800625a:	230b      	movs	r3, #11
 800625c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006260:	f00b fd9e 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006264:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006266:	4620      	mov	r0, r4
 8006268:	f009 f92a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxClutch.setPosition(5, 388, 135, 63);
 800626c:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
 8006270:	2387      	movs	r3, #135	; 0x87
 8006272:	4649      	mov	r1, r9
 8006274:	9832      	ldr	r0, [sp, #200]	; 0xc8
 8006276:	f8cd e000 	str.w	lr, [sp]
 800627a:	f44f 72c2 	mov.w	r2, #388	; 0x184
 800627e:	f7fc fbe8 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006282:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006286:	4a38      	ldr	r2, [pc, #224]	; (8006368 <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 8006288:	f8cb ec94 	str.w	lr, [fp, #3220]	; 0xc94
 800628c:	9932      	ldr	r1, [sp, #200]	; 0xc8
 800628e:	f8cb 2c98 	str.w	r2, [fp, #3224]	; 0xc98
        borderSize = size;
 8006292:	f8ab 8c9c 	strh.w	r8, [fp, #3228]	; 0xc9c
 8006296:	4620      	mov	r0, r4
 8006298:	f009 f912 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelClutch.setXY(39, 402);
 800629c:	f44f 72c9 	mov.w	r2, #402	; 0x192
 80062a0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80062a2:	2127      	movs	r1, #39	; 0x27
 80062a4:	f7fc fbc8 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 80062a8:	4628      	mov	r0, r5
 80062aa:	990d      	ldr	r1, [sp, #52]	; 0x34
        color = newColor;
 80062ac:	f8cb acd0 	str.w	sl, [fp, #3280]	; 0xcd0
        linespace = space;
 80062b0:	f8ab 7cd4 	strh.w	r7, [fp, #3284]	; 0xcd4
        boundingArea = calculateBoundingArea();
 80062b4:	f00b fada 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80062b8:	990d      	ldr	r1, [sp, #52]	; 0x34
 80062ba:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 80062be:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80062c2:	f04f 0e0a 	mov.w	lr, #10
 80062c6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062ca:	4b2c      	ldr	r3, [pc, #176]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelClutch.setTypedText(touchgfx::TypedText(T_CLUTCH));
 80062cc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80062ce:	f8ad e108 	strh.w	lr, [sp, #264]	; 0x108
 80062d2:	4631      	mov	r1, r6
 80062d4:	9341      	str	r3, [sp, #260]	; 0x104
 80062d6:	f00b fd63 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80062da:	990d      	ldr	r1, [sp, #52]	; 0x34
 80062dc:	4620      	mov	r0, r4
 80062de:	f009 f8ef 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80062e2:	230d      	movs	r3, #13
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_185X111_ID));
 80062e4:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80062e6:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 80062ea:	4631      	mov	r1, r6
 80062ec:	f00b ff84 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(308, 340, 185, 111);
 80062f0:	f04f 0e6f 	mov.w	lr, #111	; 0x6f
 80062f4:	f8cd e000 	str.w	lr, [sp]
 80062f8:	23b9      	movs	r3, #185	; 0xb9
 80062fa:	f44f 72aa 	mov.w	r2, #340	; 0x154
 80062fe:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8006300:	f44f 719a 	mov.w	r1, #308	; 0x134
 8006304:	f7fc fba5 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8006308:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800630a:	4639      	mov	r1, r7
 800630c:	f00a ffbe 	bl	801128c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8006310:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8006312:	4620      	mov	r0, r4
 8006314:	f009 f8d4 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelDS.setXY(766, 160);
 8006318:	22a0      	movs	r2, #160	; 0xa0
 800631a:	ee1e 0a90 	vmov	r0, s29
 800631e:	f240 21fe 	movw	r1, #766	; 0x2fe
 8006322:	f7fc fb89 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006326:	4628      	mov	r0, r5
 8006328:	ee1e 1a90 	vmov	r1, s29
        color = newColor;
 800632c:	f8cb ad44 	str.w	sl, [fp, #3396]	; 0xd44
        linespace = space;
 8006330:	f8ab 7d48 	strh.w	r7, [fp, #3400]	; 0xd48
        boundingArea = calculateBoundingArea();
 8006334:	f00b fa9a 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006338:	ee1e 1a90 	vmov	r1, s29
 800633c:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 8006340:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8006344:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8006348:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800634c:	f88b cd4c 	strb.w	ip, [fp, #3404]	; 0xd4c
        boundingArea = calculateBoundingArea();
 8006350:	4628      	mov	r0, r5
 8006352:	ee1e 1a90 	vmov	r1, s29
 8006356:	f00b fa89 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800635a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800635e:	4b07      	ldr	r3, [pc, #28]	; (800637c <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 8006360:	9341      	str	r3, [sp, #260]	; 0x104
 8006362:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8006366:	e00b      	b.n	8006380 <_ZN23MainInfotaimentViewBaseC1Ev+0x1088>
 8006368:	ffffea00 	.word	0xffffea00
 800636c:	2000ef74 	.word	0x2000ef74
 8006370:	2000ef78 	.word	0x2000ef78
 8006374:	2000ef80 	.word	0x2000ef80
 8006378:	08028192 	.word	0x08028192
 800637c:	08028208 	.word	0x08028208
 8006380:	2372      	movs	r3, #114	; 0x72
    labelDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67FN));
 8006382:	ee1e 0a90 	vmov	r0, s29
 8006386:	4631      	mov	r1, r6
 8006388:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 800638c:	f00b fd08 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006390:	ee1e 1a90 	vmov	r1, s29
 8006394:	4620      	mov	r0, r4
 8006396:	f009 f893 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2.setPosition(751, 150, 15, 42);
 800639a:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800639e:	f8cd e000 	str.w	lr, [sp]
 80063a2:	230f      	movs	r3, #15
 80063a4:	ee1f 0a10 	vmov	r0, s30
 80063a8:	2296      	movs	r2, #150	; 0x96
 80063aa:	f240 21ef 	movw	r1, #751	; 0x2ef
 80063ae:	f7fc fb50 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80063b2:	9939      	ldr	r1, [sp, #228]	; 0xe4
 80063b4:	f8cb 1d84 	str.w	r1, [fp, #3460]	; 0xd84
    line1_2.setStart(0, 0);
 80063b8:	ee1f 0a10 	vmov	r0, s30
 80063bc:	463a      	mov	r2, r7
 80063be:	4639      	mov	r1, r7
 80063c0:	f8cb add8 	str.w	sl, [fp, #3544]	; 0xdd8
 80063c4:	f8ab addc 	strh.w	sl, [fp, #3548]	; 0xddc
 80063c8:	f7fe ff7e 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2.setEnd(0, 45);
 80063cc:	222d      	movs	r2, #45	; 0x2d
 80063ce:	ee1f 0a10 	vmov	r0, s30
 80063d2:	4639      	mov	r1, r7
 80063d4:	f7fe ff7c 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2.setLineWidth(10);
 80063d8:	ee1f 0a10 	vmov	r0, s30
 80063dc:	210a      	movs	r1, #10
 80063de:	f7fe ff7b 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80063e2:	ee1f 0a10 	vmov	r0, s30
 80063e6:	4639      	mov	r1, r7
 80063e8:	f00a fde8 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80063ec:	ee1f 1a10 	vmov	r1, s30
 80063f0:	4620      	mov	r0, r4
 80063f2:	f009 f865 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1.setPosition(751, 195, 15, 42);
 80063f6:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80063fa:	f8cd e000 	str.w	lr, [sp]
 80063fe:	ee1f 0a90 	vmov	r0, s31
 8006402:	230f      	movs	r3, #15
 8006404:	22c3      	movs	r2, #195	; 0xc3
 8006406:	f240 21ef 	movw	r1, #751	; 0x2ef
 800640a:	f7fc fb22 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800640e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8006412:	993a      	ldr	r1, [sp, #232]	; 0xe8
 8006414:	f8ab 3e60 	strh.w	r3, [fp, #3680]	; 0xe60
    line1_2_1.setStart(0, 0);
 8006418:	ee1f 0a90 	vmov	r0, s31
 800641c:	f8cb 1e08 	str.w	r1, [fp, #3592]	; 0xe08
 8006420:	463a      	mov	r2, r7
 8006422:	4639      	mov	r1, r7
 8006424:	f8cb ae5c 	str.w	sl, [fp, #3676]	; 0xe5c
 8006428:	f7fe ff4e 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1.setEnd(0, 45);
 800642c:	222d      	movs	r2, #45	; 0x2d
 800642e:	ee1f 0a90 	vmov	r0, s31
 8006432:	4639      	mov	r1, r7
 8006434:	f7fe ff4c 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1.setLineWidth(10);
 8006438:	ee1f 0a90 	vmov	r0, s31
 800643c:	210a      	movs	r1, #10
 800643e:	f7fe ff4b 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8006442:	ee1f 0a90 	vmov	r0, s31
 8006446:	4639      	mov	r1, r7
 8006448:	f00a fdb8 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800644c:	ee1f 1a90 	vmov	r1, s31
 8006450:	4620      	mov	r0, r4
 8006452:	f009 f835 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxDS.setPosition(586, 150, 145, 42);
 8006456:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800645a:	2391      	movs	r3, #145	; 0x91
 800645c:	9833      	ldr	r0, [sp, #204]	; 0xcc
 800645e:	f8cd e000 	str.w	lr, [sp]
 8006462:	2296      	movs	r2, #150	; 0x96
 8006464:	f240 214a 	movw	r1, #586	; 0x24a
 8006468:	f7fc faf3 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800646c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006470:	4add      	ldr	r2, [pc, #884]	; (80067e8 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006472:	f8cb ee8c 	str.w	lr, [fp, #3724]	; 0xe8c
 8006476:	9933      	ldr	r1, [sp, #204]	; 0xcc
 8006478:	f8cb 2e90 	str.w	r2, [fp, #3728]	; 0xe90
        borderSize = size;
 800647c:	f8ab 9e94 	strh.w	r9, [fp, #3732]	; 0xe94
 8006480:	4620      	mov	r0, r4
 8006482:	f009 f81d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS.setXY(766, 207);
 8006486:	22cf      	movs	r2, #207	; 0xcf
 8006488:	9802      	ldr	r0, [sp, #8]
 800648a:	f240 21fe 	movw	r1, #766	; 0x2fe
 800648e:	f7fc fad3 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006492:	4628      	mov	r0, r5
 8006494:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 8006496:	f8cb aec8 	str.w	sl, [fp, #3784]	; 0xec8
        linespace = space;
 800649a:	f8ab 7ecc 	strh.w	r7, [fp, #3788]	; 0xecc
        boundingArea = calculateBoundingArea();
 800649e:	f00b f9e5 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064a2:	9902      	ldr	r1, [sp, #8]
 80064a4:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 80064a8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80064ac:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80064b0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80064b4:	f88b ced0 	strb.w	ip, [fp, #3792]	; 0xed0
        boundingArea = calculateBoundingArea();
 80064b8:	4628      	mov	r0, r5
 80064ba:	9902      	ldr	r1, [sp, #8]
 80064bc:	f00b f9d6 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064c0:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064c4:	4bc9      	ldr	r3, [pc, #804]	; (80067ec <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 80064c6:	9341      	str	r3, [sp, #260]	; 0x104
 80064c8:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 80064cc:	2371      	movs	r3, #113	; 0x71
    labelAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MIUL));
 80064ce:	9802      	ldr	r0, [sp, #8]
 80064d0:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80064d4:	4631      	mov	r1, r6
 80064d6:	f00b fc63 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80064da:	9902      	ldr	r1, [sp, #8]
 80064dc:	4620      	mov	r0, r4
 80064de:	f008 ffef 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAS.setPosition(586, 195, 145, 42);
 80064e2:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80064e6:	2391      	movs	r3, #145	; 0x91
 80064e8:	9834      	ldr	r0, [sp, #208]	; 0xd0
 80064ea:	f8cd e000 	str.w	lr, [sp]
 80064ee:	22c3      	movs	r2, #195	; 0xc3
 80064f0:	f240 214a 	movw	r1, #586	; 0x24a
 80064f4:	f7fc faad 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80064f8:	4abb      	ldr	r2, [pc, #748]	; (80067e8 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 80064fa:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80064fc:	f8cb 2f0c 	str.w	r2, [fp, #3852]	; 0xf0c
 8006500:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006504:	f8cb ef08 	str.w	lr, [fp, #3848]	; 0xf08
        borderSize = size;
 8006508:	f8ab 9f10 	strh.w	r9, [fp, #3856]	; 0xf10
 800650c:	4620      	mov	r0, r4
 800650e:	f008 ffd7 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_2.setPosition(751, 240, 15, 42);
 8006512:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006516:	f8cd e000 	str.w	lr, [sp]
 800651a:	230f      	movs	r3, #15
 800651c:	9803      	ldr	r0, [sp, #12]
 800651e:	22f0      	movs	r2, #240	; 0xf0
 8006520:	f240 21ef 	movw	r1, #751	; 0x2ef
 8006524:	f7fc fa95 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006528:	993b      	ldr	r1, [sp, #236]	; 0xec
    line1_2_2.setStart(0, 0);
 800652a:	9803      	ldr	r0, [sp, #12]
 800652c:	f8cb 1f3c 	str.w	r1, [fp, #3900]	; 0xf3c
 8006530:	463a      	mov	r2, r7
 8006532:	4639      	mov	r1, r7
 8006534:	f8cb af90 	str.w	sl, [fp, #3984]	; 0xf90
 8006538:	f8ab af94 	strh.w	sl, [fp, #3988]	; 0xf94
 800653c:	f7fe fec4 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_2.setEnd(0, 45);
 8006540:	222d      	movs	r2, #45	; 0x2d
 8006542:	9803      	ldr	r0, [sp, #12]
 8006544:	4639      	mov	r1, r7
 8006546:	f7fe fec3 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_2.setLineWidth(10);
 800654a:	9803      	ldr	r0, [sp, #12]
 800654c:	210a      	movs	r1, #10
 800654e:	f7fe fec3 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8006552:	9803      	ldr	r0, [sp, #12]
 8006554:	4639      	mov	r1, r7
 8006556:	f00a fd31 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 800655a:	9903      	ldr	r1, [sp, #12]
 800655c:	4620      	mov	r0, r4
 800655e:	f008 ffaf 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAMI.setPosition(586, 240, 145, 42);
 8006562:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006566:	2391      	movs	r3, #145	; 0x91
 8006568:	9835      	ldr	r0, [sp, #212]	; 0xd4
 800656a:	f8cd e000 	str.w	lr, [sp]
 800656e:	22f0      	movs	r2, #240	; 0xf0
 8006570:	f240 214a 	movw	r1, #586	; 0x24a
 8006574:	f7fc fa6d 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006578:	4a9b      	ldr	r2, [pc, #620]	; (80067e8 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 800657a:	9935      	ldr	r1, [sp, #212]	; 0xd4
 800657c:	f8cb 2fc4 	str.w	r2, [fp, #4036]	; 0xfc4
 8006580:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006584:	f8cb efc0 	str.w	lr, [fp, #4032]	; 0xfc0
        borderSize = size;
 8006588:	f8ab 9fc8 	strh.w	r9, [fp, #4040]	; 0xfc8
 800658c:	4620      	mov	r0, r4
 800658e:	f008 ff97 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1_1_1.setPosition(751, 284, 15, 42);
 8006592:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006596:	f50b 5880 	add.w	r8, fp, #4096	; 0x1000
 800659a:	f8cd e000 	str.w	lr, [sp]
 800659e:	230f      	movs	r3, #15
 80065a0:	9804      	ldr	r0, [sp, #16]
 80065a2:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80065a6:	f240 21ef 	movw	r1, #751	; 0x2ef
 80065aa:	f7fc fa52 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 80065ae:	9926      	ldr	r1, [sp, #152]	; 0x98
    line1_2_1_1_1.setStart(0, 0);
 80065b0:	9804      	ldr	r0, [sp, #16]
 80065b2:	f8c8 a048 	str.w	sl, [r8, #72]	; 0x48
 80065b6:	f8a8 a04c 	strh.w	sl, [r8, #76]	; 0x4c
 80065ba:	463a      	mov	r2, r7
 80065bc:	f8cb 1ff4 	str.w	r1, [fp, #4084]	; 0xff4
 80065c0:	4639      	mov	r1, r7
 80065c2:	f7fe fe81 	bl	80052c8 <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1_1_1.setEnd(0, 45);
 80065c6:	222d      	movs	r2, #45	; 0x2d
 80065c8:	9804      	ldr	r0, [sp, #16]
 80065ca:	4639      	mov	r1, r7
 80065cc:	f7fe fe80 	bl	80052d0 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1_1_1.setLineWidth(10);
 80065d0:	9804      	ldr	r0, [sp, #16]
 80065d2:	210a      	movs	r1, #10
 80065d4:	f7fe fe80 	bl	80052d8 <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80065d8:	9804      	ldr	r0, [sp, #16]
 80065da:	4639      	mov	r1, r7
 80065dc:	f00a fcee 	bl	8010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80065e0:	9904      	ldr	r1, [sp, #16]
 80065e2:	4620      	mov	r0, r4
 80065e4:	f008 ff6c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxEBS.setPosition(586, 284, 145, 42);
 80065e8:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80065ec:	2391      	movs	r3, #145	; 0x91
 80065ee:	981c      	ldr	r0, [sp, #112]	; 0x70
 80065f0:	f8cd e000 	str.w	lr, [sp]
 80065f4:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80065f8:	f240 214a 	movw	r1, #586	; 0x24a
 80065fc:	f7fc fa29 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006600:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006604:	4a78      	ldr	r2, [pc, #480]	; (80067e8 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006606:	f8c8 e078 	str.w	lr, [r8, #120]	; 0x78
 800660a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800660c:	f8c8 207c 	str.w	r2, [r8, #124]	; 0x7c
        borderSize = size;
 8006610:	f8a8 9080 	strh.w	r9, [r8, #128]	; 0x80
 8006614:	4620      	mov	r0, r4
 8006616:	f008 ff53 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_1.setXY(767, 247);
 800661a:	22f7      	movs	r2, #247	; 0xf7
 800661c:	ee1b 0a10 	vmov	r0, s22
 8006620:	f240 21ff 	movw	r1, #767	; 0x2ff
 8006624:	f7fc fa08 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006628:	4628      	mov	r0, r5
 800662a:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800662e:	f8c8 a0b4 	str.w	sl, [r8, #180]	; 0xb4
        linespace = space;
 8006632:	f8a8 70b8 	strh.w	r7, [r8, #184]	; 0xb8
        boundingArea = calculateBoundingArea();
 8006636:	f00b f919 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800663a:	ee1b 1a10 	vmov	r1, s22
 800663e:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 8006642:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8006646:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 800664a:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 800664e:	f888 c0bc 	strb.w	ip, [r8, #188]	; 0xbc
        boundingArea = calculateBoundingArea();
 8006652:	4628      	mov	r0, r5
 8006654:	ee1b 1a10 	vmov	r1, s22
 8006658:	f00b f908 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800665c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006660:	4b62      	ldr	r3, [pc, #392]	; (80067ec <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 8006662:	9341      	str	r3, [sp, #260]	; 0x104
 8006664:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8006668:	2370      	movs	r3, #112	; 0x70
    labelAS_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9LL));
 800666a:	ee1b 0a10 	vmov	r0, s22
 800666e:	4631      	mov	r1, r6
 8006670:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006674:	f00b fb94 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006678:	ee1b 1a10 	vmov	r1, s22
 800667c:	4620      	mov	r0, r4
 800667e:	f008 ff1f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_2.setXY(766, 290);
 8006682:	f44f 7291 	mov.w	r2, #290	; 0x122
 8006686:	ee1b 0a90 	vmov	r0, s23
 800668a:	f240 21fe 	movw	r1, #766	; 0x2fe
 800668e:	f7fc f9d3 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006692:	4628      	mov	r0, r5
 8006694:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 8006698:	f8c8 a0fc 	str.w	sl, [r8, #252]	; 0xfc
        linespace = space;
 800669c:	f8a8 7100 	strh.w	r7, [r8, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 80066a0:	f00b f8e4 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066a4:	ee1b 1a90 	vmov	r1, s23
 80066a8:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 80066ac:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80066b0:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80066b4:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 80066b8:	4628      	mov	r0, r5
 80066ba:	ee1b 1a90 	vmov	r1, s23
        rotation = textRotation;
 80066be:	f888 c104 	strb.w	ip, [r8, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 80066c2:	f00b f8d3 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80066c6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80066ca:	4b48      	ldr	r3, [pc, #288]	; (80067ec <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 80066cc:	9341      	str	r3, [sp, #260]	; 0x104
 80066ce:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 80066d2:	f04f 0c6f 	mov.w	ip, #111	; 0x6f
    labelAS_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W7WZ));
 80066d6:	ee1b 0a90 	vmov	r0, s23
 80066da:	4631      	mov	r1, r6
 80066dc:	f8ad c108 	strh.w	ip, [sp, #264]	; 0x108
 80066e0:	f00b fb5e 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80066e4:	ee1b 1a90 	vmov	r1, s23
 80066e8:	4620      	mov	r0, r4
 80066ea:	f008 fee9 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtDS.setXY(595, 158);
 80066ee:	229e      	movs	r2, #158	; 0x9e
 80066f0:	f240 2153 	movw	r1, #595	; 0x253
 80066f4:	9805      	ldr	r0, [sp, #20]
 80066f6:	f7fc f99f 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80066fa:	f8c8 a144 	str.w	sl, [r8, #324]	; 0x144
        linespace = space;
 80066fe:	f8a8 7148 	strh.w	r7, [r8, #328]	; 0x148
        return TextArea::BoundingArea();
 8006702:	4630      	mov	r0, r6
 8006704:	f7fc fb34 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006708:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800670c:	f508 73a8 	add.w	r3, r8, #336	; 0x150
 8006710:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006714:	4b36      	ldr	r3, [pc, #216]	; (80067f0 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 8006716:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtDSBuffer, TXTDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q3EN).getText());
 8006718:	f50b 55ba 	add.w	r5, fp, #5952	; 0x1740
 800671c:	3508      	adds	r5, #8
 800671e:	2b00      	cmp	r3, #0
 8006720:	f43f a87e 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006724:	4933      	ldr	r1, [pc, #204]	; (80067f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 8006726:	880b      	ldrh	r3, [r1, #0]
 8006728:	2b6d      	cmp	r3, #109	; 0x6d
 800672a:	f67f a883 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 800672e:	4832      	ldr	r0, [pc, #200]	; (80067f8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 8006730:	216d      	movs	r1, #109	; 0x6d
 8006732:	6800      	ldr	r0, [r0, #0]
 8006734:	f001 fbc4 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8006738:	4a30      	ldr	r2, [pc, #192]	; (80067fc <_ZN23MainInfotaimentViewBaseC1Ev+0x1504>)
 800673a:	4603      	mov	r3, r0
 800673c:	2128      	movs	r1, #40	; 0x28
 800673e:	4628      	mov	r0, r5
 8006740:	f011 fbca 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtDS.resizeToCurrentText();
 8006744:	9805      	ldr	r0, [sp, #20]
        wc1 = value;
 8006746:	f8c8 515c 	str.w	r5, [r8, #348]	; 0x15c
 800674a:	f00b fb09 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 800674e:	4d27      	ldr	r5, [pc, #156]	; (80067ec <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
    txtDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J40F));
 8006750:	9805      	ldr	r0, [sp, #20]
 8006752:	9541      	str	r5, [sp, #260]	; 0x104
 8006754:	236e      	movs	r3, #110	; 0x6e
 8006756:	4631      	mov	r1, r6
 8006758:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 800675c:	f00b fb20 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006760:	9905      	ldr	r1, [sp, #20]
 8006762:	4620      	mov	r0, r4
 8006764:	f008 feac 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAS.setXY(595, 202);
 8006768:	22ca      	movs	r2, #202	; 0xca
 800676a:	f240 2153 	movw	r1, #595	; 0x253
 800676e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006770:	f7fc f962 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006774:	f8c8 a190 	str.w	sl, [r8, #400]	; 0x190
        linespace = space;
 8006778:	f8a8 7194 	strh.w	r7, [r8, #404]	; 0x194
        return TextArea::BoundingArea();
 800677c:	4630      	mov	r0, r6
 800677e:	f7fc faf7 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006782:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006786:	f508 73ce 	add.w	r3, r8, #412	; 0x19c
 800678a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800678e:	4b18      	ldr	r3, [pc, #96]	; (80067f0 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 8006790:	681b      	ldr	r3, [r3, #0]
 8006792:	2b00      	cmp	r3, #0
 8006794:	f43f a844 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006798:	4916      	ldr	r1, [pc, #88]	; (80067f4 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 800679a:	880b      	ldrh	r3, [r1, #0]
 800679c:	2b6b      	cmp	r3, #107	; 0x6b
 800679e:	f67f a849 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80067a2:	4815      	ldr	r0, [pc, #84]	; (80067f8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 80067a4:	216b      	movs	r1, #107	; 0x6b
 80067a6:	6800      	ldr	r0, [r0, #0]
 80067a8:	f001 fb8a 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 80067ac:	f8c8 01a8 	str.w	r0, [r8, #424]	; 0x1a8
    txtAS.resizeToCurrentText();
 80067b0:	981d      	ldr	r0, [sp, #116]	; 0x74
 80067b2:	f00b fad5 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80067b6:	236c      	movs	r3, #108	; 0x6c
    txtAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J70));
 80067b8:	4631      	mov	r1, r6
 80067ba:	981d      	ldr	r0, [sp, #116]	; 0x74
 80067bc:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80067c0:	9541      	str	r5, [sp, #260]	; 0x104
 80067c2:	f00b faed 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80067c6:	991d      	ldr	r1, [sp, #116]	; 0x74
 80067c8:	4620      	mov	r0, r4
 80067ca:	f008 fe79 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAMI.setXY(595, 247);
 80067ce:	22f7      	movs	r2, #247	; 0xf7
 80067d0:	f240 2153 	movw	r1, #595	; 0x253
 80067d4:	9806      	ldr	r0, [sp, #24]
 80067d6:	f7fc f92f 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80067da:	f8c8 a1dc 	str.w	sl, [r8, #476]	; 0x1dc
        linespace = space;
 80067de:	f8a8 71e0 	strh.w	r7, [r8, #480]	; 0x1e0
        return TextArea::BoundingArea();
 80067e2:	4630      	mov	r0, r6
 80067e4:	e00c      	b.n	8006800 <_ZN23MainInfotaimentViewBaseC1Ev+0x1508>
 80067e6:	bf00      	nop
 80067e8:	ffffea00 	.word	0xffffea00
 80067ec:	08028208 	.word	0x08028208
 80067f0:	2000ef74 	.word	0x2000ef74
 80067f4:	2000ef78 	.word	0x2000ef78
 80067f8:	2000ef80 	.word	0x2000ef80
 80067fc:	08028192 	.word	0x08028192
 8006800:	f7fc fab6 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006804:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006808:	f508 78f4 	add.w	r8, r8, #488	; 0x1e8
 800680c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006810:	48d7      	ldr	r0, [pc, #860]	; (8006b70 <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
 8006812:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(txtAMIBuffer, TXTAMI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VLUE).getText());
 8006814:	f50b 56bc 	add.w	r6, fp, #6016	; 0x1780
 8006818:	3618      	adds	r6, #24
 800681a:	2b00      	cmp	r3, #0
 800681c:	f43f a800 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006820:	49d4      	ldr	r1, [pc, #848]	; (8006b74 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006822:	880b      	ldrh	r3, [r1, #0]
 8006824:	2b69      	cmp	r3, #105	; 0x69
 8006826:	f67f a805 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 800682a:	f8df 8358 	ldr.w	r8, [pc, #856]	; 8006b84 <_ZN23MainInfotaimentViewBaseC1Ev+0x188c>
 800682e:	2169      	movs	r1, #105	; 0x69
 8006830:	f8d8 0000 	ldr.w	r0, [r8]
 8006834:	f001 fb44 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006838:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 800683c:	4ace      	ldr	r2, [pc, #824]	; (8006b78 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 800683e:	4603      	mov	r3, r0
 8006840:	2128      	movs	r1, #40	; 0x28
 8006842:	4630      	mov	r0, r6
 8006844:	f011 fb48 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtAMI.resizeToCurrentText();
 8006848:	9806      	ldr	r0, [sp, #24]
 800684a:	f8c5 61f4 	str.w	r6, [r5, #500]	; 0x1f4
 800684e:	f00b fa87 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtAMI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_74WN));
 8006852:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006854:	4bc9      	ldr	r3, [pc, #804]	; (8006b7c <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
 8006856:	9806      	ldr	r0, [sp, #24]
 8006858:	9341      	str	r3, [sp, #260]	; 0x104
 800685a:	4631      	mov	r1, r6
 800685c:	236a      	movs	r3, #106	; 0x6a
 800685e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006862:	f00b fa9d 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006866:	9906      	ldr	r1, [sp, #24]
 8006868:	4620      	mov	r0, r4
 800686a:	f008 fe29 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtEBS.setXY(595, 293);
 800686e:	f240 1225 	movw	r2, #293	; 0x125
 8006872:	f240 2153 	movw	r1, #595	; 0x253
 8006876:	9807      	ldr	r0, [sp, #28]
 8006878:	f7fc f8de 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800687c:	f8c5 a228 	str.w	sl, [r5, #552]	; 0x228
        linespace = space;
 8006880:	f8a5 722c 	strh.w	r7, [r5, #556]	; 0x22c
        return TextArea::BoundingArea();
 8006884:	4630      	mov	r0, r6
 8006886:	f7fc fa73 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800688a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        linespace = space;
 800688e:	46b9      	mov	r9, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006890:	4fb7      	ldr	r7, [pc, #732]	; (8006b70 <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
        boundingArea = calculateBoundingArea();
 8006892:	f505 730d 	add.w	r3, r5, #564	; 0x234
 8006896:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800689a:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtEBSBuffer, TXTEBS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V415).getText());
 800689c:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 80068a0:	f10a 0a08 	add.w	sl, sl, #8
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	f43e afbb 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80068aa:	49b2      	ldr	r1, [pc, #712]	; (8006b74 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 80068ac:	880b      	ldrh	r3, [r1, #0]
 80068ae:	2b67      	cmp	r3, #103	; 0x67
 80068b0:	f67e afc0 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80068b4:	2167      	movs	r1, #103	; 0x67
 80068b6:	f8d8 0000 	ldr.w	r0, [r8]
 80068ba:	f001 fb01 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80068be:	4aae      	ldr	r2, [pc, #696]	; (8006b78 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 80068c0:	4603      	mov	r3, r0
 80068c2:	210a      	movs	r1, #10
 80068c4:	4650      	mov	r0, sl
 80068c6:	f011 fb07 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtEBS.resizeToCurrentText();
 80068ca:	9807      	ldr	r0, [sp, #28]
        wc1 = value;
 80068cc:	f8c5 a240 	str.w	sl, [r5, #576]	; 0x240
 80068d0:	f00b fa46 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80068d4:	4ba9      	ldr	r3, [pc, #676]	; (8006b7c <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtEBS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ17));
 80068d6:	9807      	ldr	r0, [sp, #28]
 80068d8:	9341      	str	r3, [sp, #260]	; 0x104
 80068da:	4631      	mov	r1, r6
 80068dc:	2368      	movs	r3, #104	; 0x68
 80068de:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80068e2:	f00b fa5d 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80068e6:	9907      	ldr	r1, [sp, #28]
 80068e8:	4620      	mov	r0, r4
 80068ea:	f008 fde9 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBattery_V.setPosition(526, 376, 87, 38);
 80068ee:	2026      	movs	r0, #38	; 0x26
 80068f0:	2357      	movs	r3, #87	; 0x57
 80068f2:	9000      	str	r0, [sp, #0]
 80068f4:	f44f 72bc 	mov.w	r2, #376	; 0x178
 80068f8:	981e      	ldr	r0, [sp, #120]	; 0x78
 80068fa:	f240 210e 	movw	r1, #526	; 0x20e
 80068fe:	f7fc f8a8 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006902:	4a9f      	ldr	r2, [pc, #636]	; (8006b80 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006904:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006906:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 800690a:	e9c5 029b 	strd	r0, r2, [r5, #620]	; 0x26c
        borderSize = size;
 800690e:	f04f 0005 	mov.w	r0, #5
 8006912:	f8a5 0274 	strh.w	r0, [r5, #628]	; 0x274
 8006916:	4620      	mov	r0, r4
 8006918:	f008 fdd2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBattery_V.setPosition(536, 386, 70, 19);
 800691c:	f04f 0c13 	mov.w	ip, #19
 8006920:	2346      	movs	r3, #70	; 0x46
 8006922:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006926:	f44f 7106 	mov.w	r1, #536	; 0x218
 800692a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800692c:	f8cd c000 	str.w	ip, [sp]
 8006930:	f7fc f88f 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006934:	f04f 3cff 	mov.w	ip, #4294967295
 8006938:	f8c5 c2a8 	str.w	ip, [r5, #680]	; 0x2a8
        linespace = space;
 800693c:	f8a5 92ac 	strh.w	r9, [r5, #684]	; 0x2ac
        return TextArea::BoundingArea();
 8006940:	4630      	mov	r0, r6
 8006942:	f7fc fa15 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006946:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800694a:	f505 732d 	add.w	r3, r5, #692	; 0x2b4
 800694e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006952:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtBattery_VBuffer, TXTBATTERY_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G99E).getText());
 8006954:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 8006958:	f10a 0a1c 	add.w	sl, sl, #28
 800695c:	2b00      	cmp	r3, #0
 800695e:	f43e af5f 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006962:	4984      	ldr	r1, [pc, #528]	; (8006b74 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006964:	880b      	ldrh	r3, [r1, #0]
 8006966:	2b64      	cmp	r3, #100	; 0x64
 8006968:	f67e af64 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 800696c:	2164      	movs	r1, #100	; 0x64
 800696e:	f8d8 0000 	ldr.w	r0, [r8]
 8006972:	f001 faa5 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8006976:	4a80      	ldr	r2, [pc, #512]	; (8006b78 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006978:	4603      	mov	r3, r0
 800697a:	2106      	movs	r1, #6
 800697c:	4650      	mov	r0, sl
 800697e:	f011 faab 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006982:	4b7e      	ldr	r3, [pc, #504]	; (8006b7c <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtBattery_V.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J87C));
 8006984:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8006986:	f8c5 a2c0 	str.w	sl, [r5, #704]	; 0x2c0
 800698a:	9341      	str	r3, [sp, #260]	; 0x104
 800698c:	4631      	mov	r1, r6
 800698e:	2365      	movs	r3, #101	; 0x65
 8006990:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006994:	f00b fa04 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006998:	990e      	ldr	r1, [sp, #56]	; 0x38
 800699a:	4620      	mov	r0, r4
 800699c:	f008 fd90 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilPres.setXY(242, 293);
 80069a0:	f240 1225 	movw	r2, #293	; 0x125
 80069a4:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80069a6:	21f2      	movs	r1, #242	; 0xf2
 80069a8:	f7fc f846 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 80069ac:	2311      	movs	r3, #17
    imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_OK_ID));
 80069ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80069b0:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 80069b4:	4631      	mov	r1, r6
 80069b6:	f00b fc1f 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80069ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80069bc:	4620      	mov	r0, r4
 80069be:	f008 fd7f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPFuel.setPosition(150, 253, 90, 38);
 80069c2:	f04f 0c26 	mov.w	ip, #38	; 0x26
 80069c6:	235a      	movs	r3, #90	; 0x5a
 80069c8:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80069ca:	f8cd c000 	str.w	ip, [sp]
 80069ce:	22fd      	movs	r2, #253	; 0xfd
 80069d0:	2196      	movs	r1, #150	; 0x96
 80069d2:	f7fc f83e 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 80069d6:	4a6a      	ldr	r2, [pc, #424]	; (8006b80 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 80069d8:	991f      	ldr	r1, [sp, #124]	; 0x7c
 80069da:	f8c5 231c 	str.w	r2, [r5, #796]	; 0x31c
 80069de:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 80069e2:	f04f 0005 	mov.w	r0, #5
 80069e6:	f8c5 c318 	str.w	ip, [r5, #792]	; 0x318
 80069ea:	f8a5 0320 	strh.w	r0, [r5, #800]	; 0x320
 80069ee:	4620      	mov	r0, r4
 80069f0:	f008 fd66 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPFuel.setPosition(157, 263, 75, 19);
 80069f4:	f04f 0c13 	mov.w	ip, #19
 80069f8:	234b      	movs	r3, #75	; 0x4b
 80069fa:	f240 1207 	movw	r2, #263	; 0x107
 80069fe:	219d      	movs	r1, #157	; 0x9d
 8006a00:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006a02:	f8cd c000 	str.w	ip, [sp]
 8006a06:	f7fc f824 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006a0a:	f04f 3cff 	mov.w	ip, #4294967295
 8006a0e:	f8c5 c354 	str.w	ip, [r5, #852]	; 0x354
        linespace = space;
 8006a12:	f8a5 9358 	strh.w	r9, [r5, #856]	; 0x358
        return TextArea::BoundingArea();
 8006a16:	4630      	mov	r0, r6
 8006a18:	f7fc f9aa 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006a1c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006a20:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 8006a24:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a28:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtPFuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B7Z3).getText());
 8006a2a:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006a2e:	f10a 0a08 	add.w	sl, sl, #8
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	f43e aef4 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a38:	494e      	ldr	r1, [pc, #312]	; (8006b74 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006a3a:	880b      	ldrh	r3, [r1, #0]
 8006a3c:	2b55      	cmp	r3, #85	; 0x55
 8006a3e:	f67e aef9 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006a42:	2155      	movs	r1, #85	; 0x55
 8006a44:	f8d8 0000 	ldr.w	r0, [r8]
 8006a48:	f001 fa3a 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8006a4c:	4a4a      	ldr	r2, [pc, #296]	; (8006b78 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006a4e:	4603      	mov	r3, r0
 8006a50:	2106      	movs	r1, #6
 8006a52:	4650      	mov	r0, sl
 8006a54:	f011 fa40 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006a58:	4b48      	ldr	r3, [pc, #288]	; (8006b7c <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtPFuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EUMO));
 8006a5a:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8006a5c:	f8c5 a36c 	str.w	sl, [r5, #876]	; 0x36c
 8006a60:	9341      	str	r3, [sp, #260]	; 0x104
 8006a62:	4631      	mov	r1, r6
 8006a64:	2356      	movs	r3, #86	; 0x56
 8006a66:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006a6a:	f00b f999 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a6e:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006a70:	4620      	mov	r0, r4
 8006a72:	f008 fd25 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilTemp.setXY(242, 330);
 8006a76:	f44f 72a5 	mov.w	r2, #330	; 0x14a
 8006a7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006a7c:	21f2      	movs	r1, #242	; 0xf2
 8006a7e:	f7fb ffdb 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006a82:	2314      	movs	r3, #20
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_OK_ID));
 8006a84:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006a86:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006a8a:	4631      	mov	r1, r6
 8006a8c:	f00b fbb4 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006a90:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006a92:	4620      	mov	r0, r4
 8006a94:	f008 fd14 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgWaterTemp.setXY(242, 377);
 8006a98:	f240 1279 	movw	r2, #377	; 0x179
 8006a9c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006a9e:	21f2      	movs	r1, #242	; 0xf2
 8006aa0:	f7fb ffca 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006aa4:	2319      	movs	r3, #25
    imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8006aa6:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006aa8:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006aac:	4631      	mov	r1, r6
 8006aae:	f00b fba3 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ab2:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006ab4:	4620      	mov	r0, r4
 8006ab6:	f008 fd03 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgTOrin.setXY(246, 415);
 8006aba:	f240 129f 	movw	r2, #415	; 0x19f
 8006abe:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006ac0:	21f6      	movs	r1, #246	; 0xf6
 8006ac2:	f7fb ffb9 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006ac6:	2316      	movs	r3, #22
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8006ac8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006aca:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006ace:	4631      	mov	r1, r6
 8006ad0:	f00b fb92 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006ad4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006ad6:	4620      	mov	r0, r4
 8006ad8:	f008 fcf2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOrin.setPosition(150, 413, 90, 38);
 8006adc:	f04f 0c26 	mov.w	ip, #38	; 0x26
 8006ae0:	235a      	movs	r3, #90	; 0x5a
 8006ae2:	9820      	ldr	r0, [sp, #128]	; 0x80
 8006ae4:	f8cd c000 	str.w	ip, [sp]
 8006ae8:	f240 129d 	movw	r2, #413	; 0x19d
 8006aec:	2196      	movs	r1, #150	; 0x96
 8006aee:	f7fb ffb0 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006af2:	4a23      	ldr	r2, [pc, #140]	; (8006b80 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006af4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006af6:	f8c5 2420 	str.w	r2, [r5, #1056]	; 0x420
 8006afa:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 8006afe:	f04f 0005 	mov.w	r0, #5
 8006b02:	f8c5 c41c 	str.w	ip, [r5, #1052]	; 0x41c
 8006b06:	f8a5 0424 	strh.w	r0, [r5, #1060]	; 0x424
 8006b0a:	4620      	mov	r0, r4
 8006b0c:	f008 fcd8 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTOrin.setPosition(157, 423, 75, 19);
 8006b10:	f04f 0c13 	mov.w	ip, #19
 8006b14:	234b      	movs	r3, #75	; 0x4b
 8006b16:	f240 12a7 	movw	r2, #423	; 0x1a7
 8006b1a:	219d      	movs	r1, #157	; 0x9d
 8006b1c:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006b1e:	f8cd c000 	str.w	ip, [sp]
 8006b22:	f7fb ff96 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006b26:	f04f 3cff 	mov.w	ip, #4294967295
 8006b2a:	f8c5 c458 	str.w	ip, [r5, #1112]	; 0x458
        linespace = space;
 8006b2e:	f8a5 945c 	strh.w	r9, [r5, #1116]	; 0x45c
        return TextArea::BoundingArea();
 8006b32:	4630      	mov	r0, r6
 8006b34:	f7fc f91c 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006b38:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006b3c:	f205 4364 	addw	r3, r5, #1124	; 0x464
 8006b40:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b44:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTOrinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMBT).getText());
 8006b46:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006b4a:	f10a 0a14 	add.w	sl, sl, #20
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	f43e ae66 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b54:	4907      	ldr	r1, [pc, #28]	; (8006b74 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006b56:	880b      	ldrh	r3, [r1, #0]
 8006b58:	2b5f      	cmp	r3, #95	; 0x5f
 8006b5a:	f67e ae6b 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006b5e:	f8d8 0000 	ldr.w	r0, [r8]
 8006b62:	215f      	movs	r1, #95	; 0x5f
 8006b64:	f001 f9ac 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8006b68:	4a03      	ldr	r2, [pc, #12]	; (8006b78 <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006b6a:	4603      	mov	r3, r0
 8006b6c:	2104      	movs	r1, #4
 8006b6e:	e00b      	b.n	8006b88 <_ZN23MainInfotaimentViewBaseC1Ev+0x1890>
 8006b70:	2000ef74 	.word	0x2000ef74
 8006b74:	2000ef78 	.word	0x2000ef78
 8006b78:	08028192 	.word	0x08028192
 8006b7c:	08028208 	.word	0x08028208
 8006b80:	ffffea00 	.word	0xffffea00
 8006b84:	2000ef80 	.word	0x2000ef80
 8006b88:	4650      	mov	r0, sl
 8006b8a:	f011 f9a5 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006b8e:	4bc7      	ldr	r3, [pc, #796]	; (8006eac <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>)
        wc1 = value;
 8006b90:	f8c5 a470 	str.w	sl, [r5, #1136]	; 0x470
    txtTOrin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9UXZ));
 8006b94:	4631      	mov	r1, r6
 8006b96:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006b98:	9341      	str	r3, [sp, #260]	; 0x104
 8006b9a:	2360      	movs	r3, #96	; 0x60
 8006b9c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006ba0:	f00b f8fe 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ba4:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006ba6:	4620      	mov	r0, r4
 8006ba8:	f008 fc8a 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgBatteryV.setXY(529, 337);
 8006bac:	f240 1251 	movw	r2, #337	; 0x151
 8006bb0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006bb2:	f240 2111 	movw	r1, #529	; 0x211
 8006bb6:	f7fb ff3f 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006bba:	f04f 0807 	mov.w	r8, #7
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006bbe:	4631      	mov	r1, r6
 8006bc0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006bc2:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006bc6:	f00b fb17 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006bca:	9915      	ldr	r1, [sp, #84]	; 0x54
 8006bcc:	4620      	mov	r0, r4
 8006bce:	f008 fc77 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    img24v.setXY(609, 337);
 8006bd2:	f240 1251 	movw	r2, #337	; 0x151
 8006bd6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006bd8:	f240 2161 	movw	r1, #609	; 0x261
 8006bdc:	f7fb ff2c 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006be0:	4631      	mov	r1, r6
 8006be2:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006be4:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006be8:	f00b fb06 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006bec:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8006bee:	4620      	mov	r0, r4
 8006bf0:	f008 fc66 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box24v.setPosition(608, 376, 87, 38);
 8006bf4:	2326      	movs	r3, #38	; 0x26
 8006bf6:	9821      	ldr	r0, [sp, #132]	; 0x84
 8006bf8:	9300      	str	r3, [sp, #0]
 8006bfa:	f44f 72bc 	mov.w	r2, #376	; 0x178
 8006bfe:	2357      	movs	r3, #87	; 0x57
 8006c00:	f44f 7118 	mov.w	r1, #608	; 0x260
 8006c04:	f7fb ff25 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006c08:	4aa9      	ldr	r2, [pc, #676]	; (8006eb0 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb8>)
 8006c0a:	f8c5 24f8 	str.w	r2, [r5, #1272]	; 0x4f8
 8006c0e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderSize = size;
 8006c12:	f04f 0005 	mov.w	r0, #5
 8006c16:	f8c5 34f4 	str.w	r3, [r5, #1268]	; 0x4f4
 8006c1a:	f8a5 04fc 	strh.w	r0, [r5, #1276]	; 0x4fc
 8006c1e:	9921      	ldr	r1, [sp, #132]	; 0x84
 8006c20:	4620      	mov	r0, r4
 8006c22:	f008 fc4d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txt24v.setPosition(616, 386, 70, 19);
 8006c26:	2313      	movs	r3, #19
 8006c28:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006c2c:	f44f 711a 	mov.w	r1, #616	; 0x268
 8006c30:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006c32:	9300      	str	r3, [sp, #0]
 8006c34:	2346      	movs	r3, #70	; 0x46
 8006c36:	f7fb ff0c 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006c3a:	f04f 33ff 	mov.w	r3, #4294967295
 8006c3e:	f8c5 3530 	str.w	r3, [r5, #1328]	; 0x530
        linespace = space;
 8006c42:	f8a5 9534 	strh.w	r9, [r5, #1332]	; 0x534
        return TextArea::BoundingArea();
 8006c46:	4630      	mov	r0, r6
 8006c48:	f7fc f892 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006c4c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006c50:	683b      	ldr	r3, [r7, #0]
 8006c52:	f205 553c 	addw	r5, r5, #1340	; 0x53c
    Unicode::snprintf(txt24vBuffer, TXT24V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8BB2).getText());
 8006c56:	f50b 56c0 	add.w	r6, fp, #6144	; 0x1800
 8006c5a:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8006c5e:	361c      	adds	r6, #28
 8006c60:	2b00      	cmp	r3, #0
 8006c62:	f43e addd 	beq.w	8005820 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c66:	4993      	ldr	r1, [pc, #588]	; (8006eb4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bbc>)
 8006c68:	880b      	ldrh	r3, [r1, #0]
 8006c6a:	2b5d      	cmp	r3, #93	; 0x5d
 8006c6c:	f67e ade2 	bls.w	8005834 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006c70:	4b91      	ldr	r3, [pc, #580]	; (8006eb8 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc0>)
        : typedTextId(id)
 8006c72:	f8df a238 	ldr.w	sl, [pc, #568]	; 8006eac <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>
        return texts->getText(typedTextId);
 8006c76:	6818      	ldr	r0, [r3, #0]
 8006c78:	215d      	movs	r1, #93	; 0x5d
 8006c7a:	f001 f921 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006c7e:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 8006c82:	4a8e      	ldr	r2, [pc, #568]	; (8006ebc <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc4>)
 8006c84:	4603      	mov	r3, r0
 8006c86:	2106      	movs	r1, #6
 8006c88:	4630      	mov	r0, r6
 8006c8a:	f011 f925 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006c8e:	f8c5 6548 	str.w	r6, [r5, #1352]	; 0x548
    txt24v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JG35));
 8006c92:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006c94:	235e      	movs	r3, #94	; 0x5e
 8006c96:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006c98:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006c9c:	4631      	mov	r1, r6
 8006c9e:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006ca2:	f00b f87d 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006ca6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8006ca8:	4620      	mov	r0, r4
 8006caa:	f008 fc09 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setAction(buttonCallback);
 8006cae:	f50b 498f 	add.w	r9, fp, #18304	; 0x4780
    btnNextPage.setXY(735, 415);
 8006cb2:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006cb4:	f240 129f 	movw	r2, #415	; 0x19f
 8006cb8:	f240 21df 	movw	r1, #735	; 0x2df
 8006cbc:	f7fb febc 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setAction(buttonCallback);
 8006cc0:	f109 0908 	add.w	r9, r9, #8
 8006cc4:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8006cc6:	4632      	mov	r2, r6
 8006cc8:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006cca:	f8ad 3100 	strh.w	r3, [sp, #256]	; 0x100
 8006cce:	a940      	add	r1, sp, #256	; 0x100
 8006cd0:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006cd4:	f00b f8c2 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006cd8:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006cda:	f8c5 9574 	str.w	r9, [r5, #1396]	; 0x574
 8006cde:	4620      	mov	r0, r4
 8006ce0:	f008 fbee 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dbgTextArea.setPosition(5, 454, 741, 23);
 8006ce4:	2317      	movs	r3, #23
 8006ce6:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8006ce8:	9300      	str	r3, [sp, #0]
 8006cea:	f44f 72e3 	mov.w	r2, #454	; 0x1c6
 8006cee:	2105      	movs	r1, #5
 8006cf0:	f240 23e5 	movw	r3, #741	; 0x2e5
        linespace = space;
 8006cf4:	f04f 0800 	mov.w	r8, #0
 8006cf8:	f7fb feab 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006cfc:	f04f 33ff 	mov.w	r3, #4294967295
 8006d00:	f8c5 35b0 	str.w	r3, [r5, #1456]	; 0x5b0
        linespace = space;
 8006d04:	f8a5 85b4 	strh.w	r8, [r5, #1460]	; 0x5b4
        return TextArea::BoundingArea();
 8006d08:	4630      	mov	r0, r6
 8006d0a:	f7fc f831 	bl	8002d70 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006d0e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006d12:	f205 53bc 	addw	r3, r5, #1468	; 0x5bc
 8006d16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    dbgTextArea.setWildcard(dbgTextAreaBuffer);
 8006d1a:	f50b 53c1 	add.w	r3, fp, #6176	; 0x1820
 8006d1e:	3308      	adds	r3, #8
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006d20:	9829      	ldr	r0, [sp, #164]	; 0xa4
        wc1 = value;
 8006d22:	f8c5 35c8 	str.w	r3, [r5, #1480]	; 0x5c8
 8006d26:	4631      	mov	r1, r6
 8006d28:	2362      	movs	r3, #98	; 0x62
    dbgTextAreaBuffer[0] = 0;
 8006d2a:	f8a5 8828 	strh.w	r8, [r5, #2088]	; 0x828
 8006d2e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006d32:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006d36:	f00b f833 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d3a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8006d3c:	4620      	mov	r0, r4
 8006d3e:	f008 fbbf 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(635, 414);
 8006d42:	ee1c 0a10 	vmov	r0, s24
 8006d46:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 8006d4a:	f240 217b 	movw	r1, #635	; 0x27b
 8006d4e:	f7fb fe73 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006d52:	af3c      	add	r7, sp, #240	; 0xf0
        color = newColor;
 8006d54:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006d58:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8006d5c:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
        boundingArea = calculateBoundingArea();
 8006d60:	4638      	mov	r0, r7
        linespace = space;
 8006d62:	f8a5 8600 	strh.w	r8, [r5, #1536]	; 0x600
        boundingArea = calculateBoundingArea();
 8006d66:	f00a fd81 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006d6a:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006d6e:	ee1c 3a10 	vmov	r3, s24
 8006d72:	333c      	adds	r3, #60	; 0x3c
 8006d74:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006d78:	235c      	movs	r3, #92	; 0x5c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J3QN));
 8006d7a:	ee1c 0a10 	vmov	r0, s24
 8006d7e:	4631      	mov	r1, r6
 8006d80:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006d84:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006d88:	f00b f80a 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d8c:	ee1c 1a10 	vmov	r1, s24
 8006d90:	4620      	mov	r0, r4
 8006d92:	f008 fb95 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(557, 414);
 8006d96:	ee1c 0a90 	vmov	r0, s25
 8006d9a:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 8006d9e:	f240 212d 	movw	r1, #557	; 0x22d
 8006da2:	f7fb fe49 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006da6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006daa:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 8006dae:	f8c5 3644 	str.w	r3, [r5, #1604]	; 0x644
        boundingArea = calculateBoundingArea();
 8006db2:	4638      	mov	r0, r7
        linespace = space;
 8006db4:	f8a5 8648 	strh.w	r8, [r5, #1608]	; 0x648
        boundingArea = calculateBoundingArea();
 8006db8:	f00a fd58 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006dbc:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006dc0:	ee1c 3a90 	vmov	r3, s25
 8006dc4:	333c      	adds	r3, #60	; 0x3c
 8006dc6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006dca:	235b      	movs	r3, #91	; 0x5b
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BU43));
 8006dcc:	ee1c 0a90 	vmov	r0, s25
 8006dd0:	4631      	mov	r1, r6
 8006dd2:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006dd6:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006dda:	f00a ffe1 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006dde:	ee1c 1a90 	vmov	r1, s25
 8006de2:	4620      	mov	r0, r4
 8006de4:	f008 fb6c 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(246, 261);
 8006de8:	ee1d 0a10 	vmov	r0, s26
 8006dec:	f240 1205 	movw	r2, #261	; 0x105
 8006df0:	21f6      	movs	r1, #246	; 0xf6
 8006df2:	f7fb fe21 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006df6:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006dfa:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 8006dfe:	f8c5 368c 	str.w	r3, [r5, #1676]	; 0x68c
        boundingArea = calculateBoundingArea();
 8006e02:	4638      	mov	r0, r7
        linespace = space;
 8006e04:	f8a5 8690 	strh.w	r8, [r5, #1680]	; 0x690
        boundingArea = calculateBoundingArea();
 8006e08:	f00a fd30 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006e0c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8006e10:	ee1d 3a10 	vmov	r3, s26
 8006e14:	333c      	adds	r3, #60	; 0x3c
 8006e16:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006e1a:	2354      	movs	r3, #84	; 0x54
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ONGO));
 8006e1c:	ee1d 0a10 	vmov	r0, s26
 8006e20:	4631      	mov	r1, r6
 8006e22:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006e26:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006e2a:	f00a ffb9 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e2e:	ee1d 1a10 	vmov	r1, s26
 8006e32:	4620      	mov	r0, r4
 8006e34:	f008 fb44 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver1.setXY(308, 341);
 8006e38:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8006e3a:	f240 1255 	movw	r2, #341	; 0x155
 8006e3e:	f44f 719a 	mov.w	r1, #308	; 0x134
 8006e42:	f7fb fdf9 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8006e46:	2704      	movs	r7, #4
    toDriver1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 8006e48:	4632      	mov	r2, r6
 8006e4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8006e4c:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 8006e50:	a940      	add	r1, sp, #256	; 0x100
 8006e52:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 8006e56:	f00b f801 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e5a:	9917      	ldr	r1, [sp, #92]	; 0x5c
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006e5c:	f885 86d6 	strb.w	r8, [r5, #1750]	; 0x6d6
 8006e60:	4620      	mov	r0, r4
 8006e62:	f8c5 96cc 	str.w	r9, [r5, #1740]	; 0x6cc
 8006e66:	f008 fb2b 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver2.setXY(351, 393);
 8006e6a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8006e6c:	f240 1289 	movw	r2, #393	; 0x189
 8006e70:	f240 115f 	movw	r1, #351	; 0x15f
 8006e74:	f7fb fde0 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    toDriver2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 8006e78:	9818      	ldr	r0, [sp, #96]	; 0x60
 8006e7a:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 8006e7e:	4632      	mov	r2, r6
 8006e80:	a940      	add	r1, sp, #256	; 0x100
 8006e82:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 8006e86:	f00a ffe9 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006e8a:	4620      	mov	r0, r4
 8006e8c:	9918      	ldr	r1, [sp, #96]	; 0x60
 8006e8e:	f885 870a 	strb.w	r8, [r5, #1802]	; 0x70a
        visible = vis;
 8006e92:	f885 86fd 	strb.w	r8, [r5, #1789]	; 0x6fd
 8006e96:	f8c5 9700 	str.w	r9, [r5, #1792]	; 0x700
 8006e9a:	f008 fb11 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8006e9e:	4658      	mov	r0, fp
 8006ea0:	b045      	add	sp, #276	; 0x114
 8006ea2:	ecbd 8b10 	vpop	{d8-d15}
 8006ea6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006eaa:	bf00      	nop
 8006eac:	08028208 	.word	0x08028208
 8006eb0:	ffffea00 	.word	0xffffea00
 8006eb4:	2000ef78 	.word	0x2000ef78
 8006eb8:	2000ef80 	.word	0x2000ef80
 8006ebc:	08028192 	.word	0x08028192

08006ec0 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8006ec0:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8006ec2:	4770      	bx	lr

08006ec4 <_ZN21MissionSelectViewBase21onChassisResetClickedEv>:
     * Virtual Action Handlers
     */
    virtual void onChassisResetClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ec4:	4770      	bx	lr

08006ec6 <_ZN21MissionSelectViewBase16onIdleBtnClickedEv>:
    virtual void onIdleBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ec6:	4770      	bx	lr

08006ec8 <_ZN21MissionSelectViewBase24onAccelerationBtnClickedEv>:
    virtual void onAccelerationBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ec8:	4770      	bx	lr

08006eca <_ZN21MissionSelectViewBase19onSkidpadBtnClickedEv>:
    virtual void onSkidpadBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006eca:	4770      	bx	lr

08006ecc <_ZN21MissionSelectViewBase21onAutocrossBtnClickedEv>:
    virtual void onAutocrossBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ecc:	4770      	bx	lr

08006ece <_ZN21MissionSelectViewBase22onTrackdriveBtnClickedEv>:
    virtual void onTrackdriveBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ece:	4770      	bx	lr

08006ed0 <_ZN21MissionSelectViewBase19onEbsTestBtnClickedEv>:
    virtual void onEbsTestBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ed0:	4770      	bx	lr

08006ed2 <_ZN21MissionSelectViewBase22onInspectionBtnClickedEv>:
    virtual void onInspectionBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ed2:	4770      	bx	lr

08006ed4 <_ZN21MissionSelectViewBase18onManualBtnClickedEv>:
    virtual void onManualBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ed4:	4770      	bx	lr

08006ed6 <_ZN21MissionSelectViewBase17onDebugBtnClickedEv>:
    virtual void onDebugBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8006ed6:	4770      	bx	lr

08006ed8 <_ZN21MissionSelectViewBaseD1Ev>:
}

MissionSelectViewBase::~MissionSelectViewBase()
{

}
 8006ed8:	4770      	bx	lr

08006eda <_ZN21MissionSelectViewBase11setupScreenEv>:

void MissionSelectViewBase::setupScreen()
{

}
 8006eda:	4770      	bx	lr

08006edc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8006edc:	4770      	bx	lr

08006ede <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8006ede:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8006ee2:	b14b      	cbz	r3, 8006ef8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8006ee4:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8006ee8:	6812      	ldr	r2, [r2, #0]
 8006eea:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8006eec:	b13b      	cbz	r3, 8006efe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8006eee:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8006ef2:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
 8006ef4:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8006ef6:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8006ef8:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8006efc:	e7f4      	b.n	8006ee8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8006efe:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8006f02:	e7f6      	b.n	8006ef2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08006f04 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 8006f04:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8006f06:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006f0a:	b13b      	cbz	r3, 8006f1c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x18>
 8006f0c:	f100 03c4 	add.w	r3, r0, #196	; 0xc4
 8006f10:	681b      	ldr	r3, [r3, #0]
        color = newColor;
 8006f12:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 8006f16:	f7ff ffe2 	bl	8006ede <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8006f1a:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 8006f1c:	f100 03c0 	add.w	r3, r0, #192	; 0xc0
 8006f20:	e7f6      	b.n	8006f10 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

08006f22 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006f22:	4770      	bx	lr

08006f24 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8006f24:	4770      	bx	lr

08006f26 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 8006f26:	4770      	bx	lr

08006f28 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f28:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f2a:	68c2      	ldr	r2, [r0, #12]
 8006f2c:	6844      	ldr	r4, [r0, #4]
 8006f2e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f30:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f32:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f36:	07d2      	lsls	r2, r2, #31
 8006f38:	bf48      	it	mi
 8006f3a:	5962      	ldrmi	r2, [r4, r5]
 8006f3c:	689b      	ldr	r3, [r3, #8]
    }
 8006f3e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f40:	bf48      	it	mi
 8006f42:	58d3      	ldrmi	r3, [r2, r3]
 8006f44:	4718      	bx	r3

08006f46 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f46:	6843      	ldr	r3, [r0, #4]
 8006f48:	b12b      	cbz	r3, 8006f56 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8006f4a:	6883      	ldr	r3, [r0, #8]
 8006f4c:	b92b      	cbnz	r3, 8006f5a <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8006f4e:	68c0      	ldr	r0, [r0, #12]
 8006f50:	f000 0001 	and.w	r0, r0, #1
 8006f54:	4770      	bx	lr
 8006f56:	4618      	mov	r0, r3
 8006f58:	4770      	bx	lr
 8006f5a:	2001      	movs	r0, #1
    }
 8006f5c:	4770      	bx	lr

08006f5e <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8006f5e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f60:	68c2      	ldr	r2, [r0, #12]
 8006f62:	6844      	ldr	r4, [r0, #4]
 8006f64:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8006f66:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8006f68:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8006f6c:	07d2      	lsls	r2, r2, #31
 8006f6e:	bf48      	it	mi
 8006f70:	5962      	ldrmi	r2, [r4, r5]
 8006f72:	689b      	ldr	r3, [r3, #8]
    }
 8006f74:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8006f76:	bf48      	it	mi
 8006f78:	58d3      	ldrmi	r3, [r2, r3]
 8006f7a:	4718      	bx	r3

08006f7c <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8006f7c:	6843      	ldr	r3, [r0, #4]
 8006f7e:	b12b      	cbz	r3, 8006f8c <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8006f80:	6883      	ldr	r3, [r0, #8]
 8006f82:	b92b      	cbnz	r3, 8006f90 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8006f84:	68c0      	ldr	r0, [r0, #12]
 8006f86:	f000 0001 	and.w	r0, r0, #1
 8006f8a:	4770      	bx	lr
 8006f8c:	4618      	mov	r0, r3
 8006f8e:	4770      	bx	lr
 8006f90:	2001      	movs	r0, #1
    }
 8006f92:	4770      	bx	lr

08006f94 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8006f94:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 8006f98:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8006f9c:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8006fa0:	4770      	bx	lr

08006fa2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8006fa2:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8006fa6:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8006faa:	4770      	bx	lr

08006fac <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8006fac:	b510      	push	{r4, lr}
 8006fae:	2178      	movs	r1, #120	; 0x78
 8006fb0:	4604      	mov	r4, r0
 8006fb2:	f01f f9b5 	bl	8026320 <_ZdlPvj>
 8006fb6:	4620      	mov	r0, r4
 8006fb8:	bd10      	pop	{r4, pc}

08006fba <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 8006fba:	b510      	push	{r4, lr}
 8006fbc:	21c8      	movs	r1, #200	; 0xc8
 8006fbe:	4604      	mov	r4, r0
 8006fc0:	f01f f9ae 	bl	8026320 <_ZdlPvj>
 8006fc4:	4620      	mov	r0, r4
 8006fc6:	bd10      	pop	{r4, pc}

08006fc8 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8006fc8:	b510      	push	{r4, lr}
 8006fca:	2110      	movs	r1, #16
 8006fcc:	4604      	mov	r4, r0
 8006fce:	f01f f9a7 	bl	8026320 <_ZdlPvj>
 8006fd2:	4620      	mov	r0, r4
 8006fd4:	bd10      	pop	{r4, pc}

08006fd6 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8006fd6:	b510      	push	{r4, lr}
 8006fd8:	2110      	movs	r1, #16
 8006fda:	4604      	mov	r4, r0
 8006fdc:	f01f f9a0 	bl	8026320 <_ZdlPvj>
 8006fe0:	4620      	mov	r0, r4
 8006fe2:	bd10      	pop	{r4, pc}

08006fe4 <_ZN21MissionSelectViewBaseD0Ev>:
MissionSelectViewBase::~MissionSelectViewBase()
 8006fe4:	b510      	push	{r4, lr}
}
 8006fe6:	f240 418c 	movw	r1, #1164	; 0x48c
MissionSelectViewBase::~MissionSelectViewBase()
 8006fea:	4604      	mov	r4, r0
}
 8006fec:	f01f f998 	bl	8026320 <_ZdlPvj>
 8006ff0:	4620      	mov	r0, r4
 8006ff2:	bd10      	pop	{r4, pc}

08006ff4 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MissionSelectViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8006ff4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8006ff6:	f100 036c 	add.w	r3, r0, #108	; 0x6c
 8006ffa:	4299      	cmp	r1, r3
{
 8006ffc:	4604      	mov	r4, r0
 8006ffe:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8007000:	d103      	bne.n	800700a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007002:	f00d fdf9 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromMissionSelectToCompetitionScreen
        //When btnNextPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards East
        application().gotoCompetitionScreenScreenSlideTransitionEast();
 8007006:	f7fd fa9f 	bl	8004548 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>
    }
    if (&src == &idleBtn)
 800700a:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 800700e:	429d      	cmp	r5, r3
 8007010:	d103      	bne.n	800701a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
    {
        //IdleMission
        //When idleBtn clicked call virtual function
        //Call onIdleBtnClicked
        onIdleBtnClicked();
 8007012:	6823      	ldr	r3, [r4, #0]
 8007014:	4620      	mov	r0, r4
 8007016:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007018:	4798      	blx	r3
    }
    if (&src == &accelerationBtn)
 800701a:	f504 7365 	add.w	r3, r4, #916	; 0x394
 800701e:	429d      	cmp	r5, r3
 8007020:	d103      	bne.n	800702a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
    {
        //AccelerationMission
        //When accelerationBtn clicked call virtual function
        //Call onAccelerationBtnClicked
        onAccelerationBtnClicked();
 8007022:	6823      	ldr	r3, [r4, #0]
 8007024:	4620      	mov	r0, r4
 8007026:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8007028:	4798      	blx	r3
    }
    if (&src == &skidpadBtn)
 800702a:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 800702e:	429d      	cmp	r5, r3
 8007030:	d103      	bne.n	800703a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
    {
        //SkidpadMission
        //When skidpadBtn clicked call virtual function
        //Call onSkidpadBtnClicked
        onSkidpadBtnClicked();
 8007032:	6823      	ldr	r3, [r4, #0]
 8007034:	4620      	mov	r0, r4
 8007036:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007038:	4798      	blx	r3
    }
    if (&src == &autocrossBtn)
 800703a:	f204 4324 	addw	r3, r4, #1060	; 0x424
 800703e:	429d      	cmp	r5, r3
 8007040:	d103      	bne.n	800704a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
    {
        //AutocrossMission
        //When autocrossBtn clicked call virtual function
        //Call onAutocrossBtnClicked
        onAutocrossBtnClicked();
 8007042:	6823      	ldr	r3, [r4, #0]
 8007044:	4620      	mov	r0, r4
 8007046:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8007048:	4798      	blx	r3
    }
    if (&src == &trackdriveBtn)
 800704a:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 800704e:	429d      	cmp	r5, r3
 8007050:	d103      	bne.n	800705a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
    {
        //TrackdriveMission
        //When trackdriveBtn clicked call virtual function
        //Call onTrackdriveBtnClicked
        onTrackdriveBtnClicked();
 8007052:	6823      	ldr	r3, [r4, #0]
 8007054:	4620      	mov	r0, r4
 8007056:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007058:	4798      	blx	r3
    }
    if (&src == &ebsTestBtn)
 800705a:	f504 731d 	add.w	r3, r4, #628	; 0x274
 800705e:	429d      	cmp	r5, r3
 8007060:	d103      	bne.n	800706a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
    {
        //EbtTestMission
        //When ebsTestBtn clicked call virtual function
        //Call onEbsTestBtnClicked
        onEbsTestBtnClicked();
 8007062:	6823      	ldr	r3, [r4, #0]
 8007064:	4620      	mov	r0, r4
 8007066:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8007068:	4798      	blx	r3
    }
    if (&src == &inspectionBtn)
 800706a:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 800706e:	429d      	cmp	r5, r3
 8007070:	d103      	bne.n	800707a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
    {
        //InspectionMission
        //When inspectionBtn clicked call virtual function
        //Call onInspectionBtnClicked
        onInspectionBtnClicked();
 8007072:	6823      	ldr	r3, [r4, #0]
 8007074:	4620      	mov	r0, r4
 8007076:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007078:	4798      	blx	r3
    }
    if (&src == &manualBtn)
 800707a:	f504 7341 	add.w	r3, r4, #772	; 0x304
 800707e:	429d      	cmp	r5, r3
 8007080:	d103      	bne.n	800708a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x96>
    {
        //ManualMission
        //When manualBtn clicked call virtual function
        //Call onManualBtnClicked
        onManualBtnClicked();
 8007082:	6823      	ldr	r3, [r4, #0]
 8007084:	4620      	mov	r0, r4
 8007086:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007088:	4798      	blx	r3
    }
    if (&src == &debugBtn)
 800708a:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 800708e:	429d      	cmp	r5, r3
 8007090:	d103      	bne.n	800709a <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa6>
    {
        //DebugMission
        //When debugBtn clicked call virtual function
        //Call onDebugBtnClicked
        onDebugBtnClicked();
 8007092:	6823      	ldr	r3, [r4, #0]
 8007094:	4620      	mov	r0, r4
 8007096:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007098:	4798      	blx	r3
    }
    if (&src == &btnPrevPage)
 800709a:	34a0      	adds	r4, #160	; 0xa0
 800709c:	42a5      	cmp	r5, r4
 800709e:	d105      	bne.n	80070ac <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb8>
 80070a0:	f00d fdaa 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromMissionSelectToMainInfotaiment
        //When btnPrevPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards West
        application().gotoMainInfotaimentScreenSlideTransitionWest();
    }
}
 80070a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMainInfotaimentScreenSlideTransitionWest();
 80070a8:	f7fd ba0e 	b.w	80044c8 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>
}
 80070ac:	bd38      	pop	{r3, r4, r5, pc}

080070ae <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 80070ae:	b510      	push	{r4, lr}
 80070b0:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 80070b2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80070b4:	b150      	cbz	r0, 80070cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 80070b6:	6803      	ldr	r3, [r0, #0]
 80070b8:	68db      	ldr	r3, [r3, #12]
 80070ba:	4798      	blx	r3
 80070bc:	b130      	cbz	r0, 80070cc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 80070be:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80070c0:	6803      	ldr	r3, [r0, #0]
 80070c2:	4621      	mov	r1, r4
 80070c4:	689b      	ldr	r3, [r3, #8]
        }
    }
 80070c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 80070ca:	4718      	bx	r3
    }
 80070cc:	bd10      	pop	{r4, pc}

080070ce <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MissionSelectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &chassisResetBtn)
 80070ce:	f500 728e 	add.w	r2, r0, #284	; 0x11c
 80070d2:	428a      	cmp	r2, r1
 80070d4:	d102      	bne.n	80070dc <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ChassisReset
        //When chassisResetBtn clicked call virtual function
        //Call onChassisResetClicked
        onChassisResetClicked();
 80070d6:	6803      	ldr	r3, [r0, #0]
 80070d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80070da:	4718      	bx	r3
    }
}
 80070dc:	4770      	bx	lr

080070de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 80070de:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80070e0:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 80070e2:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 80070e6:	4604      	mov	r4, r0
 80070e8:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80070ea:	b99b      	cbnz	r3, 8007114 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 80070ec:	b98e      	cbnz	r6, 8007112 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 80070ee:	fab3 f383 	clz	r3, r3
 80070f2:	095b      	lsrs	r3, r3, #5
 80070f4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 80070f8:	6823      	ldr	r3, [r4, #0]
 80070fa:	4620      	mov	r0, r4
 80070fc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8007100:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8007102:	6823      	ldr	r3, [r4, #0]
 8007104:	4620      	mov	r0, r4
 8007106:	695b      	ldr	r3, [r3, #20]
 8007108:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800710a:	b116      	cbz	r6, 8007112 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 800710c:	792b      	ldrb	r3, [r5, #4]
 800710e:	2b01      	cmp	r3, #1
 8007110:	d003      	beq.n	800711a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8007112:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8007114:	2e00      	cmp	r6, #0
 8007116:	d0fc      	beq.n	8007112 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8007118:	e7e9      	b.n	80070ee <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 800711a:	6823      	ldr	r3, [r4, #0]
 800711c:	4620      	mov	r0, r4
 800711e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8007122:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8007126:	4718      	bx	r3

08007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 8007128:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 800712a:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 800712c:	4604      	mov	r4, r0
        setWidth(width);
 800712e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    void setWidthHeight(int16_t width, int16_t height)
 8007130:	4615      	mov	r5, r2
        setWidth(width);
 8007132:	4798      	blx	r3
        setHeight(height);
 8007134:	6823      	ldr	r3, [r4, #0]
 8007136:	4629      	mov	r1, r5
 8007138:	4620      	mov	r0, r4
 800713a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 800713c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8007140:	4718      	bx	r3
	...

08007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8007144:	4b1a      	ldr	r3, [pc, #104]	; (80071b0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8007146:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8007148:	881b      	ldrh	r3, [r3, #0]
 800714a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 800714c:	428b      	cmp	r3, r1
    void updateTextPosition()
 800714e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8007150:	d92a      	bls.n	80071a8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8007152:	4b18      	ldr	r3, [pc, #96]	; (80071b4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8007154:	681b      	ldr	r3, [r3, #0]
 8007156:	b92b      	cbnz	r3, 8007164 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8007158:	4b17      	ldr	r3, [pc, #92]	; (80071b8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 800715a:	4a18      	ldr	r2, [pc, #96]	; (80071bc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 800715c:	4818      	ldr	r0, [pc, #96]	; (80071c0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 800715e:	216c      	movs	r1, #108	; 0x6c
 8007160:	f01f f90c 	bl	802637c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007164:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8007168:	4b16      	ldr	r3, [pc, #88]	; (80071c4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800716a:	681b      	ldr	r3, [r3, #0]
 800716c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8007170:	4b15      	ldr	r3, [pc, #84]	; (80071c8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8007172:	6818      	ldr	r0, [r3, #0]
 8007174:	f000 fea4 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8007178:	682b      	ldr	r3, [r5, #0]
 800717a:	9001      	str	r0, [sp, #4]
 800717c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800717e:	4628      	mov	r0, r5
 8007180:	4798      	blx	r3
 8007182:	682b      	ldr	r3, [r5, #0]
 8007184:	9901      	ldr	r1, [sp, #4]
 8007186:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8007188:	4604      	mov	r4, r0
 800718a:	4628      	mov	r0, r5
 800718c:	4798      	blx	r3
 800718e:	682b      	ldr	r3, [r5, #0]
 8007190:	9901      	ldr	r1, [sp, #4]
 8007192:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007194:	fb14 f400 	smulbb	r4, r4, r0
 8007198:	4628      	mov	r0, r5
 800719a:	4798      	blx	r3
 800719c:	b2a4      	uxth	r4, r4
 800719e:	4404      	add	r4, r0
 80071a0:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 80071a4:	b002      	add	sp, #8
 80071a6:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 80071a8:	2300      	movs	r3, #0
 80071aa:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 80071ae:	e7f9      	b.n	80071a4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 80071b0:	2000ef78 	.word	0x2000ef78
 80071b4:	2000ef74 	.word	0x2000ef74
 80071b8:	08028058 	.word	0x08028058
 80071bc:	0802809a 	.word	0x0802809a
 80071c0:	080280d5 	.word	0x080280d5
 80071c4:	2000ef7c 	.word	0x2000ef7c
 80071c8:	2000ef80 	.word	0x2000ef80

080071cc <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 80071cc:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    TextButtonStyle()
 80071d0:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 80071d2:	4606      	mov	r6, r0
 80071d4:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 80071d6:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 80071da:	2500      	movs	r5, #0
 80071dc:	8483      	strh	r3, [r0, #36]	; 0x24
 80071de:	4b19      	ldr	r3, [pc, #100]	; (8007244 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x78>)
 80071e0:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 80071e2:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80071e6:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 80071ea:	e9c0 5505 	strd	r5, r5, [r0, #20]
 80071ee:	e9c0 5507 	strd	r5, r5, [r0, #28]
 80071f2:	6305      	str	r5, [r0, #48]	; 0x30
 80071f4:	f846 3b34 	str.w	r3, [r6], #52
 80071f8:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 80071fa:	4630      	mov	r0, r6
 80071fc:	f7fb fda4 	bl	8002d48 <_ZN8touchgfx3BoxC1Ev>
 8007200:	4b11      	ldr	r3, [pc, #68]	; (8007248 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x7c>)
 8007202:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8007204:	462a      	mov	r2, r5
 8007206:	4629      	mov	r1, r5
 8007208:	4630      	mov	r0, r6
        : color(0)
 800720a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 800720e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8007212:	6625      	str	r5, [r4, #96]	; 0x60
 8007214:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8007218:	f7fb fc0e 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800721c:	4631      	mov	r1, r6
 800721e:	4620      	mov	r0, r4
        : T()
 8007220:	4626      	mov	r6, r4
 8007222:	f008 f94d 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8007226:	4b09      	ldr	r3, [pc, #36]	; (800724c <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x80>)
 8007228:	f846 3b78 	str.w	r3, [r6], #120
 800722c:	4630      	mov	r0, r6
 800722e:	f7fb fda7 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
        T::add(text);
 8007232:	4620      	mov	r0, r4
        : color(0)
 8007234:	e9c4 5530 	strd	r5, r5, [r4, #192]	; 0xc0
 8007238:	4631      	mov	r1, r6
 800723a:	f008 f941 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800723e:	4620      	mov	r0, r4
 8007240:	bd70      	pop	{r4, r5, r6, pc}
 8007242:	bf00      	nop
 8007244:	080292b0 	.word	0x080292b0
 8007248:	0802a1c4 	.word	0x0802a1c4
 800724c:	0802934c 	.word	0x0802934c

08007250 <_ZN21MissionSelectViewBaseC1Ev>:
MissionSelectViewBase::MissionSelectViewBase() :
 8007250:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007254:	ed2d 8b08 	vpush	{d8-d11}
 8007258:	4604      	mov	r4, r0
 800725a:	b08b      	sub	sp, #44	; 0x2c
    flexButtonCallback(this, &MissionSelectViewBase::flexButtonCallbackHandler)
 800725c:	4627      	mov	r7, r4
 800725e:	f04f 0800 	mov.w	r8, #0
 8007262:	f00f f949 	bl	80164f8 <_ZN8touchgfx6ScreenC1Ev>
 8007266:	4be9      	ldr	r3, [pc, #932]	; (800760c <_ZN21MissionSelectViewBaseC1Ev+0x3bc>)
 8007268:	f8c4 803c 	str.w	r8, [r4, #60]	; 0x3c
 800726c:	f847 3b40 	str.w	r3, [r7], #64
 8007270:	4638      	mov	r0, r7
 8007272:	f7fb fd69 	bl	8002d48 <_ZN8touchgfx3BoxC1Ev>
 8007276:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800727a:	4618      	mov	r0, r3
 800727c:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 8007280:	9301      	str	r3, [sp, #4]
 8007282:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
 8007286:	f7fb fc09 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 800728a:	4628      	mov	r0, r5
 800728c:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007290:	f7fb fc04 	bl	8002a9c <_ZN8touchgfx6ButtonC1Ev>
 8007294:	4658      	mov	r0, fp
 8007296:	f7fb fd73 	bl	8002d80 <_ZN8touchgfx8TextAreaC1Ev>
 800729a:	f504 7af2 	add.w	sl, r4, #484	; 0x1e4
 800729e:	4648      	mov	r0, r9
 80072a0:	f7ff ff94 	bl	80071cc <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80072a4:	4650      	mov	r0, sl
 80072a6:	f00b f8df 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072aa:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80072ae:	4618      	mov	r0, r3
 80072b0:	ee08 3a10 	vmov	s16, r3
 80072b4:	f00b f8d8 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072b8:	f504 731d 	add.w	r3, r4, #628	; 0x274
 80072bc:	4618      	mov	r0, r3
 80072be:	ee08 3a90 	vmov	s17, r3
 80072c2:	f00b f8d1 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072c6:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 80072ca:	4618      	mov	r0, r3
 80072cc:	ee09 3a10 	vmov	s18, r3
 80072d0:	f00b f8ca 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072d4:	f504 7341 	add.w	r3, r4, #772	; 0x304
 80072d8:	4618      	mov	r0, r3
 80072da:	ee09 3a90 	vmov	s19, r3
 80072de:	f00b f8c3 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072e2:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 80072e6:	4618      	mov	r0, r3
 80072e8:	ee0a 3a10 	vmov	s20, r3
 80072ec:	f00b f8bc 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072f0:	f504 7365 	add.w	r3, r4, #916	; 0x394
 80072f4:	4618      	mov	r0, r3
 80072f6:	ee0a 3a90 	vmov	s21, r3
 80072fa:	f00b f8b5 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80072fe:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 8007302:	4618      	mov	r0, r3
 8007304:	ee0b 3a10 	vmov	s22, r3
 8007308:	f00b f8ae 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800730c:	f204 4324 	addw	r3, r4, #1060	; 0x424
 8007310:	4618      	mov	r0, r3
 8007312:	ee0b 3a90 	vmov	s23, r3
 8007316:	f00b f8a7 	bl	8012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800731a:	4abd      	ldr	r2, [pc, #756]	; (8007610 <_ZN21MissionSelectViewBaseC1Ev+0x3c0>)
 800731c:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 8007320:	4abc      	ldr	r2, [pc, #752]	; (8007614 <_ZN21MissionSelectViewBaseC1Ev+0x3c4>)
 8007322:	f8c4 2474 	str.w	r2, [r4, #1140]	; 0x474
 8007326:	4abc      	ldr	r2, [pc, #752]	; (8007618 <_ZN21MissionSelectViewBaseC1Ev+0x3c8>)
 8007328:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
 800732c:	4abb      	ldr	r2, [pc, #748]	; (800761c <_ZN21MissionSelectViewBaseC1Ev+0x3cc>)
 800732e:	f8c4 8478 	str.w	r8, [r4, #1144]	; 0x478
 8007332:	f8c4 2484 	str.w	r2, [r4, #1156]	; 0x484
 8007336:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
        setXY(x, y);
 800733a:	4642      	mov	r2, r8
 800733c:	4641      	mov	r1, r8
 800733e:	4638      	mov	r0, r7
 8007340:	f8c4 4470 	str.w	r4, [r4, #1136]	; 0x470
 8007344:	f8c4 4480 	str.w	r4, [r4, #1152]	; 0x480
 8007348:	f7fb fb76 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800734c:	4638      	mov	r0, r7
 800734e:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8007352:	f44f 7148 	mov.w	r1, #800	; 0x320
 8007356:	1d26      	adds	r6, r4, #4
 8007358:	f7ff fee6 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        color = newColor;
 800735c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8007360:	66a2      	str	r2, [r4, #104]	; 0x68
 8007362:	4639      	mov	r1, r7
 8007364:	4630      	mov	r0, r6
 8007366:	f008 f8ab 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 800736a:	9b01      	ldr	r3, [sp, #4]
 800736c:	f240 129f 	movw	r2, #415	; 0x19f
 8007370:	4618      	mov	r0, r3
 8007372:	f240 21df 	movw	r1, #735	; 0x2df
 8007376:	f7fb fb5f 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 800737a:	9b01      	ldr	r3, [sp, #4]
 800737c:	220b      	movs	r2, #11
 800737e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8007382:	f8ad 2020 	strh.w	r2, [sp, #32]
 8007386:	a907      	add	r1, sp, #28
 8007388:	aa08      	add	r2, sp, #32
 800738a:	4618      	mov	r0, r3
 800738c:	f00a fd66 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007390:	9b01      	ldr	r3, [sp, #4]
    btnNextPage.setAction(buttonCallback);
 8007392:	f204 476c 	addw	r7, r4, #1132	; 0x46c
 8007396:	4619      	mov	r1, r3
 8007398:	4630      	mov	r0, r6
 800739a:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 800739e:	f008 f88f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 80073a2:	4628      	mov	r0, r5
 80073a4:	f240 129f 	movw	r2, #415	; 0x19f
 80073a8:	2111      	movs	r1, #17
 80073aa:	f7fb fb45 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 80073ae:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 80073b0:	aa08      	add	r2, sp, #32
 80073b2:	a907      	add	r1, sp, #28
 80073b4:	4628      	mov	r0, r5
 80073b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80073ba:	f8ad 3020 	strh.w	r3, [sp, #32]
 80073be:	f00a fd4d 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80073c2:	4629      	mov	r1, r5
 80073c4:	4630      	mov	r0, r6
 80073c6:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
        color = newColor;
 80073ca:	f04f 35ff 	mov.w	r5, #4294967295
 80073ce:	f008 f877 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelSelectMission.setXY(258, 17);
 80073d2:	2211      	movs	r2, #17
 80073d4:	4658      	mov	r0, fp
 80073d6:	f44f 7181 	mov.w	r1, #258	; 0x102
 80073da:	f7fb fb2d 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 80073de:	f8a4 8108 	strh.w	r8, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 80073e2:	a802      	add	r0, sp, #8
 80073e4:	4659      	mov	r1, fp
        color = newColor;
 80073e6:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 80073ea:	f00a fa3f 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80073ee:	a802      	add	r0, sp, #8
 80073f0:	c807      	ldmia	r0, {r0, r1, r2}
 80073f2:	f504 7388 	add.w	r3, r4, #272	; 0x110
 80073f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80073fa:	4b89      	ldr	r3, [pc, #548]	; (8007620 <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 80073fc:	9308      	str	r3, [sp, #32]
 80073fe:	2263      	movs	r2, #99	; 0x63
    labelSelectMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2AM));
 8007400:	a908      	add	r1, sp, #32
 8007402:	4658      	mov	r0, fp
 8007404:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8007408:	f00a fcca 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800740c:	4659      	mov	r1, fp
 800740e:	4630      	mov	r0, r6
 8007410:	f008 f856 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 8007414:	f504 70a8 	add.w	r0, r4, #336	; 0x150
        setXY(x, y);
 8007418:	4642      	mov	r2, r8
 800741a:	4641      	mov	r1, r8
 800741c:	9001      	str	r0, [sp, #4]
 800741e:	f7fb fb0b 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8007422:	9801      	ldr	r0, [sp, #4]
 8007424:	21d6      	movs	r1, #214	; 0xd6
 8007426:	f240 122b 	movw	r2, #299	; 0x12b
 800742a:	f7ff fe7d 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        borderSize = size;
 800742e:	2205      	movs	r2, #5
 8007430:	f8a4 2180 	strh.w	r2, [r4, #384]	; 0x180
        up = colorReleased;
 8007434:	4a7b      	ldr	r2, [pc, #492]	; (8007624 <_ZN21MissionSelectViewBaseC1Ev+0x3d4>)
 8007436:	f8c4 2184 	str.w	r2, [r4, #388]	; 0x184
        down = colorPressed;
 800743a:	f46f 73e6 	mvn.w	r3, #460	; 0x1cc
 800743e:	f5a2 1268 	sub.w	r2, r2, #3801088	; 0x3a0000
 8007442:	441a      	add	r2, r3
 8007444:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
        borderUp = borderColorReleased;
 8007448:	f5a2 4288 	sub.w	r2, r2, #17408	; 0x4400
 800744c:	3a66      	subs	r2, #102	; 0x66
 800744e:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
        borderDown = borderColorPressed;
 8007452:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 8007456:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 800745a:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 800745e:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8007462:	4648      	mov	r0, r9
 8007464:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 8007468:	4790      	blx	r2
 800746a:	4b6d      	ldr	r3, [pc, #436]	; (8007620 <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 800746c:	9308      	str	r3, [sp, #32]
        text.setTypedText(t);
 800746e:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8007472:	2357      	movs	r3, #87	; 0x57
 8007474:	a908      	add	r1, sp, #32
 8007476:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800747a:	9001      	str	r0, [sp, #4]
 800747c:	f00a fc90 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8007480:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	; 0x126
 8007484:	f9b4 1124 	ldrsh.w	r1, [r4, #292]	; 0x124
 8007488:	9801      	ldr	r0, [sp, #4]
 800748a:	f7ff fe4d 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 800748e:	9801      	ldr	r0, [sp, #4]
 8007490:	4641      	mov	r1, r8
 8007492:	225d      	movs	r2, #93	; 0x5d
 8007494:	f7fb fad0 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8007498:	9801      	ldr	r0, [sp, #4]
 800749a:	f240 122b 	movw	r2, #299	; 0x12b
 800749e:	21d6      	movs	r1, #214	; 0xd6
 80074a0:	f7ff fe42 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
        handlePressedUpdated();
 80074a4:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 80074a6:	e9c4 5577 	strd	r5, r5, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 80074aa:	f7ff fd2b 	bl	8006f04 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    chassisResetBtn.setAction(flexButtonCallback);
 80074ae:	f204 437c 	addw	r3, r4, #1148	; 0x47c
        action = &callback;
 80074b2:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
        setXY(x, y);
 80074b6:	4648      	mov	r0, r9
 80074b8:	2254      	movs	r2, #84	; 0x54
 80074ba:	2111      	movs	r1, #17
 80074bc:	f7fb fabc 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80074c0:	f240 122b 	movw	r2, #299	; 0x12b
 80074c4:	4648      	mov	r0, r9
 80074c6:	21d6      	movs	r1, #214	; 0xd6
 80074c8:	f7ff fe2e 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 80074cc:	4649      	mov	r1, r9
 80074ce:	4630      	mov	r0, r6
 80074d0:	f007 fff6 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    idleBtn.setXY(270, 84);
 80074d4:	4650      	mov	r0, sl
 80074d6:	2254      	movs	r2, #84	; 0x54
 80074d8:	f44f 7187 	mov.w	r1, #270	; 0x10e
 80074dc:	f04f 0902 	mov.w	r9, #2
 80074e0:	f04f 0803 	mov.w	r8, #3
 80074e4:	f7fb faa8 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    idleBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80074e8:	aa08      	add	r2, sp, #32
 80074ea:	a907      	add	r1, sp, #28
 80074ec:	4650      	mov	r0, sl
 80074ee:	f8ad 901c 	strh.w	r9, [sp, #28]
 80074f2:	f8ad 8020 	strh.w	r8, [sp, #32]
 80074f6:	f00a fcb1 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80074fa:	2352      	movs	r3, #82	; 0x52
 80074fc:	f8a4 321c 	strh.w	r3, [r4, #540]	; 0x21c
        updateTextPosition();
 8007500:	4650      	mov	r0, sl
 8007502:	f7ff fe1f 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007506:	4651      	mov	r1, sl
 8007508:	4630      	mov	r0, r6
        colorPressed = col;
 800750a:	e9c4 5588 	strd	r5, r5, [r4, #544]	; 0x220
 800750e:	f8c4 720c 	str.w	r7, [r4, #524]	; 0x20c
 8007512:	f007 ffd5 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    trackdriveBtn.setXY(532, 84);
 8007516:	ee18 0a10 	vmov	r0, s16
 800751a:	2254      	movs	r2, #84	; 0x54
 800751c:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007520:	f7fb fa8a 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    trackdriveBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007524:	aa08      	add	r2, sp, #32
 8007526:	a907      	add	r1, sp, #28
 8007528:	ee18 0a10 	vmov	r0, s16
 800752c:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007530:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007534:	f00a fc92 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007538:	234a      	movs	r3, #74	; 0x4a
 800753a:	f8a4 3264 	strh.w	r3, [r4, #612]	; 0x264
        updateTextPosition();
 800753e:	ee18 0a10 	vmov	r0, s16
 8007542:	f7ff fdff 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007546:	ee18 1a10 	vmov	r1, s16
 800754a:	4630      	mov	r0, r6
        colorPressed = col;
 800754c:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
 8007550:	f8c4 7254 	str.w	r7, [r4, #596]	; 0x254
 8007554:	f007 ffb4 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ebsTestBtn.setXY(532, 164);
 8007558:	ee18 0a90 	vmov	r0, s17
 800755c:	22a4      	movs	r2, #164	; 0xa4
 800755e:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007562:	f7fb fa69 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    ebsTestBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007566:	aa08      	add	r2, sp, #32
 8007568:	a907      	add	r1, sp, #28
 800756a:	ee18 0a90 	vmov	r0, s17
 800756e:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007572:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007576:	f00a fc71 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800757a:	2348      	movs	r3, #72	; 0x48
 800757c:	f8a4 32ac 	strh.w	r3, [r4, #684]	; 0x2ac
        updateTextPosition();
 8007580:	ee18 0a90 	vmov	r0, s17
 8007584:	f7ff fdde 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007588:	ee18 1a90 	vmov	r1, s17
 800758c:	4630      	mov	r0, r6
        colorPressed = col;
 800758e:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
 8007592:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 8007596:	f007 ff93 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    inspectionBtn.setXY(532, 244);
 800759a:	ee19 0a10 	vmov	r0, s18
 800759e:	22f4      	movs	r2, #244	; 0xf4
 80075a0:	f44f 7105 	mov.w	r1, #532	; 0x214
 80075a4:	f7fb fa48 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    inspectionBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80075a8:	aa08      	add	r2, sp, #32
 80075aa:	a907      	add	r1, sp, #28
 80075ac:	ee19 0a10 	vmov	r0, s18
 80075b0:	f8ad 901c 	strh.w	r9, [sp, #28]
 80075b4:	f8ad 8020 	strh.w	r8, [sp, #32]
 80075b8:	f00a fc50 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80075bc:	2346      	movs	r3, #70	; 0x46
 80075be:	f8a4 32f4 	strh.w	r3, [r4, #756]	; 0x2f4
        updateTextPosition();
 80075c2:	ee19 0a10 	vmov	r0, s18
 80075c6:	f7ff fdbd 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80075ca:	ee19 1a10 	vmov	r1, s18
 80075ce:	4630      	mov	r0, r6
        colorPressed = col;
 80075d0:	e9c4 55be 	strd	r5, r5, [r4, #760]	; 0x2f8
 80075d4:	f8c4 72e4 	str.w	r7, [r4, #740]	; 0x2e4
 80075d8:	f007 ff72 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    manualBtn.setXY(532, 323);
 80075dc:	ee19 0a90 	vmov	r0, s19
 80075e0:	f240 1243 	movw	r2, #323	; 0x143
 80075e4:	f44f 7105 	mov.w	r1, #532	; 0x214
 80075e8:	f7fb fa26 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    manualBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80075ec:	aa08      	add	r2, sp, #32
 80075ee:	a907      	add	r1, sp, #28
 80075f0:	ee19 0a90 	vmov	r0, s19
 80075f4:	f8ad 901c 	strh.w	r9, [sp, #28]
 80075f8:	f8ad 8020 	strh.w	r8, [sp, #32]
 80075fc:	f00a fc2e 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007600:	2344      	movs	r3, #68	; 0x44
 8007602:	f8a4 333c 	strh.w	r3, [r4, #828]	; 0x33c
        updateTextPosition();
 8007606:	ee19 0a90 	vmov	r0, s19
 800760a:	e00d      	b.n	8007628 <_ZN21MissionSelectViewBaseC1Ev+0x3d8>
 800760c:	08029418 	.word	0x08029418
 8007610:	080293e8 	.word	0x080293e8
 8007614:	08006ff5 	.word	0x08006ff5
 8007618:	08029400 	.word	0x08029400
 800761c:	080070cf 	.word	0x080070cf
 8007620:	08028208 	.word	0x08028208
 8007624:	ff3a7999 	.word	0xff3a7999
 8007628:	f7ff fd8c 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800762c:	ee19 1a90 	vmov	r1, s19
 8007630:	4630      	mov	r0, r6
        colorPressed = col;
 8007632:	e9c4 55d0 	strd	r5, r5, [r4, #832]	; 0x340
 8007636:	f8c4 732c 	str.w	r7, [r4, #812]	; 0x32c
 800763a:	f007 ff41 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    debugBtn.setXY(400, 405);
 800763e:	ee1a 0a10 	vmov	r0, s20
 8007642:	f240 1295 	movw	r2, #405	; 0x195
 8007646:	f44f 71c8 	mov.w	r1, #400	; 0x190
 800764a:	f7fb f9f5 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    debugBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800764e:	aa08      	add	r2, sp, #32
 8007650:	a907      	add	r1, sp, #28
 8007652:	ee1a 0a10 	vmov	r0, s20
 8007656:	f8ad 901c 	strh.w	r9, [sp, #28]
 800765a:	f8ad 8020 	strh.w	r8, [sp, #32]
 800765e:	f00a fbfd 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007662:	2342      	movs	r3, #66	; 0x42
 8007664:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        updateTextPosition();
 8007668:	ee1a 0a10 	vmov	r0, s20
 800766c:	f7ff fd6a 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007670:	ee1a 1a10 	vmov	r1, s20
 8007674:	4630      	mov	r0, r6
        colorPressed = col;
 8007676:	e9c4 55e2 	strd	r5, r5, [r4, #904]	; 0x388
 800767a:	f8c4 7374 	str.w	r7, [r4, #884]	; 0x374
 800767e:	f007 ff1f 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    accelerationBtn.setXY(270, 164);
 8007682:	ee1a 0a90 	vmov	r0, s21
 8007686:	22a4      	movs	r2, #164	; 0xa4
 8007688:	f44f 7187 	mov.w	r1, #270	; 0x10e
 800768c:	f7fb f9d4 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    accelerationBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007690:	aa08      	add	r2, sp, #32
 8007692:	a907      	add	r1, sp, #28
 8007694:	ee1a 0a90 	vmov	r0, s21
 8007698:	f8ad 901c 	strh.w	r9, [sp, #28]
 800769c:	f8ad 8020 	strh.w	r8, [sp, #32]
 80076a0:	f00a fbdc 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076a4:	2350      	movs	r3, #80	; 0x50
 80076a6:	f8a4 33cc 	strh.w	r3, [r4, #972]	; 0x3cc
        updateTextPosition();
 80076aa:	ee1a 0a90 	vmov	r0, s21
 80076ae:	f7ff fd49 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076b2:	ee1a 1a90 	vmov	r1, s21
 80076b6:	4630      	mov	r0, r6
        colorPressed = col;
 80076b8:	e9c4 55f4 	strd	r5, r5, [r4, #976]	; 0x3d0
 80076bc:	f8c4 73bc 	str.w	r7, [r4, #956]	; 0x3bc
 80076c0:	f007 fefe 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    skidpadBtn.setXY(270, 244);
 80076c4:	ee1b 0a10 	vmov	r0, s22
 80076c8:	22f4      	movs	r2, #244	; 0xf4
 80076ca:	f44f 7187 	mov.w	r1, #270	; 0x10e
 80076ce:	f7fb f9b3 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    skidpadBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80076d2:	aa08      	add	r2, sp, #32
 80076d4:	a907      	add	r1, sp, #28
 80076d6:	ee1b 0a10 	vmov	r0, s22
 80076da:	f8ad 901c 	strh.w	r9, [sp, #28]
 80076de:	f8ad 8020 	strh.w	r8, [sp, #32]
 80076e2:	f00a fbbb 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80076e6:	234e      	movs	r3, #78	; 0x4e
 80076e8:	f8a4 3414 	strh.w	r3, [r4, #1044]	; 0x414
        updateTextPosition();
 80076ec:	ee1b 0a10 	vmov	r0, s22
 80076f0:	f7ff fd28 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80076f4:	ee1b 1a10 	vmov	r1, s22
 80076f8:	4630      	mov	r0, r6
        color = col;
 80076fa:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
        colorPressed = col;
 80076fe:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
 8007702:	f8c4 7404 	str.w	r7, [r4, #1028]	; 0x404
 8007706:	f007 fedb 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    autocrossBtn.setXY(270, 323);
 800770a:	ee1b 0a90 	vmov	r0, s23
 800770e:	f240 1243 	movw	r2, #323	; 0x143
 8007712:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007716:	f7fb f98f 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
    autocrossBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800771a:	aa08      	add	r2, sp, #32
 800771c:	a907      	add	r1, sp, #28
 800771e:	ee1b 0a90 	vmov	r0, s23
 8007722:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007726:	f8ad 8020 	strh.w	r8, [sp, #32]
 800772a:	f00a fb97 	bl	8011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800772e:	234c      	movs	r3, #76	; 0x4c
        updateTextPosition();
 8007730:	ee1b 0a90 	vmov	r0, s23
 8007734:	f8a4 345c 	strh.w	r3, [r4, #1116]	; 0x45c
 8007738:	f7ff fd04 	bl	8007144 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800773c:	4630      	mov	r0, r6
 800773e:	ee1b 1a90 	vmov	r1, s23
        color = col;
 8007742:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
        colorPressed = col;
 8007746:	f8c4 5464 	str.w	r5, [r4, #1124]	; 0x464
 800774a:	f8c4 744c 	str.w	r7, [r4, #1100]	; 0x44c
 800774e:	f007 feb7 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007752:	4620      	mov	r0, r4
 8007754:	b00b      	add	sp, #44	; 0x2c
 8007756:	ecbd 8b08 	vpop	{d8-d11}
 800775a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800775e:	bf00      	nop

08007760 <_ZN15StartupViewBaseD1Ev>:
}

StartupViewBase::~StartupViewBase()
{

}
 8007760:	4770      	bx	lr

08007762 <_ZN15StartupViewBase11setupScreenEv>:

void StartupViewBase::setupScreen()
{

}
 8007762:	4770      	bx	lr

08007764 <_ZN15StartupViewBase15afterTransitionEv>:
void StartupViewBase::afterTransition()
{
    //fromStartupToInfotaiment
    //When screen transition ends delay
    //Delay for 2400 ms (144 Ticks)
    fromStartupToInfotaimentCounter = FROMSTARTUPTOINFOTAIMENT_DURATION;
 8007764:	2390      	movs	r3, #144	; 0x90
 8007766:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
}
 800776a:	4770      	bx	lr

0800776c <_ZN15StartupViewBaseD0Ev>:
StartupViewBase::~StartupViewBase()
 800776c:	b510      	push	{r4, lr}
}
 800776e:	21e4      	movs	r1, #228	; 0xe4
StartupViewBase::~StartupViewBase()
 8007770:	4604      	mov	r4, r0
}
 8007772:	f01e fdd5 	bl	8026320 <_ZdlPvj>
 8007776:	4620      	mov	r0, r4
 8007778:	bd10      	pop	{r4, pc}

0800777a <_ZN15StartupViewBase15handleTickEventEv>:

void StartupViewBase::handleTickEvent()
{
 800777a:	b508      	push	{r3, lr}
    if (fromStartupToInfotaimentCounter > 0)
 800777c:	f8b0 30e0 	ldrh.w	r3, [r0, #224]	; 0xe0
 8007780:	b153      	cbz	r3, 8007798 <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    {
        fromStartupToInfotaimentCounter--;
 8007782:	3b01      	subs	r3, #1
 8007784:	b29b      	uxth	r3, r3
 8007786:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
        if (fromStartupToInfotaimentCounter == 0)
 800778a:	b92b      	cbnz	r3, 8007798 <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    virtual void afterTransition();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800778c:	f00d fa34 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
                //When fromStartupToInfotaiment completed change screen to MainInfotaiment
                //Go to MainInfotaiment with screen transition towards East
                application().gotoMainInfotaimentScreenWipeTransitionEast();
        }
    }
}
 8007790:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
                application().gotoMainInfotaimentScreenWipeTransitionEast();
 8007794:	f7fc be88 	b.w	80044a8 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>
}
 8007798:	bd08      	pop	{r3, pc}
	...

0800779c <_ZN15StartupViewBaseC1Ev>:
StartupViewBase::StartupViewBase() :
 800779c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80077a0:	4604      	mov	r4, r0
 80077a2:	b086      	sub	sp, #24
    fromStartupToInfotaimentCounter(0)
 80077a4:	4626      	mov	r6, r4
 80077a6:	2500      	movs	r5, #0
 80077a8:	f00e fea6 	bl	80164f8 <_ZN8touchgfx6ScreenC1Ev>
 80077ac:	4b4e      	ldr	r3, [pc, #312]	; (80078e8 <_ZN15StartupViewBaseC1Ev+0x14c>)
 80077ae:	63e5      	str	r5, [r4, #60]	; 0x3c
 80077b0:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 80077b4:	4629      	mov	r1, r5
 80077b6:	2226      	movs	r2, #38	; 0x26
 80077b8:	4630      	mov	r0, r6
 80077ba:	f01e fe6b 	bl	8026494 <memset>
 80077be:	4630      	mov	r0, r6
 80077c0:	f7fb f95a 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 80077c4:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 80077c8:	4b48      	ldr	r3, [pc, #288]	; (80078ec <_ZN15StartupViewBaseC1Ev+0x150>)
 80077ca:	6423      	str	r3, [r4, #64]	; 0x40
 80077cc:	27ff      	movs	r7, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 80077ce:	2226      	movs	r2, #38	; 0x26
 80077d0:	4629      	mov	r1, r5
 80077d2:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 80077d6:	66a5      	str	r5, [r4, #104]	; 0x68
 80077d8:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80077dc:	4640      	mov	r0, r8
 80077de:	f8ad 9010 	strh.w	r9, [sp, #16]
 80077e2:	f01e fe57 	bl	8026494 <memset>
 80077e6:	4640      	mov	r0, r8
 80077e8:	f7fb f946 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 80077ec:	4b40      	ldr	r3, [pc, #256]	; (80078f0 <_ZN15StartupViewBaseC1Ev+0x154>)
 80077ee:	66e3      	str	r3, [r4, #108]	; 0x6c
 80077f0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80077f4:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 80077f8:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 80077fc:	a904      	add	r1, sp, #16
 80077fe:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8007802:	4640      	mov	r0, r8
 8007804:	f00a fcf8 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007808:	4629      	mov	r1, r5
 800780a:	2226      	movs	r2, #38	; 0x26
 800780c:	4638      	mov	r0, r7
 800780e:	f01e fe41 	bl	8026494 <memset>
 8007812:	4638      	mov	r0, r7
 8007814:	f7fb f930 	bl	8002a78 <_ZN8touchgfx6WidgetC1Ev>
 8007818:	4b36      	ldr	r3, [pc, #216]	; (80078f4 <_ZN15StartupViewBaseC1Ev+0x158>)
 800781a:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 800781e:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        : typedTextId(id)
 8007822:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 80078fc <_ZN15StartupViewBaseC1Ev+0x160>
 8007826:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800782a:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 800782e:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
        setXY(x, y);
 8007832:	462a      	mov	r2, r5
 8007834:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
        : color(col)
 8007838:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800783c:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007840:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 8007844:	f8a4 50e0 	strh.w	r5, [r4, #224]	; 0xe0
 8007848:	4629      	mov	r1, r5
 800784a:	4630      	mov	r0, r6
 800784c:	f8c4 a0c0 	str.w	sl, [r4, #192]	; 0xc0
 8007850:	f7fb f8f2 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007854:	4630      	mov	r0, r6
 8007856:	f44f 7148 	mov.w	r1, #800	; 0x320
 800785a:	f7fa f845 	bl	80018e8 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800785e:	4630      	mov	r0, r6
 8007860:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8007864:	f7fa f842 	bl	80018ec <_ZN8touchgfx8Drawable9setHeightEs>
 8007868:	f104 0904 	add.w	r9, r4, #4
        color = newColor;
 800786c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007870:	66a3      	str	r3, [r4, #104]	; 0x68
 8007872:	4631      	mov	r1, r6
 8007874:	4648      	mov	r0, r9
 8007876:	f007 fe23 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStartup.setXY(0, 0);
 800787a:	462a      	mov	r2, r5
 800787c:	4629      	mov	r1, r5
 800787e:	4640      	mov	r0, r8
 8007880:	f7fb f8da 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8007884:	230e      	movs	r3, #14
    backgroundStartup.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_800X480_ID));
 8007886:	a904      	add	r1, sp, #16
 8007888:	4640      	mov	r0, r8
 800788a:	f8ad 3010 	strh.w	r3, [sp, #16]
 800788e:	f00a fcb3 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007892:	4641      	mov	r1, r8
 8007894:	4648      	mov	r0, r9
 8007896:	f007 fe13 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(707, 0);
 800789a:	462a      	mov	r2, r5
 800789c:	4638      	mov	r0, r7
 800789e:	f240 21c3 	movw	r1, #707	; 0x2c3
 80078a2:	f7fb f8c9 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80078a6:	4b14      	ldr	r3, [pc, #80]	; (80078f8 <_ZN15StartupViewBaseC1Ev+0x15c>)
        linespace = space;
 80078a8:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 80078ac:	466d      	mov	r5, sp
        color = newColor;
 80078ae:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 80078b2:	4639      	mov	r1, r7
 80078b4:	4628      	mov	r0, r5
 80078b6:	f009 ffd9 	bl	801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80078ba:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80078be:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80078c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80078c6:	2366      	movs	r3, #102	; 0x66
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RP6T));
 80078c8:	a904      	add	r1, sp, #16
 80078ca:	4638      	mov	r0, r7
 80078cc:	f8ad 3014 	strh.w	r3, [sp, #20]
 80078d0:	f8cd a010 	str.w	sl, [sp, #16]
 80078d4:	f00a fa64 	bl	8011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80078d8:	4648      	mov	r0, r9
 80078da:	4639      	mov	r1, r7
 80078dc:	f007 fdf0 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80078e0:	4620      	mov	r0, r4
 80078e2:	b006      	add	sp, #24
 80078e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80078e8:	08029474 	.word	0x08029474
 80078ec:	0802a0e8 	.word	0x0802a0e8
 80078f0:	0802a22c 	.word	0x0802a22c
 80078f4:	0802a058 	.word	0x0802a058
 80078f8:	ffbab6b6 	.word	0xffbab6b6
 80078fc:	08028208 	.word	0x08028208

08007900 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_100_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_100_4bpp();

touchgfx::GeneratedFont& getFont_verdana_100_4bpp()
{
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007900:	4770      	bx	lr
	...

08007904 <_Z24getFont_verdana_100_4bppv>:
{
 8007904:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007906:	4d17      	ldr	r5, [pc, #92]	; (8007964 <_Z24getFont_verdana_100_4bppv+0x60>)
 8007908:	782c      	ldrb	r4, [r5, #0]
 800790a:	f3bf 8f5b 	dmb	ish
 800790e:	f014 0401 	ands.w	r4, r4, #1
{
 8007912:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007914:	d123      	bne.n	800795e <_Z24getFont_verdana_100_4bppv+0x5a>
 8007916:	4628      	mov	r0, r5
 8007918:	f01e fd04 	bl	8026324 <__cxa_guard_acquire>
 800791c:	b1f8      	cbz	r0, 800795e <_Z24getFont_verdana_100_4bppv+0x5a>
 800791e:	234e      	movs	r3, #78	; 0x4e
 8007920:	9309      	str	r3, [sp, #36]	; 0x24
 8007922:	4b11      	ldr	r3, [pc, #68]	; (8007968 <_Z24getFont_verdana_100_4bppv+0x64>)
 8007924:	9308      	str	r3, [sp, #32]
 8007926:	4b11      	ldr	r3, [pc, #68]	; (800796c <_Z24getFont_verdana_100_4bppv+0x68>)
 8007928:	9307      	str	r3, [sp, #28]
 800792a:	2203      	movs	r2, #3
 800792c:	2304      	movs	r3, #4
 800792e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007932:	2201      	movs	r2, #1
 8007934:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007938:	2364      	movs	r3, #100	; 0x64
 800793a:	490d      	ldr	r1, [pc, #52]	; (8007970 <_Z24getFont_verdana_100_4bppv+0x6c>)
 800793c:	9300      	str	r3, [sp, #0]
 800793e:	223e      	movs	r2, #62	; 0x3e
 8007940:	2379      	movs	r3, #121	; 0x79
 8007942:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007946:	e9cd 4401 	strd	r4, r4, [sp, #4]
 800794a:	480a      	ldr	r0, [pc, #40]	; (8007974 <_Z24getFont_verdana_100_4bppv+0x70>)
 800794c:	940a      	str	r4, [sp, #40]	; 0x28
 800794e:	f7fd fc0f 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007952:	4809      	ldr	r0, [pc, #36]	; (8007978 <_Z24getFont_verdana_100_4bppv+0x74>)
 8007954:	f01e fd30 	bl	80263b8 <atexit>
 8007958:	4628      	mov	r0, r5
 800795a:	f01e fcef 	bl	802633c <__cxa_guard_release>
    return verdana_100_4bpp;
}
 800795e:	4805      	ldr	r0, [pc, #20]	; (8007974 <_Z24getFont_verdana_100_4bppv+0x70>)
 8007960:	b00f      	add	sp, #60	; 0x3c
 8007962:	bd30      	pop	{r4, r5, pc}
 8007964:	20005dc0 	.word	0x20005dc0
 8007968:	0802a868 	.word	0x0802a868
 800796c:	0802aeb0 	.word	0x0802aeb0
 8007970:	902355d0 	.word	0x902355d0
 8007974:	20005dc4 	.word	0x20005dc4
 8007978:	08007901 	.word	0x08007901

0800797c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800797c:	4770      	bx	lr
	...

08007980 <_Z23getFont_verdana_10_4bppv>:
{
 8007980:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007982:	4d17      	ldr	r5, [pc, #92]	; (80079e0 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007984:	782c      	ldrb	r4, [r5, #0]
 8007986:	f3bf 8f5b 	dmb	ish
 800798a:	f014 0401 	ands.w	r4, r4, #1
{
 800798e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007990:	d122      	bne.n	80079d8 <_Z23getFont_verdana_10_4bppv+0x58>
 8007992:	4628      	mov	r0, r5
 8007994:	f01e fcc6 	bl	8026324 <__cxa_guard_acquire>
 8007998:	b1f0      	cbz	r0, 80079d8 <_Z23getFont_verdana_10_4bppv+0x58>
 800799a:	233f      	movs	r3, #63	; 0x3f
 800799c:	9309      	str	r3, [sp, #36]	; 0x24
 800799e:	4b11      	ldr	r3, [pc, #68]	; (80079e4 <_Z23getFont_verdana_10_4bppv+0x64>)
 80079a0:	9308      	str	r3, [sp, #32]
 80079a2:	4b11      	ldr	r3, [pc, #68]	; (80079e8 <_Z23getFont_verdana_10_4bppv+0x68>)
 80079a4:	9307      	str	r3, [sp, #28]
 80079a6:	2301      	movs	r3, #1
 80079a8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80079ac:	9304      	str	r3, [sp, #16]
 80079ae:	2304      	movs	r3, #4
 80079b0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 80079b4:	230a      	movs	r3, #10
 80079b6:	490d      	ldr	r1, [pc, #52]	; (80079ec <_Z23getFont_verdana_10_4bppv+0x6c>)
 80079b8:	9300      	str	r3, [sp, #0]
 80079ba:	2242      	movs	r2, #66	; 0x42
 80079bc:	230c      	movs	r3, #12
 80079be:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 80079c2:	480b      	ldr	r0, [pc, #44]	; (80079f0 <_Z23getFont_verdana_10_4bppv+0x70>)
 80079c4:	940a      	str	r4, [sp, #40]	; 0x28
 80079c6:	9401      	str	r4, [sp, #4]
 80079c8:	f7fd fbd2 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80079cc:	4809      	ldr	r0, [pc, #36]	; (80079f4 <_Z23getFont_verdana_10_4bppv+0x74>)
 80079ce:	f01e fcf3 	bl	80263b8 <atexit>
 80079d2:	4628      	mov	r0, r5
 80079d4:	f01e fcb2 	bl	802633c <__cxa_guard_release>
    return verdana_10_4bpp;
}
 80079d8:	4805      	ldr	r0, [pc, #20]	; (80079f0 <_Z23getFont_verdana_10_4bppv+0x70>)
 80079da:	b00f      	add	sp, #60	; 0x3c
 80079dc:	bd30      	pop	{r4, r5, pc}
 80079de:	bf00      	nop
 80079e0:	20005df0 	.word	0x20005df0
 80079e4:	0802aaa8 	.word	0x0802aaa8
 80079e8:	0802aeb4 	.word	0x0802aeb4
 80079ec:	90235934 	.word	0x90235934
 80079f0:	20005df4 	.word	0x20005df4
 80079f4:	0800797d 	.word	0x0800797d

080079f8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_120_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_120_4bpp();

touchgfx::GeneratedFont& getFont_verdana_120_4bpp()
{
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 80079f8:	4770      	bx	lr
	...

080079fc <_Z24getFont_verdana_120_4bppv>:
{
 80079fc:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 80079fe:	4d17      	ldr	r5, [pc, #92]	; (8007a5c <_Z24getFont_verdana_120_4bppv+0x60>)
 8007a00:	782c      	ldrb	r4, [r5, #0]
 8007a02:	f3bf 8f5b 	dmb	ish
 8007a06:	f014 0401 	ands.w	r4, r4, #1
{
 8007a0a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007a0c:	d122      	bne.n	8007a54 <_Z24getFont_verdana_120_4bppv+0x58>
 8007a0e:	4628      	mov	r0, r5
 8007a10:	f01e fc88 	bl	8026324 <__cxa_guard_acquire>
 8007a14:	b1f0      	cbz	r0, 8007a54 <_Z24getFont_verdana_120_4bppv+0x58>
 8007a16:	233f      	movs	r3, #63	; 0x3f
 8007a18:	9309      	str	r3, [sp, #36]	; 0x24
 8007a1a:	4b11      	ldr	r3, [pc, #68]	; (8007a60 <_Z24getFont_verdana_120_4bppv+0x64>)
 8007a1c:	9308      	str	r3, [sp, #32]
 8007a1e:	4b11      	ldr	r3, [pc, #68]	; (8007a64 <_Z24getFont_verdana_120_4bppv+0x68>)
 8007a20:	9307      	str	r3, [sp, #28]
 8007a22:	2301      	movs	r3, #1
 8007a24:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007a28:	9304      	str	r3, [sp, #16]
 8007a2a:	2304      	movs	r3, #4
 8007a2c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007a30:	2378      	movs	r3, #120	; 0x78
 8007a32:	490d      	ldr	r1, [pc, #52]	; (8007a68 <_Z24getFont_verdana_120_4bppv+0x6c>)
 8007a34:	9300      	str	r3, [sp, #0]
 8007a36:	221c      	movs	r2, #28
 8007a38:	2391      	movs	r3, #145	; 0x91
 8007a3a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007a3e:	480b      	ldr	r0, [pc, #44]	; (8007a6c <_Z24getFont_verdana_120_4bppv+0x70>)
 8007a40:	940a      	str	r4, [sp, #40]	; 0x28
 8007a42:	9401      	str	r4, [sp, #4]
 8007a44:	f7fd fb94 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007a48:	4809      	ldr	r0, [pc, #36]	; (8007a70 <_Z24getFont_verdana_120_4bppv+0x74>)
 8007a4a:	f01e fcb5 	bl	80263b8 <atexit>
 8007a4e:	4628      	mov	r0, r5
 8007a50:	f01e fc74 	bl	802633c <__cxa_guard_release>
    return verdana_120_4bpp;
}
 8007a54:	4805      	ldr	r0, [pc, #20]	; (8007a6c <_Z24getFont_verdana_120_4bppv+0x70>)
 8007a56:	b00f      	add	sp, #60	; 0x3c
 8007a58:	bd30      	pop	{r4, r5, pc}
 8007a5a:	bf00      	nop
 8007a5c:	20005e20 	.word	0x20005e20
 8007a60:	0802aac4 	.word	0x0802aac4
 8007a64:	0802aeb8 	.word	0x0802aeb8
 8007a68:	90235cd0 	.word	0x90235cd0
 8007a6c:	20005e24 	.word	0x20005e24
 8007a70:	080079f9 	.word	0x080079f9

08007a74 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007a74:	4770      	bx	lr
	...

08007a78 <_Z23getFont_verdana_15_4bppv>:
{
 8007a78:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007a7a:	4d17      	ldr	r5, [pc, #92]	; (8007ad8 <_Z23getFont_verdana_15_4bppv+0x60>)
 8007a7c:	782c      	ldrb	r4, [r5, #0]
 8007a7e:	f3bf 8f5b 	dmb	ish
 8007a82:	f014 0401 	ands.w	r4, r4, #1
{
 8007a86:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007a88:	d122      	bne.n	8007ad0 <_Z23getFont_verdana_15_4bppv+0x58>
 8007a8a:	4628      	mov	r0, r5
 8007a8c:	f01e fc4a 	bl	8026324 <__cxa_guard_acquire>
 8007a90:	b1f0      	cbz	r0, 8007ad0 <_Z23getFont_verdana_15_4bppv+0x58>
 8007a92:	233f      	movs	r3, #63	; 0x3f
 8007a94:	9309      	str	r3, [sp, #36]	; 0x24
 8007a96:	4b11      	ldr	r3, [pc, #68]	; (8007adc <_Z23getFont_verdana_15_4bppv+0x64>)
 8007a98:	9308      	str	r3, [sp, #32]
 8007a9a:	4b11      	ldr	r3, [pc, #68]	; (8007ae0 <_Z23getFont_verdana_15_4bppv+0x68>)
 8007a9c:	9307      	str	r3, [sp, #28]
 8007a9e:	2301      	movs	r3, #1
 8007aa0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007aa4:	9304      	str	r3, [sp, #16]
 8007aa6:	2304      	movs	r3, #4
 8007aa8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007aac:	230f      	movs	r3, #15
 8007aae:	490d      	ldr	r1, [pc, #52]	; (8007ae4 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8007ab0:	9300      	str	r3, [sp, #0]
 8007ab2:	2242      	movs	r2, #66	; 0x42
 8007ab4:	2312      	movs	r3, #18
 8007ab6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007aba:	480b      	ldr	r0, [pc, #44]	; (8007ae8 <_Z23getFont_verdana_15_4bppv+0x70>)
 8007abc:	940a      	str	r4, [sp, #40]	; 0x28
 8007abe:	9401      	str	r4, [sp, #4]
 8007ac0:	f7fd fb56 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007ac4:	4809      	ldr	r0, [pc, #36]	; (8007aec <_Z23getFont_verdana_15_4bppv+0x74>)
 8007ac6:	f01e fc77 	bl	80263b8 <atexit>
 8007aca:	4628      	mov	r0, r5
 8007acc:	f01e fc36 	bl	802633c <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8007ad0:	4805      	ldr	r0, [pc, #20]	; (8007ae8 <_Z23getFont_verdana_15_4bppv+0x70>)
 8007ad2:	b00f      	add	sp, #60	; 0x3c
 8007ad4:	bd30      	pop	{r4, r5, pc}
 8007ad6:	bf00      	nop
 8007ad8:	20005e50 	.word	0x20005e50
 8007adc:	0802ab4c 	.word	0x0802ab4c
 8007ae0:	0802aebc 	.word	0x0802aebc
 8007ae4:	90235e58 	.word	0x90235e58
 8007ae8:	20005e54 	.word	0x20005e54
 8007aec:	08007a75 	.word	0x08007a75

08007af0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_180_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_180_4bpp();

touchgfx::GeneratedFont& getFont_verdana_180_4bpp()
{
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007af0:	4770      	bx	lr
	...

08007af4 <_Z24getFont_verdana_180_4bppv>:
{
 8007af4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007af6:	4d17      	ldr	r5, [pc, #92]	; (8007b54 <_Z24getFont_verdana_180_4bppv+0x60>)
 8007af8:	782c      	ldrb	r4, [r5, #0]
 8007afa:	f3bf 8f5b 	dmb	ish
 8007afe:	f014 0401 	ands.w	r4, r4, #1
{
 8007b02:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007b04:	d122      	bne.n	8007b4c <_Z24getFont_verdana_180_4bppv+0x58>
 8007b06:	4628      	mov	r0, r5
 8007b08:	f01e fc0c 	bl	8026324 <__cxa_guard_acquire>
 8007b0c:	b1f0      	cbz	r0, 8007b4c <_Z24getFont_verdana_180_4bppv+0x58>
 8007b0e:	233f      	movs	r3, #63	; 0x3f
 8007b10:	9309      	str	r3, [sp, #36]	; 0x24
 8007b12:	4b11      	ldr	r3, [pc, #68]	; (8007b58 <_Z24getFont_verdana_180_4bppv+0x64>)
 8007b14:	9308      	str	r3, [sp, #32]
 8007b16:	4b11      	ldr	r3, [pc, #68]	; (8007b5c <_Z24getFont_verdana_180_4bppv+0x68>)
 8007b18:	4911      	ldr	r1, [pc, #68]	; (8007b60 <_Z24getFont_verdana_180_4bppv+0x6c>)
 8007b1a:	4812      	ldr	r0, [pc, #72]	; (8007b64 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007b1c:	940a      	str	r4, [sp, #40]	; 0x28
 8007b1e:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007b22:	2201      	movs	r2, #1
 8007b24:	2304      	movs	r3, #4
 8007b26:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007b2a:	23b4      	movs	r3, #180	; 0xb4
 8007b2c:	9300      	str	r3, [sp, #0]
 8007b2e:	2207      	movs	r2, #7
 8007b30:	23b7      	movs	r3, #183	; 0xb7
 8007b32:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007b36:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007b3a:	9405      	str	r4, [sp, #20]
 8007b3c:	f7fd fb18 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007b40:	4809      	ldr	r0, [pc, #36]	; (8007b68 <_Z24getFont_verdana_180_4bppv+0x74>)
 8007b42:	f01e fc39 	bl	80263b8 <atexit>
 8007b46:	4628      	mov	r0, r5
 8007b48:	f01e fbf8 	bl	802633c <__cxa_guard_release>
    return verdana_180_4bpp;
}
 8007b4c:	4805      	ldr	r0, [pc, #20]	; (8007b64 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007b4e:	b00f      	add	sp, #60	; 0x3c
 8007b50:	bd30      	pop	{r4, r5, pc}
 8007b52:	bf00      	nop
 8007b54:	20005e80 	.word	0x20005e80
 8007b58:	0802abd0 	.word	0x0802abd0
 8007b5c:	0802aec0 	.word	0x0802aec0
 8007b60:	902361f4 	.word	0x902361f4
 8007b64:	20005e84 	.word	0x20005e84
 8007b68:	08007af1 	.word	0x08007af1

08007b6c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007b6c:	4770      	bx	lr
	...

08007b70 <_Z23getFont_verdana_20_4bppv>:
{
 8007b70:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007b72:	4d17      	ldr	r5, [pc, #92]	; (8007bd0 <_Z23getFont_verdana_20_4bppv+0x60>)
 8007b74:	782c      	ldrb	r4, [r5, #0]
 8007b76:	f3bf 8f5b 	dmb	ish
 8007b7a:	f014 0401 	ands.w	r4, r4, #1
{
 8007b7e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007b80:	d122      	bne.n	8007bc8 <_Z23getFont_verdana_20_4bppv+0x58>
 8007b82:	4628      	mov	r0, r5
 8007b84:	f01e fbce 	bl	8026324 <__cxa_guard_acquire>
 8007b88:	b1f0      	cbz	r0, 8007bc8 <_Z23getFont_verdana_20_4bppv+0x58>
 8007b8a:	233f      	movs	r3, #63	; 0x3f
 8007b8c:	9309      	str	r3, [sp, #36]	; 0x24
 8007b8e:	4b11      	ldr	r3, [pc, #68]	; (8007bd4 <_Z23getFont_verdana_20_4bppv+0x64>)
 8007b90:	9308      	str	r3, [sp, #32]
 8007b92:	4b11      	ldr	r3, [pc, #68]	; (8007bd8 <_Z23getFont_verdana_20_4bppv+0x68>)
 8007b94:	9307      	str	r3, [sp, #28]
 8007b96:	2301      	movs	r3, #1
 8007b98:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007b9c:	9304      	str	r3, [sp, #16]
 8007b9e:	2304      	movs	r3, #4
 8007ba0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007ba4:	2314      	movs	r3, #20
 8007ba6:	490d      	ldr	r1, [pc, #52]	; (8007bdc <_Z23getFont_verdana_20_4bppv+0x6c>)
 8007ba8:	9300      	str	r3, [sp, #0]
 8007baa:	2243      	movs	r2, #67	; 0x43
 8007bac:	2318      	movs	r3, #24
 8007bae:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007bb2:	480b      	ldr	r0, [pc, #44]	; (8007be0 <_Z23getFont_verdana_20_4bppv+0x70>)
 8007bb4:	940a      	str	r4, [sp, #40]	; 0x28
 8007bb6:	9401      	str	r4, [sp, #4]
 8007bb8:	f7fd fada 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007bbc:	4809      	ldr	r0, [pc, #36]	; (8007be4 <_Z23getFont_verdana_20_4bppv+0x74>)
 8007bbe:	f01e fbfb 	bl	80263b8 <atexit>
 8007bc2:	4628      	mov	r0, r5
 8007bc4:	f01e fbba 	bl	802633c <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8007bc8:	4805      	ldr	r0, [pc, #20]	; (8007be0 <_Z23getFont_verdana_20_4bppv+0x70>)
 8007bca:	b00f      	add	sp, #60	; 0x3c
 8007bcc:	bd30      	pop	{r4, r5, pc}
 8007bce:	bf00      	nop
 8007bd0:	20005eb0 	.word	0x20005eb0
 8007bd4:	0802abd4 	.word	0x0802abd4
 8007bd8:	0802aec4 	.word	0x0802aec4
 8007bdc:	90236258 	.word	0x90236258
 8007be0:	20005eb4 	.word	0x20005eb4
 8007be4:	08007b6d 	.word	0x08007b6d

08007be8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007be8:	4770      	bx	lr
	...

08007bec <_Z23getFont_verdana_30_4bppv>:
{
 8007bec:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007bee:	4d17      	ldr	r5, [pc, #92]	; (8007c4c <_Z23getFont_verdana_30_4bppv+0x60>)
 8007bf0:	782c      	ldrb	r4, [r5, #0]
 8007bf2:	f3bf 8f5b 	dmb	ish
 8007bf6:	f014 0401 	ands.w	r4, r4, #1
{
 8007bfa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007bfc:	d122      	bne.n	8007c44 <_Z23getFont_verdana_30_4bppv+0x58>
 8007bfe:	4628      	mov	r0, r5
 8007c00:	f01e fb90 	bl	8026324 <__cxa_guard_acquire>
 8007c04:	b1f0      	cbz	r0, 8007c44 <_Z23getFont_verdana_30_4bppv+0x58>
 8007c06:	233f      	movs	r3, #63	; 0x3f
 8007c08:	9309      	str	r3, [sp, #36]	; 0x24
 8007c0a:	4b11      	ldr	r3, [pc, #68]	; (8007c50 <_Z23getFont_verdana_30_4bppv+0x64>)
 8007c0c:	9308      	str	r3, [sp, #32]
 8007c0e:	4b11      	ldr	r3, [pc, #68]	; (8007c54 <_Z23getFont_verdana_30_4bppv+0x68>)
 8007c10:	9307      	str	r3, [sp, #28]
 8007c12:	2301      	movs	r3, #1
 8007c14:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c18:	9304      	str	r3, [sp, #16]
 8007c1a:	2304      	movs	r3, #4
 8007c1c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c20:	231e      	movs	r3, #30
 8007c22:	490d      	ldr	r1, [pc, #52]	; (8007c58 <_Z23getFont_verdana_30_4bppv+0x6c>)
 8007c24:	9300      	str	r3, [sp, #0]
 8007c26:	2240      	movs	r2, #64	; 0x40
 8007c28:	2324      	movs	r3, #36	; 0x24
 8007c2a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c2e:	480b      	ldr	r0, [pc, #44]	; (8007c5c <_Z23getFont_verdana_30_4bppv+0x70>)
 8007c30:	940a      	str	r4, [sp, #40]	; 0x28
 8007c32:	9401      	str	r4, [sp, #4]
 8007c34:	f7fd fa9c 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c38:	4809      	ldr	r0, [pc, #36]	; (8007c60 <_Z23getFont_verdana_30_4bppv+0x74>)
 8007c3a:	f01e fbbd 	bl	80263b8 <atexit>
 8007c3e:	4628      	mov	r0, r5
 8007c40:	f01e fb7c 	bl	802633c <__cxa_guard_release>
    return verdana_30_4bpp;
}
 8007c44:	4805      	ldr	r0, [pc, #20]	; (8007c5c <_Z23getFont_verdana_30_4bppv+0x70>)
 8007c46:	b00f      	add	sp, #60	; 0x3c
 8007c48:	bd30      	pop	{r4, r5, pc}
 8007c4a:	bf00      	nop
 8007c4c:	20005ee0 	.word	0x20005ee0
 8007c50:	0802acf0 	.word	0x0802acf0
 8007c54:	0802aec8 	.word	0x0802aec8
 8007c58:	90236604 	.word	0x90236604
 8007c5c:	20005ee4 	.word	0x20005ee4
 8007c60:	08007be9 	.word	0x08007be9

08007c64 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c64:	4770      	bx	lr
	...

08007c68 <_Z23getFont_verdana_40_4bppv>:
{
 8007c68:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c6a:	4d17      	ldr	r5, [pc, #92]	; (8007cc8 <_Z23getFont_verdana_40_4bppv+0x60>)
 8007c6c:	782c      	ldrb	r4, [r5, #0]
 8007c6e:	f3bf 8f5b 	dmb	ish
 8007c72:	f014 0401 	ands.w	r4, r4, #1
{
 8007c76:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007c78:	d122      	bne.n	8007cc0 <_Z23getFont_verdana_40_4bppv+0x58>
 8007c7a:	4628      	mov	r0, r5
 8007c7c:	f01e fb52 	bl	8026324 <__cxa_guard_acquire>
 8007c80:	b1f0      	cbz	r0, 8007cc0 <_Z23getFont_verdana_40_4bppv+0x58>
 8007c82:	233f      	movs	r3, #63	; 0x3f
 8007c84:	9309      	str	r3, [sp, #36]	; 0x24
 8007c86:	4b11      	ldr	r3, [pc, #68]	; (8007ccc <_Z23getFont_verdana_40_4bppv+0x64>)
 8007c88:	9308      	str	r3, [sp, #32]
 8007c8a:	4b11      	ldr	r3, [pc, #68]	; (8007cd0 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007c8c:	4911      	ldr	r1, [pc, #68]	; (8007cd4 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007c8e:	4812      	ldr	r0, [pc, #72]	; (8007cd8 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007c90:	940a      	str	r4, [sp, #40]	; 0x28
 8007c92:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007c96:	2201      	movs	r2, #1
 8007c98:	2304      	movs	r3, #4
 8007c9a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007c9e:	2328      	movs	r3, #40	; 0x28
 8007ca0:	9300      	str	r3, [sp, #0]
 8007ca2:	220b      	movs	r2, #11
 8007ca4:	2329      	movs	r3, #41	; 0x29
 8007ca6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007caa:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007cae:	9405      	str	r4, [sp, #20]
 8007cb0:	f7fd fa5e 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cb4:	4809      	ldr	r0, [pc, #36]	; (8007cdc <_Z23getFont_verdana_40_4bppv+0x74>)
 8007cb6:	f01e fb7f 	bl	80263b8 <atexit>
 8007cba:	4628      	mov	r0, r5
 8007cbc:	f01e fb3e 	bl	802633c <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007cc0:	4805      	ldr	r0, [pc, #20]	; (8007cd8 <_Z23getFont_verdana_40_4bppv+0x70>)
 8007cc2:	b00f      	add	sp, #60	; 0x3c
 8007cc4:	bd30      	pop	{r4, r5, pc}
 8007cc6:	bf00      	nop
 8007cc8:	20005f10 	.word	0x20005f10
 8007ccc:	0802ae74 	.word	0x0802ae74
 8007cd0:	0802aecc 	.word	0x0802aecc
 8007cd4:	90236984 	.word	0x90236984
 8007cd8:	20005f14 	.word	0x20005f14
 8007cdc:	08007c65 	.word	0x08007c65

08007ce0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_57_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_57_4bpp();

touchgfx::GeneratedFont& getFont_verdana_57_4bpp()
{
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007ce0:	4770      	bx	lr
	...

08007ce4 <_Z23getFont_verdana_57_4bppv>:
{
 8007ce4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007ce6:	4d17      	ldr	r5, [pc, #92]	; (8007d44 <_Z23getFont_verdana_57_4bppv+0x60>)
 8007ce8:	782c      	ldrb	r4, [r5, #0]
 8007cea:	f3bf 8f5b 	dmb	ish
 8007cee:	f014 0401 	ands.w	r4, r4, #1
{
 8007cf2:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007cf4:	d122      	bne.n	8007d3c <_Z23getFont_verdana_57_4bppv+0x58>
 8007cf6:	4628      	mov	r0, r5
 8007cf8:	f01e fb14 	bl	8026324 <__cxa_guard_acquire>
 8007cfc:	b1f0      	cbz	r0, 8007d3c <_Z23getFont_verdana_57_4bppv+0x58>
 8007cfe:	233f      	movs	r3, #63	; 0x3f
 8007d00:	9309      	str	r3, [sp, #36]	; 0x24
 8007d02:	4b11      	ldr	r3, [pc, #68]	; (8007d48 <_Z23getFont_verdana_57_4bppv+0x64>)
 8007d04:	9308      	str	r3, [sp, #32]
 8007d06:	4b11      	ldr	r3, [pc, #68]	; (8007d4c <_Z23getFont_verdana_57_4bppv+0x68>)
 8007d08:	9307      	str	r3, [sp, #28]
 8007d0a:	2301      	movs	r3, #1
 8007d0c:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007d10:	9304      	str	r3, [sp, #16]
 8007d12:	2304      	movs	r3, #4
 8007d14:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d18:	2339      	movs	r3, #57	; 0x39
 8007d1a:	490d      	ldr	r1, [pc, #52]	; (8007d50 <_Z23getFont_verdana_57_4bppv+0x6c>)
 8007d1c:	9300      	str	r3, [sp, #0]
 8007d1e:	2219      	movs	r2, #25
 8007d20:	233a      	movs	r3, #58	; 0x3a
 8007d22:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d26:	480b      	ldr	r0, [pc, #44]	; (8007d54 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007d28:	940a      	str	r4, [sp, #40]	; 0x28
 8007d2a:	9401      	str	r4, [sp, #4]
 8007d2c:	f7fd fa20 	bl	8005170 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d30:	4809      	ldr	r0, [pc, #36]	; (8007d58 <_Z23getFont_verdana_57_4bppv+0x74>)
 8007d32:	f01e fb41 	bl	80263b8 <atexit>
 8007d36:	4628      	mov	r0, r5
 8007d38:	f01e fb00 	bl	802633c <__cxa_guard_release>
    return verdana_57_4bpp;
}
 8007d3c:	4805      	ldr	r0, [pc, #20]	; (8007d54 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007d3e:	b00f      	add	sp, #60	; 0x3c
 8007d40:	bd30      	pop	{r4, r5, pc}
 8007d42:	bf00      	nop
 8007d44:	20005f40 	.word	0x20005f40
 8007d48:	0802ae78 	.word	0x0802ae78
 8007d4c:	0802aed0 	.word	0x0802aed0
 8007d50:	90236a20 	.word	0x90236a20
 8007d54:	20005f44 	.word	0x20005f44
 8007d58:	08007ce1 	.word	0x08007ce1

08007d5c <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8007d5c:	2000      	movs	r0, #0
 8007d5e:	4770      	bx	lr

08007d60 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8007d60:	2000      	movs	r0, #0
 8007d62:	4770      	bx	lr

08007d64 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d64:	b40e      	push	{r1, r2, r3}
 8007d66:	b503      	push	{r0, r1, lr}
 8007d68:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d6a:	2100      	movs	r1, #0
{
 8007d6c:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8007d70:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8007d72:	f00d feff 	bl	8015b74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d76:	b002      	add	sp, #8
 8007d78:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d7c:	b003      	add	sp, #12
 8007d7e:	4770      	bx	lr

08007d80 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8007d80:	b40c      	push	{r2, r3}
 8007d82:	b507      	push	{r0, r1, r2, lr}
 8007d84:	ab04      	add	r3, sp, #16
 8007d86:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8007d8a:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8007d8c:	f00d fef2 	bl	8015b74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8007d90:	b003      	add	sp, #12
 8007d92:	f85d eb04 	ldr.w	lr, [sp], #4
 8007d96:	b002      	add	sp, #8
 8007d98:	4770      	bx	lr
	...

08007d9c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8007d9c:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8007d9e:	b510      	push	{r4, lr}
 8007da0:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8007da2:	b373      	cbz	r3, 8007e02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8007da4:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8007da6:	b92b      	cbnz	r3, 8007db4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8007da8:	4b18      	ldr	r3, [pc, #96]	; (8007e0c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8007daa:	4a19      	ldr	r2, [pc, #100]	; (8007e10 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8007dac:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8007dae:	4819      	ldr	r0, [pc, #100]	; (8007e14 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8007db0:	f01e fae4 	bl	802637c <__assert_func>
            return buffer[pos];
 8007db4:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8007db6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8007dba:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8007dbc:	b30b      	cbz	r3, 8007e02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8007dbe:	f00f fad6 	bl	801736e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8007dc2:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8007dc4:	2b01      	cmp	r3, #1
 8007dc6:	d803      	bhi.n	8007dd0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8007dc8:	4b13      	ldr	r3, [pc, #76]	; (8007e18 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8007dca:	4a14      	ldr	r2, [pc, #80]	; (8007e1c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8007dcc:	21cb      	movs	r1, #203	; 0xcb
 8007dce:	e7ee      	b.n	8007dae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8007dd0:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8007dd2:	1c53      	adds	r3, r2, #1
 8007dd4:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8007dd6:	2b09      	cmp	r3, #9
 8007dd8:	4619      	mov	r1, r3
 8007dda:	bf88      	it	hi
 8007ddc:	f1a3 010a 	subhi.w	r1, r3, #10
 8007de0:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8007de4:	f640 103f 	movw	r0, #2367	; 0x93f
 8007de8:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8007dea:	4281      	cmp	r1, r0
 8007dec:	d109      	bne.n	8007e02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8007dee:	2b0a      	cmp	r3, #10
 8007df0:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8007df4:	bf28      	it	cs
 8007df6:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8007df8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8007dfc:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8007dfe:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8007e00:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8007e02:	4620      	mov	r0, r4
}
 8007e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8007e08:	f00f b9b4 	b.w	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8007e0c:	080294a0 	.word	0x080294a0
 8007e10:	080294a9 	.word	0x080294a9
 8007e14:	08029554 	.word	0x08029554
 8007e18:	0802959e 	.word	0x0802959e
 8007e1c:	080295ac 	.word	0x080295ac

08007e20 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8007e20:	f00f b96f 	b.w	8017102 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08007e24 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8007e24:	b510      	push	{r4, lr}
 8007e26:	b086      	sub	sp, #24
 8007e28:	ac02      	add	r4, sp, #8
 8007e2a:	e884 0006 	stmia.w	r4, {r1, r2}
 8007e2e:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8007e30:	ab0a      	add	r3, sp, #40	; 0x28
 8007e32:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8007e34:	9301      	str	r3, [sp, #4]
 8007e36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007e38:	9300      	str	r3, [sp, #0]
 8007e3a:	4621      	mov	r1, r4
 8007e3c:	9b08      	ldr	r3, [sp, #32]
 8007e3e:	f00c fa5d 	bl	80142fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8007e42:	b006      	add	sp, #24
 8007e44:	bd10      	pop	{r4, pc}
	...

08007e48 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007e48:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8007e4a:	bb18      	cbnz	r0, 8007e94 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8007e4c:	4b12      	ldr	r3, [pc, #72]	; (8007e98 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8007e4e:	4813      	ldr	r0, [pc, #76]	; (8007e9c <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8007e50:	681b      	ldr	r3, [r3, #0]
 8007e52:	4913      	ldr	r1, [pc, #76]	; (8007ea0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8007e54:	b1b3      	cbz	r3, 8007e84 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007e56:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007e58:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007e5a:	441a      	add	r2, r3
 8007e5c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007e5e:	685a      	ldr	r2, [r3, #4]
 8007e60:	441a      	add	r2, r3
 8007e62:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007e64:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8007e66:	4b0f      	ldr	r3, [pc, #60]	; (8007ea4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8007e68:	2200      	movs	r2, #0
 8007e6a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007e6c:	f000 f838 	bl	8007ee0 <_ZN17TypedTextDatabase8getFontsEv>
 8007e70:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007e72:	f000 f833 	bl	8007edc <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8007e76:	4b0c      	ldr	r3, [pc, #48]	; (8007ea8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8007e78:	601c      	str	r4, [r3, #0]
        fonts = f;
 8007e7a:	4b0c      	ldr	r3, [pc, #48]	; (8007eac <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8007e7c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8007e7e:	4b0c      	ldr	r3, [pc, #48]	; (8007eb0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8007e80:	8018      	strh	r0, [r3, #0]
    }
}
 8007e82:	e007      	b.n	8007e94 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8007e84:	4b0b      	ldr	r3, [pc, #44]	; (8007eb4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8007e86:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007e88:	4b0b      	ldr	r3, [pc, #44]	; (8007eb8 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8007e8a:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007e8c:	4b0b      	ldr	r3, [pc, #44]	; (8007ebc <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8007e8e:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8007e90:	2c00      	cmp	r4, #0
 8007e92:	d1e8      	bne.n	8007e66 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8007e94:	bd38      	pop	{r3, r4, r5, pc}
 8007e96:	bf00      	nop
 8007e98:	20005f70 	.word	0x20005f70
 8007e9c:	20005f74 	.word	0x20005f74
 8007ea0:	20005f78 	.word	0x20005f78
 8007ea4:	20005f7c 	.word	0x20005f7c
 8007ea8:	2000ef74 	.word	0x2000ef74
 8007eac:	2000ef7c 	.word	0x2000ef7c
 8007eb0:	2000ef78 	.word	0x2000ef78
 8007eb4:	90236d84 	.word	0x90236d84
 8007eb8:	90236b80 	.word	0x90236b80
 8007ebc:	902371f4 	.word	0x902371f4

08007ec0 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8007ec0:	4b04      	ldr	r3, [pc, #16]	; (8007ed4 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8007ec8:	4b03      	ldr	r3, [pc, #12]	; (8007ed8 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8007eca:	681b      	ldr	r3, [r3, #0]
}
 8007ecc:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8007ed0:	4770      	bx	lr
 8007ed2:	bf00      	nop
 8007ed4:	20005f78 	.word	0x20005f78
 8007ed8:	20005f74 	.word	0x20005f74

08007edc <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8007edc:	2081      	movs	r0, #129	; 0x81
 8007ede:	4770      	bx	lr

08007ee0 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8007ee0:	4800      	ldr	r0, [pc, #0]	; (8007ee4 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8007ee2:	4770      	bx	lr
 8007ee4:	20005f80 	.word	0x20005f80

08007ee8 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 8:
        touchgfx_fonts[8] = &(getFont_verdana_57_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8007ee8:	b510      	push	{r4, lr}
    &(getFont_verdana_30_4bpp()),
 8007eea:	f7ff fe7f 	bl	8007bec <_Z23getFont_verdana_30_4bppv>
};
 8007eee:	4c0d      	ldr	r4, [pc, #52]	; (8007f24 <_GLOBAL__sub_I_touchgfx_fonts+0x3c>)
 8007ef0:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_10_4bpp()),
 8007ef2:	f7ff fd45 	bl	8007980 <_Z23getFont_verdana_10_4bppv>
};
 8007ef6:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_100_4bpp()),
 8007ef8:	f7ff fd04 	bl	8007904 <_Z24getFont_verdana_100_4bppv>
};
 8007efc:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_40_4bpp()),
 8007efe:	f7ff feb3 	bl	8007c68 <_Z23getFont_verdana_40_4bppv>
};
 8007f02:	60e0      	str	r0, [r4, #12]
    &(getFont_verdana_20_4bpp()),
 8007f04:	f7ff fe34 	bl	8007b70 <_Z23getFont_verdana_20_4bppv>
};
 8007f08:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_15_4bpp()),
 8007f0a:	f7ff fdb5 	bl	8007a78 <_Z23getFont_verdana_15_4bppv>
};
 8007f0e:	6160      	str	r0, [r4, #20]
    &(getFont_verdana_120_4bpp()),
 8007f10:	f7ff fd74 	bl	80079fc <_Z24getFont_verdana_120_4bppv>
};
 8007f14:	61a0      	str	r0, [r4, #24]
    &(getFont_verdana_180_4bpp()),
 8007f16:	f7ff fded 	bl	8007af4 <_Z24getFont_verdana_180_4bppv>
};
 8007f1a:	61e0      	str	r0, [r4, #28]
    &(getFont_verdana_57_4bpp())
 8007f1c:	f7ff fee2 	bl	8007ce4 <_Z23getFont_verdana_57_4bppv>
};
 8007f20:	6220      	str	r0, [r4, #32]
} // namespace TypedTextDatabase
 8007f22:	bd10      	pop	{r4, pc}
 8007f24:	20005f80 	.word	0x20005f80

08007f28 <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 8007f28:	4a07      	ldr	r2, [pc, #28]	; (8007f48 <_ZN8touchgfx8DrawableC1Ev+0x20>)
 8007f2a:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 8007f2c:	2200      	movs	r2, #0
 8007f2e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8007f32:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8007f36:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8007f3a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8007f3e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8007f42:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 8007f44:	4770      	bx	lr
 8007f46:	bf00      	nop
 8007f48:	0802a370 	.word	0x0802a370

08007f4c <_ZN13ModelListener11gearChangedEv>:
    virtual void gearChanged() {};
 8007f4c:	4770      	bx	lr

08007f4e <_ZN13ModelListener11infoChangedEv>:
    virtual void infoChanged() {};
 8007f4e:	4770      	bx	lr

08007f50 <_ZN13ModelListener19debugMessageChangedEv>:
    virtual void debugMessageChanged() {};
 8007f50:	4770      	bx	lr

08007f52 <_ZN26CompetitionScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CompetitionScreenPresenter() {}
 8007f52:	4770      	bx	lr

08007f54 <_ZThn4_N26CompetitionScreenPresenterD1Ev>:
 8007f54:	3804      	subs	r0, #4
 8007f56:	4770      	bx	lr

08007f58 <_ZN26CompetitionScreenPresenter8activateEv>:

}

void CompetitionScreenPresenter::activate()
{
	missionChanged();
 8007f58:	6803      	ldr	r3, [r0, #0]
 8007f5a:	691b      	ldr	r3, [r3, #16]
 8007f5c:	4718      	bx	r3

08007f5e <_ZN26CompetitionScreenPresenter10deactivateEv>:
}

void CompetitionScreenPresenter::deactivate()
{

}
 8007f5e:	4770      	bx	lr

08007f60 <_ZN26CompetitionScreenPresenterD0Ev>:
 8007f60:	b510      	push	{r4, lr}
 8007f62:	2110      	movs	r1, #16
 8007f64:	4604      	mov	r4, r0
 8007f66:	f01e f9db 	bl	8026320 <_ZdlPvj>
 8007f6a:	4620      	mov	r0, r4
 8007f6c:	bd10      	pop	{r4, pc}

08007f6e <_ZThn4_N26CompetitionScreenPresenterD0Ev>:
 8007f6e:	f1a0 0004 	sub.w	r0, r0, #4
 8007f72:	e7f5      	b.n	8007f60 <_ZN26CompetitionScreenPresenterD0Ev>

08007f74 <_ZN26CompetitionScreenPresenter14missionChangedEv>:
    void requestChassisReset();

    void requestMission(MmrMission missionType);
    void commonAfterRequestMission(MmrMission missionType);

    const char* getMission() { return mission; }
 8007f74:	6881      	ldr	r1, [r0, #8]

void CompetitionScreenPresenter::missionChanged() {
	view.setMission(model->getMission());
 8007f76:	68c0      	ldr	r0, [r0, #12]
 8007f78:	3108      	adds	r1, #8
 8007f7a:	f000 b837 	b.w	8007fec <_ZN21CompetitionScreenView10setMissionEPKc>

08007f7e <_ZThn4_N26CompetitionScreenPresenter14missionChangedEv>:

    virtual void missionChanged();
 8007f7e:	f1a0 0004 	sub.w	r0, r0, #4
 8007f82:	f7ff bff7 	b.w	8007f74 <_ZN26CompetitionScreenPresenter14missionChangedEv>
	...

08007f88 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>:
CompetitionScreenPresenter::CompetitionScreenPresenter(CompetitionScreenView& v)
 8007f88:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8007f8a:	2200      	movs	r2, #0
 8007f8c:	6082      	str	r2, [r0, #8]
    : view(v)
 8007f8e:	4a04      	ldr	r2, [pc, #16]	; (8007fa0 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView+0x18>)
 8007f90:	60c1      	str	r1, [r0, #12]
 8007f92:	f102 0408 	add.w	r4, r2, #8
 8007f96:	3224      	adds	r2, #36	; 0x24
 8007f98:	6004      	str	r4, [r0, #0]
 8007f9a:	6042      	str	r2, [r0, #4]
}
 8007f9c:	bd10      	pop	{r4, pc}
 8007f9e:	bf00      	nop
 8007fa0:	08029680 	.word	0x08029680

08007fa4 <_ZN21CompetitionScreenView14tearDownScreenEv>:
}

void CompetitionScreenView::tearDownScreen()
{
    CompetitionScreenViewBase::tearDownScreen();
}
 8007fa4:	4770      	bx	lr
	...

08007fa8 <_ZN21CompetitionScreenViewD1Ev>:

class CompetitionScreenView : public CompetitionScreenViewBase
{
public:
    CompetitionScreenView();
    virtual ~CompetitionScreenView() {}
 8007fa8:	b510      	push	{r4, lr}
 8007faa:	4b03      	ldr	r3, [pc, #12]	; (8007fb8 <_ZN21CompetitionScreenViewD1Ev+0x10>)
 8007fac:	6003      	str	r3, [r0, #0]
 8007fae:	4604      	mov	r4, r0
 8007fb0:	f7fa fcaf 	bl	8002912 <_ZN25CompetitionScreenViewBaseD1Ev>
 8007fb4:	4620      	mov	r0, r4
 8007fb6:	bd10      	pop	{r4, pc}
 8007fb8:	080296c4 	.word	0x080296c4

08007fbc <_ZN21CompetitionScreenViewD0Ev>:
 8007fbc:	b510      	push	{r4, lr}
 8007fbe:	4604      	mov	r4, r0
 8007fc0:	f7ff fff2 	bl	8007fa8 <_ZN21CompetitionScreenViewD1Ev>
 8007fc4:	4620      	mov	r0, r4
 8007fc6:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8007fca:	f01e f9a9 	bl	8026320 <_ZdlPvj>
 8007fce:	4620      	mov	r0, r4
 8007fd0:	bd10      	pop	{r4, pc}
	...

08007fd4 <_ZN21CompetitionScreenViewC1Ev>:
CompetitionScreenView::CompetitionScreenView() { }
 8007fd4:	b510      	push	{r4, lr}
 8007fd6:	4604      	mov	r4, r0
 8007fd8:	f7fa fd7c 	bl	8002ad4 <_ZN25CompetitionScreenViewBaseC1Ev>
 8007fdc:	4b01      	ldr	r3, [pc, #4]	; (8007fe4 <_ZN21CompetitionScreenViewC1Ev+0x10>)
 8007fde:	6023      	str	r3, [r4, #0]
 8007fe0:	4620      	mov	r0, r4
 8007fe2:	bd10      	pop	{r4, pc}
 8007fe4:	080296c4 	.word	0x080296c4

08007fe8 <_ZN21CompetitionScreenView11setupScreenEv>:
    CompetitionScreenViewBase::setupScreen();
 8007fe8:	f7fa bc94 	b.w	8002914 <_ZN25CompetitionScreenViewBase11setupScreenEv>

08007fec <_ZN21CompetitionScreenView10setMissionEPKc>:

void CompetitionScreenView::setMission(const char *mission) {
 8007fec:	b510      	push	{r4, lr}
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 8007fee:	220f      	movs	r2, #15
void CompetitionScreenView::setMission(const char *mission) {
 8007ff0:	4604      	mov	r4, r0
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 8007ff2:	f500 7090 	add.w	r0, r0, #288	; 0x120
 8007ff6:	f00f fc02 	bl	80177fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	txtMission.invalidate();
 8007ffa:	f104 00d4 	add.w	r0, r4, #212	; 0xd4
}
 8007ffe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtMission.invalidate();
 8008002:	f00d bee1 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>

08008006 <_ZN13ModelListener14missionChangedEv>:
    virtual void missionChanged() {};
 8008006:	4770      	bx	lr

08008008 <_ZN21DriverScreenPresenterD1Ev>:
    virtual void deactivate();

    virtual void gearChanged();
    virtual void infoChanged();

    virtual ~DriverScreenPresenter() {}
 8008008:	4770      	bx	lr

0800800a <_ZThn4_N21DriverScreenPresenterD1Ev>:
 800800a:	3804      	subs	r0, #4
 800800c:	4770      	bx	lr

0800800e <_ZN21DriverScreenPresenter8activateEv>:
{

}

void DriverScreenPresenter::activate()
{
 800800e:	b510      	push	{r4, lr}
	infoChanged();
 8008010:	6803      	ldr	r3, [r0, #0]
{
 8008012:	4604      	mov	r4, r0
	infoChanged();
 8008014:	695b      	ldr	r3, [r3, #20]
 8008016:	4798      	blx	r3
	gearChanged();
 8008018:	6823      	ldr	r3, [r4, #0]
 800801a:	4620      	mov	r0, r4
 800801c:	691b      	ldr	r3, [r3, #16]
}
 800801e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	gearChanged();
 8008022:	4718      	bx	r3

08008024 <_ZN21DriverScreenPresenter10deactivateEv>:

void DriverScreenPresenter::deactivate()
{

}
 8008024:	4770      	bx	lr

08008026 <_ZN21DriverScreenPresenterD0Ev>:
 8008026:	b510      	push	{r4, lr}
 8008028:	2110      	movs	r1, #16
 800802a:	4604      	mov	r4, r0
 800802c:	f01e f978 	bl	8026320 <_ZdlPvj>
 8008030:	4620      	mov	r0, r4
 8008032:	bd10      	pop	{r4, pc}

08008034 <_ZThn4_N21DriverScreenPresenterD0Ev>:
 8008034:	f1a0 0004 	sub.w	r0, r0, #4
 8008038:	e7f5      	b.n	8008026 <_ZN21DriverScreenPresenterD0Ev>

0800803a <_ZN21DriverScreenPresenter11gearChangedEv>:
    int getGear() { return gear; }
 800803a:	6883      	ldr	r3, [r0, #8]

void DriverScreenPresenter::gearChanged() {
	view.setGear(model->getGear());
 800803c:	68c0      	ldr	r0, [r0, #12]
 800803e:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 8008042:	f000 b8a3 	b.w	800818c <_ZN16DriverScreenView7setGearEi>

08008046 <_ZThn4_N21DriverScreenPresenter11gearChangedEv>:
    virtual void gearChanged();
 8008046:	f1a0 0004 	sub.w	r0, r0, #4
 800804a:	f7ff bff6 	b.w	800803a <_ZN21DriverScreenPresenter11gearChangedEv>

0800804e <_ZN21DriverScreenPresenter11infoChangedEv>:
 800804e:	6883      	ldr	r3, [r0, #8]
}

void DriverScreenPresenter::infoChanged() {
 8008050:	b510      	push	{r4, lr}
 8008052:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 8008054:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 8008058:	68c0      	ldr	r0, [r0, #12]
 800805a:	f000 f897 	bl	800818c <_ZN16DriverScreenView7setGearEi>
    int getRpm() { return rpm; }
 800805e:	68a3      	ldr	r3, [r4, #8]

	view.setRpm(model->getRpm());
 8008060:	68e0      	ldr	r0, [r4, #12]
 8008062:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8008066:	f000 f8a9 	bl	80081bc <_ZN16DriverScreenView6setRpmEi>
    int getLap() { return lap; }
 800806a:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 800806c:	68e0      	ldr	r0, [r4, #12]
 800806e:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0
 8008072:	f000 f8b5 	bl	80081e0 <_ZN16DriverScreenView6setLapEi>
    int getSpeed() { return speed; }
 8008076:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 8008078:	68e0      	ldr	r0, [r4, #12]
 800807a:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 800807e:	f000 f8c1 	bl	8008204 <_ZN16DriverScreenView8setSpeedEi>
    int getRES() { return RES; }
 8008082:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 8008084:	68e0      	ldr	r0, [r4, #12]
 8008086:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 800808a:	f000 f8cd 	bl	8008228 <_ZN16DriverScreenView6setRESEi>
    bool getLC() { return LC; }
 800808e:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 8008090:	68e0      	ldr	r0, [r4, #12]
 8008092:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 8008096:	f000 f8eb 	bl	8008270 <_ZN16DriverScreenView5setLCEb>
    bool getCLT() { return CLT; }
 800809a:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 800809c:	68e0      	ldr	r0, [r4, #12]
 800809e:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 80080a2:	f000 f8ff 	bl	80082a4 <_ZN16DriverScreenView6setCLTEb>
    int getT_water() { return T_water; }
 80080a6:	68a3      	ldr	r3, [r4, #8]

	view.setTmot(model->getT_water());
 80080a8:	68e0      	ldr	r0, [r4, #12]
 80080aa:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 80080ae:	f000 f913 	bl	80082d8 <_ZN16DriverScreenView7setTmotEi>
    int getT_oil() { return T_oil; }
 80080b2:	68a3      	ldr	r3, [r4, #8]
	view.setToil(model->getT_oil());
 80080b4:	68e0      	ldr	r0, [r4, #12]
 80080b6:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 80080ba:	f000 f91f 	bl	80082fc <_ZN16DriverScreenView7setToilEi>
    float getOrinTemperature() { return orinTemperature; }
 80080be:	68a3      	ldr	r3, [r4, #8]
	view.setTorin(model->getOrinTemperature());
 80080c0:	68e0      	ldr	r0, [r4, #12]
 80080c2:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 80080c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080ca:	ee17 1a90 	vmov	r1, s15
 80080ce:	f000 f927 	bl	8008320 <_ZN16DriverScreenView8setTorinEi>
    float getP_oil() { return P_oil; }
 80080d2:	68a3      	ldr	r3, [r4, #8]

	view.setPoil(model->getP_oil());
 80080d4:	68e0      	ldr	r0, [r4, #12]
 80080d6:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 80080da:	f000 f933 	bl	8008344 <_ZN16DriverScreenView7setPoilEf>
    float getP_fuel() { return P_fuel; }
 80080de:	68a3      	ldr	r3, [r4, #8]
	view.setPfuel(model->getP_fuel());
 80080e0:	68e0      	ldr	r0, [r4, #12]
 80080e2:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 80080e6:	f000 f941 	bl	800836c <_ZN16DriverScreenView8setPfuelEf>
    int getFrontBrakePerc() { return frontBrakePerc; }
 80080ea:	68a3      	ldr	r3, [r4, #8]
	view.setPbrake(model->getFrontBrakePerc());
 80080ec:	68e0      	ldr	r0, [r4, #12]
 80080ee:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 80080f2:	f000 f94f 	bl	8008394 <_ZN16DriverScreenView9setPbrakeEi>
    int getThrottle_perc() { return throttle_perc; }
 80080f6:	68a3      	ldr	r3, [r4, #8]

	view.setTPS(model->getThrottle_perc());
 80080f8:	68e0      	ldr	r0, [r4, #12]
 80080fa:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 80080fe:	f000 f95b 	bl	80083b8 <_ZN16DriverScreenView6setTPSEi>
    float getBattery_v() { return battery_v; }
 8008102:	68a3      	ldr	r3, [r4, #8]

	view.setBat12(model->getBattery_v());
 8008104:	68e0      	ldr	r0, [r4, #12]
 8008106:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 800810a:	f000 f967 	bl	80083dc <_ZN16DriverScreenView8setBat12Ef>
    float getVoltage24v() { return voltage24v; }
 800810e:	68a3      	ldr	r3, [r4, #8]
	view.setBat24(model->getVoltage24v());
 8008110:	68e0      	ldr	r0, [r4, #12]
 8008112:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
}
 8008116:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setBat24(model->getVoltage24v());
 800811a:	f000 b973 	b.w	8008404 <_ZN16DriverScreenView8setBat24Ef>

0800811e <_ZThn4_N21DriverScreenPresenter11infoChangedEv>:
    virtual void infoChanged();
 800811e:	f1a0 0004 	sub.w	r0, r0, #4
 8008122:	f7ff bf94 	b.w	800804e <_ZN21DriverScreenPresenter11infoChangedEv>
	...

08008128 <_ZN21DriverScreenPresenterC1ER16DriverScreenView>:
DriverScreenPresenter::DriverScreenPresenter(DriverScreenView& v)
 8008128:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800812a:	2200      	movs	r2, #0
 800812c:	6082      	str	r2, [r0, #8]
    : view(v)
 800812e:	4a04      	ldr	r2, [pc, #16]	; (8008140 <_ZN21DriverScreenPresenterC1ER16DriverScreenView+0x18>)
 8008130:	60c1      	str	r1, [r0, #12]
 8008132:	f102 0408 	add.w	r4, r2, #8
 8008136:	3228      	adds	r2, #40	; 0x28
 8008138:	6004      	str	r4, [r0, #0]
 800813a:	6042      	str	r2, [r0, #4]
}
 800813c:	bd10      	pop	{r4, pc}
 800813e:	bf00      	nop
 8008140:	080296f0 	.word	0x080296f0

08008144 <_ZN16DriverScreenView14tearDownScreenEv>:
    DriverScreenViewBase::setupScreen();
}

void DriverScreenView::tearDownScreen() {
    DriverScreenViewBase::tearDownScreen();
}
 8008144:	4770      	bx	lr
	...

08008148 <_ZN16DriverScreenViewD1Ev>:

class DriverScreenView : public DriverScreenViewBase
{
public:
    DriverScreenView();
    virtual ~DriverScreenView() {}
 8008148:	b510      	push	{r4, lr}
 800814a:	4b03      	ldr	r3, [pc, #12]	; (8008158 <_ZN16DriverScreenViewD1Ev+0x10>)
 800814c:	6003      	str	r3, [r0, #0]
 800814e:	4604      	mov	r4, r0
 8008150:	f7fa fdb8 	bl	8002cc4 <_ZN20DriverScreenViewBaseD1Ev>
 8008154:	4620      	mov	r0, r4
 8008156:	bd10      	pop	{r4, pc}
 8008158:	08029748 	.word	0x08029748

0800815c <_ZN16DriverScreenViewD0Ev>:
 800815c:	b510      	push	{r4, lr}
 800815e:	4604      	mov	r4, r0
 8008160:	f7ff fff2 	bl	8008148 <_ZN16DriverScreenViewD1Ev>
 8008164:	4620      	mov	r0, r4
 8008166:	f640 411c 	movw	r1, #3100	; 0xc1c
 800816a:	f01e f8d9 	bl	8026320 <_ZdlPvj>
 800816e:	4620      	mov	r0, r4
 8008170:	bd10      	pop	{r4, pc}
	...

08008174 <_ZN16DriverScreenViewC1Ev>:
DriverScreenView::DriverScreenView() {}
 8008174:	b510      	push	{r4, lr}
 8008176:	4604      	mov	r4, r0
 8008178:	f7fa fe3c 	bl	8002df4 <_ZN20DriverScreenViewBaseC1Ev>
 800817c:	4b01      	ldr	r3, [pc, #4]	; (8008184 <_ZN16DriverScreenViewC1Ev+0x10>)
 800817e:	6023      	str	r3, [r4, #0]
 8008180:	4620      	mov	r0, r4
 8008182:	bd10      	pop	{r4, pc}
 8008184:	08029748 	.word	0x08029748

08008188 <_ZN16DriverScreenView11setupScreenEv>:
    DriverScreenViewBase::setupScreen();
 8008188:	f7fa bd9d 	b.w	8002cc6 <_ZN20DriverScreenViewBase11setupScreenEv>

0800818c <_ZN16DriverScreenView7setGearEi>:

void DriverScreenView::setGear(int gear) {
 800818c:	b510      	push	{r4, lr}
	if (gear == 0) {
 800818e:	460b      	mov	r3, r1
void DriverScreenView::setGear(int gear) {
 8008190:	4604      	mov	r4, r0
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008192:	f600 3098 	addw	r0, r0, #2968	; 0xb98
	if (gear == 0) {
 8008196:	b951      	cbnz	r1, 80081ae <_ZN16DriverScreenView7setGearEi+0x22>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008198:	4a06      	ldr	r2, [pc, #24]	; (80081b4 <_ZN16DriverScreenView7setGearEi+0x28>)
 800819a:	234e      	movs	r3, #78	; 0x4e
	}
	else {
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 800819c:	2102      	movs	r1, #2
 800819e:	f00f fe9b 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}

	txtGear.invalidate();
 80081a2:	f204 405c 	addw	r0, r4, #1116	; 0x45c
}
 80081a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtGear.invalidate();
 80081aa:	f00d be0d 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 80081ae:	4a02      	ldr	r2, [pc, #8]	; (80081b8 <_ZN16DriverScreenView7setGearEi+0x2c>)
 80081b0:	e7f4      	b.n	800819c <_ZN16DriverScreenView7setGearEi+0x10>
 80081b2:	bf00      	nop
 80081b4:	08029730 	.word	0x08029730
 80081b8:	08029733 	.word	0x08029733

080081bc <_ZN16DriverScreenView6setRpmEi>:

void DriverScreenView::setRpm(int rpm) {
 80081bc:	b510      	push	{r4, lr}
 80081be:	460b      	mov	r3, r1
 80081c0:	4604      	mov	r4, r0
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%d", rpm);
 80081c2:	4a06      	ldr	r2, [pc, #24]	; (80081dc <_ZN16DriverScreenView6setRpmEi+0x20>)
 80081c4:	2106      	movs	r1, #6
 80081c6:	f600 309c 	addw	r0, r0, #2972	; 0xb9c
 80081ca:	f00f fe85 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRpm.invalidate();
 80081ce:	f504 6095 	add.w	r0, r4, #1192	; 0x4a8
}
 80081d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtRpm.invalidate();
 80081d6:	f00d bdf7 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80081da:	bf00      	nop
 80081dc:	08029733 	.word	0x08029733

080081e0 <_ZN16DriverScreenView6setLapEi>:

void DriverScreenView::setLap(int lap) {
 80081e0:	b510      	push	{r4, lr}
 80081e2:	460b      	mov	r3, r1
 80081e4:	4604      	mov	r4, r0
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 80081e6:	4a06      	ldr	r2, [pc, #24]	; (8008200 <_ZN16DriverScreenView6setLapEi+0x20>)
 80081e8:	2103      	movs	r1, #3
 80081ea:	f600 30f4 	addw	r0, r0, #3060	; 0xbf4
 80081ee:	f00f fe73 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtLap.invalidate();
 80081f2:	f504 6030 	add.w	r0, r4, #2816	; 0xb00
}
 80081f6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtLap.invalidate();
 80081fa:	f00d bde5 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80081fe:	bf00      	nop
 8008200:	08029733 	.word	0x08029733

08008204 <_ZN16DriverScreenView8setSpeedEi>:

void DriverScreenView::setSpeed(int speed) {
 8008204:	b510      	push	{r4, lr}
 8008206:	460b      	mov	r3, r1
 8008208:	4604      	mov	r4, r0
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%d", speed);
 800820a:	4a06      	ldr	r2, [pc, #24]	; (8008224 <_ZN16DriverScreenView8setSpeedEi+0x20>)
 800820c:	2108      	movs	r1, #8
 800820e:	f600 30fa 	addw	r0, r0, #3066	; 0xbfa
 8008212:	f00f fe61 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.invalidate();
 8008216:	f604 304c 	addw	r0, r4, #2892	; 0xb4c
}
 800821a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtSpeed.invalidate();
 800821e:	f00d bdd3 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008222:	bf00      	nop
 8008224:	08029733 	.word	0x08029733

08008228 <_ZN16DriverScreenView6setRESEi>:

void DriverScreenView::setRES(int resVal) {
	switch (resVal) {
 8008228:	2901      	cmp	r1, #1
void DriverScreenView::setRES(int resVal) {
 800822a:	b510      	push	{r4, lr}
 800822c:	4604      	mov	r4, r0
	switch (resVal) {
 800822e:	d008      	beq.n	8008242 <_ZN16DriverScreenView6setRESEi+0x1a>
 8008230:	2903      	cmp	r1, #3
 8008232:	d018      	beq.n	8008266 <_ZN16DriverScreenView6setRESEi+0x3e>
 8008234:	b969      	cbnz	r1, 8008252 <_ZN16DriverScreenView6setRESEi+0x2a>
 8008236:	4b0d      	ldr	r3, [pc, #52]	; (800826c <_ZN16DriverScreenView6setRESEi+0x44>)
 8008238:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
        color = newColor;
 800823c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008240:	e005      	b.n	800824e <_ZN16DriverScreenView6setRESEi+0x26>
 8008242:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008246:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
 800824a:	f04f 33ff 	mov.w	r3, #4294967295
 800824e:	f8c4 35b8 	str.w	r3, [r4, #1464]	; 0x5b8
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		break;
	}

	boxRES.invalidate();
 8008252:	f504 7008 	add.w	r0, r4, #544	; 0x220
 8008256:	f00d fdb7 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 800825a:	f504 60b1 	add.w	r0, r4, #1416	; 0x588
}
 800825e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 8008262:	f00d bdb1 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008266:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 800826a:	e7e5      	b.n	8008238 <_ZN16DriverScreenView6setRESEi+0x10>
 800826c:	ffff0000 	.word	0xffff0000

08008270 <_ZN16DriverScreenView5setLCEb>:

void DriverScreenView::setLC(bool isLcOn) {
 8008270:	b510      	push	{r4, lr}
 8008272:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008276:	4604      	mov	r4, r0
	if (isLcOn) {
 8008278:	b179      	cbz	r1, 800829a <_ZN16DriverScreenView5setLCEb+0x2a>
 800827a:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 800827e:	f8c0 2178 	str.w	r2, [r0, #376]	; 0x178
	else {
		boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelLC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxLC.invalidate();
 8008282:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 8008286:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 800828a:	f00d fd9d 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 800828e:	f504 60a8 	add.w	r0, r4, #1344	; 0x540
}
 8008292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 8008296:	f00d bd97 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800829a:	f8c0 3178 	str.w	r3, [r0, #376]	; 0x178
 800829e:	f04f 33ff 	mov.w	r3, #4294967295
 80082a2:	e7ee      	b.n	8008282 <_ZN16DriverScreenView5setLCEb+0x12>

080082a4 <_ZN16DriverScreenView6setCLTEb>:

void DriverScreenView::setCLT(bool isCltPulled) {
 80082a4:	b510      	push	{r4, lr}
 80082a6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80082aa:	4604      	mov	r4, r0
	if (isCltPulled) {
 80082ac:	b179      	cbz	r1, 80082ce <_ZN16DriverScreenView6setCLTEb+0x2a>
 80082ae:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 80082b2:	f8c0 21e0 	str.w	r2, [r0, #480]	; 0x1e0
	else {
		boxCLT.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelCLT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxCLT.invalidate();
 80082b6:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 80082ba:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 80082be:	f00d fd83 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelCLT.invalidate();
 80082c2:	f504 60ba 	add.w	r0, r4, #1488	; 0x5d0
}
 80082c6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelCLT.invalidate();
 80082ca:	f00d bd7d 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80082ce:	f8c0 31e0 	str.w	r3, [r0, #480]	; 0x1e0
 80082d2:	f04f 33ff 	mov.w	r3, #4294967295
 80082d6:	e7ee      	b.n	80082b6 <_ZN16DriverScreenView6setCLTEb+0x12>

080082d8 <_ZN16DriverScreenView7setTmotEi>:


void DriverScreenView::setTmot(int motTemp) {
 80082d8:	b510      	push	{r4, lr}
 80082da:	460b      	mov	r3, r1
 80082dc:	4604      	mov	r4, r0
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%d", motTemp);
 80082de:	4a06      	ldr	r2, [pc, #24]	; (80082f8 <_ZN16DriverScreenView7setTmotEi+0x20>)
 80082e0:	2104      	movs	r1, #4
 80082e2:	f600 30a8 	addw	r0, r0, #2984	; 0xba8
 80082e6:	f00f fdf7 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTmot.invalidate();
 80082ea:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
}
 80082ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTmot.invalidate();
 80082f2:	f00d bd69 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80082f6:	bf00      	nop
 80082f8:	08029733 	.word	0x08029733

080082fc <_ZN16DriverScreenView7setToilEi>:

void DriverScreenView::setToil(int oilTemp) {
 80082fc:	b510      	push	{r4, lr}
 80082fe:	460b      	mov	r3, r1
 8008300:	4604      	mov	r4, r0
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%d", oilTemp);
 8008302:	4a06      	ldr	r2, [pc, #24]	; (800831c <_ZN16DriverScreenView7setToilEi+0x20>)
 8008304:	2104      	movs	r1, #4
 8008306:	f600 30e4 	addw	r0, r0, #3044	; 0xbe4
 800830a:	f00f fde5 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtToil.invalidate();
 800830e:	f604 2068 	addw	r0, r4, #2664	; 0xa68
}
 8008312:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtToil.invalidate();
 8008316:	f00d bd57 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800831a:	bf00      	nop
 800831c:	08029733 	.word	0x08029733

08008320 <_ZN16DriverScreenView8setTorinEi>:

void DriverScreenView::setTorin(int orinTemp) {
 8008320:	b510      	push	{r4, lr}
 8008322:	460b      	mov	r3, r1
 8008324:	4604      	mov	r4, r0
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%d", orinTemp);
 8008326:	4a06      	ldr	r2, [pc, #24]	; (8008340 <_ZN16DriverScreenView8setTorinEi+0x20>)
 8008328:	2104      	movs	r1, #4
 800832a:	f600 30ec 	addw	r0, r0, #3052	; 0xbec
 800832e:	f00f fdd3 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTorin.invalidate();
 8008332:	f604 20b4 	addw	r0, r4, #2740	; 0xab4
}
 8008336:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTorin.invalidate();
 800833a:	f00d bd45 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800833e:	bf00      	nop
 8008340:	08029733 	.word	0x08029733

08008344 <_ZN16DriverScreenView7setPoilEf>:

void DriverScreenView::setPoil(float oilPressure) {
 8008344:	b513      	push	{r0, r1, r4, lr}
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8008346:	4a08      	ldr	r2, [pc, #32]	; (8008368 <_ZN16DriverScreenView7setPoilEf+0x24>)
 8008348:	ed8d 0a01 	vstr	s0, [sp, #4]
 800834c:	4604      	mov	r4, r0
 800834e:	ab01      	add	r3, sp, #4
 8008350:	2105      	movs	r1, #5
 8008352:	f500 603b 	add.w	r0, r0, #2992	; 0xbb0
 8008356:	f00f ffab 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPoilBuffer, TXTPOIL_SIZE, "%.2f", oilPressure);
    txtPoil.invalidate();
 800835a:	f504 600a 	add.w	r0, r4, #2208	; 0x8a0
}
 800835e:	b002      	add	sp, #8
 8008360:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPoil.invalidate();
 8008364:	f00d bd30 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008368:	08029736 	.word	0x08029736

0800836c <_ZN16DriverScreenView8setPfuelEf>:

void DriverScreenView::setPfuel(float fuelPressure) {
 800836c:	b513      	push	{r0, r1, r4, lr}
 800836e:	4a08      	ldr	r2, [pc, #32]	; (8008390 <_ZN16DriverScreenView8setPfuelEf+0x24>)
 8008370:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008374:	4604      	mov	r4, r0
 8008376:	ab01      	add	r3, sp, #4
 8008378:	2104      	movs	r1, #4
 800837a:	f600 30d2 	addw	r0, r0, #3026	; 0xbd2
 800837e:	f00f ff97 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPfuelBuffer, TXTPFUEL_SIZE, "%.1f", fuelPressure);
    txtPfuel.invalidate();
 8008382:	f504 601d 	add.w	r0, r4, #2512	; 0x9d0
}
 8008386:	b002      	add	sp, #8
 8008388:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPfuel.invalidate();
 800838c:	f00d bd1c 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008390:	0802973b 	.word	0x0802973b

08008394 <_ZN16DriverScreenView9setPbrakeEi>:

void DriverScreenView::setPbrake(int brakePressure) {
 8008394:	b510      	push	{r4, lr}
 8008396:	460b      	mov	r3, r1
 8008398:	4604      	mov	r4, r0
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%d", brakePressure);
 800839a:	4a06      	ldr	r2, [pc, #24]	; (80083b4 <_ZN16DriverScreenView9setPbrakeEi+0x20>)
 800839c:	2104      	movs	r1, #4
 800839e:	f500 603c 	add.w	r0, r0, #3008	; 0xbc0
 80083a2:	f00f fd99 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtPbrake.invalidate();
 80083a6:	f604 1038 	addw	r0, r4, #2360	; 0x938
}
 80083aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPbrake.invalidate();
 80083ae:	f00d bd0b 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80083b2:	bf00      	nop
 80083b4:	08029733 	.word	0x08029733

080083b8 <_ZN16DriverScreenView6setTPSEi>:

void DriverScreenView::setTPS(int tpsPercentage) {
 80083b8:	b510      	push	{r4, lr}
 80083ba:	460b      	mov	r3, r1
 80083bc:	4604      	mov	r4, r0
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%d", tpsPercentage);
 80083be:	4a06      	ldr	r2, [pc, #24]	; (80083d8 <_ZN16DriverScreenView6setTPSEi+0x20>)
 80083c0:	2103      	movs	r1, #3
 80083c2:	f600 30ba 	addw	r0, r0, #3002	; 0xbba
 80083c6:	f00f fd87 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTPS.invalidate();
 80083ca:	f604 00ec 	addw	r0, r4, #2284	; 0x8ec
}
 80083ce:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTPS.invalidate();
 80083d2:	f00d bcf9 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80083d6:	bf00      	nop
 80083d8:	08029733 	.word	0x08029733

080083dc <_ZN16DriverScreenView8setBat12Ef>:

void DriverScreenView::setBat12(float voltage) {
 80083dc:	b513      	push	{r0, r1, r4, lr}
 80083de:	4a08      	ldr	r2, [pc, #32]	; (8008400 <_ZN16DriverScreenView8setBat12Ef+0x24>)
 80083e0:	ed8d 0a01 	vstr	s0, [sp, #4]
 80083e4:	4604      	mov	r4, r0
 80083e6:	ab01      	add	r3, sp, #4
 80083e8:	2105      	movs	r1, #5
 80083ea:	f600 30da 	addw	r0, r0, #3034	; 0xbda
 80083ee:	f00f ff5f 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat12Buffer, TXTBAT12_SIZE, "%.1f", voltage);
    txtBat12.invalidate();
 80083f2:	f604 201c 	addw	r0, r4, #2588	; 0xa1c
}
 80083f6:	b002      	add	sp, #8
 80083f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat12.invalidate();
 80083fc:	f00d bce4 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008400:	0802973b 	.word	0x0802973b

08008404 <_ZN16DriverScreenView8setBat24Ef>:

void DriverScreenView::setBat24(float voltage) {
 8008404:	b513      	push	{r0, r1, r4, lr}
 8008406:	4a08      	ldr	r2, [pc, #32]	; (8008428 <_ZN16DriverScreenView8setBat24Ef+0x24>)
 8008408:	ed8d 0a01 	vstr	s0, [sp, #4]
 800840c:	4604      	mov	r4, r0
 800840e:	ab01      	add	r3, sp, #4
 8008410:	2105      	movs	r1, #5
 8008412:	f600 30c8 	addw	r0, r0, #3016	; 0xbc8
 8008416:	f00f ff4b 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat24Buffer, TXTBAT24_SIZE, "%.1f", voltage);
    txtBat24.invalidate();
 800841a:	f604 1084 	addw	r0, r4, #2436	; 0x984
}
 800841e:	b002      	add	sp, #8
 8008420:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat24.invalidate();
 8008424:	f00d bcd0 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008428:	0802973b 	.word	0x0802973b

0800842c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800842c:	4770      	bx	lr

0800842e <_ZN19FrontendApplicationD0Ev>:
 800842e:	b510      	push	{r4, lr}
 8008430:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8008434:	4604      	mov	r4, r0
 8008436:	f01d ff73 	bl	8026320 <_ZdlPvj>
 800843a:	4620      	mov	r0, r4
 800843c:	bd10      	pop	{r4, pc}

0800843e <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800843e:	b510      	push	{r4, lr}
 8008440:	4604      	mov	r4, r0
    {
        model.tick();
 8008442:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 8008446:	f000 fbdb 	bl	8008c00 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800844a:	4620      	mov	r0, r4
    }
 800844c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8008450:	f00c bc96 	b.w	8014d80 <_ZN8touchgfx11Application15handleTickEventEv>

08008454 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8008454:	b510      	push	{r4, lr}
 8008456:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8008458:	f7fb ffe6 	bl	8004428 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800845c:	4b01      	ldr	r3, [pc, #4]	; (8008464 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 800845e:	6023      	str	r3, [r4, #0]
{

}
 8008460:	4620      	mov	r0, r4
 8008462:	bd10      	pop	{r4, pc}
 8008464:	0802977c 	.word	0x0802977c

08008468 <_ZN24MainInfotaimentPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainInfotaimentPresenter() {};
 8008468:	4770      	bx	lr

0800846a <_ZThn4_N24MainInfotaimentPresenterD1Ev>:
 800846a:	3804      	subs	r0, #4
 800846c:	4770      	bx	lr

0800846e <_ZN24MainInfotaimentPresenter8activateEv>:
{
	view.setRES(3);
}

void MainInfotaimentPresenter::activate()
{
 800846e:	b510      	push	{r4, lr}
	infoChanged();
 8008470:	6803      	ldr	r3, [r0, #0]
{
 8008472:	4604      	mov	r4, r0
	infoChanged();
 8008474:	695b      	ldr	r3, [r3, #20]
 8008476:	4798      	blx	r3
	debugMessageChanged();
 8008478:	6823      	ldr	r3, [r4, #0]
 800847a:	4620      	mov	r0, r4
 800847c:	699b      	ldr	r3, [r3, #24]
}
 800847e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	debugMessageChanged();
 8008482:	4718      	bx	r3

08008484 <_ZN24MainInfotaimentPresenter10deactivateEv>:

void MainInfotaimentPresenter::deactivate()
{
	
}
 8008484:	4770      	bx	lr

08008486 <_ZN24MainInfotaimentPresenterD0Ev>:
 8008486:	b510      	push	{r4, lr}
 8008488:	2110      	movs	r1, #16
 800848a:	4604      	mov	r4, r0
 800848c:	f01d ff48 	bl	8026320 <_ZdlPvj>
 8008490:	4620      	mov	r0, r4
 8008492:	bd10      	pop	{r4, pc}

08008494 <_ZThn4_N24MainInfotaimentPresenterD0Ev>:
 8008494:	f1a0 0004 	sub.w	r0, r0, #4
 8008498:	e7f5      	b.n	8008486 <_ZN24MainInfotaimentPresenterD0Ev>

0800849a <_ZN24MainInfotaimentPresenter11gearChangedEv>:
    int getGear() { return gear; }
 800849a:	6883      	ldr	r3, [r0, #8]

void MainInfotaimentPresenter::gearChanged()
{
	view.setGear(model->getGear());
 800849c:	68c0      	ldr	r0, [r0, #12]
 800849e:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80084a2:	f000 b8ad 	b.w	8008600 <_ZN19MainInfotaimentView7setGearEi>

080084a6 <_ZThn4_N24MainInfotaimentPresenter11gearChangedEv>:

    //from model
    virtual void gearChanged();
 80084a6:	f1a0 0004 	sub.w	r0, r0, #4
 80084aa:	f7ff bff6 	b.w	800849a <_ZN24MainInfotaimentPresenter11gearChangedEv>

080084ae <_ZN24MainInfotaimentPresenter11infoChangedEv>:
 80084ae:	6883      	ldr	r3, [r0, #8]
}

void MainInfotaimentPresenter::infoChanged()
{
 80084b0:	b510      	push	{r4, lr}
 80084b2:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 80084b4:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80084b8:	68c0      	ldr	r0, [r0, #12]
 80084ba:	f000 f8a1 	bl	8008600 <_ZN19MainInfotaimentView7setGearEi>
    int getSpeed() { return speed; }
 80084be:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 80084c0:	68e0      	ldr	r0, [r4, #12]
 80084c2:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 80084c6:	f000 f8c9 	bl	800865c <_ZN19MainInfotaimentView8setSpeedEi>
    int getRpm() { return rpm; }
 80084ca:	68a3      	ldr	r3, [r4, #8]
	view.setRpm(model->getRpm());
 80084cc:	68e0      	ldr	r0, [r4, #12]
 80084ce:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 80084d2:	f000 f973 	bl	80087bc <_ZN19MainInfotaimentView6setRpmEi>
    int getT_water() { return T_water; }
 80084d6:	68a3      	ldr	r3, [r4, #8]

	view.setT_Water(model->getT_water());
 80084d8:	68e0      	ldr	r0, [r4, #12]
 80084da:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 80084de:	f000 f9c3 	bl	8008868 <_ZN19MainInfotaimentView10setT_WaterEi>
    int getT_oil() { return T_oil; }
 80084e2:	68a3      	ldr	r3, [r4, #8]
	view.setT_Oil(model->getT_oil());
 80084e4:	68e0      	ldr	r0, [r4, #12]
 80084e6:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 80084ea:	f000 f9e7 	bl	80088bc <_ZN19MainInfotaimentView8setT_OilEi>
    float getP_oil() { return P_oil; }
 80084ee:	68a3      	ldr	r3, [r4, #8]
	view.setP_Oil(model->getP_oil());
 80084f0:	68e0      	ldr	r0, [r4, #12]
 80084f2:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 80084f6:	f000 fa0b 	bl	8008910 <_ZN19MainInfotaimentView8setP_OilEf>
    float getP_fuel() { return P_fuel; }
 80084fa:	68a3      	ldr	r3, [r4, #8]
	view.setP_Fuel(model->getP_fuel());
 80084fc:	68e0      	ldr	r0, [r4, #12]
 80084fe:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 8008502:	f000 f8bd 	bl	8008680 <_ZN19MainInfotaimentView9setP_FuelEf>
    int getThrottle_perc() { return throttle_perc; }
 8008506:	68a3      	ldr	r3, [r4, #8]

	view.setThrottle_Perc(model->getThrottle_perc());
 8008508:	68e0      	ldr	r0, [r4, #12]
 800850a:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 800850e:	f000 f949 	bl	80087a4 <_ZN19MainInfotaimentView16setThrottle_PercEi>
    int getFrontBrakePerc() { return frontBrakePerc; }
 8008512:	68a3      	ldr	r3, [r4, #8]

	view.setFrontBrake_Perc(model->getFrontBrakePerc());
 8008514:	68e0      	ldr	r0, [r4, #12]
 8008516:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 800851a:	f000 f947 	bl	80087ac <_ZN19MainInfotaimentView18setFrontBrake_PercEi>
    int getRearBrakePerc() { return rearBrakePerc; }
 800851e:	68a3      	ldr	r3, [r4, #8]
	view.setRearBrake_Perc(model->getRearBrakePerc());
 8008520:	68e0      	ldr	r0, [r4, #12]
 8008522:	f8d3 10bc 	ldr.w	r1, [r3, #188]	; 0xbc
 8008526:	f000 f945 	bl	80087b4 <_ZN19MainInfotaimentView17setRearBrake_PercEi>
    int getRES() { return RES; }
 800852a:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 800852c:	68e0      	ldr	r0, [r4, #12]
 800852e:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 8008532:	f000 f8bb 	bl	80086ac <_ZN19MainInfotaimentView6setRESEi>
    bool getLC() { return LC; }
 8008536:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 8008538:	68e0      	ldr	r0, [r4, #12]
 800853a:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 800853e:	f000 f8d9 	bl	80086f4 <_ZN19MainInfotaimentView5setLCEb>
    bool getCLT() { return CLT; }
 8008542:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 8008544:	68e0      	ldr	r0, [r4, #12]
 8008546:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 800854a:	f000 f8ed 	bl	8008728 <_ZN19MainInfotaimentView6setCLTEb>
    float getBattery_v() { return battery_v; }
 800854e:	68a3      	ldr	r3, [r4, #8]

	view.setBattery_V(model->getBattery_v());
 8008550:	68e0      	ldr	r0, [r4, #12]
 8008552:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 8008556:	f000 fa8b 	bl	8008a70 <_ZN19MainInfotaimentView12setBattery_VEf>
    float getOrinTemperature() { return orinTemperature; }
 800855a:	68a3      	ldr	r3, [r4, #8]

	view.setOrinTemperature(model->getOrinTemperature());
 800855c:	68e0      	ldr	r0, [r4, #12]
 800855e:	ed93 0a31 	vldr	s0, [r3, #196]	; 0xc4
 8008562:	f000 fa11 	bl	8008988 <_ZN19MainInfotaimentView18setOrinTemperatureEf>
    float getVoltage24v() { return voltage24v; }
 8008566:	68a3      	ldr	r3, [r4, #8]
	view.setVoltage24v(model->getVoltage24v());
 8008568:	68e0      	ldr	r0, [r4, #12]
 800856a:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
 800856e:	f000 fa41 	bl	80089f4 <_ZN19MainInfotaimentView13setVoltage24vEf>
    int getLap() { return lap; }
 8008572:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 8008574:	68e0      	ldr	r0, [r4, #12]
 8008576:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0

	/* TODO: String variables */
}
 800857a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setLap(model->getLap());
 800857e:	f000 b8ed 	b.w	800875c <_ZN19MainInfotaimentView6setLapEi>

08008582 <_ZThn4_N24MainInfotaimentPresenter11infoChangedEv>:
    virtual void infoChanged();
 8008582:	f1a0 0004 	sub.w	r0, r0, #4
 8008586:	f7ff bf92 	b.w	80084ae <_ZN24MainInfotaimentPresenter11infoChangedEv>

0800858a <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>:

    const char* getDebugMessage() { return dbgMessage; }
 800858a:	6883      	ldr	r3, [r0, #8]


void MainInfotaimentPresenter::debugMessageChanged() {
	view.setDebugMessage(model->getDebugMessage());
 800858c:	68c0      	ldr	r0, [r0, #12]
 800858e:	6859      	ldr	r1, [r3, #4]
 8008590:	f000 b8f6 	b.w	8008780 <_ZN19MainInfotaimentView15setDebugMessageEPKc>

08008594 <_ZThn4_N24MainInfotaimentPresenter19debugMessageChangedEv>:
    virtual void debugMessageChanged();
 8008594:	f1a0 0004 	sub.w	r0, r0, #4
 8008598:	f7ff bff7 	b.w	800858a <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>

0800859c <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>:
MainInfotaimentPresenter::MainInfotaimentPresenter(MainInfotaimentView& v)
 800859c:	b510      	push	{r4, lr}
 800859e:	2200      	movs	r2, #0
 80085a0:	6082      	str	r2, [r0, #8]
    : view(v)
 80085a2:	4a04      	ldr	r2, [pc, #16]	; (80085b4 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView+0x18>)
 80085a4:	60c1      	str	r1, [r0, #12]
 80085a6:	f102 0408 	add.w	r4, r2, #8
 80085aa:	322c      	adds	r2, #44	; 0x2c
 80085ac:	6004      	str	r4, [r0, #0]
 80085ae:	6042      	str	r2, [r0, #4]
}
 80085b0:	bd10      	pop	{r4, pc}
 80085b2:	bf00      	nop
 80085b4:	080297c8 	.word	0x080297c8

080085b8 <_ZN19MainInfotaimentView14tearDownScreenEv>:
}

void MainInfotaimentView::tearDownScreen()
{
  MainInfotaimentViewBase::tearDownScreen();
}
 80085b8:	4770      	bx	lr
	...

080085bc <_ZN19MainInfotaimentViewD1Ev>:

class MainInfotaimentView : public MainInfotaimentViewBase
{
public:
    MainInfotaimentView();
    virtual ~MainInfotaimentView() {}
 80085bc:	b510      	push	{r4, lr}
 80085be:	4b03      	ldr	r3, [pc, #12]	; (80085cc <_ZN19MainInfotaimentViewD1Ev+0x10>)
 80085c0:	6003      	str	r3, [r0, #0]
 80085c2:	4604      	mov	r4, r0
 80085c4:	f7fc fe28 	bl	8005218 <_ZN23MainInfotaimentViewBaseD1Ev>
 80085c8:	4620      	mov	r0, r4
 80085ca:	bd10      	pop	{r4, pc}
 80085cc:	08029834 	.word	0x08029834

080085d0 <_ZN19MainInfotaimentViewD0Ev>:
 80085d0:	b510      	push	{r4, lr}
 80085d2:	4604      	mov	r4, r0
 80085d4:	f7ff fff2 	bl	80085bc <_ZN19MainInfotaimentViewD1Ev>
 80085d8:	4620      	mov	r0, r4
 80085da:	f244 7198 	movw	r1, #18328	; 0x4798
 80085de:	f01d fe9f 	bl	8026320 <_ZdlPvj>
 80085e2:	4620      	mov	r0, r4
 80085e4:	bd10      	pop	{r4, pc}
	...

080085e8 <_ZN19MainInfotaimentViewC1Ev>:
MainInfotaimentView::MainInfotaimentView()
 80085e8:	b510      	push	{r4, lr}
 80085ea:	4604      	mov	r4, r0
 80085ec:	f7fc fe84 	bl	80052f8 <_ZN23MainInfotaimentViewBaseC1Ev>
 80085f0:	4b01      	ldr	r3, [pc, #4]	; (80085f8 <_ZN19MainInfotaimentViewC1Ev+0x10>)
 80085f2:	6023      	str	r3, [r4, #0]
}
 80085f4:	4620      	mov	r0, r4
 80085f6:	bd10      	pop	{r4, pc}
 80085f8:	08029834 	.word	0x08029834

080085fc <_ZN19MainInfotaimentView11setupScreenEv>:
  MainInfotaimentViewBase::setupScreen();
 80085fc:	f7fc bde8 	b.w	80051d0 <_ZN23MainInfotaimentViewBase11setupScreenEv>

08008600 <_ZN19MainInfotaimentView7setGearEi>:

void MainInfotaimentView::setGear(int gear)
{
 8008600:	b510      	push	{r4, lr}
 8008602:	4604      	mov	r4, r0
	//update text area

	if (!gear)
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008604:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 8008608:	300c      	adds	r0, #12
	if (!gear)
 800860a:	460b      	mov	r3, r1
 800860c:	b9d9      	cbnz	r1, 8008646 <_ZN19MainInfotaimentView7setGearEi+0x46>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 800860e:	4a0f      	ldr	r2, [pc, #60]	; (800864c <_ZN19MainInfotaimentView7setGearEi+0x4c>)
 8008610:	234e      	movs	r3, #78	; 0x4e
	else
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 8008612:	2102      	movs	r1, #2
 8008614:	f00f fc60 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3d", 150);
 8008618:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 800861c:	4a0c      	ldr	r2, [pc, #48]	; (8008650 <_ZN19MainInfotaimentView7setGearEi+0x50>)
 800861e:	2396      	movs	r3, #150	; 0x96
 8008620:	2104      	movs	r1, #4
 8008622:	3010      	adds	r0, #16
 8008624:	f00f fc58 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%4d", 4200);
 8008628:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 800862c:	4a09      	ldr	r2, [pc, #36]	; (8008654 <_ZN19MainInfotaimentView7setGearEi+0x54>)
 800862e:	f241 0368 	movw	r3, #4200	; 0x1068
 8008632:	2107      	movs	r1, #7
 8008634:	3018      	adds	r0, #24
 8008636:	f00f fc4f 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtGear.invalidate();
 800863a:	f104 006c 	add.w	r0, r4, #108	; 0x6c
}
 800863e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtGear.invalidate();
 8008642:	f00d bbc1 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 8008646:	4a04      	ldr	r2, [pc, #16]	; (8008658 <_ZN19MainInfotaimentView7setGearEi+0x58>)
 8008648:	e7e3      	b.n	8008612 <_ZN19MainInfotaimentView7setGearEi+0x12>
 800864a:	bf00      	nop
 800864c:	08029730 	.word	0x08029730
 8008650:	0802980c 	.word	0x0802980c
 8008654:	08029810 	.word	0x08029810
 8008658:	08029733 	.word	0x08029733

0800865c <_ZN19MainInfotaimentView8setSpeedEi>:

void MainInfotaimentView::setSpeed(int speed)
{
 800865c:	b510      	push	{r4, lr}
 800865e:	4604      	mov	r4, r0
	//update text area

	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 8008660:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
{
 8008664:	460b      	mov	r3, r1
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 8008666:	4a05      	ldr	r2, [pc, #20]	; (800867c <_ZN19MainInfotaimentView8setSpeedEi+0x20>)
 8008668:	2104      	movs	r1, #4
 800866a:	3010      	adds	r0, #16
 800866c:	f00f fc34 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtSpeed.invalidate();
 8008670:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
}
 8008674:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtSpeed.invalidate();
 8008678:	f00d bba6 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800867c:	08029814 	.word	0x08029814

08008680 <_ZN19MainInfotaimentView9setP_FuelEf>:

	txtPOil.invalidate();
	imgOilPres.invalidate();
}

void MainInfotaimentView::setP_Fuel(float p_fuel) {
 8008680:	b513      	push	{r0, r1, r4, lr}
 8008682:	4604      	mov	r4, r0
 8008684:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 8008688:	4a07      	ldr	r2, [pc, #28]	; (80086a8 <_ZN19MainInfotaimentView9setP_FuelEf+0x28>)
 800868a:	ed8d 0a01 	vstr	s0, [sp, #4]
 800868e:	ab01      	add	r3, sp, #4
 8008690:	2106      	movs	r1, #6
 8008692:	3008      	adds	r0, #8
 8008694:	f00f fe0c 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtPFuelBuffer, TXTPFUEL_SIZE, "%.2f", p_fuel);
	txtPFuel.invalidate();
 8008698:	f504 5099 	add.w	r0, r4, #4896	; 0x1320
 800869c:	3004      	adds	r0, #4
}
 800869e:	b002      	add	sp, #8
 80086a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPFuel.invalidate();
 80086a4:	f00d bb90 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80086a8:	08029736 	.word	0x08029736

080086ac <_ZN19MainInfotaimentView6setRESEi>:
  img24v.invalidate();
  txt24v.invalidate();
}

void MainInfotaimentView::setRES(int RES)
{
 80086ac:	b510      	push	{r4, lr}
 80086ae:	4604      	mov	r4, r0
	if(!RES)
 80086b0:	b929      	cbnz	r1, 80086be <_ZN19MainInfotaimentView6setRESEi+0x12>
 80086b2:	4b0f      	ldr	r3, [pc, #60]	; (80086f0 <_ZN19MainInfotaimentView6setRESEi+0x44>)
 80086b4:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 80086b8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80086bc:	e007      	b.n	80086ce <_ZN19MainInfotaimentView6setRESEi+0x22>
	{
		/* Turn RES EMERGENCY MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	} else if(RES == 1)
 80086be:	2901      	cmp	r1, #1
 80086c0:	d111      	bne.n	80086e6 <_ZN19MainInfotaimentView6setRESEi+0x3a>
 80086c2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80086c6:	f8c0 35d4 	str.w	r3, [r0, #1492]	; 0x5d4
 80086ca:	f04f 33ff 	mov.w	r3, #4294967295
 80086ce:	f8c4 37ac 	str.w	r3, [r4, #1964]	; 0x7ac
		/* Turn RES GO MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxRES.invalidate();
 80086d2:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 80086d6:	f00d fb77 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 80086da:	f204 707c 	addw	r0, r4, #1916	; 0x77c
}
 80086de:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 80086e2:	f00d bb71 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if(RES == 3)
 80086e6:	2903      	cmp	r1, #3
 80086e8:	d1f3      	bne.n	80086d2 <_ZN19MainInfotaimentView6setRESEi+0x26>
 80086ea:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 80086ee:	e7e1      	b.n	80086b4 <_ZN19MainInfotaimentView6setRESEi+0x8>
 80086f0:	ffff0000 	.word	0xffff0000

080086f4 <_ZN19MainInfotaimentView5setLCEb>:

void MainInfotaimentView::setLC(bool LC)
{
 80086f4:	b510      	push	{r4, lr}
 80086f6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80086fa:	4604      	mov	r4, r0
	if(!LC)
 80086fc:	b979      	cbnz	r1, 800871e <_ZN19MainInfotaimentView5setLCEb+0x2a>
 80086fe:	f8c0 3c18 	str.w	r3, [r0, #3096]	; 0xc18
 8008702:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on LC box */
    boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxLC.invalidate();
 8008706:	f504 603f 	add.w	r0, r4, #3056	; 0xbf0
 800870a:	f8c4 3c54 	str.w	r3, [r4, #3156]	; 0xc54
 800870e:	f00d fb5b 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 8008712:	f604 4024 	addw	r0, r4, #3108	; 0xc24
}
 8008716:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 800871a:	f00d bb55 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800871e:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 8008722:	f8c0 2c18 	str.w	r2, [r0, #3096]	; 0xc18
 8008726:	e7ee      	b.n	8008706 <_ZN19MainInfotaimentView5setLCEb+0x12>

08008728 <_ZN19MainInfotaimentView6setCLTEb>:

void MainInfotaimentView::setCLT(bool CLT)
{
 8008728:	b510      	push	{r4, lr}
 800872a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800872e:	4604      	mov	r4, r0
	if(!CLT)
 8008730:	b979      	cbnz	r1, 8008752 <_ZN19MainInfotaimentView6setCLTEb+0x2a>
 8008732:	f8c0 3c94 	str.w	r3, [r0, #3220]	; 0xc94
 8008736:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on CLT box */
    boxClutch.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelClutch.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxClutch.invalidate();
 800873a:	f604 406c 	addw	r0, r4, #3180	; 0xc6c
 800873e:	f8c4 3cd0 	str.w	r3, [r4, #3280]	; 0xcd0
 8008742:	f00d fb41 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelClutch.invalidate();
 8008746:	f504 604a 	add.w	r0, r4, #3232	; 0xca0
}
 800874a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelClutch.invalidate();
 800874e:	f00d bb3b 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008752:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 8008756:	f8c0 2c94 	str.w	r2, [r0, #3220]	; 0xc94
 800875a:	e7ee      	b.n	800873a <_ZN19MainInfotaimentView6setCLTEb+0x12>

0800875c <_ZN19MainInfotaimentView6setLapEi>:

	txtBattery_V.invalidate();
	imgBatteryV.invalidate();
}

void MainInfotaimentView::setLap(int lap) {
 800875c:	b510      	push	{r4, lr}
 800875e:	4604      	mov	r4, r0
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 8008760:	f500 50b9 	add.w	r0, r0, #5920	; 0x1720
void MainInfotaimentView::setLap(int lap) {
 8008764:	460b      	mov	r3, r1
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 8008766:	4a05      	ldr	r2, [pc, #20]	; (800877c <_ZN19MainInfotaimentView6setLapEi+0x20>)
 8008768:	2103      	movs	r1, #3
 800876a:	3006      	adds	r0, #6
 800876c:	f00f fbb4 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtLap.invalidate();
 8008770:	f504 60e6 	add.w	r0, r4, #1840	; 0x730
}
 8008774:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtLap.invalidate();
 8008778:	f00d bb26 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800877c:	08029733 	.word	0x08029733

08008780 <_ZN19MainInfotaimentView15setDebugMessageEPKc>:

/* TODO: String variables */


void MainInfotaimentView::setDebugMessage(const char* msg) {
 8008780:	b510      	push	{r4, lr}
 8008782:	4604      	mov	r4, r0
	if (msg == nullptr) {
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 8008784:	f500 50c1 	add.w	r0, r0, #6176	; 0x1820
 8008788:	3008      	adds	r0, #8
 800878a:	2240      	movs	r2, #64	; 0x40
	if (msg == nullptr) {
 800878c:	b901      	cbnz	r1, 8008790 <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x10>
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 800878e:	4904      	ldr	r1, [pc, #16]	; (80087a0 <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x20>)
	} else {
		Unicode::strncpy(dbgTextAreaBuffer, msg, DBGTEXTAREA_SIZE);
 8008790:	f00f f835 	bl	80177fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	}

	dbgTextArea.invalidate();
 8008794:	f504 50ac 	add.w	r0, r4, #5504	; 0x1580
 8008798:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	dbgTextArea.invalidate();
 800879c:	f00d bb14 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80087a0:	0802a7cb 	.word	0x0802a7cb

080087a4 <_ZN19MainInfotaimentView16setThrottle_PercEi>:
	progressThrottle.setValue(throttle_perc);
 80087a4:	f500 7033 	add.w	r0, r0, #716	; 0x2cc
 80087a8:	f006 bbe9 	b.w	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>

080087ac <_ZN19MainInfotaimentView18setFrontBrake_PercEi>:
	progressBrakeFront.setValue(brake_perc);
 80087ac:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 80087b0:	f006 bbe5 	b.w	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>

080087b4 <_ZN19MainInfotaimentView17setRearBrake_PercEi>:
	progressBrakeRear.setValue(brake_perc);
 80087b4:	f500 6099 	add.w	r0, r0, #1224	; 0x4c8
 80087b8:	f006 bbe1 	b.w	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>

080087bc <_ZN19MainInfotaimentView6setRpmEi>:
{
 80087bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80087c0:	4605      	mov	r5, r0
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 80087c2:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 80087c6:	460b      	mov	r3, r1
{
 80087c8:	460c      	mov	r4, r1
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 80087ca:	4a26      	ldr	r2, [pc, #152]	; (8008864 <_ZN19MainInfotaimentView6setRpmEi+0xa8>)
 80087cc:	2107      	movs	r1, #7
 80087ce:	3018      	adds	r0, #24
 80087d0:	f00f fb82 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	if (rpm < 4500)
 80087d4:	f241 1393 	movw	r3, #4499	; 0x1193
 80087d8:	429c      	cmp	r4, r3
		progressRpmLow.setValue(0);
 80087da:	f205 76c4 	addw	r6, r5, #1988	; 0x7c4
		progressRpmMed.setValue(0);
 80087de:	f605 08a8 	addw	r8, r5, #2216	; 0x8a8
		progressRpmHigh.setValue(0);
 80087e2:	f605 178c 	addw	r7, r5, #2444	; 0x98c
	if (rpm < 4500)
 80087e6:	dc01      	bgt.n	80087ec <_ZN19MainInfotaimentView6setRpmEi+0x30>
			progressRpmLow.setValue(0);
 80087e8:	2100      	movs	r1, #0
 80087ea:	e007      	b.n	80087fc <_ZN19MainInfotaimentView6setRpmEi+0x40>
	} else if ((rpm >= 4500) && (rpm < 6000))
 80087ec:	f5a4 538c 	sub.w	r3, r4, #4480	; 0x1180
 80087f0:	3b14      	subs	r3, #20
 80087f2:	f240 52db 	movw	r2, #1499	; 0x5db
 80087f6:	4293      	cmp	r3, r2
 80087f8:	d805      	bhi.n	8008806 <_ZN19MainInfotaimentView6setRpmEi+0x4a>
		progressRpmLow.setValue(100);
 80087fa:	2164      	movs	r1, #100	; 0x64
			progressRpmLow.setValue(0);
 80087fc:	4630      	mov	r0, r6
 80087fe:	f006 fbbe 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(0);
 8008802:	2100      	movs	r1, #0
 8008804:	e00b      	b.n	800881e <_ZN19MainInfotaimentView6setRpmEi+0x62>
	} else if ((rpm >= 6000) && (rpm < 9000))
 8008806:	f5a4 53bb 	sub.w	r3, r4, #5984	; 0x1760
 800880a:	3b10      	subs	r3, #16
 800880c:	f640 31b7 	movw	r1, #2999	; 0xbb7
 8008810:	428b      	cmp	r3, r1
 8008812:	d811      	bhi.n	8008838 <_ZN19MainInfotaimentView6setRpmEi+0x7c>
		progressRpmLow.setValue(100);
 8008814:	2164      	movs	r1, #100	; 0x64
 8008816:	4630      	mov	r0, r6
 8008818:	f006 fbb1 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
		progressRpmMed.setValue(100);
 800881c:	2164      	movs	r1, #100	; 0x64
			progressRpmMed.setValue(0);
 800881e:	4640      	mov	r0, r8
 8008820:	f006 fbad 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(0);
 8008824:	2100      	movs	r1, #0
			progressRpmHigh.setValue(100);
 8008826:	4638      	mov	r0, r7
 8008828:	f006 fba9 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
  txtRpm.invalidate();
 800882c:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
}
 8008830:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  txtRpm.invalidate();
 8008834:	f00d bac8 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if ((rpm >= 9000) && (rpm < 10500))
 8008838:	f5a4 540c 	sub.w	r4, r4, #8960	; 0x2300
 800883c:	3c28      	subs	r4, #40	; 0x28
 800883e:	4294      	cmp	r4, r2
 8008840:	d809      	bhi.n	8008856 <_ZN19MainInfotaimentView6setRpmEi+0x9a>
			progressRpmLow.setValue(100);
 8008842:	2164      	movs	r1, #100	; 0x64
 8008844:	4630      	mov	r0, r6
 8008846:	f006 fb9a 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(100);
 800884a:	2164      	movs	r1, #100	; 0x64
 800884c:	4640      	mov	r0, r8
 800884e:	f006 fb96 	bl	800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(100);
 8008852:	2164      	movs	r1, #100	; 0x64
 8008854:	e7e7      	b.n	8008826 <_ZN19MainInfotaimentView6setRpmEi+0x6a>
		if (progressRpmLow.getValue() == 100)
 8008856:	4630      	mov	r0, r6
 8008858:	f006 fcd3 	bl	800f202 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800885c:	2864      	cmp	r0, #100	; 0x64
 800885e:	d1f0      	bne.n	8008842 <_ZN19MainInfotaimentView6setRpmEi+0x86>
 8008860:	e7c2      	b.n	80087e8 <_ZN19MainInfotaimentView6setRpmEi+0x2c>
 8008862:	bf00      	nop
 8008864:	0802981a 	.word	0x0802981a

08008868 <_ZN19MainInfotaimentView10setT_WaterEi>:
{
 8008868:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_water <= WATER_TEMP_LOW_VAL )
 800886a:	2932      	cmp	r1, #50	; 0x32
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 800886c:	f500 549c 	add.w	r4, r0, #4992	; 0x1380
{
 8008870:	4605      	mov	r5, r0
 8008872:	460e      	mov	r6, r1
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8008874:	f104 041c 	add.w	r4, r4, #28
	if (t_water <= WATER_TEMP_LOW_VAL )
 8008878:	dc18      	bgt.n	80088ac <_ZN19MainInfotaimentView10setT_WaterEi+0x44>
 800887a:	2319      	movs	r3, #25
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_HIGH_ID));
 800887c:	a901      	add	r1, sp, #4
 800887e:	4620      	mov	r0, r4
 8008880:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008884:	f009 fcb8 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%3.3d", t_water);
 8008888:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 800888c:	4a0a      	ldr	r2, [pc, #40]	; (80088b8 <_ZN19MainInfotaimentView10setT_WaterEi+0x50>)
 800888e:	4633      	mov	r3, r6
 8008890:	2104      	movs	r1, #4
 8008892:	300c      	adds	r0, #12
 8008894:	f00f fb20 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTWater.invalidate();
 8008898:	f605 20a4 	addw	r0, r5, #2724	; 0xaa4
 800889c:	f00d fa94 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgWaterTemp.invalidate();
 80088a0:	4620      	mov	r0, r4
}
 80088a2:	b002      	add	sp, #8
 80088a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgWaterTemp.invalidate();
 80088a8:	f00d ba8e 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_water <= WATER_TEMP_OK_VAL )
 80088ac:	295e      	cmp	r1, #94	; 0x5e
 80088ae:	bfd4      	ite	le
 80088b0:	231a      	movle	r3, #26
 80088b2:	2318      	movgt	r3, #24
 80088b4:	e7e2      	b.n	800887c <_ZN19MainInfotaimentView10setT_WaterEi+0x14>
 80088b6:	bf00      	nop
 80088b8:	08029814 	.word	0x08029814

080088bc <_ZN19MainInfotaimentView8setT_OilEi>:
{
 80088bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_oil <= OIL_TEMP_LOW_VAL )
 80088be:	2932      	cmp	r1, #50	; 0x32
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 80088c0:	f500 549b 	add.w	r4, r0, #4960	; 0x1360
{
 80088c4:	4605      	mov	r5, r0
 80088c6:	460e      	mov	r6, r1
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 80088c8:	f104 0410 	add.w	r4, r4, #16
	if (t_oil <= OIL_TEMP_LOW_VAL )
 80088cc:	dc18      	bgt.n	8008900 <_ZN19MainInfotaimentView8setT_OilEi+0x44>
 80088ce:	2313      	movs	r3, #19
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_HIGH_ID));
 80088d0:	a901      	add	r1, sp, #4
 80088d2:	4620      	mov	r0, r4
 80088d4:	f8ad 3004 	strh.w	r3, [sp, #4]
 80088d8:	f009 fc8e 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%3.3d", t_oil);
 80088dc:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 80088e0:	4a0a      	ldr	r2, [pc, #40]	; (800890c <_ZN19MainInfotaimentView8setT_OilEi+0x50>)
 80088e2:	4633      	mov	r3, r6
 80088e4:	2104      	movs	r1, #4
 80088e6:	3014      	adds	r0, #20
 80088e8:	f00f faf6 	bl	8017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTOil.invalidate();
 80088ec:	f605 3058 	addw	r0, r5, #2904	; 0xb58
 80088f0:	f00d fa6a 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilTemp.invalidate();
 80088f4:	4620      	mov	r0, r4
}
 80088f6:	b002      	add	sp, #8
 80088f8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgOilTemp.invalidate();
 80088fc:	f00d ba64 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_oil <= OIL_TEMP_OK_VAL )
 8008900:	2968      	cmp	r1, #104	; 0x68
 8008902:	bfd4      	ite	le
 8008904:	2314      	movle	r3, #20
 8008906:	2312      	movgt	r3, #18
 8008908:	e7e2      	b.n	80088d0 <_ZN19MainInfotaimentView8setT_OilEi+0x14>
 800890a:	bf00      	nop
 800890c:	08029814 	.word	0x08029814

08008910 <_ZN19MainInfotaimentView8setP_OilEf>:
{
 8008910:	b530      	push	{r4, r5, lr}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008912:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
{
 8008916:	ed2d 8b02 	vpush	{d8}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 800891a:	eeb4 0ae7 	vcmpe.f32	s0, s15
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 800891e:	f500 5496 	add.w	r4, r0, #4800	; 0x12c0
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008922:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008926:	b083      	sub	sp, #12
 8008928:	4605      	mov	r5, r0
 800892a:	eeb0 8a40 	vmov.f32	s16, s0
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 800892e:	f104 0404 	add.w	r4, r4, #4
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008932:	d81c      	bhi.n	800896e <_ZN19MainInfotaimentView8setP_OilEf+0x5e>
 8008934:	2310      	movs	r3, #16
		imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_HIGH_ID));
 8008936:	a901      	add	r1, sp, #4
 8008938:	4620      	mov	r0, r4
 800893a:	f8ad 3004 	strh.w	r3, [sp, #4]
 800893e:	f009 fc5b 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008942:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008946:	4a0f      	ldr	r2, [pc, #60]	; (8008984 <_ZN19MainInfotaimentView8setP_OilEf+0x74>)
 8008948:	ed8d 8a01 	vstr	s16, [sp, #4]
 800894c:	ab01      	add	r3, sp, #4
 800894e:	2106      	movs	r1, #6
 8008950:	301c      	adds	r0, #28
 8008952:	f00f fcad 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtPOil.invalidate();
 8008956:	f605 30a4 	addw	r0, r5, #2980	; 0xba4
 800895a:	f00d fa35 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilPres.invalidate();
 800895e:	4620      	mov	r0, r4
}
 8008960:	b003      	add	sp, #12
 8008962:	ecbd 8b02 	vpop	{d8}
 8008966:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgOilPres.invalidate();
 800896a:	f00d ba2d 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (p_oil <= OIL_PRESS_OK_VAL )
 800896e:	eef1 7a0a 	vmov.f32	s15, #26	; 0x40d00000  6.5
 8008972:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008976:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800897a:	bf94      	ite	ls
 800897c:	2311      	movls	r3, #17
 800897e:	230f      	movhi	r3, #15
 8008980:	e7d9      	b.n	8008936 <_ZN19MainInfotaimentView8setP_OilEf+0x26>
 8008982:	bf00      	nop
 8008984:	08029736 	.word	0x08029736

08008988 <_ZN19MainInfotaimentView18setOrinTemperatureEf>:
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008988:	b530      	push	{r4, r5, lr}
  if (orinTemperature <= ORIN_T_OK_VAL)
 800898a:	eddf 7a18 	vldr	s15, [pc, #96]	; 80089ec <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x64>
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 800898e:	ed2d 8b02 	vpush	{d8}
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008992:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8008996:	f500 559e 	add.w	r5, r0, #5056	; 0x13c0
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 800899a:	b083      	sub	sp, #12
  if (orinTemperature <= ORIN_T_OK_VAL)
 800899c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 80089a0:	f105 0508 	add.w	r5, r5, #8
 80089a4:	bf94      	ite	ls
 80089a6:	2316      	movls	r3, #22
 80089a8:	2315      	movhi	r3, #21
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 80089aa:	4604      	mov	r4, r0
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 80089ac:	a901      	add	r1, sp, #4
 80089ae:	4628      	mov	r0, r5
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 80089b0:	eeb0 8a40 	vmov.f32	s16, s0
 80089b4:	f8ad 3004 	strh.w	r3, [sp, #4]
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 80089b8:	f009 fc1e 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80089bc:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 80089c0:	4a0b      	ldr	r2, [pc, #44]	; (80089f0 <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x68>)
 80089c2:	ed8d 8a01 	vstr	s16, [sp, #4]
 80089c6:	ab01      	add	r3, sp, #4
 80089c8:	2104      	movs	r1, #4
 80089ca:	3014      	adds	r0, #20
 80089cc:	f00f fc70 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  imgTOrin.invalidate();
 80089d0:	4628      	mov	r0, r5
 80089d2:	f00d f9f9 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
  txtTOrin.invalidate();
 80089d6:	f504 50a1 	add.w	r0, r4, #5152	; 0x1420
 80089da:	3008      	adds	r0, #8
}
 80089dc:	b003      	add	sp, #12
 80089de:	ecbd 8b02 	vpop	{d8}
 80089e2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txtTOrin.invalidate();
 80089e6:	f00d b9ef 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089ea:	bf00      	nop
 80089ec:	428c0000 	.word	0x428c0000
 80089f0:	08029820 	.word	0x08029820

080089f4 <_ZN19MainInfotaimentView13setVoltage24vEf>:
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 80089f4:	b530      	push	{r4, r5, lr}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 80089f6:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8008a64 <_ZN19MainInfotaimentView13setVoltage24vEf+0x70>
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 80089fa:	ed2d 8b02 	vpush	{d8}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 80089fe:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008a02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008a06:	b083      	sub	sp, #12
 8008a08:	4604      	mov	r4, r0
 8008a0a:	eeb0 8a40 	vmov.f32	s16, s0
		img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_LOW_ID));
 8008a0e:	f500 55a5 	add.w	r5, r0, #5280	; 0x14a0
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008a12:	d81c      	bhi.n	8008a4e <_ZN19MainInfotaimentView13setVoltage24vEf+0x5a>
 8008a14:	2306      	movs	r3, #6
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_HIGH_ID));
 8008a16:	a901      	add	r1, sp, #4
 8008a18:	4628      	mov	r0, r5
 8008a1a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008a1e:	f009 fbeb 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008a22:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8008a26:	4a10      	ldr	r2, [pc, #64]	; (8008a68 <_ZN19MainInfotaimentView13setVoltage24vEf+0x74>)
 8008a28:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008a2c:	ab01      	add	r3, sp, #4
 8008a2e:	2106      	movs	r1, #6
 8008a30:	301c      	adds	r0, #28
 8008a32:	f00f fc3d 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  img24v.invalidate();
 8008a36:	4628      	mov	r0, r5
 8008a38:	f00d f9c6 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
  txt24v.invalidate();
 8008a3c:	f504 50a8 	add.w	r0, r4, #5376	; 0x1500
}
 8008a40:	b003      	add	sp, #12
 8008a42:	ecbd 8b02 	vpop	{d8}
 8008a46:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txt24v.invalidate();
 8008a4a:	f00d b9bd 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
  else if (voltage24v <= VOLTAGE_24V_OK_VAL)  
 8008a4e:	eef3 7a0b 	vmov.f32	s15, #59	; 0x41d80000  27.0
 8008a52:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a5a:	bf94      	ite	ls
 8008a5c:	2307      	movls	r3, #7
 8008a5e:	2305      	movhi	r3, #5
 8008a60:	e7d9      	b.n	8008a16 <_ZN19MainInfotaimentView13setVoltage24vEf+0x22>
 8008a62:	bf00      	nop
 8008a64:	41bc0000 	.word	0x41bc0000
 8008a68:	08029824 	.word	0x08029824
 8008a6c:	00000000 	.word	0x00000000

08008a70 <_ZN19MainInfotaimentView12setBattery_VEf>:
{
 8008a70:	b530      	push	{r4, r5, lr}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008a72:	eef2 7a07 	vmov.f32	s15, #39	; 0x41380000  11.5
{
 8008a76:	ed2d 8b02 	vpush	{d8}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008a7a:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008a7e:	f500 54a3 	add.w	r4, r0, #5216	; 0x1460
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008a82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008a86:	b083      	sub	sp, #12
 8008a88:	4605      	mov	r5, r0
 8008a8a:	eeb0 8a40 	vmov.f32	s16, s0
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008a8e:	f104 0414 	add.w	r4, r4, #20
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008a92:	d81d      	bhi.n	8008ad0 <_ZN19MainInfotaimentView12setBattery_VEf+0x60>
 8008a94:	2306      	movs	r3, #6
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_HIGH_ID));
 8008a96:	a901      	add	r1, sp, #4
 8008a98:	4620      	mov	r0, r4
 8008a9a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008a9e:	f009 fbab 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008aa2:	f505 50bf 	add.w	r0, r5, #6112	; 0x17e0
 8008aa6:	4a14      	ldr	r2, [pc, #80]	; (8008af8 <_ZN19MainInfotaimentView12setBattery_VEf+0x88>)
 8008aa8:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008aac:	ab01      	add	r3, sp, #4
 8008aae:	2106      	movs	r1, #6
 8008ab0:	301c      	adds	r0, #28
 8008ab2:	f00f fbfd 	bl	80182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtBattery_V.invalidate();
 8008ab6:	f505 5093 	add.w	r0, r5, #4704	; 0x1260
 8008aba:	3018      	adds	r0, #24
 8008abc:	f00d f984 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgBatteryV.invalidate();
 8008ac0:	4620      	mov	r0, r4
}
 8008ac2:	b003      	add	sp, #12
 8008ac4:	ecbd 8b02 	vpop	{d8}
 8008ac8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgBatteryV.invalidate();
 8008acc:	f00d b97c 	b.w	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (battery_v <= BATTERY_V_OK_VAL )
 8008ad0:	ee10 0a10 	vmov	r0, s0
 8008ad4:	f7f7 fd48 	bl	8000568 <__aeabi_f2d>
 8008ad8:	a305      	add	r3, pc, #20	; (adr r3, 8008af0 <_ZN19MainInfotaimentView12setBattery_VEf+0x80>)
 8008ada:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ade:	f7f7 fe05 	bl	80006ec <__aeabi_dcmple>
 8008ae2:	b108      	cbz	r0, 8008ae8 <_ZN19MainInfotaimentView12setBattery_VEf+0x78>
 8008ae4:	2307      	movs	r3, #7
 8008ae6:	e7d6      	b.n	8008a96 <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008ae8:	2305      	movs	r3, #5
 8008aea:	e7d4      	b.n	8008a96 <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008aec:	f3af 8000 	nop.w
 8008af0:	cccccccd 	.word	0xcccccccd
 8008af4:	402ccccc 	.word	0x402ccccc
 8008af8:	08029824 	.word	0x08029824

08008afc <_ZN22MissionSelectPresenterD1Ev>:

    void requestMission(MmrMission type);

    void requestChassisReset();

    virtual ~MissionSelectPresenter() {};
 8008afc:	4770      	bx	lr

08008afe <_ZThn4_N22MissionSelectPresenterD1Ev>:
 8008afe:	3804      	subs	r0, #4
 8008b00:	4770      	bx	lr

08008b02 <_ZN22MissionSelectPresenter10deactivateEv>:


void MissionSelectPresenter::activate()
{

}
 8008b02:	4770      	bx	lr

08008b04 <_ZN22MissionSelectPresenterD0Ev>:
 8008b04:	b510      	push	{r4, lr}
 8008b06:	2110      	movs	r1, #16
 8008b08:	4604      	mov	r4, r0
 8008b0a:	f01d fc09 	bl	8026320 <_ZdlPvj>
 8008b0e:	4620      	mov	r0, r4
 8008b10:	bd10      	pop	{r4, pc}

08008b12 <_ZThn4_N22MissionSelectPresenterD0Ev>:
 8008b12:	f1a0 0004 	sub.w	r0, r0, #4
 8008b16:	e7f5      	b.n	8008b04 <_ZN22MissionSelectPresenterD0Ev>

08008b18 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>:
MissionSelectPresenter::MissionSelectPresenter(MissionSelectView& v)
 8008b18:	b510      	push	{r4, lr}
 8008b1a:	2200      	movs	r2, #0
 8008b1c:	6082      	str	r2, [r0, #8]
    : view(v)
 8008b1e:	4a04      	ldr	r2, [pc, #16]	; (8008b30 <_ZN22MissionSelectPresenterC1ER17MissionSelectView+0x18>)
 8008b20:	60c1      	str	r1, [r0, #12]
 8008b22:	f102 0408 	add.w	r4, r2, #8
 8008b26:	3220      	adds	r2, #32
 8008b28:	6004      	str	r4, [r0, #0]
 8008b2a:	6042      	str	r2, [r0, #4]
}
 8008b2c:	bd10      	pop	{r4, pc}
 8008b2e:	bf00      	nop
 8008b30:	08029860 	.word	0x08029860

08008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>:

}

void MissionSelectPresenter::requestMission(MmrMission missionType)
{
    model->requestMission(missionType);
 8008b34:	6880      	ldr	r0, [r0, #8]
 8008b36:	f000 b8e1 	b.w	8008cfc <_ZN5Model14requestMissionE10MmrMission>

08008b3a <_ZN22MissionSelectPresenter19requestChassisResetEv>:
}

void MissionSelectPresenter::requestChassisReset() {
    model->requestChassisReset();
 8008b3a:	6880      	ldr	r0, [r0, #8]
 8008b3c:	f000 b8bc 	b.w	8008cb8 <_ZN5Model19requestChassisResetEv>

08008b40 <_ZN17MissionSelectView14tearDownScreenEv>:

}

void MissionSelectView::tearDownScreen() {
    MissionSelectViewBase::tearDownScreen();
}
 8008b40:	4770      	bx	lr

08008b42 <_ZN17MissionSelectView21onChassisResetClickedEv>:
    presenter->requestChassisReset();
 8008b42:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b44:	f7ff bff9 	b.w	8008b3a <_ZN22MissionSelectPresenter19requestChassisResetEv>

08008b48 <_ZN17MissionSelectView16onIdleBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_IDLE);
 8008b48:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b4a:	2100      	movs	r1, #0
 8008b4c:	f7ff bff2 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b50 <_ZN17MissionSelectView24onAccelerationBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_ACCELERATION);
 8008b50:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b52:	2101      	movs	r1, #1
 8008b54:	f7ff bfee 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b58 <_ZN17MissionSelectView19onSkidpadBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_SKIDPAD);
 8008b58:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b5a:	2102      	movs	r1, #2
 8008b5c:	f7ff bfea 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b60 <_ZN17MissionSelectView21onAutocrossBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_AUTOCROSS);
 8008b60:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b62:	2103      	movs	r1, #3
 8008b64:	f7ff bfe6 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b68 <_ZN17MissionSelectView22onTrackdriveBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_TRACKDRIVE);
 8008b68:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b6a:	2104      	movs	r1, #4
 8008b6c:	f7ff bfe2 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b70 <_ZN17MissionSelectView19onEbsTestBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_EBS_TEST);
 8008b70:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b72:	2105      	movs	r1, #5
 8008b74:	f7ff bfde 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b78 <_ZN17MissionSelectView22onInspectionBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_INSPECTION);
 8008b78:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b7a:	2106      	movs	r1, #6
 8008b7c:	f7ff bfda 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b80 <_ZN17MissionSelectView18onManualBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_MANUAL);
 8008b80:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b82:	2107      	movs	r1, #7
 8008b84:	f7ff bfd6 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b88 <_ZN17MissionSelectView17onDebugBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_DEBUG);
 8008b88:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008b8a:	2108      	movs	r1, #8
 8008b8c:	f7ff bfd2 	b.w	8008b34 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008b90 <_ZN17MissionSelectViewD1Ev>:
class MissionSelectView : public MissionSelectViewBase
{
public:
    MissionSelectView();
    
    virtual ~MissionSelectView() {}
 8008b90:	b510      	push	{r4, lr}
 8008b92:	4b03      	ldr	r3, [pc, #12]	; (8008ba0 <_ZN17MissionSelectViewD1Ev+0x10>)
 8008b94:	6003      	str	r3, [r0, #0]
 8008b96:	4604      	mov	r4, r0
 8008b98:	f7fe f99e 	bl	8006ed8 <_ZN21MissionSelectViewBaseD1Ev>
 8008b9c:	4620      	mov	r0, r4
 8008b9e:	bd10      	pop	{r4, pc}
 8008ba0:	080298a0 	.word	0x080298a0

08008ba4 <_ZN17MissionSelectViewD0Ev>:
 8008ba4:	b510      	push	{r4, lr}
 8008ba6:	4604      	mov	r4, r0
 8008ba8:	f7ff fff2 	bl	8008b90 <_ZN17MissionSelectViewD1Ev>
 8008bac:	4620      	mov	r0, r4
 8008bae:	f240 418c 	movw	r1, #1164	; 0x48c
 8008bb2:	f01d fbb5 	bl	8026320 <_ZdlPvj>
 8008bb6:	4620      	mov	r0, r4
 8008bb8:	bd10      	pop	{r4, pc}
	...

08008bbc <_ZN17MissionSelectViewC1Ev>:
MissionSelectView::MissionSelectView() {
 8008bbc:	b510      	push	{r4, lr}
 8008bbe:	4604      	mov	r4, r0
 8008bc0:	f7fe fb46 	bl	8007250 <_ZN21MissionSelectViewBaseC1Ev>
 8008bc4:	4b01      	ldr	r3, [pc, #4]	; (8008bcc <_ZN17MissionSelectViewC1Ev+0x10>)
 8008bc6:	6023      	str	r3, [r4, #0]
}
 8008bc8:	4620      	mov	r0, r4
 8008bca:	bd10      	pop	{r4, pc}
 8008bcc:	080298a0 	.word	0x080298a0

08008bd0 <_ZN17MissionSelectView11setupScreenEv>:
    MissionSelectViewBase::setupScreen();
 8008bd0:	f7fe b983 	b.w	8006eda <_ZN21MissionSelectViewBase11setupScreenEv>

08008bd4 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include <string.h>

displayInfo info;

Model::Model() : modelListener(0)
 8008bd4:	b538      	push	{r3, r4, r5, lr}
 8008bd6:	4604      	mov	r4, r0
 8008bd8:	2500      	movs	r5, #0
 8008bda:	f840 5b17 	str.w	r5, [r0], #23
 8008bde:	4906      	ldr	r1, [pc, #24]	; (8008bf8 <_ZN5ModelC1Ev+0x24>)
 8008be0:	2287      	movs	r2, #135	; 0x87
 8008be2:	f01d fc49 	bl	8026478 <memcpy>
{
	dbgMessage = nullptr;
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008be6:	4905      	ldr	r1, [pc, #20]	; (8008bfc <_ZN5ModelC1Ev+0x28>)
	dbgMessage = nullptr;
 8008be8:	6065      	str	r5, [r4, #4]
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008bea:	220f      	movs	r2, #15
 8008bec:	f104 0008 	add.w	r0, r4, #8
 8008bf0:	f01e f87a 	bl	8026ce8 <strncpy>
}
 8008bf4:	4620      	mov	r0, r4
 8008bf6:	bd38      	pop	{r3, r4, r5, pc}
 8008bf8:	0802751c 	.word	0x0802751c
 8008bfc:	080298f4 	.word	0x080298f4

08008c00 <_ZN5Model4tickEv>:
extern osMessageQueueId_t dbgMsgQueue;
extern osMessageQueueId_t guiToMainMsgQueue;
extern osMessageQueueId_t mainToGuiMsgQueue;

void Model::tick()
{
 8008c00:	b570      	push	{r4, r5, r6, lr}
	osStatus_t status;
	
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008c02:	4d2a      	ldr	r5, [pc, #168]	; (8008cac <_ZN5Model4tickEv+0xac>)
{
 8008c04:	4604      	mov	r4, r0
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008c06:	482a      	ldr	r0, [pc, #168]	; (8008cb0 <_ZN5Model4tickEv+0xb0>)
 8008c08:	2300      	movs	r3, #0
 8008c0a:	6800      	ldr	r0, [r0, #0]
 8008c0c:	461a      	mov	r2, r3
 8008c0e:	4629      	mov	r1, r5
 8008c10:	f004 f9c1 	bl	800cf96 <osMessageQueueGet>
	if (status == osOK)
 8008c14:	2800      	cmp	r0, #0
 8008c16:	d139      	bne.n	8008c8c <_ZN5Model4tickEv+0x8c>
	{
		setGear(info.gear);
 8008c18:	786b      	ldrb	r3, [r5, #1]
 8008c1a:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		setSpeed(info.speed);
 8008c1e:	782b      	ldrb	r3, [r5, #0]
 8008c20:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
		setRpm(info.rpm);
 8008c24:	886b      	ldrh	r3, [r5, #2]
 8008c26:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8

		setT_water(info.T_water);
 8008c2a:	792b      	ldrb	r3, [r5, #4]
 8008c2c:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
		setT_oil(info.T_oil);
 8008c30:	796b      	ldrb	r3, [r5, #5]
 8008c32:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
    void setP_oil(float recvP_oil) { P_oil= recvP_oil; }
 8008c36:	68ab      	ldr	r3, [r5, #8]
		setBattery_v(info.battery_v);

		setOrinTemperature(info.orinTemperature);
		setVoltage24v(info.voltage24v);

		setRearBrakePerc(info.brakePressureRear);
 8008c38:	edd5 7a07 	vldr	s15, [r5, #28]
 8008c3c:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
		setThrottle_perc(info.throttle_perc);
 8008c40:	79ab      	ldrb	r3, [r5, #6]
 8008c42:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
    void setRES(int recvRES) { RES = recvRES; }
 8008c46:	68eb      	ldr	r3, [r5, #12]
 8008c48:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
		setRearBrakePerc(info.brakePressureRear);
 8008c4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    void setLC(bool recvLC) { LC= recvLC; }
 8008c50:	8a2b      	ldrh	r3, [r5, #16]
 8008c52:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
    void setBattery_v(float recvBattery_v) { battery_v = recvBattery_v; }
 8008c56:	696b      	ldr	r3, [r5, #20]
 8008c58:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8008c5c:	edc4 7a2f 	vstr	s15, [r4, #188]	; 0xbc
    void setOrinTemperature(float recvOrinTemperature) { orinTemperature = recvOrinTemperature; }
 8008c60:	6a6b      	ldr	r3, [r5, #36]	; 0x24
		setFrontBrakePerc(info.brakePressureFront);
 8008c62:	edd5 7a06 	vldr	s15, [r5, #24]
 8008c66:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    void setVoltage24v(float recvVoltage24v) { voltage24v = recvVoltage24v; }
 8008c6a:	6a2b      	ldr	r3, [r5, #32]
 8008c6c:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
 8008c70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
    void setLap(int lap_recv) { lap = lap_recv; }
 8008c74:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008c76:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    void setP_Fuel(float recvP_fuel) { P_fuel = recvP_fuel; }
 8008c7a:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008c7c:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8008c80:	edc4 7a2e 	vstr	s15, [r4, #184]	; 0xb8
		setLap(info.lap);
		setP_Fuel(info.P_fuel);

		/* TODO: String variables */

		modelListener->infoChanged();
 8008c84:	6820      	ldr	r0, [r4, #0]
 8008c86:	6803      	ldr	r3, [r0, #0]
 8008c88:	68db      	ldr	r3, [r3, #12]
 8008c8a:	4798      	blx	r3
	}

	status = osMessageQueueGet(dbgMsgQueue, &dbgMessage, NULL, 0);
 8008c8c:	4809      	ldr	r0, [pc, #36]	; (8008cb4 <_ZN5Model4tickEv+0xb4>)
 8008c8e:	2300      	movs	r3, #0
 8008c90:	6800      	ldr	r0, [r0, #0]
 8008c92:	461a      	mov	r2, r3
 8008c94:	1d21      	adds	r1, r4, #4
 8008c96:	f004 f97e 	bl	800cf96 <osMessageQueueGet>
	if (status == osOK)
 8008c9a:	b928      	cbnz	r0, 8008ca8 <_ZN5Model4tickEv+0xa8>
		modelListener->debugMessageChanged();
 8008c9c:	6820      	ldr	r0, [r4, #0]
 8008c9e:	6803      	ldr	r3, [r0, #0]

}
 8008ca0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		modelListener->debugMessageChanged();
 8008ca4:	691b      	ldr	r3, [r3, #16]
 8008ca6:	4718      	bx	r3
}
 8008ca8:	bd70      	pop	{r4, r5, r6, pc}
 8008caa:	bf00      	nop
 8008cac:	20005fa4 	.word	0x20005fa4
 8008cb0:	20005d68 	.word	0x20005d68
 8008cb4:	20005b24 	.word	0x20005b24

08008cb8 <_ZN5Model19requestChassisResetEv>:

  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
  commonAfterRequestMission(missionType);
}

void Model::requestChassisReset() {
 8008cb8:	b507      	push	{r0, r1, r2, lr}
  guiToMainMsg msg {
		.type = GUI_TO_MAIN_MSG_CHASSISRESET
	};

	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008cba:	4807      	ldr	r0, [pc, #28]	; (8008cd8 <_ZN5Model19requestChassisResetEv+0x20>)
  guiToMainMsg msg {
 8008cbc:	2300      	movs	r3, #0
 8008cbe:	2202      	movs	r2, #2
 8008cc0:	f88d 2004 	strb.w	r2, [sp, #4]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008cc4:	a901      	add	r1, sp, #4
 8008cc6:	461a      	mov	r2, r3
 8008cc8:	6800      	ldr	r0, [r0, #0]
  guiToMainMsg msg {
 8008cca:	f88d 3005 	strb.w	r3, [sp, #5]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008cce:	f004 f932 	bl	800cf36 <osMessageQueuePut>
}
 8008cd2:	b003      	add	sp, #12
 8008cd4:	f85d fb04 	ldr.w	pc, [sp], #4
 8008cd8:	20005b2c 	.word	0x20005b2c

08008cdc <_ZN5Model25commonAfterRequestMissionE10MmrMission>:


#endif

void Model::commonAfterRequestMission(MmrMission missionType) {
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008cdc:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008ce0:	b510      	push	{r4, lr}
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008ce2:	3117      	adds	r1, #23
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008ce4:	4604      	mov	r4, r0
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008ce6:	4401      	add	r1, r0
 8008ce8:	220f      	movs	r2, #15
 8008cea:	3008      	adds	r0, #8
 8008cec:	f01d fffc 	bl	8026ce8 <strncpy>
	modelListener->missionChanged();
 8008cf0:	6820      	ldr	r0, [r4, #0]
 8008cf2:	6803      	ldr	r3, [r0, #0]
}
 8008cf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	modelListener->missionChanged();
 8008cf8:	695b      	ldr	r3, [r3, #20]
 8008cfa:	4718      	bx	r3

08008cfc <_ZN5Model14requestMissionE10MmrMission>:
void Model::requestMission(MmrMission missionType) {
 8008cfc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008cfe:	4605      	mov	r5, r0
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008d00:	4808      	ldr	r0, [pc, #32]	; (8008d24 <_ZN5Model14requestMissionE10MmrMission+0x28>)
	msg.content.selectedMission = missionType;
 8008d02:	f88d 1005 	strb.w	r1, [sp, #5]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008d06:	2300      	movs	r3, #0
void Model::requestMission(MmrMission missionType) {
 8008d08:	460c      	mov	r4, r1
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008d0a:	461a      	mov	r2, r3
 8008d0c:	a901      	add	r1, sp, #4
 8008d0e:	6800      	ldr	r0, [r0, #0]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008d10:	f88d 3004 	strb.w	r3, [sp, #4]
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008d14:	f004 f90f 	bl	800cf36 <osMessageQueuePut>
  commonAfterRequestMission(missionType);
 8008d18:	4621      	mov	r1, r4
 8008d1a:	4628      	mov	r0, r5
 8008d1c:	f7ff ffde 	bl	8008cdc <_ZN5Model25commonAfterRequestMissionE10MmrMission>
}
 8008d20:	b003      	add	sp, #12
 8008d22:	bd30      	pop	{r4, r5, pc}
 8008d24:	20005b2c 	.word	0x20005b2c

08008d28 <_ZN16StartupPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartupPresenter() {};
 8008d28:	4770      	bx	lr

08008d2a <_ZThn4_N16StartupPresenterD1Ev>:
 8008d2a:	3804      	subs	r0, #4
 8008d2c:	4770      	bx	lr

08008d2e <_ZN16StartupPresenter10deactivateEv>:
}

void StartupPresenter::activate()
{

}
 8008d2e:	4770      	bx	lr

08008d30 <_ZN16StartupPresenterD0Ev>:
 8008d30:	b510      	push	{r4, lr}
 8008d32:	2110      	movs	r1, #16
 8008d34:	4604      	mov	r4, r0
 8008d36:	f01d faf3 	bl	8026320 <_ZdlPvj>
 8008d3a:	4620      	mov	r0, r4
 8008d3c:	bd10      	pop	{r4, pc}

08008d3e <_ZThn4_N16StartupPresenterD0Ev>:
 8008d3e:	f1a0 0004 	sub.w	r0, r0, #4
 8008d42:	e7f5      	b.n	8008d30 <_ZN16StartupPresenterD0Ev>

08008d44 <_ZN16StartupPresenterC1ER11StartupView>:
StartupPresenter::StartupPresenter(StartupView& v)
 8008d44:	b510      	push	{r4, lr}
 8008d46:	2200      	movs	r2, #0
 8008d48:	6082      	str	r2, [r0, #8]
    : view(v)
 8008d4a:	4a04      	ldr	r2, [pc, #16]	; (8008d5c <_ZN16StartupPresenterC1ER11StartupView+0x18>)
 8008d4c:	60c1      	str	r1, [r0, #12]
 8008d4e:	f102 0408 	add.w	r4, r2, #8
 8008d52:	3220      	adds	r2, #32
 8008d54:	6004      	str	r4, [r0, #0]
 8008d56:	6042      	str	r2, [r0, #4]
}
 8008d58:	bd10      	pop	{r4, pc}
 8008d5a:	bf00      	nop
 8008d5c:	080298fc 	.word	0x080298fc

08008d60 <_ZN11StartupView14tearDownScreenEv>:
}

void StartupView::tearDownScreen()
{
    StartupViewBase::tearDownScreen();
}
 8008d60:	4770      	bx	lr
	...

08008d64 <_ZN11StartupViewD1Ev>:

class StartupView : public StartupViewBase
{
public:
    StartupView();
    virtual ~StartupView() {}
 8008d64:	b510      	push	{r4, lr}
 8008d66:	4b03      	ldr	r3, [pc, #12]	; (8008d74 <_ZN11StartupViewD1Ev+0x10>)
 8008d68:	6003      	str	r3, [r0, #0]
 8008d6a:	4604      	mov	r4, r0
 8008d6c:	f7fe fcf8 	bl	8007760 <_ZN15StartupViewBaseD1Ev>
 8008d70:	4620      	mov	r0, r4
 8008d72:	bd10      	pop	{r4, pc}
 8008d74:	0802993c 	.word	0x0802993c

08008d78 <_ZN11StartupViewD0Ev>:
 8008d78:	b510      	push	{r4, lr}
 8008d7a:	4604      	mov	r4, r0
 8008d7c:	f7ff fff2 	bl	8008d64 <_ZN11StartupViewD1Ev>
 8008d80:	4620      	mov	r0, r4
 8008d82:	21e4      	movs	r1, #228	; 0xe4
 8008d84:	f01d facc 	bl	8026320 <_ZdlPvj>
 8008d88:	4620      	mov	r0, r4
 8008d8a:	bd10      	pop	{r4, pc}

08008d8c <_ZN11StartupViewC1Ev>:
StartupView::StartupView()
 8008d8c:	b510      	push	{r4, lr}
 8008d8e:	4604      	mov	r4, r0
 8008d90:	f7fe fd04 	bl	800779c <_ZN15StartupViewBaseC1Ev>
 8008d94:	4b01      	ldr	r3, [pc, #4]	; (8008d9c <_ZN11StartupViewC1Ev+0x10>)
 8008d96:	6023      	str	r3, [r4, #0]
}
 8008d98:	4620      	mov	r0, r4
 8008d9a:	bd10      	pop	{r4, pc}
 8008d9c:	0802993c 	.word	0x0802993c

08008da0 <_ZN11StartupView11setupScreenEv>:
    StartupViewBase::setupScreen();
 8008da0:	f7fe bcdf 	b.w	8007762 <_ZN15StartupViewBase11setupScreenEv>

08008da4 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8008da4:	4770      	bx	lr

08008da6 <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 8008da6:	2000      	movs	r0, #0
 8008da8:	4770      	bx	lr

08008daa <ft6x06_ReadID>:
{
 8008daa:	b510      	push	{r4, lr}
 8008dac:	4604      	mov	r4, r0
  TS_IO_Init();
 8008dae:	f000 fa95 	bl	80092dc <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 8008db2:	21a8      	movs	r1, #168	; 0xa8
 8008db4:	b2e0      	uxtb	r0, r4
 8008db6:	f000 faad 	bl	8009314 <TS_IO_Read>
}
 8008dba:	b280      	uxth	r0, r0
 8008dbc:	bd10      	pop	{r4, pc}
	...

08008dc0 <ft6x06_TS_DetectTouch>:
{
 8008dc0:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 8008dc2:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8008dc4:	2102      	movs	r1, #2
 8008dc6:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8008dc8:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8008dcc:	f000 faa2 	bl	8009314 <TS_IO_Read>
 8008dd0:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 8008dd4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8008dd8:	f003 030f 	and.w	r3, r3, #15
 8008ddc:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8008de0:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8008de4:	2b02      	cmp	r3, #2
    nbTouch = 0;
 8008de6:	bf88      	it	hi
 8008de8:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8008dec:	4b04      	ldr	r3, [pc, #16]	; (8008e00 <ft6x06_TS_DetectTouch+0x40>)
 8008dee:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 8008df2:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8008df6:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8008df8:	2200      	movs	r2, #0
 8008dfa:	709a      	strb	r2, [r3, #2]
}
 8008dfc:	b002      	add	sp, #8
 8008dfe:	bd10      	pop	{r4, pc}
 8008e00:	20005fd6 	.word	0x20005fd6

08008e04 <ft6x06_TS_GetXY>:
{
 8008e04:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008e06:	4c15      	ldr	r4, [pc, #84]	; (8008e5c <ft6x06_TS_GetXY+0x58>)
{
 8008e08:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008e0a:	78a3      	ldrb	r3, [r4, #2]
 8008e0c:	7862      	ldrb	r2, [r4, #1]
 8008e0e:	429a      	cmp	r2, r3
{
 8008e10:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8008e12:	d91f      	bls.n	8008e54 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8008e14:	b303      	cbz	r3, 8008e58 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 8008e16:	2b01      	cmp	r3, #1
 8008e18:	bf14      	ite	ne
 8008e1a:	2100      	movne	r1, #0
 8008e1c:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8008e1e:	2304      	movs	r3, #4
 8008e20:	eb0d 0203 	add.w	r2, sp, r3
 8008e24:	b2c0      	uxtb	r0, r0
 8008e26:	f000 fa93 	bl	8009350 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 8008e2a:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8008e2e:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8008e32:	021b      	lsls	r3, r3, #8
 8008e34:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008e38:	4313      	orrs	r3, r2
 8008e3a:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8008e3c:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8008e40:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8008e44:	021b      	lsls	r3, r3, #8
 8008e46:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8008e4a:	4313      	orrs	r3, r2
 8008e4c:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8008e4e:	78a3      	ldrb	r3, [r4, #2]
 8008e50:	3301      	adds	r3, #1
 8008e52:	70a3      	strb	r3, [r4, #2]
}
 8008e54:	b002      	add	sp, #8
 8008e56:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8008e58:	2103      	movs	r1, #3
 8008e5a:	e7e0      	b.n	8008e1e <ft6x06_TS_GetXY+0x1a>
 8008e5c:	20005fd6 	.word	0x20005fd6

08008e60 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8008e60:	2201      	movs	r2, #1
 8008e62:	21a4      	movs	r1, #164	; 0xa4
 8008e64:	b2c0      	uxtb	r0, r0
 8008e66:	f000 ba3b 	b.w	80092e0 <TS_IO_Write>

08008e6a <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8008e6a:	2200      	movs	r2, #0
 8008e6c:	21a4      	movs	r1, #164	; 0xa4
 8008e6e:	b2c0      	uxtb	r0, r0
 8008e70:	f000 ba36 	b.w	80092e0 <TS_IO_Write>

08008e74 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8008e74:	f7ff bff9 	b.w	8008e6a <ft6x06_TS_DisableIT>

08008e78 <ft6x06_TS_ClearIT>:
 8008e78:	4770      	bx	lr
	...

08008e7c <ft6x06_Init>:
{  
 8008e7c:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8008e7e:	4b09      	ldr	r3, [pc, #36]	; (8008ea4 <ft6x06_Init+0x28>)
 8008e80:	781a      	ldrb	r2, [r3, #0]
 8008e82:	4290      	cmp	r0, r2
 8008e84:	d00a      	beq.n	8008e9c <ft6x06_Init+0x20>
 8008e86:	7859      	ldrb	r1, [r3, #1]
 8008e88:	4288      	cmp	r0, r1
 8008e8a:	d007      	beq.n	8008e9c <ft6x06_Init+0x20>
 8008e8c:	b10a      	cbz	r2, 8008e92 <ft6x06_Init+0x16>
 8008e8e:	b929      	cbnz	r1, 8008e9c <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8008e90:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8008e92:	5498      	strb	r0, [r3, r2]
}
 8008e94:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8008e98:	f000 ba20 	b.w	80092dc <TS_IO_Init>
}
 8008e9c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ea0:	4770      	bx	lr
 8008ea2:	bf00      	nop
 8008ea4:	20005fd4 	.word	0x20005fd4

08008ea8 <NT35510_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t NT35510_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8008ea8:	b530      	push	{r4, r5, lr}
 8008eaa:	4604      	mov	r4, r0
 8008eac:	b0b1      	sub	sp, #196	; 0xc4
  NT35510_IO_Delay(120);
 8008eae:	2078      	movs	r0, #120	; 0x78
{
 8008eb0:	460d      	mov	r5, r1
  NT35510_IO_Delay(120);
 8008eb2:	f000 fa65 	bl	8009380 <NT35510_IO_Delay>

/* ************************************************************************** */
/* Proprietary Initialization                                                 */
/* ************************************************************************** */
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8008eb6:	4ba3      	ldr	r3, [pc, #652]	; (8009144 <NT35510_Init+0x29c>)
  const uint8_t nt35510_reg1[]  = {0x03, 0x03, 0x03, 0xB0};
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8008eb8:	4aa3      	ldr	r2, [pc, #652]	; (8009148 <NT35510_Init+0x2a0>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8008eba:	6818      	ldr	r0, [r3, #0]
 8008ebc:	889b      	ldrh	r3, [r3, #4]
 8008ebe:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8008ec2:	4ba2      	ldr	r3, [pc, #648]	; (800914c <NT35510_Init+0x2a4>)
  const uint8_t nt35510_reg3[]  = {0x03, 0x03, 0x03, 0xB1};
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8008ec4:	49a2      	ldr	r1, [pc, #648]	; (8009150 <NT35510_Init+0x2a8>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8008ec6:	902c      	str	r0, [sp, #176]	; 0xb0
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8008ec8:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8008ecc:	4ba1      	ldr	r3, [pc, #644]	; (8009154 <NT35510_Init+0x2ac>)
  const uint8_t nt35510_reg5[]  = {0x00, 0x00, 0x02, 0xB2};
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8008ece:	48a2      	ldr	r0, [pc, #648]	; (8009158 <NT35510_Init+0x2b0>)
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
  const uint8_t nt35510_reg8[]  = {0x09, 0x09, 0x09, 0xB3};
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8008ed0:	f8df c2a4 	ldr.w	ip, [pc, #676]	; 8009178 <NT35510_Init+0x2d0>
  const uint8_t nt35510_reg10[] = {0x08, 0x08, 0x08, 0xB5};
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 8008ed4:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 800917c <NT35510_Init+0x2d4>
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8008ed8:	e9cd 1316 	strd	r1, r3, [sp, #88]	; 0x58
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8008edc:	4b9f      	ldr	r3, [pc, #636]	; (800915c <NT35510_Init+0x2b4>)
 8008ede:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
 8008ee2:	f240 13bf 	movw	r3, #447	; 0x1bf
 8008ee6:	f8ad 3004 	strh.w	r3, [sp, #4]
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8008eea:	4b9d      	ldr	r3, [pc, #628]	; (8009160 <NT35510_Init+0x2b8>)
 8008eec:	e9cd c31a 	strd	ip, r3, [sp, #104]	; 0x68
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 8008ef0:	4b9c      	ldr	r3, [pc, #624]	; (8009164 <NT35510_Init+0x2bc>)
 8008ef2:	e9cd e31c 	strd	lr, r3, [sp, #112]	; 0x70
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
 8008ef6:	4b9c      	ldr	r3, [pc, #624]	; (8009168 <NT35510_Init+0x2c0>)
 8008ef8:	931e      	str	r3, [sp, #120]	; 0x78
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
 8008efa:	f103 7380 	add.w	r3, r3, #16777216	; 0x1000000
 8008efe:	931f      	str	r3, [sp, #124]	; 0x7c
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 8008f00:	4b9a      	ldr	r3, [pc, #616]	; (800916c <NT35510_Init+0x2c4>)
 8008f02:	789a      	ldrb	r2, [r3, #2]
 8008f04:	f88d 2046 	strb.w	r2, [sp, #70]	; 0x46
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 8008f08:	f8b3 2007 	ldrh.w	r2, [r3, #7]
 8008f0c:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 8008f10:	7ada      	ldrb	r2, [r3, #11]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 8008f12:	8819      	ldrh	r1, [r3, #0]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 8008f14:	f88d 204a 	strb.w	r2, [sp, #74]	; 0x4a
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 8008f18:	f240 32b6 	movw	r2, #950	; 0x3b6
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 8008f1c:	f8d3 0003 	ldr.w	r0, [r3, #3]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 8008f20:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 8008f24:	f8ad 2008 	strh.w	r2, [sp, #8]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 8008f28:	f8b3 1009 	ldrh.w	r1, [r3, #9]
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 8008f2c:	902e      	str	r0, [sp, #184]	; 0xb8
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 8008f2e:	f245 12b5 	movw	r2, #20917	; 0x51b5
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 8008f32:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 8008f36:	f8ad 200c 	strh.w	r2, [sp, #12]
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 8008f3a:	8999      	ldrh	r1, [r3, #12]
 8008f3c:	7b9a      	ldrb	r2, [r3, #14]
 8008f3e:	f88d 204e 	strb.w	r2, [sp, #78]	; 0x4e
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 8008f42:	4a8b      	ldr	r2, [pc, #556]	; (8009170 <NT35510_Init+0x2c8>)
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 8008f44:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 8008f48:	6810      	ldr	r0, [r2, #0]
 8008f4a:	7912      	ldrb	r2, [r2, #4]
 8008f4c:	f88d 208c 	strb.w	r2, [sp, #140]	; 0x8c
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 8008f50:	4a88      	ldr	r2, [pc, #544]	; (8009174 <NT35510_Init+0x2cc>)
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 8008f52:	9022      	str	r0, [sp, #136]	; 0x88
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 8008f54:	f04f 413c 	mov.w	r1, #3154116608	; 0xbc000000
 8008f58:	e9cd 1220 	strd	r1, r2, [sp, #128]	; 0x80
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 8008f5c:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
 8008f60:	f8ad 2010 	strh.w	r2, [sp, #16]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 8008f64:	2236      	movs	r2, #54	; 0x36
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 8008f66:	f8d3 000f 	ldr.w	r0, [r3, #15]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 8008f6a:	f8ad 2014 	strh.w	r2, [sp, #20]
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 8008f6e:	7cda      	ldrb	r2, [r3, #19]
 8008f70:	9024      	str	r0, [sp, #144]	; 0x90
 8008f72:	f88d 2094 	strb.w	r2, [sp, #148]	; 0x94
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 8008f76:	6958      	ldr	r0, [r3, #20]
 8008f78:	7e1a      	ldrb	r2, [r3, #24]
 8008f7a:	9026      	str	r0, [sp, #152]	; 0x98
 8008f7c:	f88d 209c 	strb.w	r2, [sp, #156]	; 0x9c
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8008f80:	f8d3 0019 	ldr.w	r0, [r3, #25]
 8008f84:	9028      	str	r0, [sp, #160]	; 0xa0
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 8008f86:	f246 0236 	movw	r2, #24630	; 0x6036
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8008f8a:	f8d3 001e 	ldr.w	r0, [r3, #30]
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 8008f8e:	f8ad 2018 	strh.w	r2, [sp, #24]
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8008f92:	7f5a      	ldrb	r2, [r3, #29]
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8008f94:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8008f98:	f88d 30ac 	strb.w	r3, [sp, #172]	; 0xac
  const uint8_t nt35510_reg26[] = {NT35510_CMD_TEEON, 0x00};  /* Tear on */
 8008f9c:	2335      	movs	r3, #53	; 0x35
 8008f9e:	f8ad 301c 	strh.w	r3, [sp, #28]
  const uint8_t nt35510_reg27[] = {NT35510_CMD_SLPOUT, 0x00}; /* Sleep out */
 8008fa2:	2311      	movs	r3, #17
 8008fa4:	f8ad 3020 	strh.w	r3, [sp, #32]
  const uint8_t nt35510_reg30[] = {NT35510_CMD_DISPON, 0x00};
 8008fa8:	2329      	movs	r3, #41	; 0x29
 8008faa:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24

  const uint8_t nt35510_reg31[] = {NT35510_CMD_WRDISBV, 0x7F};
 8008fae:	f647 7351 	movw	r3, #32593	; 0x7f51
 8008fb2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8008fb6:	f642 4353 	movw	r3, #11347	; 0x2c53
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8008fba:	f88d 20a4 	strb.w	r2, [sp, #164]	; 0xa4
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8008fbe:	902a      	str	r0, [sp, #168]	; 0xa8
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8008fc0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
  const uint8_t nt35510_reg33[] = {NT35510_CMD_WRCABC, 0x02};
 8008fc4:	f240 2355 	movw	r3, #597	; 0x255
 8008fc8:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
  const uint8_t nt35510_reg34[] = {NT35510_CMD_WRCABCMB, 0xFF};
 8008fcc:	f64f 735e 	movw	r3, #65374	; 0xff5e
 8008fd0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 8008fd4:	232c      	movs	r3, #44	; 0x2c
 8008fd6:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 8008fda:	f245 533a 	movw	r3, #21818	; 0x553a
 8008fde:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};

  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8008fe2:	a92c      	add	r1, sp, #176	; 0xb0
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 8008fe4:	f247 733a 	movw	r3, #30522	; 0x773a
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8008fe8:	2005      	movs	r0, #5
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 8008fea:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8008fee:	f7f7 ffb5 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg1);/* AVDD: 5.2V */
 8008ff2:	a914      	add	r1, sp, #80	; 0x50
 8008ff4:	2003      	movs	r0, #3
 8008ff6:	f7f7 ffb1 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg2);/* AVDD: Ratio */
 8008ffa:	a915      	add	r1, sp, #84	; 0x54
 8008ffc:	2003      	movs	r0, #3
 8008ffe:	f7f7 ffad 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg3);/* AVEE: -5.2V */
 8009002:	a916      	add	r1, sp, #88	; 0x58
 8009004:	2003      	movs	r0, #3
 8009006:	f7f7 ffa9 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg4);/* AVEE: Ratio */
 800900a:	a917      	add	r1, sp, #92	; 0x5c
 800900c:	2003      	movs	r0, #3
 800900e:	f7f7 ffa5 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg5);/* VCL: -2.5V */
 8009012:	a918      	add	r1, sp, #96	; 0x60
 8009014:	2003      	movs	r0, #3
 8009016:	f7f7 ffa1 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg6);/* VCL: Ratio */
 800901a:	a919      	add	r1, sp, #100	; 0x64
 800901c:	2003      	movs	r0, #3
 800901e:	f7f7 ff9d 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg7);/* VGH: 15V (Free Pump) */
 8009022:	a901      	add	r1, sp, #4
 8009024:	2001      	movs	r0, #1
 8009026:	f7f7 ff99 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg8);
 800902a:	a91a      	add	r1, sp, #104	; 0x68
 800902c:	2003      	movs	r0, #3
 800902e:	f7f7 ff95 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg9);/* VGH: Ratio */
 8009032:	a91b      	add	r1, sp, #108	; 0x6c
 8009034:	2003      	movs	r0, #3
 8009036:	f7f7 ff91 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg10);/* VGL_REG: -10V */
 800903a:	a91c      	add	r1, sp, #112	; 0x70
 800903c:	2003      	movs	r0, #3
 800903e:	f7f7 ff8d 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg12);/* VGLX: Ratio */
 8009042:	a91d      	add	r1, sp, #116	; 0x74
 8009044:	2003      	movs	r0, #3
 8009046:	f7f7 ff89 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg13);/* VGMP/VGSP: 4.5V/0V */
 800904a:	a91e      	add	r1, sp, #120	; 0x78
 800904c:	2003      	movs	r0, #3
 800904e:	f7f7 ff85 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg14);/* VGMN/VGSN:-4.5V/0V */
 8009052:	a91f      	add	r1, sp, #124	; 0x7c
 8009054:	2003      	movs	r0, #3
 8009056:	f7f7 ff81 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg15);/* VCOM: -1.325V */
 800905a:	a911      	add	r1, sp, #68	; 0x44
 800905c:	2002      	movs	r0, #2
 800905e:	f7f7 ff7d 	bl	8000f5c <DSI_IO_WriteCmd>

/* ************************************************************************** */
/* Proprietary DCS Initialization                                             */
/* ************************************************************************** */
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg16);/* LV2: Page 0 enable */
 8009062:	a92e      	add	r1, sp, #184	; 0xb8
 8009064:	2005      	movs	r0, #5
 8009066:	f7f7 ff79 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg17);/* Display control */
 800906a:	a912      	add	r1, sp, #72	; 0x48
 800906c:	2002      	movs	r0, #2
 800906e:	f7f7 ff75 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg18);/* Src hold time */
 8009072:	a902      	add	r1, sp, #8
 8009074:	2001      	movs	r0, #1
 8009076:	f7f7 ff71 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg19);
 800907a:	a903      	add	r1, sp, #12
 800907c:	2001      	movs	r0, #1
 800907e:	f7f7 ff6d 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg20);/* Gate EQ control */
 8009082:	a913      	add	r1, sp, #76	; 0x4c
 8009084:	2002      	movs	r0, #2
 8009086:	f7f7 ff69 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(4, (uint8_t *)nt35510_reg21);/* Src EQ control(Mode2) */
 800908a:	a922      	add	r1, sp, #136	; 0x88
 800908c:	2004      	movs	r0, #4
 800908e:	f7f7 ff65 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg22);/* Inv. mode(2-dot) */
 8009092:	a920      	add	r1, sp, #128	; 0x80
 8009094:	2003      	movs	r0, #3
 8009096:	f7f7 ff61 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg23);
 800909a:	a921      	add	r1, sp, #132	; 0x84
 800909c:	2003      	movs	r0, #3
 800909e:	f7f7 ff5d 	bl	8000f5c <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg24);
 80090a2:	a904      	add	r1, sp, #16
 80090a4:	2001      	movs	r0, #1
 80090a6:	f7f7 ff59 	bl	8000f5c <DSI_IO_WriteCmd>
  /* Tear on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg26);
 80090aa:	a907      	add	r1, sp, #28
 80090ac:	2000      	movs	r0, #0
 80090ae:	f7f7 ff55 	bl	8000f5c <DSI_IO_WriteCmd>
  /* Set Pixel color format to RGB888 */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg37);
 80090b2:	2000      	movs	r0, #0
 80090b4:	a910      	add	r1, sp, #64	; 0x40
 80090b6:	f7f7 ff51 	bl	8000f5c <DSI_IO_WriteCmd>
/* ************************************************************************** */
/* Standard DCS Initialization                                                */
/* ************************************************************************** */

  /* Add a delay, otherwise MADCTL not taken */
  NT35510_IO_Delay(200);
 80090ba:	20c8      	movs	r0, #200	; 0xc8
 80090bc:	f000 f960 	bl	8009380 <NT35510_IO_Delay>

  /* Configure orientation */
  if(orientation == NT35510_ORIENTATION_PORTRAIT)
 80090c0:	2d00      	cmp	r5, #0
 80090c2:	d134      	bne.n	800912e <NT35510_Init+0x286>
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_portrait);
 80090c4:	a905      	add	r1, sp, #20
 80090c6:	2001      	movs	r0, #1
 80090c8:	f7f7 ff48 	bl	8000f5c <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_portrait);
 80090cc:	a924      	add	r1, sp, #144	; 0x90
 80090ce:	2004      	movs	r0, #4
 80090d0:	f7f7 ff44 	bl	8000f5c <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_portrait);
 80090d4:	a926      	add	r1, sp, #152	; 0x98
  }
  else
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 80090d6:	2004      	movs	r0, #4
 80090d8:	f7f7 ff40 	bl	8000f5c <DSI_IO_WriteCmd>
  }

  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg27);
 80090dc:	a908      	add	r1, sp, #32
 80090de:	2000      	movs	r0, #0
 80090e0:	f7f7 ff3c 	bl	8000f5c <DSI_IO_WriteCmd>
  /* Wait for sleep out exit */
  NT35510_IO_Delay(120);
 80090e4:	2078      	movs	r0, #120	; 0x78
 80090e6:	f000 f94b 	bl	8009380 <NT35510_IO_Delay>

  switch(ColorCoding)
 80090ea:	2c02      	cmp	r4, #2
  {
    case NT35510_FORMAT_RBG565 :
      /* Set Pixel color format to RGB565 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg36);
 80090ec:	bf0c      	ite	eq
 80090ee:	a90f      	addeq	r1, sp, #60	; 0x3c
      break;
    case NT35510_FORMAT_RGB888 :
      /* Set Pixel color format to RGB888 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg37);
 80090f0:	a910      	addne	r1, sp, #64	; 0x40
 80090f2:	2001      	movs	r0, #1
 80090f4:	f7f7 ff32 	bl	8000f5c <DSI_IO_WriteCmd>
      break;
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg31);
 80090f8:	a90a      	add	r1, sp, #40	; 0x28
 80090fa:	2001      	movs	r0, #1
 80090fc:	f7f7 ff2e 	bl	8000f5c <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg32);
 8009100:	a90b      	add	r1, sp, #44	; 0x2c
 8009102:	2001      	movs	r0, #1
 8009104:	f7f7 ff2a 	bl	8000f5c <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg33);
 8009108:	a90c      	add	r1, sp, #48	; 0x30
 800910a:	2001      	movs	r0, #1
 800910c:	f7f7 ff26 	bl	8000f5c <DSI_IO_WriteCmd>
  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg34);
 8009110:	a90d      	add	r1, sp, #52	; 0x34
 8009112:	2001      	movs	r0, #1
 8009114:	f7f7 ff22 	bl	8000f5c <DSI_IO_WriteCmd>
  /** CABC : Content Adaptive Backlight Control section end << */

  /* Display on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg30);
 8009118:	a909      	add	r1, sp, #36	; 0x24
 800911a:	2000      	movs	r0, #0
 800911c:	f7f7 ff1e 	bl	8000f5c <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg35);
 8009120:	a90e      	add	r1, sp, #56	; 0x38
 8009122:	2000      	movs	r0, #0
 8009124:	f7f7 ff1a 	bl	8000f5c <DSI_IO_WriteCmd>

  return 0;
}
 8009128:	2000      	movs	r0, #0
 800912a:	b031      	add	sp, #196	; 0xc4
 800912c:	bd30      	pop	{r4, r5, pc}
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
 800912e:	a906      	add	r1, sp, #24
 8009130:	2001      	movs	r0, #1
 8009132:	f7f7 ff13 	bl	8000f5c <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
 8009136:	a928      	add	r1, sp, #160	; 0xa0
 8009138:	2004      	movs	r0, #4
 800913a:	f7f7 ff0f 	bl	8000f5c <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 800913e:	a92a      	add	r1, sp, #168	; 0xa8
 8009140:	e7c9      	b.n	80090d6 <NT35510_Init+0x22e>
 8009142:	bf00      	nop
 8009144:	08029968 	.word	0x08029968
 8009148:	b0030303 	.word	0xb0030303
 800914c:	b6464646 	.word	0xb6464646
 8009150:	b1030303 	.word	0xb1030303
 8009154:	b7363636 	.word	0xb7363636
 8009158:	b2020000 	.word	0xb2020000
 800915c:	b8262626 	.word	0xb8262626
 8009160:	b9363636 	.word	0xb9363636
 8009164:	ba262626 	.word	0xba262626
 8009168:	bc008000 	.word	0xbc008000
 800916c:	080275a3 	.word	0x080275a3
 8009170:	0802996f 	.word	0x0802996f
 8009174:	cc000003 	.word	0xcc000003
 8009178:	b3090909 	.word	0xb3090909
 800917c:	b5080808 	.word	0xb5080808

08009180 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009180:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009182:	4d2f      	ldr	r5, [pc, #188]	; (8009240 <I2C1_Init+0xc0>)
{
 8009184:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8009186:	4628      	mov	r0, r5
 8009188:	f002 f964 	bl	800b454 <HAL_I2C_GetState>
 800918c:	4604      	mov	r4, r0
 800918e:	2800      	cmp	r0, #0
 8009190:	d154      	bne.n	800923c <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009192:	4a2c      	ldr	r2, [pc, #176]	; (8009244 <I2C1_Init+0xc4>)
 8009194:	4b2c      	ldr	r3, [pc, #176]	; (8009248 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009196:	4e2d      	ldr	r6, [pc, #180]	; (800924c <I2C1_Init+0xcc>)
 8009198:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800919a:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 800919e:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 80091a2:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80091a6:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80091aa:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 80091ae:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80091b0:	6b33      	ldr	r3, [r6, #48]	; 0x30
 80091b2:	f043 0302 	orr.w	r3, r3, #2
 80091b6:	6333      	str	r3, [r6, #48]	; 0x30
 80091b8:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 80091ba:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 80091bc:	f003 0302 	and.w	r3, r3, #2
 80091c0:	9301      	str	r3, [sp, #4]
 80091c2:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 80091c4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80091c8:	2312      	movs	r3, #18
 80091ca:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 80091ce:	2002      	movs	r0, #2
 80091d0:	2304      	movs	r3, #4
 80091d2:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80091d6:	a903      	add	r1, sp, #12
 80091d8:	481d      	ldr	r0, [pc, #116]	; (8009250 <I2C1_Init+0xd0>)
 80091da:	f001 fb69 	bl	800a8b0 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80091de:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80091e2:	a903      	add	r1, sp, #12
 80091e4:	481a      	ldr	r0, [pc, #104]	; (8009250 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 80091e6:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80091e8:	f001 fb62 	bl	800a8b0 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 80091ec:	9402      	str	r4, [sp, #8]
 80091ee:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80091f0:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80091f4:	6433      	str	r3, [r6, #64]	; 0x40
 80091f6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80091f8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80091fc:	9302      	str	r3, [sp, #8]
 80091fe:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8009200:	6a33      	ldr	r3, [r6, #32]
 8009202:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009206:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8009208:	6a33      	ldr	r3, [r6, #32]
 800920a:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800920e:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8009210:	4622      	mov	r2, r4
 8009212:	2105      	movs	r1, #5
 8009214:	201f      	movs	r0, #31
 8009216:	f000 fd15 	bl	8009c44 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 800921a:	201f      	movs	r0, #31
 800921c:	f000 fd44 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8009220:	4622      	mov	r2, r4
 8009222:	2105      	movs	r1, #5
 8009224:	2020      	movs	r0, #32
 8009226:	f000 fd0d 	bl	8009c44 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 800922a:	2020      	movs	r0, #32
 800922c:	f000 fd3c 	bl	8009ca8 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8009230:	4628      	mov	r0, r5
  }
}
 8009232:	b008      	add	sp, #32
 8009234:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 8009238:	f001 beb2 	b.w	800afa0 <HAL_I2C_Init>
}
 800923c:	b008      	add	sp, #32
 800923e:	bd70      	pop	{r4, r5, r6, pc}
 8009240:	20005fdc 	.word	0x20005fdc
 8009244:	40005400 	.word	0x40005400
 8009248:	00061a80 	.word	0x00061a80
 800924c:	40023800 	.word	0x40023800
 8009250:	40020400 	.word	0x40020400

08009254 <BSP_PB_Init>:
{
 8009254:	b510      	push	{r4, lr}
 8009256:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8009258:	4b19      	ldr	r3, [pc, #100]	; (80092c0 <BSP_PB_Init+0x6c>)
 800925a:	2400      	movs	r4, #0
 800925c:	9400      	str	r4, [sp, #0]
 800925e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009260:	f042 0201 	orr.w	r2, r2, #1
 8009264:	631a      	str	r2, [r3, #48]	; 0x30
 8009266:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009268:	f003 0301 	and.w	r3, r3, #1
 800926c:	9300      	str	r3, [sp, #0]
 800926e:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009270:	b969      	cbnz	r1, 800928e <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009272:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8009274:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009278:	2302      	movs	r3, #2
 800927a:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800927c:	4b11      	ldr	r3, [pc, #68]	; (80092c4 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 800927e:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009280:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8009284:	a901      	add	r1, sp, #4
 8009286:	f001 fb13 	bl	800a8b0 <HAL_GPIO_Init>
}
 800928a:	b006      	add	sp, #24
 800928c:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 800928e:	2901      	cmp	r1, #1
 8009290:	d1fb      	bne.n	800928a <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009292:	2302      	movs	r3, #2
 8009294:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8009296:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800929a:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800929c:	4b09      	ldr	r3, [pc, #36]	; (80092c4 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800929e:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80092a0:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 80092a4:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 80092a6:	a901      	add	r1, sp, #4
 80092a8:	f001 fb02 	bl	800a8b0 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 80092ac:	4622      	mov	r2, r4
 80092ae:	210f      	movs	r1, #15
 80092b0:	2006      	movs	r0, #6
 80092b2:	f000 fcc7 	bl	8009c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 80092b6:	2006      	movs	r0, #6
 80092b8:	f000 fcf6 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
}
 80092bc:	e7e5      	b.n	800928a <BSP_PB_Init+0x36>
 80092be:	bf00      	nop
 80092c0:	40023800 	.word	0x40023800
 80092c4:	20000048 	.word	0x20000048

080092c8 <BSP_PB_GetState>:
{
 80092c8:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 80092ca:	4b03      	ldr	r3, [pc, #12]	; (80092d8 <BSP_PB_GetState+0x10>)
 80092cc:	2101      	movs	r1, #1
 80092ce:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80092d2:	f001 fc75 	bl	800abc0 <HAL_GPIO_ReadPin>
}
 80092d6:	bd08      	pop	{r3, pc}
 80092d8:	20000048 	.word	0x20000048

080092dc <TS_IO_Init>:
 80092dc:	f7ff bf50 	b.w	8009180 <I2C1_Init>

080092e0 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 80092e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 80092e2:	2301      	movs	r3, #1
 80092e4:	f88d 2017 	strb.w	r2, [sp, #23]
 80092e8:	2264      	movs	r2, #100	; 0x64
 80092ea:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80092ee:	f10d 0217 	add.w	r2, sp, #23
 80092f2:	9200      	str	r2, [sp, #0]
 80092f4:	460a      	mov	r2, r1
 80092f6:	4601      	mov	r1, r0
 80092f8:	4805      	ldr	r0, [pc, #20]	; (8009310 <TS_IO_Write+0x30>)
 80092fa:	f001 ff13 	bl	800b124 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80092fe:	b120      	cbz	r0, 800930a <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8009300:	4803      	ldr	r0, [pc, #12]	; (8009310 <TS_IO_Write+0x30>)
 8009302:	f001 fef5 	bl	800b0f0 <HAL_I2C_DeInit>
  I2C1_Init();
 8009306:	f7ff ff3b 	bl	8009180 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 800930a:	b007      	add	sp, #28
 800930c:	f85d fb04 	ldr.w	pc, [sp], #4
 8009310:	20005fdc 	.word	0x20005fdc

08009314 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8009314:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8009316:	2300      	movs	r3, #0
{
 8009318:	460a      	mov	r2, r1
  uint8_t Value = 0;
 800931a:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800931e:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009322:	2301      	movs	r3, #1
 8009324:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8009328:	f10d 0117 	add.w	r1, sp, #23
 800932c:	9100      	str	r1, [sp, #0]
 800932e:	4601      	mov	r1, r0
 8009330:	4806      	ldr	r0, [pc, #24]	; (800934c <TS_IO_Read+0x38>)
 8009332:	f001 ff87 	bl	800b244 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009336:	b120      	cbz	r0, 8009342 <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8009338:	4804      	ldr	r0, [pc, #16]	; (800934c <TS_IO_Read+0x38>)
 800933a:	f001 fed9 	bl	800b0f0 <HAL_I2C_DeInit>
  I2C1_Init();
 800933e:	f7ff ff1f 	bl	8009180 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8009342:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8009346:	b007      	add	sp, #28
 8009348:	f85d fb04 	ldr.w	pc, [sp], #4
 800934c:	20005fdc 	.word	0x20005fdc

08009350 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8009350:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8009352:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8009356:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800935a:	9200      	str	r2, [sp, #0]
 800935c:	2301      	movs	r3, #1
 800935e:	460a      	mov	r2, r1
 8009360:	4601      	mov	r1, r0
 8009362:	4806      	ldr	r0, [pc, #24]	; (800937c <TS_IO_ReadMultiple+0x2c>)
 8009364:	f001 ff6e 	bl	800b244 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009368:	4604      	mov	r4, r0
 800936a:	b120      	cbz	r0, 8009376 <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 800936c:	4803      	ldr	r0, [pc, #12]	; (800937c <TS_IO_ReadMultiple+0x2c>)
 800936e:	f001 febf 	bl	800b0f0 <HAL_I2C_DeInit>
  I2C1_Init();
 8009372:	f7ff ff05 	bl	8009180 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8009376:	b2a0      	uxth	r0, r4
 8009378:	b004      	add	sp, #16
 800937a:	bd10      	pop	{r4, pc}
 800937c:	20005fdc 	.word	0x20005fdc

08009380 <NT35510_IO_Delay>:
 8009380:	f000 bc3a 	b.w	8009bf8 <HAL_Delay>

08009384 <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8009384:	b500      	push	{lr}
 8009386:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009388:	f44f 7280 	mov.w	r2, #256	; 0x100
 800938c:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800938e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8009392:	2205      	movs	r2, #5
 8009394:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009396:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009398:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 800939a:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 800939c:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80093a0:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80093a4:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 80093a8:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80093aa:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 80093ac:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 80093ae:	2210      	movs	r2, #16
 80093b0:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80093b2:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 80093b6:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 80093b8:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 80093ba:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 80093bc:	a906      	add	r1, sp, #24
 80093be:	466a      	mov	r2, sp
 80093c0:	4804      	ldr	r0, [pc, #16]	; (80093d4 <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 80093c2:	f002 fbc0 	bl	800bb46 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 80093c6:	3800      	subs	r0, #0
 80093c8:	bf18      	it	ne
 80093ca:	2001      	movne	r0, #1
 80093cc:	b015      	add	sp, #84	; 0x54
 80093ce:	f85d fb04 	ldr.w	pc, [sp], #4
 80093d2:	bf00      	nop
 80093d4:	20006030 	.word	0x20006030

080093d8 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 80093d8:	b500      	push	{lr}
 80093da:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80093dc:	f44f 7380 	mov.w	r3, #256	; 0x100
 80093e0:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 80093e2:	2306      	movs	r3, #6
 80093e4:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80093e6:	4817      	ldr	r0, [pc, #92]	; (8009444 <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80093e8:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80093ea:	f241 3288 	movw	r2, #5000	; 0x1388
 80093ee:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80093f0:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80093f4:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80093f8:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80093fa:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80093fc:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80093fe:	f002 fb5e 	bl	800babe <HAL_QSPI_Command>
 8009402:	b9e0      	cbnz	r0, 800943e <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8009404:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8009406:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 800940a:	2201      	movs	r2, #1
 800940c:	2310      	movs	r3, #16
 800940e:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8009412:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8009416:	2305      	movs	r3, #5
 8009418:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 800941c:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8009420:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8009422:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009424:	4807      	ldr	r0, [pc, #28]	; (8009444 <QSPI_WriteEnable.constprop.0+0x6c>)
 8009426:	f241 3388 	movw	r3, #5000	; 0x1388
 800942a:	466a      	mov	r2, sp
 800942c:	a906      	add	r1, sp, #24
 800942e:	f002 fb8a 	bl	800bb46 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8009432:	3800      	subs	r0, #0
 8009434:	bf18      	it	ne
 8009436:	2001      	movne	r0, #1
}
 8009438:	b015      	add	sp, #84	; 0x54
 800943a:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 800943e:	2001      	movs	r0, #1
 8009440:	e7fa      	b.n	8009438 <QSPI_WriteEnable.constprop.0+0x60>
 8009442:	bf00      	nop
 8009444:	20006030 	.word	0x20006030

08009448 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8009448:	b500      	push	{lr}
 800944a:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800944c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009450:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8009452:	23eb      	movs	r3, #235	; 0xeb
 8009454:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8009456:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800945a:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 800945c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009460:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8009462:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8009466:	2300      	movs	r3, #0
 8009468:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 800946c:	220a      	movs	r2, #10
 800946e:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009470:	a902      	add	r1, sp, #8
 8009472:	466a      	mov	r2, sp
 8009474:	4806      	ldr	r0, [pc, #24]	; (8009490 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009476:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009478:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 800947c:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 800947e:	f002 fbb2 	bl	800bbe6 <HAL_QSPI_MemoryMapped>
}
 8009482:	3800      	subs	r0, #0
 8009484:	bf18      	it	ne
 8009486:	2001      	movne	r0, #1
 8009488:	b011      	add	sp, #68	; 0x44
 800948a:	f85d fb04 	ldr.w	pc, [sp], #4
 800948e:	bf00      	nop
 8009490:	20006030 	.word	0x20006030

08009494 <BSP_QSPI_MspInit>:
{
 8009494:	b570      	push	{r4, r5, r6, lr}
 8009496:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8009498:	4b2c      	ldr	r3, [pc, #176]	; (800954c <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 800949a:	482d      	ldr	r0, [pc, #180]	; (8009550 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 800949c:	2400      	movs	r4, #0
 800949e:	9400      	str	r4, [sp, #0]
 80094a0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80094a2:	f042 0202 	orr.w	r2, r2, #2
 80094a6:	639a      	str	r2, [r3, #56]	; 0x38
 80094a8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80094aa:	f002 0202 	and.w	r2, r2, #2
 80094ae:	9200      	str	r2, [sp, #0]
 80094b0:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 80094b2:	699a      	ldr	r2, [r3, #24]
 80094b4:	f042 0202 	orr.w	r2, r2, #2
 80094b8:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80094ba:	699a      	ldr	r2, [r3, #24]
 80094bc:	f022 0202 	bic.w	r2, r2, #2
 80094c0:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 80094c2:	9401      	str	r4, [sp, #4]
 80094c4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80094c6:	f042 0202 	orr.w	r2, r2, #2
 80094ca:	631a      	str	r2, [r3, #48]	; 0x30
 80094cc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80094ce:	f002 0202 	and.w	r2, r2, #2
 80094d2:	9201      	str	r2, [sp, #4]
 80094d4:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80094d6:	9402      	str	r4, [sp, #8]
 80094d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80094da:	f042 0220 	orr.w	r2, r2, #32
 80094de:	631a      	str	r2, [r3, #48]	; 0x30
 80094e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80094e2:	f003 0320 	and.w	r3, r3, #32
 80094e6:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80094e8:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80094ea:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80094ec:	2302      	movs	r3, #2
 80094ee:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80094f2:	2101      	movs	r1, #1
 80094f4:	2303      	movs	r3, #3
 80094f6:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80094fa:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80094fc:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80094fe:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009500:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009502:	f001 f9d5 	bl	800a8b0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8009506:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 800950a:	a903      	add	r1, sp, #12
 800950c:	4811      	ldr	r0, [pc, #68]	; (8009554 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 800950e:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8009510:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009512:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8009514:	f001 f9cc 	bl	800a8b0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009518:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800951c:	a903      	add	r1, sp, #12
 800951e:	480d      	ldr	r0, [pc, #52]	; (8009554 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8009520:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8009522:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009524:	f001 f9c4 	bl	800a8b0 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8009528:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 800952a:	a903      	add	r1, sp, #12
 800952c:	4809      	ldr	r0, [pc, #36]	; (8009554 <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 800952e:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8009530:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8009532:	f001 f9bd 	bl	800a8b0 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8009536:	4622      	mov	r2, r4
 8009538:	210f      	movs	r1, #15
 800953a:	205b      	movs	r0, #91	; 0x5b
 800953c:	f000 fb82 	bl	8009c44 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8009540:	205b      	movs	r0, #91	; 0x5b
 8009542:	f000 fbb1 	bl	8009ca8 <HAL_NVIC_EnableIRQ>
}
 8009546:	b008      	add	sp, #32
 8009548:	bd70      	pop	{r4, r5, r6, pc}
 800954a:	bf00      	nop
 800954c:	40023800 	.word	0x40023800
 8009550:	40020400 	.word	0x40020400
 8009554:	40021400 	.word	0x40021400

08009558 <BSP_QSPI_Init>:
{
 8009558:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 800955a:	4c48      	ldr	r4, [pc, #288]	; (800967c <BSP_QSPI_Init+0x124>)
 800955c:	4b48      	ldr	r3, [pc, #288]	; (8009680 <BSP_QSPI_Init+0x128>)
 800955e:	6023      	str	r3, [r4, #0]
{
 8009560:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8009562:	4620      	mov	r0, r4
 8009564:	f002 fa98 	bl	800ba98 <HAL_QSPI_DeInit>
 8009568:	4605      	mov	r5, r0
 800956a:	b110      	cbz	r0, 8009572 <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 800956c:	2001      	movs	r0, #1
}
 800956e:	b011      	add	sp, #68	; 0x44
 8009570:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8009572:	4601      	mov	r1, r0
 8009574:	4620      	mov	r0, r4
 8009576:	f7ff ff8d 	bl	8009494 <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 800957a:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800957c:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 800957e:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009582:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8009584:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8009588:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 800958c:	fab3 f383 	clz	r3, r3
 8009590:	3b01      	subs	r3, #1
 8009592:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8009594:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8009596:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 800959a:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 800959e:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 80095a2:	f002 fa25 	bl	800b9f0 <HAL_QSPI_Init>
 80095a6:	2800      	cmp	r0, #0
 80095a8:	d1e0      	bne.n	800956c <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80095aa:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80095ae:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80095b2:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 80095b6:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 80095b8:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 80095ba:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80095bc:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095be:	f241 3288 	movw	r2, #5000	; 0x1388
 80095c2:	a902      	add	r1, sp, #8
 80095c4:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80095c6:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 80095c8:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095ca:	f002 fa78 	bl	800babe <HAL_QSPI_Command>
 80095ce:	b108      	cbz	r0, 80095d4 <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 80095d0:	2004      	movs	r0, #4
 80095d2:	e7cc      	b.n	800956e <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 80095d4:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095d6:	f241 3288 	movw	r2, #5000	; 0x1388
 80095da:	a902      	add	r1, sp, #8
 80095dc:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 80095de:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80095e0:	f002 fa6d 	bl	800babe <HAL_QSPI_Command>
 80095e4:	2800      	cmp	r0, #0
 80095e6:	d1f3      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80095e8:	f241 3088 	movw	r0, #5000	; 0x1388
 80095ec:	f7ff feca 	bl	8009384 <QSPI_AutoPollingMemReady.constprop.0>
 80095f0:	2800      	cmp	r0, #0
 80095f2:	d1ed      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80095f4:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80095f8:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80095fc:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8009600:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8009602:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009604:	f241 3288 	movw	r2, #5000	; 0x1388
 8009608:	a902      	add	r1, sp, #8
 800960a:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800960c:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 800960e:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009610:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009612:	f002 fa54 	bl	800babe <HAL_QSPI_Command>
 8009616:	2800      	cmp	r0, #0
 8009618:	d1da      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800961a:	f241 3288 	movw	r2, #5000	; 0x1388
 800961e:	f10d 0107 	add.w	r1, sp, #7
 8009622:	4620      	mov	r0, r4
 8009624:	f002 fbc4 	bl	800bdb0 <HAL_QSPI_Receive>
 8009628:	2800      	cmp	r0, #0
 800962a:	d1d1      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 800962c:	f7ff fed4 	bl	80093d8 <QSPI_WriteEnable.constprop.0>
 8009630:	2800      	cmp	r0, #0
 8009632:	d1cd      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8009634:	2381      	movs	r3, #129	; 0x81
 8009636:	9302      	str	r3, [sp, #8]
 8009638:	22f0      	movs	r2, #240	; 0xf0
 800963a:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800963e:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009642:	210a      	movs	r1, #10
 8009644:	fab2 f282 	clz	r2, r2
 8009648:	fa01 f202 	lsl.w	r2, r1, r2
 800964c:	f003 030f 	and.w	r3, r3, #15
 8009650:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009652:	a902      	add	r1, sp, #8
 8009654:	f241 3288 	movw	r2, #5000	; 0x1388
 8009658:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 800965a:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800965e:	f002 fa2e 	bl	800babe <HAL_QSPI_Command>
 8009662:	2800      	cmp	r0, #0
 8009664:	d1b4      	bne.n	80095d0 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009666:	f241 3288 	movw	r2, #5000	; 0x1388
 800966a:	f10d 0107 	add.w	r1, sp, #7
 800966e:	4620      	mov	r0, r4
 8009670:	f002 fb42 	bl	800bcf8 <HAL_QSPI_Transmit>
 8009674:	2800      	cmp	r0, #0
 8009676:	f43f af7a 	beq.w	800956e <BSP_QSPI_Init+0x16>
 800967a:	e7a9      	b.n	80095d0 <BSP_QSPI_Init+0x78>
 800967c:	20006030 	.word	0x20006030
 8009680:	a0001000 	.word	0xa0001000

08009684 <BSP_QSPI_MspDeInit>:
{
 8009684:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8009686:	205b      	movs	r0, #91	; 0x5b
 8009688:	f000 fb1c 	bl	8009cc4 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 800968c:	4814      	ldr	r0, [pc, #80]	; (80096e0 <BSP_QSPI_MspDeInit+0x5c>)
 800968e:	2140      	movs	r1, #64	; 0x40
 8009690:	f001 f9f4 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8009694:	4813      	ldr	r0, [pc, #76]	; (80096e4 <BSP_QSPI_MspDeInit+0x60>)
 8009696:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800969a:	f001 f9ef 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 800969e:	4811      	ldr	r0, [pc, #68]	; (80096e4 <BSP_QSPI_MspDeInit+0x60>)
 80096a0:	f44f 7180 	mov.w	r1, #256	; 0x100
 80096a4:	f001 f9ea 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 80096a8:	480e      	ldr	r0, [pc, #56]	; (80096e4 <BSP_QSPI_MspDeInit+0x60>)
 80096aa:	f44f 7100 	mov.w	r1, #512	; 0x200
 80096ae:	f001 f9e5 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 80096b2:	480c      	ldr	r0, [pc, #48]	; (80096e4 <BSP_QSPI_MspDeInit+0x60>)
 80096b4:	2180      	movs	r1, #128	; 0x80
 80096b6:	f001 f9e1 	bl	800aa7c <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 80096ba:	480a      	ldr	r0, [pc, #40]	; (80096e4 <BSP_QSPI_MspDeInit+0x60>)
 80096bc:	2140      	movs	r1, #64	; 0x40
 80096be:	f001 f9dd 	bl	800aa7c <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 80096c2:	4b09      	ldr	r3, [pc, #36]	; (80096e8 <BSP_QSPI_MspDeInit+0x64>)
 80096c4:	699a      	ldr	r2, [r3, #24]
 80096c6:	f042 0202 	orr.w	r2, r2, #2
 80096ca:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 80096cc:	699a      	ldr	r2, [r3, #24]
 80096ce:	f022 0202 	bic.w	r2, r2, #2
 80096d2:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 80096d4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80096d6:	f022 0202 	bic.w	r2, r2, #2
 80096da:	639a      	str	r2, [r3, #56]	; 0x38
}
 80096dc:	bd08      	pop	{r3, pc}
 80096de:	bf00      	nop
 80096e0:	40020400 	.word	0x40020400
 80096e4:	40021400 	.word	0x40021400
 80096e8:	40023800 	.word	0x40023800

080096ec <BSP_QSPI_DeInit>:
{
 80096ec:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80096ee:	4d08      	ldr	r5, [pc, #32]	; (8009710 <BSP_QSPI_DeInit+0x24>)
 80096f0:	4b08      	ldr	r3, [pc, #32]	; (8009714 <BSP_QSPI_DeInit+0x28>)
 80096f2:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80096f4:	4628      	mov	r0, r5
 80096f6:	f002 f9cf 	bl	800ba98 <HAL_QSPI_DeInit>
 80096fa:	4604      	mov	r4, r0
 80096fc:	b928      	cbnz	r0, 800970a <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80096fe:	4601      	mov	r1, r0
 8009700:	4628      	mov	r0, r5
 8009702:	f7ff ffbf 	bl	8009684 <BSP_QSPI_MspDeInit>
}
 8009706:	4620      	mov	r0, r4
 8009708:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 800970a:	2401      	movs	r4, #1
 800970c:	e7fb      	b.n	8009706 <BSP_QSPI_DeInit+0x1a>
 800970e:	bf00      	nop
 8009710:	20006030 	.word	0x20006030
 8009714:	a0001000 	.word	0xa0001000

08009718 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8009718:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 800971c:	4c21      	ldr	r4, [pc, #132]	; (80097a4 <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800971e:	4d22      	ldr	r5, [pc, #136]	; (80097a8 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009720:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8009722:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009726:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009728:	4621      	mov	r1, r4
{
 800972a:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800972c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009730:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009732:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8009736:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 800973a:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800973e:	f002 ffdb 	bl	800c6f8 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8009742:	4630      	mov	r0, r6
 8009744:	f000 fa58 	bl	8009bf8 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8009748:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800974a:	4621      	mov	r1, r4
 800974c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009750:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009752:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8009756:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800975a:	f002 ffcd 	bl	800c6f8 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 800975e:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009760:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009764:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8009766:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009768:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800976c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 800976e:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009772:	f002 ffc1 	bl	800c6f8 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8009776:	f44f 730c 	mov.w	r3, #560	; 0x230
 800977a:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 800977c:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800977e:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009782:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8009784:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8009786:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009788:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800978c:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 800978e:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009790:	f002 ffb2 	bl	800c6f8 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009794:	4649      	mov	r1, r9
 8009796:	4628      	mov	r0, r5
}
 8009798:	b003      	add	sp, #12
 800979a:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800979e:	f002 bfc9 	b.w	800c734 <HAL_SDRAM_ProgramRefreshRate>
 80097a2:	bf00      	nop
 80097a4:	2000607c 	.word	0x2000607c
 80097a8:	20006168 	.word	0x20006168

080097ac <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80097ac:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80097ae:	4606      	mov	r6, r0
{
 80097b0:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80097b2:	2800      	cmp	r0, #0
 80097b4:	f000 80bd 	beq.w	8009932 <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 80097b8:	4b5f      	ldr	r3, [pc, #380]	; (8009938 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 80097ba:	4860      	ldr	r0, [pc, #384]	; (800993c <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80097bc:	4c60      	ldr	r4, [pc, #384]	; (8009940 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 80097be:	2500      	movs	r5, #0
 80097c0:	9500      	str	r5, [sp, #0]
 80097c2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80097c4:	f042 0201 	orr.w	r2, r2, #1
 80097c8:	639a      	str	r2, [r3, #56]	; 0x38
 80097ca:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80097cc:	f002 0201 	and.w	r2, r2, #1
 80097d0:	9200      	str	r2, [sp, #0]
 80097d2:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 80097d4:	9501      	str	r5, [sp, #4]
 80097d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097d8:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80097dc:	631a      	str	r2, [r3, #48]	; 0x30
 80097de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097e0:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 80097e4:	9201      	str	r2, [sp, #4]
 80097e6:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80097e8:	9502      	str	r5, [sp, #8]
 80097ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097ec:	f042 0204 	orr.w	r2, r2, #4
 80097f0:	631a      	str	r2, [r3, #48]	; 0x30
 80097f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80097f4:	f002 0204 	and.w	r2, r2, #4
 80097f8:	9202      	str	r2, [sp, #8]
 80097fa:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80097fc:	9503      	str	r5, [sp, #12]
 80097fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009800:	f042 0208 	orr.w	r2, r2, #8
 8009804:	631a      	str	r2, [r3, #48]	; 0x30
 8009806:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009808:	f002 0208 	and.w	r2, r2, #8
 800980c:	9203      	str	r2, [sp, #12]
 800980e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8009810:	9504      	str	r5, [sp, #16]
 8009812:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009814:	f042 0210 	orr.w	r2, r2, #16
 8009818:	631a      	str	r2, [r3, #48]	; 0x30
 800981a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800981c:	f002 0210 	and.w	r2, r2, #16
 8009820:	9204      	str	r2, [sp, #16]
 8009822:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8009824:	9505      	str	r5, [sp, #20]
 8009826:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009828:	f042 0220 	orr.w	r2, r2, #32
 800982c:	631a      	str	r2, [r3, #48]	; 0x30
 800982e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009830:	f002 0220 	and.w	r2, r2, #32
 8009834:	9205      	str	r2, [sp, #20]
 8009836:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8009838:	9506      	str	r5, [sp, #24]
 800983a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800983c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009840:	631a      	str	r2, [r3, #48]	; 0x30
 8009842:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009844:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8009848:	9206      	str	r2, [sp, #24]
 800984a:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 800984c:	9507      	str	r5, [sp, #28]
 800984e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009850:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009854:	631a      	str	r2, [r3, #48]	; 0x30
 8009856:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009858:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800985c:	9207      	str	r2, [sp, #28]
 800985e:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009860:	9508      	str	r5, [sp, #32]
 8009862:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009864:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009868:	631a      	str	r2, [r3, #48]	; 0x30
 800986a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800986c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009870:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009872:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009874:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8009876:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009878:	2301      	movs	r3, #1
 800987a:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800987e:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009880:	220c      	movs	r2, #12
 8009882:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8009884:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009886:	f001 f813 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 800988a:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800988e:	482d      	ldr	r0, [pc, #180]	; (8009944 <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009890:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009892:	a909      	add	r1, sp, #36	; 0x24
 8009894:	f001 f80c 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009898:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 800989c:	482a      	ldr	r0, [pc, #168]	; (8009948 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 800989e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 80098a0:	a909      	add	r1, sp, #36	; 0x24
 80098a2:	f001 f805 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80098a6:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80098aa:	4828      	ldr	r0, [pc, #160]	; (800994c <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 80098ac:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 80098ae:	a909      	add	r1, sp, #36	; 0x24
 80098b0:	f000 fffe 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80098b4:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80098b8:	4825      	ldr	r0, [pc, #148]	; (8009950 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 80098ba:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 80098bc:	a909      	add	r1, sp, #36	; 0x24
 80098be:	f000 fff7 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80098c2:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80098c6:	4823      	ldr	r0, [pc, #140]	; (8009954 <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 80098c8:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 80098ca:	a909      	add	r1, sp, #36	; 0x24
 80098cc:	f000 fff0 	bl	800a8b0 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80098d0:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80098d4:	4820      	ldr	r0, [pc, #128]	; (8009958 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 80098d6:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 80098d8:	a909      	add	r1, sp, #36	; 0x24
 80098da:	f000 ffe9 	bl	800a8b0 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 80098de:	2280      	movs	r2, #128	; 0x80
 80098e0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80098e4:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80098e8:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80098ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80098f0:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80098f4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80098f8:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80098fc:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8009900:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009904:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8009906:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 800990a:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800990c:	4b13      	ldr	r3, [pc, #76]	; (800995c <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800990e:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8009910:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009912:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009914:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009916:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8009918:	f000 fa8e 	bl	8009e38 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 800991c:	4620      	mov	r0, r4
 800991e:	f000 fa0b 	bl	8009d38 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8009922:	2038      	movs	r0, #56	; 0x38
 8009924:	462a      	mov	r2, r5
 8009926:	2105      	movs	r1, #5
 8009928:	f000 f98c 	bl	8009c44 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 800992c:	2038      	movs	r0, #56	; 0x38
 800992e:	f000 f9bb 	bl	8009ca8 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009932:	b00e      	add	sp, #56	; 0x38
 8009934:	bd70      	pop	{r4, r5, r6, pc}
 8009936:	bf00      	nop
 8009938:	40023800 	.word	0x40023800
 800993c:	40020800 	.word	0x40020800
 8009940:	20006108 	.word	0x20006108
 8009944:	40020c00 	.word	0x40020c00
 8009948:	40021000 	.word	0x40021000
 800994c:	40021400 	.word	0x40021400
 8009950:	40021800 	.word	0x40021800
 8009954:	40021c00 	.word	0x40021c00
 8009958:	40022000 	.word	0x40022000
 800995c:	40026410 	.word	0x40026410

08009960 <BSP_SDRAM_Init>:
{
 8009960:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009962:	4c19      	ldr	r4, [pc, #100]	; (80099c8 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8009964:	4d19      	ldr	r5, [pc, #100]	; (80099cc <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009966:	4b1a      	ldr	r3, [pc, #104]	; (80099d0 <BSP_SDRAM_Init+0x70>)
 8009968:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 800996a:	2107      	movs	r1, #7
 800996c:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 800996e:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8009970:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8009974:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8009978:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 800997c:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 800997e:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8009980:	2340      	movs	r3, #64	; 0x40
 8009982:	2220      	movs	r2, #32
 8009984:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8009988:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 800998a:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800998e:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8009992:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8009996:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800999a:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800999e:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 80099a0:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 80099a4:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 80099a6:	f7ff ff01 	bl	80097ac <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 80099aa:	4629      	mov	r1, r5
 80099ac:	4620      	mov	r0, r4
 80099ae:	f002 fe75 	bl	800c69c <HAL_SDRAM_Init>
 80099b2:	4c08      	ldr	r4, [pc, #32]	; (80099d4 <BSP_SDRAM_Init+0x74>)
 80099b4:	3800      	subs	r0, #0
 80099b6:	bf18      	it	ne
 80099b8:	2001      	movne	r0, #1
 80099ba:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 80099bc:	f240 5069 	movw	r0, #1385	; 0x569
 80099c0:	f7ff feaa 	bl	8009718 <BSP_SDRAM_Initialization_sequence>
}
 80099c4:	7820      	ldrb	r0, [r4, #0]
 80099c6:	bd38      	pop	{r3, r4, r5, pc}
 80099c8:	20006168 	.word	0x20006168
 80099cc:	2000608c 	.word	0x2000608c
 80099d0:	a0000140 	.word	0xa0000140
 80099d4:	2000004d 	.word	0x2000004d

080099d8 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 80099d8:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 80099da:	b148      	cbz	r0, 80099f0 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 80099dc:	2038      	movs	r0, #56	; 0x38
 80099de:	f000 f971 	bl	8009cc4 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 80099e2:	4804      	ldr	r0, [pc, #16]	; (80099f4 <BSP_SDRAM_MspDeInit+0x1c>)
 80099e4:	4b04      	ldr	r3, [pc, #16]	; (80099f8 <BSP_SDRAM_MspDeInit+0x20>)
 80099e6:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80099e8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80099ec:	f000 ba24 	b.w	8009e38 <HAL_DMA_DeInit>
}
 80099f0:	bd08      	pop	{r3, pc}
 80099f2:	bf00      	nop
 80099f4:	200060a8 	.word	0x200060a8
 80099f8:	40026410 	.word	0x40026410

080099fc <BSP_SDRAM_DeInit>:
{
 80099fc:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80099fe:	4c07      	ldr	r4, [pc, #28]	; (8009a1c <BSP_SDRAM_DeInit+0x20>)
 8009a00:	4b07      	ldr	r3, [pc, #28]	; (8009a20 <BSP_SDRAM_DeInit+0x24>)
 8009a02:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8009a04:	4620      	mov	r0, r4
 8009a06:	f002 fe69 	bl	800c6dc <HAL_SDRAM_DeInit>
 8009a0a:	4d06      	ldr	r5, [pc, #24]	; (8009a24 <BSP_SDRAM_DeInit+0x28>)
 8009a0c:	4601      	mov	r1, r0
 8009a0e:	b918      	cbnz	r0, 8009a18 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8009a10:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8009a12:	4620      	mov	r0, r4
 8009a14:	f7ff ffe0 	bl	80099d8 <BSP_SDRAM_MspDeInit>
}
 8009a18:	7828      	ldrb	r0, [r5, #0]
 8009a1a:	bd38      	pop	{r3, r4, r5, pc}
 8009a1c:	20006168 	.word	0x20006168
 8009a20:	a0000140 	.word	0xa0000140
 8009a24:	2000004c 	.word	0x2000004c

08009a28 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8009a28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8009a2c:	4d16      	ldr	r5, [pc, #88]	; (8009a88 <BSP_TS_Init+0x60>)
 8009a2e:	4c17      	ldr	r4, [pc, #92]	; (8009a8c <BSP_TS_Init+0x64>)
 8009a30:	682b      	ldr	r3, [r5, #0]
{
 8009a32:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8009a34:	7820      	ldrb	r0, [r4, #0]
{
 8009a36:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8009a38:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8009a3a:	686b      	ldr	r3, [r5, #4]
 8009a3c:	2054      	movs	r0, #84	; 0x54
 8009a3e:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8009a40:	b2c0      	uxtb	r0, r0
 8009a42:	2811      	cmp	r0, #17
 8009a44:	d00a      	beq.n	8009a5c <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8009a46:	686b      	ldr	r3, [r5, #4]
 8009a48:	2070      	movs	r0, #112	; 0x70
 8009a4a:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009a4c:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009a4e:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009a50:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009a52:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009a54:	d004      	beq.n	8009a60 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8009a56:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8009a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8009a5c:	2354      	movs	r3, #84	; 0x54
 8009a5e:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009a60:	4b0b      	ldr	r3, [pc, #44]	; (8009a90 <BSP_TS_Init+0x68>)
 8009a62:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8009a94 <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8009a66:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009a68:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8009a6c:	42be      	cmp	r6, r7
 8009a6e:	bf34      	ite	cc
 8009a70:	2601      	movcc	r6, #1
 8009a72:	260c      	movcs	r6, #12
 8009a74:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8009a76:	68ab      	ldr	r3, [r5, #8]
 8009a78:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8009a7a:	f8d8 3000 	ldr.w	r3, [r8]
 8009a7e:	7820      	ldrb	r0, [r4, #0]
 8009a80:	68db      	ldr	r3, [r3, #12]
 8009a82:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8009a84:	2000      	movs	r0, #0
 8009a86:	e7e7      	b.n	8009a58 <BSP_TS_Init+0x30>
 8009a88:	20000020 	.word	0x20000020
 8009a8c:	2000619c 	.word	0x2000619c
 8009a90:	200061b4 	.word	0x200061b4
 8009a94:	200061b0 	.word	0x200061b0

08009a98 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8009a98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009a9c:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8009b7c <BSP_TS_GetState+0xe4>
 8009aa0:	4a33      	ldr	r2, [pc, #204]	; (8009b70 <BSP_TS_GetState+0xd8>)
 8009aa2:	f8db 3000 	ldr.w	r3, [fp]
{
 8009aa6:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009aa8:	691b      	ldr	r3, [r3, #16]
 8009aaa:	7810      	ldrb	r0, [r2, #0]
{
 8009aac:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009aae:	4798      	blx	r3
 8009ab0:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8009ab2:	b158      	cbz	r0, 8009acc <BSP_TS_GetState+0x34>
 8009ab4:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8009b80 <BSP_TS_GetState+0xe8>
 8009ab8:	4f2e      	ldr	r7, [pc, #184]	; (8009b74 <BSP_TS_GetState+0xdc>)
 8009aba:	f106 0a02 	add.w	sl, r6, #2
 8009abe:	ad03      	add	r5, sp, #12
 8009ac0:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8009ac2:	f04f 0900 	mov.w	r9, #0
 8009ac6:	7833      	ldrb	r3, [r6, #0]
 8009ac8:	454b      	cmp	r3, r9
 8009aca:	d803      	bhi.n	8009ad4 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8009acc:	2000      	movs	r0, #0
 8009ace:	b005      	add	sp, #20
 8009ad0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8009ad4:	f8db 3000 	ldr.w	r3, [fp]
 8009ad8:	4825      	ldr	r0, [pc, #148]	; (8009b70 <BSP_TS_GetState+0xd8>)
 8009ada:	695b      	ldr	r3, [r3, #20]
 8009adc:	7800      	ldrb	r0, [r0, #0]
 8009ade:	9101      	str	r1, [sp, #4]
 8009ae0:	462a      	mov	r2, r5
 8009ae2:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8009ae4:	4b24      	ldr	r3, [pc, #144]	; (8009b78 <BSP_TS_GetState+0xe0>)
 8009ae6:	9901      	ldr	r1, [sp, #4]
 8009ae8:	781b      	ldrb	r3, [r3, #0]
 8009aea:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8009aee:	bf1f      	itttt	ne
 8009af0:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8009af2:	8828      	ldrhne	r0, [r5, #0]
 8009af4:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8009af6:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8009af8:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8009afa:	bf41      	itttt	mi
 8009afc:	880a      	ldrhmi	r2, [r1, #0]
 8009afe:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8009b02:	3203      	addmi	r2, #3
 8009b04:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8009b06:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009b08:	bf48      	it	mi
 8009b0a:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009b0c:	f8d8 2000 	ldr.w	r2, [r8]
 8009b10:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009b14:	bf42      	ittt	mi
 8009b16:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8009b1a:	3301      	addmi	r3, #1
 8009b1c:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009b1e:	b293      	uxth	r3, r2
 8009b20:	4290      	cmp	r0, r2
 8009b22:	bf8c      	ite	hi
 8009b24:	1ac3      	subhi	r3, r0, r3
 8009b26:	1a1b      	subls	r3, r3, r0
 8009b28:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009b2a:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009b2e:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009b30:	683b      	ldr	r3, [r7, #0]
 8009b32:	b29c      	uxth	r4, r3
 8009b34:	429a      	cmp	r2, r3
 8009b36:	bf88      	it	hi
 8009b38:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8009b3a:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009b3c:	bf98      	it	ls
 8009b3e:	1aa4      	subls	r4, r4, r2
 8009b40:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8009b42:	441c      	add	r4, r3
 8009b44:	46c4      	mov	ip, r8
 8009b46:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8009b48:	bfc8      	it	gt
 8009b4a:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8009b4e:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8009b52:	bfc8      	it	gt
 8009b54:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8009b56:	46be      	mov	lr, r7
 8009b58:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8009b5c:	f8de 3000 	ldr.w	r3, [lr]
 8009b60:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8009b64:	f108 0804 	add.w	r8, r8, #4
 8009b68:	3704      	adds	r7, #4
 8009b6a:	f109 0901 	add.w	r9, r9, #1
 8009b6e:	e7aa      	b.n	8009ac6 <BSP_TS_GetState+0x2e>
 8009b70:	2000619c 	.word	0x2000619c
 8009b74:	200061a8 	.word	0x200061a8
 8009b78:	200061b4 	.word	0x200061b4
 8009b7c:	200061b0 	.word	0x200061b0
 8009b80:	200061a0 	.word	0x200061a0

08009b84 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009b84:	4b05      	ldr	r3, [pc, #20]	; (8009b9c <SystemInit+0x18>)
 8009b86:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009b8a:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009b8e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009b92:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8009b96:	609a      	str	r2, [r3, #8]
#endif
}
 8009b98:	4770      	bx	lr
 8009b9a:	bf00      	nop
 8009b9c:	e000ed00 	.word	0xe000ed00

08009ba0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009ba0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009ba2:	4b0b      	ldr	r3, [pc, #44]	; (8009bd0 <HAL_Init+0x30>)
 8009ba4:	681a      	ldr	r2, [r3, #0]
 8009ba6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009baa:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009bac:	681a      	ldr	r2, [r3, #0]
 8009bae:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009bb2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009bb4:	681a      	ldr	r2, [r3, #0]
 8009bb6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009bba:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009bbc:	2003      	movs	r0, #3
 8009bbe:	f000 f82f 	bl	8009c20 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009bc2:	2000      	movs	r0, #0
 8009bc4:	f7f8 fd44 	bl	8002650 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009bc8:	f7f8 fa9a 	bl	8002100 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009bcc:	2000      	movs	r0, #0
 8009bce:	bd08      	pop	{r3, pc}
 8009bd0:	40023c00 	.word	0x40023c00

08009bd4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009bd4:	4a03      	ldr	r2, [pc, #12]	; (8009be4 <HAL_IncTick+0x10>)
 8009bd6:	4b04      	ldr	r3, [pc, #16]	; (8009be8 <HAL_IncTick+0x14>)
 8009bd8:	6811      	ldr	r1, [r2, #0]
 8009bda:	781b      	ldrb	r3, [r3, #0]
 8009bdc:	440b      	add	r3, r1
 8009bde:	6013      	str	r3, [r2, #0]
}
 8009be0:	4770      	bx	lr
 8009be2:	bf00      	nop
 8009be4:	200061b8 	.word	0x200061b8
 8009be8:	20000054 	.word	0x20000054

08009bec <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009bec:	4b01      	ldr	r3, [pc, #4]	; (8009bf4 <HAL_GetTick+0x8>)
 8009bee:	6818      	ldr	r0, [r3, #0]
}
 8009bf0:	4770      	bx	lr
 8009bf2:	bf00      	nop
 8009bf4:	200061b8 	.word	0x200061b8

08009bf8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009bf8:	b538      	push	{r3, r4, r5, lr}
 8009bfa:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009bfc:	f7ff fff6 	bl	8009bec <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009c00:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8009c02:	bf1c      	itt	ne
 8009c04:	4b05      	ldrne	r3, [pc, #20]	; (8009c1c <HAL_Delay+0x24>)
 8009c06:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8009c08:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8009c0a:	bf18      	it	ne
 8009c0c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009c0e:	f7ff ffed 	bl	8009bec <HAL_GetTick>
 8009c12:	1b43      	subs	r3, r0, r5
 8009c14:	42a3      	cmp	r3, r4
 8009c16:	d3fa      	bcc.n	8009c0e <HAL_Delay+0x16>
  {
  }
}
 8009c18:	bd38      	pop	{r3, r4, r5, pc}
 8009c1a:	bf00      	nop
 8009c1c:	20000054 	.word	0x20000054

08009c20 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009c20:	4907      	ldr	r1, [pc, #28]	; (8009c40 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009c22:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009c24:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009c28:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009c2a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009c2c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009c30:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009c32:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009c34:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009c38:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009c3c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009c3e:	4770      	bx	lr
 8009c40:	e000ed00 	.word	0xe000ed00

08009c44 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009c44:	4b16      	ldr	r3, [pc, #88]	; (8009ca0 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009c46:	b530      	push	{r4, r5, lr}
 8009c48:	68dc      	ldr	r4, [r3, #12]
 8009c4a:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009c4e:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009c52:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009c54:	2d04      	cmp	r5, #4
 8009c56:	bf28      	it	cs
 8009c58:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009c5a:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c5c:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009c60:	bf8c      	ite	hi
 8009c62:	3c03      	subhi	r4, #3
 8009c64:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c66:	fa03 f505 	lsl.w	r5, r3, r5
 8009c6a:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009c6e:	40a3      	lsls	r3, r4
 8009c70:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c74:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8009c76:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009c78:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c7c:	bfac      	ite	ge
 8009c7e:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c82:	4a08      	ldrlt	r2, [pc, #32]	; (8009ca4 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c84:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c88:	bfb8      	it	lt
 8009c8a:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c8e:	b2db      	uxtb	r3, r3
 8009c90:	bfaa      	itet	ge
 8009c92:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c96:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009c98:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009c9c:	bd30      	pop	{r4, r5, pc}
 8009c9e:	bf00      	nop
 8009ca0:	e000ed00 	.word	0xe000ed00
 8009ca4:	e000ed14 	.word	0xe000ed14

08009ca8 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009ca8:	2800      	cmp	r0, #0
 8009caa:	db08      	blt.n	8009cbe <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009cac:	0942      	lsrs	r2, r0, #5
 8009cae:	2301      	movs	r3, #1
 8009cb0:	f000 001f 	and.w	r0, r0, #31
 8009cb4:	fa03 f000 	lsl.w	r0, r3, r0
 8009cb8:	4b01      	ldr	r3, [pc, #4]	; (8009cc0 <HAL_NVIC_EnableIRQ+0x18>)
 8009cba:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009cbe:	4770      	bx	lr
 8009cc0:	e000e100 	.word	0xe000e100

08009cc4 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009cc4:	2800      	cmp	r0, #0
 8009cc6:	db0d      	blt.n	8009ce4 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009cc8:	0943      	lsrs	r3, r0, #5
 8009cca:	2201      	movs	r2, #1
 8009ccc:	f000 001f 	and.w	r0, r0, #31
 8009cd0:	fa02 f000 	lsl.w	r0, r2, r0
 8009cd4:	3320      	adds	r3, #32
 8009cd6:	4a04      	ldr	r2, [pc, #16]	; (8009ce8 <HAL_NVIC_DisableIRQ+0x24>)
 8009cd8:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8009cdc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8009ce0:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8009ce4:	4770      	bx	lr
 8009ce6:	bf00      	nop
 8009ce8:	e000e100 	.word	0xe000e100

08009cec <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8009cec:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009cee:	4604      	mov	r4, r0
 8009cf0:	b150      	cbz	r0, 8009d08 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009cf2:	7943      	ldrb	r3, [r0, #5]
 8009cf4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009cf8:	b913      	cbnz	r3, 8009d00 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8009cfa:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8009cfc:	f7f8 fa20 	bl	8002140 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009d00:	2301      	movs	r3, #1
 8009d02:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009d04:	2000      	movs	r0, #0
}
 8009d06:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009d08:	2001      	movs	r0, #1
 8009d0a:	e7fc      	b.n	8009d06 <HAL_CRC_Init+0x1a>

08009d0c <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009d0c:	6803      	ldr	r3, [r0, #0]
{
 8009d0e:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009d10:	4c08      	ldr	r4, [pc, #32]	; (8009d34 <DMA_CalcBaseAndBitshift+0x28>)
{
 8009d12:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009d14:	b2d9      	uxtb	r1, r3
 8009d16:	3910      	subs	r1, #16
 8009d18:	2018      	movs	r0, #24
 8009d1a:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009d1e:	5c20      	ldrb	r0, [r4, r0]
 8009d20:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009d22:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8009d26:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8009d2a:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009d2c:	bf88      	it	hi
 8009d2e:	3004      	addhi	r0, #4
 8009d30:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8009d32:	bd10      	pop	{r4, pc}
 8009d34:	0802998d 	.word	0x0802998d

08009d38 <HAL_DMA_Init>:
{
 8009d38:	b570      	push	{r4, r5, r6, lr}
 8009d3a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009d3c:	f7ff ff56 	bl	8009bec <HAL_GetTick>
 8009d40:	4605      	mov	r5, r0
  if(hdma == NULL)
 8009d42:	2c00      	cmp	r4, #0
 8009d44:	d073      	beq.n	8009e2e <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8009d46:	2302      	movs	r3, #2
 8009d48:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 8009d4c:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 8009d4e:	2300      	movs	r3, #0
 8009d50:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8009d54:	6813      	ldr	r3, [r2, #0]
 8009d56:	f023 0301 	bic.w	r3, r3, #1
 8009d5a:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009d5c:	6821      	ldr	r1, [r4, #0]
 8009d5e:	680b      	ldr	r3, [r1, #0]
 8009d60:	07d8      	lsls	r0, r3, #31
 8009d62:	d42f      	bmi.n	8009dc4 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8009d64:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009d66:	4d33      	ldr	r5, [pc, #204]	; (8009e34 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009d68:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8009d6a:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009d6c:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 8009d70:	4313      	orrs	r3, r2
 8009d72:	68e2      	ldr	r2, [r4, #12]
 8009d74:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8009d76:	6922      	ldr	r2, [r4, #16]
 8009d78:	4313      	orrs	r3, r2
 8009d7a:	6962      	ldr	r2, [r4, #20]
 8009d7c:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8009d7e:	69e2      	ldr	r2, [r4, #28]
 8009d80:	4303      	orrs	r3, r0
 8009d82:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8009d84:	6a22      	ldr	r2, [r4, #32]
 8009d86:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009d88:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8009d8a:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8009d8c:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8009d90:	bf02      	ittt	eq
 8009d92:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8009d96:	4335      	orreq	r5, r6
 8009d98:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8009d9a:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8009d9c:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009d9e:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8009da0:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8009da4:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8009da8:	d133      	bne.n	8009e12 <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8009daa:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8009dac:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8009dae:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8009db0:	b37d      	cbz	r5, 8009e12 <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8009db2:	b990      	cbnz	r0, 8009dda <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8009db4:	2a01      	cmp	r2, #1
 8009db6:	d021      	beq.n	8009dfc <HAL_DMA_Init+0xc4>
 8009db8:	f032 0202 	bics.w	r2, r2, #2
 8009dbc:	d129      	bne.n	8009e12 <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8009dbe:	01ea      	lsls	r2, r5, #7
 8009dc0:	d527      	bpl.n	8009e12 <HAL_DMA_Init+0xda>
 8009dc2:	e01e      	b.n	8009e02 <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009dc4:	f7ff ff12 	bl	8009bec <HAL_GetTick>
 8009dc8:	1b40      	subs	r0, r0, r5
 8009dca:	2805      	cmp	r0, #5
 8009dcc:	d9c6      	bls.n	8009d5c <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8009dce:	2320      	movs	r3, #32
 8009dd0:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009dd2:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8009dd4:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8009dd8:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8009dda:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8009dde:	d114      	bne.n	8009e0a <HAL_DMA_Init+0xd2>
    switch (tmp)
 8009de0:	2a03      	cmp	r2, #3
 8009de2:	d816      	bhi.n	8009e12 <HAL_DMA_Init+0xda>
 8009de4:	a001      	add	r0, pc, #4	; (adr r0, 8009dec <HAL_DMA_Init+0xb4>)
 8009de6:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8009dea:	bf00      	nop
 8009dec:	08009e03 	.word	0x08009e03
 8009df0:	08009dbf 	.word	0x08009dbf
 8009df4:	08009e03 	.word	0x08009e03
 8009df8:	08009dfd 	.word	0x08009dfd
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8009dfc:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8009e00:	d107      	bne.n	8009e12 <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8009e02:	2340      	movs	r3, #64	; 0x40
 8009e04:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 8009e06:	2001      	movs	r0, #1
 8009e08:	e7e4      	b.n	8009dd4 <HAL_DMA_Init+0x9c>
    switch (tmp)
 8009e0a:	2a02      	cmp	r2, #2
 8009e0c:	d9f9      	bls.n	8009e02 <HAL_DMA_Init+0xca>
 8009e0e:	2a03      	cmp	r2, #3
 8009e10:	d0d5      	beq.n	8009dbe <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 8009e12:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8009e14:	4620      	mov	r0, r4
 8009e16:	f7ff ff79 	bl	8009d0c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e1a:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8009e1c:	233f      	movs	r3, #63	; 0x3f
 8009e1e:	4093      	lsls	r3, r2
 8009e20:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009e22:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 8009e24:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009e26:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 8009e28:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 8009e2c:	e7d4      	b.n	8009dd8 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 8009e2e:	2001      	movs	r0, #1
 8009e30:	e7d2      	b.n	8009dd8 <HAL_DMA_Init+0xa0>
 8009e32:	bf00      	nop
 8009e34:	f010803f 	.word	0xf010803f

08009e38 <HAL_DMA_DeInit>:
{
 8009e38:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 8009e3a:	4605      	mov	r5, r0
 8009e3c:	b320      	cbz	r0, 8009e88 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 8009e3e:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8009e42:	2b02      	cmp	r3, #2
 8009e44:	b2dc      	uxtb	r4, r3
 8009e46:	d01d      	beq.n	8009e84 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 8009e48:	6803      	ldr	r3, [r0, #0]
 8009e4a:	681a      	ldr	r2, [r3, #0]
 8009e4c:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 8009e50:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 8009e52:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8009e54:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8009e56:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8009e58:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8009e5a:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8009e5c:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8009e5e:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8009e60:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8009e62:	f7ff ff53 	bl	8009d0c <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e66:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8009e68:	233f      	movs	r3, #63	; 0x3f
 8009e6a:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8009e6c:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8009e70:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8009e74:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009e78:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8009e7a:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8009e7c:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8009e80:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8009e84:	4620      	mov	r0, r4
 8009e86:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8009e88:	2401      	movs	r4, #1
 8009e8a:	e7fb      	b.n	8009e84 <HAL_DMA_DeInit+0x4c>

08009e8c <HAL_DMA_Abort>:
{
 8009e8c:	b570      	push	{r4, r5, r6, lr}
 8009e8e:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8009e90:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8009e92:	f7ff feab 	bl	8009bec <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009e96:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8009e9a:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8009e9c:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8009e9e:	d006      	beq.n	8009eae <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8009ea0:	2380      	movs	r3, #128	; 0x80
 8009ea2:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8009ea4:	2300      	movs	r3, #0
 8009ea6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8009eaa:	2001      	movs	r0, #1
}
 8009eac:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8009eae:	6823      	ldr	r3, [r4, #0]
 8009eb0:	681a      	ldr	r2, [r3, #0]
 8009eb2:	f022 0216 	bic.w	r2, r2, #22
 8009eb6:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8009eb8:	695a      	ldr	r2, [r3, #20]
 8009eba:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009ebe:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8009ec0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009ec2:	b90a      	cbnz	r2, 8009ec8 <HAL_DMA_Abort+0x3c>
 8009ec4:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8009ec6:	b11a      	cbz	r2, 8009ed0 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8009ec8:	681a      	ldr	r2, [r3, #0]
 8009eca:	f022 0208 	bic.w	r2, r2, #8
 8009ece:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8009ed0:	681a      	ldr	r2, [r3, #0]
 8009ed2:	f022 0201 	bic.w	r2, r2, #1
 8009ed6:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8009ed8:	6823      	ldr	r3, [r4, #0]
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	f013 0301 	ands.w	r3, r3, #1
 8009ee0:	d10a      	bne.n	8009ef8 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8009ee2:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8009ee4:	223f      	movs	r2, #63	; 0x3f
 8009ee6:	408a      	lsls	r2, r1
 8009ee8:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8009eea:	2201      	movs	r2, #1
 8009eec:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8009ef0:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8009ef4:	4618      	mov	r0, r3
 8009ef6:	e7d9      	b.n	8009eac <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8009ef8:	f7ff fe78 	bl	8009bec <HAL_GetTick>
 8009efc:	1b40      	subs	r0, r0, r5
 8009efe:	2805      	cmp	r0, #5
 8009f00:	d9ea      	bls.n	8009ed8 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8009f02:	2320      	movs	r3, #32
 8009f04:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009f06:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8009f08:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8009f0a:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8009f0e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8009f12:	e7cb      	b.n	8009eac <HAL_DMA_Abort+0x20>

08009f14 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8009f14:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8009f16:	4604      	mov	r4, r0
 8009f18:	b330      	cbz	r0, 8009f68 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8009f1a:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8009f1e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009f22:	b91b      	cbnz	r3, 8009f2c <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8009f24:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8009f28:	f7f8 f922 	bl	8002170 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009f2c:	6822      	ldr	r2, [r4, #0]
 8009f2e:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8009f30:	2302      	movs	r3, #2
 8009f32:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8009f36:	6813      	ldr	r3, [r2, #0]
 8009f38:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8009f3c:	430b      	orrs	r3, r1
 8009f3e:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8009f40:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8009f42:	68a1      	ldr	r1, [r4, #8]
 8009f44:	f023 0307 	bic.w	r3, r3, #7
 8009f48:	430b      	orrs	r3, r1
 8009f4a:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8009f4c:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8009f4e:	68e1      	ldr	r1, [r4, #12]
 8009f50:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8009f54:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8009f58:	430b      	orrs	r3, r1
 8009f5a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009f5c:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009f5e:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8009f60:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8009f62:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8009f66:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009f68:	2001      	movs	r0, #1
 8009f6a:	e7fc      	b.n	8009f66 <HAL_DMA2D_Init+0x52>

08009f6c <HAL_DMA2D_LineEventCallback>:
 8009f6c:	4770      	bx	lr

08009f6e <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8009f6e:	4770      	bx	lr

08009f70 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8009f70:	6803      	ldr	r3, [r0, #0]
{
 8009f72:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8009f74:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8009f76:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009f78:	07f2      	lsls	r2, r6, #31
{
 8009f7a:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8009f7c:	d514      	bpl.n	8009fa8 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8009f7e:	05e9      	lsls	r1, r5, #23
 8009f80:	d512      	bpl.n	8009fa8 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8009f82:	681a      	ldr	r2, [r3, #0]
 8009f84:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009f88:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8009f8a:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8009f8c:	f042 0201 	orr.w	r2, r2, #1
 8009f90:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8009f92:	2201      	movs	r2, #1
 8009f94:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009f96:	2304      	movs	r3, #4
 8009f98:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009f9c:	2300      	movs	r3, #0
 8009f9e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8009fa2:	6943      	ldr	r3, [r0, #20]
 8009fa4:	b103      	cbz	r3, 8009fa8 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8009fa6:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8009fa8:	06b2      	lsls	r2, r6, #26
 8009faa:	d516      	bpl.n	8009fda <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8009fac:	04ab      	lsls	r3, r5, #18
 8009fae:	d514      	bpl.n	8009fda <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8009fb0:	6823      	ldr	r3, [r4, #0]
 8009fb2:	681a      	ldr	r2, [r3, #0]
 8009fb4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8009fb8:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8009fba:	2220      	movs	r2, #32
 8009fbc:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8009fbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009fc0:	f043 0302 	orr.w	r3, r3, #2
 8009fc4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009fc6:	2304      	movs	r3, #4
 8009fc8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009fcc:	2300      	movs	r3, #0
 8009fce:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8009fd2:	6963      	ldr	r3, [r4, #20]
 8009fd4:	b10b      	cbz	r3, 8009fda <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8009fd6:	4620      	mov	r0, r4
 8009fd8:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8009fda:	0730      	lsls	r0, r6, #28
 8009fdc:	d516      	bpl.n	800a00c <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8009fde:	0529      	lsls	r1, r5, #20
 8009fe0:	d514      	bpl.n	800a00c <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8009fe2:	6823      	ldr	r3, [r4, #0]
 8009fe4:	681a      	ldr	r2, [r3, #0]
 8009fe6:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8009fea:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8009fec:	2208      	movs	r2, #8
 8009fee:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8009ff0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009ff2:	f043 0304 	orr.w	r3, r3, #4
 8009ff6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8009ff8:	2304      	movs	r3, #4
 8009ffa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8009ffe:	2300      	movs	r3, #0
 800a000:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a004:	6963      	ldr	r3, [r4, #20]
 800a006:	b10b      	cbz	r3, 800a00c <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a008:	4620      	mov	r0, r4
 800a00a:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800a00c:	0772      	lsls	r2, r6, #29
 800a00e:	d50b      	bpl.n	800a028 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800a010:	056b      	lsls	r3, r5, #21
 800a012:	d509      	bpl.n	800a028 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800a014:	6823      	ldr	r3, [r4, #0]
 800a016:	681a      	ldr	r2, [r3, #0]
 800a018:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a01c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800a01e:	2204      	movs	r2, #4
 800a020:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800a022:	4620      	mov	r0, r4
 800a024:	f7ff ffa2 	bl	8009f6c <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800a028:	07b0      	lsls	r0, r6, #30
 800a02a:	d514      	bpl.n	800a056 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800a02c:	05a9      	lsls	r1, r5, #22
 800a02e:	d512      	bpl.n	800a056 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800a030:	6823      	ldr	r3, [r4, #0]
 800a032:	681a      	ldr	r2, [r3, #0]
 800a034:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a038:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800a03a:	2202      	movs	r2, #2
 800a03c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a03e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a040:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a042:	2301      	movs	r3, #1
 800a044:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a048:	2300      	movs	r3, #0
 800a04a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800a04e:	6923      	ldr	r3, [r4, #16]
 800a050:	b10b      	cbz	r3, 800a056 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800a052:	4620      	mov	r0, r4
 800a054:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800a056:	06f2      	lsls	r2, r6, #27
 800a058:	d513      	bpl.n	800a082 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800a05a:	04eb      	lsls	r3, r5, #19
 800a05c:	d511      	bpl.n	800a082 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800a05e:	6823      	ldr	r3, [r4, #0]
 800a060:	681a      	ldr	r2, [r3, #0]
 800a062:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a066:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a068:	2210      	movs	r2, #16
 800a06a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a06c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a06e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a070:	2301      	movs	r3, #1
 800a072:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a076:	2300      	movs	r3, #0
 800a078:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a07c:	4620      	mov	r0, r4
 800a07e:	f7ff ff76 	bl	8009f6e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800a082:	bd70      	pop	{r4, r5, r6, pc}

0800a084 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a084:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a086:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800a08a:	2b01      	cmp	r3, #1
 800a08c:	f04f 0302 	mov.w	r3, #2
 800a090:	d02b      	beq.n	800a0ea <HAL_DMA2D_ConfigLayer+0x66>
 800a092:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a094:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800a098:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a09c:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800a0a0:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800a0a4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800a0a6:	4f18      	ldr	r7, [pc, #96]	; (800a108 <HAL_DMA2D_ConfigLayer+0x84>)
 800a0a8:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a0ac:	3c09      	subs	r4, #9
 800a0ae:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a0b0:	bf9c      	itt	ls
 800a0b2:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800a0b6:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a0b8:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a0bc:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a0be:	bf88      	it	hi
 800a0c0:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a0c4:	b999      	cbnz	r1, 800a0ee <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a0c6:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a0c8:	4039      	ands	r1, r7
 800a0ca:	430a      	orrs	r2, r1
 800a0cc:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a0ce:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a0d0:	6982      	ldr	r2, [r0, #24]
 800a0d2:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a0d4:	d803      	bhi.n	800a0de <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a0d6:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a0d8:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800a0dc:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a0de:	2301      	movs	r3, #1
 800a0e0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a0e4:	2300      	movs	r3, #0
 800a0e6:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800a0ea:	4618      	mov	r0, r3

  return HAL_OK;
}
 800a0ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a0ee:	69d9      	ldr	r1, [r3, #28]
 800a0f0:	4039      	ands	r1, r7
 800a0f2:	430a      	orrs	r2, r1
 800a0f4:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a0f6:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a0f8:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a0fa:	6992      	ldr	r2, [r2, #24]
 800a0fc:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a0fe:	bf9c      	itt	ls
 800a100:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800a104:	621d      	strls	r5, [r3, #32]
 800a106:	e7ea      	b.n	800a0de <HAL_DMA2D_ConfigLayer+0x5a>
 800a108:	00fcfff0 	.word	0x00fcfff0

0800a10c <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800a10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a110:	4607      	mov	r7, r0
 800a112:	460d      	mov	r5, r1
 800a114:	4614      	mov	r4, r2
 800a116:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800a118:	f7ff fd68 	bl	8009bec <HAL_GetTick>
 800a11c:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a11e:	683b      	ldr	r3, [r7, #0]
 800a120:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800a122:	07d2      	lsls	r2, r2, #31
 800a124:	d50a      	bpl.n	800a13c <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800a126:	9906      	ldr	r1, [sp, #24]
 800a128:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800a12c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800a130:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800a134:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 800a136:	2000      	movs	r0, #0
}
 800a138:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a13c:	f7ff fd56 	bl	8009bec <HAL_GetTick>
 800a140:	eba0 0008 	sub.w	r0, r0, r8
 800a144:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a148:	d9e9      	bls.n	800a11e <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800a14a:	2003      	movs	r0, #3
 800a14c:	e7f4      	b.n	800a138 <DSI_ShortWrite+0x2c>

0800a14e <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a14e:	7c03      	ldrb	r3, [r0, #16]
 800a150:	2b01      	cmp	r3, #1
 800a152:	d05d      	beq.n	800a210 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800a154:	6803      	ldr	r3, [r0, #0]
 800a156:	2200      	movs	r2, #0
 800a158:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a15c:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800a160:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a162:	bf48      	it	mi
 800a164:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800a168:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a16a:	bf42      	ittt	mi
 800a16c:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800a170:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800a174:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800a178:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800a17a:	bf42      	ittt	mi
 800a17c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800a180:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800a184:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800a188:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800a18a:	bf42      	ittt	mi
 800a18c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a190:	f042 0201 	orrmi.w	r2, r2, #1
 800a194:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800a198:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800a19a:	bf42      	ittt	mi
 800a19c:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1a0:	f042 0202 	orrmi.w	r2, r2, #2
 800a1a4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800a1a8:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800a1aa:	bf42      	ittt	mi
 800a1ac:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1b0:	f042 020c 	orrmi.w	r2, r2, #12
 800a1b4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800a1b8:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800a1ba:	bf42      	ittt	mi
 800a1bc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1c0:	f042 0210 	orrmi.w	r2, r2, #16
 800a1c4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800a1c8:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800a1ca:	bf42      	ittt	mi
 800a1cc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1d0:	f042 0220 	orrmi.w	r2, r2, #32
 800a1d4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800a1d8:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800a1da:	bf42      	ittt	mi
 800a1dc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1e0:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a1e4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800a1e8:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800a1ea:	bf42      	ittt	mi
 800a1ec:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a1f0:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a1f4:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800a1f8:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800a1fa:	bf42      	ittt	mi
 800a1fc:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a200:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800a204:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800a208:	2300      	movs	r3, #0
 800a20a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a20c:	4618      	mov	r0, r3
 800a20e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a210:	2002      	movs	r0, #2
}
 800a212:	4770      	bx	lr

0800a214 <HAL_DSI_Init>:
{
 800a214:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a216:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800a218:	4604      	mov	r4, r0
 800a21a:	2800      	cmp	r0, #0
 800a21c:	f000 80a9 	beq.w	800a372 <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800a220:	7c43      	ldrb	r3, [r0, #17]
 800a222:	b90b      	cbnz	r3, 800a228 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800a224:	f7f7 ffc6 	bl	80021b4 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800a228:	2303      	movs	r3, #3
 800a22a:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800a22c:	2300      	movs	r3, #0
 800a22e:	9300      	str	r3, [sp, #0]
 800a230:	6823      	ldr	r3, [r4, #0]
 800a232:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800a236:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800a23a:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800a23e:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800a242:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a246:	9300      	str	r3, [sp, #0]
 800a248:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800a24a:	f7ff fccf 	bl	8009bec <HAL_GetTick>
 800a24e:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800a250:	6822      	ldr	r2, [r4, #0]
 800a252:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a256:	04d9      	lsls	r1, r3, #19
 800a258:	d57a      	bpl.n	800a350 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800a25a:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a25e:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800a262:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800a266:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a26a:	e9d5 0300 	ldrd	r0, r3, [r5]
 800a26e:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a270:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800a274:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a276:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a27a:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a27e:	430b      	orrs	r3, r1
 800a280:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a284:	2300      	movs	r3, #0
 800a286:	9301      	str	r3, [sp, #4]
 800a288:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a28c:	f043 0301 	orr.w	r3, r3, #1
 800a290:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800a294:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a298:	f003 0301 	and.w	r3, r3, #1
 800a29c:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 800a29e:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a2a0:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 800a2a2:	f7ff fca9 	bl	8009bf8 <HAL_Delay>
  tickstart = HAL_GetTick();
 800a2a6:	f7ff fca1 	bl	8009bec <HAL_GetTick>
 800a2aa:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800a2ac:	6823      	ldr	r3, [r4, #0]
 800a2ae:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a2b2:	05d2      	lsls	r2, r2, #23
 800a2b4:	d556      	bpl.n	800a364 <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a2b6:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a2ba:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a2bc:	f042 0206 	orr.w	r2, r2, #6
 800a2c0:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800a2c4:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a2c8:	f022 0203 	bic.w	r2, r2, #3
 800a2cc:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a2d0:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a2d4:	430a      	orrs	r2, r1
 800a2d6:	f042 0201 	orr.w	r2, r2, #1
 800a2da:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a2de:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a2e2:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a2e4:	f022 0203 	bic.w	r2, r2, #3
 800a2e8:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a2ec:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a2f0:	430a      	orrs	r2, r1
 800a2f2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a2f6:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a2f8:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a2fa:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a2fe:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a300:	689a      	ldr	r2, [r3, #8]
 800a302:	430a      	orrs	r2, r1
 800a304:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a306:	686a      	ldr	r2, [r5, #4]
 800a308:	491b      	ldr	r1, [pc, #108]	; (800a378 <HAL_DSI_Init+0x164>)
 800a30a:	2a01      	cmp	r2, #1
 800a30c:	bf38      	it	cc
 800a30e:	2201      	movcc	r2, #1
 800a310:	434a      	muls	r2, r1
 800a312:	68a9      	ldr	r1, [r5, #8]
 800a314:	f001 0103 	and.w	r1, r1, #3
 800a318:	408a      	lsls	r2, r1
 800a31a:	6829      	ldr	r1, [r5, #0]
 800a31c:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800a320:	4341      	muls	r1, r0
 800a322:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800a326:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800a32a:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a32e:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a332:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a336:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a338:	430a      	orrs	r2, r1
 800a33a:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a33e:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a342:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800a346:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800a348:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800a34a:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800a34c:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800a34e:	e007      	b.n	800a360 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a350:	f7ff fc4c 	bl	8009bec <HAL_GetTick>
 800a354:	1b80      	subs	r0, r0, r6
 800a356:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a35a:	f67f af79 	bls.w	800a250 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800a35e:	2003      	movs	r0, #3
}
 800a360:	b002      	add	sp, #8
 800a362:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a364:	f7ff fc42 	bl	8009bec <HAL_GetTick>
 800a368:	1b80      	subs	r0, r0, r6
 800a36a:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a36e:	d99d      	bls.n	800a2ac <HAL_DSI_Init+0x98>
 800a370:	e7f5      	b.n	800a35e <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800a372:	2001      	movs	r0, #1
 800a374:	e7f4      	b.n	800a360 <HAL_DSI_Init+0x14c>
 800a376:	bf00      	nop
 800a378:	003d0900 	.word	0x003d0900

0800a37c <HAL_DSI_ErrorCallback>:
 800a37c:	4770      	bx	lr

0800a37e <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a37e:	6803      	ldr	r3, [r0, #0]
 800a380:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a384:	07d1      	lsls	r1, r2, #31
{
 800a386:	b510      	push	{r4, lr}
 800a388:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a38a:	d508      	bpl.n	800a39e <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800a38c:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a390:	07d2      	lsls	r2, r2, #31
 800a392:	d504      	bpl.n	800a39e <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800a394:	2201      	movs	r2, #1
 800a396:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800a39a:	f7f6 fe33 	bl	8001004 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800a39e:	6823      	ldr	r3, [r4, #0]
 800a3a0:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a3a4:	0791      	lsls	r1, r2, #30
 800a3a6:	d509      	bpl.n	800a3bc <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800a3a8:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a3ac:	0792      	lsls	r2, r2, #30
 800a3ae:	d505      	bpl.n	800a3bc <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800a3b0:	2202      	movs	r2, #2
 800a3b2:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800a3b6:	4620      	mov	r0, r4
 800a3b8:	f7f6 fe58 	bl	800106c <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800a3bc:	69a3      	ldr	r3, [r4, #24]
 800a3be:	2b00      	cmp	r3, #0
 800a3c0:	d04e      	beq.n	800a460 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800a3c2:	6821      	ldr	r1, [r4, #0]
 800a3c4:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a3c8:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800a3cc:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a3d0:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a3d2:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a3d6:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a3d8:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a3da:	b119      	cbz	r1, 800a3e4 <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800a3dc:	6961      	ldr	r1, [r4, #20]
 800a3de:	f041 0101 	orr.w	r1, r1, #1
 800a3e2:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800a3e4:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800a3e8:	bf1e      	ittt	ne
 800a3ea:	6962      	ldrne	r2, [r4, #20]
 800a3ec:	f042 0202 	orrne.w	r2, r2, #2
 800a3f0:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800a3f2:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800a3f4:	bf42      	ittt	mi
 800a3f6:	6962      	ldrmi	r2, [r4, #20]
 800a3f8:	f042 0204 	orrmi.w	r2, r2, #4
 800a3fc:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800a3fe:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800a400:	bf42      	ittt	mi
 800a402:	6962      	ldrmi	r2, [r4, #20]
 800a404:	f042 0208 	orrmi.w	r2, r2, #8
 800a408:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800a40a:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800a40e:	bf1e      	ittt	ne
 800a410:	6962      	ldrne	r2, [r4, #20]
 800a412:	f042 0210 	orrne.w	r2, r2, #16
 800a416:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800a418:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800a41a:	bf42      	ittt	mi
 800a41c:	6962      	ldrmi	r2, [r4, #20]
 800a41e:	f042 0220 	orrmi.w	r2, r2, #32
 800a422:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800a424:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800a426:	bf42      	ittt	mi
 800a428:	6962      	ldrmi	r2, [r4, #20]
 800a42a:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a42e:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800a430:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800a432:	bf42      	ittt	mi
 800a434:	6962      	ldrmi	r2, [r4, #20]
 800a436:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a43a:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800a43c:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800a43e:	bf42      	ittt	mi
 800a440:	6962      	ldrmi	r2, [r4, #20]
 800a442:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800a446:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800a448:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800a44c:	bf1e      	ittt	ne
 800a44e:	6963      	ldrne	r3, [r4, #20]
 800a450:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800a454:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800a456:	6963      	ldr	r3, [r4, #20]
 800a458:	b113      	cbz	r3, 800a460 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800a45a:	4620      	mov	r0, r4
 800a45c:	f7ff ff8e 	bl	800a37c <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800a460:	bd10      	pop	{r4, pc}

0800a462 <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a462:	7c03      	ldrb	r3, [r0, #16]
 800a464:	2b01      	cmp	r3, #1
 800a466:	d00b      	beq.n	800a480 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800a468:	6803      	ldr	r3, [r0, #0]
 800a46a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a46c:	f022 0203 	bic.w	r2, r2, #3
 800a470:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800a472:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a474:	4311      	orrs	r1, r2
 800a476:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a478:	2300      	movs	r3, #0
 800a47a:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a47c:	4618      	mov	r0, r3
 800a47e:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a480:	2002      	movs	r0, #2
}
 800a482:	4770      	bx	lr

0800a484 <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800a484:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a486:	7c03      	ldrb	r3, [r0, #16]
 800a488:	2b01      	cmp	r3, #1
 800a48a:	d06a      	beq.n	800a562 <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a48c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a48e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a490:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a492:	f042 0201 	orr.w	r2, r2, #1
 800a496:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800a498:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a49c:	f022 0201 	bic.w	r2, r2, #1
 800a4a0:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800a4a4:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a4a8:	f042 0201 	orr.w	r2, r2, #1
 800a4ac:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800a4b0:	68da      	ldr	r2, [r3, #12]
 800a4b2:	f022 0203 	bic.w	r2, r2, #3
 800a4b6:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a4b8:	68da      	ldr	r2, [r3, #12]
 800a4ba:	4322      	orrs	r2, r4
 800a4bc:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800a4be:	695a      	ldr	r2, [r3, #20]
 800a4c0:	f022 0207 	bic.w	r2, r2, #7
 800a4c4:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800a4c6:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800a4ca:	432a      	orrs	r2, r5
 800a4cc:	694d      	ldr	r5, [r1, #20]
 800a4ce:	695c      	ldr	r4, [r3, #20]
 800a4d0:	432a      	orrs	r2, r5
 800a4d2:	4322      	orrs	r2, r4
 800a4d4:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a4d6:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a4d8:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a4da:	f022 020f 	bic.w	r2, r2, #15
 800a4de:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a4e0:	691c      	ldr	r4, [r3, #16]
 800a4e2:	432c      	orrs	r4, r5
 800a4e4:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800a4e6:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a4ea:	f024 040e 	bic.w	r4, r4, #14
 800a4ee:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a4f2:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a4f6:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a4f8:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800a4fc:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800a500:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a502:	0c12      	lsrs	r2, r2, #16
 800a504:	0412      	lsls	r2, r2, #16
 800a506:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a508:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a50a:	4322      	orrs	r2, r4
 800a50c:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800a50e:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a512:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a516:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a51a:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800a51e:	432a      	orrs	r2, r5
 800a520:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a522:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a526:	432a      	orrs	r2, r5
 800a528:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a52a:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a52c:	432a      	orrs	r2, r5
 800a52e:	4322      	orrs	r2, r4
 800a530:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800a534:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a536:	f022 0201 	bic.w	r2, r2, #1
 800a53a:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a53c:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a53e:	430a      	orrs	r2, r1
 800a540:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800a542:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a546:	f042 0201 	orr.w	r2, r2, #1
 800a54a:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800a54e:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a552:	f042 0202 	orr.w	r2, r2, #2
 800a556:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a55a:	2300      	movs	r3, #0
 800a55c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a55e:	4618      	mov	r0, r3
}
 800a560:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a562:	2002      	movs	r0, #2
 800a564:	e7fc      	b.n	800a560 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800a568 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800a568:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a56a:	7c03      	ldrb	r3, [r0, #16]
 800a56c:	2b01      	cmp	r3, #1
 800a56e:	d02a      	beq.n	800a5c6 <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800a570:	6802      	ldr	r2, [r0, #0]
 800a572:	4b16      	ldr	r3, [pc, #88]	; (800a5cc <HAL_DSI_ConfigCommand+0x64>)
 800a574:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800a576:	4023      	ands	r3, r4
 800a578:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a57a:	e9d1 3500 	ldrd	r3, r5, [r1]
 800a57e:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800a580:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a582:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800a584:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800a586:	68cd      	ldr	r5, [r1, #12]
 800a588:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800a58a:	690d      	ldr	r5, [r1, #16]
 800a58c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800a58e:	694d      	ldr	r5, [r1, #20]
 800a590:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800a592:	698d      	ldr	r5, [r1, #24]
 800a594:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800a596:	69cd      	ldr	r5, [r1, #28]
 800a598:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800a59a:	6a0d      	ldr	r5, [r1, #32]
 800a59c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800a59e:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a5a0:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800a5a2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a5a4:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800a5a6:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a5a8:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800a5aa:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a5ac:	4323      	orrs	r3, r4
 800a5ae:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800a5b0:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a5b2:	f023 0302 	bic.w	r3, r3, #2
 800a5b6:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a5b8:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a5ba:	430b      	orrs	r3, r1
 800a5bc:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a5be:	2300      	movs	r3, #0
 800a5c0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a5c2:	4618      	mov	r0, r3
}
 800a5c4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a5c6:	2002      	movs	r0, #2
 800a5c8:	e7fc      	b.n	800a5c4 <HAL_DSI_ConfigCommand+0x5c>
 800a5ca:	bf00      	nop
 800a5cc:	fef080ff 	.word	0xfef080ff

0800a5d0 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a5d0:	7c03      	ldrb	r3, [r0, #16]
 800a5d2:	2b01      	cmp	r3, #1
 800a5d4:	d00b      	beq.n	800a5ee <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800a5d6:	6803      	ldr	r3, [r0, #0]
 800a5d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a5da:	f022 021f 	bic.w	r2, r2, #31
 800a5de:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800a5e0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a5e2:	4311      	orrs	r1, r2
 800a5e4:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a5e6:	2300      	movs	r3, #0
 800a5e8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a5ea:	4618      	mov	r0, r3
 800a5ec:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a5ee:	2002      	movs	r0, #2
}
 800a5f0:	4770      	bx	lr

0800a5f2 <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800a5f2:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a5f4:	7c03      	ldrb	r3, [r0, #16]
 800a5f6:	2b01      	cmp	r3, #1
 800a5f8:	d035      	beq.n	800a666 <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a5fa:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a5fe:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a600:	4294      	cmp	r4, r2
 800a602:	bf38      	it	cc
 800a604:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a606:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a60a:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800a60e:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800a612:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a616:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a61a:	4322      	orrs	r2, r4
 800a61c:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800a620:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800a624:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800a628:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800a62c:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800a630:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a632:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800a636:	690d      	ldr	r5, [r1, #16]
 800a638:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a63c:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a63e:	432a      	orrs	r2, r5
 800a640:	4322      	orrs	r2, r4
 800a642:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800a646:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a64a:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a64e:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a652:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a656:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a65a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a65e:	2300      	movs	r3, #0
 800a660:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a662:	4618      	mov	r0, r3
}
 800a664:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a666:	2002      	movs	r0, #2
 800a668:	e7fc      	b.n	800a664 <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800a66c <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800a66c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a66e:	7c03      	ldrb	r3, [r0, #16]
 800a670:	2b01      	cmp	r3, #1
 800a672:	d05c      	beq.n	800a72e <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a674:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a676:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a678:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a67a:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a67c:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a680:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a682:	689a      	ldr	r2, [r3, #8]
 800a684:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800a688:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a68a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a68c:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a68e:	b292      	uxth	r2, r2
 800a690:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a692:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800a694:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a698:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800a69a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a69c:	4a25      	ldr	r2, [pc, #148]	; (800a734 <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800a69e:	4014      	ands	r4, r2
 800a6a0:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a6a2:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a6a4:	432c      	orrs	r4, r5
 800a6a6:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a6a8:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a6aa:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a6ac:	4014      	ands	r4, r2
 800a6ae:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a6b0:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800a6b2:	432c      	orrs	r4, r5
 800a6b4:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a6b6:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a6ba:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a6bc:	4014      	ands	r4, r2
 800a6be:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a6c2:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800a6c6:	432c      	orrs	r4, r5
 800a6c8:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a6cc:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a6d0:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a6d2:	4014      	ands	r4, r2
 800a6d4:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a6d8:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a6dc:	432c      	orrs	r4, r5
 800a6de:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800a6e2:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a6e6:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800a6ea:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800a6ee:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a6f2:	698d      	ldr	r5, [r1, #24]
 800a6f4:	432c      	orrs	r4, r5
 800a6f6:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a6fa:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a6fe:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a700:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a702:	4014      	ands	r4, r2
 800a704:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a708:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800a70c:	432c      	orrs	r4, r5
 800a70e:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800a712:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a716:	4022      	ands	r2, r4
 800a718:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a71c:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800a720:	430a      	orrs	r2, r1
 800a722:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a726:	2300      	movs	r3, #0
 800a728:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a72a:	4618      	mov	r0, r3
}
 800a72c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a72e:	2002      	movs	r0, #2
 800a730:	e7fc      	b.n	800a72c <HAL_DSI_ConfigHostTimeouts+0xc0>
 800a732:	bf00      	nop
 800a734:	ffff0000 	.word	0xffff0000

0800a738 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a738:	7c03      	ldrb	r3, [r0, #16]
 800a73a:	2b01      	cmp	r3, #1
{
 800a73c:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800a73e:	d01c      	beq.n	800a77a <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800a740:	6802      	ldr	r2, [r0, #0]
 800a742:	2300      	movs	r3, #0
 800a744:	9300      	str	r3, [sp, #0]
 800a746:	6851      	ldr	r1, [r2, #4]
 800a748:	f041 0101 	orr.w	r1, r1, #1
 800a74c:	6051      	str	r1, [r2, #4]
 800a74e:	6851      	ldr	r1, [r2, #4]
 800a750:	f001 0101 	and.w	r1, r1, #1
 800a754:	9100      	str	r1, [sp, #0]
 800a756:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800a758:	9301      	str	r3, [sp, #4]
 800a75a:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800a75e:	f041 0108 	orr.w	r1, r1, #8
 800a762:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800a766:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a76a:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800a76c:	f002 0208 	and.w	r2, r2, #8
 800a770:	9201      	str	r2, [sp, #4]
 800a772:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800a774:	4618      	mov	r0, r3
}
 800a776:	b002      	add	sp, #8
 800a778:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a77a:	2002      	movs	r0, #2
 800a77c:	e7fb      	b.n	800a776 <HAL_DSI_Start+0x3e>

0800a77e <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a77e:	7c03      	ldrb	r3, [r0, #16]
 800a780:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800a782:	bf1f      	itttt	ne
 800a784:	6802      	ldrne	r2, [r0, #0]
 800a786:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800a78a:	f043 0304 	orrne.w	r3, r3, #4
 800a78e:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a792:	bf1d      	ittte	ne
 800a794:	2300      	movne	r3, #0
 800a796:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800a798:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800a79a:	2002      	moveq	r0, #2
}
 800a79c:	4770      	bx	lr

0800a79e <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800a79e:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800a7a0:	7c05      	ldrb	r5, [r0, #16]
 800a7a2:	2d01      	cmp	r5, #1
{
 800a7a4:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800a7a6:	d009      	beq.n	800a7bc <HAL_DSI_ShortWrite+0x1e>
 800a7a8:	2501      	movs	r5, #1
 800a7aa:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800a7ac:	9d06      	ldr	r5, [sp, #24]
 800a7ae:	9500      	str	r5, [sp, #0]
 800a7b0:	f7ff fcac 	bl	800a10c <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a7b4:	2300      	movs	r3, #0
 800a7b6:	7423      	strb	r3, [r4, #16]

  return status;
}
 800a7b8:	b003      	add	sp, #12
 800a7ba:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a7bc:	2002      	movs	r0, #2
 800a7be:	e7fb      	b.n	800a7b8 <HAL_DSI_ShortWrite+0x1a>

0800a7c0 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800a7c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a7c4:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800a7c6:	7c03      	ldrb	r3, [r0, #16]
 800a7c8:	2b01      	cmp	r3, #1
{
 800a7ca:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800a7ce:	4606      	mov	r6, r0
 800a7d0:	460f      	mov	r7, r1
 800a7d2:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800a7d4:	d053      	beq.n	800a87e <HAL_DSI_LongWrite+0xbe>
 800a7d6:	2301      	movs	r3, #1
 800a7d8:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800a7da:	f7ff fa07 	bl	8009bec <HAL_GetTick>
 800a7de:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a7e0:	6831      	ldr	r1, [r6, #0]
 800a7e2:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800a7e4:	f013 0a01 	ands.w	sl, r3, #1
 800a7e8:	d01a      	beq.n	800a820 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800a7ea:	2c03      	cmp	r4, #3
 800a7ec:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800a7ee:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800a7f2:	bf28      	it	cs
 800a7f4:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800a7f6:	4282      	cmp	r2, r0
 800a7f8:	d11e      	bne.n	800a838 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800a7fa:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 800a7fc:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800a800:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800a802:	bb1b      	cbnz	r3, 800a84c <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800a804:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800a806:	0222      	lsls	r2, r4, #8
 800a808:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 800a80c:	b292      	uxth	r2, r2
 800a80e:	0224      	lsls	r4, r4, #8
 800a810:	4315      	orrs	r5, r2
 800a812:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800a816:	432c      	orrs	r4, r5
 800a818:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800a81a:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800a81c:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800a81e:	e009      	b.n	800a834 <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a820:	f7ff f9e4 	bl	8009bec <HAL_GetTick>
 800a824:	eba0 000b 	sub.w	r0, r0, fp
 800a828:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a82c:	d9d8      	bls.n	800a7e0 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800a82e:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800a832:	2003      	movs	r0, #3
}
 800a834:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800a838:	f818 3002 	ldrb.w	r3, [r8, r2]
 800a83c:	3201      	adds	r2, #1
 800a83e:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800a842:	fa03 f30c 	lsl.w	r3, r3, ip
 800a846:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800a84a:	e7d4      	b.n	800a7f6 <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a84c:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800a84e:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a852:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800a854:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800a856:	bf28      	it	cs
 800a858:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a85c:	f812 8000 	ldrb.w	r8, [r2, r0]
 800a860:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800a864:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a866:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800a86a:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800a86c:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800a870:	d1f4      	bne.n	800a85c <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800a872:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800a876:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800a87a:	4472      	add	r2, lr
 800a87c:	e7c1      	b.n	800a802 <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800a87e:	2002      	movs	r0, #2
 800a880:	e7d8      	b.n	800a834 <HAL_DSI_LongWrite+0x74>

0800a882 <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a882:	7c03      	ldrb	r3, [r0, #16]
 800a884:	2b01      	cmp	r3, #1
 800a886:	d010      	beq.n	800a8aa <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800a888:	6803      	ldr	r3, [r0, #0]
 800a88a:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800a88e:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800a892:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800a896:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800a89a:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800a89e:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a8a2:	2300      	movs	r3, #0
 800a8a4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a8a6:	4618      	mov	r0, r3
 800a8a8:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a8aa:	2002      	movs	r0, #2
}
 800a8ac:	4770      	bx	lr
	...

0800a8b0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800a8b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a8b4:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800aa78 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800a8b8:	4a6d      	ldr	r2, [pc, #436]	; (800aa70 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800a8ba:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a8bc:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800a8be:	2401      	movs	r4, #1
 800a8c0:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800a8c2:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800a8c6:	43ac      	bics	r4, r5
 800a8c8:	f040 80b9 	bne.w	800aa3e <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a8cc:	684d      	ldr	r5, [r1, #4]
 800a8ce:	f005 0403 	and.w	r4, r5, #3
 800a8d2:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a8d6:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a8d8:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a8da:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a8de:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a8e0:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800a8e4:	d834      	bhi.n	800a950 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800a8e6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800a8e8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800a8ec:	68cf      	ldr	r7, [r1, #12]
 800a8ee:	fa07 f708 	lsl.w	r7, r7, r8
 800a8f2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800a8f6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800a8f8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800a8fa:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800a8fe:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800a902:	409f      	lsls	r7, r3
 800a904:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800a908:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800a90a:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800a90c:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800a910:	688f      	ldr	r7, [r1, #8]
 800a912:	fa07 f708 	lsl.w	r7, r7, r8
 800a916:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a91a:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800a91c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800a91e:	d119      	bne.n	800a954 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800a920:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800a924:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a928:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800a92c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800a930:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800a934:	f04f 0e0f 	mov.w	lr, #15
 800a938:	fa0e fe0b 	lsl.w	lr, lr, fp
 800a93c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800a940:	690f      	ldr	r7, [r1, #16]
 800a942:	fa07 f70b 	lsl.w	r7, r7, fp
 800a946:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800a94a:	f8ca 7020 	str.w	r7, [sl, #32]
 800a94e:	e001      	b.n	800a954 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800a950:	2c03      	cmp	r4, #3
 800a952:	d1da      	bne.n	800a90a <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800a954:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a956:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800a95a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800a95c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a95e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800a962:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800a964:	d06b      	beq.n	800aa3e <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a966:	f04f 0a00 	mov.w	sl, #0
 800a96a:	f8cd a004 	str.w	sl, [sp, #4]
 800a96e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a972:	4c40      	ldr	r4, [pc, #256]	; (800aa74 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800a974:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800a978:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800a97c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800a980:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800a984:	9601      	str	r6, [sp, #4]
 800a986:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800a988:	f023 0603 	bic.w	r6, r3, #3
 800a98c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800a990:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a994:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800a998:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a99c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800a9a0:	270f      	movs	r7, #15
 800a9a2:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a9a6:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800a9a8:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800a9ac:	d04e      	beq.n	800aa4c <HAL_GPIO_Init+0x19c>
 800a9ae:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9b2:	42a0      	cmp	r0, r4
 800a9b4:	d04c      	beq.n	800aa50 <HAL_GPIO_Init+0x1a0>
 800a9b6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9ba:	42a0      	cmp	r0, r4
 800a9bc:	d04a      	beq.n	800aa54 <HAL_GPIO_Init+0x1a4>
 800a9be:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9c2:	42a0      	cmp	r0, r4
 800a9c4:	d048      	beq.n	800aa58 <HAL_GPIO_Init+0x1a8>
 800a9c6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9ca:	42a0      	cmp	r0, r4
 800a9cc:	d046      	beq.n	800aa5c <HAL_GPIO_Init+0x1ac>
 800a9ce:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9d2:	42a0      	cmp	r0, r4
 800a9d4:	d044      	beq.n	800aa60 <HAL_GPIO_Init+0x1b0>
 800a9d6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9da:	42a0      	cmp	r0, r4
 800a9dc:	d042      	beq.n	800aa64 <HAL_GPIO_Init+0x1b4>
 800a9de:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9e2:	42a0      	cmp	r0, r4
 800a9e4:	d040      	beq.n	800aa68 <HAL_GPIO_Init+0x1b8>
 800a9e6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9ea:	42a0      	cmp	r0, r4
 800a9ec:	d03e      	beq.n	800aa6c <HAL_GPIO_Init+0x1bc>
 800a9ee:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800a9f2:	42a0      	cmp	r0, r4
 800a9f4:	bf0c      	ite	eq
 800a9f6:	2409      	moveq	r4, #9
 800a9f8:	240a      	movne	r4, #10
 800a9fa:	fa04 f40e 	lsl.w	r4, r4, lr
 800a9fe:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800aa00:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800aa02:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800aa04:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800aa08:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800aa0a:	bf54      	ite	pl
 800aa0c:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800aa0e:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800aa12:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800aa14:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800aa16:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800aa18:	bf54      	ite	pl
 800aa1a:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800aa1c:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800aa20:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800aa22:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800aa24:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800aa26:	bf54      	ite	pl
 800aa28:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800aa2a:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800aa2e:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800aa30:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800aa32:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800aa34:	bf54      	ite	pl
 800aa36:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800aa38:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800aa3c:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800aa3e:	3301      	adds	r3, #1
 800aa40:	2b10      	cmp	r3, #16
 800aa42:	f47f af3b 	bne.w	800a8bc <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800aa46:	b003      	add	sp, #12
 800aa48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800aa4c:	4654      	mov	r4, sl
 800aa4e:	e7d4      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa50:	2401      	movs	r4, #1
 800aa52:	e7d2      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa54:	2402      	movs	r4, #2
 800aa56:	e7d0      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa58:	2403      	movs	r4, #3
 800aa5a:	e7ce      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa5c:	2404      	movs	r4, #4
 800aa5e:	e7cc      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa60:	2405      	movs	r4, #5
 800aa62:	e7ca      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa64:	2406      	movs	r4, #6
 800aa66:	e7c8      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa68:	2407      	movs	r4, #7
 800aa6a:	e7c6      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa6c:	2408      	movs	r4, #8
 800aa6e:	e7c4      	b.n	800a9fa <HAL_GPIO_Init+0x14a>
 800aa70:	40013c00 	.word	0x40013c00
 800aa74:	40020000 	.word	0x40020000
 800aa78:	40023800 	.word	0x40023800

0800aa7c <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800aa7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800aa80:	4c4a      	ldr	r4, [pc, #296]	; (800abac <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aa82:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800abb4 <HAL_GPIO_DeInit+0x138>
 800aa86:	f8df a130 	ldr.w	sl, [pc, #304]	; 800abb8 <HAL_GPIO_DeInit+0x13c>
 800aa8a:	f8df b130 	ldr.w	fp, [pc, #304]	; 800abbc <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800aa8e:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800aa90:	2301      	movs	r3, #1
 800aa92:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800aa96:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800aa9a:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800aa9e:	d16e      	bne.n	800ab7e <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800aaa0:	f022 0503 	bic.w	r5, r2, #3
 800aaa4:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800aaa8:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aaac:	4b40      	ldr	r3, [pc, #256]	; (800abb0 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800aaae:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800aab2:	f002 0c03 	and.w	ip, r2, #3
 800aab6:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800aaba:	260f      	movs	r6, #15
 800aabc:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aac0:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800aac2:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800aac6:	d05f      	beq.n	800ab88 <HAL_GPIO_DeInit+0x10c>
 800aac8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aacc:	4298      	cmp	r0, r3
 800aace:	d05d      	beq.n	800ab8c <HAL_GPIO_DeInit+0x110>
 800aad0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aad4:	4298      	cmp	r0, r3
 800aad6:	d05b      	beq.n	800ab90 <HAL_GPIO_DeInit+0x114>
 800aad8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aadc:	4298      	cmp	r0, r3
 800aade:	d059      	beq.n	800ab94 <HAL_GPIO_DeInit+0x118>
 800aae0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800aae4:	4298      	cmp	r0, r3
 800aae6:	d057      	beq.n	800ab98 <HAL_GPIO_DeInit+0x11c>
 800aae8:	4548      	cmp	r0, r9
 800aaea:	d057      	beq.n	800ab9c <HAL_GPIO_DeInit+0x120>
 800aaec:	4550      	cmp	r0, sl
 800aaee:	d057      	beq.n	800aba0 <HAL_GPIO_DeInit+0x124>
 800aaf0:	4558      	cmp	r0, fp
 800aaf2:	d057      	beq.n	800aba4 <HAL_GPIO_DeInit+0x128>
 800aaf4:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800aaf8:	4298      	cmp	r0, r3
 800aafa:	d055      	beq.n	800aba8 <HAL_GPIO_DeInit+0x12c>
 800aafc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ab00:	4298      	cmp	r0, r3
 800ab02:	bf0c      	ite	eq
 800ab04:	2309      	moveq	r3, #9
 800ab06:	230a      	movne	r3, #10
 800ab08:	fa03 f30c 	lsl.w	r3, r3, ip
 800ab0c:	4543      	cmp	r3, r8
 800ab0e:	d113      	bne.n	800ab38 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800ab10:	6823      	ldr	r3, [r4, #0]
 800ab12:	ea23 0307 	bic.w	r3, r3, r7
 800ab16:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800ab18:	6863      	ldr	r3, [r4, #4]
 800ab1a:	ea23 0307 	bic.w	r3, r3, r7
 800ab1e:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800ab20:	68e3      	ldr	r3, [r4, #12]
 800ab22:	ea23 0307 	bic.w	r3, r3, r7
 800ab26:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800ab28:	68a3      	ldr	r3, [r4, #8]
 800ab2a:	ea23 0307 	bic.w	r3, r3, r7
 800ab2e:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800ab30:	68ab      	ldr	r3, [r5, #8]
 800ab32:	ea23 0306 	bic.w	r3, r3, r6
 800ab36:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800ab38:	6805      	ldr	r5, [r0, #0]
 800ab3a:	2603      	movs	r6, #3
 800ab3c:	0053      	lsls	r3, r2, #1
 800ab3e:	fa06 f303 	lsl.w	r3, r6, r3
 800ab42:	ea25 0503 	bic.w	r5, r5, r3
 800ab46:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ab48:	fa22 f506 	lsr.w	r5, r2, r6
 800ab4c:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800ab50:	f002 0c07 	and.w	ip, r2, #7
 800ab54:	6a2e      	ldr	r6, [r5, #32]
 800ab56:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800ab5a:	270f      	movs	r7, #15
 800ab5c:	fa07 f70c 	lsl.w	r7, r7, ip
 800ab60:	ea26 0707 	bic.w	r7, r6, r7
 800ab64:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ab66:	68c5      	ldr	r5, [r0, #12]
 800ab68:	ea25 0503 	bic.w	r5, r5, r3
 800ab6c:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ab6e:	6845      	ldr	r5, [r0, #4]
 800ab70:	ea25 050e 	bic.w	r5, r5, lr
 800ab74:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab76:	6885      	ldr	r5, [r0, #8]
 800ab78:	ea25 0303 	bic.w	r3, r5, r3
 800ab7c:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab7e:	3201      	adds	r2, #1
 800ab80:	2a10      	cmp	r2, #16
 800ab82:	d185      	bne.n	800aa90 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800ab84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ab88:	2300      	movs	r3, #0
 800ab8a:	e7bd      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800ab8c:	2301      	movs	r3, #1
 800ab8e:	e7bb      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800ab90:	2302      	movs	r3, #2
 800ab92:	e7b9      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800ab94:	2303      	movs	r3, #3
 800ab96:	e7b7      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800ab98:	2304      	movs	r3, #4
 800ab9a:	e7b5      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800ab9c:	2305      	movs	r3, #5
 800ab9e:	e7b3      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800aba0:	2306      	movs	r3, #6
 800aba2:	e7b1      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800aba4:	2307      	movs	r3, #7
 800aba6:	e7af      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800aba8:	2308      	movs	r3, #8
 800abaa:	e7ad      	b.n	800ab08 <HAL_GPIO_DeInit+0x8c>
 800abac:	40013c00 	.word	0x40013c00
 800abb0:	40020000 	.word	0x40020000
 800abb4:	40021400 	.word	0x40021400
 800abb8:	40021800 	.word	0x40021800
 800abbc:	40021c00 	.word	0x40021c00

0800abc0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800abc0:	6903      	ldr	r3, [r0, #16]
 800abc2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800abc4:	bf14      	ite	ne
 800abc6:	2001      	movne	r0, #1
 800abc8:	2000      	moveq	r0, #0
 800abca:	4770      	bx	lr

0800abcc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800abcc:	b10a      	cbz	r2, 800abd2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800abce:	6181      	str	r1, [r0, #24]
  }
}
 800abd0:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800abd2:	0409      	lsls	r1, r1, #16
 800abd4:	e7fb      	b.n	800abce <HAL_GPIO_WritePin+0x2>

0800abd6 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800abd6:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800abd8:	ea01 0203 	and.w	r2, r1, r3
 800abdc:	ea21 0103 	bic.w	r1, r1, r3
 800abe0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800abe4:	6181      	str	r1, [r0, #24]
}
 800abe6:	4770      	bx	lr

0800abe8 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800abe8:	6801      	ldr	r1, [r0, #0]
 800abea:	694b      	ldr	r3, [r1, #20]
 800abec:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800abf0:	f04f 0200 	mov.w	r2, #0
 800abf4:	d010      	beq.n	800ac18 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800abf6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800abfa:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800abfc:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800abfe:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800ac00:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ac04:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ac08:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800ac0a:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800ac0e:	f043 0304 	orr.w	r3, r3, #4
 800ac12:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800ac14:	2001      	movs	r0, #1
 800ac16:	4770      	bx	lr
  }
  return HAL_OK;
 800ac18:	4618      	mov	r0, r3
}
 800ac1a:	4770      	bx	lr

0800ac1c <I2C_WaitOnFlagUntilTimeout>:
{
 800ac1c:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800ac20:	4606      	mov	r6, r0
 800ac22:	460f      	mov	r7, r1
 800ac24:	4691      	mov	r9, r2
 800ac26:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800ac28:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800ac2c:	6833      	ldr	r3, [r6, #0]
 800ac2e:	f1ba 0f01 	cmp.w	sl, #1
 800ac32:	bf0c      	ite	eq
 800ac34:	695c      	ldreq	r4, [r3, #20]
 800ac36:	699c      	ldrne	r4, [r3, #24]
 800ac38:	ea27 0404 	bic.w	r4, r7, r4
 800ac3c:	b2a4      	uxth	r4, r4
 800ac3e:	fab4 f484 	clz	r4, r4
 800ac42:	0964      	lsrs	r4, r4, #5
 800ac44:	45a1      	cmp	r9, r4
 800ac46:	d001      	beq.n	800ac4c <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800ac48:	2000      	movs	r0, #0
 800ac4a:	e017      	b.n	800ac7c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800ac4c:	1c6a      	adds	r2, r5, #1
 800ac4e:	d0ee      	beq.n	800ac2e <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ac50:	f7fe ffcc 	bl	8009bec <HAL_GetTick>
 800ac54:	9b08      	ldr	r3, [sp, #32]
 800ac56:	1ac0      	subs	r0, r0, r3
 800ac58:	42a8      	cmp	r0, r5
 800ac5a:	d801      	bhi.n	800ac60 <I2C_WaitOnFlagUntilTimeout+0x44>
 800ac5c:	2d00      	cmp	r5, #0
 800ac5e:	d1e5      	bne.n	800ac2c <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac60:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac62:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800ac64:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800ac66:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800ac6a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac6e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ac70:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800ac74:	f042 0220 	orr.w	r2, r2, #32
 800ac78:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800ac7a:	2001      	movs	r0, #1
}
 800ac7c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800ac80 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800ac80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac84:	4604      	mov	r4, r0
 800ac86:	460f      	mov	r7, r1
 800ac88:	4616      	mov	r6, r2
 800ac8a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800ac8c:	6825      	ldr	r5, [r4, #0]
 800ac8e:	6968      	ldr	r0, [r5, #20]
 800ac90:	ea27 0000 	bic.w	r0, r7, r0
 800ac94:	b280      	uxth	r0, r0
 800ac96:	b1b8      	cbz	r0, 800acc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800ac98:	696b      	ldr	r3, [r5, #20]
 800ac9a:	055a      	lsls	r2, r3, #21
 800ac9c:	d516      	bpl.n	800accc <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ac9e:	682b      	ldr	r3, [r5, #0]
 800aca0:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800aca4:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aca6:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800acaa:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800acac:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800acae:	2300      	movs	r3, #0
 800acb0:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800acb2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800acb6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800acba:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800acbc:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800acc0:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800acc2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800acc6:	2001      	movs	r0, #1
}
 800acc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800accc:	1c73      	adds	r3, r6, #1
 800acce:	d0de      	beq.n	800ac8e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800acd0:	f7fe ff8c 	bl	8009bec <HAL_GetTick>
 800acd4:	eba0 0008 	sub.w	r0, r0, r8
 800acd8:	42b0      	cmp	r0, r6
 800acda:	d801      	bhi.n	800ace0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800acdc:	2e00      	cmp	r6, #0
 800acde:	d1d5      	bne.n	800ac8c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ace0:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ace2:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ace4:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ace6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800acea:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800acee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800acf0:	f042 0220 	orr.w	r2, r2, #32
 800acf4:	e7e4      	b.n	800acc0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800acf6 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800acf6:	b570      	push	{r4, r5, r6, lr}
 800acf8:	4604      	mov	r4, r0
 800acfa:	460d      	mov	r5, r1
 800acfc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800acfe:	6821      	ldr	r1, [r4, #0]
 800ad00:	694b      	ldr	r3, [r1, #20]
 800ad02:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800ad06:	d001      	beq.n	800ad0c <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800ad08:	2000      	movs	r0, #0
 800ad0a:	e010      	b.n	800ad2e <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800ad0c:	694a      	ldr	r2, [r1, #20]
 800ad0e:	06d2      	lsls	r2, r2, #27
 800ad10:	d50e      	bpl.n	800ad30 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800ad12:	f06f 0210 	mvn.w	r2, #16
 800ad16:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad18:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ad1a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad1c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ad20:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800ad24:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ad26:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800ad28:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800ad2c:	2001      	movs	r0, #1
}
 800ad2e:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad30:	f7fe ff5c 	bl	8009bec <HAL_GetTick>
 800ad34:	1b80      	subs	r0, r0, r6
 800ad36:	42a8      	cmp	r0, r5
 800ad38:	d801      	bhi.n	800ad3e <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800ad3a:	2d00      	cmp	r5, #0
 800ad3c:	d1df      	bne.n	800acfe <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ad3e:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad40:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800ad42:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800ad44:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ad48:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ad4c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800ad4e:	f042 0220 	orr.w	r2, r2, #32
 800ad52:	e7e8      	b.n	800ad26 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800ad54 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800ad54:	b570      	push	{r4, r5, r6, lr}
 800ad56:	4604      	mov	r4, r0
 800ad58:	460d      	mov	r5, r1
 800ad5a:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800ad5c:	6823      	ldr	r3, [r4, #0]
 800ad5e:	695b      	ldr	r3, [r3, #20]
 800ad60:	075b      	lsls	r3, r3, #29
 800ad62:	d501      	bpl.n	800ad68 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800ad64:	2000      	movs	r0, #0
}
 800ad66:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800ad68:	4620      	mov	r0, r4
 800ad6a:	f7ff ff3d 	bl	800abe8 <I2C_IsAcknowledgeFailed>
 800ad6e:	b9a8      	cbnz	r0, 800ad9c <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800ad70:	1c6a      	adds	r2, r5, #1
 800ad72:	d0f3      	beq.n	800ad5c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800ad74:	f7fe ff3a 	bl	8009bec <HAL_GetTick>
 800ad78:	1b80      	subs	r0, r0, r6
 800ad7a:	42a8      	cmp	r0, r5
 800ad7c:	d801      	bhi.n	800ad82 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800ad7e:	2d00      	cmp	r5, #0
 800ad80:	d1ec      	bne.n	800ad5c <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ad82:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800ad84:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800ad86:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800ad88:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800ad8c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ad90:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800ad92:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ad96:	f042 0220 	orr.w	r2, r2, #32
 800ad9a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ad9c:	2001      	movs	r0, #1
 800ad9e:	e7e2      	b.n	800ad66 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800ada0 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800ada0:	b570      	push	{r4, r5, r6, lr}
 800ada2:	4604      	mov	r4, r0
 800ada4:	460d      	mov	r5, r1
 800ada6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800ada8:	6823      	ldr	r3, [r4, #0]
 800adaa:	695b      	ldr	r3, [r3, #20]
 800adac:	061b      	lsls	r3, r3, #24
 800adae:	d501      	bpl.n	800adb4 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800adb0:	2000      	movs	r0, #0
}
 800adb2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800adb4:	4620      	mov	r0, r4
 800adb6:	f7ff ff17 	bl	800abe8 <I2C_IsAcknowledgeFailed>
 800adba:	b9a8      	cbnz	r0, 800ade8 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800adbc:	1c6a      	adds	r2, r5, #1
 800adbe:	d0f3      	beq.n	800ada8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800adc0:	f7fe ff14 	bl	8009bec <HAL_GetTick>
 800adc4:	1b80      	subs	r0, r0, r6
 800adc6:	42a8      	cmp	r0, r5
 800adc8:	d801      	bhi.n	800adce <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800adca:	2d00      	cmp	r5, #0
 800adcc:	d1ec      	bne.n	800ada8 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800adce:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800add0:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800add2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800add4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800add8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800addc:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800adde:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800ade2:	f042 0220 	orr.w	r2, r2, #32
 800ade6:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800ade8:	2001      	movs	r0, #1
 800adea:	e7e2      	b.n	800adb2 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800adec <I2C_RequestMemoryWrite>:
{
 800adec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800adf0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800adf2:	6802      	ldr	r2, [r0, #0]
{
 800adf4:	b085      	sub	sp, #20
 800adf6:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800adfa:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800adfc:	6813      	ldr	r3, [r2, #0]
 800adfe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800ae02:	6013      	str	r3, [r2, #0]
{
 800ae04:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ae06:	463b      	mov	r3, r7
 800ae08:	f8cd 8000 	str.w	r8, [sp]
 800ae0c:	2200      	movs	r2, #0
 800ae0e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800ae12:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800ae14:	f7ff ff02 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800ae18:	6823      	ldr	r3, [r4, #0]
 800ae1a:	b138      	cbz	r0, 800ae2c <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800ae1c:	681b      	ldr	r3, [r3, #0]
 800ae1e:	05db      	lsls	r3, r3, #23
 800ae20:	d502      	bpl.n	800ae28 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800ae22:	f44f 7300 	mov.w	r3, #512	; 0x200
 800ae26:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800ae28:	2003      	movs	r0, #3
 800ae2a:	e00a      	b.n	800ae42 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800ae2c:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800ae30:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800ae32:	4919      	ldr	r1, [pc, #100]	; (800ae98 <I2C_RequestMemoryWrite+0xac>)
 800ae34:	4643      	mov	r3, r8
 800ae36:	463a      	mov	r2, r7
 800ae38:	4620      	mov	r0, r4
 800ae3a:	f7ff ff21 	bl	800ac80 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800ae3e:	b118      	cbz	r0, 800ae48 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800ae40:	2001      	movs	r0, #1
}
 800ae42:	b005      	add	sp, #20
 800ae44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae48:	6823      	ldr	r3, [r4, #0]
 800ae4a:	9003      	str	r0, [sp, #12]
 800ae4c:	695a      	ldr	r2, [r3, #20]
 800ae4e:	9203      	str	r2, [sp, #12]
 800ae50:	699b      	ldr	r3, [r3, #24]
 800ae52:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae54:	4642      	mov	r2, r8
 800ae56:	4639      	mov	r1, r7
 800ae58:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800ae5a:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae5c:	f7ff ffa0 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800ae60:	b140      	cbz	r0, 800ae74 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800ae62:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ae64:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae66:	bf01      	itttt	eq
 800ae68:	6822      	ldreq	r2, [r4, #0]
 800ae6a:	6813      	ldreq	r3, [r2, #0]
 800ae6c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800ae70:	6013      	streq	r3, [r2, #0]
 800ae72:	e7e5      	b.n	800ae40 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ae74:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800ae78:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800ae7a:	d102      	bne.n	800ae82 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae7c:	b2ed      	uxtb	r5, r5
 800ae7e:	611d      	str	r5, [r3, #16]
 800ae80:	e7df      	b.n	800ae42 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800ae82:	0a2a      	lsrs	r2, r5, #8
 800ae84:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800ae86:	4639      	mov	r1, r7
 800ae88:	4642      	mov	r2, r8
 800ae8a:	4620      	mov	r0, r4
 800ae8c:	f7ff ff88 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800ae90:	2800      	cmp	r0, #0
 800ae92:	d1e6      	bne.n	800ae62 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800ae94:	6823      	ldr	r3, [r4, #0]
 800ae96:	e7f1      	b.n	800ae7c <I2C_RequestMemoryWrite+0x90>
 800ae98:	00010002 	.word	0x00010002

0800ae9c <I2C_RequestMemoryRead>:
{
 800ae9c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800aea0:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aea2:	6803      	ldr	r3, [r0, #0]
{
 800aea4:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800aea6:	681a      	ldr	r2, [r3, #0]
 800aea8:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800aeac:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aeae:	681a      	ldr	r2, [r3, #0]
{
 800aeb0:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800aeb4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800aeb8:	601a      	str	r2, [r3, #0]
{
 800aeba:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800aebc:	463b      	mov	r3, r7
 800aebe:	f8cd 8000 	str.w	r8, [sp]
 800aec2:	2200      	movs	r2, #0
 800aec4:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800aec8:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800aeca:	f7ff fea7 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800aece:	6823      	ldr	r3, [r4, #0]
 800aed0:	b148      	cbz	r0, 800aee6 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800aed2:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800aed4:	05db      	lsls	r3, r3, #23
 800aed6:	d502      	bpl.n	800aede <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800aed8:	f44f 7300 	mov.w	r3, #512	; 0x200
 800aedc:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800aede:	2003      	movs	r0, #3
}
 800aee0:	b004      	add	sp, #16
 800aee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800aee6:	fa5f f986 	uxtb.w	r9, r6
 800aeea:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800aeee:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800aef0:	492a      	ldr	r1, [pc, #168]	; (800af9c <I2C_RequestMemoryRead+0x100>)
 800aef2:	4643      	mov	r3, r8
 800aef4:	463a      	mov	r2, r7
 800aef6:	4620      	mov	r0, r4
 800aef8:	f7ff fec2 	bl	800ac80 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800aefc:	b108      	cbz	r0, 800af02 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800aefe:	2001      	movs	r0, #1
 800af00:	e7ee      	b.n	800aee0 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af02:	6823      	ldr	r3, [r4, #0]
 800af04:	9003      	str	r0, [sp, #12]
 800af06:	695a      	ldr	r2, [r3, #20]
 800af08:	9203      	str	r2, [sp, #12]
 800af0a:	699b      	ldr	r3, [r3, #24]
 800af0c:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800af0e:	4642      	mov	r2, r8
 800af10:	4639      	mov	r1, r7
 800af12:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800af14:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800af16:	f7ff ff43 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800af1a:	b140      	cbz	r0, 800af2e <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800af1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800af1e:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af20:	bf01      	itttt	eq
 800af22:	6822      	ldreq	r2, [r4, #0]
 800af24:	6813      	ldreq	r3, [r2, #0]
 800af26:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800af2a:	6013      	streq	r3, [r2, #0]
 800af2c:	e7e7      	b.n	800aefe <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800af2e:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af32:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800af34:	d11a      	bne.n	800af6c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800af36:	b2ed      	uxtb	r5, r5
 800af38:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800af3a:	4642      	mov	r2, r8
 800af3c:	4639      	mov	r1, r7
 800af3e:	4620      	mov	r0, r4
 800af40:	f7ff ff2e 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800af44:	2800      	cmp	r0, #0
 800af46:	d1e9      	bne.n	800af1c <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800af48:	6822      	ldr	r2, [r4, #0]
 800af4a:	6813      	ldr	r3, [r2, #0]
 800af4c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800af50:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800af52:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800af56:	4602      	mov	r2, r0
 800af58:	f8cd 8000 	str.w	r8, [sp]
 800af5c:	463b      	mov	r3, r7
 800af5e:	4620      	mov	r0, r4
 800af60:	f7ff fe5c 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800af64:	6822      	ldr	r2, [r4, #0]
 800af66:	b160      	cbz	r0, 800af82 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800af68:	6813      	ldr	r3, [r2, #0]
 800af6a:	e7b3      	b.n	800aed4 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800af6c:	0a2a      	lsrs	r2, r5, #8
 800af6e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800af70:	4639      	mov	r1, r7
 800af72:	4642      	mov	r2, r8
 800af74:	4620      	mov	r0, r4
 800af76:	f7ff ff13 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800af7a:	2800      	cmp	r0, #0
 800af7c:	d1ce      	bne.n	800af1c <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800af7e:	6823      	ldr	r3, [r4, #0]
 800af80:	e7d9      	b.n	800af36 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800af82:	f049 0301 	orr.w	r3, r9, #1
 800af86:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800af88:	4904      	ldr	r1, [pc, #16]	; (800af9c <I2C_RequestMemoryRead+0x100>)
 800af8a:	4643      	mov	r3, r8
 800af8c:	463a      	mov	r2, r7
 800af8e:	4620      	mov	r0, r4
 800af90:	f7ff fe76 	bl	800ac80 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800af94:	3800      	subs	r0, #0
 800af96:	bf18      	it	ne
 800af98:	2001      	movne	r0, #1
 800af9a:	e7a1      	b.n	800aee0 <I2C_RequestMemoryRead+0x44>
 800af9c:	00010002 	.word	0x00010002

0800afa0 <HAL_I2C_Init>:
{
 800afa0:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800afa2:	4604      	mov	r4, r0
 800afa4:	b908      	cbnz	r0, 800afaa <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800afa6:	2001      	movs	r0, #1
}
 800afa8:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800afaa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800afae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800afb2:	b91b      	cbnz	r3, 800afbc <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800afb4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800afb8:	f7f7 f938 	bl	800222c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800afbc:	2324      	movs	r3, #36	; 0x24
 800afbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800afc2:	6823      	ldr	r3, [r4, #0]
 800afc4:	681a      	ldr	r2, [r3, #0]
 800afc6:	f022 0201 	bic.w	r2, r2, #1
 800afca:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800afcc:	681a      	ldr	r2, [r3, #0]
 800afce:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800afd2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800afd4:	681a      	ldr	r2, [r3, #0]
 800afd6:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800afda:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800afdc:	f001 f814 	bl	800c008 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800afe0:	4b3f      	ldr	r3, [pc, #252]	; (800b0e0 <HAL_I2C_Init+0x140>)
 800afe2:	6865      	ldr	r5, [r4, #4]
 800afe4:	429d      	cmp	r5, r3
 800afe6:	bf94      	ite	ls
 800afe8:	4b3e      	ldrls	r3, [pc, #248]	; (800b0e4 <HAL_I2C_Init+0x144>)
 800afea:	4b3f      	ldrhi	r3, [pc, #252]	; (800b0e8 <HAL_I2C_Init+0x148>)
 800afec:	4298      	cmp	r0, r3
 800afee:	bf8c      	ite	hi
 800aff0:	2300      	movhi	r3, #0
 800aff2:	2301      	movls	r3, #1
 800aff4:	2b00      	cmp	r3, #0
 800aff6:	d1d6      	bne.n	800afa6 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800aff8:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800affa:	4e39      	ldr	r6, [pc, #228]	; (800b0e0 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800affc:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800affe:	493b      	ldr	r1, [pc, #236]	; (800b0ec <HAL_I2C_Init+0x14c>)
 800b000:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b004:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b008:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b00a:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b00c:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b00e:	bf88      	it	hi
 800b010:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800b014:	6a13      	ldr	r3, [r2, #32]
 800b016:	bf88      	it	hi
 800b018:	4371      	mulhi	r1, r6
 800b01a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b01e:	bf84      	itt	hi
 800b020:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800b024:	fbb1 f1f6 	udivhi	r1, r1, r6
 800b028:	3101      	adds	r1, #1
 800b02a:	4319      	orrs	r1, r3
 800b02c:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b02e:	69d1      	ldr	r1, [r2, #28]
 800b030:	1e43      	subs	r3, r0, #1
 800b032:	482b      	ldr	r0, [pc, #172]	; (800b0e0 <HAL_I2C_Init+0x140>)
 800b034:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800b038:	4285      	cmp	r5, r0
 800b03a:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b03e:	d832      	bhi.n	800b0a6 <HAL_I2C_Init+0x106>
 800b040:	006d      	lsls	r5, r5, #1
 800b042:	f640 70fc 	movw	r0, #4092	; 0xffc
 800b046:	fbb3 f3f5 	udiv	r3, r3, r5
 800b04a:	3301      	adds	r3, #1
 800b04c:	4203      	tst	r3, r0
 800b04e:	d042      	beq.n	800b0d6 <HAL_I2C_Init+0x136>
 800b050:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b054:	430b      	orrs	r3, r1
 800b056:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b058:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b05c:	6811      	ldr	r1, [r2, #0]
 800b05e:	4303      	orrs	r3, r0
 800b060:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800b064:	430b      	orrs	r3, r1
 800b066:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b068:	6891      	ldr	r1, [r2, #8]
 800b06a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b06e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800b072:	4303      	orrs	r3, r0
 800b074:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b078:	430b      	orrs	r3, r1
 800b07a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b07c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b080:	68d1      	ldr	r1, [r2, #12]
 800b082:	4303      	orrs	r3, r0
 800b084:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b088:	430b      	orrs	r3, r1
 800b08a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b08c:	6813      	ldr	r3, [r2, #0]
 800b08e:	f043 0301 	orr.w	r3, r3, #1
 800b092:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b094:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b096:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b098:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b09a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b09e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b0a0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800b0a4:	e780      	b.n	800afa8 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b0a6:	68a0      	ldr	r0, [r4, #8]
 800b0a8:	b950      	cbnz	r0, 800b0c0 <HAL_I2C_Init+0x120>
 800b0aa:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b0ae:	fbb3 f3f5 	udiv	r3, r3, r5
 800b0b2:	3301      	adds	r3, #1
 800b0b4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b0b8:	b17b      	cbz	r3, 800b0da <HAL_I2C_Init+0x13a>
 800b0ba:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b0be:	e7c9      	b.n	800b054 <HAL_I2C_Init+0xb4>
 800b0c0:	2019      	movs	r0, #25
 800b0c2:	4345      	muls	r5, r0
 800b0c4:	fbb3 f3f5 	udiv	r3, r3, r5
 800b0c8:	3301      	adds	r3, #1
 800b0ca:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b0ce:	b123      	cbz	r3, 800b0da <HAL_I2C_Init+0x13a>
 800b0d0:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b0d4:	e7be      	b.n	800b054 <HAL_I2C_Init+0xb4>
 800b0d6:	2304      	movs	r3, #4
 800b0d8:	e7bc      	b.n	800b054 <HAL_I2C_Init+0xb4>
 800b0da:	2301      	movs	r3, #1
 800b0dc:	e7ba      	b.n	800b054 <HAL_I2C_Init+0xb4>
 800b0de:	bf00      	nop
 800b0e0:	000186a0 	.word	0x000186a0
 800b0e4:	001e847f 	.word	0x001e847f
 800b0e8:	003d08ff 	.word	0x003d08ff
 800b0ec:	000f4240 	.word	0x000f4240

0800b0f0 <HAL_I2C_DeInit>:
{
 800b0f0:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800b0f2:	4604      	mov	r4, r0
 800b0f4:	b198      	cbz	r0, 800b11e <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800b0f6:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b0f8:	2324      	movs	r3, #36	; 0x24
 800b0fa:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b0fe:	6813      	ldr	r3, [r2, #0]
 800b100:	f023 0301 	bic.w	r3, r3, #1
 800b104:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800b106:	f7f7 f8d5 	bl	80022b4 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b10a:	2000      	movs	r0, #0
 800b10c:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800b10e:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800b112:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b116:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b118:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800b11c:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b11e:	2001      	movs	r0, #1
 800b120:	e7fc      	b.n	800b11c <HAL_I2C_DeInit+0x2c>
	...

0800b124 <HAL_I2C_Mem_Write>:
{
 800b124:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b128:	4604      	mov	r4, r0
 800b12a:	4699      	mov	r9, r3
 800b12c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b12e:	460f      	mov	r7, r1
 800b130:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b132:	f7fe fd5b 	bl	8009bec <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b136:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b13a:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b13c:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b13e:	d003      	beq.n	800b148 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800b140:	2002      	movs	r0, #2
}
 800b142:	b003      	add	sp, #12
 800b144:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b148:	9000      	str	r0, [sp, #0]
 800b14a:	493c      	ldr	r1, [pc, #240]	; (800b23c <HAL_I2C_Mem_Write+0x118>)
 800b14c:	2319      	movs	r3, #25
 800b14e:	2201      	movs	r2, #1
 800b150:	4620      	mov	r0, r4
 800b152:	f7ff fd63 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800b156:	2800      	cmp	r0, #0
 800b158:	d1f2      	bne.n	800b140 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b15a:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b15e:	2b01      	cmp	r3, #1
 800b160:	d0ee      	beq.n	800b140 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b162:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b164:	2301      	movs	r3, #1
 800b166:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b16a:	6803      	ldr	r3, [r0, #0]
 800b16c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b16e:	bf5e      	ittt	pl
 800b170:	6803      	ldrpl	r3, [r0, #0]
 800b172:	f043 0301 	orrpl.w	r3, r3, #1
 800b176:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b178:	6803      	ldr	r3, [r0, #0]
 800b17a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b17e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b180:	2321      	movs	r3, #33	; 0x21
 800b182:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b186:	2340      	movs	r3, #64	; 0x40
 800b188:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b18c:	2300      	movs	r3, #0
 800b18e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b190:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b192:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b194:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800b198:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b19a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b19c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b19e:	4b28      	ldr	r3, [pc, #160]	; (800b240 <HAL_I2C_Mem_Write+0x11c>)
 800b1a0:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b1a2:	e9cd 6500 	strd	r6, r5, [sp]
 800b1a6:	464b      	mov	r3, r9
 800b1a8:	4642      	mov	r2, r8
 800b1aa:	4639      	mov	r1, r7
 800b1ac:	4620      	mov	r0, r4
 800b1ae:	f7ff fe1d 	bl	800adec <I2C_RequestMemoryWrite>
 800b1b2:	2800      	cmp	r0, #0
 800b1b4:	d02a      	beq.n	800b20c <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b1b6:	2001      	movs	r0, #1
 800b1b8:	e7c3      	b.n	800b142 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b1ba:	f7ff fdf1 	bl	800ada0 <I2C_WaitOnTXEFlagUntilTimeout>
 800b1be:	b140      	cbz	r0, 800b1d2 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b1c0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b1c2:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1c4:	bf01      	itttt	eq
 800b1c6:	6822      	ldreq	r2, [r4, #0]
 800b1c8:	6813      	ldreq	r3, [r2, #0]
 800b1ca:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b1ce:	6013      	streq	r3, [r2, #0]
 800b1d0:	e7f1      	b.n	800b1b6 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b1d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b1d4:	6827      	ldr	r7, [r4, #0]
 800b1d6:	461a      	mov	r2, r3
 800b1d8:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b1dc:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b1de:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b1e0:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b1e2:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800b1e4:	3a01      	subs	r2, #1
 800b1e6:	b292      	uxth	r2, r2
 800b1e8:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b1ea:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b1ec:	1e48      	subs	r0, r1, #1
 800b1ee:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b1f0:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b1f2:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b1f4:	d50a      	bpl.n	800b20c <HAL_I2C_Mem_Write+0xe8>
 800b1f6:	b148      	cbz	r0, 800b20c <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b1f8:	785a      	ldrb	r2, [r3, #1]
 800b1fa:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b1fc:	3302      	adds	r3, #2
 800b1fe:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b200:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b202:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b204:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b206:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b208:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b20a:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b20c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b20e:	462a      	mov	r2, r5
 800b210:	4631      	mov	r1, r6
 800b212:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b214:	2b00      	cmp	r3, #0
 800b216:	d1d0      	bne.n	800b1ba <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b218:	f7ff fd9c 	bl	800ad54 <I2C_WaitOnBTFFlagUntilTimeout>
 800b21c:	2800      	cmp	r0, #0
 800b21e:	d1cf      	bne.n	800b1c0 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b220:	6822      	ldr	r2, [r4, #0]
 800b222:	6813      	ldr	r3, [r2, #0]
 800b224:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b228:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b22a:	2320      	movs	r3, #32
 800b22c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b230:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b234:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800b238:	e783      	b.n	800b142 <HAL_I2C_Mem_Write+0x1e>
 800b23a:	bf00      	nop
 800b23c:	00100002 	.word	0x00100002
 800b240:	ffff0000 	.word	0xffff0000

0800b244 <HAL_I2C_Mem_Read>:
{
 800b244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b248:	4604      	mov	r4, r0
 800b24a:	b087      	sub	sp, #28
 800b24c:	4699      	mov	r9, r3
 800b24e:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b250:	460d      	mov	r5, r1
 800b252:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b254:	f7fe fcca 	bl	8009bec <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b258:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b25c:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b25e:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b260:	d004      	beq.n	800b26c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800b262:	2502      	movs	r5, #2
}
 800b264:	4628      	mov	r0, r5
 800b266:	b007      	add	sp, #28
 800b268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b26c:	9000      	str	r0, [sp, #0]
 800b26e:	4976      	ldr	r1, [pc, #472]	; (800b448 <HAL_I2C_Mem_Read+0x204>)
 800b270:	2319      	movs	r3, #25
 800b272:	2201      	movs	r2, #1
 800b274:	4620      	mov	r0, r4
 800b276:	f7ff fcd1 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800b27a:	2800      	cmp	r0, #0
 800b27c:	d1f1      	bne.n	800b262 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b27e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b282:	2b01      	cmp	r3, #1
 800b284:	d0ed      	beq.n	800b262 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b286:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b288:	2301      	movs	r3, #1
 800b28a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b28e:	6803      	ldr	r3, [r0, #0]
 800b290:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b292:	bf5e      	ittt	pl
 800b294:	6803      	ldrpl	r3, [r0, #0]
 800b296:	f043 0301 	orrpl.w	r3, r3, #1
 800b29a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b29c:	6803      	ldr	r3, [r0, #0]
 800b29e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b2a2:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b2a4:	2322      	movs	r3, #34	; 0x22
 800b2a6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b2aa:	2340      	movs	r3, #64	; 0x40
 800b2ac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b2b0:	2300      	movs	r3, #0
 800b2b2:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b2b4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b2b6:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b2b8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b2bc:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b2be:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b2c0:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b2c2:	4b62      	ldr	r3, [pc, #392]	; (800b44c <HAL_I2C_Mem_Read+0x208>)
 800b2c4:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b2c6:	4629      	mov	r1, r5
 800b2c8:	e9cd 7600 	strd	r7, r6, [sp]
 800b2cc:	464b      	mov	r3, r9
 800b2ce:	4642      	mov	r2, r8
 800b2d0:	4620      	mov	r0, r4
 800b2d2:	f7ff fde3 	bl	800ae9c <I2C_RequestMemoryRead>
 800b2d6:	4605      	mov	r5, r0
 800b2d8:	b108      	cbz	r0, 800b2de <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b2da:	2501      	movs	r5, #1
 800b2dc:	e7c2      	b.n	800b264 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b2de:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2e0:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800b2e2:	b9b2      	cbnz	r2, 800b312 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b2e4:	9002      	str	r0, [sp, #8]
 800b2e6:	695a      	ldr	r2, [r3, #20]
 800b2e8:	9202      	str	r2, [sp, #8]
 800b2ea:	699a      	ldr	r2, [r3, #24]
 800b2ec:	9202      	str	r2, [sp, #8]
 800b2ee:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b2f0:	681a      	ldr	r2, [r3, #0]
 800b2f2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b2f6:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b2f8:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800b450 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800b2fc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b2fe:	2b00      	cmp	r3, #0
 800b300:	d12c      	bne.n	800b35c <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b302:	2220      	movs	r2, #32
 800b304:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b308:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b30c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b310:	e7a8      	b.n	800b264 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b312:	2a01      	cmp	r2, #1
 800b314:	d10a      	bne.n	800b32c <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b316:	681a      	ldr	r2, [r3, #0]
 800b318:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b31c:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b31e:	9003      	str	r0, [sp, #12]
 800b320:	695a      	ldr	r2, [r3, #20]
 800b322:	9203      	str	r2, [sp, #12]
 800b324:	699a      	ldr	r2, [r3, #24]
 800b326:	9203      	str	r2, [sp, #12]
 800b328:	9a03      	ldr	r2, [sp, #12]
 800b32a:	e7e1      	b.n	800b2f0 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b32c:	2a02      	cmp	r2, #2
 800b32e:	d10e      	bne.n	800b34e <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b330:	681a      	ldr	r2, [r3, #0]
 800b332:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b336:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b338:	681a      	ldr	r2, [r3, #0]
 800b33a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b33e:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b340:	9004      	str	r0, [sp, #16]
 800b342:	695a      	ldr	r2, [r3, #20]
 800b344:	9204      	str	r2, [sp, #16]
 800b346:	699b      	ldr	r3, [r3, #24]
 800b348:	9304      	str	r3, [sp, #16]
 800b34a:	9b04      	ldr	r3, [sp, #16]
 800b34c:	e7d4      	b.n	800b2f8 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b34e:	9005      	str	r0, [sp, #20]
 800b350:	695a      	ldr	r2, [r3, #20]
 800b352:	9205      	str	r2, [sp, #20]
 800b354:	699b      	ldr	r3, [r3, #24]
 800b356:	9305      	str	r3, [sp, #20]
 800b358:	9b05      	ldr	r3, [sp, #20]
 800b35a:	e7cd      	b.n	800b2f8 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b35c:	2b03      	cmp	r3, #3
 800b35e:	d856      	bhi.n	800b40e <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b360:	2b01      	cmp	r3, #1
 800b362:	d115      	bne.n	800b390 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b364:	4632      	mov	r2, r6
 800b366:	4639      	mov	r1, r7
 800b368:	4620      	mov	r0, r4
 800b36a:	f7ff fcc4 	bl	800acf6 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b36e:	2800      	cmp	r0, #0
 800b370:	d1b3      	bne.n	800b2da <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b372:	6823      	ldr	r3, [r4, #0]
 800b374:	691a      	ldr	r2, [r3, #16]
 800b376:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b378:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b37a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b37c:	3301      	adds	r3, #1
 800b37e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b380:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b382:	3b01      	subs	r3, #1
 800b384:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b386:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b388:	3b01      	subs	r3, #1
 800b38a:	b29b      	uxth	r3, r3
 800b38c:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b38e:	e7b5      	b.n	800b2fc <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b390:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b392:	9600      	str	r6, [sp, #0]
 800b394:	463b      	mov	r3, r7
 800b396:	f04f 0200 	mov.w	r2, #0
 800b39a:	4641      	mov	r1, r8
 800b39c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b39e:	d119      	bne.n	800b3d4 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b3a0:	f7ff fc3c 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800b3a4:	2800      	cmp	r0, #0
 800b3a6:	d198      	bne.n	800b2da <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b3a8:	6823      	ldr	r3, [r4, #0]
 800b3aa:	681a      	ldr	r2, [r3, #0]
 800b3ac:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b3b0:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3b2:	691a      	ldr	r2, [r3, #16]
 800b3b4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b3b6:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b3b8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b3ba:	1c53      	adds	r3, r2, #1
 800b3bc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b3be:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b3c0:	3b01      	subs	r3, #1
 800b3c2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b3c4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b3c6:	3b01      	subs	r3, #1
 800b3c8:	b29b      	uxth	r3, r3
 800b3ca:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3cc:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3ce:	691b      	ldr	r3, [r3, #16]
 800b3d0:	7053      	strb	r3, [r2, #1]
 800b3d2:	e7d2      	b.n	800b37a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b3d4:	f7ff fc22 	bl	800ac1c <I2C_WaitOnFlagUntilTimeout>
 800b3d8:	2800      	cmp	r0, #0
 800b3da:	f47f af7e 	bne.w	800b2da <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b3de:	6823      	ldr	r3, [r4, #0]
 800b3e0:	681a      	ldr	r2, [r3, #0]
 800b3e2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b3e6:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b3e8:	691a      	ldr	r2, [r3, #16]
 800b3ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b3ec:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b3ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b3f0:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800b3f2:	3301      	adds	r3, #1
 800b3f4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b3f6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b3f8:	3b01      	subs	r3, #1
 800b3fa:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b3fc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b3fe:	3b01      	subs	r3, #1
 800b400:	b29b      	uxth	r3, r3
 800b402:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b404:	4602      	mov	r2, r0
 800b406:	463b      	mov	r3, r7
 800b408:	4641      	mov	r1, r8
 800b40a:	4620      	mov	r0, r4
 800b40c:	e7c8      	b.n	800b3a0 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b40e:	4632      	mov	r2, r6
 800b410:	4639      	mov	r1, r7
 800b412:	4620      	mov	r0, r4
 800b414:	f7ff fc6f 	bl	800acf6 <I2C_WaitOnRXNEFlagUntilTimeout>
 800b418:	2800      	cmp	r0, #0
 800b41a:	f47f af5e 	bne.w	800b2da <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b41e:	6823      	ldr	r3, [r4, #0]
 800b420:	691a      	ldr	r2, [r3, #16]
 800b422:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b424:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800b426:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b428:	1c53      	adds	r3, r2, #1
 800b42a:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800b42c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b42e:	3b01      	subs	r3, #1
 800b430:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b432:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b434:	3b01      	subs	r3, #1
 800b436:	b29b      	uxth	r3, r3
 800b438:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b43a:	6823      	ldr	r3, [r4, #0]
 800b43c:	6959      	ldr	r1, [r3, #20]
 800b43e:	0749      	lsls	r1, r1, #29
 800b440:	f57f af5c 	bpl.w	800b2fc <HAL_I2C_Mem_Read+0xb8>
 800b444:	e7c3      	b.n	800b3ce <HAL_I2C_Mem_Read+0x18a>
 800b446:	bf00      	nop
 800b448:	00100002 	.word	0x00100002
 800b44c:	ffff0000 	.word	0xffff0000
 800b450:	00010004 	.word	0x00010004

0800b454 <HAL_I2C_GetState>:
  return hi2c->State;
 800b454:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800b458:	4770      	bx	lr

0800b45a <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b45a:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b45c:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b460:	01d2      	lsls	r2, r2, #7
 800b462:	3284      	adds	r2, #132	; 0x84
 800b464:	1883      	adds	r3, r0, r2
{
 800b466:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b46a:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b46c:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b46e:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b470:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b474:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b478:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b47a:	68c5      	ldr	r5, [r0, #12]
 800b47c:	f10c 0701 	add.w	r7, ip, #1
 800b480:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b484:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b488:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b48a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b48c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b490:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b492:	68c5      	ldr	r5, [r0, #12]
 800b494:	68ce      	ldr	r6, [r1, #12]
 800b496:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800b49a:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b49c:	689d      	ldr	r5, [r3, #8]
 800b49e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b4a2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b4a4:	68c7      	ldr	r7, [r0, #12]
 800b4a6:	688d      	ldr	r5, [r1, #8]
 800b4a8:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800b4ac:	3501      	adds	r5, #1
 800b4ae:	443d      	add	r5, r7
 800b4b0:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800b4b4:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4b6:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4b8:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b4ba:	f025 0507 	bic.w	r5, r5, #7
 800b4be:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4c0:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b4c4:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4c6:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b4c8:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b4cc:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b4d0:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b4d4:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800b4d8:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800b4dc:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800b4e0:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800b4e4:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b4e6:	695d      	ldr	r5, [r3, #20]
 800b4e8:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800b4ec:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b4ee:	694d      	ldr	r5, [r1, #20]
 800b4f0:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b4f2:	69dd      	ldr	r5, [r3, #28]
 800b4f4:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800b4f8:	f025 0507 	bic.w	r5, r5, #7
 800b4fc:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b4fe:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800b502:	433d      	orrs	r5, r7
 800b504:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b506:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b508:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b50a:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b50e:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b510:	b31e      	cbz	r6, 800b55a <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b512:	2e01      	cmp	r6, #1
 800b514:	d023      	beq.n	800b55e <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b516:	1eb5      	subs	r5, r6, #2
 800b518:	2d02      	cmp	r5, #2
 800b51a:	d922      	bls.n	800b562 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800b51c:	2e07      	cmp	r6, #7
 800b51e:	bf0c      	ite	eq
 800b520:	2502      	moveq	r5, #2
 800b522:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b524:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800b526:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800b52a:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b52c:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b530:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b532:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b534:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b536:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b538:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b53a:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800b53e:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b540:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800b542:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800b546:	f024 0407 	bic.w	r4, r4, #7
 800b54a:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b54c:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b54e:	5883      	ldr	r3, [r0, r2]
 800b550:	f043 0301 	orr.w	r3, r3, #1
 800b554:	5083      	str	r3, [r0, r2]
}
 800b556:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800b55a:	2504      	movs	r5, #4
 800b55c:	e7e2      	b.n	800b524 <LTDC_SetConfig+0xca>
    tmp = 3U;
 800b55e:	2503      	movs	r5, #3
 800b560:	e7e0      	b.n	800b524 <LTDC_SetConfig+0xca>
    tmp = 2U;
 800b562:	2502      	movs	r5, #2
 800b564:	e7de      	b.n	800b524 <LTDC_SetConfig+0xca>
	...

0800b568 <HAL_LTDC_Init>:
{
 800b568:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800b56a:	4604      	mov	r4, r0
 800b56c:	2800      	cmp	r0, #0
 800b56e:	d063      	beq.n	800b638 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b570:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b574:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b578:	b91b      	cbnz	r3, 800b582 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800b57a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b57e:	f7f6 feb7 	bl	80022f0 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b582:	2302      	movs	r3, #2
 800b584:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b588:	6823      	ldr	r3, [r4, #0]
 800b58a:	699a      	ldr	r2, [r3, #24]
 800b58c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800b590:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b592:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800b596:	4302      	orrs	r2, r0
 800b598:	68e0      	ldr	r0, [r4, #12]
 800b59a:	6999      	ldr	r1, [r3, #24]
 800b59c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b59e:	6920      	ldr	r0, [r4, #16]
 800b5a0:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b5a2:	430a      	orrs	r2, r1
 800b5a4:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b5a6:	689a      	ldr	r2, [r3, #8]
 800b5a8:	4924      	ldr	r1, [pc, #144]	; (800b63c <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b5aa:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b5ac:	400a      	ands	r2, r1
 800b5ae:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b5b0:	689a      	ldr	r2, [r3, #8]
 800b5b2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5b6:	69a0      	ldr	r0, [r4, #24]
 800b5b8:	4302      	orrs	r2, r0
 800b5ba:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b5bc:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b5be:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b5c0:	400a      	ands	r2, r1
 800b5c2:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b5c4:	68da      	ldr	r2, [r3, #12]
 800b5c6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5ca:	6a20      	ldr	r0, [r4, #32]
 800b5cc:	4302      	orrs	r2, r0
 800b5ce:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b5d0:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b5d2:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b5d4:	400a      	ands	r2, r1
 800b5d6:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b5d8:	691a      	ldr	r2, [r3, #16]
 800b5da:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b5de:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b5e0:	4302      	orrs	r2, r0
 800b5e2:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b5e4:	695a      	ldr	r2, [r3, #20]
 800b5e6:	4011      	ands	r1, r2
 800b5e8:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b5ea:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b5ec:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b5ee:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b5f2:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b5f4:	430a      	orrs	r2, r1
 800b5f6:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b5f8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b5fa:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b5fe:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b602:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800b606:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b608:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800b60a:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b60e:	430a      	orrs	r2, r1
 800b610:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b614:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b618:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b61a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b61c:	f042 0206 	orr.w	r2, r2, #6
 800b620:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800b622:	699a      	ldr	r2, [r3, #24]
 800b624:	f042 0201 	orr.w	r2, r2, #1
 800b628:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b62a:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b62c:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b62e:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b632:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800b636:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b638:	2001      	movs	r0, #1
 800b63a:	e7fc      	b.n	800b636 <HAL_LTDC_Init+0xce>
 800b63c:	f000f800 	.word	0xf000f800

0800b640 <HAL_LTDC_ErrorCallback>:
 800b640:	4770      	bx	lr

0800b642 <HAL_LTDC_LineEventCallback>:
 800b642:	4770      	bx	lr

0800b644 <HAL_LTDC_ReloadEventCallback>:
 800b644:	4770      	bx	lr

0800b646 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b646:	6803      	ldr	r3, [r0, #0]
{
 800b648:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b64a:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b64c:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b64e:	0772      	lsls	r2, r6, #29
{
 800b650:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b652:	d514      	bpl.n	800b67e <HAL_LTDC_IRQHandler+0x38>
 800b654:	0769      	lsls	r1, r5, #29
 800b656:	d512      	bpl.n	800b67e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b658:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b65a:	f022 0204 	bic.w	r2, r2, #4
 800b65e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b660:	2204      	movs	r2, #4
 800b662:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b664:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b668:	f043 0301 	orr.w	r3, r3, #1
 800b66c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b670:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b672:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b676:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b67a:	f7ff ffe1 	bl	800b640 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b67e:	07b2      	lsls	r2, r6, #30
 800b680:	d516      	bpl.n	800b6b0 <HAL_LTDC_IRQHandler+0x6a>
 800b682:	07ab      	lsls	r3, r5, #30
 800b684:	d514      	bpl.n	800b6b0 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b686:	6823      	ldr	r3, [r4, #0]
 800b688:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b68a:	f022 0202 	bic.w	r2, r2, #2
 800b68e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b690:	2202      	movs	r2, #2
 800b692:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b694:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b698:	4313      	orrs	r3, r2
 800b69a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b69e:	2304      	movs	r3, #4
 800b6a0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b6a4:	2300      	movs	r3, #0
 800b6a6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b6aa:	4620      	mov	r0, r4
 800b6ac:	f7ff ffc8 	bl	800b640 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b6b0:	07f0      	lsls	r0, r6, #31
 800b6b2:	d510      	bpl.n	800b6d6 <HAL_LTDC_IRQHandler+0x90>
 800b6b4:	07e9      	lsls	r1, r5, #31
 800b6b6:	d50e      	bpl.n	800b6d6 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b6b8:	6823      	ldr	r3, [r4, #0]
 800b6ba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b6bc:	f022 0201 	bic.w	r2, r2, #1
 800b6c0:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b6c2:	2201      	movs	r2, #1
 800b6c4:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b6c6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6c8:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b6cc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b6d0:	4620      	mov	r0, r4
 800b6d2:	f7ff ffb6 	bl	800b642 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b6d6:	0732      	lsls	r2, r6, #28
 800b6d8:	d511      	bpl.n	800b6fe <HAL_LTDC_IRQHandler+0xb8>
 800b6da:	072b      	lsls	r3, r5, #28
 800b6dc:	d50f      	bpl.n	800b6fe <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b6de:	6823      	ldr	r3, [r4, #0]
 800b6e0:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b6e2:	f022 0208 	bic.w	r2, r2, #8
 800b6e6:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b6e8:	2208      	movs	r2, #8
 800b6ea:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800b6ec:	2301      	movs	r3, #1
 800b6ee:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b6f2:	2300      	movs	r3, #0
 800b6f4:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b6f8:	4620      	mov	r0, r4
 800b6fa:	f7ff ffa3 	bl	800b644 <HAL_LTDC_ReloadEventCallback>
}
 800b6fe:	bd70      	pop	{r4, r5, r6, pc}

0800b700 <HAL_LTDC_ConfigLayer>:
{
 800b700:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800b704:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b708:	2b01      	cmp	r3, #1
{
 800b70a:	4606      	mov	r6, r0
 800b70c:	460f      	mov	r7, r1
 800b70e:	4694      	mov	ip, r2
 800b710:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b714:	d01f      	beq.n	800b756 <HAL_LTDC_ConfigLayer+0x56>
 800b716:	f04f 0801 	mov.w	r8, #1
 800b71a:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b71e:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b722:	2434      	movs	r4, #52	; 0x34
 800b724:	460d      	mov	r5, r1
 800b726:	fb04 6402 	mla	r4, r4, r2, r6
 800b72a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b72c:	3438      	adds	r4, #56	; 0x38
 800b72e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b730:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b732:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b734:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b736:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b738:	682b      	ldr	r3, [r5, #0]
 800b73a:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800b73c:	4630      	mov	r0, r6
 800b73e:	4662      	mov	r2, ip
 800b740:	4639      	mov	r1, r7
 800b742:	f7ff fe8a 	bl	800b45a <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b746:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800b748:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b74a:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800b74e:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b752:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800b756:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800b75c <HAL_LTDC_SetPitch>:
{
 800b75c:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800b75e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b762:	2b01      	cmp	r3, #1
 800b764:	f04f 0302 	mov.w	r3, #2
 800b768:	d02c      	beq.n	800b7c4 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800b76a:	2434      	movs	r4, #52	; 0x34
 800b76c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b770:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800b774:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b776:	b33c      	cbz	r4, 800b7c8 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b778:	2c01      	cmp	r4, #1
 800b77a:	d027      	beq.n	800b7cc <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b77c:	1ea5      	subs	r5, r4, #2
 800b77e:	429d      	cmp	r5, r3
 800b780:	d902      	bls.n	800b788 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800b782:	2c07      	cmp	r4, #7
 800b784:	bf18      	it	ne
 800b786:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800b788:	6804      	ldr	r4, [r0, #0]
 800b78a:	01d2      	lsls	r2, r2, #7
 800b78c:	3284      	adds	r2, #132	; 0x84
 800b78e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800b790:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800b792:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800b794:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800b798:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800b79c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800b79e:	4c0c      	ldr	r4, [pc, #48]	; (800b7d0 <HAL_LTDC_SetPitch+0x74>)
 800b7a0:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800b7a2:	f045 0501 	orr.w	r5, r5, #1
 800b7a6:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800b7a8:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800b7aa:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800b7ae:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800b7b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b7b2:	f043 0301 	orr.w	r3, r3, #1
 800b7b6:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800b7b8:	2301      	movs	r3, #1
 800b7ba:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800b7be:	2300      	movs	r3, #0
 800b7c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800b7c4:	4618      	mov	r0, r3
 800b7c6:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800b7c8:	2304      	movs	r3, #4
 800b7ca:	e7dd      	b.n	800b788 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800b7cc:	2303      	movs	r3, #3
 800b7ce:	e7db      	b.n	800b788 <HAL_LTDC_SetPitch+0x2c>
 800b7d0:	40016800 	.word	0x40016800

0800b7d4 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800b7d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800b7d6:	2300      	movs	r3, #0
 800b7d8:	9301      	str	r3, [sp, #4]
 800b7da:	4b18      	ldr	r3, [pc, #96]	; (800b83c <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b7dc:	4d18      	ldr	r5, [pc, #96]	; (800b840 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800b7de:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800b7e0:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800b7e4:	641a      	str	r2, [r3, #64]	; 0x40
 800b7e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800b7e8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800b7ec:	9301      	str	r3, [sp, #4]
 800b7ee:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800b7f0:	4b14      	ldr	r3, [pc, #80]	; (800b844 <HAL_PWREx_EnableOverDrive+0x70>)
 800b7f2:	2201      	movs	r2, #1
 800b7f4:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800b7f6:	f7fe f9f9 	bl	8009bec <HAL_GetTick>
 800b7fa:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800b7fc:	686b      	ldr	r3, [r5, #4]
 800b7fe:	03da      	lsls	r2, r3, #15
 800b800:	d50b      	bpl.n	800b81a <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b802:	4b10      	ldr	r3, [pc, #64]	; (800b844 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b804:	4d0e      	ldr	r5, [pc, #56]	; (800b840 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800b806:	2201      	movs	r2, #1
 800b808:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 800b80a:	f7fe f9ef 	bl	8009bec <HAL_GetTick>
 800b80e:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800b810:	686b      	ldr	r3, [r5, #4]
 800b812:	039b      	lsls	r3, r3, #14
 800b814:	d50a      	bpl.n	800b82c <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800b816:	2000      	movs	r0, #0
 800b818:	e006      	b.n	800b828 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b81a:	f7fe f9e7 	bl	8009bec <HAL_GetTick>
 800b81e:	1b00      	subs	r0, r0, r4
 800b820:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b824:	d9ea      	bls.n	800b7fc <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800b826:	2003      	movs	r0, #3
}
 800b828:	b003      	add	sp, #12
 800b82a:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800b82c:	f7fe f9de 	bl	8009bec <HAL_GetTick>
 800b830:	1b00      	subs	r0, r0, r4
 800b832:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800b836:	d9eb      	bls.n	800b810 <HAL_PWREx_EnableOverDrive+0x3c>
 800b838:	e7f5      	b.n	800b826 <HAL_PWREx_EnableOverDrive+0x52>
 800b83a:	bf00      	nop
 800b83c:	40023800 	.word	0x40023800
 800b840:	40007000 	.word	0x40007000
 800b844:	420e0000 	.word	0x420e0000

0800b848 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800b848:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800b84c:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800b84e:	b13e      	cbz	r6, 800b860 <QSPI_Config+0x18>
 800b850:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800b854:	bf1f      	itttt	ne
 800b856:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800b858:	6804      	ldrne	r4, [r0, #0]
 800b85a:	f103 33ff 	addne.w	r3, r3, #4294967295
 800b85e:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800b860:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b864:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800b868:	f1b9 0f00 	cmp.w	r9, #0
 800b86c:	d04f      	beq.n	800b90e <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b86e:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800b870:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b872:	f8d1 a000 	ldr.w	sl, [r1]
 800b876:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 800b87a:	ea46 0909 	orr.w	r9, r6, r9
 800b87e:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800b882:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800b886:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800b88a:	b335      	cbz	r5, 800b8da <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800b88c:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b88e:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800b890:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b892:	ea49 0505 	orr.w	r5, r9, r5
 800b896:	b19f      	cbz	r7, 800b8c0 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b898:	ea4a 0307 	orr.w	r3, sl, r7
 800b89c:	4323      	orrs	r3, r4
 800b89e:	ea43 0308 	orr.w	r3, r3, r8
 800b8a2:	68cc      	ldr	r4, [r1, #12]
 800b8a4:	ea43 030e 	orr.w	r3, r3, lr
 800b8a8:	4333      	orrs	r3, r6
 800b8aa:	4323      	orrs	r3, r4
 800b8ac:	ea43 030c 	orr.w	r3, r3, ip
 800b8b0:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b8b2:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8b6:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b8b8:	d00d      	beq.n	800b8d6 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800b8ba:	684b      	ldr	r3, [r1, #4]
 800b8bc:	6183      	str	r3, [r0, #24]
 800b8be:	e00a      	b.n	800b8d6 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8c0:	ea4a 0304 	orr.w	r3, sl, r4
 800b8c4:	ea43 0308 	orr.w	r3, r3, r8
 800b8c8:	ea43 030e 	orr.w	r3, r3, lr
 800b8cc:	4333      	orrs	r3, r6
 800b8ce:	ea43 030c 	orr.w	r3, r3, ip
 800b8d2:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8d4:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800b8d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b8da:	b16f      	cbz	r7, 800b8f8 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8dc:	ea4a 0307 	orr.w	r3, sl, r7
 800b8e0:	4323      	orrs	r3, r4
 800b8e2:	ea43 0308 	orr.w	r3, r3, r8
 800b8e6:	68cc      	ldr	r4, [r1, #12]
 800b8e8:	ea43 030e 	orr.w	r3, r3, lr
 800b8ec:	4323      	orrs	r3, r4
 800b8ee:	ea43 030c 	orr.w	r3, r3, ip
 800b8f2:	ea43 0309 	orr.w	r3, r3, r9
 800b8f6:	e7dc      	b.n	800b8b2 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b8f8:	ea4a 0304 	orr.w	r3, sl, r4
 800b8fc:	ea43 0308 	orr.w	r3, r3, r8
 800b900:	ea43 030e 	orr.w	r3, r3, lr
 800b904:	ea43 030c 	orr.w	r3, r3, ip
 800b908:	ea43 0309 	orr.w	r3, r3, r9
 800b90c:	e7e2      	b.n	800b8d4 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800b90e:	b345      	cbz	r5, 800b962 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800b910:	6804      	ldr	r4, [r0, #0]
 800b912:	688b      	ldr	r3, [r1, #8]
 800b914:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b916:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b91a:	694e      	ldr	r6, [r1, #20]
 800b91c:	6908      	ldr	r0, [r1, #16]
 800b91e:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800b922:	ea43 0502 	orr.w	r5, r3, r2
 800b926:	04b6      	lsls	r6, r6, #18
 800b928:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b92c:	b187      	cbz	r7, 800b950 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b92e:	4338      	orrs	r0, r7
 800b930:	ea40 0008 	orr.w	r0, r0, r8
 800b934:	4303      	orrs	r3, r0
 800b936:	68c8      	ldr	r0, [r1, #12]
 800b938:	ea43 030c 	orr.w	r3, r3, ip
 800b93c:	4303      	orrs	r3, r0
 800b93e:	4333      	orrs	r3, r6
 800b940:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b942:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b946:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800b948:	d0c5      	beq.n	800b8d6 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800b94a:	684b      	ldr	r3, [r1, #4]
 800b94c:	61a3      	str	r3, [r4, #24]
 800b94e:	e7c2      	b.n	800b8d6 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b950:	ea40 0008 	orr.w	r0, r0, r8
 800b954:	4303      	orrs	r3, r0
 800b956:	ea43 030c 	orr.w	r3, r3, ip
 800b95a:	4333      	orrs	r3, r6
 800b95c:	432b      	orrs	r3, r5
 800b95e:	6163      	str	r3, [r4, #20]
 800b960:	e7b9      	b.n	800b8d6 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800b962:	b17f      	cbz	r7, 800b984 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b964:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800b966:	6800      	ldr	r0, [r0, #0]
 800b968:	ea46 0307 	orr.w	r3, r6, r7
 800b96c:	4313      	orrs	r3, r2
 800b96e:	4323      	orrs	r3, r4
 800b970:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800b972:	4323      	orrs	r3, r4
 800b974:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800b976:	4323      	orrs	r3, r4
 800b978:	68cc      	ldr	r4, [r1, #12]
 800b97a:	4323      	orrs	r3, r4
 800b97c:	694c      	ldr	r4, [r1, #20]
 800b97e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800b982:	e796      	b.n	800b8b2 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800b984:	2e00      	cmp	r6, #0
 800b986:	d0a6      	beq.n	800b8d6 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800b988:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800b98a:	6800      	ldr	r0, [r0, #0]
 800b98c:	4333      	orrs	r3, r6
 800b98e:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800b990:	431a      	orrs	r2, r3
 800b992:	4332      	orrs	r2, r6
 800b994:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800b996:	694b      	ldr	r3, [r1, #20]
 800b998:	4332      	orrs	r2, r6
 800b99a:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800b99e:	6142      	str	r2, [r0, #20]
}
 800b9a0:	e799      	b.n	800b8d6 <QSPI_Config+0x8e>

0800b9a2 <QSPI_WaitFlagStateUntilTimeout>:
{
 800b9a2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9a6:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800b9aa:	4604      	mov	r4, r0
 800b9ac:	460e      	mov	r6, r1
 800b9ae:	4615      	mov	r5, r2
 800b9b0:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800b9b2:	6822      	ldr	r2, [r4, #0]
 800b9b4:	6893      	ldr	r3, [r2, #8]
 800b9b6:	4233      	tst	r3, r6
 800b9b8:	bf14      	ite	ne
 800b9ba:	2301      	movne	r3, #1
 800b9bc:	2300      	moveq	r3, #0
 800b9be:	42ab      	cmp	r3, r5
 800b9c0:	d101      	bne.n	800b9c6 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800b9c2:	2000      	movs	r0, #0
 800b9c4:	e012      	b.n	800b9ec <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800b9c6:	f1b8 3fff 	cmp.w	r8, #4294967295
 800b9ca:	d0f3      	beq.n	800b9b4 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b9cc:	f7fe f90e 	bl	8009bec <HAL_GetTick>
 800b9d0:	1bc0      	subs	r0, r0, r7
 800b9d2:	4540      	cmp	r0, r8
 800b9d4:	d802      	bhi.n	800b9dc <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800b9d6:	f1b8 0f00 	cmp.w	r8, #0
 800b9da:	d1ea      	bne.n	800b9b2 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800b9dc:	2304      	movs	r3, #4
 800b9de:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800b9e2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b9e4:	f043 0301 	orr.w	r3, r3, #1
 800b9e8:	6463      	str	r3, [r4, #68]	; 0x44
 800b9ea:	2001      	movs	r0, #1
}
 800b9ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b9f0 <HAL_QSPI_Init>:
{
 800b9f0:	b530      	push	{r4, r5, lr}
 800b9f2:	b085      	sub	sp, #20
 800b9f4:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800b9f6:	f7fe f8f9 	bl	8009bec <HAL_GetTick>
 800b9fa:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800b9fc:	2c00      	cmp	r4, #0
 800b9fe:	d047      	beq.n	800ba90 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800ba00:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800ba04:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800ba08:	b94a      	cbnz	r2, 800ba1e <HAL_QSPI_Init+0x2e>
 800ba0a:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800ba0c:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800ba10:	4620      	mov	r0, r4
 800ba12:	f7f6 fc9f 	bl	8002354 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800ba16:	f241 3288 	movw	r2, #5000	; 0x1388
 800ba1a:	9b03      	ldr	r3, [sp, #12]
 800ba1c:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800ba1e:	6820      	ldr	r0, [r4, #0]
 800ba20:	68a1      	ldr	r1, [r4, #8]
 800ba22:	6802      	ldr	r2, [r0, #0]
 800ba24:	3901      	subs	r1, #1
 800ba26:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800ba2a:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800ba2e:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800ba30:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800ba32:	9200      	str	r2, [sp, #0]
 800ba34:	2120      	movs	r1, #32
 800ba36:	2200      	movs	r2, #0
 800ba38:	4620      	mov	r0, r4
 800ba3a:	f7ff ffb2 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800ba3e:	bb10      	cbnz	r0, 800ba86 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800ba40:	69e5      	ldr	r5, [r4, #28]
 800ba42:	68e3      	ldr	r3, [r4, #12]
 800ba44:	6822      	ldr	r2, [r4, #0]
 800ba46:	432b      	orrs	r3, r5
 800ba48:	6a25      	ldr	r5, [r4, #32]
 800ba4a:	6811      	ldr	r1, [r2, #0]
 800ba4c:	432b      	orrs	r3, r5
 800ba4e:	6865      	ldr	r5, [r4, #4]
 800ba50:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800ba54:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800ba58:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800ba5c:	430b      	orrs	r3, r1
 800ba5e:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800ba60:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800ba64:	430b      	orrs	r3, r1
 800ba66:	6921      	ldr	r1, [r4, #16]
 800ba68:	6855      	ldr	r5, [r2, #4]
 800ba6a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800ba6e:	4909      	ldr	r1, [pc, #36]	; (800ba94 <HAL_QSPI_Init+0xa4>)
 800ba70:	4029      	ands	r1, r5
 800ba72:	430b      	orrs	r3, r1
 800ba74:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800ba76:	6813      	ldr	r3, [r2, #0]
 800ba78:	f043 0301 	orr.w	r3, r3, #1
 800ba7c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800ba7e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800ba80:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800ba82:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800ba86:	2300      	movs	r3, #0
 800ba88:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800ba8c:	b005      	add	sp, #20
 800ba8e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800ba90:	2001      	movs	r0, #1
 800ba92:	e7fb      	b.n	800ba8c <HAL_QSPI_Init+0x9c>
 800ba94:	ffe0f8fe 	.word	0xffe0f8fe

0800ba98 <HAL_QSPI_DeInit>:
{
 800ba98:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800ba9a:	4604      	mov	r4, r0
 800ba9c:	b168      	cbz	r0, 800baba <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800ba9e:	6802      	ldr	r2, [r0, #0]
 800baa0:	6813      	ldr	r3, [r2, #0]
 800baa2:	f023 0301 	bic.w	r3, r3, #1
 800baa6:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800baa8:	f7f6 fcae 	bl	8002408 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800baac:	2000      	movs	r0, #0
 800baae:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800bab0:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bab4:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800bab8:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800baba:	2001      	movs	r0, #1
 800babc:	e7fc      	b.n	800bab8 <HAL_QSPI_DeInit+0x20>

0800babe <HAL_QSPI_Command>:
{
 800babe:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bac2:	4604      	mov	r4, r0
 800bac4:	b085      	sub	sp, #20
 800bac6:	4617      	mov	r7, r2
 800bac8:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800baca:	f7fe f88f 	bl	8009bec <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bace:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bad2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bad4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bad6:	d034      	beq.n	800bb42 <HAL_QSPI_Command+0x84>
 800bad8:	2201      	movs	r2, #1
 800bada:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bade:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bae2:	2a01      	cmp	r2, #1
 800bae4:	fa5f f882 	uxtb.w	r8, r2
 800bae8:	f04f 0602 	mov.w	r6, #2
 800baec:	d127      	bne.n	800bb3e <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800baee:	2200      	movs	r2, #0
 800baf0:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800baf2:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800baf4:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800baf8:	9700      	str	r7, [sp, #0]
 800bafa:	2120      	movs	r1, #32
 800bafc:	4620      	mov	r0, r4
 800bafe:	f7ff ff50 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bb02:	4605      	mov	r5, r0
 800bb04:	b9a0      	cbnz	r0, 800bb30 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bb06:	4602      	mov	r2, r0
 800bb08:	4649      	mov	r1, r9
 800bb0a:	4620      	mov	r0, r4
 800bb0c:	f7ff fe9c 	bl	800b848 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800bb10:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800bb14:	9b03      	ldr	r3, [sp, #12]
 800bb16:	b94a      	cbnz	r2, 800bb2c <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bb18:	9700      	str	r7, [sp, #0]
 800bb1a:	4642      	mov	r2, r8
 800bb1c:	4631      	mov	r1, r6
 800bb1e:	4620      	mov	r0, r4
 800bb20:	f7ff ff3f 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bb24:	4605      	mov	r5, r0
 800bb26:	b918      	cbnz	r0, 800bb30 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bb28:	6823      	ldr	r3, [r4, #0]
 800bb2a:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800bb2c:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bb30:	2300      	movs	r3, #0
 800bb32:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bb36:	4628      	mov	r0, r5
 800bb38:	b005      	add	sp, #20
 800bb3a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800bb3e:	4635      	mov	r5, r6
 800bb40:	e7f6      	b.n	800bb30 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800bb42:	2502      	movs	r5, #2
 800bb44:	e7f7      	b.n	800bb36 <HAL_QSPI_Command+0x78>

0800bb46 <HAL_QSPI_AutoPolling>:
{
 800bb46:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800bb4a:	4604      	mov	r4, r0
 800bb4c:	4615      	mov	r5, r2
 800bb4e:	461e      	mov	r6, r3
 800bb50:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800bb52:	f7fe f84b 	bl	8009bec <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bb56:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bb5a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bb5c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bb5e:	d040      	beq.n	800bbe2 <HAL_QSPI_AutoPolling+0x9c>
 800bb60:	2201      	movs	r2, #1
 800bb62:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bb66:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bb6a:	2a01      	cmp	r2, #1
 800bb6c:	b2d7      	uxtb	r7, r2
 800bb6e:	d136      	bne.n	800bbde <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800bb70:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bb72:	2200      	movs	r2, #0
 800bb74:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bb76:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800bb78:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bb7c:	9600      	str	r6, [sp, #0]
 800bb7e:	2120      	movs	r1, #32
 800bb80:	4620      	mov	r0, r4
 800bb82:	f7ff ff0e 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bb86:	bb20      	cbnz	r0, 800bbd2 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800bb88:	6821      	ldr	r1, [r4, #0]
 800bb8a:	682a      	ldr	r2, [r5, #0]
 800bb8c:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800bb8e:	686a      	ldr	r2, [r5, #4]
 800bb90:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800bb92:	68aa      	ldr	r2, [r5, #8]
 800bb94:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800bb96:	680a      	ldr	r2, [r1, #0]
 800bb98:	6928      	ldr	r0, [r5, #16]
 800bb9a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800bb9e:	4302      	orrs	r2, r0
 800bba0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800bba4:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800bba6:	68ea      	ldr	r2, [r5, #12]
 800bba8:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800bbac:	4641      	mov	r1, r8
 800bbae:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800bbb2:	4620      	mov	r0, r4
 800bbb4:	f7ff fe48 	bl	800b848 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800bbb8:	9b03      	ldr	r3, [sp, #12]
 800bbba:	9600      	str	r6, [sp, #0]
 800bbbc:	463a      	mov	r2, r7
 800bbbe:	2108      	movs	r1, #8
 800bbc0:	4620      	mov	r0, r4
 800bbc2:	f7ff feee 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bbc6:	b920      	cbnz	r0, 800bbd2 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800bbc8:	6823      	ldr	r3, [r4, #0]
 800bbca:	2208      	movs	r2, #8
 800bbcc:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800bbce:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bbd2:	2300      	movs	r3, #0
 800bbd4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bbd8:	b004      	add	sp, #16
 800bbda:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800bbde:	2002      	movs	r0, #2
 800bbe0:	e7f7      	b.n	800bbd2 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800bbe2:	2002      	movs	r0, #2
 800bbe4:	e7f8      	b.n	800bbd8 <HAL_QSPI_AutoPolling+0x92>

0800bbe6 <HAL_QSPI_MemoryMapped>:
{
 800bbe6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bbe8:	4604      	mov	r4, r0
 800bbea:	4616      	mov	r6, r2
 800bbec:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bbee:	f7fd fffd 	bl	8009bec <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bbf2:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bbf6:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bbf8:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bbfa:	d032      	beq.n	800bc62 <HAL_QSPI_MemoryMapped+0x7c>
 800bbfc:	2201      	movs	r2, #1
 800bbfe:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bc02:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bc06:	2a01      	cmp	r2, #1
 800bc08:	d129      	bne.n	800bc5e <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bc0a:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bc0c:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bc0e:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bc10:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bc14:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800bc16:	9100      	str	r1, [sp, #0]
 800bc18:	4620      	mov	r0, r4
 800bc1a:	2120      	movs	r1, #32
 800bc1c:	f7ff fec1 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bc20:	4605      	mov	r5, r0
 800bc22:	b9b0      	cbnz	r0, 800bc52 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bc24:	6823      	ldr	r3, [r4, #0]
 800bc26:	6872      	ldr	r2, [r6, #4]
 800bc28:	6818      	ldr	r0, [r3, #0]
 800bc2a:	f020 0008 	bic.w	r0, r0, #8
 800bc2e:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bc30:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bc32:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bc34:	d107      	bne.n	800bc46 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800bc36:	6832      	ldr	r2, [r6, #0]
 800bc38:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800bc3a:	2210      	movs	r2, #16
 800bc3c:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800bc3e:	681a      	ldr	r2, [r3, #0]
 800bc40:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800bc44:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800bc46:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800bc4a:	4639      	mov	r1, r7
 800bc4c:	4620      	mov	r0, r4
 800bc4e:	f7ff fdfb 	bl	800b848 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800bc52:	2300      	movs	r3, #0
 800bc54:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bc58:	4628      	mov	r0, r5
 800bc5a:	b003      	add	sp, #12
 800bc5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800bc5e:	2502      	movs	r5, #2
 800bc60:	e7f7      	b.n	800bc52 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800bc62:	2502      	movs	r5, #2
 800bc64:	e7f8      	b.n	800bc58 <HAL_QSPI_MemoryMapped+0x72>

0800bc66 <HAL_QSPI_Abort>:
{
 800bc66:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bc68:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bc6a:	f7fd ffbf 	bl	8009bec <HAL_GetTick>
 800bc6e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800bc70:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 800bc74:	f010 0002 	ands.w	r0, r0, #2
 800bc78:	d03a      	beq.n	800bcf0 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 800bc7a:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bc7c:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800bc7e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bc82:	680a      	ldr	r2, [r1, #0]
 800bc84:	f012 0204 	ands.w	r2, r2, #4
 800bc88:	d034      	beq.n	800bcf4 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bc8a:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bc8c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bc8e:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bc90:	f022 0204 	bic.w	r2, r2, #4
 800bc94:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bc96:	f7fe f8f9 	bl	8009e8c <HAL_DMA_Abort>
      if(status != HAL_OK)
 800bc9a:	9b03      	ldr	r3, [sp, #12]
 800bc9c:	b118      	cbz	r0, 800bca6 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800bc9e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bca0:	f042 0204 	orr.w	r2, r2, #4
 800bca4:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800bca6:	6822      	ldr	r2, [r4, #0]
 800bca8:	6891      	ldr	r1, [r2, #8]
 800bcaa:	0689      	lsls	r1, r1, #26
 800bcac:	d51d      	bpl.n	800bcea <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bcae:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bcb0:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bcb2:	f041 0102 	orr.w	r1, r1, #2
 800bcb6:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bcb8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bcba:	9200      	str	r2, [sp, #0]
 800bcbc:	2102      	movs	r1, #2
 800bcbe:	2201      	movs	r2, #1
 800bcc0:	4620      	mov	r0, r4
 800bcc2:	f7ff fe6e 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bcc6:	9b03      	ldr	r3, [sp, #12]
 800bcc8:	b990      	cbnz	r0, 800bcf0 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bcca:	6822      	ldr	r2, [r4, #0]
 800bccc:	2102      	movs	r1, #2
 800bcce:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bcd0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bcd2:	9200      	str	r2, [sp, #0]
 800bcd4:	2120      	movs	r1, #32
 800bcd6:	4602      	mov	r2, r0
 800bcd8:	4620      	mov	r0, r4
 800bcda:	f7ff fe62 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bcde:	b938      	cbnz	r0, 800bcf0 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800bce0:	6822      	ldr	r2, [r4, #0]
 800bce2:	6953      	ldr	r3, [r2, #20]
 800bce4:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800bce8:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800bcea:	2301      	movs	r3, #1
 800bcec:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800bcf0:	b004      	add	sp, #16
 800bcf2:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 800bcf4:	4610      	mov	r0, r2
 800bcf6:	e7d6      	b.n	800bca6 <HAL_QSPI_Abort+0x40>

0800bcf8 <HAL_QSPI_Transmit>:
{
 800bcf8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bcfa:	4604      	mov	r4, r0
 800bcfc:	b085      	sub	sp, #20
 800bcfe:	4616      	mov	r6, r2
 800bd00:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bd02:	f7fd ff73 	bl	8009bec <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bd06:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800bd0a:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800bd0c:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bd0e:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bd10:	d04c      	beq.n	800bdac <HAL_QSPI_Transmit+0xb4>
 800bd12:	2201      	movs	r2, #1
 800bd14:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bd18:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bd1c:	2a01      	cmp	r2, #1
 800bd1e:	b2d0      	uxtb	r0, r2
 800bd20:	d142      	bne.n	800bda8 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd22:	2200      	movs	r2, #0
 800bd24:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bd26:	2f00      	cmp	r7, #0
 800bd28:	d039      	beq.n	800bd9e <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800bd2a:	2212      	movs	r2, #18
 800bd2c:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd30:	692a      	ldr	r2, [r5, #16]
 800bd32:	3201      	adds	r2, #1
 800bd34:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd36:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800bd38:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bd3a:	3201      	adds	r2, #1
 800bd3c:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bd3e:	696a      	ldr	r2, [r5, #20]
 800bd40:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800bd44:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800bd46:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bd48:	b9a2      	cbnz	r2, 800bd74 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bd4a:	9600      	str	r6, [sp, #0]
 800bd4c:	2201      	movs	r2, #1
 800bd4e:	2102      	movs	r1, #2
 800bd50:	4620      	mov	r0, r4
 800bd52:	f7ff fe26 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bd56:	b928      	cbnz	r0, 800bd64 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bd58:	6823      	ldr	r3, [r4, #0]
 800bd5a:	2202      	movs	r2, #2
 800bd5c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800bd5e:	4620      	mov	r0, r4
 800bd60:	f7ff ff81 	bl	800bc66 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800bd64:	2301      	movs	r3, #1
 800bd66:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd6a:	2300      	movs	r3, #0
 800bd6c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bd70:	b005      	add	sp, #20
 800bd72:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800bd74:	9600      	str	r6, [sp, #0]
 800bd76:	2201      	movs	r2, #1
 800bd78:	2104      	movs	r1, #4
 800bd7a:	4620      	mov	r0, r4
 800bd7c:	9303      	str	r3, [sp, #12]
 800bd7e:	f7ff fe10 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800bd82:	2800      	cmp	r0, #0
 800bd84:	d1ee      	bne.n	800bd64 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800bd86:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800bd88:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800bd8a:	7812      	ldrb	r2, [r2, #0]
 800bd8c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800bd90:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800bd92:	3201      	adds	r2, #1
 800bd94:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800bd96:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800bd98:	3a01      	subs	r2, #1
 800bd9a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800bd9c:	e7d3      	b.n	800bd46 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800bd9e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bda0:	f043 0308 	orr.w	r3, r3, #8
 800bda4:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800bda6:	e7e0      	b.n	800bd6a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800bda8:	2002      	movs	r0, #2
 800bdaa:	e7de      	b.n	800bd6a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800bdac:	2002      	movs	r0, #2
 800bdae:	e7df      	b.n	800bd70 <HAL_QSPI_Transmit+0x78>

0800bdb0 <HAL_QSPI_Receive>:
{
 800bdb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bdb2:	4604      	mov	r4, r0
 800bdb4:	b085      	sub	sp, #20
 800bdb6:	4616      	mov	r6, r2
 800bdb8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bdba:	f7fd ff17 	bl	8009bec <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800bdbe:	6825      	ldr	r5, [r4, #0]
 800bdc0:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800bdc4:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bdc8:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bdca:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bdcc:	d050      	beq.n	800be70 <HAL_QSPI_Receive+0xc0>
 800bdce:	2201      	movs	r2, #1
 800bdd0:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bdd4:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bdd8:	2a01      	cmp	r2, #1
 800bdda:	b2d0      	uxtb	r0, r2
 800bddc:	d146      	bne.n	800be6c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bdde:	2200      	movs	r2, #0
 800bde0:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bde2:	2f00      	cmp	r7, #0
 800bde4:	d03d      	beq.n	800be62 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800bde6:	2222      	movs	r2, #34	; 0x22
 800bde8:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bdec:	692a      	ldr	r2, [r5, #16]
 800bdee:	3201      	adds	r2, #1
 800bdf0:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bdf2:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800bdf4:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bdf6:	3201      	adds	r2, #1
 800bdf8:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800bdfa:	6969      	ldr	r1, [r5, #20]
 800bdfc:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800be00:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800be04:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800be06:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800be0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800be0c:	b9a2      	cbnz	r2, 800be38 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800be0e:	9600      	str	r6, [sp, #0]
 800be10:	2201      	movs	r2, #1
 800be12:	2102      	movs	r1, #2
 800be14:	4620      	mov	r0, r4
 800be16:	f7ff fdc4 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800be1a:	b928      	cbnz	r0, 800be28 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800be1c:	6823      	ldr	r3, [r4, #0]
 800be1e:	2202      	movs	r2, #2
 800be20:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800be22:	4620      	mov	r0, r4
 800be24:	f7ff ff1f 	bl	800bc66 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800be28:	2301      	movs	r3, #1
 800be2a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800be2e:	2300      	movs	r3, #0
 800be30:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800be34:	b005      	add	sp, #20
 800be36:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800be38:	9600      	str	r6, [sp, #0]
 800be3a:	2201      	movs	r2, #1
 800be3c:	2106      	movs	r1, #6
 800be3e:	4620      	mov	r0, r4
 800be40:	9303      	str	r3, [sp, #12]
 800be42:	f7ff fdae 	bl	800b9a2 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800be46:	2800      	cmp	r0, #0
 800be48:	d1ee      	bne.n	800be28 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800be4a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800be4c:	f895 1020 	ldrb.w	r1, [r5, #32]
 800be50:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800be52:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800be54:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800be56:	3201      	adds	r2, #1
 800be58:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800be5a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800be5c:	3a01      	subs	r2, #1
 800be5e:	63a2      	str	r2, [r4, #56]	; 0x38
 800be60:	e7d3      	b.n	800be0a <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800be62:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800be64:	f043 0308 	orr.w	r3, r3, #8
 800be68:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800be6a:	e7e0      	b.n	800be2e <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800be6c:	2002      	movs	r0, #2
 800be6e:	e7de      	b.n	800be2e <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800be70:	2002      	movs	r0, #2
 800be72:	e7df      	b.n	800be34 <HAL_QSPI_Receive+0x84>

0800be74 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800be74:	4913      	ldr	r1, [pc, #76]	; (800bec4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 800be76:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800be78:	688b      	ldr	r3, [r1, #8]
 800be7a:	f003 030c 	and.w	r3, r3, #12
 800be7e:	2b04      	cmp	r3, #4
 800be80:	d01c      	beq.n	800bebc <HAL_RCC_GetSysClockFreq+0x48>
 800be82:	2b08      	cmp	r3, #8
 800be84:	d11c      	bne.n	800bec0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800be86:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800be88:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be8a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800be8c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be90:	bf14      	ite	ne
 800be92:	480d      	ldrne	r0, [pc, #52]	; (800bec8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be94:	480d      	ldreq	r0, [pc, #52]	; (800becc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800be96:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800be9a:	bf18      	it	ne
 800be9c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800be9e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800bea2:	fba1 0100 	umull	r0, r1, r1, r0
 800bea6:	f7f4 fc3f 	bl	8000728 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800beaa:	4b06      	ldr	r3, [pc, #24]	; (800bec4 <HAL_RCC_GetSysClockFreq+0x50>)
 800beac:	685b      	ldr	r3, [r3, #4]
 800beae:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800beb2:	3301      	adds	r3, #1
 800beb4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800beb6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800beba:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800bebc:	4802      	ldr	r0, [pc, #8]	; (800bec8 <HAL_RCC_GetSysClockFreq+0x54>)
 800bebe:	e7fc      	b.n	800beba <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800bec0:	4802      	ldr	r0, [pc, #8]	; (800becc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800bec2:	e7fa      	b.n	800beba <HAL_RCC_GetSysClockFreq+0x46>
 800bec4:	40023800 	.word	0x40023800
 800bec8:	007a1200 	.word	0x007a1200
 800becc:	00f42400 	.word	0x00f42400

0800bed0 <HAL_RCC_ClockConfig>:
{
 800bed0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bed4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800bed6:	4604      	mov	r4, r0
 800bed8:	b910      	cbnz	r0, 800bee0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800beda:	2001      	movs	r0, #1
}
 800bedc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800bee0:	4b44      	ldr	r3, [pc, #272]	; (800bff4 <HAL_RCC_ClockConfig+0x124>)
 800bee2:	681a      	ldr	r2, [r3, #0]
 800bee4:	f002 020f 	and.w	r2, r2, #15
 800bee8:	428a      	cmp	r2, r1
 800beea:	d328      	bcc.n	800bf3e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800beec:	6822      	ldr	r2, [r4, #0]
 800beee:	0797      	lsls	r7, r2, #30
 800bef0:	d42d      	bmi.n	800bf4e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800bef2:	07d0      	lsls	r0, r2, #31
 800bef4:	d441      	bmi.n	800bf7a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800bef6:	4b3f      	ldr	r3, [pc, #252]	; (800bff4 <HAL_RCC_ClockConfig+0x124>)
 800bef8:	681a      	ldr	r2, [r3, #0]
 800befa:	f002 020f 	and.w	r2, r2, #15
 800befe:	42aa      	cmp	r2, r5
 800bf00:	d866      	bhi.n	800bfd0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bf02:	6822      	ldr	r2, [r4, #0]
 800bf04:	0751      	lsls	r1, r2, #29
 800bf06:	d46c      	bmi.n	800bfe2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bf08:	0713      	lsls	r3, r2, #28
 800bf0a:	d507      	bpl.n	800bf1c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800bf0c:	4a3a      	ldr	r2, [pc, #232]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf0e:	6921      	ldr	r1, [r4, #16]
 800bf10:	6893      	ldr	r3, [r2, #8]
 800bf12:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800bf16:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800bf1a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800bf1c:	f7ff ffaa 	bl	800be74 <HAL_RCC_GetSysClockFreq>
 800bf20:	4b35      	ldr	r3, [pc, #212]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf22:	4a36      	ldr	r2, [pc, #216]	; (800bffc <HAL_RCC_ClockConfig+0x12c>)
 800bf24:	689b      	ldr	r3, [r3, #8]
 800bf26:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800bf2a:	5cd3      	ldrb	r3, [r2, r3]
 800bf2c:	40d8      	lsrs	r0, r3
 800bf2e:	4b34      	ldr	r3, [pc, #208]	; (800c000 <HAL_RCC_ClockConfig+0x130>)
 800bf30:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800bf32:	4b34      	ldr	r3, [pc, #208]	; (800c004 <HAL_RCC_ClockConfig+0x134>)
 800bf34:	6818      	ldr	r0, [r3, #0]
 800bf36:	f7f6 fb8b 	bl	8002650 <HAL_InitTick>
  return HAL_OK;
 800bf3a:	2000      	movs	r0, #0
 800bf3c:	e7ce      	b.n	800bedc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bf3e:	b2ca      	uxtb	r2, r1
 800bf40:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bf42:	681b      	ldr	r3, [r3, #0]
 800bf44:	f003 030f 	and.w	r3, r3, #15
 800bf48:	428b      	cmp	r3, r1
 800bf4a:	d1c6      	bne.n	800beda <HAL_RCC_ClockConfig+0xa>
 800bf4c:	e7ce      	b.n	800beec <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800bf4e:	4b2a      	ldr	r3, [pc, #168]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf50:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800bf54:	bf1e      	ittt	ne
 800bf56:	6899      	ldrne	r1, [r3, #8]
 800bf58:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800bf5c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800bf5e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800bf60:	bf42      	ittt	mi
 800bf62:	6899      	ldrmi	r1, [r3, #8]
 800bf64:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800bf68:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800bf6a:	4923      	ldr	r1, [pc, #140]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf6c:	68a0      	ldr	r0, [r4, #8]
 800bf6e:	688b      	ldr	r3, [r1, #8]
 800bf70:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800bf74:	4303      	orrs	r3, r0
 800bf76:	608b      	str	r3, [r1, #8]
 800bf78:	e7bb      	b.n	800bef2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800bf7a:	6862      	ldr	r2, [r4, #4]
 800bf7c:	4b1e      	ldr	r3, [pc, #120]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf7e:	2a01      	cmp	r2, #1
 800bf80:	d11c      	bne.n	800bfbc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800bf82:	681b      	ldr	r3, [r3, #0]
 800bf84:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bf88:	d0a7      	beq.n	800beda <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800bf8a:	4e1b      	ldr	r6, [pc, #108]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bf8c:	68b3      	ldr	r3, [r6, #8]
 800bf8e:	f023 0303 	bic.w	r3, r3, #3
 800bf92:	4313      	orrs	r3, r2
 800bf94:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800bf96:	f7fd fe29 	bl	8009bec <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bf9a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800bf9e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800bfa0:	68b3      	ldr	r3, [r6, #8]
 800bfa2:	6862      	ldr	r2, [r4, #4]
 800bfa4:	f003 030c 	and.w	r3, r3, #12
 800bfa8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800bfac:	d0a3      	beq.n	800bef6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800bfae:	f7fd fe1d 	bl	8009bec <HAL_GetTick>
 800bfb2:	1bc0      	subs	r0, r0, r7
 800bfb4:	4540      	cmp	r0, r8
 800bfb6:	d9f3      	bls.n	800bfa0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800bfb8:	2003      	movs	r0, #3
 800bfba:	e78f      	b.n	800bedc <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bfbc:	1e91      	subs	r1, r2, #2
 800bfbe:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bfc0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800bfc2:	d802      	bhi.n	800bfca <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800bfc4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800bfc8:	e7de      	b.n	800bf88 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800bfca:	f013 0f02 	tst.w	r3, #2
 800bfce:	e7db      	b.n	800bf88 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800bfd0:	b2ea      	uxtb	r2, r5
 800bfd2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800bfd4:	681b      	ldr	r3, [r3, #0]
 800bfd6:	f003 030f 	and.w	r3, r3, #15
 800bfda:	42ab      	cmp	r3, r5
 800bfdc:	f47f af7d 	bne.w	800beda <HAL_RCC_ClockConfig+0xa>
 800bfe0:	e78f      	b.n	800bf02 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800bfe2:	4905      	ldr	r1, [pc, #20]	; (800bff8 <HAL_RCC_ClockConfig+0x128>)
 800bfe4:	68e0      	ldr	r0, [r4, #12]
 800bfe6:	688b      	ldr	r3, [r1, #8]
 800bfe8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800bfec:	4303      	orrs	r3, r0
 800bfee:	608b      	str	r3, [r1, #8]
 800bff0:	e78a      	b.n	800bf08 <HAL_RCC_ClockConfig+0x38>
 800bff2:	bf00      	nop
 800bff4:	40023c00 	.word	0x40023c00
 800bff8:	40023800 	.word	0x40023800
 800bffc:	08029975 	.word	0x08029975
 800c000:	20000050 	.word	0x20000050
 800c004:	20000058 	.word	0x20000058

0800c008 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c008:	4b04      	ldr	r3, [pc, #16]	; (800c01c <HAL_RCC_GetPCLK1Freq+0x14>)
 800c00a:	4a05      	ldr	r2, [pc, #20]	; (800c020 <HAL_RCC_GetPCLK1Freq+0x18>)
 800c00c:	689b      	ldr	r3, [r3, #8]
 800c00e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c012:	5cd3      	ldrb	r3, [r2, r3]
 800c014:	4a03      	ldr	r2, [pc, #12]	; (800c024 <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c016:	6810      	ldr	r0, [r2, #0]
}
 800c018:	40d8      	lsrs	r0, r3
 800c01a:	4770      	bx	lr
 800c01c:	40023800 	.word	0x40023800
 800c020:	08029985 	.word	0x08029985
 800c024:	20000050 	.word	0x20000050

0800c028 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c028:	230f      	movs	r3, #15
 800c02a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c02c:	4b0b      	ldr	r3, [pc, #44]	; (800c05c <HAL_RCC_GetClockConfig+0x34>)
 800c02e:	689a      	ldr	r2, [r3, #8]
 800c030:	f002 0203 	and.w	r2, r2, #3
 800c034:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c036:	689a      	ldr	r2, [r3, #8]
 800c038:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c03c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c03e:	689a      	ldr	r2, [r3, #8]
 800c040:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c044:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c046:	689b      	ldr	r3, [r3, #8]
 800c048:	08db      	lsrs	r3, r3, #3
 800c04a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800c04e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c050:	4b03      	ldr	r3, [pc, #12]	; (800c060 <HAL_RCC_GetClockConfig+0x38>)
 800c052:	681b      	ldr	r3, [r3, #0]
 800c054:	f003 030f 	and.w	r3, r3, #15
 800c058:	600b      	str	r3, [r1, #0]
}
 800c05a:	4770      	bx	lr
 800c05c:	40023800 	.word	0x40023800
 800c060:	40023c00 	.word	0x40023c00

0800c064 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c064:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c066:	6802      	ldr	r2, [r0, #0]
{
 800c068:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c06a:	0610      	lsls	r0, r2, #24
 800c06c:	d508      	bpl.n	800c080 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800c06e:	49aa      	ldr	r1, [pc, #680]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c070:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c072:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c076:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800c07a:	4303      	orrs	r3, r0
 800c07c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800c080:	05d1      	lsls	r1, r2, #23
 800c082:	d508      	bpl.n	800c096 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800c084:	49a4      	ldr	r1, [pc, #656]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c086:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c088:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c08c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c090:	4303      	orrs	r3, r0
 800c092:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c096:	f012 0f43 	tst.w	r2, #67	; 0x43
 800c09a:	d173      	bne.n	800c184 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c09c:	6823      	ldr	r3, [r4, #0]
 800c09e:	f013 0f0c 	tst.w	r3, #12
 800c0a2:	f000 80c1 	beq.w	800c228 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800c0a6:	4b9d      	ldr	r3, [pc, #628]	; (800c31c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c0a8:	4d9b      	ldr	r5, [pc, #620]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c0aa:	2200      	movs	r2, #0
 800c0ac:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c0ae:	f7fd fd9d 	bl	8009bec <HAL_GetTick>
 800c0b2:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c0b4:	682b      	ldr	r3, [r5, #0]
 800c0b6:	009b      	lsls	r3, r3, #2
 800c0b8:	f100 80fc 	bmi.w	800c2b4 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c0bc:	6821      	ldr	r1, [r4, #0]
 800c0be:	074f      	lsls	r7, r1, #29
 800c0c0:	d51a      	bpl.n	800c0f8 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c0c2:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c0c6:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800c0ca:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c0ce:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c0d2:	4313      	orrs	r3, r2
 800c0d4:	6922      	ldr	r2, [r4, #16]
 800c0d6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c0da:	69a2      	ldr	r2, [r4, #24]
 800c0dc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c0e0:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c0e4:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800c0e8:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c0ea:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c0ee:	3a01      	subs	r2, #1
 800c0f0:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800c0f4:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c0f8:	070e      	lsls	r6, r1, #28
 800c0fa:	d519      	bpl.n	800c130 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c0fc:	4a86      	ldr	r2, [pc, #536]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c0fe:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c102:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800c106:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c10a:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800c10e:	4303      	orrs	r3, r0
 800c110:	6920      	ldr	r0, [r4, #16]
 800c112:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c116:	69e0      	ldr	r0, [r4, #28]
 800c118:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800c11c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c120:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c124:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c126:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c12a:	4303      	orrs	r3, r0
 800c12c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800c130:	060d      	lsls	r5, r1, #24
 800c132:	d517      	bpl.n	800c164 <HAL_RCCEx_PeriphCLKConfig+0x100>
 800c134:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c136:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c13a:	d113      	bne.n	800c164 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c13c:	4976      	ldr	r1, [pc, #472]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c13e:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c142:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800c146:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800c14a:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c14e:	4313      	orrs	r3, r2
 800c150:	6922      	ldr	r2, [r4, #16]
 800c152:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c156:	6962      	ldr	r2, [r4, #20]
 800c158:	0852      	lsrs	r2, r2, #1
 800c15a:	3a01      	subs	r2, #1
 800c15c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c160:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800c164:	4b6d      	ldr	r3, [pc, #436]	; (800c31c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c166:	4e6c      	ldr	r6, [pc, #432]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c168:	2201      	movs	r2, #1
 800c16a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c16c:	f7fd fd3e 	bl	8009bec <HAL_GetTick>
 800c170:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c172:	6833      	ldr	r3, [r6, #0]
 800c174:	0098      	lsls	r0, r3, #2
 800c176:	d459      	bmi.n	800c22c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c178:	f7fd fd38 	bl	8009bec <HAL_GetTick>
 800c17c:	1b40      	subs	r0, r0, r5
 800c17e:	2802      	cmp	r0, #2
 800c180:	d9f7      	bls.n	800c172 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800c182:	e04e      	b.n	800c222 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800c184:	4b65      	ldr	r3, [pc, #404]	; (800c31c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c186:	4e64      	ldr	r6, [pc, #400]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c188:	2200      	movs	r2, #0
 800c18a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c18c:	f7fd fd2e 	bl	8009bec <HAL_GetTick>
 800c190:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c192:	6833      	ldr	r3, [r6, #0]
 800c194:	011b      	lsls	r3, r3, #4
 800c196:	d43f      	bmi.n	800c218 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c198:	6821      	ldr	r1, [r4, #0]
 800c19a:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c19c:	bf41      	itttt	mi
 800c19e:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800c1a2:	071b      	lslmi	r3, r3, #28
 800c1a4:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800c1a8:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c1ac:	078e      	lsls	r6, r1, #30
 800c1ae:	d515      	bpl.n	800c1dc <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c1b0:	4a59      	ldr	r2, [pc, #356]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c1b2:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c1b4:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c1b8:	6865      	ldr	r5, [r4, #4]
 800c1ba:	061b      	lsls	r3, r3, #24
 800c1bc:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c1c0:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800c1c4:	4303      	orrs	r3, r0
 800c1c6:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c1ca:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800c1ce:	6a23      	ldr	r3, [r4, #32]
 800c1d0:	f020 001f 	bic.w	r0, r0, #31
 800c1d4:	3b01      	subs	r3, #1
 800c1d6:	4303      	orrs	r3, r0
 800c1d8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c1dc:	064d      	lsls	r5, r1, #25
 800c1de:	d50a      	bpl.n	800c1f6 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c1e0:	68e3      	ldr	r3, [r4, #12]
 800c1e2:	6862      	ldr	r2, [r4, #4]
 800c1e4:	061b      	lsls	r3, r3, #24
 800c1e6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c1ea:	68a2      	ldr	r2, [r4, #8]
 800c1ec:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c1f0:	4a49      	ldr	r2, [pc, #292]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c1f2:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c1f6:	4b49      	ldr	r3, [pc, #292]	; (800c31c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c1f8:	4e47      	ldr	r6, [pc, #284]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c1fa:	2201      	movs	r2, #1
 800c1fc:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c1fe:	f7fd fcf5 	bl	8009bec <HAL_GetTick>
 800c202:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c204:	6833      	ldr	r3, [r6, #0]
 800c206:	0118      	lsls	r0, r3, #4
 800c208:	f53f af48 	bmi.w	800c09c <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c20c:	f7fd fcee 	bl	8009bec <HAL_GetTick>
 800c210:	1b40      	subs	r0, r0, r5
 800c212:	2802      	cmp	r0, #2
 800c214:	d9f6      	bls.n	800c204 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800c216:	e004      	b.n	800c222 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c218:	f7fd fce8 	bl	8009bec <HAL_GetTick>
 800c21c:	1b40      	subs	r0, r0, r5
 800c21e:	2802      	cmp	r0, #2
 800c220:	d9b7      	bls.n	800c192 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800c222:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800c224:	b003      	add	sp, #12
 800c226:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800c228:	0619      	lsls	r1, r3, #24
 800c22a:	d43e      	bmi.n	800c2aa <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c22c:	6823      	ldr	r3, [r4, #0]
 800c22e:	069a      	lsls	r2, r3, #26
 800c230:	d530      	bpl.n	800c294 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800c232:	2300      	movs	r3, #0
 800c234:	9301      	str	r3, [sp, #4]
 800c236:	4b38      	ldr	r3, [pc, #224]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 800c238:	4d39      	ldr	r5, [pc, #228]	; (800c320 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c23a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c23c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c240:	641a      	str	r2, [r3, #64]	; 0x40
 800c242:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c244:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c248:	9301      	str	r3, [sp, #4]
 800c24a:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c24c:	682b      	ldr	r3, [r5, #0]
 800c24e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c252:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c254:	f7fd fcca 	bl	8009bec <HAL_GetTick>
 800c258:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c25a:	682b      	ldr	r3, [r5, #0]
 800c25c:	05d9      	lsls	r1, r3, #23
 800c25e:	d530      	bpl.n	800c2c2 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c260:	4d2d      	ldr	r5, [pc, #180]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c262:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c264:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800c268:	d131      	bne.n	800c2ce <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c26a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c26c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c270:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c274:	4a28      	ldr	r2, [pc, #160]	; (800c318 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c276:	d14b      	bne.n	800c310 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 800c278:	6891      	ldr	r1, [r2, #8]
 800c27a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800c27e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c282:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800c286:	4301      	orrs	r1, r0
 800c288:	6091      	str	r1, [r2, #8]
 800c28a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c28c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c290:	430b      	orrs	r3, r1
 800c292:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c294:	6820      	ldr	r0, [r4, #0]
 800c296:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c29a:	bf1f      	itttt	ne
 800c29c:	4b21      	ldrne	r3, [pc, #132]	; (800c324 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800c29e:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800c2a2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 800c2a6:	2000      	movne	r0, #0
 800c2a8:	e7bc      	b.n	800c224 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800c2aa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c2ac:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c2b0:	d1bc      	bne.n	800c22c <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800c2b2:	e6f8      	b.n	800c0a6 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c2b4:	f7fd fc9a 	bl	8009bec <HAL_GetTick>
 800c2b8:	1b80      	subs	r0, r0, r6
 800c2ba:	2802      	cmp	r0, #2
 800c2bc:	f67f aefa 	bls.w	800c0b4 <HAL_RCCEx_PeriphCLKConfig+0x50>
 800c2c0:	e7af      	b.n	800c222 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c2c2:	f7fd fc93 	bl	8009bec <HAL_GetTick>
 800c2c6:	1b80      	subs	r0, r0, r6
 800c2c8:	2802      	cmp	r0, #2
 800c2ca:	d9c6      	bls.n	800c25a <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800c2cc:	e7a9      	b.n	800c222 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c2ce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c2d0:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800c2d4:	4293      	cmp	r3, r2
 800c2d6:	d0c8      	beq.n	800c26a <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c2d8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c2da:	4a10      	ldr	r2, [pc, #64]	; (800c31c <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 800c2dc:	2101      	movs	r1, #1
 800c2de:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c2e2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c2e6:	2100      	movs	r1, #0
 800c2e8:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c2ec:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c2ee:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c2f0:	07da      	lsls	r2, r3, #31
 800c2f2:	d5ba      	bpl.n	800c26a <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 800c2f4:	f7fd fc7a 	bl	8009bec <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c2f8:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c2fc:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c2fe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c300:	079b      	lsls	r3, r3, #30
 800c302:	d4b2      	bmi.n	800c26a <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c304:	f7fd fc72 	bl	8009bec <HAL_GetTick>
 800c308:	1b80      	subs	r0, r0, r6
 800c30a:	42b8      	cmp	r0, r7
 800c30c:	d9f7      	bls.n	800c2fe <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800c30e:	e788      	b.n	800c222 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c310:	6891      	ldr	r1, [r2, #8]
 800c312:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c316:	e7b7      	b.n	800c288 <HAL_RCCEx_PeriphCLKConfig+0x224>
 800c318:	40023800 	.word	0x40023800
 800c31c:	42470000 	.word	0x42470000
 800c320:	40007000 	.word	0x40007000
 800c324:	42471000 	.word	0x42471000

0800c328 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c328:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c32c:	4604      	mov	r4, r0
 800c32e:	b340      	cbz	r0, 800c382 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c330:	6803      	ldr	r3, [r0, #0]
 800c332:	07dd      	lsls	r5, r3, #31
 800c334:	d410      	bmi.n	800c358 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c336:	6823      	ldr	r3, [r4, #0]
 800c338:	0798      	lsls	r0, r3, #30
 800c33a:	d45e      	bmi.n	800c3fa <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c33c:	6823      	ldr	r3, [r4, #0]
 800c33e:	071a      	lsls	r2, r3, #28
 800c340:	f100 80a0 	bmi.w	800c484 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c344:	6823      	ldr	r3, [r4, #0]
 800c346:	075b      	lsls	r3, r3, #29
 800c348:	f100 80c0 	bmi.w	800c4cc <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c34c:	69a0      	ldr	r0, [r4, #24]
 800c34e:	2800      	cmp	r0, #0
 800c350:	f040 8128 	bne.w	800c5a4 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c354:	2000      	movs	r0, #0
 800c356:	e02b      	b.n	800c3b0 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c358:	4b8f      	ldr	r3, [pc, #572]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c35a:	689a      	ldr	r2, [r3, #8]
 800c35c:	f002 020c 	and.w	r2, r2, #12
 800c360:	2a04      	cmp	r2, #4
 800c362:	d007      	beq.n	800c374 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c364:	689a      	ldr	r2, [r3, #8]
 800c366:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c36a:	2a08      	cmp	r2, #8
 800c36c:	d10b      	bne.n	800c386 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c36e:	685a      	ldr	r2, [r3, #4]
 800c370:	0251      	lsls	r1, r2, #9
 800c372:	d508      	bpl.n	800c386 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c374:	4b88      	ldr	r3, [pc, #544]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c376:	681b      	ldr	r3, [r3, #0]
 800c378:	039a      	lsls	r2, r3, #14
 800c37a:	d5dc      	bpl.n	800c336 <HAL_RCC_OscConfig+0xe>
 800c37c:	6863      	ldr	r3, [r4, #4]
 800c37e:	2b00      	cmp	r3, #0
 800c380:	d1d9      	bne.n	800c336 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800c382:	2001      	movs	r0, #1
 800c384:	e014      	b.n	800c3b0 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c386:	6862      	ldr	r2, [r4, #4]
 800c388:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800c38c:	d113      	bne.n	800c3b6 <HAL_RCC_OscConfig+0x8e>
 800c38e:	681a      	ldr	r2, [r3, #0]
 800c390:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c394:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c396:	f7fd fc29 	bl	8009bec <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c39a:	4e7f      	ldr	r6, [pc, #508]	; (800c598 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c39c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c39e:	6833      	ldr	r3, [r6, #0]
 800c3a0:	039b      	lsls	r3, r3, #14
 800c3a2:	d4c8      	bmi.n	800c336 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c3a4:	f7fd fc22 	bl	8009bec <HAL_GetTick>
 800c3a8:	1b40      	subs	r0, r0, r5
 800c3aa:	2864      	cmp	r0, #100	; 0x64
 800c3ac:	d9f7      	bls.n	800c39e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800c3ae:	2003      	movs	r0, #3
}
 800c3b0:	b002      	add	sp, #8
 800c3b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c3b6:	4d78      	ldr	r5, [pc, #480]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c3b8:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800c3bc:	682b      	ldr	r3, [r5, #0]
 800c3be:	d107      	bne.n	800c3d0 <HAL_RCC_OscConfig+0xa8>
 800c3c0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800c3c4:	602b      	str	r3, [r5, #0]
 800c3c6:	682b      	ldr	r3, [r5, #0]
 800c3c8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c3cc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c3ce:	e7e2      	b.n	800c396 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c3d0:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c3d4:	602b      	str	r3, [r5, #0]
 800c3d6:	682b      	ldr	r3, [r5, #0]
 800c3d8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c3dc:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c3de:	2a00      	cmp	r2, #0
 800c3e0:	d1d9      	bne.n	800c396 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800c3e2:	f7fd fc03 	bl	8009bec <HAL_GetTick>
 800c3e6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c3e8:	682b      	ldr	r3, [r5, #0]
 800c3ea:	039f      	lsls	r7, r3, #14
 800c3ec:	d5a3      	bpl.n	800c336 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c3ee:	f7fd fbfd 	bl	8009bec <HAL_GetTick>
 800c3f2:	1b80      	subs	r0, r0, r6
 800c3f4:	2864      	cmp	r0, #100	; 0x64
 800c3f6:	d9f7      	bls.n	800c3e8 <HAL_RCC_OscConfig+0xc0>
 800c3f8:	e7d9      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c3fa:	4b67      	ldr	r3, [pc, #412]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c3fc:	689a      	ldr	r2, [r3, #8]
 800c3fe:	f012 0f0c 	tst.w	r2, #12
 800c402:	d007      	beq.n	800c414 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c404:	689a      	ldr	r2, [r3, #8]
 800c406:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c40a:	2a08      	cmp	r2, #8
 800c40c:	d111      	bne.n	800c432 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c40e:	685b      	ldr	r3, [r3, #4]
 800c410:	025e      	lsls	r6, r3, #9
 800c412:	d40e      	bmi.n	800c432 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c414:	4a60      	ldr	r2, [pc, #384]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c416:	6813      	ldr	r3, [r2, #0]
 800c418:	079d      	lsls	r5, r3, #30
 800c41a:	d502      	bpl.n	800c422 <HAL_RCC_OscConfig+0xfa>
 800c41c:	68e3      	ldr	r3, [r4, #12]
 800c41e:	2b01      	cmp	r3, #1
 800c420:	d1af      	bne.n	800c382 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c422:	6813      	ldr	r3, [r2, #0]
 800c424:	6921      	ldr	r1, [r4, #16]
 800c426:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c42a:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c42e:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c430:	e784      	b.n	800c33c <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c432:	68e2      	ldr	r2, [r4, #12]
 800c434:	4b59      	ldr	r3, [pc, #356]	; (800c59c <HAL_RCC_OscConfig+0x274>)
 800c436:	b1b2      	cbz	r2, 800c466 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800c438:	2201      	movs	r2, #1
 800c43a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c43c:	f7fd fbd6 	bl	8009bec <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c440:	4d55      	ldr	r5, [pc, #340]	; (800c598 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c442:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c444:	682b      	ldr	r3, [r5, #0]
 800c446:	0798      	lsls	r0, r3, #30
 800c448:	d507      	bpl.n	800c45a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c44a:	682b      	ldr	r3, [r5, #0]
 800c44c:	6922      	ldr	r2, [r4, #16]
 800c44e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c452:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c456:	602b      	str	r3, [r5, #0]
 800c458:	e770      	b.n	800c33c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c45a:	f7fd fbc7 	bl	8009bec <HAL_GetTick>
 800c45e:	1b80      	subs	r0, r0, r6
 800c460:	2802      	cmp	r0, #2
 800c462:	d9ef      	bls.n	800c444 <HAL_RCC_OscConfig+0x11c>
 800c464:	e7a3      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800c466:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c468:	f7fd fbc0 	bl	8009bec <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c46c:	4e4a      	ldr	r6, [pc, #296]	; (800c598 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c46e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c470:	6833      	ldr	r3, [r6, #0]
 800c472:	0799      	lsls	r1, r3, #30
 800c474:	f57f af62 	bpl.w	800c33c <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c478:	f7fd fbb8 	bl	8009bec <HAL_GetTick>
 800c47c:	1b40      	subs	r0, r0, r5
 800c47e:	2802      	cmp	r0, #2
 800c480:	d9f6      	bls.n	800c470 <HAL_RCC_OscConfig+0x148>
 800c482:	e794      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c484:	6962      	ldr	r2, [r4, #20]
 800c486:	4b45      	ldr	r3, [pc, #276]	; (800c59c <HAL_RCC_OscConfig+0x274>)
 800c488:	b182      	cbz	r2, 800c4ac <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800c48a:	2201      	movs	r2, #1
 800c48c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c490:	f7fd fbac 	bl	8009bec <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c494:	4e40      	ldr	r6, [pc, #256]	; (800c598 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c496:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c498:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c49a:	079f      	lsls	r7, r3, #30
 800c49c:	f53f af52 	bmi.w	800c344 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c4a0:	f7fd fba4 	bl	8009bec <HAL_GetTick>
 800c4a4:	1b40      	subs	r0, r0, r5
 800c4a6:	2802      	cmp	r0, #2
 800c4a8:	d9f6      	bls.n	800c498 <HAL_RCC_OscConfig+0x170>
 800c4aa:	e780      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800c4ac:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c4b0:	f7fd fb9c 	bl	8009bec <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c4b4:	4e38      	ldr	r6, [pc, #224]	; (800c598 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c4b6:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c4b8:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c4ba:	0798      	lsls	r0, r3, #30
 800c4bc:	f57f af42 	bpl.w	800c344 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c4c0:	f7fd fb94 	bl	8009bec <HAL_GetTick>
 800c4c4:	1b40      	subs	r0, r0, r5
 800c4c6:	2802      	cmp	r0, #2
 800c4c8:	d9f6      	bls.n	800c4b8 <HAL_RCC_OscConfig+0x190>
 800c4ca:	e770      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c4cc:	4b32      	ldr	r3, [pc, #200]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c4ce:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c4d0:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800c4d4:	d128      	bne.n	800c528 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c4d6:	9201      	str	r2, [sp, #4]
 800c4d8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c4da:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c4de:	641a      	str	r2, [r3, #64]	; 0x40
 800c4e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c4e6:	9301      	str	r3, [sp, #4]
 800c4e8:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c4ea:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c4ec:	4d2c      	ldr	r5, [pc, #176]	; (800c5a0 <HAL_RCC_OscConfig+0x278>)
 800c4ee:	682b      	ldr	r3, [r5, #0]
 800c4f0:	05d9      	lsls	r1, r3, #23
 800c4f2:	d51b      	bpl.n	800c52c <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c4f4:	68a3      	ldr	r3, [r4, #8]
 800c4f6:	4d28      	ldr	r5, [pc, #160]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c4f8:	2b01      	cmp	r3, #1
 800c4fa:	d127      	bne.n	800c54c <HAL_RCC_OscConfig+0x224>
 800c4fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c4fe:	f043 0301 	orr.w	r3, r3, #1
 800c502:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c504:	f7fd fb72 	bl	8009bec <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c508:	4e23      	ldr	r6, [pc, #140]	; (800c598 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c50a:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c50c:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c510:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c512:	079b      	lsls	r3, r3, #30
 800c514:	d539      	bpl.n	800c58a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800c516:	2f00      	cmp	r7, #0
 800c518:	f43f af18 	beq.w	800c34c <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c51c:	4a1e      	ldr	r2, [pc, #120]	; (800c598 <HAL_RCC_OscConfig+0x270>)
 800c51e:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c520:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c524:	6413      	str	r3, [r2, #64]	; 0x40
 800c526:	e711      	b.n	800c34c <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800c528:	2700      	movs	r7, #0
 800c52a:	e7df      	b.n	800c4ec <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c52c:	682b      	ldr	r3, [r5, #0]
 800c52e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c532:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800c534:	f7fd fb5a 	bl	8009bec <HAL_GetTick>
 800c538:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c53a:	682b      	ldr	r3, [r5, #0]
 800c53c:	05da      	lsls	r2, r3, #23
 800c53e:	d4d9      	bmi.n	800c4f4 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c540:	f7fd fb54 	bl	8009bec <HAL_GetTick>
 800c544:	1b80      	subs	r0, r0, r6
 800c546:	2802      	cmp	r0, #2
 800c548:	d9f7      	bls.n	800c53a <HAL_RCC_OscConfig+0x212>
 800c54a:	e730      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c54c:	2b05      	cmp	r3, #5
 800c54e:	d104      	bne.n	800c55a <HAL_RCC_OscConfig+0x232>
 800c550:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c552:	f043 0304 	orr.w	r3, r3, #4
 800c556:	672b      	str	r3, [r5, #112]	; 0x70
 800c558:	e7d0      	b.n	800c4fc <HAL_RCC_OscConfig+0x1d4>
 800c55a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c55c:	f022 0201 	bic.w	r2, r2, #1
 800c560:	672a      	str	r2, [r5, #112]	; 0x70
 800c562:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c564:	f022 0204 	bic.w	r2, r2, #4
 800c568:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c56a:	2b00      	cmp	r3, #0
 800c56c:	d1ca      	bne.n	800c504 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800c56e:	f7fd fb3d 	bl	8009bec <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c572:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c576:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c578:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c57a:	0798      	lsls	r0, r3, #30
 800c57c:	d5cb      	bpl.n	800c516 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c57e:	f7fd fb35 	bl	8009bec <HAL_GetTick>
 800c582:	1b80      	subs	r0, r0, r6
 800c584:	4540      	cmp	r0, r8
 800c586:	d9f7      	bls.n	800c578 <HAL_RCC_OscConfig+0x250>
 800c588:	e711      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c58a:	f7fd fb2f 	bl	8009bec <HAL_GetTick>
 800c58e:	1b40      	subs	r0, r0, r5
 800c590:	4540      	cmp	r0, r8
 800c592:	d9bd      	bls.n	800c510 <HAL_RCC_OscConfig+0x1e8>
 800c594:	e70b      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
 800c596:	bf00      	nop
 800c598:	40023800 	.word	0x40023800
 800c59c:	42470000 	.word	0x42470000
 800c5a0:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c5a4:	4d3b      	ldr	r5, [pc, #236]	; (800c694 <HAL_RCC_OscConfig+0x36c>)
 800c5a6:	68ab      	ldr	r3, [r5, #8]
 800c5a8:	f003 030c 	and.w	r3, r3, #12
 800c5ac:	2b08      	cmp	r3, #8
 800c5ae:	d040      	beq.n	800c632 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c5b0:	4b39      	ldr	r3, [pc, #228]	; (800c698 <HAL_RCC_OscConfig+0x370>)
 800c5b2:	2200      	movs	r2, #0
 800c5b4:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c5b6:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c5b8:	d12e      	bne.n	800c618 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800c5ba:	f7fd fb17 	bl	8009bec <HAL_GetTick>
 800c5be:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c5c0:	682b      	ldr	r3, [r5, #0]
 800c5c2:	0199      	lsls	r1, r3, #6
 800c5c4:	d422      	bmi.n	800c60c <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c5c6:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800c5ca:	4313      	orrs	r3, r2
 800c5cc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c5ce:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c5d2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c5d4:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c5d8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c5da:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c5de:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c5e0:	0852      	lsrs	r2, r2, #1
 800c5e2:	3a01      	subs	r2, #1
 800c5e4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c5e8:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c5ea:	4b2b      	ldr	r3, [pc, #172]	; (800c698 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5ec:	4d29      	ldr	r5, [pc, #164]	; (800c694 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800c5ee:	2201      	movs	r2, #1
 800c5f0:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c5f2:	f7fd fafb 	bl	8009bec <HAL_GetTick>
 800c5f6:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c5f8:	682b      	ldr	r3, [r5, #0]
 800c5fa:	019a      	lsls	r2, r3, #6
 800c5fc:	f53f aeaa 	bmi.w	800c354 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c600:	f7fd faf4 	bl	8009bec <HAL_GetTick>
 800c604:	1b00      	subs	r0, r0, r4
 800c606:	2802      	cmp	r0, #2
 800c608:	d9f6      	bls.n	800c5f8 <HAL_RCC_OscConfig+0x2d0>
 800c60a:	e6d0      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c60c:	f7fd faee 	bl	8009bec <HAL_GetTick>
 800c610:	1b80      	subs	r0, r0, r6
 800c612:	2802      	cmp	r0, #2
 800c614:	d9d4      	bls.n	800c5c0 <HAL_RCC_OscConfig+0x298>
 800c616:	e6ca      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800c618:	f7fd fae8 	bl	8009bec <HAL_GetTick>
 800c61c:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c61e:	682b      	ldr	r3, [r5, #0]
 800c620:	019b      	lsls	r3, r3, #6
 800c622:	f57f ae97 	bpl.w	800c354 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c626:	f7fd fae1 	bl	8009bec <HAL_GetTick>
 800c62a:	1b00      	subs	r0, r0, r4
 800c62c:	2802      	cmp	r0, #2
 800c62e:	d9f6      	bls.n	800c61e <HAL_RCC_OscConfig+0x2f6>
 800c630:	e6bd      	b.n	800c3ae <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c632:	2801      	cmp	r0, #1
 800c634:	f43f aebc 	beq.w	800c3b0 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800c638:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c63a:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c63c:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c640:	4291      	cmp	r1, r2
 800c642:	f47f ae9e 	bne.w	800c382 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c646:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c648:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c64c:	428a      	cmp	r2, r1
 800c64e:	f47f ae98 	bne.w	800c382 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c652:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c654:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c658:	401a      	ands	r2, r3
 800c65a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c65e:	f47f ae90 	bne.w	800c382 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c662:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c664:	0852      	lsrs	r2, r2, #1
 800c666:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c66a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c66c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c670:	f47f ae87 	bne.w	800c382 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c674:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c676:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c67a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800c67e:	f47f ae80 	bne.w	800c382 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800c682:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c684:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c688:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800c68c:	f43f ae62 	beq.w	800c354 <HAL_RCC_OscConfig+0x2c>
 800c690:	e677      	b.n	800c382 <HAL_RCC_OscConfig+0x5a>
 800c692:	bf00      	nop
 800c694:	40023800 	.word	0x40023800
 800c698:	42470000 	.word	0x42470000

0800c69c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800c69c:	b538      	push	{r3, r4, r5, lr}
 800c69e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c6a0:	4604      	mov	r4, r0
 800c6a2:	b1c8      	cbz	r0, 800c6d8 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c6a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c6a8:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c6ac:	b91b      	cbnz	r3, 800c6b6 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800c6ae:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800c6b2:	f7f5 ff13 	bl	80024dc <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c6b6:	2302      	movs	r3, #2
 800c6b8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c6bc:	1d21      	adds	r1, r4, #4
 800c6be:	6820      	ldr	r0, [r4, #0]
 800c6c0:	f000 fa22 	bl	800cb08 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c6c4:	6862      	ldr	r2, [r4, #4]
 800c6c6:	6820      	ldr	r0, [r4, #0]
 800c6c8:	4629      	mov	r1, r5
 800c6ca:	f000 fa58 	bl	800cb7e <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c6ce:	2301      	movs	r3, #1
 800c6d0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c6d4:	2000      	movs	r0, #0
}
 800c6d6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c6d8:	2001      	movs	r0, #1
 800c6da:	e7fc      	b.n	800c6d6 <HAL_SDRAM_Init+0x3a>

0800c6dc <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800c6dc:	b510      	push	{r4, lr}
 800c6de:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800c6e0:	f7f5 ff74 	bl	80025cc <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800c6e4:	e9d4 0100 	ldrd	r0, r1, [r4]
 800c6e8:	f000 fa7f 	bl	800cbea <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800c6ec:	2000      	movs	r0, #0
 800c6ee:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800c6f2:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800c6f6:	bd10      	pop	{r4, pc}

0800c6f8 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c6f8:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c6fa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c6fe:	2b02      	cmp	r3, #2
{
 800c700:	4605      	mov	r5, r0
 800c702:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c704:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c706:	d012      	beq.n	800c72e <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c708:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c70c:	2c01      	cmp	r4, #1
 800c70e:	d10f      	bne.n	800c730 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c710:	2302      	movs	r3, #2
 800c712:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c716:	6828      	ldr	r0, [r5, #0]
 800c718:	f000 fa76 	bl	800cc08 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c71c:	6833      	ldr	r3, [r6, #0]
 800c71e:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c720:	bf06      	itte	eq
 800c722:	2305      	moveq	r3, #5
 800c724:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c728:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c72c:	2000      	movs	r0, #0
}
 800c72e:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800c730:	2001      	movs	r0, #1
 800c732:	e7fc      	b.n	800c72e <HAL_SDRAM_SendCommand+0x36>

0800c734 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c734:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c736:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c73a:	2b02      	cmp	r3, #2
{
 800c73c:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c73e:	b2d8      	uxtb	r0, r3
 800c740:	d00d      	beq.n	800c75e <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c742:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c746:	2b01      	cmp	r3, #1
 800c748:	b2dd      	uxtb	r5, r3
 800c74a:	d109      	bne.n	800c760 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c74c:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c74e:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c750:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800c754:	f000 fa7e 	bl	800cc54 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800c758:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c75c:	2000      	movs	r0, #0
}
 800c75e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c760:	2001      	movs	r0, #1
 800c762:	e7fc      	b.n	800c75e <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800c764 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800c764:	b510      	push	{r4, lr}
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800c766:	4604      	mov	r4, r0
 800c768:	2800      	cmp	r0, #0
 800c76a:	d055      	beq.n	800c818 <HAL_SPI_Init+0xb4>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800c76c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800c76e:	2b00      	cmp	r3, #0
 800c770:	d14e      	bne.n	800c810 <HAL_SPI_Init+0xac>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800c772:	6842      	ldr	r2, [r0, #4]
 800c774:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800c778:	d000      	beq.n	800c77c <HAL_SPI_Init+0x18>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800c77a:	61c3      	str	r3, [r0, #28]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800c77c:	2300      	movs	r3, #0
 800c77e:	62a3      	str	r3, [r4, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800c780:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800c784:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c788:	b923      	cbnz	r3, 800c794 <HAL_SPI_Init+0x30>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800c78a:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800c78e:	4620      	mov	r0, r4
 800c790:	f7f5 fe58 	bl	8002444 <HAL_SPI_MspInit>
  }

  hspi->State = HAL_SPI_STATE_BUSY;

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800c794:	6821      	ldr	r1, [r4, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c796:	68a0      	ldr	r0, [r4, #8]
 800c798:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800c79a:	2302      	movs	r3, #2
 800c79c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800c7a0:	680b      	ldr	r3, [r1, #0]
 800c7a2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800c7a6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800c7a8:	6863      	ldr	r3, [r4, #4]
 800c7aa:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800c7ae:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800c7b2:	4303      	orrs	r3, r0
 800c7b4:	68e0      	ldr	r0, [r4, #12]
 800c7b6:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800c7ba:	4303      	orrs	r3, r0
 800c7bc:	6920      	ldr	r0, [r4, #16]
 800c7be:	f000 0002 	and.w	r0, r0, #2
 800c7c2:	4303      	orrs	r3, r0
 800c7c4:	6960      	ldr	r0, [r4, #20]
 800c7c6:	f000 0001 	and.w	r0, r0, #1
 800c7ca:	4303      	orrs	r3, r0
 800c7cc:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800c7d0:	4303      	orrs	r3, r0
 800c7d2:	69e0      	ldr	r0, [r4, #28]
 800c7d4:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800c7d8:	4303      	orrs	r3, r0
 800c7da:	6a20      	ldr	r0, [r4, #32]
 800c7dc:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800c7e0:	4303      	orrs	r3, r0
 800c7e2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c7e4:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 800c7e8:	4303      	orrs	r3, r0
 800c7ea:	600b      	str	r3, [r1, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800c7ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800c7ee:	0c12      	lsrs	r2, r2, #16
 800c7f0:	f003 0310 	and.w	r3, r3, #16
 800c7f4:	f002 0204 	and.w	r2, r2, #4
 800c7f8:	431a      	orrs	r2, r3
 800c7fa:	604a      	str	r2, [r1, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800c7fc:	69cb      	ldr	r3, [r1, #28]
 800c7fe:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800c802:	61cb      	str	r3, [r1, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c804:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800c806:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800c808:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800c80a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

  return HAL_OK;
}
 800c80e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800c810:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800c812:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800c816:	e7b1      	b.n	800c77c <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800c818:	2001      	movs	r0, #1
 800c81a:	e7f8      	b.n	800c80e <HAL_SPI_Init+0xaa>

0800c81c <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800c81c:	4770      	bx	lr
	...

0800c820 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800c820:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800c824:	2b01      	cmp	r3, #1
 800c826:	d130      	bne.n	800c88a <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800c828:	2302      	movs	r3, #2
 800c82a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800c82e:	6803      	ldr	r3, [r0, #0]
 800c830:	68da      	ldr	r2, [r3, #12]
 800c832:	f042 0201 	orr.w	r2, r2, #1
 800c836:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800c838:	4a15      	ldr	r2, [pc, #84]	; (800c890 <HAL_TIM_Base_Start_IT+0x70>)
 800c83a:	4293      	cmp	r3, r2
 800c83c:	d01a      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c83e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800c842:	d017      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c844:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c848:	4293      	cmp	r3, r2
 800c84a:	d013      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c84c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c850:	4293      	cmp	r3, r2
 800c852:	d00f      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c854:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c858:	4293      	cmp	r3, r2
 800c85a:	d00b      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c85c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800c860:	4293      	cmp	r3, r2
 800c862:	d007      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c864:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800c868:	4293      	cmp	r3, r2
 800c86a:	d003      	beq.n	800c874 <HAL_TIM_Base_Start_IT+0x54>
 800c86c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800c870:	4293      	cmp	r3, r2
 800c872:	d104      	bne.n	800c87e <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800c874:	689a      	ldr	r2, [r3, #8]
 800c876:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800c87a:	2a06      	cmp	r2, #6
 800c87c:	d003      	beq.n	800c886 <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800c87e:	681a      	ldr	r2, [r3, #0]
 800c880:	f042 0201 	orr.w	r2, r2, #1
 800c884:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800c886:	2000      	movs	r0, #0
}
 800c888:	4770      	bx	lr
    return HAL_ERROR;
 800c88a:	2001      	movs	r0, #1
 800c88c:	4770      	bx	lr
 800c88e:	bf00      	nop
 800c890:	40010000 	.word	0x40010000

0800c894 <HAL_TIM_OC_DelayElapsedCallback>:
 800c894:	4770      	bx	lr

0800c896 <HAL_TIM_IC_CaptureCallback>:
 800c896:	4770      	bx	lr

0800c898 <HAL_TIM_PWM_PulseFinishedCallback>:
 800c898:	4770      	bx	lr

0800c89a <HAL_TIM_TriggerCallback>:
 800c89a:	4770      	bx	lr

0800c89c <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c89c:	6803      	ldr	r3, [r0, #0]
 800c89e:	691a      	ldr	r2, [r3, #16]
 800c8a0:	0791      	lsls	r1, r2, #30
{
 800c8a2:	b510      	push	{r4, lr}
 800c8a4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800c8a6:	d50e      	bpl.n	800c8c6 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800c8a8:	68da      	ldr	r2, [r3, #12]
 800c8aa:	0792      	lsls	r2, r2, #30
 800c8ac:	d50b      	bpl.n	800c8c6 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800c8ae:	f06f 0202 	mvn.w	r2, #2
 800c8b2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800c8b4:	2201      	movs	r2, #1
 800c8b6:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800c8b8:	699b      	ldr	r3, [r3, #24]
 800c8ba:	079b      	lsls	r3, r3, #30
 800c8bc:	d077      	beq.n	800c9ae <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800c8be:	f7ff ffea 	bl	800c896 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8c2:	2300      	movs	r3, #0
 800c8c4:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800c8c6:	6823      	ldr	r3, [r4, #0]
 800c8c8:	691a      	ldr	r2, [r3, #16]
 800c8ca:	0750      	lsls	r0, r2, #29
 800c8cc:	d510      	bpl.n	800c8f0 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800c8ce:	68da      	ldr	r2, [r3, #12]
 800c8d0:	0751      	lsls	r1, r2, #29
 800c8d2:	d50d      	bpl.n	800c8f0 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800c8d4:	f06f 0204 	mvn.w	r2, #4
 800c8d8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800c8da:	2202      	movs	r2, #2
 800c8dc:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c8de:	699b      	ldr	r3, [r3, #24]
 800c8e0:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c8e4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800c8e6:	d068      	beq.n	800c9ba <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800c8e8:	f7ff ffd5 	bl	800c896 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c8ec:	2300      	movs	r3, #0
 800c8ee:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800c8f0:	6823      	ldr	r3, [r4, #0]
 800c8f2:	691a      	ldr	r2, [r3, #16]
 800c8f4:	0712      	lsls	r2, r2, #28
 800c8f6:	d50f      	bpl.n	800c918 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800c8f8:	68da      	ldr	r2, [r3, #12]
 800c8fa:	0710      	lsls	r0, r2, #28
 800c8fc:	d50c      	bpl.n	800c918 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800c8fe:	f06f 0208 	mvn.w	r2, #8
 800c902:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800c904:	2204      	movs	r2, #4
 800c906:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c908:	69db      	ldr	r3, [r3, #28]
 800c90a:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c90c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800c90e:	d05a      	beq.n	800c9c6 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800c910:	f7ff ffc1 	bl	800c896 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c914:	2300      	movs	r3, #0
 800c916:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800c918:	6823      	ldr	r3, [r4, #0]
 800c91a:	691a      	ldr	r2, [r3, #16]
 800c91c:	06d2      	lsls	r2, r2, #27
 800c91e:	d510      	bpl.n	800c942 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800c920:	68da      	ldr	r2, [r3, #12]
 800c922:	06d0      	lsls	r0, r2, #27
 800c924:	d50d      	bpl.n	800c942 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800c926:	f06f 0210 	mvn.w	r2, #16
 800c92a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800c92c:	2208      	movs	r2, #8
 800c92e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c930:	69db      	ldr	r3, [r3, #28]
 800c932:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800c936:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800c938:	d04b      	beq.n	800c9d2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800c93a:	f7ff ffac 	bl	800c896 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800c93e:	2300      	movs	r3, #0
 800c940:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800c942:	6823      	ldr	r3, [r4, #0]
 800c944:	691a      	ldr	r2, [r3, #16]
 800c946:	07d1      	lsls	r1, r2, #31
 800c948:	d508      	bpl.n	800c95c <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800c94a:	68da      	ldr	r2, [r3, #12]
 800c94c:	07d2      	lsls	r2, r2, #31
 800c94e:	d505      	bpl.n	800c95c <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800c950:	f06f 0201 	mvn.w	r2, #1
 800c954:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800c956:	4620      	mov	r0, r4
 800c958:	f7f5 fbc6 	bl	80020e8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800c95c:	6823      	ldr	r3, [r4, #0]
 800c95e:	691a      	ldr	r2, [r3, #16]
 800c960:	0610      	lsls	r0, r2, #24
 800c962:	d508      	bpl.n	800c976 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800c964:	68da      	ldr	r2, [r3, #12]
 800c966:	0611      	lsls	r1, r2, #24
 800c968:	d505      	bpl.n	800c976 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800c96a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800c96e:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800c970:	4620      	mov	r0, r4
 800c972:	f000 f8c8 	bl	800cb06 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800c976:	6823      	ldr	r3, [r4, #0]
 800c978:	691a      	ldr	r2, [r3, #16]
 800c97a:	0652      	lsls	r2, r2, #25
 800c97c:	d508      	bpl.n	800c990 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800c97e:	68da      	ldr	r2, [r3, #12]
 800c980:	0650      	lsls	r0, r2, #25
 800c982:	d505      	bpl.n	800c990 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800c984:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800c988:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800c98a:	4620      	mov	r0, r4
 800c98c:	f7ff ff85 	bl	800c89a <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800c990:	6823      	ldr	r3, [r4, #0]
 800c992:	691a      	ldr	r2, [r3, #16]
 800c994:	0691      	lsls	r1, r2, #26
 800c996:	d522      	bpl.n	800c9de <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800c998:	68da      	ldr	r2, [r3, #12]
 800c99a:	0692      	lsls	r2, r2, #26
 800c99c:	d51f      	bpl.n	800c9de <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c99e:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800c9a2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800c9a4:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800c9a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800c9aa:	f000 b8ab 	b.w	800cb04 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800c9ae:	f7ff ff71 	bl	800c894 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c9b2:	4620      	mov	r0, r4
 800c9b4:	f7ff ff70 	bl	800c898 <HAL_TIM_PWM_PulseFinishedCallback>
 800c9b8:	e783      	b.n	800c8c2 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c9ba:	f7ff ff6b 	bl	800c894 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c9be:	4620      	mov	r0, r4
 800c9c0:	f7ff ff6a 	bl	800c898 <HAL_TIM_PWM_PulseFinishedCallback>
 800c9c4:	e792      	b.n	800c8ec <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c9c6:	f7ff ff65 	bl	800c894 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	f7ff ff64 	bl	800c898 <HAL_TIM_PWM_PulseFinishedCallback>
 800c9d0:	e7a0      	b.n	800c914 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800c9d2:	f7ff ff5f 	bl	800c894 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800c9d6:	4620      	mov	r0, r4
 800c9d8:	f7ff ff5e 	bl	800c898 <HAL_TIM_PWM_PulseFinishedCallback>
 800c9dc:	e7af      	b.n	800c93e <HAL_TIM_IRQHandler+0xa2>
}
 800c9de:	bd10      	pop	{r4, pc}

0800c9e0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c9e0:	4a30      	ldr	r2, [pc, #192]	; (800caa4 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800c9e2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800c9e4:	4290      	cmp	r0, r2
 800c9e6:	d012      	beq.n	800ca0e <TIM_Base_SetConfig+0x2e>
 800c9e8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800c9ec:	d00f      	beq.n	800ca0e <TIM_Base_SetConfig+0x2e>
 800c9ee:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800c9f2:	4290      	cmp	r0, r2
 800c9f4:	d00b      	beq.n	800ca0e <TIM_Base_SetConfig+0x2e>
 800c9f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800c9fa:	4290      	cmp	r0, r2
 800c9fc:	d007      	beq.n	800ca0e <TIM_Base_SetConfig+0x2e>
 800c9fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca02:	4290      	cmp	r0, r2
 800ca04:	d003      	beq.n	800ca0e <TIM_Base_SetConfig+0x2e>
 800ca06:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ca0a:	4290      	cmp	r0, r2
 800ca0c:	d119      	bne.n	800ca42 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800ca0e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ca10:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800ca14:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ca16:	4a23      	ldr	r2, [pc, #140]	; (800caa4 <TIM_Base_SetConfig+0xc4>)
 800ca18:	4290      	cmp	r0, r2
 800ca1a:	d029      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca1c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800ca20:	d026      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca22:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ca26:	4290      	cmp	r0, r2
 800ca28:	d022      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca2a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca2e:	4290      	cmp	r0, r2
 800ca30:	d01e      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca32:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca36:	4290      	cmp	r0, r2
 800ca38:	d01a      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca3a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ca3e:	4290      	cmp	r0, r2
 800ca40:	d016      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca42:	4a19      	ldr	r2, [pc, #100]	; (800caa8 <TIM_Base_SetConfig+0xc8>)
 800ca44:	4290      	cmp	r0, r2
 800ca46:	d013      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca48:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca4c:	4290      	cmp	r0, r2
 800ca4e:	d00f      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca50:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca54:	4290      	cmp	r0, r2
 800ca56:	d00b      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca58:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800ca5c:	4290      	cmp	r0, r2
 800ca5e:	d007      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca60:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca64:	4290      	cmp	r0, r2
 800ca66:	d003      	beq.n	800ca70 <TIM_Base_SetConfig+0x90>
 800ca68:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ca6c:	4290      	cmp	r0, r2
 800ca6e:	d103      	bne.n	800ca78 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ca70:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800ca72:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800ca76:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800ca78:	694a      	ldr	r2, [r1, #20]
 800ca7a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800ca7e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800ca80:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800ca82:	688b      	ldr	r3, [r1, #8]
 800ca84:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800ca86:	680b      	ldr	r3, [r1, #0]
 800ca88:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800ca8a:	4b06      	ldr	r3, [pc, #24]	; (800caa4 <TIM_Base_SetConfig+0xc4>)
 800ca8c:	4298      	cmp	r0, r3
 800ca8e:	d003      	beq.n	800ca98 <TIM_Base_SetConfig+0xb8>
 800ca90:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ca94:	4298      	cmp	r0, r3
 800ca96:	d101      	bne.n	800ca9c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800ca98:	690b      	ldr	r3, [r1, #16]
 800ca9a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800ca9c:	2301      	movs	r3, #1
 800ca9e:	6143      	str	r3, [r0, #20]
}
 800caa0:	4770      	bx	lr
 800caa2:	bf00      	nop
 800caa4:	40010000 	.word	0x40010000
 800caa8:	40014000 	.word	0x40014000

0800caac <HAL_TIM_Base_Init>:
{
 800caac:	b510      	push	{r4, lr}
  if (htim == NULL)
 800caae:	4604      	mov	r4, r0
 800cab0:	b330      	cbz	r0, 800cb00 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800cab2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cab6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800caba:	b91b      	cbnz	r3, 800cac4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800cabc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cac0:	f7ff feac 	bl	800c81c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800cac4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cac6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cac8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cacc:	1d21      	adds	r1, r4, #4
 800cace:	f7ff ff87 	bl	800c9e0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cad2:	2301      	movs	r3, #1
 800cad4:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800cad8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cada:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cade:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cae2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cae6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800caea:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800caee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800caf2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800caf6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cafa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800cafe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800cb00:	2001      	movs	r0, #1
 800cb02:	e7fc      	b.n	800cafe <HAL_TIM_Base_Init+0x52>

0800cb04 <HAL_TIMEx_CommutCallback>:
 800cb04:	4770      	bx	lr

0800cb06 <HAL_TIMEx_BreakCallback>:
 800cb06:	4770      	bx	lr

0800cb08 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800cb08:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb0c:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cb10:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb12:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800cb16:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800cb1a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800cb1e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800cb22:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cb24:	b9a2      	cbnz	r2, 800cb50 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb26:	ea43 0209 	orr.w	r2, r3, r9
 800cb2a:	432a      	orrs	r2, r5
 800cb2c:	ea42 0308 	orr.w	r3, r2, r8
 800cb30:	6801      	ldr	r1, [r0, #0]
 800cb32:	ea43 030e 	orr.w	r3, r3, lr
 800cb36:	ea43 030c 	orr.w	r3, r3, ip
 800cb3a:	433b      	orrs	r3, r7
 800cb3c:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800cb40:	4333      	orrs	r3, r6
 800cb42:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800cb46:	430b      	orrs	r3, r1
 800cb48:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800cb4a:	2000      	movs	r0, #0
 800cb4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cb50:	6802      	ldr	r2, [r0, #0]
 800cb52:	ea43 0309 	orr.w	r3, r3, r9
 800cb56:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800cb5a:	4313      	orrs	r3, r2
 800cb5c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800cb5e:	ea45 0308 	orr.w	r3, r5, r8
 800cb62:	6842      	ldr	r2, [r0, #4]
 800cb64:	ea43 030e 	orr.w	r3, r3, lr
 800cb68:	ea43 030c 	orr.w	r3, r3, ip
 800cb6c:	433b      	orrs	r3, r7
 800cb6e:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800cb72:	4333      	orrs	r3, r6
 800cb74:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800cb78:	4313      	orrs	r3, r2
 800cb7a:	6043      	str	r3, [r0, #4]
 800cb7c:	e7e5      	b.n	800cb4a <FMC_SDRAM_Init+0x42>

0800cb7e <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb7e:	68cb      	ldr	r3, [r1, #12]
 800cb80:	f103 3cff 	add.w	ip, r3, #4294967295
 800cb84:	694b      	ldr	r3, [r1, #20]
{
 800cb86:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cb88:	680f      	ldr	r7, [r1, #0]
 800cb8a:	684c      	ldr	r4, [r1, #4]
 800cb8c:	688e      	ldr	r6, [r1, #8]
 800cb8e:	690d      	ldr	r5, [r1, #16]
 800cb90:	6989      	ldr	r1, [r1, #24]
 800cb92:	3b01      	subs	r3, #1
 800cb94:	051b      	lsls	r3, r3, #20
 800cb96:	3c01      	subs	r4, #1
 800cb98:	3e01      	subs	r6, #1
 800cb9a:	3d01      	subs	r5, #1
 800cb9c:	3901      	subs	r1, #1
 800cb9e:	3f01      	subs	r7, #1
 800cba0:	0124      	lsls	r4, r4, #4
 800cba2:	0236      	lsls	r6, r6, #8
 800cba4:	042d      	lsls	r5, r5, #16
 800cba6:	0609      	lsls	r1, r1, #24
 800cba8:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800cbac:	b95a      	cbnz	r2, 800cbc6 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cbae:	433b      	orrs	r3, r7
 800cbb0:	4323      	orrs	r3, r4
 800cbb2:	6882      	ldr	r2, [r0, #8]
 800cbb4:	4333      	orrs	r3, r6
 800cbb6:	432b      	orrs	r3, r5
 800cbb8:	430b      	orrs	r3, r1
 800cbba:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800cbbe:	4313      	orrs	r3, r2
 800cbc0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800cbc2:	2000      	movs	r0, #0
 800cbc4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800cbc6:	6882      	ldr	r2, [r0, #8]
 800cbc8:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800cbcc:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800cbd0:	431a      	orrs	r2, r3
 800cbd2:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800cbd4:	ea44 0306 	orr.w	r3, r4, r6
 800cbd8:	68c2      	ldr	r2, [r0, #12]
 800cbda:	433b      	orrs	r3, r7
 800cbdc:	432b      	orrs	r3, r5
 800cbde:	430b      	orrs	r3, r1
 800cbe0:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800cbe4:	4313      	orrs	r3, r2
 800cbe6:	60c3      	str	r3, [r0, #12]
 800cbe8:	e7eb      	b.n	800cbc2 <FMC_SDRAM_Timing_Init+0x44>

0800cbea <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800cbea:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800cbee:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800cbf2:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800cbf6:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800cbfa:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800cbfc:	2300      	movs	r3, #0
 800cbfe:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800cc00:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800cc02:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800cc04:	4618      	mov	r0, r3
 800cc06:	4770      	bx	lr

0800cc08 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cc08:	b570      	push	{r4, r5, r6, lr}
 800cc0a:	4604      	mov	r4, r0
 800cc0c:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cc0e:	6902      	ldr	r2, [r0, #16]
 800cc10:	e9d1 3000 	ldrd	r3, r0, [r1]
 800cc14:	4303      	orrs	r3, r0
 800cc16:	68c8      	ldr	r0, [r1, #12]
 800cc18:	0d92      	lsrs	r2, r2, #22
 800cc1a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800cc1e:	0592      	lsls	r2, r2, #22
 800cc20:	4313      	orrs	r3, r2
 800cc22:	688a      	ldr	r2, [r1, #8]
 800cc24:	3a01      	subs	r2, #1
 800cc26:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cc2a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cc2c:	f7fc ffde 	bl	8009bec <HAL_GetTick>
 800cc30:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800cc32:	69a3      	ldr	r3, [r4, #24]
 800cc34:	f013 0320 	ands.w	r3, r3, #32
 800cc38:	d101      	bne.n	800cc3e <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cc3a:	4618      	mov	r0, r3
 800cc3c:	e003      	b.n	800cc46 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800cc3e:	1c6b      	adds	r3, r5, #1
 800cc40:	d0f7      	beq.n	800cc32 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cc42:	b90d      	cbnz	r5, 800cc48 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800cc44:	2003      	movs	r0, #3
}
 800cc46:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cc48:	f7fc ffd0 	bl	8009bec <HAL_GetTick>
 800cc4c:	1b80      	subs	r0, r0, r6
 800cc4e:	42a8      	cmp	r0, r5
 800cc50:	d9ef      	bls.n	800cc32 <FMC_SDRAM_SendCommand+0x2a>
 800cc52:	e7f7      	b.n	800cc44 <FMC_SDRAM_SendCommand+0x3c>

0800cc54 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cc54:	6943      	ldr	r3, [r0, #20]
 800cc56:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800cc5a:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cc5e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800cc62:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800cc64:	2000      	movs	r0, #0
 800cc66:	4770      	bx	lr

0800cc68 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cc68:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cc6a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cc6e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cc70:	f001 fe40 	bl	800e8f4 <xTaskGetSchedulerState>
 800cc74:	2801      	cmp	r0, #1
 800cc76:	d003      	beq.n	800cc80 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cc78:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cc7c:	f000 bbe2 	b.w	800d444 <xPortSysTickHandler>
}
 800cc80:	bd08      	pop	{r3, pc}
	...

0800cc84 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cc84:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cc88:	b92b      	cbnz	r3, 800cc96 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cc8a:	4b06      	ldr	r3, [pc, #24]	; (800cca4 <osKernelInitialize+0x20>)
 800cc8c:	6818      	ldr	r0, [r3, #0]
 800cc8e:	b928      	cbnz	r0, 800cc9c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cc90:	2201      	movs	r2, #1
 800cc92:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cc94:	4770      	bx	lr
    stat = osErrorISR;
 800cc96:	f06f 0005 	mvn.w	r0, #5
 800cc9a:	4770      	bx	lr
    } else {
      stat = osError;
 800cc9c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cca0:	4770      	bx	lr
 800cca2:	bf00      	nop
 800cca4:	2000641c 	.word	0x2000641c

0800cca8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cca8:	b510      	push	{r4, lr}
 800ccaa:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800ccae:	b95c      	cbnz	r4, 800ccc8 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800ccb0:	4b08      	ldr	r3, [pc, #32]	; (800ccd4 <osKernelStart+0x2c>)
 800ccb2:	681a      	ldr	r2, [r3, #0]
 800ccb4:	2a01      	cmp	r2, #1
 800ccb6:	d10a      	bne.n	800ccce <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800ccb8:	4a07      	ldr	r2, [pc, #28]	; (800ccd8 <osKernelStart+0x30>)
 800ccba:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800ccbc:	2202      	movs	r2, #2
 800ccbe:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800ccc0:	f001 fcbc 	bl	800e63c <vTaskStartScheduler>
      stat = osOK;
 800ccc4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800ccc6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800ccc8:	f06f 0005 	mvn.w	r0, #5
 800cccc:	e7fb      	b.n	800ccc6 <osKernelStart+0x1e>
      stat = osError;
 800ccce:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800ccd2:	e7f8      	b.n	800ccc6 <osKernelStart+0x1e>
 800ccd4:	2000641c 	.word	0x2000641c
 800ccd8:	e000ed00 	.word	0xe000ed00

0800ccdc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800ccdc:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ccde:	b087      	sub	sp, #28
 800cce0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cce2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cce4:	460b      	mov	r3, r1
  hTask = NULL;
 800cce6:	9205      	str	r2, [sp, #20]
 800cce8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800ccec:	b9d2      	cbnz	r2, 800cd24 <osThreadNew+0x48>
 800ccee:	b1c8      	cbz	r0, 800cd24 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800ccf0:	2c00      	cmp	r4, #0
 800ccf2:	d02f      	beq.n	800cd54 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800ccf4:	69a5      	ldr	r5, [r4, #24]
 800ccf6:	2d00      	cmp	r5, #0
 800ccf8:	bf08      	it	eq
 800ccfa:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800ccfc:	1e69      	subs	r1, r5, #1
 800ccfe:	2937      	cmp	r1, #55	; 0x37
 800cd00:	46ac      	mov	ip, r5
 800cd02:	d82b      	bhi.n	800cd5c <osThreadNew+0x80>
 800cd04:	6861      	ldr	r1, [r4, #4]
 800cd06:	07c9      	lsls	r1, r1, #31
 800cd08:	d428      	bmi.n	800cd5c <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cd0a:	6966      	ldr	r6, [r4, #20]
 800cd0c:	b16e      	cbz	r6, 800cd2a <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cd0e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd10:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800cd14:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd16:	b157      	cbz	r7, 800cd2e <osThreadNew+0x52>
 800cd18:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800cd1c:	d902      	bls.n	800cd24 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cd1e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cd20:	b104      	cbz	r4, 800cd24 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cd22:	b9ee      	cbnz	r6, 800cd60 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cd24:	9805      	ldr	r0, [sp, #20]
}
 800cd26:	b007      	add	sp, #28
 800cd28:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cd2a:	2280      	movs	r2, #128	; 0x80
 800cd2c:	e7f0      	b.n	800cd10 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cd2e:	f1be 0f00 	cmp.w	lr, #0
 800cd32:	d1f7      	bne.n	800cd24 <osThreadNew+0x48>
      if (mem == 0) {
 800cd34:	6924      	ldr	r4, [r4, #16]
 800cd36:	2c00      	cmp	r4, #0
 800cd38:	d1f4      	bne.n	800cd24 <osThreadNew+0x48>
 800cd3a:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cd3c:	a905      	add	r1, sp, #20
 800cd3e:	e9cd c100 	strd	ip, r1, [sp]
 800cd42:	b292      	uxth	r2, r2
 800cd44:	4621      	mov	r1, r4
 800cd46:	f001 faf4 	bl	800e332 <xTaskCreate>
 800cd4a:	2801      	cmp	r0, #1
            hTask = NULL;
 800cd4c:	bf1c      	itt	ne
 800cd4e:	2300      	movne	r3, #0
 800cd50:	9305      	strne	r3, [sp, #20]
 800cd52:	e7e7      	b.n	800cd24 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800cd54:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800cd58:	2280      	movs	r2, #128	; 0x80
 800cd5a:	e7ef      	b.n	800cd3c <osThreadNew+0x60>
        return (NULL);
 800cd5c:	4610      	mov	r0, r2
 800cd5e:	e7e2      	b.n	800cd26 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800cd60:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800cd64:	9500      	str	r5, [sp, #0]
 800cd66:	f001 faac 	bl	800e2c2 <xTaskCreateStatic>
 800cd6a:	9005      	str	r0, [sp, #20]
 800cd6c:	e7da      	b.n	800cd24 <osThreadNew+0x48>

0800cd6e <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800cd6e:	b510      	push	{r4, lr}
 800cd70:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cd74:	b924      	cbnz	r4, 800cd80 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800cd76:	b110      	cbz	r0, 800cd7e <osDelay+0x10>
      vTaskDelay(ticks);
 800cd78:	f001 fc20 	bl	800e5bc <vTaskDelay>
    stat = osOK;
 800cd7c:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800cd7e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cd80:	f06f 0005 	mvn.w	r0, #5
 800cd84:	e7fb      	b.n	800cd7e <osDelay+0x10>

0800cd86 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800cd86:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cd88:	4604      	mov	r4, r0
 800cd8a:	460e      	mov	r6, r1
 800cd8c:	4615      	mov	r5, r2
 800cd8e:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cd92:	b11a      	cbz	r2, 800cd9c <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800cd94:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800cd96:	4620      	mov	r0, r4
 800cd98:	b003      	add	sp, #12
 800cd9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800cd9c:	2800      	cmp	r0, #0
 800cd9e:	d0f9      	beq.n	800cd94 <osSemaphoreNew+0xe>
 800cda0:	4288      	cmp	r0, r1
 800cda2:	d3f7      	bcc.n	800cd94 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800cda4:	b1e5      	cbz	r5, 800cde0 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800cda6:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800cdaa:	b1bb      	cbz	r3, 800cddc <osSemaphoreNew+0x56>
 800cdac:	2f4f      	cmp	r7, #79	; 0x4f
 800cdae:	d9f1      	bls.n	800cd94 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cdb0:	2801      	cmp	r0, #1
 800cdb2:	d12a      	bne.n	800ce0a <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800cdb4:	2103      	movs	r1, #3
 800cdb6:	9100      	str	r1, [sp, #0]
 800cdb8:	4611      	mov	r1, r2
 800cdba:	f000 fcec 	bl	800d796 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800cdbe:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800cdc0:	2800      	cmp	r0, #0
 800cdc2:	d0e7      	beq.n	800cd94 <osSemaphoreNew+0xe>
 800cdc4:	b1de      	cbz	r6, 800cdfe <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cdc6:	2300      	movs	r3, #0
 800cdc8:	461a      	mov	r2, r3
 800cdca:	4619      	mov	r1, r3
 800cdcc:	f000 fd98 	bl	800d900 <xQueueGenericSend>
 800cdd0:	2801      	cmp	r0, #1
 800cdd2:	d014      	beq.n	800cdfe <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800cdd4:	4620      	mov	r0, r4
 800cdd6:	f001 f8d3 	bl	800df80 <vQueueDelete>
 800cdda:	e7db      	b.n	800cd94 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800cddc:	2f00      	cmp	r7, #0
 800cdde:	d1d9      	bne.n	800cd94 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800cde0:	2c01      	cmp	r4, #1
 800cde2:	d105      	bne.n	800cdf0 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800cde4:	2203      	movs	r2, #3
 800cde6:	2100      	movs	r1, #0
 800cde8:	4620      	mov	r0, r4
 800cdea:	f000 fd22 	bl	800d832 <xQueueGenericCreate>
 800cdee:	e7e6      	b.n	800cdbe <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800cdf0:	4620      	mov	r0, r4
 800cdf2:	4631      	mov	r1, r6
 800cdf4:	f000 fd66 	bl	800d8c4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800cdf8:	4604      	mov	r4, r0
 800cdfa:	2800      	cmp	r0, #0
 800cdfc:	d0ca      	beq.n	800cd94 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800cdfe:	b955      	cbnz	r5, 800ce16 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800ce00:	4629      	mov	r1, r5
 800ce02:	4620      	mov	r0, r4
 800ce04:	f001 f896 	bl	800df34 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800ce08:	e7c5      	b.n	800cd96 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800ce0a:	461a      	mov	r2, r3
 800ce0c:	f000 fd38 	bl	800d880 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800ce10:	4604      	mov	r4, r0
 800ce12:	2800      	cmp	r0, #0
 800ce14:	d0be      	beq.n	800cd94 <osSemaphoreNew+0xe>
          name = attr->name;
 800ce16:	682d      	ldr	r5, [r5, #0]
 800ce18:	e7f2      	b.n	800ce00 <osSemaphoreNew+0x7a>

0800ce1a <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800ce1a:	b513      	push	{r0, r1, r4, lr}
 800ce1c:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ce1e:	b308      	cbz	r0, 800ce64 <osSemaphoreAcquire+0x4a>
 800ce20:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ce24:	b1b3      	cbz	r3, 800ce54 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800ce26:	b9e9      	cbnz	r1, 800ce64 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce28:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800ce2a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800ce2c:	f001 f833 	bl	800de96 <xQueueReceiveFromISR>
 800ce30:	2801      	cmp	r0, #1
 800ce32:	d114      	bne.n	800ce5e <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800ce34:	9b01      	ldr	r3, [sp, #4]
 800ce36:	b913      	cbnz	r3, 800ce3e <osSemaphoreAcquire+0x24>
  stat = osOK;
 800ce38:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800ce3a:	b002      	add	sp, #8
 800ce3c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800ce3e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce42:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce46:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce4a:	f3bf 8f4f 	dsb	sy
 800ce4e:	f3bf 8f6f 	isb	sy
 800ce52:	e7f1      	b.n	800ce38 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800ce54:	f000 ff5c 	bl	800dd10 <xQueueSemaphoreTake>
 800ce58:	2801      	cmp	r0, #1
 800ce5a:	d0ed      	beq.n	800ce38 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800ce5c:	b92c      	cbnz	r4, 800ce6a <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800ce5e:	f06f 0002 	mvn.w	r0, #2
 800ce62:	e7ea      	b.n	800ce3a <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800ce64:	f06f 0003 	mvn.w	r0, #3
 800ce68:	e7e7      	b.n	800ce3a <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800ce6a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800ce6e:	e7e4      	b.n	800ce3a <osSemaphoreAcquire+0x20>

0800ce70 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800ce70:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800ce72:	b310      	cbz	r0, 800ceba <osSemaphoreRelease+0x4a>
 800ce74:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800ce78:	b1b3      	cbz	r3, 800cea8 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800ce7a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ce7c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800ce7e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800ce80:	f000 fe53 	bl	800db2a <xQueueGiveFromISR>
 800ce84:	2801      	cmp	r0, #1
 800ce86:	d115      	bne.n	800ceb4 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800ce88:	9b01      	ldr	r3, [sp, #4]
 800ce8a:	b913      	cbnz	r3, 800ce92 <osSemaphoreRelease+0x22>
  stat = osOK;
 800ce8c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800ce8e:	b002      	add	sp, #8
 800ce90:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800ce92:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ce96:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ce9a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ce9e:	f3bf 8f4f 	dsb	sy
 800cea2:	f3bf 8f6f 	isb	sy
 800cea6:	e7f1      	b.n	800ce8c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800cea8:	461a      	mov	r2, r3
 800ceaa:	4619      	mov	r1, r3
 800ceac:	f000 fd28 	bl	800d900 <xQueueGenericSend>
 800ceb0:	2801      	cmp	r0, #1
 800ceb2:	d0eb      	beq.n	800ce8c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800ceb4:	f06f 0002 	mvn.w	r0, #2
 800ceb8:	e7e9      	b.n	800ce8e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800ceba:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800cebe:	e7e6      	b.n	800ce8e <osSemaphoreRelease+0x1e>

0800cec0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800cec0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cec2:	4605      	mov	r5, r0
 800cec4:	460e      	mov	r6, r1
 800cec6:	4614      	mov	r4, r2
 800cec8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800cecc:	b11f      	cbz	r7, 800ced6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 800cece:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800ced0:	4628      	mov	r0, r5
 800ced2:	b003      	add	sp, #12
 800ced4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800ced6:	2800      	cmp	r0, #0
 800ced8:	d0f9      	beq.n	800cece <osMessageQueueNew+0xe>
 800ceda:	2900      	cmp	r1, #0
 800cedc:	d0f7      	beq.n	800cece <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800cede:	b1da      	cbz	r2, 800cf18 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800cee0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800cee4:	b183      	cbz	r3, 800cf08 <osMessageQueueNew+0x48>
 800cee6:	2a4f      	cmp	r2, #79	; 0x4f
 800cee8:	d9f1      	bls.n	800cece <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800ceea:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800ceec:	2a00      	cmp	r2, #0
 800ceee:	d0ee      	beq.n	800cece <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800cef0:	6966      	ldr	r6, [r4, #20]
 800cef2:	434d      	muls	r5, r1
 800cef4:	42ae      	cmp	r6, r5
 800cef6:	d3ea      	bcc.n	800cece <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800cef8:	9700      	str	r7, [sp, #0]
 800cefa:	f000 fc4c 	bl	800d796 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800cefe:	4605      	mov	r5, r0
 800cf00:	2800      	cmp	r0, #0
 800cf02:	d0e4      	beq.n	800cece <osMessageQueueNew+0xe>
        name = attr->name;
 800cf04:	6824      	ldr	r4, [r4, #0]
 800cf06:	e011      	b.n	800cf2c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800cf08:	2a00      	cmp	r2, #0
 800cf0a:	d1e0      	bne.n	800cece <osMessageQueueNew+0xe>
 800cf0c:	6923      	ldr	r3, [r4, #16]
 800cf0e:	2b00      	cmp	r3, #0
 800cf10:	d1dd      	bne.n	800cece <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800cf12:	6963      	ldr	r3, [r4, #20]
 800cf14:	2b00      	cmp	r3, #0
 800cf16:	d1da      	bne.n	800cece <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800cf18:	4628      	mov	r0, r5
 800cf1a:	2200      	movs	r2, #0
 800cf1c:	4631      	mov	r1, r6
 800cf1e:	f000 fc88 	bl	800d832 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800cf22:	4605      	mov	r5, r0
 800cf24:	2800      	cmp	r0, #0
 800cf26:	d0d2      	beq.n	800cece <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800cf28:	2c00      	cmp	r4, #0
 800cf2a:	d1eb      	bne.n	800cf04 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800cf2c:	4621      	mov	r1, r4
 800cf2e:	4628      	mov	r0, r5
 800cf30:	f001 f800 	bl	800df34 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800cf34:	e7cc      	b.n	800ced0 <osMessageQueueNew+0x10>

0800cf36 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800cf36:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cf38:	461c      	mov	r4, r3
 800cf3a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cf3e:	b1c6      	cbz	r6, 800cf72 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cf40:	b318      	cbz	r0, 800cf8a <osMessageQueuePut+0x54>
 800cf42:	b311      	cbz	r1, 800cf8a <osMessageQueuePut+0x54>
 800cf44:	bb0b      	cbnz	r3, 800cf8a <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cf46:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cf48:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800cf4a:	f000 fd8c 	bl	800da66 <xQueueGenericSendFromISR>
 800cf4e:	2801      	cmp	r0, #1
 800cf50:	d118      	bne.n	800cf84 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cf52:	9b01      	ldr	r3, [sp, #4]
 800cf54:	b913      	cbnz	r3, 800cf5c <osMessageQueuePut+0x26>
  stat = osOK;
 800cf56:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cf58:	b002      	add	sp, #8
 800cf5a:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800cf5c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf60:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cf64:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cf68:	f3bf 8f4f 	dsb	sy
 800cf6c:	f3bf 8f6f 	isb	sy
 800cf70:	e7f1      	b.n	800cf56 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cf72:	b150      	cbz	r0, 800cf8a <osMessageQueuePut+0x54>
 800cf74:	b149      	cbz	r1, 800cf8a <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cf76:	4633      	mov	r3, r6
 800cf78:	4622      	mov	r2, r4
 800cf7a:	f000 fcc1 	bl	800d900 <xQueueGenericSend>
 800cf7e:	2801      	cmp	r0, #1
 800cf80:	d0e9      	beq.n	800cf56 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800cf82:	b92c      	cbnz	r4, 800cf90 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800cf84:	f06f 0002 	mvn.w	r0, #2
 800cf88:	e7e6      	b.n	800cf58 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800cf8a:	f06f 0003 	mvn.w	r0, #3
 800cf8e:	e7e3      	b.n	800cf58 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800cf90:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800cf94:	e7e0      	b.n	800cf58 <osMessageQueuePut+0x22>

0800cf96 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800cf96:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800cf98:	461c      	mov	r4, r3
 800cf9a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800cf9e:	b1c3      	cbz	r3, 800cfd2 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800cfa0:	b310      	cbz	r0, 800cfe8 <osMessageQueueGet+0x52>
 800cfa2:	b309      	cbz	r1, 800cfe8 <osMessageQueueGet+0x52>
 800cfa4:	bb04      	cbnz	r4, 800cfe8 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cfa6:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800cfa8:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800cfaa:	f000 ff74 	bl	800de96 <xQueueReceiveFromISR>
 800cfae:	2801      	cmp	r0, #1
 800cfb0:	d117      	bne.n	800cfe2 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800cfb2:	9b01      	ldr	r3, [sp, #4]
 800cfb4:	b913      	cbnz	r3, 800cfbc <osMessageQueueGet+0x26>
  stat = osOK;
 800cfb6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800cfb8:	b003      	add	sp, #12
 800cfba:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800cfbc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cfc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800cfc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800cfc8:	f3bf 8f4f 	dsb	sy
 800cfcc:	f3bf 8f6f 	isb	sy
 800cfd0:	e7f1      	b.n	800cfb6 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800cfd2:	b148      	cbz	r0, 800cfe8 <osMessageQueueGet+0x52>
 800cfd4:	b141      	cbz	r1, 800cfe8 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800cfd6:	4622      	mov	r2, r4
 800cfd8:	f000 fdfb 	bl	800dbd2 <xQueueReceive>
 800cfdc:	2801      	cmp	r0, #1
 800cfde:	d0ea      	beq.n	800cfb6 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800cfe0:	b92c      	cbnz	r4, 800cfee <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800cfe2:	f06f 0002 	mvn.w	r0, #2
 800cfe6:	e7e7      	b.n	800cfb8 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800cfe8:	f06f 0003 	mvn.w	r0, #3
 800cfec:	e7e4      	b.n	800cfb8 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800cfee:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800cff2:	e7e1      	b.n	800cfb8 <osMessageQueueGet+0x22>

0800cff4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800cff4:	4b03      	ldr	r3, [pc, #12]	; (800d004 <vApplicationGetIdleTaskMemory+0x10>)
 800cff6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800cff8:	4b03      	ldr	r3, [pc, #12]	; (800d008 <vApplicationGetIdleTaskMemory+0x14>)
 800cffa:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800cffc:	2380      	movs	r3, #128	; 0x80
 800cffe:	6013      	str	r3, [r2, #0]
}
 800d000:	4770      	bx	lr
 800d002:	bf00      	nop
 800d004:	200063bc 	.word	0x200063bc
 800d008:	200061bc 	.word	0x200061bc

0800d00c <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d00c:	4b03      	ldr	r3, [pc, #12]	; (800d01c <vApplicationGetTimerTaskMemory+0x10>)
 800d00e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d010:	4b03      	ldr	r3, [pc, #12]	; (800d020 <vApplicationGetTimerTaskMemory+0x14>)
 800d012:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d014:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d018:	6013      	str	r3, [r2, #0]
}
 800d01a:	4770      	bx	lr
 800d01c:	20006820 	.word	0x20006820
 800d020:	20006420 	.word	0x20006420

0800d024 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800d024:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d026:	4b0f      	ldr	r3, [pc, #60]	; (800d064 <prvInsertBlockIntoFreeList+0x40>)
 800d028:	461a      	mov	r2, r3
 800d02a:	681b      	ldr	r3, [r3, #0]
 800d02c:	4283      	cmp	r3, r0
 800d02e:	d3fb      	bcc.n	800d028 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d030:	6854      	ldr	r4, [r2, #4]
 800d032:	1911      	adds	r1, r2, r4
 800d034:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d036:	bf01      	itttt	eq
 800d038:	6841      	ldreq	r1, [r0, #4]
 800d03a:	4610      	moveq	r0, r2
 800d03c:	1909      	addeq	r1, r1, r4
 800d03e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d040:	6844      	ldr	r4, [r0, #4]
 800d042:	1901      	adds	r1, r0, r4
 800d044:	428b      	cmp	r3, r1
 800d046:	d107      	bne.n	800d058 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d048:	4907      	ldr	r1, [pc, #28]	; (800d068 <prvInsertBlockIntoFreeList+0x44>)
 800d04a:	6809      	ldr	r1, [r1, #0]
 800d04c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d04e:	bf1f      	itttt	ne
 800d050:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d052:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d054:	1909      	addne	r1, r1, r4
 800d056:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d058:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800d05a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d05c:	bf18      	it	ne
 800d05e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d060:	bd10      	pop	{r4, pc}
 800d062:	bf00      	nop
 800d064:	2000e898 	.word	0x2000e898
 800d068:	20006880 	.word	0x20006880

0800d06c <pvPortMalloc>:
{
 800d06c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d070:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800d072:	f001 f98b 	bl	800e38c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800d076:	4842      	ldr	r0, [pc, #264]	; (800d180 <pvPortMalloc+0x114>)
 800d078:	4d42      	ldr	r5, [pc, #264]	; (800d184 <pvPortMalloc+0x118>)
 800d07a:	6803      	ldr	r3, [r0, #0]
 800d07c:	bb0b      	cbnz	r3, 800d0c2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800d07e:	4942      	ldr	r1, [pc, #264]	; (800d188 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d080:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d082:	bf1f      	itttt	ne
 800d084:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d086:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d08a:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800d08e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d090:	bf14      	ite	ne
 800d092:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800d094:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800d098:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d09a:	4e3c      	ldr	r6, [pc, #240]	; (800d18c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800d09c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d09e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800d0a2:	2300      	movs	r3, #0
 800d0a4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d0a6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d0a8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d0ac:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d0ae:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800d0b2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0b4:	4a36      	ldr	r2, [pc, #216]	; (800d190 <pvPortMalloc+0x124>)
 800d0b6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d0b8:	4a36      	ldr	r2, [pc, #216]	; (800d194 <pvPortMalloc+0x128>)
 800d0ba:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d0bc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800d0c0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d0c2:	682f      	ldr	r7, [r5, #0]
 800d0c4:	4227      	tst	r7, r4
 800d0c6:	d155      	bne.n	800d174 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800d0c8:	2c00      	cmp	r4, #0
 800d0ca:	d046      	beq.n	800d15a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800d0cc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d0d0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d0d2:	bf1c      	itt	ne
 800d0d4:	f023 0307 	bicne.w	r3, r3, #7
 800d0d8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d0da:	2b00      	cmp	r3, #0
 800d0dc:	d04a      	beq.n	800d174 <pvPortMalloc+0x108>
 800d0de:	4c2d      	ldr	r4, [pc, #180]	; (800d194 <pvPortMalloc+0x128>)
 800d0e0:	6826      	ldr	r6, [r4, #0]
 800d0e2:	429e      	cmp	r6, r3
 800d0e4:	d346      	bcc.n	800d174 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800d0e6:	4a29      	ldr	r2, [pc, #164]	; (800d18c <pvPortMalloc+0x120>)
 800d0e8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d0ea:	6869      	ldr	r1, [r5, #4]
 800d0ec:	4299      	cmp	r1, r3
 800d0ee:	d204      	bcs.n	800d0fa <pvPortMalloc+0x8e>
 800d0f0:	f8d5 c000 	ldr.w	ip, [r5]
 800d0f4:	f1bc 0f00 	cmp.w	ip, #0
 800d0f8:	d115      	bne.n	800d126 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800d0fa:	6800      	ldr	r0, [r0, #0]
 800d0fc:	42a8      	cmp	r0, r5
 800d0fe:	d039      	beq.n	800d174 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d100:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d102:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d104:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d108:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d10a:	2910      	cmp	r1, #16
 800d10c:	d912      	bls.n	800d134 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d10e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d110:	0742      	lsls	r2, r0, #29
 800d112:	d00b      	beq.n	800d12c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d114:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d118:	f383 8811 	msr	BASEPRI, r3
 800d11c:	f3bf 8f6f 	isb	sy
 800d120:	f3bf 8f4f 	dsb	sy
 800d124:	e7fe      	b.n	800d124 <pvPortMalloc+0xb8>
 800d126:	462a      	mov	r2, r5
 800d128:	4665      	mov	r5, ip
 800d12a:	e7de      	b.n	800d0ea <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d12c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800d12e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d130:	f7ff ff78 	bl	800d024 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d134:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d136:	4916      	ldr	r1, [pc, #88]	; (800d190 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800d138:	4a17      	ldr	r2, [pc, #92]	; (800d198 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d13a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d13c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d13e:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800d140:	2300      	movs	r3, #0
 800d142:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d144:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d146:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d148:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800d14a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d14e:	bf38      	it	cc
 800d150:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d152:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d156:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800d158:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d15a:	f001 f9bb 	bl	800e4d4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d15e:	0763      	lsls	r3, r4, #29
 800d160:	d00a      	beq.n	800d178 <pvPortMalloc+0x10c>
 800d162:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d166:	f383 8811 	msr	BASEPRI, r3
 800d16a:	f3bf 8f6f 	isb	sy
 800d16e:	f3bf 8f4f 	dsb	sy
 800d172:	e7fe      	b.n	800d172 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800d174:	2400      	movs	r4, #0
 800d176:	e7f0      	b.n	800d15a <pvPortMalloc+0xee>
}
 800d178:	4620      	mov	r0, r4
 800d17a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d17e:	bf00      	nop
 800d180:	20006880 	.word	0x20006880
 800d184:	2000e884 	.word	0x2000e884
 800d188:	20006884 	.word	0x20006884
 800d18c:	2000e898 	.word	0x2000e898
 800d190:	2000e88c 	.word	0x2000e88c
 800d194:	2000e888 	.word	0x2000e888
 800d198:	2000e890 	.word	0x2000e890

0800d19c <vPortFree>:
{
 800d19c:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d19e:	4604      	mov	r4, r0
 800d1a0:	b390      	cbz	r0, 800d208 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d1a2:	4a1a      	ldr	r2, [pc, #104]	; (800d20c <vPortFree+0x70>)
 800d1a4:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d1a8:	6812      	ldr	r2, [r2, #0]
 800d1aa:	4213      	tst	r3, r2
 800d1ac:	d108      	bne.n	800d1c0 <vPortFree+0x24>
 800d1ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1b2:	f383 8811 	msr	BASEPRI, r3
 800d1b6:	f3bf 8f6f 	isb	sy
 800d1ba:	f3bf 8f4f 	dsb	sy
 800d1be:	e7fe      	b.n	800d1be <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d1c0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d1c4:	b141      	cbz	r1, 800d1d8 <vPortFree+0x3c>
 800d1c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d1ca:	f383 8811 	msr	BASEPRI, r3
 800d1ce:	f3bf 8f6f 	isb	sy
 800d1d2:	f3bf 8f4f 	dsb	sy
 800d1d6:	e7fe      	b.n	800d1d6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d1d8:	ea23 0302 	bic.w	r3, r3, r2
 800d1dc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d1e0:	f001 f8d4 	bl	800e38c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d1e4:	4a0a      	ldr	r2, [pc, #40]	; (800d210 <vPortFree+0x74>)
 800d1e6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d1ea:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d1ec:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d1f0:	440b      	add	r3, r1
 800d1f2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d1f4:	f7ff ff16 	bl	800d024 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d1f8:	4a06      	ldr	r2, [pc, #24]	; (800d214 <vPortFree+0x78>)
 800d1fa:	6813      	ldr	r3, [r2, #0]
}
 800d1fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d200:	3301      	adds	r3, #1
 800d202:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d204:	f001 b966 	b.w	800e4d4 <xTaskResumeAll>
}
 800d208:	bd10      	pop	{r4, pc}
 800d20a:	bf00      	nop
 800d20c:	2000e884 	.word	0x2000e884
 800d210:	2000e888 	.word	0x2000e888
 800d214:	2000e894 	.word	0x2000e894

0800d218 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d218:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d21c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d220:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d224:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d226:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d228:	2300      	movs	r3, #0
 800d22a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d22c:	4770      	bx	lr

0800d22e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d22e:	2300      	movs	r3, #0
 800d230:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d232:	4770      	bx	lr

0800d234 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d234:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d236:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d238:	689a      	ldr	r2, [r3, #8]
 800d23a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d23c:	689a      	ldr	r2, [r3, #8]
 800d23e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d240:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d242:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d244:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d246:	3301      	adds	r3, #1
 800d248:	6003      	str	r3, [r0, #0]
}
 800d24a:	4770      	bx	lr

0800d24c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d24c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d24e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d250:	1c63      	adds	r3, r4, #1
 800d252:	d10a      	bne.n	800d26a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d254:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d256:	685a      	ldr	r2, [r3, #4]
 800d258:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d25a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d25c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d25e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d260:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d262:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d264:	3301      	adds	r3, #1
 800d266:	6003      	str	r3, [r0, #0]
}
 800d268:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d26a:	f100 0208 	add.w	r2, r0, #8
 800d26e:	4613      	mov	r3, r2
 800d270:	6852      	ldr	r2, [r2, #4]
 800d272:	6815      	ldr	r5, [r2, #0]
 800d274:	42a5      	cmp	r5, r4
 800d276:	d9fa      	bls.n	800d26e <vListInsert+0x22>
 800d278:	e7ed      	b.n	800d256 <vListInsert+0xa>

0800d27a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d27a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d27e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d280:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d282:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d284:	6859      	ldr	r1, [r3, #4]
 800d286:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d288:	bf08      	it	eq
 800d28a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d28c:	2200      	movs	r2, #0
 800d28e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d290:	681a      	ldr	r2, [r3, #0]
 800d292:	3a01      	subs	r2, #1
 800d294:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d296:	6818      	ldr	r0, [r3, #0]
}
 800d298:	4770      	bx	lr
	...

0800d29c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d29c:	4808      	ldr	r0, [pc, #32]	; (800d2c0 <prvPortStartFirstTask+0x24>)
 800d29e:	6800      	ldr	r0, [r0, #0]
 800d2a0:	6800      	ldr	r0, [r0, #0]
 800d2a2:	f380 8808 	msr	MSP, r0
 800d2a6:	f04f 0000 	mov.w	r0, #0
 800d2aa:	f380 8814 	msr	CONTROL, r0
 800d2ae:	b662      	cpsie	i
 800d2b0:	b661      	cpsie	f
 800d2b2:	f3bf 8f4f 	dsb	sy
 800d2b6:	f3bf 8f6f 	isb	sy
 800d2ba:	df00      	svc	0
 800d2bc:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d2be:	0000      	.short	0x0000
 800d2c0:	e000ed08 	.word	0xe000ed08

0800d2c4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d2c4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d2d4 <vPortEnableVFP+0x10>
 800d2c8:	6801      	ldr	r1, [r0, #0]
 800d2ca:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d2ce:	6001      	str	r1, [r0, #0]
 800d2d0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d2d2:	0000      	.short	0x0000
 800d2d4:	e000ed88 	.word	0xe000ed88

0800d2d8 <prvTaskExitError>:
{
 800d2d8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d2da:	2300      	movs	r3, #0
 800d2dc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d2de:	4b0d      	ldr	r3, [pc, #52]	; (800d314 <prvTaskExitError+0x3c>)
 800d2e0:	681b      	ldr	r3, [r3, #0]
 800d2e2:	3301      	adds	r3, #1
 800d2e4:	d008      	beq.n	800d2f8 <prvTaskExitError+0x20>
 800d2e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2ea:	f383 8811 	msr	BASEPRI, r3
 800d2ee:	f3bf 8f6f 	isb	sy
 800d2f2:	f3bf 8f4f 	dsb	sy
 800d2f6:	e7fe      	b.n	800d2f6 <prvTaskExitError+0x1e>
 800d2f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d2fc:	f383 8811 	msr	BASEPRI, r3
 800d300:	f3bf 8f6f 	isb	sy
 800d304:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d308:	9b01      	ldr	r3, [sp, #4]
 800d30a:	2b00      	cmp	r3, #0
 800d30c:	d0fc      	beq.n	800d308 <prvTaskExitError+0x30>
}
 800d30e:	b002      	add	sp, #8
 800d310:	4770      	bx	lr
 800d312:	bf00      	nop
 800d314:	2000005c 	.word	0x2000005c

0800d318 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d318:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d31c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d320:	4b07      	ldr	r3, [pc, #28]	; (800d340 <pxPortInitialiseStack+0x28>)
 800d322:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d326:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d32a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d32e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d332:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d336:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d33a:	3844      	subs	r0, #68	; 0x44
 800d33c:	4770      	bx	lr
 800d33e:	bf00      	nop
 800d340:	0800d2d9 	.word	0x0800d2d9
	...

0800d350 <SVC_Handler>:
	__asm volatile (
 800d350:	4b07      	ldr	r3, [pc, #28]	; (800d370 <pxCurrentTCBConst2>)
 800d352:	6819      	ldr	r1, [r3, #0]
 800d354:	6808      	ldr	r0, [r1, #0]
 800d356:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d35a:	f380 8809 	msr	PSP, r0
 800d35e:	f3bf 8f6f 	isb	sy
 800d362:	f04f 0000 	mov.w	r0, #0
 800d366:	f380 8811 	msr	BASEPRI, r0
 800d36a:	4770      	bx	lr
 800d36c:	f3af 8000 	nop.w

0800d370 <pxCurrentTCBConst2>:
 800d370:	2000e8e8 	.word	0x2000e8e8

0800d374 <vPortEnterCritical>:
 800d374:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d378:	f383 8811 	msr	BASEPRI, r3
 800d37c:	f3bf 8f6f 	isb	sy
 800d380:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d384:	4a0a      	ldr	r2, [pc, #40]	; (800d3b0 <vPortEnterCritical+0x3c>)
 800d386:	6813      	ldr	r3, [r2, #0]
 800d388:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d38a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d38c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d38e:	d10e      	bne.n	800d3ae <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d390:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d394:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d398:	b2db      	uxtb	r3, r3
 800d39a:	b143      	cbz	r3, 800d3ae <vPortEnterCritical+0x3a>
 800d39c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3a0:	f383 8811 	msr	BASEPRI, r3
 800d3a4:	f3bf 8f6f 	isb	sy
 800d3a8:	f3bf 8f4f 	dsb	sy
 800d3ac:	e7fe      	b.n	800d3ac <vPortEnterCritical+0x38>
}
 800d3ae:	4770      	bx	lr
 800d3b0:	2000005c 	.word	0x2000005c

0800d3b4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d3b4:	4a08      	ldr	r2, [pc, #32]	; (800d3d8 <vPortExitCritical+0x24>)
 800d3b6:	6813      	ldr	r3, [r2, #0]
 800d3b8:	b943      	cbnz	r3, 800d3cc <vPortExitCritical+0x18>
 800d3ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3be:	f383 8811 	msr	BASEPRI, r3
 800d3c2:	f3bf 8f6f 	isb	sy
 800d3c6:	f3bf 8f4f 	dsb	sy
 800d3ca:	e7fe      	b.n	800d3ca <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d3cc:	3b01      	subs	r3, #1
 800d3ce:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d3d0:	b90b      	cbnz	r3, 800d3d6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d3d2:	f383 8811 	msr	BASEPRI, r3
}
 800d3d6:	4770      	bx	lr
 800d3d8:	2000005c 	.word	0x2000005c
 800d3dc:	00000000 	.word	0x00000000

0800d3e0 <PendSV_Handler>:
	__asm volatile
 800d3e0:	f3ef 8009 	mrs	r0, PSP
 800d3e4:	f3bf 8f6f 	isb	sy
 800d3e8:	4b15      	ldr	r3, [pc, #84]	; (800d440 <pxCurrentTCBConst>)
 800d3ea:	681a      	ldr	r2, [r3, #0]
 800d3ec:	f01e 0f10 	tst.w	lr, #16
 800d3f0:	bf08      	it	eq
 800d3f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d3f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3fa:	6010      	str	r0, [r2, #0]
 800d3fc:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d400:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d404:	f380 8811 	msr	BASEPRI, r0
 800d408:	f3bf 8f4f 	dsb	sy
 800d40c:	f3bf 8f6f 	isb	sy
 800d410:	f001 f962 	bl	800e6d8 <vTaskSwitchContext>
 800d414:	f04f 0000 	mov.w	r0, #0
 800d418:	f380 8811 	msr	BASEPRI, r0
 800d41c:	bc09      	pop	{r0, r3}
 800d41e:	6819      	ldr	r1, [r3, #0]
 800d420:	6808      	ldr	r0, [r1, #0]
 800d422:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d426:	f01e 0f10 	tst.w	lr, #16
 800d42a:	bf08      	it	eq
 800d42c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d430:	f380 8809 	msr	PSP, r0
 800d434:	f3bf 8f6f 	isb	sy
 800d438:	4770      	bx	lr
 800d43a:	bf00      	nop
 800d43c:	f3af 8000 	nop.w

0800d440 <pxCurrentTCBConst>:
 800d440:	2000e8e8 	.word	0x2000e8e8

0800d444 <xPortSysTickHandler>:
{
 800d444:	b508      	push	{r3, lr}
	__asm volatile
 800d446:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d44a:	f383 8811 	msr	BASEPRI, r3
 800d44e:	f3bf 8f6f 	isb	sy
 800d452:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d456:	f000 ffa7 	bl	800e3a8 <xTaskIncrementTick>
 800d45a:	b128      	cbz	r0, 800d468 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d45c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d460:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d464:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d468:	2300      	movs	r3, #0
 800d46a:	f383 8811 	msr	BASEPRI, r3
}
 800d46e:	bd08      	pop	{r3, pc}

0800d470 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d470:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d474:	2300      	movs	r3, #0
 800d476:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d478:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d47a:	4b05      	ldr	r3, [pc, #20]	; (800d490 <vPortSetupTimerInterrupt+0x20>)
 800d47c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d480:	681b      	ldr	r3, [r3, #0]
 800d482:	fbb3 f3f1 	udiv	r3, r3, r1
 800d486:	3b01      	subs	r3, #1
 800d488:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d48a:	2307      	movs	r3, #7
 800d48c:	6113      	str	r3, [r2, #16]
}
 800d48e:	4770      	bx	lr
 800d490:	20000050 	.word	0x20000050

0800d494 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d494:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800d498:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d49a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d49e:	4a3a      	ldr	r2, [pc, #232]	; (800d588 <xPortStartScheduler+0xf4>)
 800d4a0:	4291      	cmp	r1, r2
 800d4a2:	d108      	bne.n	800d4b6 <xPortStartScheduler+0x22>
	__asm volatile
 800d4a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4a8:	f383 8811 	msr	BASEPRI, r3
 800d4ac:	f3bf 8f6f 	isb	sy
 800d4b0:	f3bf 8f4f 	dsb	sy
 800d4b4:	e7fe      	b.n	800d4b4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d4b6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d4ba:	4b34      	ldr	r3, [pc, #208]	; (800d58c <xPortStartScheduler+0xf8>)
 800d4bc:	429a      	cmp	r2, r3
 800d4be:	d108      	bne.n	800d4d2 <xPortStartScheduler+0x3e>
 800d4c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d4c4:	f383 8811 	msr	BASEPRI, r3
 800d4c8:	f3bf 8f6f 	isb	sy
 800d4cc:	f3bf 8f4f 	dsb	sy
 800d4d0:	e7fe      	b.n	800d4d0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d4d2:	4b2f      	ldr	r3, [pc, #188]	; (800d590 <xPortStartScheduler+0xfc>)
 800d4d4:	781a      	ldrb	r2, [r3, #0]
 800d4d6:	b2d2      	uxtb	r2, r2
 800d4d8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d4da:	22ff      	movs	r2, #255	; 0xff
 800d4dc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d4de:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4e0:	4a2c      	ldr	r2, [pc, #176]	; (800d594 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d4e2:	b2db      	uxtb	r3, r3
 800d4e4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d4e8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d4ec:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d4f0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d4f2:	4a29      	ldr	r2, [pc, #164]	; (800d598 <xPortStartScheduler+0x104>)
 800d4f4:	2307      	movs	r3, #7
 800d4f6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d4f8:	2100      	movs	r1, #0
 800d4fa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d4fe:	0600      	lsls	r0, r0, #24
 800d500:	f103 34ff 	add.w	r4, r3, #4294967295
 800d504:	d40c      	bmi.n	800d520 <xPortStartScheduler+0x8c>
 800d506:	b111      	cbz	r1, 800d50e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d508:	2b03      	cmp	r3, #3
 800d50a:	6013      	str	r3, [r2, #0]
 800d50c:	d011      	beq.n	800d532 <xPortStartScheduler+0x9e>
 800d50e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d512:	f383 8811 	msr	BASEPRI, r3
 800d516:	f3bf 8f6f 	isb	sy
 800d51a:	f3bf 8f4f 	dsb	sy
 800d51e:	e7fe      	b.n	800d51e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d520:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d524:	005b      	lsls	r3, r3, #1
 800d526:	b2db      	uxtb	r3, r3
 800d528:	f88d 3003 	strb.w	r3, [sp, #3]
 800d52c:	2101      	movs	r1, #1
 800d52e:	4623      	mov	r3, r4
 800d530:	e7e3      	b.n	800d4fa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d532:	f44f 7340 	mov.w	r3, #768	; 0x300
 800d536:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d538:	9b01      	ldr	r3, [sp, #4]
 800d53a:	4a15      	ldr	r2, [pc, #84]	; (800d590 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d53c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d540:	b2db      	uxtb	r3, r3
 800d542:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d544:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d548:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d54c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d550:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d554:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d558:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800d55c:	f7ff ff88 	bl	800d470 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d560:	4b0e      	ldr	r3, [pc, #56]	; (800d59c <xPortStartScheduler+0x108>)
 800d562:	2500      	movs	r5, #0
 800d564:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800d566:	f7ff fead 	bl	800d2c4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d56a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800d56e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d572:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d576:	f7ff fe91 	bl	800d29c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d57a:	f001 f8ad 	bl	800e6d8 <vTaskSwitchContext>
	prvTaskExitError();
 800d57e:	f7ff feab 	bl	800d2d8 <prvTaskExitError>
}
 800d582:	4628      	mov	r0, r5
 800d584:	b003      	add	sp, #12
 800d586:	bd30      	pop	{r4, r5, pc}
 800d588:	410fc271 	.word	0x410fc271
 800d58c:	410fc270 	.word	0x410fc270
 800d590:	e000e400 	.word	0xe000e400
 800d594:	2000e8a0 	.word	0x2000e8a0
 800d598:	2000e8a4 	.word	0x2000e8a4
 800d59c:	2000005c 	.word	0x2000005c

0800d5a0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d5a0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d5a4:	2b0f      	cmp	r3, #15
 800d5a6:	d90e      	bls.n	800d5c6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d5a8:	4a11      	ldr	r2, [pc, #68]	; (800d5f0 <vPortValidateInterruptPriority+0x50>)
 800d5aa:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d5ac:	4a11      	ldr	r2, [pc, #68]	; (800d5f4 <vPortValidateInterruptPriority+0x54>)
 800d5ae:	7812      	ldrb	r2, [r2, #0]
 800d5b0:	429a      	cmp	r2, r3
 800d5b2:	d908      	bls.n	800d5c6 <vPortValidateInterruptPriority+0x26>
 800d5b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5b8:	f383 8811 	msr	BASEPRI, r3
 800d5bc:	f3bf 8f6f 	isb	sy
 800d5c0:	f3bf 8f4f 	dsb	sy
 800d5c4:	e7fe      	b.n	800d5c4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d5c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d5ca:	4a0b      	ldr	r2, [pc, #44]	; (800d5f8 <vPortValidateInterruptPriority+0x58>)
 800d5cc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d5d0:	6812      	ldr	r2, [r2, #0]
 800d5d2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d5d6:	4293      	cmp	r3, r2
 800d5d8:	d908      	bls.n	800d5ec <vPortValidateInterruptPriority+0x4c>
 800d5da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5de:	f383 8811 	msr	BASEPRI, r3
 800d5e2:	f3bf 8f6f 	isb	sy
 800d5e6:	f3bf 8f4f 	dsb	sy
 800d5ea:	e7fe      	b.n	800d5ea <vPortValidateInterruptPriority+0x4a>
	}
 800d5ec:	4770      	bx	lr
 800d5ee:	bf00      	nop
 800d5f0:	e000e3f0 	.word	0xe000e3f0
 800d5f4:	2000e8a0 	.word	0x2000e8a0
 800d5f8:	2000e8a4 	.word	0x2000e8a4

0800d5fc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d5fc:	b510      	push	{r4, lr}
 800d5fe:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d600:	f7ff feb8 	bl	800d374 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d604:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d606:	f7ff fed5 	bl	800d3b4 <vPortExitCritical>

	return xReturn;
}
 800d60a:	fab4 f084 	clz	r0, r4
 800d60e:	0940      	lsrs	r0, r0, #5
 800d610:	bd10      	pop	{r4, pc}

0800d612 <prvCopyDataToQueue>:
{
 800d612:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d614:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d616:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d618:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800d61a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d61c:	b952      	cbnz	r2, 800d634 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d61e:	6807      	ldr	r7, [r0, #0]
 800d620:	bb47      	cbnz	r7, 800d674 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d622:	6880      	ldr	r0, [r0, #8]
 800d624:	f001 f9b8 	bl	800e998 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d628:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d62a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d62c:	3601      	adds	r6, #1
 800d62e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d630:	4628      	mov	r0, r5
 800d632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d634:	b965      	cbnz	r5, 800d650 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d636:	6840      	ldr	r0, [r0, #4]
 800d638:	f018 ff1e 	bl	8026478 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d63c:	6863      	ldr	r3, [r4, #4]
 800d63e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d640:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d642:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d644:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d646:	4293      	cmp	r3, r2
 800d648:	d3f0      	bcc.n	800d62c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d64a:	6823      	ldr	r3, [r4, #0]
 800d64c:	6063      	str	r3, [r4, #4]
 800d64e:	e7ed      	b.n	800d62c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d650:	68c0      	ldr	r0, [r0, #12]
 800d652:	f018 ff11 	bl	8026478 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d656:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d658:	68e3      	ldr	r3, [r4, #12]
 800d65a:	4251      	negs	r1, r2
 800d65c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d65e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d660:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d662:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d664:	bf3e      	ittt	cc
 800d666:	68a3      	ldrcc	r3, [r4, #8]
 800d668:	185b      	addcc	r3, r3, r1
 800d66a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d66c:	2d02      	cmp	r5, #2
 800d66e:	d101      	bne.n	800d674 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d670:	b116      	cbz	r6, 800d678 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800d672:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800d674:	2500      	movs	r5, #0
 800d676:	e7d9      	b.n	800d62c <prvCopyDataToQueue+0x1a>
 800d678:	4635      	mov	r5, r6
 800d67a:	e7d7      	b.n	800d62c <prvCopyDataToQueue+0x1a>

0800d67c <prvCopyDataFromQueue>:
{
 800d67c:	4603      	mov	r3, r0
 800d67e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d680:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800d682:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d684:	b16a      	cbz	r2, 800d6a2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d686:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d688:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d68a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d68c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d68e:	bf28      	it	cs
 800d690:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d692:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d694:	bf28      	it	cs
 800d696:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d698:	68d9      	ldr	r1, [r3, #12]
}
 800d69a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d69e:	f018 beeb 	b.w	8026478 <memcpy>
}
 800d6a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d6a6:	4770      	bx	lr

0800d6a8 <prvUnlockQueue>:
{
 800d6a8:	b570      	push	{r4, r5, r6, lr}
 800d6aa:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d6ac:	f7ff fe62 	bl	800d374 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d6b0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6b4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d6b8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d6ba:	2d00      	cmp	r5, #0
 800d6bc:	dc14      	bgt.n	800d6e8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800d6be:	23ff      	movs	r3, #255	; 0xff
 800d6c0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d6c4:	f7ff fe76 	bl	800d3b4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d6c8:	f7ff fe54 	bl	800d374 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d6cc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d6d0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d6d4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d6d6:	2d00      	cmp	r5, #0
 800d6d8:	dc12      	bgt.n	800d700 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800d6da:	23ff      	movs	r3, #255	; 0xff
 800d6dc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800d6e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d6e4:	f7ff be66 	b.w	800d3b4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d6e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d6ea:	2b00      	cmp	r3, #0
 800d6ec:	d0e7      	beq.n	800d6be <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d6ee:	4630      	mov	r0, r6
 800d6f0:	f001 f86e 	bl	800e7d0 <xTaskRemoveFromEventList>
 800d6f4:	b108      	cbz	r0, 800d6fa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800d6f6:	f001 f8f7 	bl	800e8e8 <vTaskMissedYield>
			--cTxLock;
 800d6fa:	3d01      	subs	r5, #1
 800d6fc:	b26d      	sxtb	r5, r5
 800d6fe:	e7dc      	b.n	800d6ba <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d700:	6923      	ldr	r3, [r4, #16]
 800d702:	2b00      	cmp	r3, #0
 800d704:	d0e9      	beq.n	800d6da <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d706:	4630      	mov	r0, r6
 800d708:	f001 f862 	bl	800e7d0 <xTaskRemoveFromEventList>
 800d70c:	b108      	cbz	r0, 800d712 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800d70e:	f001 f8eb 	bl	800e8e8 <vTaskMissedYield>
				--cRxLock;
 800d712:	3d01      	subs	r5, #1
 800d714:	b26d      	sxtb	r5, r5
 800d716:	e7de      	b.n	800d6d6 <prvUnlockQueue+0x2e>

0800d718 <xQueueGenericReset>:
{
 800d718:	b538      	push	{r3, r4, r5, lr}
 800d71a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d71c:	4604      	mov	r4, r0
 800d71e:	b940      	cbnz	r0, 800d732 <xQueueGenericReset+0x1a>
 800d720:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d724:	f383 8811 	msr	BASEPRI, r3
 800d728:	f3bf 8f6f 	isb	sy
 800d72c:	f3bf 8f4f 	dsb	sy
 800d730:	e7fe      	b.n	800d730 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d732:	f7ff fe1f 	bl	800d374 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d736:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800d73a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d73c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d73e:	434b      	muls	r3, r1
 800d740:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d742:	1a5b      	subs	r3, r3, r1
 800d744:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d746:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d748:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d74a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800d74c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d74e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800d750:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800d754:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800d758:	b9a5      	cbnz	r5, 800d784 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d75a:	6923      	ldr	r3, [r4, #16]
 800d75c:	b173      	cbz	r3, 800d77c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d75e:	f104 0010 	add.w	r0, r4, #16
 800d762:	f001 f835 	bl	800e7d0 <xTaskRemoveFromEventList>
 800d766:	b148      	cbz	r0, 800d77c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800d768:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d76c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d770:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d774:	f3bf 8f4f 	dsb	sy
 800d778:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800d77c:	f7ff fe1a 	bl	800d3b4 <vPortExitCritical>
}
 800d780:	2001      	movs	r0, #1
 800d782:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800d784:	f104 0010 	add.w	r0, r4, #16
 800d788:	f7ff fd46 	bl	800d218 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800d78c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800d790:	f7ff fd42 	bl	800d218 <vListInitialise>
 800d794:	e7f2      	b.n	800d77c <xQueueGenericReset+0x64>

0800d796 <xQueueGenericCreateStatic>:
	{
 800d796:	b513      	push	{r0, r1, r4, lr}
 800d798:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d79a:	b940      	cbnz	r0, 800d7ae <xQueueGenericCreateStatic+0x18>
 800d79c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7a0:	f383 8811 	msr	BASEPRI, r3
 800d7a4:	f3bf 8f6f 	isb	sy
 800d7a8:	f3bf 8f4f 	dsb	sy
 800d7ac:	e7fe      	b.n	800d7ac <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800d7ae:	b943      	cbnz	r3, 800d7c2 <xQueueGenericCreateStatic+0x2c>
 800d7b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7b4:	f383 8811 	msr	BASEPRI, r3
 800d7b8:	f3bf 8f6f 	isb	sy
 800d7bc:	f3bf 8f4f 	dsb	sy
 800d7c0:	e7fe      	b.n	800d7c0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800d7c2:	b14a      	cbz	r2, 800d7d8 <xQueueGenericCreateStatic+0x42>
 800d7c4:	b991      	cbnz	r1, 800d7ec <xQueueGenericCreateStatic+0x56>
 800d7c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7ca:	f383 8811 	msr	BASEPRI, r3
 800d7ce:	f3bf 8f6f 	isb	sy
 800d7d2:	f3bf 8f4f 	dsb	sy
 800d7d6:	e7fe      	b.n	800d7d6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800d7d8:	b141      	cbz	r1, 800d7ec <xQueueGenericCreateStatic+0x56>
 800d7da:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7de:	f383 8811 	msr	BASEPRI, r3
 800d7e2:	f3bf 8f6f 	isb	sy
 800d7e6:	f3bf 8f4f 	dsb	sy
 800d7ea:	e7fe      	b.n	800d7ea <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800d7ec:	2350      	movs	r3, #80	; 0x50
 800d7ee:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800d7f0:	9b01      	ldr	r3, [sp, #4]
 800d7f2:	2b50      	cmp	r3, #80	; 0x50
 800d7f4:	d008      	beq.n	800d808 <xQueueGenericCreateStatic+0x72>
 800d7f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7fa:	f383 8811 	msr	BASEPRI, r3
 800d7fe:	f3bf 8f6f 	isb	sy
 800d802:	f3bf 8f4f 	dsb	sy
 800d806:	e7fe      	b.n	800d806 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d808:	2900      	cmp	r1, #0
 800d80a:	bf08      	it	eq
 800d80c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800d80e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d810:	6022      	str	r2, [r4, #0]
 800d812:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800d814:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800d818:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d81c:	4619      	mov	r1, r3
 800d81e:	4620      	mov	r0, r4
 800d820:	f7ff ff7a 	bl	800d718 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d824:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800d828:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800d82c:	4620      	mov	r0, r4
 800d82e:	b002      	add	sp, #8
 800d830:	bd10      	pop	{r4, pc}

0800d832 <xQueueGenericCreate>:
	{
 800d832:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d834:	460d      	mov	r5, r1
 800d836:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800d838:	4606      	mov	r6, r0
 800d83a:	b940      	cbnz	r0, 800d84e <xQueueGenericCreate+0x1c>
 800d83c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d840:	f383 8811 	msr	BASEPRI, r3
 800d844:	f3bf 8f6f 	isb	sy
 800d848:	f3bf 8f4f 	dsb	sy
 800d84c:	e7fe      	b.n	800d84c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800d84e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800d850:	3050      	adds	r0, #80	; 0x50
 800d852:	f7ff fc0b 	bl	800d06c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800d856:	4604      	mov	r4, r0
 800d858:	b170      	cbz	r0, 800d878 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800d85a:	2300      	movs	r3, #0
 800d85c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800d860:	b165      	cbz	r5, 800d87c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d862:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800d866:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800d86a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800d86c:	2101      	movs	r1, #1
 800d86e:	4620      	mov	r0, r4
 800d870:	f7ff ff52 	bl	800d718 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800d874:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800d878:	4620      	mov	r0, r4
 800d87a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d87c:	4603      	mov	r3, r0
 800d87e:	e7f2      	b.n	800d866 <xQueueGenericCreate+0x34>

0800d880 <xQueueCreateCountingSemaphoreStatic>:
	{
 800d880:	b513      	push	{r0, r1, r4, lr}
 800d882:	4613      	mov	r3, r2
 800d884:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d886:	b940      	cbnz	r0, 800d89a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800d888:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d88c:	f383 8811 	msr	BASEPRI, r3
 800d890:	f3bf 8f6f 	isb	sy
 800d894:	f3bf 8f4f 	dsb	sy
 800d898:	e7fe      	b.n	800d898 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d89a:	4288      	cmp	r0, r1
 800d89c:	d208      	bcs.n	800d8b0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800d89e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8a2:	f383 8811 	msr	BASEPRI, r3
 800d8a6:	f3bf 8f6f 	isb	sy
 800d8aa:	f3bf 8f4f 	dsb	sy
 800d8ae:	e7fe      	b.n	800d8ae <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d8b0:	2202      	movs	r2, #2
 800d8b2:	9200      	str	r2, [sp, #0]
 800d8b4:	2200      	movs	r2, #0
 800d8b6:	4611      	mov	r1, r2
 800d8b8:	f7ff ff6d 	bl	800d796 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800d8bc:	b100      	cbz	r0, 800d8c0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d8be:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d8c0:	b002      	add	sp, #8
 800d8c2:	bd10      	pop	{r4, pc}

0800d8c4 <xQueueCreateCountingSemaphore>:
	{
 800d8c4:	b510      	push	{r4, lr}
 800d8c6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800d8c8:	b940      	cbnz	r0, 800d8dc <xQueueCreateCountingSemaphore+0x18>
 800d8ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8ce:	f383 8811 	msr	BASEPRI, r3
 800d8d2:	f3bf 8f6f 	isb	sy
 800d8d6:	f3bf 8f4f 	dsb	sy
 800d8da:	e7fe      	b.n	800d8da <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800d8dc:	4288      	cmp	r0, r1
 800d8de:	d208      	bcs.n	800d8f2 <xQueueCreateCountingSemaphore+0x2e>
 800d8e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d8e4:	f383 8811 	msr	BASEPRI, r3
 800d8e8:	f3bf 8f6f 	isb	sy
 800d8ec:	f3bf 8f4f 	dsb	sy
 800d8f0:	e7fe      	b.n	800d8f0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800d8f2:	2202      	movs	r2, #2
 800d8f4:	2100      	movs	r1, #0
 800d8f6:	f7ff ff9c 	bl	800d832 <xQueueGenericCreate>
		if( xHandle != NULL )
 800d8fa:	b100      	cbz	r0, 800d8fe <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800d8fc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800d8fe:	bd10      	pop	{r4, pc}

0800d900 <xQueueGenericSend>:
{
 800d900:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d904:	b085      	sub	sp, #20
 800d906:	4688      	mov	r8, r1
 800d908:	9201      	str	r2, [sp, #4]
 800d90a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800d90c:	4604      	mov	r4, r0
 800d90e:	b940      	cbnz	r0, 800d922 <xQueueGenericSend+0x22>
 800d910:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d914:	f383 8811 	msr	BASEPRI, r3
 800d918:	f3bf 8f6f 	isb	sy
 800d91c:	f3bf 8f4f 	dsb	sy
 800d920:	e7fe      	b.n	800d920 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800d922:	b951      	cbnz	r1, 800d93a <xQueueGenericSend+0x3a>
 800d924:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800d926:	b143      	cbz	r3, 800d93a <xQueueGenericSend+0x3a>
 800d928:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d92c:	f383 8811 	msr	BASEPRI, r3
 800d930:	f3bf 8f6f 	isb	sy
 800d934:	f3bf 8f4f 	dsb	sy
 800d938:	e7fe      	b.n	800d938 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800d93a:	2f02      	cmp	r7, #2
 800d93c:	d10b      	bne.n	800d956 <xQueueGenericSend+0x56>
 800d93e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d940:	2b01      	cmp	r3, #1
 800d942:	d008      	beq.n	800d956 <xQueueGenericSend+0x56>
 800d944:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d948:	f383 8811 	msr	BASEPRI, r3
 800d94c:	f3bf 8f6f 	isb	sy
 800d950:	f3bf 8f4f 	dsb	sy
 800d954:	e7fe      	b.n	800d954 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800d956:	f000 ffcd 	bl	800e8f4 <xTaskGetSchedulerState>
 800d95a:	4606      	mov	r6, r0
 800d95c:	b950      	cbnz	r0, 800d974 <xQueueGenericSend+0x74>
 800d95e:	9b01      	ldr	r3, [sp, #4]
 800d960:	b14b      	cbz	r3, 800d976 <xQueueGenericSend+0x76>
 800d962:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d966:	f383 8811 	msr	BASEPRI, r3
 800d96a:	f3bf 8f6f 	isb	sy
 800d96e:	f3bf 8f4f 	dsb	sy
 800d972:	e7fe      	b.n	800d972 <xQueueGenericSend+0x72>
 800d974:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800d976:	f04f 0900 	mov.w	r9, #0
 800d97a:	e037      	b.n	800d9ec <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800d97c:	9d01      	ldr	r5, [sp, #4]
 800d97e:	b91d      	cbnz	r5, 800d988 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800d980:	f7ff fd18 	bl	800d3b4 <vPortExitCritical>
			return errQUEUE_FULL;
 800d984:	2000      	movs	r0, #0
 800d986:	e052      	b.n	800da2e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800d988:	b916      	cbnz	r6, 800d990 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800d98a:	a802      	add	r0, sp, #8
 800d98c:	f000 ff64 	bl	800e858 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800d990:	f7ff fd10 	bl	800d3b4 <vPortExitCritical>
		vTaskSuspendAll();
 800d994:	f000 fcfa 	bl	800e38c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800d998:	f7ff fcec 	bl	800d374 <vPortEnterCritical>
 800d99c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800d9a0:	2bff      	cmp	r3, #255	; 0xff
 800d9a2:	bf08      	it	eq
 800d9a4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800d9a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800d9ac:	2bff      	cmp	r3, #255	; 0xff
 800d9ae:	bf08      	it	eq
 800d9b0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800d9b4:	f7ff fcfe 	bl	800d3b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800d9b8:	a901      	add	r1, sp, #4
 800d9ba:	a802      	add	r0, sp, #8
 800d9bc:	f000 ff58 	bl	800e870 <xTaskCheckForTimeOut>
 800d9c0:	2800      	cmp	r0, #0
 800d9c2:	d14a      	bne.n	800da5a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d9c4:	f7ff fcd6 	bl	800d374 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800d9c8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d9ca:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9cc:	429a      	cmp	r2, r3
 800d9ce:	d131      	bne.n	800da34 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d9d0:	f7ff fcf0 	bl	800d3b4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800d9d4:	9901      	ldr	r1, [sp, #4]
 800d9d6:	f104 0010 	add.w	r0, r4, #16
 800d9da:	f000 fec1 	bl	800e760 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800d9de:	4620      	mov	r0, r4
 800d9e0:	f7ff fe62 	bl	800d6a8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800d9e4:	f000 fd76 	bl	800e4d4 <xTaskResumeAll>
 800d9e8:	b360      	cbz	r0, 800da44 <xQueueGenericSend+0x144>
 800d9ea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800d9ec:	f7ff fcc2 	bl	800d374 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800d9f0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800d9f2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800d9f4:	429a      	cmp	r2, r3
 800d9f6:	d301      	bcc.n	800d9fc <xQueueGenericSend+0xfc>
 800d9f8:	2f02      	cmp	r7, #2
 800d9fa:	d1bf      	bne.n	800d97c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800d9fc:	463a      	mov	r2, r7
 800d9fe:	4641      	mov	r1, r8
 800da00:	4620      	mov	r0, r4
 800da02:	f7ff fe06 	bl	800d612 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800da06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800da08:	b11b      	cbz	r3, 800da12 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800da0a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da0e:	f000 fedf 	bl	800e7d0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800da12:	b148      	cbz	r0, 800da28 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800da14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da20:	f3bf 8f4f 	dsb	sy
 800da24:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800da28:	f7ff fcc4 	bl	800d3b4 <vPortExitCritical>
				return pdPASS;
 800da2c:	2001      	movs	r0, #1
}
 800da2e:	b005      	add	sp, #20
 800da30:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800da34:	f7ff fcbe 	bl	800d3b4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800da38:	4620      	mov	r0, r4
 800da3a:	f7ff fe35 	bl	800d6a8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800da3e:	f000 fd49 	bl	800e4d4 <xTaskResumeAll>
 800da42:	e7d2      	b.n	800d9ea <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800da44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da50:	f3bf 8f4f 	dsb	sy
 800da54:	f3bf 8f6f 	isb	sy
 800da58:	e7c7      	b.n	800d9ea <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800da5a:	4620      	mov	r0, r4
 800da5c:	f7ff fe24 	bl	800d6a8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800da60:	f000 fd38 	bl	800e4d4 <xTaskResumeAll>
 800da64:	e78e      	b.n	800d984 <xQueueGenericSend+0x84>

0800da66 <xQueueGenericSendFromISR>:
{
 800da66:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800da6a:	4689      	mov	r9, r1
 800da6c:	4690      	mov	r8, r2
 800da6e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800da70:	4604      	mov	r4, r0
 800da72:	b940      	cbnz	r0, 800da86 <xQueueGenericSendFromISR+0x20>
 800da74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da78:	f383 8811 	msr	BASEPRI, r3
 800da7c:	f3bf 8f6f 	isb	sy
 800da80:	f3bf 8f4f 	dsb	sy
 800da84:	e7fe      	b.n	800da84 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800da86:	b951      	cbnz	r1, 800da9e <xQueueGenericSendFromISR+0x38>
 800da88:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800da8a:	b143      	cbz	r3, 800da9e <xQueueGenericSendFromISR+0x38>
 800da8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da90:	f383 8811 	msr	BASEPRI, r3
 800da94:	f3bf 8f6f 	isb	sy
 800da98:	f3bf 8f4f 	dsb	sy
 800da9c:	e7fe      	b.n	800da9c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800da9e:	2f02      	cmp	r7, #2
 800daa0:	d10b      	bne.n	800daba <xQueueGenericSendFromISR+0x54>
 800daa2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800daa4:	2b01      	cmp	r3, #1
 800daa6:	d008      	beq.n	800daba <xQueueGenericSendFromISR+0x54>
 800daa8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daac:	f383 8811 	msr	BASEPRI, r3
 800dab0:	f3bf 8f6f 	isb	sy
 800dab4:	f3bf 8f4f 	dsb	sy
 800dab8:	e7fe      	b.n	800dab8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800daba:	f7ff fd71 	bl	800d5a0 <vPortValidateInterruptPriority>
	__asm volatile
 800dabe:	f3ef 8611 	mrs	r6, BASEPRI
 800dac2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dac6:	f383 8811 	msr	BASEPRI, r3
 800daca:	f3bf 8f6f 	isb	sy
 800dace:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dad2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dad4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dad6:	429a      	cmp	r2, r3
 800dad8:	d301      	bcc.n	800dade <xQueueGenericSendFromISR+0x78>
 800dada:	2f02      	cmp	r7, #2
 800dadc:	d123      	bne.n	800db26 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dade:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dae2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dae4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dae6:	463a      	mov	r2, r7
 800dae8:	4649      	mov	r1, r9
 800daea:	4620      	mov	r0, r4
 800daec:	f7ff fd91 	bl	800d612 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800daf0:	1c6b      	adds	r3, r5, #1
 800daf2:	d113      	bne.n	800db1c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800daf4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800daf6:	b90b      	cbnz	r3, 800dafc <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800daf8:	2001      	movs	r0, #1
 800dafa:	e00b      	b.n	800db14 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dafc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800db00:	f000 fe66 	bl	800e7d0 <xTaskRemoveFromEventList>
 800db04:	2800      	cmp	r0, #0
 800db06:	d0f7      	beq.n	800daf8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800db08:	f1b8 0f00 	cmp.w	r8, #0
 800db0c:	d0f4      	beq.n	800daf8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800db0e:	2001      	movs	r0, #1
 800db10:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800db14:	f386 8811 	msr	BASEPRI, r6
}
 800db18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800db1c:	3501      	adds	r5, #1
 800db1e:	b26d      	sxtb	r5, r5
 800db20:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800db24:	e7e8      	b.n	800daf8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800db26:	2000      	movs	r0, #0
 800db28:	e7f4      	b.n	800db14 <xQueueGenericSendFromISR+0xae>

0800db2a <xQueueGiveFromISR>:
{
 800db2a:	b570      	push	{r4, r5, r6, lr}
 800db2c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800db2e:	4604      	mov	r4, r0
 800db30:	b940      	cbnz	r0, 800db44 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800db32:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db36:	f383 8811 	msr	BASEPRI, r3
 800db3a:	f3bf 8f6f 	isb	sy
 800db3e:	f3bf 8f4f 	dsb	sy
 800db42:	e7fe      	b.n	800db42 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800db44:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800db46:	b143      	cbz	r3, 800db5a <xQueueGiveFromISR+0x30>
 800db48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db4c:	f383 8811 	msr	BASEPRI, r3
 800db50:	f3bf 8f6f 	isb	sy
 800db54:	f3bf 8f4f 	dsb	sy
 800db58:	e7fe      	b.n	800db58 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800db5a:	6803      	ldr	r3, [r0, #0]
 800db5c:	b953      	cbnz	r3, 800db74 <xQueueGiveFromISR+0x4a>
 800db5e:	6883      	ldr	r3, [r0, #8]
 800db60:	b143      	cbz	r3, 800db74 <xQueueGiveFromISR+0x4a>
 800db62:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db66:	f383 8811 	msr	BASEPRI, r3
 800db6a:	f3bf 8f6f 	isb	sy
 800db6e:	f3bf 8f4f 	dsb	sy
 800db72:	e7fe      	b.n	800db72 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800db74:	f7ff fd14 	bl	800d5a0 <vPortValidateInterruptPriority>
	__asm volatile
 800db78:	f3ef 8611 	mrs	r6, BASEPRI
 800db7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db80:	f383 8811 	msr	BASEPRI, r3
 800db84:	f3bf 8f6f 	isb	sy
 800db88:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800db8c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800db8e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800db90:	4293      	cmp	r3, r2
 800db92:	d91c      	bls.n	800dbce <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800db94:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800db98:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800db9a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800db9c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800db9e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800dba0:	d110      	bne.n	800dbc4 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dba2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dba4:	b90b      	cbnz	r3, 800dbaa <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800dba6:	2001      	movs	r0, #1
 800dba8:	e009      	b.n	800dbbe <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dbaa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dbae:	f000 fe0f 	bl	800e7d0 <xTaskRemoveFromEventList>
 800dbb2:	2800      	cmp	r0, #0
 800dbb4:	d0f7      	beq.n	800dba6 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800dbb6:	2d00      	cmp	r5, #0
 800dbb8:	d0f5      	beq.n	800dba6 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800dbba:	2001      	movs	r0, #1
 800dbbc:	6028      	str	r0, [r5, #0]
	__asm volatile
 800dbbe:	f386 8811 	msr	BASEPRI, r6
}
 800dbc2:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800dbc4:	3301      	adds	r3, #1
 800dbc6:	b25b      	sxtb	r3, r3
 800dbc8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800dbcc:	e7eb      	b.n	800dba6 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800dbce:	2000      	movs	r0, #0
 800dbd0:	e7f5      	b.n	800dbbe <xQueueGiveFromISR+0x94>

0800dbd2 <xQueueReceive>:
{
 800dbd2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800dbd6:	460f      	mov	r7, r1
 800dbd8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dbda:	4604      	mov	r4, r0
 800dbdc:	b940      	cbnz	r0, 800dbf0 <xQueueReceive+0x1e>
	__asm volatile
 800dbde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbe2:	f383 8811 	msr	BASEPRI, r3
 800dbe6:	f3bf 8f6f 	isb	sy
 800dbea:	f3bf 8f4f 	dsb	sy
 800dbee:	e7fe      	b.n	800dbee <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbf0:	b951      	cbnz	r1, 800dc08 <xQueueReceive+0x36>
 800dbf2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dbf4:	b143      	cbz	r3, 800dc08 <xQueueReceive+0x36>
 800dbf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbfa:	f383 8811 	msr	BASEPRI, r3
 800dbfe:	f3bf 8f6f 	isb	sy
 800dc02:	f3bf 8f4f 	dsb	sy
 800dc06:	e7fe      	b.n	800dc06 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc08:	f000 fe74 	bl	800e8f4 <xTaskGetSchedulerState>
 800dc0c:	4606      	mov	r6, r0
 800dc0e:	b950      	cbnz	r0, 800dc26 <xQueueReceive+0x54>
 800dc10:	9b01      	ldr	r3, [sp, #4]
 800dc12:	b14b      	cbz	r3, 800dc28 <xQueueReceive+0x56>
 800dc14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc18:	f383 8811 	msr	BASEPRI, r3
 800dc1c:	f3bf 8f6f 	isb	sy
 800dc20:	f3bf 8f4f 	dsb	sy
 800dc24:	e7fe      	b.n	800dc24 <xQueueReceive+0x52>
 800dc26:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800dc28:	f04f 0800 	mov.w	r8, #0
 800dc2c:	e03d      	b.n	800dcaa <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc2e:	9d01      	ldr	r5, [sp, #4]
 800dc30:	b91d      	cbnz	r5, 800dc3a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800dc32:	f7ff fbbf 	bl	800d3b4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800dc36:	2000      	movs	r0, #0
 800dc38:	e056      	b.n	800dce8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800dc3a:	b916      	cbnz	r6, 800dc42 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc3c:	a802      	add	r0, sp, #8
 800dc3e:	f000 fe0b 	bl	800e858 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dc42:	f7ff fbb7 	bl	800d3b4 <vPortExitCritical>
		vTaskSuspendAll();
 800dc46:	f000 fba1 	bl	800e38c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc4a:	f7ff fb93 	bl	800d374 <vPortEnterCritical>
 800dc4e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc52:	2bff      	cmp	r3, #255	; 0xff
 800dc54:	bf08      	it	eq
 800dc56:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800dc5a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc5e:	2bff      	cmp	r3, #255	; 0xff
 800dc60:	bf08      	it	eq
 800dc62:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800dc66:	f7ff fba5 	bl	800d3b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc6a:	a901      	add	r1, sp, #4
 800dc6c:	a802      	add	r0, sp, #8
 800dc6e:	f000 fdff 	bl	800e870 <xTaskCheckForTimeOut>
 800dc72:	2800      	cmp	r0, #0
 800dc74:	d141      	bne.n	800dcfa <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dc76:	4620      	mov	r0, r4
 800dc78:	f7ff fcc0 	bl	800d5fc <prvIsQueueEmpty>
 800dc7c:	b3b8      	cbz	r0, 800dcee <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dc7e:	9901      	ldr	r1, [sp, #4]
 800dc80:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dc84:	f000 fd6c 	bl	800e760 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dc88:	4620      	mov	r0, r4
 800dc8a:	f7ff fd0d 	bl	800d6a8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dc8e:	f000 fc21 	bl	800e4d4 <xTaskResumeAll>
 800dc92:	b948      	cbnz	r0, 800dca8 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800dc94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dc98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dc9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dca0:	f3bf 8f4f 	dsb	sy
 800dca4:	f3bf 8f6f 	isb	sy
 800dca8:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dcaa:	f7ff fb63 	bl	800d374 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dcae:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dcb0:	2d00      	cmp	r5, #0
 800dcb2:	d0bc      	beq.n	800dc2e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dcb4:	4639      	mov	r1, r7
 800dcb6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dcb8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800dcba:	f7ff fcdf 	bl	800d67c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800dcbe:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800dcc0:	6923      	ldr	r3, [r4, #16]
 800dcc2:	b173      	cbz	r3, 800dce2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800dcc4:	f104 0010 	add.w	r0, r4, #16
 800dcc8:	f000 fd82 	bl	800e7d0 <xTaskRemoveFromEventList>
 800dccc:	b148      	cbz	r0, 800dce2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800dcce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcd2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcd6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dcda:	f3bf 8f4f 	dsb	sy
 800dcde:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dce2:	f7ff fb67 	bl	800d3b4 <vPortExitCritical>
				return pdPASS;
 800dce6:	2001      	movs	r0, #1
}
 800dce8:	b004      	add	sp, #16
 800dcea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800dcee:	4620      	mov	r0, r4
 800dcf0:	f7ff fcda 	bl	800d6a8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dcf4:	f000 fbee 	bl	800e4d4 <xTaskResumeAll>
 800dcf8:	e7d6      	b.n	800dca8 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800dcfa:	4620      	mov	r0, r4
 800dcfc:	f7ff fcd4 	bl	800d6a8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dd00:	f000 fbe8 	bl	800e4d4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dd04:	4620      	mov	r0, r4
 800dd06:	f7ff fc79 	bl	800d5fc <prvIsQueueEmpty>
 800dd0a:	2800      	cmp	r0, #0
 800dd0c:	d0cc      	beq.n	800dca8 <xQueueReceive+0xd6>
 800dd0e:	e792      	b.n	800dc36 <xQueueReceive+0x64>

0800dd10 <xQueueSemaphoreTake>:
{
 800dd10:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dd12:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800dd14:	4604      	mov	r4, r0
{
 800dd16:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dd18:	b940      	cbnz	r0, 800dd2c <xQueueSemaphoreTake+0x1c>
 800dd1a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd1e:	f383 8811 	msr	BASEPRI, r3
 800dd22:	f3bf 8f6f 	isb	sy
 800dd26:	f3bf 8f4f 	dsb	sy
 800dd2a:	e7fe      	b.n	800dd2a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dd2c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800dd2e:	b145      	cbz	r5, 800dd42 <xQueueSemaphoreTake+0x32>
 800dd30:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd34:	f383 8811 	msr	BASEPRI, r3
 800dd38:	f3bf 8f6f 	isb	sy
 800dd3c:	f3bf 8f4f 	dsb	sy
 800dd40:	e7fe      	b.n	800dd40 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dd42:	f000 fdd7 	bl	800e8f4 <xTaskGetSchedulerState>
 800dd46:	4606      	mov	r6, r0
 800dd48:	b950      	cbnz	r0, 800dd60 <xQueueSemaphoreTake+0x50>
 800dd4a:	9b01      	ldr	r3, [sp, #4]
 800dd4c:	b15b      	cbz	r3, 800dd66 <xQueueSemaphoreTake+0x56>
 800dd4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd52:	f383 8811 	msr	BASEPRI, r3
 800dd56:	f3bf 8f6f 	isb	sy
 800dd5a:	f3bf 8f4f 	dsb	sy
 800dd5e:	e7fe      	b.n	800dd5e <xQueueSemaphoreTake+0x4e>
 800dd60:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800dd62:	2700      	movs	r7, #0
 800dd64:	e053      	b.n	800de0e <xQueueSemaphoreTake+0xfe>
 800dd66:	4605      	mov	r5, r0
 800dd68:	e7fb      	b.n	800dd62 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dd6a:	9b01      	ldr	r3, [sp, #4]
 800dd6c:	b963      	cbnz	r3, 800dd88 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800dd6e:	b145      	cbz	r5, 800dd82 <xQueueSemaphoreTake+0x72>
 800dd70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd74:	f383 8811 	msr	BASEPRI, r3
 800dd78:	f3bf 8f6f 	isb	sy
 800dd7c:	f3bf 8f4f 	dsb	sy
 800dd80:	e7fe      	b.n	800dd80 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800dd82:	f7ff fb17 	bl	800d3b4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800dd86:	e062      	b.n	800de4e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800dd88:	b916      	cbnz	r6, 800dd90 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dd8a:	a802      	add	r0, sp, #8
 800dd8c:	f000 fd64 	bl	800e858 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dd90:	f7ff fb10 	bl	800d3b4 <vPortExitCritical>
		vTaskSuspendAll();
 800dd94:	f000 fafa 	bl	800e38c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dd98:	f7ff faec 	bl	800d374 <vPortEnterCritical>
 800dd9c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dda0:	2bff      	cmp	r3, #255	; 0xff
 800dda2:	bf08      	it	eq
 800dda4:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800dda8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800ddac:	2bff      	cmp	r3, #255	; 0xff
 800ddae:	bf08      	it	eq
 800ddb0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800ddb4:	f7ff fafe 	bl	800d3b4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800ddb8:	a901      	add	r1, sp, #4
 800ddba:	a802      	add	r0, sp, #8
 800ddbc:	f000 fd58 	bl	800e870 <xTaskCheckForTimeOut>
 800ddc0:	2800      	cmp	r0, #0
 800ddc2:	d14d      	bne.n	800de60 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800ddc4:	4620      	mov	r0, r4
 800ddc6:	f7ff fc19 	bl	800d5fc <prvIsQueueEmpty>
 800ddca:	2800      	cmp	r0, #0
 800ddcc:	d042      	beq.n	800de54 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800ddce:	6823      	ldr	r3, [r4, #0]
 800ddd0:	b93b      	cbnz	r3, 800dde2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800ddd2:	f7ff facf 	bl	800d374 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800ddd6:	68a0      	ldr	r0, [r4, #8]
 800ddd8:	f000 fd9c 	bl	800e914 <xTaskPriorityInherit>
 800dddc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800ddde:	f7ff fae9 	bl	800d3b4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800dde2:	9901      	ldr	r1, [sp, #4]
 800dde4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dde8:	f000 fcba 	bl	800e760 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800ddec:	4620      	mov	r0, r4
 800ddee:	f7ff fc5b 	bl	800d6a8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800ddf2:	f000 fb6f 	bl	800e4d4 <xTaskResumeAll>
 800ddf6:	b948      	cbnz	r0, 800de0c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800ddf8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ddfc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de00:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de04:	f3bf 8f4f 	dsb	sy
 800de08:	f3bf 8f6f 	isb	sy
 800de0c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800de0e:	f7ff fab1 	bl	800d374 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800de12:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800de14:	2b00      	cmp	r3, #0
 800de16:	d0a8      	beq.n	800dd6a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800de18:	3b01      	subs	r3, #1
 800de1a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800de1c:	6823      	ldr	r3, [r4, #0]
 800de1e:	b913      	cbnz	r3, 800de26 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800de20:	f000 fe50 	bl	800eac4 <pvTaskIncrementMutexHeldCount>
 800de24:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800de26:	6923      	ldr	r3, [r4, #16]
 800de28:	b173      	cbz	r3, 800de48 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800de2a:	f104 0010 	add.w	r0, r4, #16
 800de2e:	f000 fccf 	bl	800e7d0 <xTaskRemoveFromEventList>
 800de32:	b148      	cbz	r0, 800de48 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800de34:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800de38:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800de3c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800de40:	f3bf 8f4f 	dsb	sy
 800de44:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800de48:	f7ff fab4 	bl	800d3b4 <vPortExitCritical>
				return pdPASS;
 800de4c:	2501      	movs	r5, #1
}
 800de4e:	4628      	mov	r0, r5
 800de50:	b005      	add	sp, #20
 800de52:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800de54:	4620      	mov	r0, r4
 800de56:	f7ff fc27 	bl	800d6a8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800de5a:	f000 fb3b 	bl	800e4d4 <xTaskResumeAll>
 800de5e:	e7d5      	b.n	800de0c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800de60:	4620      	mov	r0, r4
 800de62:	f7ff fc21 	bl	800d6a8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800de66:	f000 fb35 	bl	800e4d4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800de6a:	4620      	mov	r0, r4
 800de6c:	f7ff fbc6 	bl	800d5fc <prvIsQueueEmpty>
 800de70:	2800      	cmp	r0, #0
 800de72:	d0cb      	beq.n	800de0c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800de74:	2d00      	cmp	r5, #0
 800de76:	d0ea      	beq.n	800de4e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800de78:	f7ff fa7c 	bl	800d374 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800de7c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800de7e:	b119      	cbz	r1, 800de88 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800de80:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800de82:	6819      	ldr	r1, [r3, #0]
 800de84:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800de88:	68a0      	ldr	r0, [r4, #8]
 800de8a:	f000 fdc9 	bl	800ea20 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800de8e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800de90:	f7ff fa90 	bl	800d3b4 <vPortExitCritical>
 800de94:	e7db      	b.n	800de4e <xQueueSemaphoreTake+0x13e>

0800de96 <xQueueReceiveFromISR>:
{
 800de96:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800de9a:	4689      	mov	r9, r1
 800de9c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800de9e:	4605      	mov	r5, r0
 800dea0:	b940      	cbnz	r0, 800deb4 <xQueueReceiveFromISR+0x1e>
 800dea2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dea6:	f383 8811 	msr	BASEPRI, r3
 800deaa:	f3bf 8f6f 	isb	sy
 800deae:	f3bf 8f4f 	dsb	sy
 800deb2:	e7fe      	b.n	800deb2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800deb4:	b951      	cbnz	r1, 800decc <xQueueReceiveFromISR+0x36>
 800deb6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800deb8:	b143      	cbz	r3, 800decc <xQueueReceiveFromISR+0x36>
 800deba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800debe:	f383 8811 	msr	BASEPRI, r3
 800dec2:	f3bf 8f6f 	isb	sy
 800dec6:	f3bf 8f4f 	dsb	sy
 800deca:	e7fe      	b.n	800deca <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800decc:	f7ff fb68 	bl	800d5a0 <vPortValidateInterruptPriority>
	__asm volatile
 800ded0:	f3ef 8711 	mrs	r7, BASEPRI
 800ded4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ded8:	f383 8811 	msr	BASEPRI, r3
 800dedc:	f3bf 8f6f 	isb	sy
 800dee0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dee4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800dee6:	b31c      	cbz	r4, 800df30 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800dee8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800deec:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800deee:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800def0:	4628      	mov	r0, r5
 800def2:	f7ff fbc3 	bl	800d67c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800def6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800def8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800defa:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800defc:	d113      	bne.n	800df26 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800defe:	692b      	ldr	r3, [r5, #16]
 800df00:	b90b      	cbnz	r3, 800df06 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800df02:	2001      	movs	r0, #1
 800df04:	e00b      	b.n	800df1e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df06:	f105 0010 	add.w	r0, r5, #16
 800df0a:	f000 fc61 	bl	800e7d0 <xTaskRemoveFromEventList>
 800df0e:	2800      	cmp	r0, #0
 800df10:	d0f7      	beq.n	800df02 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800df12:	f1b8 0f00 	cmp.w	r8, #0
 800df16:	d0f4      	beq.n	800df02 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800df18:	2001      	movs	r0, #1
 800df1a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800df1e:	f387 8811 	msr	BASEPRI, r7
}
 800df22:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800df26:	3601      	adds	r6, #1
 800df28:	b276      	sxtb	r6, r6
 800df2a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800df2e:	e7e8      	b.n	800df02 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800df30:	4620      	mov	r0, r4
 800df32:	e7f4      	b.n	800df1e <xQueueReceiveFromISR+0x88>

0800df34 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800df34:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800df36:	4a07      	ldr	r2, [pc, #28]	; (800df54 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df38:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800df3a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800df3e:	b92c      	cbnz	r4, 800df4c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800df40:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800df44:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800df48:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800df4a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df4c:	3301      	adds	r3, #1
 800df4e:	2b08      	cmp	r3, #8
 800df50:	d1f3      	bne.n	800df3a <vQueueAddToRegistry+0x6>
 800df52:	e7fa      	b.n	800df4a <vQueueAddToRegistry+0x16>
 800df54:	2000e8a8 	.word	0x2000e8a8

0800df58 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800df58:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800df5a:	4a08      	ldr	r2, [pc, #32]	; (800df7c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df5c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800df5e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800df62:	684c      	ldr	r4, [r1, #4]
 800df64:	4284      	cmp	r4, r0
 800df66:	d104      	bne.n	800df72 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800df68:	2000      	movs	r0, #0
 800df6a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800df6e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800df70:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800df72:	3301      	adds	r3, #1
 800df74:	2b08      	cmp	r3, #8
 800df76:	d1f2      	bne.n	800df5e <vQueueUnregisterQueue+0x6>
 800df78:	e7fa      	b.n	800df70 <vQueueUnregisterQueue+0x18>
 800df7a:	bf00      	nop
 800df7c:	2000e8a8 	.word	0x2000e8a8

0800df80 <vQueueDelete>:
{
 800df80:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800df82:	4604      	mov	r4, r0
 800df84:	b940      	cbnz	r0, 800df98 <vQueueDelete+0x18>
	__asm volatile
 800df86:	f04f 0350 	mov.w	r3, #80	; 0x50
 800df8a:	f383 8811 	msr	BASEPRI, r3
 800df8e:	f3bf 8f6f 	isb	sy
 800df92:	f3bf 8f4f 	dsb	sy
 800df96:	e7fe      	b.n	800df96 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800df98:	f7ff ffde 	bl	800df58 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800df9c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800dfa0:	b923      	cbnz	r3, 800dfac <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800dfa2:	4620      	mov	r0, r4
}
 800dfa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800dfa8:	f7ff b8f8 	b.w	800d19c <vPortFree>
}
 800dfac:	bd10      	pop	{r4, pc}

0800dfae <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800dfae:	b570      	push	{r4, r5, r6, lr}
 800dfb0:	4604      	mov	r4, r0
 800dfb2:	460d      	mov	r5, r1
 800dfb4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800dfb6:	f7ff f9dd 	bl	800d374 <vPortEnterCritical>
 800dfba:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dfbe:	2bff      	cmp	r3, #255	; 0xff
 800dfc0:	bf04      	itt	eq
 800dfc2:	2300      	moveq	r3, #0
 800dfc4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800dfc8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dfcc:	2bff      	cmp	r3, #255	; 0xff
 800dfce:	bf04      	itt	eq
 800dfd0:	2300      	moveq	r3, #0
 800dfd2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800dfd6:	f7ff f9ed 	bl	800d3b4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800dfda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800dfdc:	b92b      	cbnz	r3, 800dfea <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800dfde:	4632      	mov	r2, r6
 800dfe0:	4629      	mov	r1, r5
 800dfe2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dfe6:	f000 fbd5 	bl	800e794 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800dfea:	4620      	mov	r0, r4
	}
 800dfec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800dff0:	f7ff bb5a 	b.w	800d6a8 <prvUnlockQueue>

0800dff4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800dff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dff8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800dffa:	f7ff f9bb 	bl	800d374 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800dffe:	4b30      	ldr	r3, [pc, #192]	; (800e0c0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800e000:	4e30      	ldr	r6, [pc, #192]	; (800e0c4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800e002:	681a      	ldr	r2, [r3, #0]
 800e004:	4f30      	ldr	r7, [pc, #192]	; (800e0c8 <prvAddNewTaskToReadyList+0xd4>)
 800e006:	3201      	adds	r2, #1
 800e008:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800e00a:	6835      	ldr	r5, [r6, #0]
 800e00c:	2d00      	cmp	r5, #0
 800e00e:	d14b      	bne.n	800e0a8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800e010:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e012:	681b      	ldr	r3, [r3, #0]
 800e014:	2b01      	cmp	r3, #1
 800e016:	d11f      	bne.n	800e058 <prvAddNewTaskToReadyList+0x64>
 800e018:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e01a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e01c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e01e:	f7ff f8fb 	bl	800d218 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e022:	2d38      	cmp	r5, #56	; 0x38
 800e024:	f108 0814 	add.w	r8, r8, #20
 800e028:	d1f7      	bne.n	800e01a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e02a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800e0f0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800e02e:	4d27      	ldr	r5, [pc, #156]	; (800e0cc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800e030:	4640      	mov	r0, r8
 800e032:	f7ff f8f1 	bl	800d218 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e036:	4628      	mov	r0, r5
 800e038:	f7ff f8ee 	bl	800d218 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e03c:	4824      	ldr	r0, [pc, #144]	; (800e0d0 <prvAddNewTaskToReadyList+0xdc>)
 800e03e:	f7ff f8eb 	bl	800d218 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e042:	4824      	ldr	r0, [pc, #144]	; (800e0d4 <prvAddNewTaskToReadyList+0xe0>)
 800e044:	f7ff f8e8 	bl	800d218 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e048:	4823      	ldr	r0, [pc, #140]	; (800e0d8 <prvAddNewTaskToReadyList+0xe4>)
 800e04a:	f7ff f8e5 	bl	800d218 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e04e:	4b23      	ldr	r3, [pc, #140]	; (800e0dc <prvAddNewTaskToReadyList+0xe8>)
 800e050:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e054:	4b22      	ldr	r3, [pc, #136]	; (800e0e0 <prvAddNewTaskToReadyList+0xec>)
 800e056:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800e058:	4a22      	ldr	r2, [pc, #136]	; (800e0e4 <prvAddNewTaskToReadyList+0xf0>)
 800e05a:	6813      	ldr	r3, [r2, #0]
 800e05c:	3301      	adds	r3, #1
 800e05e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800e060:	4a21      	ldr	r2, [pc, #132]	; (800e0e8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e062:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e064:	6811      	ldr	r1, [r2, #0]
 800e066:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e068:	2014      	movs	r0, #20
 800e06a:	428b      	cmp	r3, r1
 800e06c:	fb00 7003 	mla	r0, r0, r3, r7
 800e070:	f104 0104 	add.w	r1, r4, #4
 800e074:	bf88      	it	hi
 800e076:	6013      	strhi	r3, [r2, #0]
 800e078:	f7ff f8dc 	bl	800d234 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800e07c:	f7ff f99a 	bl	800d3b4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800e080:	4b1a      	ldr	r3, [pc, #104]	; (800e0ec <prvAddNewTaskToReadyList+0xf8>)
 800e082:	681b      	ldr	r3, [r3, #0]
 800e084:	b173      	cbz	r3, 800e0a4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e086:	6833      	ldr	r3, [r6, #0]
 800e088:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e08a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e08c:	429a      	cmp	r2, r3
 800e08e:	d209      	bcs.n	800e0a4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800e090:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e094:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e098:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e09c:	f3bf 8f4f 	dsb	sy
 800e0a0:	f3bf 8f6f 	isb	sy
}
 800e0a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800e0a8:	4b10      	ldr	r3, [pc, #64]	; (800e0ec <prvAddNewTaskToReadyList+0xf8>)
 800e0aa:	681b      	ldr	r3, [r3, #0]
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	d1d3      	bne.n	800e058 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e0b0:	6833      	ldr	r3, [r6, #0]
 800e0b2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e0b4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e0b6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800e0b8:	bf98      	it	ls
 800e0ba:	6034      	strls	r4, [r6, #0]
 800e0bc:	e7cc      	b.n	800e058 <prvAddNewTaskToReadyList+0x64>
 800e0be:	bf00      	nop
 800e0c0:	2000ed54 	.word	0x2000ed54
 800e0c4:	2000e8e8 	.word	0x2000e8e8
 800e0c8:	2000e8f4 	.word	0x2000e8f4
 800e0cc:	2000ed7c 	.word	0x2000ed7c
 800e0d0:	2000ed9c 	.word	0x2000ed9c
 800e0d4:	2000edc8 	.word	0x2000edc8
 800e0d8:	2000edb4 	.word	0x2000edb4
 800e0dc:	2000e8ec 	.word	0x2000e8ec
 800e0e0:	2000e8f0 	.word	0x2000e8f0
 800e0e4:	2000ed60 	.word	0x2000ed60
 800e0e8:	2000ed64 	.word	0x2000ed64
 800e0ec:	2000edb0 	.word	0x2000edb0
 800e0f0:	2000ed68 	.word	0x2000ed68

0800e0f4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e0f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e0f6:	4b15      	ldr	r3, [pc, #84]	; (800e14c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e0f8:	4e15      	ldr	r6, [pc, #84]	; (800e150 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800e0fa:	681d      	ldr	r5, [r3, #0]
{
 800e0fc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e0fe:	6830      	ldr	r0, [r6, #0]
 800e100:	3004      	adds	r0, #4
{
 800e102:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e104:	f7ff f8b9 	bl	800d27a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e108:	1c63      	adds	r3, r4, #1
 800e10a:	d107      	bne.n	800e11c <prvAddCurrentTaskToDelayedList+0x28>
 800e10c:	b137      	cbz	r7, 800e11c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e10e:	6831      	ldr	r1, [r6, #0]
 800e110:	4810      	ldr	r0, [pc, #64]	; (800e154 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e112:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e116:	3104      	adds	r1, #4
 800e118:	f7ff b88c 	b.w	800d234 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e11c:	6833      	ldr	r3, [r6, #0]
 800e11e:	192c      	adds	r4, r5, r4
 800e120:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e122:	d307      	bcc.n	800e134 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e124:	4b0c      	ldr	r3, [pc, #48]	; (800e158 <prvAddCurrentTaskToDelayedList+0x64>)
 800e126:	6818      	ldr	r0, [r3, #0]
 800e128:	6831      	ldr	r1, [r6, #0]
}
 800e12a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e12e:	3104      	adds	r1, #4
 800e130:	f7ff b88c 	b.w	800d24c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e134:	4b09      	ldr	r3, [pc, #36]	; (800e15c <prvAddCurrentTaskToDelayedList+0x68>)
 800e136:	6818      	ldr	r0, [r3, #0]
 800e138:	6831      	ldr	r1, [r6, #0]
 800e13a:	3104      	adds	r1, #4
 800e13c:	f7ff f886 	bl	800d24c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e140:	4b07      	ldr	r3, [pc, #28]	; (800e160 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e142:	681a      	ldr	r2, [r3, #0]
 800e144:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e146:	bf88      	it	hi
 800e148:	601c      	strhi	r4, [r3, #0]
}
 800e14a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e14c:	2000eddc 	.word	0x2000eddc
 800e150:	2000e8e8 	.word	0x2000e8e8
 800e154:	2000edb4 	.word	0x2000edb4
 800e158:	2000e8f0 	.word	0x2000e8f0
 800e15c:	2000e8ec 	.word	0x2000e8ec
 800e160:	2000ed90 	.word	0x2000ed90

0800e164 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e164:	4a06      	ldr	r2, [pc, #24]	; (800e180 <prvResetNextTaskUnblockTime+0x1c>)
 800e166:	6813      	ldr	r3, [r2, #0]
 800e168:	6819      	ldr	r1, [r3, #0]
 800e16a:	4b06      	ldr	r3, [pc, #24]	; (800e184 <prvResetNextTaskUnblockTime+0x20>)
 800e16c:	b919      	cbnz	r1, 800e176 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e16e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e172:	601a      	str	r2, [r3, #0]
}
 800e174:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e176:	6812      	ldr	r2, [r2, #0]
 800e178:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e17a:	68d2      	ldr	r2, [r2, #12]
 800e17c:	6852      	ldr	r2, [r2, #4]
 800e17e:	e7f8      	b.n	800e172 <prvResetNextTaskUnblockTime+0xe>
 800e180:	2000e8ec 	.word	0x2000e8ec
 800e184:	2000ed90 	.word	0x2000ed90

0800e188 <prvDeleteTCB>:
	{
 800e188:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e18a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800e18e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e190:	b93b      	cbnz	r3, 800e1a2 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800e192:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e194:	f7ff f802 	bl	800d19c <vPortFree>
				vPortFree( pxTCB );
 800e198:	4620      	mov	r0, r4
	}
 800e19a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e19e:	f7fe bffd 	b.w	800d19c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e1a2:	2b01      	cmp	r3, #1
 800e1a4:	d0f9      	beq.n	800e19a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e1a6:	2b02      	cmp	r3, #2
 800e1a8:	d008      	beq.n	800e1bc <prvDeleteTCB+0x34>
 800e1aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1ae:	f383 8811 	msr	BASEPRI, r3
 800e1b2:	f3bf 8f6f 	isb	sy
 800e1b6:	f3bf 8f4f 	dsb	sy
 800e1ba:	e7fe      	b.n	800e1ba <prvDeleteTCB+0x32>
	}
 800e1bc:	bd10      	pop	{r4, pc}
	...

0800e1c0 <prvIdleTask>:
{
 800e1c0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e1c2:	4c14      	ldr	r4, [pc, #80]	; (800e214 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e1c4:	4f14      	ldr	r7, [pc, #80]	; (800e218 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800e1c6:	4d15      	ldr	r5, [pc, #84]	; (800e21c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e1c8:	6823      	ldr	r3, [r4, #0]
 800e1ca:	b983      	cbnz	r3, 800e1ee <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e1cc:	4b14      	ldr	r3, [pc, #80]	; (800e220 <prvIdleTask+0x60>)
 800e1ce:	681b      	ldr	r3, [r3, #0]
 800e1d0:	2b01      	cmp	r3, #1
 800e1d2:	d909      	bls.n	800e1e8 <prvIdleTask+0x28>
				taskYIELD();
 800e1d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e1d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e1dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e1e0:	f3bf 8f4f 	dsb	sy
 800e1e4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800e1e8:	f7f3 fc36 	bl	8001a58 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800e1ec:	e7eb      	b.n	800e1c6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e1ee:	f7ff f8c1 	bl	800d374 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e1f2:	68fb      	ldr	r3, [r7, #12]
 800e1f4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e1f6:	1d30      	adds	r0, r6, #4
 800e1f8:	f7ff f83f 	bl	800d27a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e1fc:	682b      	ldr	r3, [r5, #0]
 800e1fe:	3b01      	subs	r3, #1
 800e200:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e202:	6823      	ldr	r3, [r4, #0]
 800e204:	3b01      	subs	r3, #1
 800e206:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e208:	f7ff f8d4 	bl	800d3b4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e20c:	4630      	mov	r0, r6
 800e20e:	f7ff ffbb 	bl	800e188 <prvDeleteTCB>
 800e212:	e7d9      	b.n	800e1c8 <prvIdleTask+0x8>
 800e214:	2000ed58 	.word	0x2000ed58
 800e218:	2000edc8 	.word	0x2000edc8
 800e21c:	2000ed54 	.word	0x2000ed54
 800e220:	2000e8f4 	.word	0x2000e8f4

0800e224 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e224:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e228:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e22c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e230:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e232:	4606      	mov	r6, r0
 800e234:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e236:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e238:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e23a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e23c:	f018 f92a 	bl	8026494 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e240:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e242:	f1a9 0904 	sub.w	r9, r9, #4
 800e246:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e248:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e24c:	b3b5      	cbz	r5, 800e2bc <prvInitialiseNewTask.constprop.0+0x98>
 800e24e:	1e6b      	subs	r3, r5, #1
 800e250:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e254:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e256:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e25a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e25e:	b108      	cbz	r0, 800e264 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e260:	42ab      	cmp	r3, r5
 800e262:	d1f8      	bne.n	800e256 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e264:	2300      	movs	r3, #0
 800e266:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e26a:	9d08      	ldr	r5, [sp, #32]
 800e26c:	2d37      	cmp	r5, #55	; 0x37
 800e26e:	bf28      	it	cs
 800e270:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e272:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e276:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e278:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e27a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e27c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e280:	f7fe ffd5 	bl	800d22e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e284:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e288:	f104 0018 	add.w	r0, r4, #24
 800e28c:	f7fe ffcf 	bl	800d22e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e290:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e294:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e296:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e298:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e29a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e29e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e2a2:	463a      	mov	r2, r7
 800e2a4:	4631      	mov	r1, r6
 800e2a6:	4648      	mov	r0, r9
 800e2a8:	f7ff f836 	bl	800d318 <pxPortInitialiseStack>
 800e2ac:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e2ae:	f1b8 0f00 	cmp.w	r8, #0
 800e2b2:	d001      	beq.n	800e2b8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e2b4:	f8c8 4000 	str.w	r4, [r8]
}
 800e2b8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e2bc:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e2c0:	e7d3      	b.n	800e26a <prvInitialiseNewTask.constprop.0+0x46>

0800e2c2 <xTaskCreateStatic>:
	{
 800e2c2:	b570      	push	{r4, r5, r6, lr}
 800e2c4:	b086      	sub	sp, #24
 800e2c6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e2ca:	b945      	cbnz	r5, 800e2de <xTaskCreateStatic+0x1c>
 800e2cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2d0:	f383 8811 	msr	BASEPRI, r3
 800e2d4:	f3bf 8f6f 	isb	sy
 800e2d8:	f3bf 8f4f 	dsb	sy
 800e2dc:	e7fe      	b.n	800e2dc <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e2de:	b944      	cbnz	r4, 800e2f2 <xTaskCreateStatic+0x30>
 800e2e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e2e4:	f383 8811 	msr	BASEPRI, r3
 800e2e8:	f3bf 8f6f 	isb	sy
 800e2ec:	f3bf 8f4f 	dsb	sy
 800e2f0:	e7fe      	b.n	800e2f0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e2f2:	2660      	movs	r6, #96	; 0x60
 800e2f4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e2f6:	9e05      	ldr	r6, [sp, #20]
 800e2f8:	2e60      	cmp	r6, #96	; 0x60
 800e2fa:	d008      	beq.n	800e30e <xTaskCreateStatic+0x4c>
 800e2fc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e300:	f383 8811 	msr	BASEPRI, r3
 800e304:	f3bf 8f6f 	isb	sy
 800e308:	f3bf 8f4f 	dsb	sy
 800e30c:	e7fe      	b.n	800e30c <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e30e:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e310:	2502      	movs	r5, #2
 800e312:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e316:	ad04      	add	r5, sp, #16
 800e318:	9501      	str	r5, [sp, #4]
 800e31a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e31c:	9402      	str	r4, [sp, #8]
 800e31e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e320:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e322:	f7ff ff7f 	bl	800e224 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e326:	4620      	mov	r0, r4
 800e328:	f7ff fe64 	bl	800dff4 <prvAddNewTaskToReadyList>
	}
 800e32c:	9804      	ldr	r0, [sp, #16]
 800e32e:	b006      	add	sp, #24
 800e330:	bd70      	pop	{r4, r5, r6, pc}

0800e332 <xTaskCreate>:
	{
 800e332:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e336:	4607      	mov	r7, r0
 800e338:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e33a:	0090      	lsls	r0, r2, #2
	{
 800e33c:	4688      	mov	r8, r1
 800e33e:	4616      	mov	r6, r2
 800e340:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e342:	f7fe fe93 	bl	800d06c <pvPortMalloc>
			if( pxStack != NULL )
 800e346:	4605      	mov	r5, r0
 800e348:	b1e8      	cbz	r0, 800e386 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e34a:	2060      	movs	r0, #96	; 0x60
 800e34c:	f7fe fe8e 	bl	800d06c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e350:	4604      	mov	r4, r0
 800e352:	b1a8      	cbz	r0, 800e380 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e354:	2300      	movs	r3, #0
 800e356:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e35a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e35c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e35e:	9301      	str	r3, [sp, #4]
 800e360:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e362:	9002      	str	r0, [sp, #8]
 800e364:	9300      	str	r3, [sp, #0]
 800e366:	4632      	mov	r2, r6
 800e368:	464b      	mov	r3, r9
 800e36a:	4641      	mov	r1, r8
 800e36c:	4638      	mov	r0, r7
 800e36e:	f7ff ff59 	bl	800e224 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e372:	4620      	mov	r0, r4
 800e374:	f7ff fe3e 	bl	800dff4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e378:	2001      	movs	r0, #1
	}
 800e37a:	b005      	add	sp, #20
 800e37c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e380:	4628      	mov	r0, r5
 800e382:	f7fe ff0b 	bl	800d19c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e386:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e38a:	e7f6      	b.n	800e37a <xTaskCreate+0x48>

0800e38c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e38c:	4a02      	ldr	r2, [pc, #8]	; (800e398 <vTaskSuspendAll+0xc>)
 800e38e:	6813      	ldr	r3, [r2, #0]
 800e390:	3301      	adds	r3, #1
 800e392:	6013      	str	r3, [r2, #0]
}
 800e394:	4770      	bx	lr
 800e396:	bf00      	nop
 800e398:	2000ed5c 	.word	0x2000ed5c

0800e39c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e39c:	4b01      	ldr	r3, [pc, #4]	; (800e3a4 <xTaskGetTickCount+0x8>)
 800e39e:	6818      	ldr	r0, [r3, #0]
}
 800e3a0:	4770      	bx	lr
 800e3a2:	bf00      	nop
 800e3a4:	2000eddc 	.word	0x2000eddc

0800e3a8 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e3a8:	4b3f      	ldr	r3, [pc, #252]	; (800e4a8 <xTaskIncrementTick+0x100>)
 800e3aa:	681b      	ldr	r3, [r3, #0]
{
 800e3ac:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e3b0:	2b00      	cmp	r3, #0
 800e3b2:	d173      	bne.n	800e49c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e3b4:	4b3d      	ldr	r3, [pc, #244]	; (800e4ac <xTaskIncrementTick+0x104>)
 800e3b6:	681d      	ldr	r5, [r3, #0]
 800e3b8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e3ba:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e3bc:	b9bd      	cbnz	r5, 800e3ee <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e3be:	4b3c      	ldr	r3, [pc, #240]	; (800e4b0 <xTaskIncrementTick+0x108>)
 800e3c0:	681a      	ldr	r2, [r3, #0]
 800e3c2:	6812      	ldr	r2, [r2, #0]
 800e3c4:	b142      	cbz	r2, 800e3d8 <xTaskIncrementTick+0x30>
 800e3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3ca:	f383 8811 	msr	BASEPRI, r3
 800e3ce:	f3bf 8f6f 	isb	sy
 800e3d2:	f3bf 8f4f 	dsb	sy
 800e3d6:	e7fe      	b.n	800e3d6 <xTaskIncrementTick+0x2e>
 800e3d8:	4a36      	ldr	r2, [pc, #216]	; (800e4b4 <xTaskIncrementTick+0x10c>)
 800e3da:	6819      	ldr	r1, [r3, #0]
 800e3dc:	6810      	ldr	r0, [r2, #0]
 800e3de:	6018      	str	r0, [r3, #0]
 800e3e0:	6011      	str	r1, [r2, #0]
 800e3e2:	4a35      	ldr	r2, [pc, #212]	; (800e4b8 <xTaskIncrementTick+0x110>)
 800e3e4:	6813      	ldr	r3, [r2, #0]
 800e3e6:	3301      	adds	r3, #1
 800e3e8:	6013      	str	r3, [r2, #0]
 800e3ea:	f7ff febb 	bl	800e164 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e3ee:	4e33      	ldr	r6, [pc, #204]	; (800e4bc <xTaskIncrementTick+0x114>)
 800e3f0:	4f33      	ldr	r7, [pc, #204]	; (800e4c0 <xTaskIncrementTick+0x118>)
 800e3f2:	6833      	ldr	r3, [r6, #0]
 800e3f4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e4cc <xTaskIncrementTick+0x124>
 800e3f8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e3fa:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e3fe:	d211      	bcs.n	800e424 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e400:	f8d8 3000 	ldr.w	r3, [r8]
 800e404:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e406:	2214      	movs	r2, #20
 800e408:	4353      	muls	r3, r2
 800e40a:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e40c:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e40e:	4b2d      	ldr	r3, [pc, #180]	; (800e4c4 <xTaskIncrementTick+0x11c>)
 800e410:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e412:	bf28      	it	cs
 800e414:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e416:	2b00      	cmp	r3, #0
 800e418:	bf18      	it	ne
 800e41a:	2401      	movne	r4, #1
}
 800e41c:	4620      	mov	r0, r4
 800e41e:	b003      	add	sp, #12
 800e420:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e424:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e4b0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e428:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800e4d0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e42c:	f8d9 3000 	ldr.w	r3, [r9]
 800e430:	681b      	ldr	r3, [r3, #0]
 800e432:	b91b      	cbnz	r3, 800e43c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e434:	f04f 33ff 	mov.w	r3, #4294967295
 800e438:	6033      	str	r3, [r6, #0]
					break;
 800e43a:	e7e1      	b.n	800e400 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e43c:	f8d9 3000 	ldr.w	r3, [r9]
 800e440:	68db      	ldr	r3, [r3, #12]
 800e442:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e446:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e44a:	4295      	cmp	r5, r2
 800e44c:	d201      	bcs.n	800e452 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e44e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e450:	e7d6      	b.n	800e400 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e452:	f10b 0104 	add.w	r1, fp, #4
 800e456:	4608      	mov	r0, r1
 800e458:	9101      	str	r1, [sp, #4]
 800e45a:	f7fe ff0e 	bl	800d27a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e45e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e462:	9901      	ldr	r1, [sp, #4]
 800e464:	b122      	cbz	r2, 800e470 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e466:	f10b 0018 	add.w	r0, fp, #24
 800e46a:	f7fe ff06 	bl	800d27a <uxListRemove>
 800e46e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e470:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e474:	f8da 2000 	ldr.w	r2, [sl]
 800e478:	2314      	movs	r3, #20
 800e47a:	4290      	cmp	r0, r2
 800e47c:	bf88      	it	hi
 800e47e:	f8ca 0000 	strhi.w	r0, [sl]
 800e482:	fb03 7000 	mla	r0, r3, r0, r7
 800e486:	f7fe fed5 	bl	800d234 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e48a:	f8d8 1000 	ldr.w	r1, [r8]
 800e48e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e492:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e494:	429a      	cmp	r2, r3
 800e496:	bf28      	it	cs
 800e498:	2401      	movcs	r4, #1
 800e49a:	e7c7      	b.n	800e42c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e49c:	4a0a      	ldr	r2, [pc, #40]	; (800e4c8 <xTaskIncrementTick+0x120>)
 800e49e:	6813      	ldr	r3, [r2, #0]
 800e4a0:	3301      	adds	r3, #1
 800e4a2:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e4a4:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e4a6:	e7b9      	b.n	800e41c <xTaskIncrementTick+0x74>
 800e4a8:	2000ed5c 	.word	0x2000ed5c
 800e4ac:	2000eddc 	.word	0x2000eddc
 800e4b0:	2000e8ec 	.word	0x2000e8ec
 800e4b4:	2000e8f0 	.word	0x2000e8f0
 800e4b8:	2000ed94 	.word	0x2000ed94
 800e4bc:	2000ed90 	.word	0x2000ed90
 800e4c0:	2000e8f4 	.word	0x2000e8f4
 800e4c4:	2000ede0 	.word	0x2000ede0
 800e4c8:	2000ed98 	.word	0x2000ed98
 800e4cc:	2000e8e8 	.word	0x2000e8e8
 800e4d0:	2000ed64 	.word	0x2000ed64

0800e4d4 <xTaskResumeAll>:
{
 800e4d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800e4d6:	4c31      	ldr	r4, [pc, #196]	; (800e59c <xTaskResumeAll+0xc8>)
 800e4d8:	6823      	ldr	r3, [r4, #0]
 800e4da:	b943      	cbnz	r3, 800e4ee <xTaskResumeAll+0x1a>
 800e4dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4e0:	f383 8811 	msr	BASEPRI, r3
 800e4e4:	f3bf 8f6f 	isb	sy
 800e4e8:	f3bf 8f4f 	dsb	sy
 800e4ec:	e7fe      	b.n	800e4ec <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800e4ee:	f7fe ff41 	bl	800d374 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e4f2:	6823      	ldr	r3, [r4, #0]
 800e4f4:	3b01      	subs	r3, #1
 800e4f6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e4f8:	6824      	ldr	r4, [r4, #0]
 800e4fa:	b12c      	cbz	r4, 800e508 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800e4fc:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e4fe:	f7fe ff59 	bl	800d3b4 <vPortExitCritical>
}
 800e502:	4620      	mov	r0, r4
 800e504:	b003      	add	sp, #12
 800e506:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e508:	4b25      	ldr	r3, [pc, #148]	; (800e5a0 <xTaskResumeAll+0xcc>)
 800e50a:	681b      	ldr	r3, [r3, #0]
 800e50c:	2b00      	cmp	r3, #0
 800e50e:	d0f5      	beq.n	800e4fc <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e510:	4d24      	ldr	r5, [pc, #144]	; (800e5a4 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800e512:	4e25      	ldr	r6, [pc, #148]	; (800e5a8 <xTaskResumeAll+0xd4>)
 800e514:	4f25      	ldr	r7, [pc, #148]	; (800e5ac <xTaskResumeAll+0xd8>)
 800e516:	e01e      	b.n	800e556 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e518:	68eb      	ldr	r3, [r5, #12]
 800e51a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e51c:	f104 0018 	add.w	r0, r4, #24
 800e520:	f7fe feab 	bl	800d27a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e524:	1d21      	adds	r1, r4, #4
 800e526:	4608      	mov	r0, r1
 800e528:	9101      	str	r1, [sp, #4]
 800e52a:	f7fe fea6 	bl	800d27a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e52e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e530:	6832      	ldr	r2, [r6, #0]
 800e532:	9901      	ldr	r1, [sp, #4]
 800e534:	2014      	movs	r0, #20
 800e536:	4293      	cmp	r3, r2
 800e538:	fb00 7003 	mla	r0, r0, r3, r7
 800e53c:	bf88      	it	hi
 800e53e:	6033      	strhi	r3, [r6, #0]
 800e540:	f7fe fe78 	bl	800d234 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e544:	4b1a      	ldr	r3, [pc, #104]	; (800e5b0 <xTaskResumeAll+0xdc>)
 800e546:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e548:	681b      	ldr	r3, [r3, #0]
 800e54a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e54c:	429a      	cmp	r2, r3
 800e54e:	d302      	bcc.n	800e556 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800e550:	4b18      	ldr	r3, [pc, #96]	; (800e5b4 <xTaskResumeAll+0xe0>)
 800e552:	2201      	movs	r2, #1
 800e554:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e556:	682b      	ldr	r3, [r5, #0]
 800e558:	2b00      	cmp	r3, #0
 800e55a:	d1dd      	bne.n	800e518 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800e55c:	b10c      	cbz	r4, 800e562 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800e55e:	f7ff fe01 	bl	800e164 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e562:	4d15      	ldr	r5, [pc, #84]	; (800e5b8 <xTaskResumeAll+0xe4>)
 800e564:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e566:	b144      	cbz	r4, 800e57a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800e568:	4e12      	ldr	r6, [pc, #72]	; (800e5b4 <xTaskResumeAll+0xe0>)
 800e56a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e56c:	f7ff ff1c 	bl	800e3a8 <xTaskIncrementTick>
 800e570:	b100      	cbz	r0, 800e574 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800e572:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e574:	3c01      	subs	r4, #1
 800e576:	d1f9      	bne.n	800e56c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800e578:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e57a:	4b0e      	ldr	r3, [pc, #56]	; (800e5b4 <xTaskResumeAll+0xe0>)
 800e57c:	681b      	ldr	r3, [r3, #0]
 800e57e:	2b00      	cmp	r3, #0
 800e580:	d0bc      	beq.n	800e4fc <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800e582:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e586:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e58a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e58e:	f3bf 8f4f 	dsb	sy
 800e592:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e596:	2401      	movs	r4, #1
 800e598:	e7b1      	b.n	800e4fe <xTaskResumeAll+0x2a>
 800e59a:	bf00      	nop
 800e59c:	2000ed5c 	.word	0x2000ed5c
 800e5a0:	2000ed54 	.word	0x2000ed54
 800e5a4:	2000ed9c 	.word	0x2000ed9c
 800e5a8:	2000ed64 	.word	0x2000ed64
 800e5ac:	2000e8f4 	.word	0x2000e8f4
 800e5b0:	2000e8e8 	.word	0x2000e8e8
 800e5b4:	2000ede0 	.word	0x2000ede0
 800e5b8:	2000ed98 	.word	0x2000ed98

0800e5bc <vTaskDelay>:
	{
 800e5bc:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e5be:	b950      	cbnz	r0, 800e5d6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e5c0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e5c4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e5c8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e5cc:	f3bf 8f4f 	dsb	sy
 800e5d0:	f3bf 8f6f 	isb	sy
	}
 800e5d4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e5d6:	4b0a      	ldr	r3, [pc, #40]	; (800e600 <vTaskDelay+0x44>)
 800e5d8:	6819      	ldr	r1, [r3, #0]
 800e5da:	b141      	cbz	r1, 800e5ee <vTaskDelay+0x32>
 800e5dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5e0:	f383 8811 	msr	BASEPRI, r3
 800e5e4:	f3bf 8f6f 	isb	sy
 800e5e8:	f3bf 8f4f 	dsb	sy
 800e5ec:	e7fe      	b.n	800e5ec <vTaskDelay+0x30>
			vTaskSuspendAll();
 800e5ee:	f7ff fecd 	bl	800e38c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e5f2:	f7ff fd7f 	bl	800e0f4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e5f6:	f7ff ff6d 	bl	800e4d4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e5fa:	2800      	cmp	r0, #0
 800e5fc:	d0e0      	beq.n	800e5c0 <vTaskDelay+0x4>
 800e5fe:	e7e9      	b.n	800e5d4 <vTaskDelay+0x18>
 800e600:	2000ed5c 	.word	0x2000ed5c

0800e604 <vTaskSetApplicationTaskTag>:
	{
 800e604:	b538      	push	{r3, r4, r5, lr}
 800e606:	460d      	mov	r5, r1
		if( xTask == NULL )
 800e608:	4604      	mov	r4, r0
 800e60a:	b908      	cbnz	r0, 800e610 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800e60c:	4b04      	ldr	r3, [pc, #16]	; (800e620 <vTaskSetApplicationTaskTag+0x1c>)
 800e60e:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800e610:	f7fe feb0 	bl	800d374 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800e614:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800e616:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800e61a:	f7fe becb 	b.w	800d3b4 <vPortExitCritical>
 800e61e:	bf00      	nop
 800e620:	2000e8e8 	.word	0x2000e8e8

0800e624 <xTaskCallApplicationTaskHook>:
	{
 800e624:	4603      	mov	r3, r0
 800e626:	4608      	mov	r0, r1
		if( xTask == NULL )
 800e628:	b90b      	cbnz	r3, 800e62e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800e62a:	4b03      	ldr	r3, [pc, #12]	; (800e638 <xTaskCallApplicationTaskHook+0x14>)
 800e62c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800e62e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e630:	b103      	cbz	r3, 800e634 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800e632:	4718      	bx	r3
	}
 800e634:	4618      	mov	r0, r3
 800e636:	4770      	bx	lr
 800e638:	2000e8e8 	.word	0x2000e8e8

0800e63c <vTaskStartScheduler>:
{
 800e63c:	b510      	push	{r4, lr}
 800e63e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e640:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e642:	aa07      	add	r2, sp, #28
 800e644:	a906      	add	r1, sp, #24
 800e646:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e648:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e64c:	f7fe fcd2 	bl	800cff4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e650:	9b05      	ldr	r3, [sp, #20]
 800e652:	9302      	str	r3, [sp, #8]
 800e654:	9b06      	ldr	r3, [sp, #24]
 800e656:	9a07      	ldr	r2, [sp, #28]
 800e658:	4919      	ldr	r1, [pc, #100]	; (800e6c0 <vTaskStartScheduler+0x84>)
 800e65a:	481a      	ldr	r0, [pc, #104]	; (800e6c4 <vTaskStartScheduler+0x88>)
 800e65c:	e9cd 4300 	strd	r4, r3, [sp]
 800e660:	4623      	mov	r3, r4
 800e662:	f7ff fe2e 	bl	800e2c2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e666:	b340      	cbz	r0, 800e6ba <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800e668:	f000 fa8a 	bl	800eb80 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e66c:	2801      	cmp	r0, #1
 800e66e:	d119      	bne.n	800e6a4 <vTaskStartScheduler+0x68>
 800e670:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e674:	f383 8811 	msr	BASEPRI, r3
 800e678:	f3bf 8f6f 	isb	sy
 800e67c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800e680:	4b11      	ldr	r3, [pc, #68]	; (800e6c8 <vTaskStartScheduler+0x8c>)
 800e682:	f04f 32ff 	mov.w	r2, #4294967295
 800e686:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e688:	4b10      	ldr	r3, [pc, #64]	; (800e6cc <vTaskStartScheduler+0x90>)
 800e68a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e68c:	4b10      	ldr	r3, [pc, #64]	; (800e6d0 <vTaskStartScheduler+0x94>)
 800e68e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800e690:	4b10      	ldr	r3, [pc, #64]	; (800e6d4 <vTaskStartScheduler+0x98>)
 800e692:	4621      	mov	r1, r4
 800e694:	6818      	ldr	r0, [r3, #0]
 800e696:	f7ff ffc5 	bl	800e624 <xTaskCallApplicationTaskHook>
}
 800e69a:	b008      	add	sp, #32
 800e69c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e6a0:	f7fe bef8 	b.w	800d494 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e6a4:	3001      	adds	r0, #1
 800e6a6:	d108      	bne.n	800e6ba <vTaskStartScheduler+0x7e>
 800e6a8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e6ac:	f383 8811 	msr	BASEPRI, r3
 800e6b0:	f3bf 8f6f 	isb	sy
 800e6b4:	f3bf 8f4f 	dsb	sy
 800e6b8:	e7fe      	b.n	800e6b8 <vTaskStartScheduler+0x7c>
}
 800e6ba:	b008      	add	sp, #32
 800e6bc:	bd10      	pop	{r4, pc}
 800e6be:	bf00      	nop
 800e6c0:	08029995 	.word	0x08029995
 800e6c4:	0800e1c1 	.word	0x0800e1c1
 800e6c8:	2000ed90 	.word	0x2000ed90
 800e6cc:	2000edb0 	.word	0x2000edb0
 800e6d0:	2000eddc 	.word	0x2000eddc
 800e6d4:	2000e8e8 	.word	0x2000e8e8

0800e6d8 <vTaskSwitchContext>:
{
 800e6d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e6da:	4b1c      	ldr	r3, [pc, #112]	; (800e74c <vTaskSwitchContext+0x74>)
 800e6dc:	681a      	ldr	r2, [r3, #0]
 800e6de:	4b1c      	ldr	r3, [pc, #112]	; (800e750 <vTaskSwitchContext+0x78>)
 800e6e0:	b112      	cbz	r2, 800e6e8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e6e2:	2201      	movs	r2, #1
 800e6e4:	601a      	str	r2, [r3, #0]
}
 800e6e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800e6e8:	4c1a      	ldr	r4, [pc, #104]	; (800e754 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800e6ea:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6ec:	4e1a      	ldr	r6, [pc, #104]	; (800e758 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800e6ee:	6820      	ldr	r0, [r4, #0]
 800e6f0:	2101      	movs	r1, #1
 800e6f2:	f7ff ff97 	bl	800e624 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6f6:	6832      	ldr	r2, [r6, #0]
 800e6f8:	4918      	ldr	r1, [pc, #96]	; (800e75c <vTaskSwitchContext+0x84>)
 800e6fa:	2714      	movs	r7, #20
 800e6fc:	fb07 f302 	mul.w	r3, r7, r2
 800e700:	18c8      	adds	r0, r1, r3
 800e702:	58cd      	ldr	r5, [r1, r3]
 800e704:	b1ad      	cbz	r5, 800e732 <vTaskSwitchContext+0x5a>
 800e706:	6845      	ldr	r5, [r0, #4]
 800e708:	3308      	adds	r3, #8
 800e70a:	686d      	ldr	r5, [r5, #4]
 800e70c:	6045      	str	r5, [r0, #4]
 800e70e:	440b      	add	r3, r1
 800e710:	429d      	cmp	r5, r3
 800e712:	bf04      	itt	eq
 800e714:	686b      	ldreq	r3, [r5, #4]
 800e716:	6043      	streq	r3, [r0, #4]
 800e718:	2314      	movs	r3, #20
 800e71a:	fb03 1102 	mla	r1, r3, r2, r1
 800e71e:	684b      	ldr	r3, [r1, #4]
 800e720:	68db      	ldr	r3, [r3, #12]
 800e722:	6023      	str	r3, [r4, #0]
 800e724:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800e726:	6820      	ldr	r0, [r4, #0]
 800e728:	2100      	movs	r1, #0
}
 800e72a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800e72e:	f7ff bf79 	b.w	800e624 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e732:	b942      	cbnz	r2, 800e746 <vTaskSwitchContext+0x6e>
 800e734:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e738:	f383 8811 	msr	BASEPRI, r3
 800e73c:	f3bf 8f6f 	isb	sy
 800e740:	f3bf 8f4f 	dsb	sy
 800e744:	e7fe      	b.n	800e744 <vTaskSwitchContext+0x6c>
 800e746:	3a01      	subs	r2, #1
 800e748:	e7d8      	b.n	800e6fc <vTaskSwitchContext+0x24>
 800e74a:	bf00      	nop
 800e74c:	2000ed5c 	.word	0x2000ed5c
 800e750:	2000ede0 	.word	0x2000ede0
 800e754:	2000e8e8 	.word	0x2000e8e8
 800e758:	2000ed64 	.word	0x2000ed64
 800e75c:	2000e8f4 	.word	0x2000e8f4

0800e760 <vTaskPlaceOnEventList>:
{
 800e760:	b510      	push	{r4, lr}
 800e762:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800e764:	b940      	cbnz	r0, 800e778 <vTaskPlaceOnEventList+0x18>
 800e766:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e76a:	f383 8811 	msr	BASEPRI, r3
 800e76e:	f3bf 8f6f 	isb	sy
 800e772:	f3bf 8f4f 	dsb	sy
 800e776:	e7fe      	b.n	800e776 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e778:	4b05      	ldr	r3, [pc, #20]	; (800e790 <vTaskPlaceOnEventList+0x30>)
 800e77a:	6819      	ldr	r1, [r3, #0]
 800e77c:	3118      	adds	r1, #24
 800e77e:	f7fe fd65 	bl	800d24c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e782:	4620      	mov	r0, r4
 800e784:	2101      	movs	r1, #1
}
 800e786:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800e78a:	f7ff bcb3 	b.w	800e0f4 <prvAddCurrentTaskToDelayedList>
 800e78e:	bf00      	nop
 800e790:	2000e8e8 	.word	0x2000e8e8

0800e794 <vTaskPlaceOnEventListRestricted>:
	{
 800e794:	b538      	push	{r3, r4, r5, lr}
 800e796:	460d      	mov	r5, r1
 800e798:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800e79a:	b940      	cbnz	r0, 800e7ae <vTaskPlaceOnEventListRestricted+0x1a>
 800e79c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7a0:	f383 8811 	msr	BASEPRI, r3
 800e7a4:	f3bf 8f6f 	isb	sy
 800e7a8:	f3bf 8f4f 	dsb	sy
 800e7ac:	e7fe      	b.n	800e7ac <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800e7ae:	4b07      	ldr	r3, [pc, #28]	; (800e7cc <vTaskPlaceOnEventListRestricted+0x38>)
 800e7b0:	6819      	ldr	r1, [r3, #0]
 800e7b2:	3118      	adds	r1, #24
 800e7b4:	f7fe fd3e 	bl	800d234 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800e7b8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e7ba:	4621      	mov	r1, r4
 800e7bc:	bf0c      	ite	eq
 800e7be:	4628      	moveq	r0, r5
 800e7c0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800e7c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800e7c8:	f7ff bc94 	b.w	800e0f4 <prvAddCurrentTaskToDelayedList>
 800e7cc:	2000e8e8 	.word	0x2000e8e8

0800e7d0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7d0:	68c3      	ldr	r3, [r0, #12]
{
 800e7d2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7d4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800e7d6:	b944      	cbnz	r4, 800e7ea <xTaskRemoveFromEventList+0x1a>
 800e7d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e7dc:	f383 8811 	msr	BASEPRI, r3
 800e7e0:	f3bf 8f6f 	isb	sy
 800e7e4:	f3bf 8f4f 	dsb	sy
 800e7e8:	e7fe      	b.n	800e7e8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800e7ea:	f104 0118 	add.w	r1, r4, #24
 800e7ee:	4608      	mov	r0, r1
 800e7f0:	9101      	str	r1, [sp, #4]
 800e7f2:	f7fe fd42 	bl	800d27a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e7f6:	4b12      	ldr	r3, [pc, #72]	; (800e840 <xTaskRemoveFromEventList+0x70>)
 800e7f8:	9901      	ldr	r1, [sp, #4]
 800e7fa:	681b      	ldr	r3, [r3, #0]
 800e7fc:	b9eb      	cbnz	r3, 800e83a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800e7fe:	1d21      	adds	r1, r4, #4
 800e800:	4608      	mov	r0, r1
 800e802:	9101      	str	r1, [sp, #4]
 800e804:	f7fe fd39 	bl	800d27a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800e808:	4a0e      	ldr	r2, [pc, #56]	; (800e844 <xTaskRemoveFromEventList+0x74>)
 800e80a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e80c:	6810      	ldr	r0, [r2, #0]
 800e80e:	9901      	ldr	r1, [sp, #4]
 800e810:	4283      	cmp	r3, r0
 800e812:	bf88      	it	hi
 800e814:	6013      	strhi	r3, [r2, #0]
 800e816:	4a0c      	ldr	r2, [pc, #48]	; (800e848 <xTaskRemoveFromEventList+0x78>)
 800e818:	2014      	movs	r0, #20
 800e81a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e81e:	f7fe fd09 	bl	800d234 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800e822:	4b0a      	ldr	r3, [pc, #40]	; (800e84c <xTaskRemoveFromEventList+0x7c>)
 800e824:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e826:	681b      	ldr	r3, [r3, #0]
 800e828:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e82a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800e82c:	bf85      	ittet	hi
 800e82e:	4b08      	ldrhi	r3, [pc, #32]	; (800e850 <xTaskRemoveFromEventList+0x80>)
 800e830:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800e832:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800e834:	6018      	strhi	r0, [r3, #0]
}
 800e836:	b002      	add	sp, #8
 800e838:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800e83a:	4806      	ldr	r0, [pc, #24]	; (800e854 <xTaskRemoveFromEventList+0x84>)
 800e83c:	e7ef      	b.n	800e81e <xTaskRemoveFromEventList+0x4e>
 800e83e:	bf00      	nop
 800e840:	2000ed5c 	.word	0x2000ed5c
 800e844:	2000ed64 	.word	0x2000ed64
 800e848:	2000e8f4 	.word	0x2000e8f4
 800e84c:	2000e8e8 	.word	0x2000e8e8
 800e850:	2000ede0 	.word	0x2000ede0
 800e854:	2000ed9c 	.word	0x2000ed9c

0800e858 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800e858:	4b03      	ldr	r3, [pc, #12]	; (800e868 <vTaskInternalSetTimeOutState+0x10>)
 800e85a:	681b      	ldr	r3, [r3, #0]
 800e85c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800e85e:	4b03      	ldr	r3, [pc, #12]	; (800e86c <vTaskInternalSetTimeOutState+0x14>)
 800e860:	681b      	ldr	r3, [r3, #0]
 800e862:	6043      	str	r3, [r0, #4]
}
 800e864:	4770      	bx	lr
 800e866:	bf00      	nop
 800e868:	2000ed94 	.word	0x2000ed94
 800e86c:	2000eddc 	.word	0x2000eddc

0800e870 <xTaskCheckForTimeOut>:
{
 800e870:	b570      	push	{r4, r5, r6, lr}
 800e872:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800e874:	4605      	mov	r5, r0
 800e876:	b940      	cbnz	r0, 800e88a <xTaskCheckForTimeOut+0x1a>
 800e878:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e87c:	f383 8811 	msr	BASEPRI, r3
 800e880:	f3bf 8f6f 	isb	sy
 800e884:	f3bf 8f4f 	dsb	sy
 800e888:	e7fe      	b.n	800e888 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800e88a:	b941      	cbnz	r1, 800e89e <xTaskCheckForTimeOut+0x2e>
 800e88c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e890:	f383 8811 	msr	BASEPRI, r3
 800e894:	f3bf 8f6f 	isb	sy
 800e898:	f3bf 8f4f 	dsb	sy
 800e89c:	e7fe      	b.n	800e89c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800e89e:	f7fe fd69 	bl	800d374 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800e8a2:	4b0f      	ldr	r3, [pc, #60]	; (800e8e0 <xTaskCheckForTimeOut+0x70>)
 800e8a4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800e8a6:	6823      	ldr	r3, [r4, #0]
 800e8a8:	1c5a      	adds	r2, r3, #1
 800e8aa:	d010      	beq.n	800e8ce <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e8ac:	480d      	ldr	r0, [pc, #52]	; (800e8e4 <xTaskCheckForTimeOut+0x74>)
 800e8ae:	682e      	ldr	r6, [r5, #0]
 800e8b0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e8b2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800e8b4:	4286      	cmp	r6, r0
 800e8b6:	d001      	beq.n	800e8bc <xTaskCheckForTimeOut+0x4c>
 800e8b8:	428a      	cmp	r2, r1
 800e8ba:	d90f      	bls.n	800e8dc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800e8bc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800e8be:	4283      	cmp	r3, r0
 800e8c0:	d90a      	bls.n	800e8d8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800e8c2:	1a5b      	subs	r3, r3, r1
 800e8c4:	4413      	add	r3, r2
 800e8c6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800e8c8:	4628      	mov	r0, r5
 800e8ca:	f7ff ffc5 	bl	800e858 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800e8ce:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e8d0:	f7fe fd70 	bl	800d3b4 <vPortExitCritical>
}
 800e8d4:	4620      	mov	r0, r4
 800e8d6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800e8d8:	2300      	movs	r3, #0
 800e8da:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800e8dc:	2401      	movs	r4, #1
 800e8de:	e7f7      	b.n	800e8d0 <xTaskCheckForTimeOut+0x60>
 800e8e0:	2000eddc 	.word	0x2000eddc
 800e8e4:	2000ed94 	.word	0x2000ed94

0800e8e8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800e8e8:	4b01      	ldr	r3, [pc, #4]	; (800e8f0 <vTaskMissedYield+0x8>)
 800e8ea:	2201      	movs	r2, #1
 800e8ec:	601a      	str	r2, [r3, #0]
}
 800e8ee:	4770      	bx	lr
 800e8f0:	2000ede0 	.word	0x2000ede0

0800e8f4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800e8f4:	4b05      	ldr	r3, [pc, #20]	; (800e90c <xTaskGetSchedulerState+0x18>)
 800e8f6:	681b      	ldr	r3, [r3, #0]
 800e8f8:	b133      	cbz	r3, 800e908 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e8fa:	4b05      	ldr	r3, [pc, #20]	; (800e910 <xTaskGetSchedulerState+0x1c>)
 800e8fc:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800e8fe:	2b00      	cmp	r3, #0
 800e900:	bf0c      	ite	eq
 800e902:	2002      	moveq	r0, #2
 800e904:	2000      	movne	r0, #0
 800e906:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800e908:	2001      	movs	r0, #1
	}
 800e90a:	4770      	bx	lr
 800e90c:	2000edb0 	.word	0x2000edb0
 800e910:	2000ed5c 	.word	0x2000ed5c

0800e914 <xTaskPriorityInherit>:
	{
 800e914:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800e916:	4604      	mov	r4, r0
 800e918:	b348      	cbz	r0, 800e96e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800e91a:	4d1c      	ldr	r5, [pc, #112]	; (800e98c <xTaskPriorityInherit+0x78>)
 800e91c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800e91e:	682a      	ldr	r2, [r5, #0]
 800e920:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800e922:	4293      	cmp	r3, r2
 800e924:	d229      	bcs.n	800e97a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e926:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e928:	4e19      	ldr	r6, [pc, #100]	; (800e990 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800e92a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e92c:	bfa1      	itttt	ge
 800e92e:	682a      	ldrge	r2, [r5, #0]
 800e930:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800e932:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800e936:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800e938:	2214      	movs	r2, #20
 800e93a:	fb02 6303 	mla	r3, r2, r3, r6
 800e93e:	6942      	ldr	r2, [r0, #20]
 800e940:	429a      	cmp	r2, r3
 800e942:	d116      	bne.n	800e972 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e944:	1d01      	adds	r1, r0, #4
 800e946:	4608      	mov	r0, r1
 800e948:	9101      	str	r1, [sp, #4]
 800e94a:	f7fe fc96 	bl	800d27a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e94e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e950:	4a10      	ldr	r2, [pc, #64]	; (800e994 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e952:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e954:	6810      	ldr	r0, [r2, #0]
 800e956:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e958:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800e95a:	4283      	cmp	r3, r0
 800e95c:	f04f 0014 	mov.w	r0, #20
 800e960:	fb00 6003 	mla	r0, r0, r3, r6
 800e964:	bf88      	it	hi
 800e966:	6013      	strhi	r3, [r2, #0]
 800e968:	f7fe fc64 	bl	800d234 <vListInsertEnd>
				xReturn = pdTRUE;
 800e96c:	2001      	movs	r0, #1
	}
 800e96e:	b002      	add	sp, #8
 800e970:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800e972:	682b      	ldr	r3, [r5, #0]
 800e974:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e976:	62c3      	str	r3, [r0, #44]	; 0x2c
 800e978:	e7f8      	b.n	800e96c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800e97a:	682b      	ldr	r3, [r5, #0]
 800e97c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800e97e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800e980:	42a0      	cmp	r0, r4
 800e982:	bf2c      	ite	cs
 800e984:	2000      	movcs	r0, #0
 800e986:	2001      	movcc	r0, #1
 800e988:	e7f1      	b.n	800e96e <xTaskPriorityInherit+0x5a>
 800e98a:	bf00      	nop
 800e98c:	2000e8e8 	.word	0x2000e8e8
 800e990:	2000e8f4 	.word	0x2000e8f4
 800e994:	2000ed64 	.word	0x2000ed64

0800e998 <xTaskPriorityDisinherit>:
	{
 800e998:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800e99a:	b910      	cbnz	r0, 800e9a2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800e99c:	2000      	movs	r0, #0
	}
 800e99e:	b002      	add	sp, #8
 800e9a0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800e9a2:	4b1c      	ldr	r3, [pc, #112]	; (800ea14 <xTaskPriorityDisinherit+0x7c>)
 800e9a4:	681c      	ldr	r4, [r3, #0]
 800e9a6:	4284      	cmp	r4, r0
 800e9a8:	d008      	beq.n	800e9bc <xTaskPriorityDisinherit+0x24>
 800e9aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9ae:	f383 8811 	msr	BASEPRI, r3
 800e9b2:	f3bf 8f6f 	isb	sy
 800e9b6:	f3bf 8f4f 	dsb	sy
 800e9ba:	e7fe      	b.n	800e9ba <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800e9bc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800e9be:	b943      	cbnz	r3, 800e9d2 <xTaskPriorityDisinherit+0x3a>
 800e9c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9c4:	f383 8811 	msr	BASEPRI, r3
 800e9c8:	f3bf 8f6f 	isb	sy
 800e9cc:	f3bf 8f4f 	dsb	sy
 800e9d0:	e7fe      	b.n	800e9d0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e9d2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800e9d4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800e9d6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e9d8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800e9da:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800e9dc:	d0de      	beq.n	800e99c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800e9de:	2b00      	cmp	r3, #0
 800e9e0:	d1dc      	bne.n	800e99c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e9e2:	1d21      	adds	r1, r4, #4
 800e9e4:	4608      	mov	r0, r1
 800e9e6:	9101      	str	r1, [sp, #4]
 800e9e8:	f7fe fc47 	bl	800d27a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e9ec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800e9ee:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800e9f0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e9f2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800e9f6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800e9f8:	4a07      	ldr	r2, [pc, #28]	; (800ea18 <xTaskPriorityDisinherit+0x80>)
 800e9fa:	6810      	ldr	r0, [r2, #0]
 800e9fc:	4283      	cmp	r3, r0
 800e9fe:	bf88      	it	hi
 800ea00:	6013      	strhi	r3, [r2, #0]
 800ea02:	4a06      	ldr	r2, [pc, #24]	; (800ea1c <xTaskPriorityDisinherit+0x84>)
 800ea04:	2014      	movs	r0, #20
 800ea06:	fb00 2003 	mla	r0, r0, r3, r2
 800ea0a:	f7fe fc13 	bl	800d234 <vListInsertEnd>
					xReturn = pdTRUE;
 800ea0e:	2001      	movs	r0, #1
		return xReturn;
 800ea10:	e7c5      	b.n	800e99e <xTaskPriorityDisinherit+0x6>
 800ea12:	bf00      	nop
 800ea14:	2000e8e8 	.word	0x2000e8e8
 800ea18:	2000ed64 	.word	0x2000ed64
 800ea1c:	2000e8f4 	.word	0x2000e8f4

0800ea20 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800ea20:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800ea22:	4604      	mov	r4, r0
 800ea24:	2800      	cmp	r0, #0
 800ea26:	d044      	beq.n	800eab2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800ea28:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ea2a:	b942      	cbnz	r2, 800ea3e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800ea2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea30:	f383 8811 	msr	BASEPRI, r3
 800ea34:	f3bf 8f6f 	isb	sy
 800ea38:	f3bf 8f4f 	dsb	sy
 800ea3c:	e7fe      	b.n	800ea3c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ea3e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800ea40:	4299      	cmp	r1, r3
 800ea42:	bf38      	it	cc
 800ea44:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ea46:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ea48:	428b      	cmp	r3, r1
 800ea4a:	d032      	beq.n	800eab2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ea4c:	2a01      	cmp	r2, #1
 800ea4e:	d130      	bne.n	800eab2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800ea50:	4a19      	ldr	r2, [pc, #100]	; (800eab8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ea52:	6812      	ldr	r2, [r2, #0]
 800ea54:	4282      	cmp	r2, r0
 800ea56:	d108      	bne.n	800ea6a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ea58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea5c:	f383 8811 	msr	BASEPRI, r3
 800ea60:	f3bf 8f6f 	isb	sy
 800ea64:	f3bf 8f4f 	dsb	sy
 800ea68:	e7fe      	b.n	800ea68 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ea6a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ea6c:	4d13      	ldr	r5, [pc, #76]	; (800eabc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800ea6e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ea70:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ea72:	f04f 0214 	mov.w	r2, #20
 800ea76:	fb02 5303 	mla	r3, r2, r3, r5
 800ea7a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ea7c:	bfa4      	itt	ge
 800ea7e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800ea82:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ea84:	429a      	cmp	r2, r3
 800ea86:	d114      	bne.n	800eab2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ea88:	1d01      	adds	r1, r0, #4
 800ea8a:	4608      	mov	r0, r1
 800ea8c:	9101      	str	r1, [sp, #4]
 800ea8e:	f7fe fbf4 	bl	800d27a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ea92:	4a0b      	ldr	r2, [pc, #44]	; (800eac0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800ea94:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ea96:	6810      	ldr	r0, [r2, #0]
 800ea98:	9901      	ldr	r1, [sp, #4]
 800ea9a:	4283      	cmp	r3, r0
 800ea9c:	f04f 0014 	mov.w	r0, #20
 800eaa0:	fb00 5003 	mla	r0, r0, r3, r5
 800eaa4:	bf88      	it	hi
 800eaa6:	6013      	strhi	r3, [r2, #0]
	}
 800eaa8:	b003      	add	sp, #12
 800eaaa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800eaae:	f7fe bbc1 	b.w	800d234 <vListInsertEnd>
	}
 800eab2:	b003      	add	sp, #12
 800eab4:	bd30      	pop	{r4, r5, pc}
 800eab6:	bf00      	nop
 800eab8:	2000e8e8 	.word	0x2000e8e8
 800eabc:	2000e8f4 	.word	0x2000e8f4
 800eac0:	2000ed64 	.word	0x2000ed64

0800eac4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800eac4:	4b04      	ldr	r3, [pc, #16]	; (800ead8 <pvTaskIncrementMutexHeldCount+0x14>)
 800eac6:	681a      	ldr	r2, [r3, #0]
 800eac8:	b11a      	cbz	r2, 800ead2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800eaca:	6819      	ldr	r1, [r3, #0]
 800eacc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800eace:	3201      	adds	r2, #1
 800ead0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ead2:	6818      	ldr	r0, [r3, #0]
	}
 800ead4:	4770      	bx	lr
 800ead6:	bf00      	nop
 800ead8:	2000e8e8 	.word	0x2000e8e8

0800eadc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800eadc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800eade:	4c11      	ldr	r4, [pc, #68]	; (800eb24 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800eae0:	f7fe fc48 	bl	800d374 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800eae4:	6825      	ldr	r5, [r4, #0]
 800eae6:	b9bd      	cbnz	r5, 800eb18 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800eae8:	4f0f      	ldr	r7, [pc, #60]	; (800eb28 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800eaea:	4e10      	ldr	r6, [pc, #64]	; (800eb2c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800eaec:	4638      	mov	r0, r7
 800eaee:	f7fe fb93 	bl	800d218 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800eaf2:	4630      	mov	r0, r6
 800eaf4:	f7fe fb90 	bl	800d218 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800eaf8:	4b0d      	ldr	r3, [pc, #52]	; (800eb30 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800eafa:	4a0e      	ldr	r2, [pc, #56]	; (800eb34 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800eafc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800eafe:	4b0e      	ldr	r3, [pc, #56]	; (800eb38 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800eb00:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800eb02:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800eb04:	200a      	movs	r0, #10
 800eb06:	4b0d      	ldr	r3, [pc, #52]	; (800eb3c <prvCheckForValidListAndQueue+0x60>)
 800eb08:	9500      	str	r5, [sp, #0]
 800eb0a:	f7fe fe44 	bl	800d796 <xQueueGenericCreateStatic>
 800eb0e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800eb10:	b110      	cbz	r0, 800eb18 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800eb12:	490b      	ldr	r1, [pc, #44]	; (800eb40 <prvCheckForValidListAndQueue+0x64>)
 800eb14:	f7ff fa0e 	bl	800df34 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800eb18:	b003      	add	sp, #12
 800eb1a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800eb1e:	f7fe bc49 	b.w	800d3b4 <vPortExitCritical>
 800eb22:	bf00      	nop
 800eb24:	2000ef08 	.word	0x2000ef08
 800eb28:	2000ee8c 	.word	0x2000ee8c
 800eb2c:	2000eea0 	.word	0x2000eea0
 800eb30:	2000ede4 	.word	0x2000ede4
 800eb34:	2000edec 	.word	0x2000edec
 800eb38:	2000ede8 	.word	0x2000ede8
 800eb3c:	2000eeb8 	.word	0x2000eeb8
 800eb40:	0802999a 	.word	0x0802999a

0800eb44 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800eb44:	4291      	cmp	r1, r2
{
 800eb46:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800eb48:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eb4a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800eb4c:	d80a      	bhi.n	800eb64 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eb4e:	1ad2      	subs	r2, r2, r3
 800eb50:	6983      	ldr	r3, [r0, #24]
 800eb52:	429a      	cmp	r2, r3
 800eb54:	d20d      	bcs.n	800eb72 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800eb56:	4b08      	ldr	r3, [pc, #32]	; (800eb78 <prvInsertTimerInActiveList+0x34>)
 800eb58:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eb5a:	6818      	ldr	r0, [r3, #0]
 800eb5c:	f7fe fb76 	bl	800d24c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800eb60:	2000      	movs	r0, #0
}
 800eb62:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800eb64:	429a      	cmp	r2, r3
 800eb66:	d201      	bcs.n	800eb6c <prvInsertTimerInActiveList+0x28>
 800eb68:	4299      	cmp	r1, r3
 800eb6a:	d202      	bcs.n	800eb72 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eb6c:	4b03      	ldr	r3, [pc, #12]	; (800eb7c <prvInsertTimerInActiveList+0x38>)
 800eb6e:	1d01      	adds	r1, r0, #4
 800eb70:	e7f3      	b.n	800eb5a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800eb72:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800eb74:	e7f5      	b.n	800eb62 <prvInsertTimerInActiveList+0x1e>
 800eb76:	bf00      	nop
 800eb78:	2000ede8 	.word	0x2000ede8
 800eb7c:	2000ede4 	.word	0x2000ede4

0800eb80 <xTimerCreateTimerTask>:
{
 800eb80:	b510      	push	{r4, lr}
 800eb82:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800eb84:	f7ff ffaa 	bl	800eadc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800eb88:	4b12      	ldr	r3, [pc, #72]	; (800ebd4 <xTimerCreateTimerTask+0x54>)
 800eb8a:	681b      	ldr	r3, [r3, #0]
 800eb8c:	b1b3      	cbz	r3, 800ebbc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800eb8e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eb90:	aa07      	add	r2, sp, #28
 800eb92:	a906      	add	r1, sp, #24
 800eb94:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800eb96:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800eb9a:	f7fe fa37 	bl	800d00c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800eb9e:	9b05      	ldr	r3, [sp, #20]
 800eba0:	9302      	str	r3, [sp, #8]
 800eba2:	9b06      	ldr	r3, [sp, #24]
 800eba4:	9301      	str	r3, [sp, #4]
 800eba6:	2302      	movs	r3, #2
 800eba8:	9300      	str	r3, [sp, #0]
 800ebaa:	9a07      	ldr	r2, [sp, #28]
 800ebac:	490a      	ldr	r1, [pc, #40]	; (800ebd8 <xTimerCreateTimerTask+0x58>)
 800ebae:	480b      	ldr	r0, [pc, #44]	; (800ebdc <xTimerCreateTimerTask+0x5c>)
 800ebb0:	4623      	mov	r3, r4
 800ebb2:	f7ff fb86 	bl	800e2c2 <xTaskCreateStatic>
 800ebb6:	4b0a      	ldr	r3, [pc, #40]	; (800ebe0 <xTimerCreateTimerTask+0x60>)
 800ebb8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ebba:	b940      	cbnz	r0, 800ebce <xTimerCreateTimerTask+0x4e>
 800ebbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebc0:	f383 8811 	msr	BASEPRI, r3
 800ebc4:	f3bf 8f6f 	isb	sy
 800ebc8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ebcc:	e7fe      	b.n	800ebcc <xTimerCreateTimerTask+0x4c>
}
 800ebce:	2001      	movs	r0, #1
 800ebd0:	b008      	add	sp, #32
 800ebd2:	bd10      	pop	{r4, pc}
 800ebd4:	2000ef08 	.word	0x2000ef08
 800ebd8:	0802999f 	.word	0x0802999f
 800ebdc:	0800ece9 	.word	0x0800ece9
 800ebe0:	2000ef0c 	.word	0x2000ef0c

0800ebe4 <xTimerGenericCommand>:
{
 800ebe4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ebe6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800ebe8:	4604      	mov	r4, r0
{
 800ebea:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800ebec:	b940      	cbnz	r0, 800ec00 <xTimerGenericCommand+0x1c>
 800ebee:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ebf2:	f383 8811 	msr	BASEPRI, r3
 800ebf6:	f3bf 8f6f 	isb	sy
 800ebfa:	f3bf 8f4f 	dsb	sy
 800ebfe:	e7fe      	b.n	800ebfe <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800ec00:	4d0d      	ldr	r5, [pc, #52]	; (800ec38 <xTimerGenericCommand+0x54>)
 800ec02:	6828      	ldr	r0, [r5, #0]
 800ec04:	b180      	cbz	r0, 800ec28 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ec06:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800ec08:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800ec0c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800ec0e:	dc0d      	bgt.n	800ec2c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ec10:	f7ff fe70 	bl	800e8f4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ec14:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800ec16:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800ec18:	bf08      	it	eq
 800ec1a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800ec1c:	6828      	ldr	r0, [r5, #0]
 800ec1e:	bf18      	it	ne
 800ec20:	461a      	movne	r2, r3
 800ec22:	4669      	mov	r1, sp
 800ec24:	f7fe fe6c 	bl	800d900 <xQueueGenericSend>
}
 800ec28:	b004      	add	sp, #16
 800ec2a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800ec2c:	2300      	movs	r3, #0
 800ec2e:	4669      	mov	r1, sp
 800ec30:	f7fe ff19 	bl	800da66 <xQueueGenericSendFromISR>
 800ec34:	e7f8      	b.n	800ec28 <xTimerGenericCommand+0x44>
 800ec36:	bf00      	nop
 800ec38:	2000ef08 	.word	0x2000ef08

0800ec3c <prvSampleTimeNow>:
{
 800ec3c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800ec40:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ece4 <prvSampleTimeNow+0xa8>
{
 800ec44:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800ec46:	f7ff fba9 	bl	800e39c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800ec4a:	f8d8 3000 	ldr.w	r3, [r8]
 800ec4e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ec50:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ec52:	d940      	bls.n	800ecd6 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ec54:	4f21      	ldr	r7, [pc, #132]	; (800ecdc <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ec56:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ec5a:	683b      	ldr	r3, [r7, #0]
 800ec5c:	681a      	ldr	r2, [r3, #0]
 800ec5e:	b95a      	cbnz	r2, 800ec78 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ec60:	4a1f      	ldr	r2, [pc, #124]	; (800ece0 <prvSampleTimeNow+0xa4>)
 800ec62:	6811      	ldr	r1, [r2, #0]
 800ec64:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ec66:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ec68:	2301      	movs	r3, #1
}
 800ec6a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800ec6c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ec6e:	f8c8 5000 	str.w	r5, [r8]
}
 800ec72:	b004      	add	sp, #16
 800ec74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ec78:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ec7a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ec7c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ec80:	1d21      	adds	r1, r4, #4
 800ec82:	4608      	mov	r0, r1
 800ec84:	9103      	str	r1, [sp, #12]
 800ec86:	f7fe faf8 	bl	800d27a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ec8a:	6a23      	ldr	r3, [r4, #32]
 800ec8c:	4620      	mov	r0, r4
 800ec8e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ec90:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ec94:	9903      	ldr	r1, [sp, #12]
 800ec96:	f013 0f04 	tst.w	r3, #4
 800ec9a:	d0de      	beq.n	800ec5a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ec9c:	69a3      	ldr	r3, [r4, #24]
 800ec9e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800eca0:	459a      	cmp	sl, r3
 800eca2:	d205      	bcs.n	800ecb0 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800eca4:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800eca6:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800eca8:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ecaa:	f7fe facf 	bl	800d24c <vListInsert>
 800ecae:	e7d4      	b.n	800ec5a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ecb0:	2300      	movs	r3, #0
 800ecb2:	f8cd 9000 	str.w	r9, [sp]
 800ecb6:	4652      	mov	r2, sl
 800ecb8:	4619      	mov	r1, r3
 800ecba:	4620      	mov	r0, r4
 800ecbc:	f7ff ff92 	bl	800ebe4 <xTimerGenericCommand>
				configASSERT( xResult );
 800ecc0:	2800      	cmp	r0, #0
 800ecc2:	d1ca      	bne.n	800ec5a <prvSampleTimeNow+0x1e>
 800ecc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ecc8:	f383 8811 	msr	BASEPRI, r3
 800eccc:	f3bf 8f6f 	isb	sy
 800ecd0:	f3bf 8f4f 	dsb	sy
 800ecd4:	e7fe      	b.n	800ecd4 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800ecd6:	2300      	movs	r3, #0
 800ecd8:	e7c7      	b.n	800ec6a <prvSampleTimeNow+0x2e>
 800ecda:	bf00      	nop
 800ecdc:	2000ede4 	.word	0x2000ede4
 800ece0:	2000ede8 	.word	0x2000ede8
 800ece4:	2000eeb4 	.word	0x2000eeb4

0800ece8 <prvTimerTask>:
{
 800ece8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ecec:	4d6e      	ldr	r5, [pc, #440]	; (800eea8 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ecee:	4e6f      	ldr	r6, [pc, #444]	; (800eeac <prvTimerTask+0x1c4>)
{
 800ecf0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ecf2:	682b      	ldr	r3, [r5, #0]
 800ecf4:	f8d3 8000 	ldr.w	r8, [r3]
 800ecf8:	f1b8 0f00 	cmp.w	r8, #0
 800ecfc:	d035      	beq.n	800ed6a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ecfe:	68db      	ldr	r3, [r3, #12]
 800ed00:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ed04:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800ed06:	f7ff fb41 	bl	800e38c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ed0a:	a804      	add	r0, sp, #16
 800ed0c:	f7ff ff96 	bl	800ec3c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800ed10:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ed12:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800ed14:	2b00      	cmp	r3, #0
 800ed16:	d169      	bne.n	800edec <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800ed18:	2c00      	cmp	r4, #0
 800ed1a:	d14c      	bne.n	800edb6 <prvTimerTask+0xce>
 800ed1c:	4540      	cmp	r0, r8
 800ed1e:	d350      	bcc.n	800edc2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800ed20:	f7ff fbd8 	bl	800e4d4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ed24:	682b      	ldr	r3, [r5, #0]
 800ed26:	68db      	ldr	r3, [r3, #12]
 800ed28:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ed2a:	1d38      	adds	r0, r7, #4
 800ed2c:	f7fe faa5 	bl	800d27a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ed30:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800ed34:	0758      	lsls	r0, r3, #29
 800ed36:	d51a      	bpl.n	800ed6e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800ed38:	69b9      	ldr	r1, [r7, #24]
 800ed3a:	4643      	mov	r3, r8
 800ed3c:	464a      	mov	r2, r9
 800ed3e:	4441      	add	r1, r8
 800ed40:	4638      	mov	r0, r7
 800ed42:	f7ff feff 	bl	800eb44 <prvInsertTimerInActiveList>
 800ed46:	b1b0      	cbz	r0, 800ed76 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ed48:	9400      	str	r4, [sp, #0]
 800ed4a:	4623      	mov	r3, r4
 800ed4c:	4642      	mov	r2, r8
 800ed4e:	4621      	mov	r1, r4
 800ed50:	4638      	mov	r0, r7
 800ed52:	f7ff ff47 	bl	800ebe4 <xTimerGenericCommand>
			configASSERT( xResult );
 800ed56:	b970      	cbnz	r0, 800ed76 <prvTimerTask+0x8e>
 800ed58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed5c:	f383 8811 	msr	BASEPRI, r3
 800ed60:	f3bf 8f6f 	isb	sy
 800ed64:	f3bf 8f4f 	dsb	sy
 800ed68:	e7fe      	b.n	800ed68 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ed6a:	2401      	movs	r4, #1
 800ed6c:	e7cb      	b.n	800ed06 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ed6e:	f023 0301 	bic.w	r3, r3, #1
 800ed72:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ed76:	6a3b      	ldr	r3, [r7, #32]
 800ed78:	4638      	mov	r0, r7
 800ed7a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800ed7c:	6830      	ldr	r0, [r6, #0]
 800ed7e:	2200      	movs	r2, #0
 800ed80:	a904      	add	r1, sp, #16
 800ed82:	f7fe ff26 	bl	800dbd2 <xQueueReceive>
 800ed86:	2800      	cmp	r0, #0
 800ed88:	d0b3      	beq.n	800ecf2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ed8a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800ed8c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800ed8e:	2b00      	cmp	r3, #0
 800ed90:	db2f      	blt.n	800edf2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800ed92:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800ed94:	6963      	ldr	r3, [r4, #20]
 800ed96:	2b00      	cmp	r3, #0
 800ed98:	d132      	bne.n	800ee00 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800ed9a:	a803      	add	r0, sp, #12
 800ed9c:	f7ff ff4e 	bl	800ec3c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800eda0:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800eda2:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800eda4:	2b09      	cmp	r3, #9
 800eda6:	d8e9      	bhi.n	800ed7c <prvTimerTask+0x94>
 800eda8:	e8df f003 	tbb	[pc, r3]
 800edac:	572e2e2e 	.word	0x572e2e2e
 800edb0:	2e2e765e 	.word	0x2e2e765e
 800edb4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800edb6:	4b3e      	ldr	r3, [pc, #248]	; (800eeb0 <prvTimerTask+0x1c8>)
 800edb8:	681b      	ldr	r3, [r3, #0]
 800edba:	681c      	ldr	r4, [r3, #0]
 800edbc:	fab4 f484 	clz	r4, r4
 800edc0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800edc2:	6830      	ldr	r0, [r6, #0]
 800edc4:	4622      	mov	r2, r4
 800edc6:	eba8 0109 	sub.w	r1, r8, r9
 800edca:	f7ff f8f0 	bl	800dfae <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800edce:	f7ff fb81 	bl	800e4d4 <xTaskResumeAll>
 800edd2:	2800      	cmp	r0, #0
 800edd4:	d1d2      	bne.n	800ed7c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800edd6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800edda:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800edde:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ede2:	f3bf 8f4f 	dsb	sy
 800ede6:	f3bf 8f6f 	isb	sy
 800edea:	e7c7      	b.n	800ed7c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800edec:	f7ff fb72 	bl	800e4d4 <xTaskResumeAll>
}
 800edf0:	e7c4      	b.n	800ed7c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800edf2:	9b05      	ldr	r3, [sp, #20]
 800edf4:	9907      	ldr	r1, [sp, #28]
 800edf6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800edf8:	9b04      	ldr	r3, [sp, #16]
 800edfa:	2b00      	cmp	r3, #0
 800edfc:	dbbe      	blt.n	800ed7c <prvTimerTask+0x94>
 800edfe:	e7c8      	b.n	800ed92 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ee00:	1d20      	adds	r0, r4, #4
 800ee02:	f7fe fa3a 	bl	800d27a <uxListRemove>
 800ee06:	e7c8      	b.n	800ed9a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ee08:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ee0c:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ee0e:	f043 0301 	orr.w	r3, r3, #1
 800ee12:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800ee16:	9b05      	ldr	r3, [sp, #20]
 800ee18:	4620      	mov	r0, r4
 800ee1a:	4419      	add	r1, r3
 800ee1c:	f7ff fe92 	bl	800eb44 <prvInsertTimerInActiveList>
 800ee20:	2800      	cmp	r0, #0
 800ee22:	d0ab      	beq.n	800ed7c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ee24:	6a23      	ldr	r3, [r4, #32]
 800ee26:	4620      	mov	r0, r4
 800ee28:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ee2a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ee2e:	0759      	lsls	r1, r3, #29
 800ee30:	d5a4      	bpl.n	800ed7c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800ee32:	69a2      	ldr	r2, [r4, #24]
 800ee34:	9905      	ldr	r1, [sp, #20]
 800ee36:	2300      	movs	r3, #0
 800ee38:	440a      	add	r2, r1
 800ee3a:	9300      	str	r3, [sp, #0]
 800ee3c:	4619      	mov	r1, r3
 800ee3e:	4620      	mov	r0, r4
 800ee40:	f7ff fed0 	bl	800ebe4 <xTimerGenericCommand>
							configASSERT( xResult );
 800ee44:	2800      	cmp	r0, #0
 800ee46:	d199      	bne.n	800ed7c <prvTimerTask+0x94>
 800ee48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee4c:	f383 8811 	msr	BASEPRI, r3
 800ee50:	f3bf 8f6f 	isb	sy
 800ee54:	f3bf 8f4f 	dsb	sy
 800ee58:	e7fe      	b.n	800ee58 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ee5a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800ee5e:	f023 0301 	bic.w	r3, r3, #1
 800ee62:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800ee66:	e789      	b.n	800ed7c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800ee68:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ee6c:	f043 0301 	orr.w	r3, r3, #1
 800ee70:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800ee74:	9905      	ldr	r1, [sp, #20]
 800ee76:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800ee78:	b941      	cbnz	r1, 800ee8c <prvTimerTask+0x1a4>
 800ee7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee7e:	f383 8811 	msr	BASEPRI, r3
 800ee82:	f3bf 8f6f 	isb	sy
 800ee86:	f3bf 8f4f 	dsb	sy
 800ee8a:	e7fe      	b.n	800ee8a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800ee8c:	4603      	mov	r3, r0
 800ee8e:	4401      	add	r1, r0
 800ee90:	4620      	mov	r0, r4
 800ee92:	f7ff fe57 	bl	800eb44 <prvInsertTimerInActiveList>
					break;
 800ee96:	e771      	b.n	800ed7c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800ee98:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ee9c:	079a      	lsls	r2, r3, #30
 800ee9e:	d4de      	bmi.n	800ee5e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800eea0:	4620      	mov	r0, r4
 800eea2:	f7fe f97b 	bl	800d19c <vPortFree>
 800eea6:	e769      	b.n	800ed7c <prvTimerTask+0x94>
 800eea8:	2000ede4 	.word	0x2000ede4
 800eeac:	2000ef08 	.word	0x2000ef08
 800eeb0:	2000ede8 	.word	0x2000ede8

0800eeb4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800eeb4:	8880      	ldrh	r0, [r0, #4]
 800eeb6:	4770      	bx	lr

0800eeb8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800eeb8:	b570      	push	{r4, r5, r6, lr}
 800eeba:	6803      	ldr	r3, [r0, #0]
 800eebc:	4605      	mov	r5, r0
 800eebe:	460c      	mov	r4, r1
 800eec0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eec2:	2100      	movs	r1, #0
 800eec4:	4798      	blx	r3
 800eec6:	682b      	ldr	r3, [r5, #0]
 800eec8:	4606      	mov	r6, r0
 800eeca:	6a1b      	ldr	r3, [r3, #32]
 800eecc:	4628      	mov	r0, r5
 800eece:	4798      	blx	r3
 800eed0:	1ba4      	subs	r4, r4, r6
 800eed2:	b2a4      	uxth	r4, r4
 800eed4:	fbb4 f0f0 	udiv	r0, r4, r0
 800eed8:	bd70      	pop	{r4, r5, r6, pc}

0800eeda <_ZN8touchgfx17AbstractPartition5clearEv>:
 800eeda:	2300      	movs	r3, #0
 800eedc:	8083      	strh	r3, [r0, #4]
 800eede:	4770      	bx	lr

0800eee0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800eee0:	b510      	push	{r4, lr}
 800eee2:	6803      	ldr	r3, [r0, #0]
 800eee4:	8881      	ldrh	r1, [r0, #4]
 800eee6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eee8:	4604      	mov	r4, r0
 800eeea:	4798      	blx	r3
 800eeec:	88a3      	ldrh	r3, [r4, #4]
 800eeee:	3301      	adds	r3, #1
 800eef0:	80a3      	strh	r3, [r4, #4]
 800eef2:	bd10      	pop	{r4, pc}

0800eef4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800eef4:	6803      	ldr	r3, [r0, #0]
 800eef6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800eef8:	4718      	bx	r3

0800eefa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800eefa:	4770      	bx	lr

0800eefc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800eefc:	4a02      	ldr	r2, [pc, #8]	; (800ef08 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800eefe:	6002      	str	r2, [r0, #0]
 800ef00:	2200      	movs	r2, #0
 800ef02:	8082      	strh	r2, [r0, #4]
 800ef04:	4770      	bx	lr
 800ef06:	bf00      	nop
 800ef08:	080299b0 	.word	0x080299b0

0800ef0c <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800ef0c:	b510      	push	{r4, lr}
 800ef0e:	6803      	ldr	r3, [r0, #0]
 800ef10:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ef14:	4604      	mov	r4, r0
 800ef16:	4798      	blx	r3
 800ef18:	b110      	cbz	r0, 800ef20 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800ef1a:	4620      	mov	r0, r4
 800ef1c:	f7f2 fd57 	bl	80019ce <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800ef20:	bd10      	pop	{r4, pc}

0800ef22 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
 800ef22:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800ef26:	4770      	bx	lr

0800ef28 <_ZNK8touchgfx11BoxProgress8getColorEv>:
 800ef28:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800ef2c:	4770      	bx	lr

0800ef2e <_ZN8touchgfx11BoxProgressD1Ev>:
 800ef2e:	4770      	bx	lr

0800ef30 <_ZN8touchgfx11BoxProgressD0Ev>:
 800ef30:	b510      	push	{r4, lr}
 800ef32:	21e4      	movs	r1, #228	; 0xe4
 800ef34:	4604      	mov	r4, r0
 800ef36:	f017 f9f3 	bl	8026320 <_ZdlPvj>
 800ef3a:	4620      	mov	r0, r4
 800ef3c:	bd10      	pop	{r4, pc}

0800ef3e <_ZN8touchgfx11BoxProgress8setAlphaEh>:
 800ef3e:	b538      	push	{r3, r4, r5, lr}
 800ef40:	4604      	mov	r4, r0
 800ef42:	460d      	mov	r5, r1
 800ef44:	f000 f960 	bl	800f208 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800ef48:	f884 50de 	strb.w	r5, [r4, #222]	; 0xde
 800ef4c:	bd38      	pop	{r3, r4, r5, pc}

0800ef4e <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
 800ef4e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ef52:	4617      	mov	r7, r2
 800ef54:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 800ef58:	9500      	str	r5, [sp, #0]
 800ef5a:	2200      	movs	r2, #0
 800ef5c:	4604      	mov	r4, r0
 800ef5e:	460e      	mov	r6, r1
 800ef60:	30b8      	adds	r0, #184	; 0xb8
 800ef62:	4611      	mov	r1, r2
 800ef64:	4698      	mov	r8, r3
 800ef66:	f7f3 fd74 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800ef6a:	4643      	mov	r3, r8
 800ef6c:	463a      	mov	r2, r7
 800ef6e:	4631      	mov	r1, r6
 800ef70:	4620      	mov	r0, r4
 800ef72:	9508      	str	r5, [sp, #32]
 800ef74:	b002      	add	sp, #8
 800ef76:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800ef7a:	f000 ba14 	b.w	800f3a6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800ef7e <_ZN8touchgfx11BoxProgress8setValueEi>:
 800ef7e:	b530      	push	{r4, r5, lr}
 800ef80:	4604      	mov	r4, r0
 800ef82:	b085      	sub	sp, #20
 800ef84:	f000 f993 	bl	800f2ae <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800ef88:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800ef8c:	2b03      	cmp	r3, #3
 800ef8e:	d814      	bhi.n	800efba <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
 800ef90:	e8df f003 	tbb	[pc, r3]
 800ef94:	10100202 	.word	0x10100202
 800ef98:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800ef9c:	4620      	mov	r0, r4
 800ef9e:	f000 f9a8 	bl	800f2f2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800efa2:	b200      	sxth	r0, r0
 800efa4:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800efa8:	2b03      	cmp	r3, #3
 800efaa:	d82f      	bhi.n	800f00c <_ZN8touchgfx11BoxProgress8setValueEi+0x8e>
 800efac:	e8df f003 	tbb	[pc, r3]
 800efb0:	63413007 	.word	0x63413007
 800efb4:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 800efb8:	e7f0      	b.n	800ef9c <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
 800efba:	2000      	movs	r0, #0
 800efbc:	e7f2      	b.n	800efa4 <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
 800efbe:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800efc2:	9300      	str	r3, [sp, #0]
 800efc4:	2200      	movs	r2, #0
 800efc6:	4603      	mov	r3, r0
 800efc8:	4611      	mov	r1, r2
 800efca:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800efce:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	; 0xc0
 800efd2:	f7f3 fd3e 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800efd6:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800efda:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800efde:	f8ad 200e 	strh.w	r2, [sp, #14]
 800efe2:	4629      	mov	r1, r5
 800efe4:	429d      	cmp	r5, r3
 800efe6:	eba5 0503 	sub.w	r5, r5, r3
 800efea:	bfa8      	it	ge
 800efec:	4619      	movge	r1, r3
 800efee:	2d00      	cmp	r5, #0
 800eff0:	f8ad 1008 	strh.w	r1, [sp, #8]
 800eff4:	bfb8      	it	lt
 800eff6:	426d      	neglt	r5, r5
 800eff8:	2100      	movs	r1, #0
 800effa:	f8ad 100a 	strh.w	r1, [sp, #10]
 800effe:	f8ad 500c 	strh.w	r5, [sp, #12]
 800f002:	a902      	add	r1, sp, #8
 800f004:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f008:	f006 ff30 	bl	8015e6c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
 800f00c:	b005      	add	sp, #20
 800f00e:	bd30      	pop	{r4, r5, pc}
 800f010:	8921      	ldrh	r1, [r4, #8]
 800f012:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800f016:	9300      	str	r3, [sp, #0]
 800f018:	1a09      	subs	r1, r1, r0
 800f01a:	4603      	mov	r3, r0
 800f01c:	2200      	movs	r2, #0
 800f01e:	b209      	sxth	r1, r1
 800f020:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f024:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	; 0xbc
 800f028:	f7f3 fd13 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f02c:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	; 0xbc
 800f030:	e7d3      	b.n	800efda <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
 800f032:	2200      	movs	r2, #0
 800f034:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f038:	9000      	str	r0, [sp, #0]
 800f03a:	4611      	mov	r1, r2
 800f03c:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f040:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	; 0xc2
 800f044:	f7f3 fd05 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f048:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	; 0xc2
 800f04c:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	; 0xc0
 800f050:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f054:	2100      	movs	r1, #0
 800f056:	429d      	cmp	r5, r3
 800f058:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f05c:	4629      	mov	r1, r5
 800f05e:	eba5 0503 	sub.w	r5, r5, r3
 800f062:	bfa8      	it	ge
 800f064:	4619      	movge	r1, r3
 800f066:	2d00      	cmp	r5, #0
 800f068:	bfb8      	it	lt
 800f06a:	426d      	neglt	r5, r5
 800f06c:	f8ad 100a 	strh.w	r1, [sp, #10]
 800f070:	f8ad 500e 	strh.w	r5, [sp, #14]
 800f074:	e7c5      	b.n	800f002 <_ZN8touchgfx11BoxProgress8setValueEi+0x84>
 800f076:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800f07a:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f07e:	9000      	str	r0, [sp, #0]
 800f080:	1a12      	subs	r2, r2, r0
 800f082:	b212      	sxth	r2, r2
 800f084:	2100      	movs	r1, #0
 800f086:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f08a:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	; 0xbe
 800f08e:	f7f3 fce0 	bl	8002a52 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f092:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	; 0xbe
 800f096:	e7d9      	b.n	800f04c <_ZN8touchgfx11BoxProgress8setValueEi+0xce>

0800f098 <_ZN8touchgfx11BoxProgressC1Ev>:
 800f098:	b510      	push	{r4, lr}
 800f09a:	4604      	mov	r4, r0
 800f09c:	f000 f85a 	bl	800f154 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
 800f0a0:	2201      	movs	r2, #1
 800f0a2:	f884 20dd 	strb.w	r2, [r4, #221]	; 0xdd
 800f0a6:	4b16      	ldr	r3, [pc, #88]	; (800f100 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
 800f0a8:	4a16      	ldr	r2, [pc, #88]	; (800f104 <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
 800f0aa:	6023      	str	r3, [r4, #0]
 800f0ac:	f8c4 20b8 	str.w	r2, [r4, #184]	; 0xb8
 800f0b0:	2300      	movs	r3, #0
 800f0b2:	22ff      	movs	r2, #255	; 0xff
 800f0b4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f0b8:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 800f0bc:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 800f0c0:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800f0c4:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800f0c8:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800f0cc:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800f0d0:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800f0d4:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800f0d8:	e9c4 3333 	strd	r3, r3, [r4, #204]	; 0xcc
 800f0dc:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800f0e0:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 800f0e4:	f8a4 30da 	strh.w	r3, [r4, #218]	; 0xda
 800f0e8:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
 800f0ec:	f884 20de 	strb.w	r2, [r4, #222]	; 0xde
 800f0f0:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 800f0f4:	f104 01b8 	add.w	r1, r4, #184	; 0xb8
 800f0f8:	f000 f9e2 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f0fc:	4620      	mov	r0, r4
 800f0fe:	bd10      	pop	{r4, pc}
 800f100:	080299e4 	.word	0x080299e4
 800f104:	0802a0e8 	.word	0x0802a0e8

0800f108 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
 800f108:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 800f10c:	4770      	bx	lr

0800f10e <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
 800f10e:	4770      	bx	lr

0800f110 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
 800f110:	b510      	push	{r4, lr}
 800f112:	21b8      	movs	r1, #184	; 0xb8
 800f114:	4604      	mov	r4, r0
 800f116:	f017 f903 	bl	8026320 <_ZdlPvj>
 800f11a:	4620      	mov	r0, r4
 800f11c:	bd10      	pop	{r4, pc}

0800f11e <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
 800f11e:	b570      	push	{r4, r5, r6, lr}
 800f120:	4604      	mov	r4, r0
 800f122:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 800f126:	3058      	adds	r0, #88	; 0x58
 800f128:	f006 fe4e 	bl	8015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f12c:	6823      	ldr	r3, [r4, #0]
 800f12e:	4620      	mov	r0, r4
 800f130:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800f134:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f138:	4798      	blx	r3
 800f13a:	462b      	mov	r3, r5
 800f13c:	4601      	mov	r1, r0
 800f13e:	4620      	mov	r0, r4
 800f140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f144:	4718      	bx	r3

0800f146 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
 800f146:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800f14a:	428b      	cmp	r3, r1
 800f14c:	d001      	beq.n	800f152 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
 800f14e:	f7ff bfe6 	b.w	800f11e <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
 800f152:	4770      	bx	lr

0800f154 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
 800f154:	b510      	push	{r4, lr}
 800f156:	4604      	mov	r4, r0
 800f158:	f000 f952 	bl	800f400 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800f15c:	4b03      	ldr	r3, [pc, #12]	; (800f16c <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
 800f15e:	6023      	str	r3, [r4, #0]
 800f160:	2300      	movs	r3, #0
 800f162:	f884 30b4 	strb.w	r3, [r4, #180]	; 0xb4
 800f166:	4620      	mov	r0, r4
 800f168:	bd10      	pop	{r4, pc}
 800f16a:	bf00      	nop
 800f16c:	08029ac8 	.word	0x08029ac8

0800f170 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f170:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f174:	4770      	bx	lr

0800f176 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f176:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f17a:	4770      	bx	lr

0800f17c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f17c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f180:	4770      	bx	lr

0800f182 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f182:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f186:	4770      	bx	lr

0800f188 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f188:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f18a:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f18e:	461e      	mov	r6, r3
 800f190:	6803      	ldr	r3, [r0, #0]
 800f192:	460f      	mov	r7, r1
 800f194:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f198:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f19c:	4604      	mov	r4, r0
 800f19e:	4615      	mov	r5, r2
 800f1a0:	4798      	blx	r3
 800f1a2:	b93e      	cbnz	r6, 800f1b4 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f1a4:	1bed      	subs	r5, r5, r7
 800f1a6:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f1aa:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f1ae:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f1b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f1b4:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f1b8:	e7f7      	b.n	800f1aa <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f1ba <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f1ba:	b510      	push	{r4, lr}
 800f1bc:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f1c0:	600c      	str	r4, [r1, #0]
 800f1c2:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f1c6:	6011      	str	r1, [r2, #0]
 800f1c8:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f1cc:	801a      	strh	r2, [r3, #0]
 800f1ce:	9b02      	ldr	r3, [sp, #8]
 800f1d0:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f1d4:	801a      	strh	r2, [r3, #0]
 800f1d6:	bd10      	pop	{r4, pc}

0800f1d8 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f1d8:	b510      	push	{r4, lr}
 800f1da:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f1de:	600c      	str	r4, [r1, #0]
 800f1e0:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f1e4:	6011      	str	r1, [r2, #0]
 800f1e6:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f1ea:	801a      	strh	r2, [r3, #0]
 800f1ec:	bd10      	pop	{r4, pc}

0800f1ee <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f1ee:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f1f2:	600b      	str	r3, [r1, #0]
 800f1f4:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f1f8:	6013      	str	r3, [r2, #0]
 800f1fa:	4770      	bx	lr

0800f1fc <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f1fc:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f200:	4770      	bx	lr

0800f202 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f202:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f206:	4770      	bx	lr

0800f208 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f208:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f20c:	4770      	bx	lr

0800f20e <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f20e:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f212:	4770      	bx	lr

0800f214 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f214:	4770      	bx	lr

0800f216 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f216:	b510      	push	{r4, lr}
 800f218:	21b4      	movs	r1, #180	; 0xb4
 800f21a:	4604      	mov	r4, r0
 800f21c:	f017 f880 	bl	8026320 <_ZdlPvj>
 800f220:	4620      	mov	r0, r4
 800f222:	bd10      	pop	{r4, pc}

0800f224 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f224:	b570      	push	{r4, r5, r6, lr}
 800f226:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f22a:	428d      	cmp	r5, r1
 800f22c:	bfb8      	it	lt
 800f22e:	460d      	movlt	r5, r1
 800f230:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f234:	428d      	cmp	r5, r1
 800f236:	4604      	mov	r4, r0
 800f238:	bfa8      	it	ge
 800f23a:	460d      	movge	r5, r1
 800f23c:	4616      	mov	r6, r2
 800f23e:	b99a      	cbnz	r2, 800f268 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f240:	6803      	ldr	r3, [r0, #0]
 800f242:	4629      	mov	r1, r5
 800f244:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f248:	4798      	blx	r3
 800f24a:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f24e:	b368      	cbz	r0, 800f2ac <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f250:	6803      	ldr	r3, [r0, #0]
 800f252:	68db      	ldr	r3, [r3, #12]
 800f254:	4798      	blx	r3
 800f256:	b348      	cbz	r0, 800f2ac <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f258:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f25c:	6803      	ldr	r3, [r0, #0]
 800f25e:	4621      	mov	r1, r4
 800f260:	689b      	ldr	r3, [r3, #8]
 800f262:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f266:	4718      	bx	r3
 800f268:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f26c:	2b00      	cmp	r3, #0
 800f26e:	dd08      	ble.n	800f282 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f270:	f005 fcc2 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800f274:	4621      	mov	r1, r4
 800f276:	3004      	adds	r0, #4
 800f278:	f005 fd0b 	bl	8014c92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f27c:	2300      	movs	r3, #0
 800f27e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f282:	6823      	ldr	r3, [r4, #0]
 800f284:	4620      	mov	r0, r4
 800f286:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f28a:	4798      	blx	r3
 800f28c:	2300      	movs	r3, #0
 800f28e:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f292:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f296:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f29a:	f005 fcad 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800f29e:	4621      	mov	r1, r4
 800f2a0:	3004      	adds	r0, #4
 800f2a2:	f005 fd9f 	bl	8014de4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f2a6:	2301      	movs	r3, #1
 800f2a8:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f2ac:	bd70      	pop	{r4, r5, r6, pc}

0800f2ae <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f2ae:	b510      	push	{r4, lr}
 800f2b0:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f2b4:	4299      	cmp	r1, r3
 800f2b6:	bfb8      	it	lt
 800f2b8:	4619      	movlt	r1, r3
 800f2ba:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f2be:	4299      	cmp	r1, r3
 800f2c0:	bfa8      	it	ge
 800f2c2:	4619      	movge	r1, r3
 800f2c4:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f2c8:	428b      	cmp	r3, r1
 800f2ca:	4604      	mov	r4, r0
 800f2cc:	d010      	beq.n	800f2f0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f2ce:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f2d2:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f2d6:	b158      	cbz	r0, 800f2f0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f2d8:	6803      	ldr	r3, [r0, #0]
 800f2da:	68db      	ldr	r3, [r3, #12]
 800f2dc:	4798      	blx	r3
 800f2de:	b138      	cbz	r0, 800f2f0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f2e0:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f2e4:	6803      	ldr	r3, [r0, #0]
 800f2e6:	4621      	mov	r1, r4
 800f2e8:	689b      	ldr	r3, [r3, #8]
 800f2ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f2ee:	4718      	bx	r3
 800f2f0:	bd10      	pop	{r4, pc}

0800f2f2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f2f2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f2f4:	4604      	mov	r4, r0
 800f2f6:	460d      	mov	r5, r1
 800f2f8:	b1a9      	cbz	r1, 800f326 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f2fa:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f2fe:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f302:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f306:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f30a:	ab01      	add	r3, sp, #4
 800f30c:	1a12      	subs	r2, r2, r0
 800f30e:	1b89      	subs	r1, r1, r6
 800f310:	1a38      	subs	r0, r7, r0
 800f312:	f006 ff27 	bl	8016164 <_ZN8touchgfx6muldivElllRl>
 800f316:	4629      	mov	r1, r5
 800f318:	ab01      	add	r3, sp, #4
 800f31a:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f31e:	4430      	add	r0, r6
 800f320:	f006 ff20 	bl	8016164 <_ZN8touchgfx6muldivElllRl>
 800f324:	b285      	uxth	r5, r0
 800f326:	4628      	mov	r0, r5
 800f328:	b003      	add	sp, #12
 800f32a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f32c <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f32c:	b570      	push	{r4, r5, r6, lr}
 800f32e:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f332:	4604      	mov	r4, r0
 800f334:	2b00      	cmp	r3, #0
 800f336:	d035      	beq.n	800f3a4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f338:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f33c:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f340:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f344:	3001      	adds	r0, #1
 800f346:	1ad2      	subs	r2, r2, r3
 800f348:	b212      	sxth	r2, r2
 800f34a:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f34e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f352:	2100      	movs	r1, #0
 800f354:	b280      	uxth	r0, r0
 800f356:	47a8      	blx	r5
 800f358:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f35c:	6823      	ldr	r3, [r4, #0]
 800f35e:	4401      	add	r1, r0
 800f360:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f364:	4620      	mov	r0, r4
 800f366:	4798      	blx	r3
 800f368:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f36c:	429a      	cmp	r2, r3
 800f36e:	db19      	blt.n	800f3a4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f370:	2500      	movs	r5, #0
 800f372:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f376:	f005 fc3f 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800f37a:	4621      	mov	r1, r4
 800f37c:	3004      	adds	r0, #4
 800f37e:	f005 fc88 	bl	8014c92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f382:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f386:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f38a:	b158      	cbz	r0, 800f3a4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f38c:	6803      	ldr	r3, [r0, #0]
 800f38e:	68db      	ldr	r3, [r3, #12]
 800f390:	4798      	blx	r3
 800f392:	b138      	cbz	r0, 800f3a4 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f394:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f398:	6803      	ldr	r3, [r0, #0]
 800f39a:	4621      	mov	r1, r4
 800f39c:	689b      	ldr	r3, [r3, #8]
 800f39e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f3a2:	4718      	bx	r3
 800f3a4:	bd70      	pop	{r4, r5, r6, pc}

0800f3a6 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f3a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f3aa:	4604      	mov	r4, r0
 800f3ac:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f3b0:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f3b4:	460e      	mov	r6, r1
 800f3b6:	4615      	mov	r5, r2
 800f3b8:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f3bc:	4619      	mov	r1, r3
 800f3be:	463a      	mov	r2, r7
 800f3c0:	3058      	adds	r0, #88	; 0x58
 800f3c2:	4698      	mov	r8, r3
 800f3c4:	f7f7 feb0 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f3c8:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f3cc:	4446      	add	r6, r8
 800f3ce:	42b3      	cmp	r3, r6
 800f3d0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f3d4:	bfb8      	it	lt
 800f3d6:	8126      	strhlt	r6, [r4, #8]
 800f3d8:	443d      	add	r5, r7
 800f3da:	42ab      	cmp	r3, r5
 800f3dc:	bfb8      	it	lt
 800f3de:	8165      	strhlt	r5, [r4, #10]
 800f3e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f3e4 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f3e4:	b510      	push	{r4, lr}
 800f3e6:	4604      	mov	r4, r0
 800f3e8:	302c      	adds	r0, #44	; 0x2c
 800f3ea:	f002 ff05 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f3ee:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f3f2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f3f6:	4620      	mov	r0, r4
 800f3f8:	f7f7 fe96 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f3fc:	bd10      	pop	{r4, pc}
	...

0800f400 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f400:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f402:	4604      	mov	r4, r0
 800f404:	4626      	mov	r6, r4
 800f406:	2500      	movs	r5, #0
 800f408:	f7f8 fd8e 	bl	8007f28 <_ZN8touchgfx8DrawableC1Ev>
 800f40c:	4b23      	ldr	r3, [pc, #140]	; (800f49c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f40e:	62a5      	str	r5, [r4, #40]	; 0x28
 800f410:	f846 3b2c 	str.w	r3, [r6], #44
 800f414:	2226      	movs	r2, #38	; 0x26
 800f416:	4629      	mov	r1, r5
 800f418:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f41c:	4630      	mov	r0, r6
 800f41e:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f422:	f017 f837 	bl	8026494 <memset>
 800f426:	4630      	mov	r0, r6
 800f428:	f7f8 fd7e 	bl	8007f28 <_ZN8touchgfx8DrawableC1Ev>
 800f42c:	a902      	add	r1, sp, #8
 800f42e:	4b1c      	ldr	r3, [pc, #112]	; (800f4a0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f430:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f432:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f436:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f43a:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f43e:	4630      	mov	r0, r6
 800f440:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f444:	f002 fed8 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f448:	4638      	mov	r0, r7
 800f44a:	f7f8 fd6d 	bl	8007f28 <_ZN8touchgfx8DrawableC1Ev>
 800f44e:	4b15      	ldr	r3, [pc, #84]	; (800f4a4 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f450:	65a3      	str	r3, [r4, #88]	; 0x58
 800f452:	2364      	movs	r3, #100	; 0x64
 800f454:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f458:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f45c:	4b12      	ldr	r3, [pc, #72]	; (800f4a8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f45e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f462:	4629      	mov	r1, r5
 800f464:	4630      	mov	r0, r6
 800f466:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f46a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f46e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f472:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f476:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f47a:	f7f2 fa31 	bl	80018e0 <_ZN8touchgfx8Drawable4setXEs>
 800f47e:	4629      	mov	r1, r5
 800f480:	4630      	mov	r0, r6
 800f482:	f7f2 fa2f 	bl	80018e4 <_ZN8touchgfx8Drawable4setYEs>
 800f486:	4631      	mov	r1, r6
 800f488:	4620      	mov	r0, r4
 800f48a:	f000 f819 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f48e:	4620      	mov	r0, r4
 800f490:	4639      	mov	r1, r7
 800f492:	f000 f815 	bl	800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f496:	4620      	mov	r0, r4
 800f498:	b003      	add	sp, #12
 800f49a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f49c:	08029ba4 	.word	0x08029ba4
 800f4a0:	0802a22c 	.word	0x0802a22c
 800f4a4:	08029c78 	.word	0x08029c78
 800f4a8:	080168c3 	.word	0x080168c3

0800f4ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f4ac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f4ae:	2000      	movs	r0, #0
 800f4b0:	b12b      	cbz	r3, 800f4be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f4b2:	b920      	cbnz	r0, 800f4be <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f4b4:	1a5a      	subs	r2, r3, r1
 800f4b6:	4250      	negs	r0, r2
 800f4b8:	4150      	adcs	r0, r2
 800f4ba:	699b      	ldr	r3, [r3, #24]
 800f4bc:	e7f8      	b.n	800f4b0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f4be:	4770      	bx	lr

0800f4c0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f4c0:	2300      	movs	r3, #0
 800f4c2:	6148      	str	r0, [r1, #20]
 800f4c4:	618b      	str	r3, [r1, #24]
 800f4c6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f4c8:	b913      	cbnz	r3, 800f4d0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f4ca:	6281      	str	r1, [r0, #40]	; 0x28
 800f4cc:	4770      	bx	lr
 800f4ce:	4613      	mov	r3, r2
 800f4d0:	699a      	ldr	r2, [r3, #24]
 800f4d2:	2a00      	cmp	r2, #0
 800f4d4:	d1fb      	bne.n	800f4ce <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f4d6:	6199      	str	r1, [r3, #24]
 800f4d8:	4770      	bx	lr

0800f4da <_ZN8touchgfx9Container9removeAllEv>:
 800f4da:	2200      	movs	r2, #0
 800f4dc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f4de:	b123      	cbz	r3, 800f4ea <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f4e0:	6999      	ldr	r1, [r3, #24]
 800f4e2:	6281      	str	r1, [r0, #40]	; 0x28
 800f4e4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f4e8:	e7f8      	b.n	800f4dc <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f4ea:	4770      	bx	lr

0800f4ec <_ZN8touchgfx9Container6unlinkEv>:
 800f4ec:	2300      	movs	r3, #0
 800f4ee:	6283      	str	r3, [r0, #40]	; 0x28
 800f4f0:	4770      	bx	lr

0800f4f2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f4f2:	2200      	movs	r2, #0
 800f4f4:	8002      	strh	r2, [r0, #0]
 800f4f6:	8042      	strh	r2, [r0, #2]
 800f4f8:	8082      	strh	r2, [r0, #4]
 800f4fa:	80c2      	strh	r2, [r0, #6]
 800f4fc:	4770      	bx	lr

0800f4fe <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f4fe:	b570      	push	{r4, r5, r6, lr}
 800f500:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f502:	460d      	mov	r5, r1
 800f504:	4616      	mov	r6, r2
 800f506:	b13c      	cbz	r4, 800f518 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f508:	6823      	ldr	r3, [r4, #0]
 800f50a:	4620      	mov	r0, r4
 800f50c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f50e:	4632      	mov	r2, r6
 800f510:	4629      	mov	r1, r5
 800f512:	4798      	blx	r3
 800f514:	69a4      	ldr	r4, [r4, #24]
 800f516:	e7f6      	b.n	800f506 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f518:	bd70      	pop	{r4, r5, r6, pc}

0800f51a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f51a:	b538      	push	{r3, r4, r5, lr}
 800f51c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f51e:	460d      	mov	r5, r1
 800f520:	b134      	cbz	r4, 800f530 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f522:	682b      	ldr	r3, [r5, #0]
 800f524:	4621      	mov	r1, r4
 800f526:	689b      	ldr	r3, [r3, #8]
 800f528:	4628      	mov	r0, r5
 800f52a:	4798      	blx	r3
 800f52c:	69a4      	ldr	r4, [r4, #24]
 800f52e:	e7f7      	b.n	800f520 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f530:	bd38      	pop	{r3, r4, r5, pc}

0800f532 <_ZN8touchgfx9ContainerD1Ev>:
 800f532:	4770      	bx	lr

0800f534 <_ZN8touchgfx9ContainerD0Ev>:
 800f534:	b510      	push	{r4, lr}
 800f536:	212c      	movs	r1, #44	; 0x2c
 800f538:	4604      	mov	r4, r0
 800f53a:	f016 fef1 	bl	8026320 <_ZdlPvj>
 800f53e:	4620      	mov	r0, r4
 800f540:	bd10      	pop	{r4, pc}

0800f542 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f542:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f544:	b19b      	cbz	r3, 800f56e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f546:	428b      	cmp	r3, r1
 800f548:	d109      	bne.n	800f55e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f54a:	699a      	ldr	r2, [r3, #24]
 800f54c:	2100      	movs	r1, #0
 800f54e:	6159      	str	r1, [r3, #20]
 800f550:	6282      	str	r2, [r0, #40]	; 0x28
 800f552:	b902      	cbnz	r2, 800f556 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f554:	4770      	bx	lr
 800f556:	6199      	str	r1, [r3, #24]
 800f558:	4770      	bx	lr
 800f55a:	4613      	mov	r3, r2
 800f55c:	b13a      	cbz	r2, 800f56e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f55e:	699a      	ldr	r2, [r3, #24]
 800f560:	428a      	cmp	r2, r1
 800f562:	d1fa      	bne.n	800f55a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f564:	698a      	ldr	r2, [r1, #24]
 800f566:	619a      	str	r2, [r3, #24]
 800f568:	2300      	movs	r3, #0
 800f56a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f56e:	4770      	bx	lr

0800f570 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f570:	b410      	push	{r4}
 800f572:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f574:	4604      	mov	r4, r0
 800f576:	b92b      	cbnz	r3, 800f584 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f578:	6803      	ldr	r3, [r0, #0]
 800f57a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f57e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f580:	4611      	mov	r1, r2
 800f582:	4718      	bx	r3
 800f584:	b941      	cbnz	r1, 800f598 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f586:	6193      	str	r3, [r2, #24]
 800f588:	6282      	str	r2, [r0, #40]	; 0x28
 800f58a:	6154      	str	r4, [r2, #20]
 800f58c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f590:	4770      	bx	lr
 800f592:	4603      	mov	r3, r0
 800f594:	2800      	cmp	r0, #0
 800f596:	d0f9      	beq.n	800f58c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f598:	4299      	cmp	r1, r3
 800f59a:	6998      	ldr	r0, [r3, #24]
 800f59c:	d1f9      	bne.n	800f592 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f59e:	6190      	str	r0, [r2, #24]
 800f5a0:	618a      	str	r2, [r1, #24]
 800f5a2:	e7f2      	b.n	800f58a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f5a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f5a8:	461f      	mov	r7, r3
 800f5aa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f5ae:	460d      	mov	r5, r1
 800f5b0:	4616      	mov	r6, r2
 800f5b2:	b103      	cbz	r3, 800f5b6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f5b4:	6038      	str	r0, [r7, #0]
 800f5b6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f5b8:	b314      	cbz	r4, 800f600 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f5ba:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f5be:	b1eb      	cbz	r3, 800f5fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5c0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f5c4:	428d      	cmp	r5, r1
 800f5c6:	db19      	blt.n	800f5fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5c8:	8923      	ldrh	r3, [r4, #8]
 800f5ca:	b289      	uxth	r1, r1
 800f5cc:	440b      	add	r3, r1
 800f5ce:	b21b      	sxth	r3, r3
 800f5d0:	429d      	cmp	r5, r3
 800f5d2:	da13      	bge.n	800f5fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5d4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f5d8:	4296      	cmp	r6, r2
 800f5da:	db0f      	blt.n	800f5fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5dc:	8963      	ldrh	r3, [r4, #10]
 800f5de:	b292      	uxth	r2, r2
 800f5e0:	4413      	add	r3, r2
 800f5e2:	b21b      	sxth	r3, r3
 800f5e4:	429e      	cmp	r6, r3
 800f5e6:	da09      	bge.n	800f5fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f5e8:	6823      	ldr	r3, [r4, #0]
 800f5ea:	1ab2      	subs	r2, r6, r2
 800f5ec:	1a69      	subs	r1, r5, r1
 800f5ee:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f5f2:	b212      	sxth	r2, r2
 800f5f4:	463b      	mov	r3, r7
 800f5f6:	b209      	sxth	r1, r1
 800f5f8:	4620      	mov	r0, r4
 800f5fa:	47c0      	blx	r8
 800f5fc:	69a4      	ldr	r4, [r4, #24]
 800f5fe:	e7db      	b.n	800f5b8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f600:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f604 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f608:	4c6e      	ldr	r4, [pc, #440]	; (800f7c4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f60a:	b0a1      	sub	sp, #132	; 0x84
 800f60c:	6824      	ldr	r4, [r4, #0]
 800f60e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f610:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f614:	9303      	str	r3, [sp, #12]
 800f616:	2400      	movs	r4, #0
 800f618:	802c      	strh	r4, [r5, #0]
 800f61a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f61c:	802c      	strh	r4, [r5, #0]
 800f61e:	601c      	str	r4, [r3, #0]
 800f620:	4606      	mov	r6, r0
 800f622:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f626:	f7ff ffbd 	bl	800f5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f62a:	f1b9 0f03 	cmp.w	r9, #3
 800f62e:	f340 80c2 	ble.w	800f7b6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f632:	4631      	mov	r1, r6
 800f634:	a80c      	add	r0, sp, #48	; 0x30
 800f636:	f006 fc63 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f63a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f63e:	9306      	str	r3, [sp, #24]
 800f640:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f644:	9307      	str	r3, [sp, #28]
 800f646:	9b03      	ldr	r3, [sp, #12]
 800f648:	f8d3 a000 	ldr.w	sl, [r3]
 800f64c:	f1ba 0f00 	cmp.w	sl, #0
 800f650:	f000 80b4 	beq.w	800f7bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f654:	4651      	mov	r1, sl
 800f656:	a810      	add	r0, sp, #64	; 0x40
 800f658:	f006 fc52 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f65c:	9b01      	ldr	r3, [sp, #4]
 800f65e:	9a06      	ldr	r2, [sp, #24]
 800f660:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f664:	189d      	adds	r5, r3, r2
 800f666:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f66a:	9a07      	ldr	r2, [sp, #28]
 800f66c:	2002      	movs	r0, #2
 800f66e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f672:	4419      	add	r1, r3
 800f674:	1a6d      	subs	r5, r5, r1
 800f676:	9b02      	ldr	r3, [sp, #8]
 800f678:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f67c:	4413      	add	r3, r2
 800f67e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f682:	fb92 f2f0 	sdiv	r2, r2, r0
 800f686:	440a      	add	r2, r1
 800f688:	1a9b      	subs	r3, r3, r2
 800f68a:	435b      	muls	r3, r3
 800f68c:	fb05 3505 	mla	r5, r5, r5, r3
 800f690:	4f4d      	ldr	r7, [pc, #308]	; (800f7c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f692:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f694:	ac10      	add	r4, sp, #64	; 0x40
 800f696:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f698:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f69a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f69c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f69e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f6a0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f6a4:	f1b9 0f0c 	cmp.w	r9, #12
 800f6a8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f6ac:	f04f 0303 	mov.w	r3, #3
 800f6b0:	bfc8      	it	gt
 800f6b2:	4698      	movgt	r8, r3
 800f6b4:	f8cd 9000 	str.w	r9, [sp]
 800f6b8:	f04f 0400 	mov.w	r4, #0
 800f6bc:	bfdc      	itt	le
 800f6be:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f6c2:	fb92 f8f3 	sdivle	r8, r2, r3
 800f6c6:	1c63      	adds	r3, r4, #1
 800f6c8:	aa10      	add	r2, sp, #64	; 0x40
 800f6ca:	f004 0401 	and.w	r4, r4, #1
 800f6ce:	9308      	str	r3, [sp, #32]
 800f6d0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f6d4:	9b00      	ldr	r3, [sp, #0]
 800f6d6:	fb93 f3f8 	sdiv	r3, r3, r8
 800f6da:	b29b      	uxth	r3, r3
 800f6dc:	3404      	adds	r4, #4
 800f6de:	f04f 0b00 	mov.w	fp, #0
 800f6e2:	9304      	str	r3, [sp, #16]
 800f6e4:	9a04      	ldr	r2, [sp, #16]
 800f6e6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f6ea:	fb13 f302 	smulbb	r3, r3, r2
 800f6ee:	9a01      	ldr	r2, [sp, #4]
 800f6f0:	b29b      	uxth	r3, r3
 800f6f2:	1899      	adds	r1, r3, r2
 800f6f4:	9305      	str	r3, [sp, #20]
 800f6f6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f6fa:	b209      	sxth	r1, r1
 800f6fc:	4299      	cmp	r1, r3
 800f6fe:	db4d      	blt.n	800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f700:	8932      	ldrh	r2, [r6, #8]
 800f702:	4413      	add	r3, r2
 800f704:	b21b      	sxth	r3, r3
 800f706:	4299      	cmp	r1, r3
 800f708:	da48      	bge.n	800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f70a:	9b04      	ldr	r3, [sp, #16]
 800f70c:	6827      	ldr	r7, [r4, #0]
 800f70e:	fb17 f703 	smulbb	r7, r7, r3
 800f712:	9b02      	ldr	r3, [sp, #8]
 800f714:	b2bf      	uxth	r7, r7
 800f716:	18fa      	adds	r2, r7, r3
 800f718:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f71c:	b212      	sxth	r2, r2
 800f71e:	429a      	cmp	r2, r3
 800f720:	db3c      	blt.n	800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f722:	8970      	ldrh	r0, [r6, #10]
 800f724:	4403      	add	r3, r0
 800f726:	b21b      	sxth	r3, r3
 800f728:	429a      	cmp	r2, r3
 800f72a:	da37      	bge.n	800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f72c:	2300      	movs	r3, #0
 800f72e:	930b      	str	r3, [sp, #44]	; 0x2c
 800f730:	4630      	mov	r0, r6
 800f732:	ab0b      	add	r3, sp, #44	; 0x2c
 800f734:	f7ff ff36 	bl	800f5a4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f738:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f73a:	b37a      	cbz	r2, 800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f73c:	4552      	cmp	r2, sl
 800f73e:	d02d      	beq.n	800f79c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f740:	4611      	mov	r1, r2
 800f742:	a80e      	add	r0, sp, #56	; 0x38
 800f744:	9209      	str	r2, [sp, #36]	; 0x24
 800f746:	f006 fbdb 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f74a:	9a06      	ldr	r2, [sp, #24]
 800f74c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800f750:	9b01      	ldr	r3, [sp, #4]
 800f752:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800f756:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800f75a:	4413      	add	r3, r2
 800f75c:	f04f 0e02 	mov.w	lr, #2
 800f760:	fb91 f1fe 	sdiv	r1, r1, lr
 800f764:	4401      	add	r1, r0
 800f766:	1a58      	subs	r0, r3, r1
 800f768:	9a07      	ldr	r2, [sp, #28]
 800f76a:	9b02      	ldr	r3, [sp, #8]
 800f76c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800f770:	fb9c fcfe 	sdiv	ip, ip, lr
 800f774:	4413      	add	r3, r2
 800f776:	448c      	add	ip, r1
 800f778:	eba3 030c 	sub.w	r3, r3, ip
 800f77c:	435b      	muls	r3, r3
 800f77e:	fb00 3300 	mla	r3, r0, r0, r3
 800f782:	42ab      	cmp	r3, r5
 800f784:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f786:	d208      	bcs.n	800f79a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800f788:	9803      	ldr	r0, [sp, #12]
 800f78a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800f78c:	6001      	str	r1, [r0, #0]
 800f78e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800f790:	9805      	ldr	r0, [sp, #20]
 800f792:	8008      	strh	r0, [r1, #0]
 800f794:	992b      	ldr	r1, [sp, #172]	; 0xac
 800f796:	461d      	mov	r5, r3
 800f798:	800f      	strh	r7, [r1, #0]
 800f79a:	4692      	mov	sl, r2
 800f79c:	f10b 0b01 	add.w	fp, fp, #1
 800f7a0:	f1bb 0f04 	cmp.w	fp, #4
 800f7a4:	f104 0408 	add.w	r4, r4, #8
 800f7a8:	d19c      	bne.n	800f6e4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800f7aa:	9b00      	ldr	r3, [sp, #0]
 800f7ac:	9c08      	ldr	r4, [sp, #32]
 800f7ae:	444b      	add	r3, r9
 800f7b0:	4544      	cmp	r4, r8
 800f7b2:	9300      	str	r3, [sp, #0]
 800f7b4:	d187      	bne.n	800f6c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800f7b6:	b021      	add	sp, #132	; 0x84
 800f7b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f7bc:	f04f 35ff 	mov.w	r5, #4294967295
 800f7c0:	e766      	b.n	800f690 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800f7c2:	bf00      	nop
 800f7c4:	2000ef1c 	.word	0x2000ef1c
 800f7c8:	080275c8 	.word	0x080275c8

0800f7cc <_ZN8touchgfx4RectaNERKS0_>:
 800f7cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800f7d0:	f9b1 7000 	ldrsh.w	r7, [r1]
 800f7d4:	888c      	ldrh	r4, [r1, #4]
 800f7d6:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f7da:	443c      	add	r4, r7
 800f7dc:	b2a4      	uxth	r4, r4
 800f7de:	fa0f f884 	sxth.w	r8, r4
 800f7e2:	45c1      	cmp	r9, r8
 800f7e4:	da2f      	bge.n	800f846 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7e6:	8882      	ldrh	r2, [r0, #4]
 800f7e8:	444a      	add	r2, r9
 800f7ea:	b292      	uxth	r2, r2
 800f7ec:	fa0f fe82 	sxth.w	lr, r2
 800f7f0:	4577      	cmp	r7, lr
 800f7f2:	da28      	bge.n	800f846 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f7f4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800f7f8:	88cb      	ldrh	r3, [r1, #6]
 800f7fa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f7fe:	442b      	add	r3, r5
 800f800:	b21b      	sxth	r3, r3
 800f802:	429e      	cmp	r6, r3
 800f804:	da1f      	bge.n	800f846 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f806:	88c3      	ldrh	r3, [r0, #6]
 800f808:	4433      	add	r3, r6
 800f80a:	b29b      	uxth	r3, r3
 800f80c:	fa0f fc83 	sxth.w	ip, r3
 800f810:	4565      	cmp	r5, ip
 800f812:	da18      	bge.n	800f846 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800f814:	454f      	cmp	r7, r9
 800f816:	bfb8      	it	lt
 800f818:	464f      	movlt	r7, r9
 800f81a:	42b5      	cmp	r5, r6
 800f81c:	bfb8      	it	lt
 800f81e:	4635      	movlt	r5, r6
 800f820:	45f0      	cmp	r8, lr
 800f822:	bfd8      	it	le
 800f824:	4622      	movle	r2, r4
 800f826:	1bd2      	subs	r2, r2, r7
 800f828:	8082      	strh	r2, [r0, #4]
 800f82a:	884a      	ldrh	r2, [r1, #2]
 800f82c:	88c9      	ldrh	r1, [r1, #6]
 800f82e:	8007      	strh	r7, [r0, #0]
 800f830:	440a      	add	r2, r1
 800f832:	b292      	uxth	r2, r2
 800f834:	b211      	sxth	r1, r2
 800f836:	458c      	cmp	ip, r1
 800f838:	bfa8      	it	ge
 800f83a:	4613      	movge	r3, r2
 800f83c:	1b5b      	subs	r3, r3, r5
 800f83e:	80c3      	strh	r3, [r0, #6]
 800f840:	8045      	strh	r5, [r0, #2]
 800f842:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f846:	2300      	movs	r3, #0
 800f848:	8003      	strh	r3, [r0, #0]
 800f84a:	8043      	strh	r3, [r0, #2]
 800f84c:	8083      	strh	r3, [r0, #4]
 800f84e:	80c3      	strh	r3, [r0, #6]
 800f850:	e7f7      	b.n	800f842 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800f852 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800f852:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800f856:	2b00      	cmp	r3, #0
 800f858:	dd06      	ble.n	800f868 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800f85a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800f85e:	2800      	cmp	r0, #0
 800f860:	bfcc      	ite	gt
 800f862:	2000      	movgt	r0, #0
 800f864:	2001      	movle	r0, #1
 800f866:	4770      	bx	lr
 800f868:	2001      	movs	r0, #1
 800f86a:	4770      	bx	lr

0800f86c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800f86c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f870:	2300      	movs	r3, #0
 800f872:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800f874:	8003      	strh	r3, [r0, #0]
 800f876:	4604      	mov	r4, r0
 800f878:	8043      	strh	r3, [r0, #2]
 800f87a:	8083      	strh	r3, [r0, #4]
 800f87c:	80c3      	strh	r3, [r0, #6]
 800f87e:	2d00      	cmp	r5, #0
 800f880:	d040      	beq.n	800f904 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800f882:	1d28      	adds	r0, r5, #4
 800f884:	f7ff ffe5 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f888:	b988      	cbnz	r0, 800f8ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f88a:	4620      	mov	r0, r4
 800f88c:	f7ff ffe1 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f890:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800f894:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800f898:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800f89c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800f8a0:	b138      	cbz	r0, 800f8b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800f8a2:	8022      	strh	r2, [r4, #0]
 800f8a4:	8063      	strh	r3, [r4, #2]
 800f8a6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800f8aa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800f8ae:	69ad      	ldr	r5, [r5, #24]
 800f8b0:	e7e5      	b.n	800f87e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800f8b2:	f9b4 0000 	ldrsh.w	r0, [r4]
 800f8b6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800f8ba:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800f8be:	4290      	cmp	r0, r2
 800f8c0:	4607      	mov	r7, r0
 800f8c2:	bfa8      	it	ge
 800f8c4:	4617      	movge	r7, r2
 800f8c6:	4472      	add	r2, lr
 800f8c8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800f8cc:	8027      	strh	r7, [r4, #0]
 800f8ce:	4299      	cmp	r1, r3
 800f8d0:	460e      	mov	r6, r1
 800f8d2:	4440      	add	r0, r8
 800f8d4:	bfa8      	it	ge
 800f8d6:	461e      	movge	r6, r3
 800f8d8:	4471      	add	r1, lr
 800f8da:	4463      	add	r3, ip
 800f8dc:	b200      	sxth	r0, r0
 800f8de:	b212      	sxth	r2, r2
 800f8e0:	b209      	sxth	r1, r1
 800f8e2:	b21b      	sxth	r3, r3
 800f8e4:	4290      	cmp	r0, r2
 800f8e6:	bfac      	ite	ge
 800f8e8:	ebc7 0200 	rsbge	r2, r7, r0
 800f8ec:	ebc7 0202 	rsblt	r2, r7, r2
 800f8f0:	4299      	cmp	r1, r3
 800f8f2:	bfac      	ite	ge
 800f8f4:	ebc6 0301 	rsbge	r3, r6, r1
 800f8f8:	ebc6 0303 	rsblt	r3, r6, r3
 800f8fc:	8066      	strh	r6, [r4, #2]
 800f8fe:	80a2      	strh	r2, [r4, #4]
 800f900:	80e3      	strh	r3, [r4, #6]
 800f902:	e7d4      	b.n	800f8ae <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800f904:	4620      	mov	r0, r4
 800f906:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f90a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800f90a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f90e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f912:	b383      	cbz	r3, 800f976 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f914:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f916:	b374      	cbz	r4, 800f976 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800f918:	f9b1 5000 	ldrsh.w	r5, [r1]
 800f91c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800f920:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800f924:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800f928:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f92c:	b303      	cbz	r3, 800f970 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f92e:	4668      	mov	r0, sp
 800f930:	1d21      	adds	r1, r4, #4
 800f932:	f8ad 5000 	strh.w	r5, [sp]
 800f936:	f8ad 6002 	strh.w	r6, [sp, #2]
 800f93a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f93e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800f942:	f7ff ff43 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 800f946:	4668      	mov	r0, sp
 800f948:	f7ff ff83 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f94c:	b980      	cbnz	r0, 800f970 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800f94e:	f8bd 3000 	ldrh.w	r3, [sp]
 800f952:	88a2      	ldrh	r2, [r4, #4]
 800f954:	1a9b      	subs	r3, r3, r2
 800f956:	f8ad 3000 	strh.w	r3, [sp]
 800f95a:	88e2      	ldrh	r2, [r4, #6]
 800f95c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f960:	1a9b      	subs	r3, r3, r2
 800f962:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f966:	6823      	ldr	r3, [r4, #0]
 800f968:	4669      	mov	r1, sp
 800f96a:	689b      	ldr	r3, [r3, #8]
 800f96c:	4620      	mov	r0, r4
 800f96e:	4798      	blx	r3
 800f970:	69a4      	ldr	r4, [r4, #24]
 800f972:	2c00      	cmp	r4, #0
 800f974:	d1d8      	bne.n	800f928 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800f976:	b002      	add	sp, #8
 800f978:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f97c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800f97c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800f97e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800f982:	460d      	mov	r5, r1
 800f984:	4616      	mov	r6, r2
 800f986:	b323      	cbz	r3, 800f9d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f988:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f98a:	b314      	cbz	r4, 800f9d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800f98c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f990:	b1eb      	cbz	r3, 800f9ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f992:	6828      	ldr	r0, [r5, #0]
 800f994:	6869      	ldr	r1, [r5, #4]
 800f996:	466b      	mov	r3, sp
 800f998:	c303      	stmia	r3!, {r0, r1}
 800f99a:	4668      	mov	r0, sp
 800f99c:	1d21      	adds	r1, r4, #4
 800f99e:	f7ff ff15 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 800f9a2:	4668      	mov	r0, sp
 800f9a4:	f7ff ff55 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 800f9a8:	b988      	cbnz	r0, 800f9ce <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800f9aa:	f8bd 3000 	ldrh.w	r3, [sp]
 800f9ae:	88a2      	ldrh	r2, [r4, #4]
 800f9b0:	1a9b      	subs	r3, r3, r2
 800f9b2:	f8ad 3000 	strh.w	r3, [sp]
 800f9b6:	88e2      	ldrh	r2, [r4, #6]
 800f9b8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800f9bc:	1a9b      	subs	r3, r3, r2
 800f9be:	f8ad 3002 	strh.w	r3, [sp, #2]
 800f9c2:	6823      	ldr	r3, [r4, #0]
 800f9c4:	4632      	mov	r2, r6
 800f9c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800f9c8:	4669      	mov	r1, sp
 800f9ca:	4620      	mov	r0, r4
 800f9cc:	4798      	blx	r3
 800f9ce:	69a4      	ldr	r4, [r4, #24]
 800f9d0:	e7db      	b.n	800f98a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800f9d2:	b002      	add	sp, #8
 800f9d4:	bd70      	pop	{r4, r5, r6, pc}

0800f9d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800f9d6:	b513      	push	{r0, r1, r4, lr}
 800f9d8:	6803      	ldr	r3, [r0, #0]
 800f9da:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800f9de:	2300      	movs	r3, #0
 800f9e0:	e9cd 3300 	strd	r3, r3, [sp]
 800f9e4:	466b      	mov	r3, sp
 800f9e6:	47a0      	blx	r4
 800f9e8:	b002      	add	sp, #8
 800f9ea:	bd10      	pop	{r4, pc}

0800f9ec <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800f9ec:	2301      	movs	r3, #1
 800f9ee:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f9f2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800f9f6:	4770      	bx	lr

0800f9f8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800f9f8:	2301      	movs	r3, #1
 800f9fa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800f9fe:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fa02:	4770      	bx	lr

0800fa04 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fa04:	6843      	ldr	r3, [r0, #4]
 800fa06:	2201      	movs	r2, #1
 800fa08:	725a      	strb	r2, [r3, #9]
 800fa0a:	6840      	ldr	r0, [r0, #4]
 800fa0c:	6803      	ldr	r3, [r0, #0]
 800fa0e:	691b      	ldr	r3, [r3, #16]
 800fa10:	4718      	bx	r3

0800fa12 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fa12:	6840      	ldr	r0, [r0, #4]
 800fa14:	6803      	ldr	r3, [r0, #0]
 800fa16:	689b      	ldr	r3, [r3, #8]
 800fa18:	4718      	bx	r3

0800fa1a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fa1a:	b530      	push	{r4, r5, lr}
 800fa1c:	b08b      	sub	sp, #44	; 0x2c
 800fa1e:	6804      	ldr	r4, [r0, #0]
 800fa20:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fa24:	9509      	str	r5, [sp, #36]	; 0x24
 800fa26:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fa2a:	9508      	str	r5, [sp, #32]
 800fa2c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fa30:	9507      	str	r5, [sp, #28]
 800fa32:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fa36:	9506      	str	r5, [sp, #24]
 800fa38:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fa3c:	9505      	str	r5, [sp, #20]
 800fa3e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fa42:	9504      	str	r5, [sp, #16]
 800fa44:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fa48:	9503      	str	r5, [sp, #12]
 800fa4a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fa4e:	9502      	str	r5, [sp, #8]
 800fa50:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fa54:	e9cd 3500 	strd	r3, r5, [sp]
 800fa58:	4613      	mov	r3, r2
 800fa5a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fa5c:	2200      	movs	r2, #0
 800fa5e:	47a0      	blx	r4
 800fa60:	b00b      	add	sp, #44	; 0x2c
 800fa62:	bd30      	pop	{r4, r5, pc}

0800fa64 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fa64:	4b04      	ldr	r3, [pc, #16]	; (800fa78 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fa66:	781b      	ldrb	r3, [r3, #0]
 800fa68:	b123      	cbz	r3, 800fa74 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fa6a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fa6e:	f080 0001 	eor.w	r0, r0, #1
 800fa72:	4770      	bx	lr
 800fa74:	2001      	movs	r0, #1
 800fa76:	4770      	bx	lr
 800fa78:	2000ef1a 	.word	0x2000ef1a

0800fa7c <_ZN8touchgfx3HAL8endFrameEv>:
 800fa7c:	b510      	push	{r4, lr}
 800fa7e:	4604      	mov	r4, r0
 800fa80:	6840      	ldr	r0, [r0, #4]
 800fa82:	6803      	ldr	r3, [r0, #0]
 800fa84:	689b      	ldr	r3, [r3, #8]
 800fa86:	4798      	blx	r3
 800fa88:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fa8c:	b113      	cbz	r3, 800fa94 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fa8e:	2301      	movs	r3, #1
 800fa90:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fa94:	bd10      	pop	{r4, pc}

0800fa96 <_ZN8touchgfx3HAL10initializeEv>:
 800fa96:	b510      	push	{r4, lr}
 800fa98:	4604      	mov	r4, r0
 800fa9a:	f7f1 fb83 	bl	80011a4 <_ZN8touchgfx10OSWrappers10initializeEv>
 800fa9e:	f7f1 f93b 	bl	8000d18 <_ZN8touchgfx4GPIO4initEv>
 800faa2:	6860      	ldr	r0, [r4, #4]
 800faa4:	6803      	ldr	r3, [r0, #0]
 800faa6:	68db      	ldr	r3, [r3, #12]
 800faa8:	4798      	blx	r3
 800faaa:	68e0      	ldr	r0, [r4, #12]
 800faac:	6803      	ldr	r3, [r0, #0]
 800faae:	689b      	ldr	r3, [r3, #8]
 800fab0:	4798      	blx	r3
 800fab2:	6823      	ldr	r3, [r4, #0]
 800fab4:	4620      	mov	r0, r4
 800fab6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fabc:	4718      	bx	r3
	...

0800fac0 <_ZN8touchgfx3HAL4tickEv>:
 800fac0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fac2:	6803      	ldr	r3, [r0, #0]
 800fac4:	4d5b      	ldr	r5, [pc, #364]	; (800fc34 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fac6:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800faca:	4604      	mov	r4, r0
 800facc:	4798      	blx	r3
 800face:	2800      	cmp	r0, #0
 800fad0:	f000 8095 	beq.w	800fbfe <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fad4:	2001      	movs	r0, #1
 800fad6:	f7f1 f88d 	bl	8000bf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fada:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fade:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fae2:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fae6:	2600      	movs	r6, #0
 800fae8:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800faec:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800faf0:	b133      	cbz	r3, 800fb00 <_ZN8touchgfx3HAL4tickEv+0x40>
 800faf2:	6823      	ldr	r3, [r4, #0]
 800faf4:	4620      	mov	r0, r4
 800faf6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fafa:	4798      	blx	r3
 800fafc:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fb00:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fb04:	6862      	ldr	r2, [r4, #4]
 800fb06:	f083 0301 	eor.w	r3, r3, #1
 800fb0a:	7253      	strb	r3, [r2, #9]
 800fb0c:	2601      	movs	r6, #1
 800fb0e:	702e      	strb	r6, [r5, #0]
 800fb10:	f005 f872 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800fb14:	6803      	ldr	r3, [r0, #0]
 800fb16:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fb18:	4798      	blx	r3
 800fb1a:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fb1e:	b90b      	cbnz	r3, 800fb24 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fb20:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fb24:	f005 f868 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800fb28:	6803      	ldr	r3, [r0, #0]
 800fb2a:	695b      	ldr	r3, [r3, #20]
 800fb2c:	4798      	blx	r3
 800fb2e:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fb30:	6803      	ldr	r3, [r0, #0]
 800fb32:	691b      	ldr	r3, [r3, #16]
 800fb34:	4798      	blx	r3
 800fb36:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fb3a:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fb3e:	3b01      	subs	r3, #1
 800fb40:	b2db      	uxtb	r3, r3
 800fb42:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fb46:	b10a      	cbz	r2, 800fb4c <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fb48:	2b00      	cmp	r3, #0
 800fb4a:	d1eb      	bne.n	800fb24 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fb4c:	4a3a      	ldr	r2, [pc, #232]	; (800fc38 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fb4e:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fb52:	7813      	ldrb	r3, [r2, #0]
 800fb54:	3301      	adds	r3, #1
 800fb56:	b25b      	sxtb	r3, r3
 800fb58:	4299      	cmp	r1, r3
 800fb5a:	7013      	strb	r3, [r2, #0]
 800fb5c:	dc10      	bgt.n	800fb80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fb5e:	68e0      	ldr	r0, [r4, #12]
 800fb60:	2300      	movs	r3, #0
 800fb62:	7013      	strb	r3, [r2, #0]
 800fb64:	6803      	ldr	r3, [r0, #0]
 800fb66:	aa03      	add	r2, sp, #12
 800fb68:	68db      	ldr	r3, [r3, #12]
 800fb6a:	a902      	add	r1, sp, #8
 800fb6c:	4798      	blx	r3
 800fb6e:	6823      	ldr	r3, [r4, #0]
 800fb70:	2800      	cmp	r0, #0
 800fb72:	d050      	beq.n	800fc16 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fb74:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fb78:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fb7c:	4620      	mov	r0, r4
 800fb7e:	4798      	blx	r3
 800fb80:	6960      	ldr	r0, [r4, #20]
 800fb82:	2300      	movs	r3, #0
 800fb84:	f88d 3007 	strb.w	r3, [sp, #7]
 800fb88:	b158      	cbz	r0, 800fba2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fb8a:	6803      	ldr	r3, [r0, #0]
 800fb8c:	f10d 0107 	add.w	r1, sp, #7
 800fb90:	68db      	ldr	r3, [r3, #12]
 800fb92:	4798      	blx	r3
 800fb94:	b128      	cbz	r0, 800fba2 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fb96:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fb98:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fb9c:	6803      	ldr	r3, [r0, #0]
 800fb9e:	68db      	ldr	r3, [r3, #12]
 800fba0:	4798      	blx	r3
 800fba2:	f104 001c 	add.w	r0, r4, #28
 800fba6:	f015 ffbd 	bl	8025b24 <_ZN8touchgfx8Gestures4tickEv>
 800fbaa:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fbae:	b30b      	cbz	r3, 800fbf4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fbb0:	6920      	ldr	r0, [r4, #16]
 800fbb2:	6803      	ldr	r3, [r0, #0]
 800fbb4:	691b      	ldr	r3, [r3, #16]
 800fbb6:	4798      	blx	r3
 800fbb8:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fbba:	4606      	mov	r6, r0
 800fbbc:	b903      	cbnz	r3, 800fbc0 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fbbe:	6760      	str	r0, [r4, #116]	; 0x74
 800fbc0:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fbc2:	4a1e      	ldr	r2, [pc, #120]	; (800fc3c <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fbc4:	1af3      	subs	r3, r6, r3
 800fbc6:	4293      	cmp	r3, r2
 800fbc8:	d914      	bls.n	800fbf4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fbca:	6920      	ldr	r0, [r4, #16]
 800fbcc:	6803      	ldr	r3, [r0, #0]
 800fbce:	699b      	ldr	r3, [r3, #24]
 800fbd0:	4798      	blx	r3
 800fbd2:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fbd4:	2264      	movs	r2, #100	; 0x64
 800fbd6:	1af3      	subs	r3, r6, r3
 800fbd8:	fbb3 f3f2 	udiv	r3, r3, r2
 800fbdc:	fbb0 f0f3 	udiv	r0, r0, r3
 800fbe0:	2800      	cmp	r0, #0
 800fbe2:	dc1d      	bgt.n	800fc20 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fbe4:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fbe8:	6920      	ldr	r0, [r4, #16]
 800fbea:	6803      	ldr	r3, [r0, #0]
 800fbec:	2100      	movs	r1, #0
 800fbee:	69db      	ldr	r3, [r3, #28]
 800fbf0:	4798      	blx	r3
 800fbf2:	6766      	str	r6, [r4, #116]	; 0x74
 800fbf4:	f005 f800 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 800fbf8:	6803      	ldr	r3, [r0, #0]
 800fbfa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fbfc:	4798      	blx	r3
 800fbfe:	6823      	ldr	r3, [r4, #0]
 800fc00:	4620      	mov	r0, r4
 800fc02:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800fc06:	4798      	blx	r3
 800fc08:	2001      	movs	r0, #1
 800fc0a:	f7f1 f821 	bl	8000c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800fc0e:	2300      	movs	r3, #0
 800fc10:	702b      	strb	r3, [r5, #0]
 800fc12:	b004      	add	sp, #16
 800fc14:	bd70      	pop	{r4, r5, r6, pc}
 800fc16:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800fc1a:	4620      	mov	r0, r4
 800fc1c:	4798      	blx	r3
 800fc1e:	e7af      	b.n	800fb80 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fc20:	2863      	cmp	r0, #99	; 0x63
 800fc22:	bfcb      	itete	gt
 800fc24:	2300      	movgt	r3, #0
 800fc26:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800fc2a:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fc2e:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fc32:	e7d9      	b.n	800fbe8 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fc34:	2000ef20 	.word	0x2000ef20
 800fc38:	2000ef21 	.word	0x2000ef21
 800fc3c:	05f5e100 	.word	0x05f5e100

0800fc40 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fc40:	b510      	push	{r4, lr}
 800fc42:	4604      	mov	r4, r0
 800fc44:	f7f1 fade 	bl	8001204 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fc48:	6863      	ldr	r3, [r4, #4]
 800fc4a:	2200      	movs	r2, #0
 800fc4c:	729a      	strb	r2, [r3, #10]
 800fc4e:	bd10      	pop	{r4, pc}

0800fc50 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800fc50:	65c1      	str	r1, [r0, #92]	; 0x5c
 800fc52:	301c      	adds	r0, #28
 800fc54:	f015 bf64 	b.w	8025b20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800fc58 <_ZN8touchgfx3HAL5touchEll>:
 800fc58:	b530      	push	{r4, r5, lr}
 800fc5a:	b087      	sub	sp, #28
 800fc5c:	4604      	mov	r4, r0
 800fc5e:	a804      	add	r0, sp, #16
 800fc60:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800fc64:	f004 fd94 	bl	8014790 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800fc68:	9b04      	ldr	r3, [sp, #16]
 800fc6a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800fc6e:	a906      	add	r1, sp, #24
 800fc70:	9b05      	ldr	r3, [sp, #20]
 800fc72:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800fc76:	a803      	add	r0, sp, #12
 800fc78:	f004 fddc 	bl	8014834 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800fc7c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800fc80:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fc84:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800fc88:	f104 001c 	add.w	r0, r4, #28
 800fc8c:	b189      	cbz	r1, 800fcb2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800fc8e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800fc92:	9300      	str	r3, [sp, #0]
 800fc94:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800fc98:	4613      	mov	r3, r2
 800fc9a:	462a      	mov	r2, r5
 800fc9c:	f015 ff50 	bl	8025b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800fca0:	b128      	cbz	r0, 800fcae <_ZN8touchgfx3HAL5touchEll+0x56>
 800fca2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800fca6:	6623      	str	r3, [r4, #96]	; 0x60
 800fca8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800fcac:	6663      	str	r3, [r4, #100]	; 0x64
 800fcae:	b007      	add	sp, #28
 800fcb0:	bd30      	pop	{r4, r5, pc}
 800fcb2:	f015 ff85 	bl	8025bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fcb6:	2301      	movs	r3, #1
 800fcb8:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fcbc:	e7f1      	b.n	800fca2 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800fcbe <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800fcbe:	b510      	push	{r4, lr}
 800fcc0:	2b00      	cmp	r3, #0
 800fcc2:	d046      	beq.n	800fd52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fcc4:	ea81 0002 	eor.w	r0, r1, r2
 800fcc8:	07c4      	lsls	r4, r0, #31
 800fcca:	d508      	bpl.n	800fcde <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800fccc:	440b      	add	r3, r1
 800fcce:	3a01      	subs	r2, #1
 800fcd0:	428b      	cmp	r3, r1
 800fcd2:	d93e      	bls.n	800fd52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fcd4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fcd8:	f801 0b01 	strb.w	r0, [r1], #1
 800fcdc:	e7f8      	b.n	800fcd0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800fcde:	07d0      	lsls	r0, r2, #31
 800fce0:	bf42      	ittt	mi
 800fce2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800fce6:	f801 0b01 	strbmi.w	r0, [r1], #1
 800fcea:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800fcee:	2b01      	cmp	r3, #1
 800fcf0:	d911      	bls.n	800fd16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fcf2:	ea81 0402 	eor.w	r4, r1, r2
 800fcf6:	07a4      	lsls	r4, r4, #30
 800fcf8:	4610      	mov	r0, r2
 800fcfa:	d022      	beq.n	800fd42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800fcfc:	f023 0401 	bic.w	r4, r3, #1
 800fd00:	440c      	add	r4, r1
 800fd02:	428c      	cmp	r4, r1
 800fd04:	4602      	mov	r2, r0
 800fd06:	d904      	bls.n	800fd12 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800fd08:	8812      	ldrh	r2, [r2, #0]
 800fd0a:	f821 2b02 	strh.w	r2, [r1], #2
 800fd0e:	3002      	adds	r0, #2
 800fd10:	e7f7      	b.n	800fd02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800fd12:	f003 0301 	and.w	r3, r3, #1
 800fd16:	f023 0003 	bic.w	r0, r3, #3
 800fd1a:	4408      	add	r0, r1
 800fd1c:	4288      	cmp	r0, r1
 800fd1e:	4614      	mov	r4, r2
 800fd20:	d904      	bls.n	800fd2c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800fd22:	6824      	ldr	r4, [r4, #0]
 800fd24:	f841 4b04 	str.w	r4, [r1], #4
 800fd28:	3204      	adds	r2, #4
 800fd2a:	e7f7      	b.n	800fd1c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800fd2c:	f003 0303 	and.w	r3, r3, #3
 800fd30:	440b      	add	r3, r1
 800fd32:	3a01      	subs	r2, #1
 800fd34:	428b      	cmp	r3, r1
 800fd36:	d90c      	bls.n	800fd52 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800fd38:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800fd3c:	f801 0b01 	strb.w	r0, [r1], #1
 800fd40:	e7f8      	b.n	800fd34 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fd42:	0790      	lsls	r0, r2, #30
 800fd44:	d0e7      	beq.n	800fd16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd46:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fd4a:	f821 0b02 	strh.w	r0, [r1], #2
 800fd4e:	3b02      	subs	r3, #2
 800fd50:	e7e1      	b.n	800fd16 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fd52:	2001      	movs	r0, #1
 800fd54:	bd10      	pop	{r4, pc}

0800fd56 <_ZN8touchgfx3HAL7noTouchEv>:
 800fd56:	b510      	push	{r4, lr}
 800fd58:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 800fd5c:	4604      	mov	r4, r0
 800fd5e:	b153      	cbz	r3, 800fd76 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800fd60:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 800fd64:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 800fd68:	2101      	movs	r1, #1
 800fd6a:	301c      	adds	r0, #28
 800fd6c:	f015 ff28 	bl	8025bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800fd70:	2300      	movs	r3, #0
 800fd72:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800fd76:	bd10      	pop	{r4, pc}

0800fd78 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800fd78:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd7c:	b085      	sub	sp, #20
 800fd7e:	ad04      	add	r5, sp, #16
 800fd80:	4604      	mov	r4, r0
 800fd82:	2000      	movs	r0, #0
 800fd84:	f845 0d04 	str.w	r0, [r5, #-4]!
 800fd88:	69a0      	ldr	r0, [r4, #24]
 800fd8a:	6806      	ldr	r6, [r0, #0]
 800fd8c:	9501      	str	r5, [sp, #4]
 800fd8e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800fd92:	9500      	str	r5, [sp, #0]
 800fd94:	6835      	ldr	r5, [r6, #0]
 800fd96:	4699      	mov	r9, r3
 800fd98:	460f      	mov	r7, r1
 800fd9a:	4690      	mov	r8, r2
 800fd9c:	47a8      	blx	r5
 800fd9e:	4d10      	ldr	r5, [pc, #64]	; (800fde0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800fda0:	4606      	mov	r6, r0
 800fda2:	f8a5 9000 	strh.w	r9, [r5]
 800fda6:	f7f4 fb33 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 800fdaa:	6803      	ldr	r3, [r0, #0]
 800fdac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdae:	4798      	blx	r3
 800fdb0:	b128      	cbz	r0, 800fdbe <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800fdb2:	2801      	cmp	r0, #1
 800fdb4:	d00b      	beq.n	800fdce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800fdb6:	4630      	mov	r0, r6
 800fdb8:	b005      	add	sp, #20
 800fdba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fdbe:	882b      	ldrh	r3, [r5, #0]
 800fdc0:	fb08 7203 	mla	r2, r8, r3, r7
 800fdc4:	9b03      	ldr	r3, [sp, #12]
 800fdc6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800fdca:	63e3      	str	r3, [r4, #60]	; 0x3c
 800fdcc:	e7f3      	b.n	800fdb6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fdce:	882a      	ldrh	r2, [r5, #0]
 800fdd0:	9b03      	ldr	r3, [sp, #12]
 800fdd2:	fb08 7202 	mla	r2, r8, r2, r7
 800fdd6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800fdda:	1a9a      	subs	r2, r3, r2
 800fddc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800fdde:	e7ea      	b.n	800fdb6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800fde0:	2000ef16 	.word	0x2000ef16

0800fde4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800fde4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800fde6:	b08b      	sub	sp, #44	; 0x2c
 800fde8:	4617      	mov	r7, r2
 800fdea:	4604      	mov	r4, r0
 800fdec:	460e      	mov	r6, r1
 800fdee:	461d      	mov	r5, r3
 800fdf0:	f7f4 fb0e 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 800fdf4:	6803      	ldr	r3, [r0, #0]
 800fdf6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdf8:	4798      	blx	r3
 800fdfa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fdfe:	9007      	str	r0, [sp, #28]
 800fe00:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fe04:	4b0d      	ldr	r3, [pc, #52]	; (800fe3c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800fe06:	6822      	ldr	r2, [r4, #0]
 800fe08:	881b      	ldrh	r3, [r3, #0]
 800fe0a:	9306      	str	r3, [sp, #24]
 800fe0c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800fe10:	9305      	str	r3, [sp, #20]
 800fe12:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800fe16:	9304      	str	r3, [sp, #16]
 800fe18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fe1c:	9303      	str	r3, [sp, #12]
 800fe1e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800fe22:	9302      	str	r3, [sp, #8]
 800fe24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800fe28:	e9cd 5300 	strd	r5, r3, [sp]
 800fe2c:	4631      	mov	r1, r6
 800fe2e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800fe30:	463b      	mov	r3, r7
 800fe32:	2200      	movs	r2, #0
 800fe34:	4620      	mov	r0, r4
 800fe36:	47a8      	blx	r5
 800fe38:	b00b      	add	sp, #44	; 0x2c
 800fe3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800fe3c:	2000ef16 	.word	0x2000ef16

0800fe40 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800fe40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fe44:	4698      	mov	r8, r3
 800fe46:	6803      	ldr	r3, [r0, #0]
 800fe48:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800fe4a:	4b15      	ldr	r3, [pc, #84]	; (800fea0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800fe4c:	b08b      	sub	sp, #44	; 0x2c
 800fe4e:	4617      	mov	r7, r2
 800fe50:	f8b3 9000 	ldrh.w	r9, [r3]
 800fe54:	460e      	mov	r6, r1
 800fe56:	4604      	mov	r4, r0
 800fe58:	f7f4 fada 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 800fe5c:	6803      	ldr	r3, [r0, #0]
 800fe5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fe60:	4798      	blx	r3
 800fe62:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800fe66:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800fe6a:	2302      	movs	r3, #2
 800fe6c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800fe70:	2301      	movs	r3, #1
 800fe72:	9305      	str	r3, [sp, #20]
 800fe74:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800fe78:	9304      	str	r3, [sp, #16]
 800fe7a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800fe7e:	9303      	str	r3, [sp, #12]
 800fe80:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800fe84:	9302      	str	r3, [sp, #8]
 800fe86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800fe8a:	2200      	movs	r2, #0
 800fe8c:	e9cd 8300 	strd	r8, r3, [sp]
 800fe90:	4631      	mov	r1, r6
 800fe92:	463b      	mov	r3, r7
 800fe94:	4620      	mov	r0, r4
 800fe96:	47a8      	blx	r5
 800fe98:	b00b      	add	sp, #44	; 0x2c
 800fe9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe9e:	bf00      	nop
 800fea0:	2000ef16 	.word	0x2000ef16

0800fea4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800fea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fea8:	4698      	mov	r8, r3
 800feaa:	6803      	ldr	r3, [r0, #0]
 800feac:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800feae:	4b11      	ldr	r3, [pc, #68]	; (800fef4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800feb0:	b087      	sub	sp, #28
 800feb2:	f8b3 9000 	ldrh.w	r9, [r3]
 800feb6:	460e      	mov	r6, r1
 800feb8:	4617      	mov	r7, r2
 800feba:	4604      	mov	r4, r0
 800febc:	f7f4 faa8 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 800fec0:	6803      	ldr	r3, [r0, #0]
 800fec2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fec4:	4798      	blx	r3
 800fec6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800feca:	f8cd 900c 	str.w	r9, [sp, #12]
 800fece:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800fed2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800fed6:	9302      	str	r3, [sp, #8]
 800fed8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800fedc:	9301      	str	r3, [sp, #4]
 800fede:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800fee2:	9300      	str	r3, [sp, #0]
 800fee4:	463a      	mov	r2, r7
 800fee6:	4643      	mov	r3, r8
 800fee8:	4631      	mov	r1, r6
 800feea:	4620      	mov	r0, r4
 800feec:	47a8      	blx	r5
 800feee:	b007      	add	sp, #28
 800fef0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fef4:	2000ef16 	.word	0x2000ef16

0800fef8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800fef8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fefc:	4604      	mov	r4, r0
 800fefe:	b08f      	sub	sp, #60	; 0x3c
 800ff00:	4610      	mov	r0, r2
 800ff02:	460d      	mov	r5, r1
 800ff04:	4691      	mov	r9, r2
 800ff06:	461e      	mov	r6, r3
 800ff08:	f008 f9f4 	bl	80182f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ff0c:	2800      	cmp	r0, #0
 800ff0e:	f000 809d 	beq.w	801004c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ff12:	6823      	ldr	r3, [r4, #0]
 800ff14:	f8df b198 	ldr.w	fp, [pc, #408]	; 80100b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ff18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ff1a:	f8df a198 	ldr.w	sl, [pc, #408]	; 80100b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ff1e:	4f61      	ldr	r7, [pc, #388]	; (80100a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ff20:	4620      	mov	r0, r4
 800ff22:	4798      	blx	r3
 800ff24:	6823      	ldr	r3, [r4, #0]
 800ff26:	4620      	mov	r0, r4
 800ff28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff2a:	4798      	blx	r3
 800ff2c:	f8bb 3000 	ldrh.w	r3, [fp]
 800ff30:	9301      	str	r3, [sp, #4]
 800ff32:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ff36:	f8ba 3000 	ldrh.w	r3, [sl]
 800ff3a:	9302      	str	r3, [sp, #8]
 800ff3c:	883b      	ldrh	r3, [r7, #0]
 800ff3e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ff42:	9303      	str	r3, [sp, #12]
 800ff44:	4b58      	ldr	r3, [pc, #352]	; (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ff46:	9305      	str	r3, [sp, #20]
 800ff48:	881a      	ldrh	r2, [r3, #0]
 800ff4a:	9204      	str	r2, [sp, #16]
 800ff4c:	4640      	mov	r0, r8
 800ff4e:	f008 fa65 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ff52:	8038      	strh	r0, [r7, #0]
 800ff54:	4640      	mov	r0, r8
 800ff56:	f008 fa95 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ff5a:	9b05      	ldr	r3, [sp, #20]
 800ff5c:	b280      	uxth	r0, r0
 800ff5e:	8018      	strh	r0, [r3, #0]
 800ff60:	4b52      	ldr	r3, [pc, #328]	; (80100ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ff62:	781b      	ldrb	r3, [r3, #0]
 800ff64:	2b00      	cmp	r3, #0
 800ff66:	d174      	bne.n	8010052 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ff68:	883b      	ldrh	r3, [r7, #0]
 800ff6a:	f8ab 3000 	strh.w	r3, [fp]
 800ff6e:	f8aa 0000 	strh.w	r0, [sl]
 800ff72:	4648      	mov	r0, r9
 800ff74:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800ff78:	f008 f9bc 	bl	80182f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ff7c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800ff80:	2200      	movs	r2, #0
 800ff82:	4611      	mov	r1, r2
 800ff84:	4628      	mov	r0, r5
 800ff86:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ff8a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ff8e:	f7f2 fd53 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 800ff92:	2301      	movs	r3, #1
 800ff94:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ff98:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ff9c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ffa0:	2b00      	cmp	r3, #0
 800ffa2:	dd5c      	ble.n	801005e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ffa4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ffa8:	2b00      	cmp	r3, #0
 800ffaa:	dd58      	ble.n	801005e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ffac:	462a      	mov	r2, r5
 800ffae:	ab0a      	add	r3, sp, #40	; 0x28
 800ffb0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800ffb4:	6851      	ldr	r1, [r2, #4]
 800ffb6:	c303      	stmia	r3!, {r0, r1}
 800ffb8:	4631      	mov	r1, r6
 800ffba:	a80a      	add	r0, sp, #40	; 0x28
 800ffbc:	f7ff fc06 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 800ffc0:	4b38      	ldr	r3, [pc, #224]	; (80100a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ffc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffc6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800ffca:	2100      	movs	r1, #0
 800ffcc:	aa0a      	add	r2, sp, #40	; 0x28
 800ffce:	4b36      	ldr	r3, [pc, #216]	; (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ffd0:	910c      	str	r1, [sp, #48]	; 0x30
 800ffd2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800ffd6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ffda:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800ffde:	ab08      	add	r3, sp, #32
 800ffe0:	e883 0003 	stmia.w	r3, {r0, r1}
 800ffe4:	4618      	mov	r0, r3
 800ffe6:	a90c      	add	r1, sp, #48	; 0x30
 800ffe8:	f7ff fbf0 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 800ffec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800ffee:	2b00      	cmp	r3, #0
 800fff0:	d13c      	bne.n	801006c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800fff2:	2000      	movs	r0, #0
 800fff4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 800fff8:	2600      	movs	r6, #0
 800fffa:	682a      	ldr	r2, [r5, #0]
 800fffc:	696b      	ldr	r3, [r5, #20]
 800fffe:	616e      	str	r6, [r5, #20]
 8010000:	9305      	str	r3, [sp, #20]
 8010002:	6892      	ldr	r2, [r2, #8]
 8010004:	a908      	add	r1, sp, #32
 8010006:	4628      	mov	r0, r5
 8010008:	4790      	blx	r2
 801000a:	9b05      	ldr	r3, [sp, #20]
 801000c:	616b      	str	r3, [r5, #20]
 801000e:	4652      	mov	r2, sl
 8010010:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 8010014:	4649      	mov	r1, r9
 8010016:	4628      	mov	r0, r5
 8010018:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 801001c:	f7f2 fd0c 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8010020:	4b23      	ldr	r3, [pc, #140]	; (80100b0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8010022:	9a01      	ldr	r2, [sp, #4]
 8010024:	801a      	strh	r2, [r3, #0]
 8010026:	4b23      	ldr	r3, [pc, #140]	; (80100b4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8010028:	9a02      	ldr	r2, [sp, #8]
 801002a:	801a      	strh	r2, [r3, #0]
 801002c:	4b1d      	ldr	r3, [pc, #116]	; (80100a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801002e:	9a03      	ldr	r2, [sp, #12]
 8010030:	801a      	strh	r2, [r3, #0]
 8010032:	4b1d      	ldr	r3, [pc, #116]	; (80100a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010034:	9a04      	ldr	r2, [sp, #16]
 8010036:	801a      	strh	r2, [r3, #0]
 8010038:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 801003c:	6823      	ldr	r3, [r4, #0]
 801003e:	4620      	mov	r0, r4
 8010040:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010042:	4798      	blx	r3
 8010044:	6823      	ldr	r3, [r4, #0]
 8010046:	4620      	mov	r0, r4
 8010048:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801004a:	4798      	blx	r3
 801004c:	b00f      	add	sp, #60	; 0x3c
 801004e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010052:	883b      	ldrh	r3, [r7, #0]
 8010054:	f8ab 0000 	strh.w	r0, [fp]
 8010058:	f8aa 3000 	strh.w	r3, [sl]
 801005c:	e789      	b.n	800ff72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801005e:	462a      	mov	r2, r5
 8010060:	ab0a      	add	r3, sp, #40	; 0x28
 8010062:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010066:	6851      	ldr	r1, [r2, #4]
 8010068:	c303      	stmia	r3!, {r0, r1}
 801006a:	e7a9      	b.n	800ffc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801006c:	a807      	add	r0, sp, #28
 801006e:	f008 fb45 	bl	80186fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010072:	4606      	mov	r6, r0
 8010074:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010076:	6803      	ldr	r3, [r0, #0]
 8010078:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801007a:	4798      	blx	r3
 801007c:	4286      	cmp	r6, r0
 801007e:	d1b8      	bne.n	800fff2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010080:	f7f4 f9c6 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 8010084:	6803      	ldr	r3, [r0, #0]
 8010086:	4606      	mov	r6, r0
 8010088:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801008a:	9305      	str	r3, [sp, #20]
 801008c:	a807      	add	r0, sp, #28
 801008e:	f008 fb35 	bl	80186fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010092:	9b05      	ldr	r3, [sp, #20]
 8010094:	4601      	mov	r1, r0
 8010096:	4630      	mov	r0, r6
 8010098:	4798      	blx	r3
 801009a:	f080 0001 	eor.w	r0, r0, #1
 801009e:	b2c0      	uxtb	r0, r0
 80100a0:	e7a8      	b.n	800fff4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 80100a2:	bf00      	nop
 80100a4:	2000ef10 	.word	0x2000ef10
 80100a8:	2000ef12 	.word	0x2000ef12
 80100ac:	2000ef14 	.word	0x2000ef14
 80100b0:	2000ef16 	.word	0x2000ef16
 80100b4:	2000ef18 	.word	0x2000ef18

080100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80100b8:	b510      	push	{r4, lr}
 80100ba:	4b07      	ldr	r3, [pc, #28]	; (80100d8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80100bc:	781b      	ldrb	r3, [r3, #0]
 80100be:	4604      	mov	r4, r0
 80100c0:	b13b      	cbz	r3, 80100d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80100c2:	6803      	ldr	r3, [r0, #0]
 80100c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80100c6:	4798      	blx	r3
 80100c8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80100ca:	4283      	cmp	r3, r0
 80100cc:	d101      	bne.n	80100d2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80100ce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80100d0:	bd10      	pop	{r4, pc}
 80100d2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80100d4:	e7fc      	b.n	80100d0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80100d6:	bf00      	nop
 80100d8:	2000ef1a 	.word	0x2000ef1a

080100dc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80100dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80100e0:	b08a      	sub	sp, #40	; 0x28
 80100e2:	461d      	mov	r5, r3
 80100e4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80100e8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80100ec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80100f0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80100f4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80100f8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80100fc:	2400      	movs	r4, #0
 80100fe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010102:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8010106:	f8ad 301c 	strh.w	r3, [sp, #28]
 801010a:	4690      	mov	r8, r2
 801010c:	4607      	mov	r7, r0
 801010e:	9404      	str	r4, [sp, #16]
 8010110:	f88d 4020 	strb.w	r4, [sp, #32]
 8010114:	f7ff ffd0 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010118:	fb06 8505 	mla	r5, r6, r5, r8
 801011c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010120:	6878      	ldr	r0, [r7, #4]
 8010122:	9505      	str	r5, [sp, #20]
 8010124:	f8ad 601e 	strh.w	r6, [sp, #30]
 8010128:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801012c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8010130:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8010134:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010138:	6803      	ldr	r3, [r0, #0]
 801013a:	a901      	add	r1, sp, #4
 801013c:	685b      	ldr	r3, [r3, #4]
 801013e:	4798      	blx	r3
 8010140:	b00a      	add	sp, #40	; 0x28
 8010142:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010146 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8010146:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801014a:	b08b      	sub	sp, #44	; 0x2c
 801014c:	2400      	movs	r4, #0
 801014e:	461d      	mov	r5, r3
 8010150:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010154:	4688      	mov	r8, r1
 8010156:	4691      	mov	r9, r2
 8010158:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801015c:	9404      	str	r4, [sp, #16]
 801015e:	4607      	mov	r7, r0
 8010160:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010164:	f7ff ffa8 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010168:	fb06 9505 	mla	r5, r6, r5, r9
 801016c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010170:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010174:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010178:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801017c:	6878      	ldr	r0, [r7, #4]
 801017e:	9505      	str	r5, [sp, #20]
 8010180:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010184:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010188:	f8ad 601e 	strh.w	r6, [sp, #30]
 801018c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010190:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010194:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010198:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801019c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80101a0:	6803      	ldr	r3, [r0, #0]
 80101a2:	a901      	add	r1, sp, #4
 80101a4:	685b      	ldr	r3, [r3, #4]
 80101a6:	4798      	blx	r3
 80101a8:	b00b      	add	sp, #44	; 0x2c
 80101aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080101b0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80101b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80101b4:	b08a      	sub	sp, #40	; 0x28
 80101b6:	4698      	mov	r8, r3
 80101b8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 80101bc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 80101c0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 80101c4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 80101c8:	2300      	movs	r3, #0
 80101ca:	2d0b      	cmp	r5, #11
 80101cc:	4606      	mov	r6, r0
 80101ce:	9304      	str	r3, [sp, #16]
 80101d0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80101d4:	d138      	bne.n	8010248 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80101d6:	2380      	movs	r3, #128	; 0x80
 80101d8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80101dc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80101e0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80101e4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80101e8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80101ec:	f88d 0020 	strb.w	r0, [sp, #32]
 80101f0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80101f4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80101f8:	4630      	mov	r0, r6
 80101fa:	9203      	str	r2, [sp, #12]
 80101fc:	f7ff ff5c 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010200:	2c0b      	cmp	r4, #11
 8010202:	bf98      	it	ls
 8010204:	4b1b      	ldrls	r3, [pc, #108]	; (8010274 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8010206:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801020a:	bf98      	it	ls
 801020c:	5d19      	ldrbls	r1, [r3, r4]
 801020e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8010212:	bf88      	it	hi
 8010214:	2100      	movhi	r1, #0
 8010216:	fb02 8307 	mla	r3, r2, r7, r8
 801021a:	10c9      	asrs	r1, r1, #3
 801021c:	fb01 0003 	mla	r0, r1, r3, r0
 8010220:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8010224:	9005      	str	r0, [sp, #20]
 8010226:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 801022a:	6870      	ldr	r0, [r6, #4]
 801022c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8010230:	2300      	movs	r3, #0
 8010232:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010236:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801023a:	6803      	ldr	r3, [r0, #0]
 801023c:	a901      	add	r1, sp, #4
 801023e:	685b      	ldr	r3, [r3, #4]
 8010240:	4798      	blx	r3
 8010242:	b00a      	add	sp, #40	; 0x28
 8010244:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010248:	2d02      	cmp	r5, #2
 801024a:	d109      	bne.n	8010260 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 801024c:	28ff      	cmp	r0, #255	; 0xff
 801024e:	d105      	bne.n	801025c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010250:	f1bc 0f00 	cmp.w	ip, #0
 8010254:	bf14      	ite	ne
 8010256:	2340      	movne	r3, #64	; 0x40
 8010258:	2320      	moveq	r3, #32
 801025a:	e7bd      	b.n	80101d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801025c:	2340      	movs	r3, #64	; 0x40
 801025e:	e7bb      	b.n	80101d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010260:	28ff      	cmp	r0, #255	; 0xff
 8010262:	d105      	bne.n	8010270 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010264:	f1bc 0f00 	cmp.w	ip, #0
 8010268:	bf14      	ite	ne
 801026a:	2304      	movne	r3, #4
 801026c:	2301      	moveq	r3, #1
 801026e:	e7b3      	b.n	80101d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010270:	2304      	movs	r3, #4
 8010272:	e7b1      	b.n	80101d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010274:	08029d00 	.word	0x08029d00

08010278 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010278:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801027c:	b08b      	sub	sp, #44	; 0x2c
 801027e:	461d      	mov	r5, r3
 8010280:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010284:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010288:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801028c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010290:	bf14      	ite	ne
 8010292:	2308      	movne	r3, #8
 8010294:	2302      	moveq	r3, #2
 8010296:	2400      	movs	r4, #0
 8010298:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801029c:	4688      	mov	r8, r1
 801029e:	4693      	mov	fp, r2
 80102a0:	9404      	str	r4, [sp, #16]
 80102a2:	4607      	mov	r7, r0
 80102a4:	f7ff ff08 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80102a8:	2e0b      	cmp	r6, #11
 80102aa:	bf98      	it	ls
 80102ac:	4b15      	ldrls	r3, [pc, #84]	; (8010304 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80102ae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80102b2:	bf98      	it	ls
 80102b4:	5d9c      	ldrbls	r4, [r3, r6]
 80102b6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80102ba:	f8ad 3018 	strh.w	r3, [sp, #24]
 80102be:	fb05 b50a 	mla	r5, r5, sl, fp
 80102c2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80102c6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80102ca:	10e4      	asrs	r4, r4, #3
 80102cc:	fb04 0405 	mla	r4, r4, r5, r0
 80102d0:	2300      	movs	r3, #0
 80102d2:	6878      	ldr	r0, [r7, #4]
 80102d4:	9405      	str	r4, [sp, #20]
 80102d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80102da:	f8ad a01e 	strh.w	sl, [sp, #30]
 80102de:	f8cd 8010 	str.w	r8, [sp, #16]
 80102e2:	f88d 9020 	strb.w	r9, [sp, #32]
 80102e6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 80102ea:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80102ee:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80102f2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80102f6:	6803      	ldr	r3, [r0, #0]
 80102f8:	a901      	add	r1, sp, #4
 80102fa:	685b      	ldr	r3, [r3, #4]
 80102fc:	4798      	blx	r3
 80102fe:	b00b      	add	sp, #44	; 0x2c
 8010300:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010304:	08029d00 	.word	0x08029d00

08010308 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8010308:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801030c:	461e      	mov	r6, r3
 801030e:	4b0a      	ldr	r3, [pc, #40]	; (8010338 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8010310:	460f      	mov	r7, r1
 8010312:	881d      	ldrh	r5, [r3, #0]
 8010314:	4690      	mov	r8, r2
 8010316:	f7f4 f87b 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 801031a:	6803      	ldr	r3, [r0, #0]
 801031c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801031e:	4798      	blx	r3
 8010320:	280b      	cmp	r0, #11
 8010322:	bf9a      	itte	ls
 8010324:	4b05      	ldrls	r3, [pc, #20]	; (801033c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8010326:	5c1c      	ldrbls	r4, [r3, r0]
 8010328:	2400      	movhi	r4, #0
 801032a:	fb08 7005 	mla	r0, r8, r5, r7
 801032e:	10e4      	asrs	r4, r4, #3
 8010330:	fb04 6000 	mla	r0, r4, r0, r6
 8010334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010338:	2000ef16 	.word	0x2000ef16
 801033c:	08029d00 	.word	0x08029d00

08010340 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8010340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010342:	b08b      	sub	sp, #44	; 0x2c
 8010344:	461f      	mov	r7, r3
 8010346:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801034a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801034e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010352:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010356:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801035a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801035e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010362:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010366:	2500      	movs	r5, #0
 8010368:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801036c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010370:	4604      	mov	r4, r0
 8010372:	4616      	mov	r6, r2
 8010374:	9504      	str	r5, [sp, #16]
 8010376:	f7ff fe9f 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801037a:	463a      	mov	r2, r7
 801037c:	4631      	mov	r1, r6
 801037e:	4603      	mov	r3, r0
 8010380:	4620      	mov	r0, r4
 8010382:	f7ff ffc1 	bl	8010308 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010386:	4b0e      	ldr	r3, [pc, #56]	; (80103c0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010388:	9005      	str	r0, [sp, #20]
 801038a:	881b      	ldrh	r3, [r3, #0]
 801038c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010390:	f7f4 f83e 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 8010394:	6803      	ldr	r3, [r0, #0]
 8010396:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010398:	4798      	blx	r3
 801039a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801039c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 80103a0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 80103a4:	9304      	str	r3, [sp, #16]
 80103a6:	6860      	ldr	r0, [r4, #4]
 80103a8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80103ac:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80103b0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 80103b4:	6803      	ldr	r3, [r0, #0]
 80103b6:	a901      	add	r1, sp, #4
 80103b8:	685b      	ldr	r3, [r3, #4]
 80103ba:	4798      	blx	r3
 80103bc:	b00b      	add	sp, #44	; 0x2c
 80103be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80103c0:	2000ef16 	.word	0x2000ef16

080103c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80103c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80103c6:	b08d      	sub	sp, #52	; 0x34
 80103c8:	466b      	mov	r3, sp
 80103ca:	e883 0006 	stmia.w	r3, {r1, r2}
 80103ce:	2300      	movs	r3, #0
 80103d0:	9306      	str	r3, [sp, #24]
 80103d2:	6803      	ldr	r3, [r0, #0]
 80103d4:	f8bd 6000 	ldrh.w	r6, [sp]
 80103d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80103da:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80103de:	2501      	movs	r5, #1
 80103e0:	9503      	str	r5, [sp, #12]
 80103e2:	4604      	mov	r4, r0
 80103e4:	4798      	blx	r3
 80103e6:	463a      	mov	r2, r7
 80103e8:	4631      	mov	r1, r6
 80103ea:	4603      	mov	r3, r0
 80103ec:	4620      	mov	r0, r4
 80103ee:	f7ff ff8b 	bl	8010308 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80103f2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80103f4:	9307      	str	r3, [sp, #28]
 80103f6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80103fa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80103fe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010402:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8010406:	4b0f      	ldr	r3, [pc, #60]	; (8010444 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8010408:	9004      	str	r0, [sp, #16]
 801040a:	881b      	ldrh	r3, [r3, #0]
 801040c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010410:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8010414:	f7f3 fffc 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 8010418:	6803      	ldr	r3, [r0, #0]
 801041a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801041c:	4798      	blx	r3
 801041e:	23ff      	movs	r3, #255	; 0xff
 8010420:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8010424:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010428:	6860      	ldr	r0, [r4, #4]
 801042a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801042e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8010432:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8010436:	6803      	ldr	r3, [r0, #0]
 8010438:	a903      	add	r1, sp, #12
 801043a:	685b      	ldr	r3, [r3, #4]
 801043c:	4798      	blx	r3
 801043e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010440:	b00d      	add	sp, #52	; 0x34
 8010442:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010444:	2000ef16 	.word	0x2000ef16

08010448 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8010448:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801044c:	b08c      	sub	sp, #48	; 0x30
 801044e:	461e      	mov	r6, r3
 8010450:	466d      	mov	r5, sp
 8010452:	2300      	movs	r3, #0
 8010454:	e885 0006 	stmia.w	r5, {r1, r2}
 8010458:	9306      	str	r3, [sp, #24]
 801045a:	6803      	ldr	r3, [r0, #0]
 801045c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010460:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010462:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010466:	2501      	movs	r5, #1
 8010468:	9503      	str	r5, [sp, #12]
 801046a:	4604      	mov	r4, r0
 801046c:	4798      	blx	r3
 801046e:	4642      	mov	r2, r8
 8010470:	4639      	mov	r1, r7
 8010472:	4603      	mov	r3, r0
 8010474:	4620      	mov	r0, r4
 8010476:	f7ff ff47 	bl	8010308 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801047a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801047e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010482:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010486:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801048a:	4b11      	ldr	r3, [pc, #68]	; (80104d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801048c:	9004      	str	r0, [sp, #16]
 801048e:	881b      	ldrh	r3, [r3, #0]
 8010490:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010494:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010496:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801049a:	9607      	str	r6, [sp, #28]
 801049c:	f7f3 ffb8 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 80104a0:	6803      	ldr	r3, [r0, #0]
 80104a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80104a4:	4798      	blx	r3
 80104a6:	23ff      	movs	r3, #255	; 0xff
 80104a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80104ac:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80104b0:	6860      	ldr	r0, [r4, #4]
 80104b2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80104b6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80104ba:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80104be:	6803      	ldr	r3, [r0, #0]
 80104c0:	a903      	add	r1, sp, #12
 80104c2:	685b      	ldr	r3, [r3, #4]
 80104c4:	4798      	blx	r3
 80104c6:	4630      	mov	r0, r6
 80104c8:	b00c      	add	sp, #48	; 0x30
 80104ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104ce:	bf00      	nop
 80104d0:	2000ef16 	.word	0x2000ef16

080104d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80104d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80104d6:	b085      	sub	sp, #20
 80104d8:	ac02      	add	r4, sp, #8
 80104da:	e884 0006 	stmia.w	r4, {r1, r2}
 80104de:	4605      	mov	r5, r0
 80104e0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80104e4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80104e8:	f7ff fde6 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80104ec:	463a      	mov	r2, r7
 80104ee:	4603      	mov	r3, r0
 80104f0:	4631      	mov	r1, r6
 80104f2:	4628      	mov	r0, r5
 80104f4:	f7ff ff08 	bl	8010308 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80104f8:	4a05      	ldr	r2, [pc, #20]	; (8010510 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80104fa:	682b      	ldr	r3, [r5, #0]
 80104fc:	8812      	ldrh	r2, [r2, #0]
 80104fe:	9200      	str	r2, [sp, #0]
 8010500:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8010502:	e894 0006 	ldmia.w	r4, {r1, r2}
 8010506:	4603      	mov	r3, r0
 8010508:	4628      	mov	r0, r5
 801050a:	47b0      	blx	r6
 801050c:	b005      	add	sp, #20
 801050e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010510:	2000ef16 	.word	0x2000ef16

08010514 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8010514:	b570      	push	{r4, r5, r6, lr}
 8010516:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 801051a:	4604      	mov	r4, r0
 801051c:	b19b      	cbz	r3, 8010546 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801051e:	2002      	movs	r0, #2
 8010520:	f7f0 fbc4 	bl	8000cac <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8010524:	2300      	movs	r3, #0
 8010526:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 801052a:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 801052e:	6823      	ldr	r3, [r4, #0]
 8010530:	4620      	mov	r0, r4
 8010532:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8010536:	f7ff fdbf 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801053a:	462b      	mov	r3, r5
 801053c:	4601      	mov	r1, r0
 801053e:	4620      	mov	r0, r4
 8010540:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010544:	4718      	bx	r3
 8010546:	bd70      	pop	{r4, r5, r6, pc}

08010548 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8010548:	b570      	push	{r4, r5, r6, lr}
 801054a:	4605      	mov	r5, r0
 801054c:	460c      	mov	r4, r1
 801054e:	2003      	movs	r0, #3
 8010550:	b149      	cbz	r1, 8010566 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8010552:	f7f0 fb4f 	bl	8000bf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010556:	6928      	ldr	r0, [r5, #16]
 8010558:	b168      	cbz	r0, 8010576 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801055a:	6803      	ldr	r3, [r0, #0]
 801055c:	695b      	ldr	r3, [r3, #20]
 801055e:	2101      	movs	r1, #1
 8010560:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010564:	4718      	bx	r3
 8010566:	f7f0 fb73 	bl	8000c50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801056a:	6928      	ldr	r0, [r5, #16]
 801056c:	b118      	cbz	r0, 8010576 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801056e:	6803      	ldr	r3, [r0, #0]
 8010570:	4621      	mov	r1, r4
 8010572:	695b      	ldr	r3, [r3, #20]
 8010574:	e7f4      	b.n	8010560 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8010576:	bd70      	pop	{r4, r5, r6, pc}

08010578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010578:	b538      	push	{r3, r4, r5, lr}
 801057a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801057e:	428b      	cmp	r3, r1
 8010580:	4604      	mov	r4, r0
 8010582:	460d      	mov	r5, r1
 8010584:	d006      	beq.n	8010594 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010586:	6803      	ldr	r3, [r0, #0]
 8010588:	b929      	cbnz	r1, 8010596 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801058a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801058e:	4798      	blx	r3
 8010590:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010594:	bd38      	pop	{r3, r4, r5, pc}
 8010596:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801059a:	e7f8      	b.n	801058e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801059c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801059c:	b510      	push	{r4, lr}
 801059e:	4b0d      	ldr	r3, [pc, #52]	; (80105d4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 80105a0:	781b      	ldrb	r3, [r3, #0]
 80105a2:	4604      	mov	r4, r0
 80105a4:	b95b      	cbnz	r3, 80105be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80105a6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 80105aa:	2b02      	cmp	r3, #2
 80105ac:	d007      	beq.n	80105be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80105ae:	6840      	ldr	r0, [r0, #4]
 80105b0:	f000 f92c 	bl	801080c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80105b4:	b118      	cbz	r0, 80105be <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80105b6:	6862      	ldr	r2, [r4, #4]
 80105b8:	7a53      	ldrb	r3, [r2, #9]
 80105ba:	2b00      	cmp	r3, #0
 80105bc:	d0fc      	beq.n	80105b8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80105be:	f7f0 fe19 	bl	80011f4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80105c2:	4620      	mov	r0, r4
 80105c4:	2100      	movs	r1, #0
 80105c6:	f7ff ffd7 	bl	8010578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80105ca:	4620      	mov	r0, r4
 80105cc:	f7ff fd74 	bl	80100b8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80105d0:	bd10      	pop	{r4, pc}
 80105d2:	bf00      	nop
 80105d4:	2000ef1a 	.word	0x2000ef1a

080105d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80105d8:	b570      	push	{r4, r5, r6, lr}
 80105da:	4604      	mov	r4, r0
 80105dc:	6803      	ldr	r3, [r0, #0]
 80105de:	b919      	cbnz	r1, 80105e8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80105e0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80105e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80105e6:	4718      	bx	r3
 80105e8:	2200      	movs	r2, #0
 80105ea:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 80105ee:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80105f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80105f4:	4798      	blx	r3
 80105f6:	6863      	ldr	r3, [r4, #4]
 80105f8:	2101      	movs	r1, #1
 80105fa:	4605      	mov	r5, r0
 80105fc:	7299      	strb	r1, [r3, #10]
 80105fe:	4620      	mov	r0, r4
 8010600:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 8010604:	f7ff ffb8 	bl	8010578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010608:	4628      	mov	r0, r5
 801060a:	bd70      	pop	{r4, r5, r6, pc}

0801060c <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801060c:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8010610:	1a13      	subs	r3, r2, r0
 8010612:	4258      	negs	r0, r3
 8010614:	4158      	adcs	r0, r3
 8010616:	4770      	bx	lr

08010618 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8010618:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 801061c:	1a9b      	subs	r3, r3, r2
 801061e:	2b00      	cmp	r3, #0
 8010620:	bfdc      	itt	le
 8010622:	6882      	ldrle	r2, [r0, #8]
 8010624:	189b      	addle	r3, r3, r2
 8010626:	2b01      	cmp	r3, #1
 8010628:	bfcc      	ite	gt
 801062a:	2000      	movgt	r0, #0
 801062c:	2001      	movle	r0, #1
 801062e:	4770      	bx	lr

08010630 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8010630:	6902      	ldr	r2, [r0, #16]
 8010632:	6843      	ldr	r3, [r0, #4]
 8010634:	2024      	movs	r0, #36	; 0x24
 8010636:	fb00 3002 	mla	r0, r0, r2, r3
 801063a:	4770      	bx	lr

0801063c <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 801063c:	6803      	ldr	r3, [r0, #0]
 801063e:	691b      	ldr	r3, [r3, #16]
 8010640:	4718      	bx	r3

08010642 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8010642:	b570      	push	{r4, r5, r6, lr}
 8010644:	2301      	movs	r3, #1
 8010646:	7203      	strb	r3, [r0, #8]
 8010648:	4604      	mov	r4, r0
 801064a:	6840      	ldr	r0, [r0, #4]
 801064c:	6803      	ldr	r3, [r0, #0]
 801064e:	699b      	ldr	r3, [r3, #24]
 8010650:	4798      	blx	r3
 8010652:	6803      	ldr	r3, [r0, #0]
 8010654:	2b40      	cmp	r3, #64	; 0x40
 8010656:	4605      	mov	r5, r0
 8010658:	d00c      	beq.n	8010674 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801065a:	d810      	bhi.n	801067e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801065c:	2b04      	cmp	r3, #4
 801065e:	d01d      	beq.n	801069c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010660:	d804      	bhi.n	801066c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010662:	2b01      	cmp	r3, #1
 8010664:	d006      	beq.n	8010674 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010666:	2b02      	cmp	r3, #2
 8010668:	d02c      	beq.n	80106c4 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801066a:	bd70      	pop	{r4, r5, r6, pc}
 801066c:	2b08      	cmp	r3, #8
 801066e:	d01d      	beq.n	80106ac <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010670:	2b20      	cmp	r3, #32
 8010672:	d1fa      	bne.n	801066a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010674:	6823      	ldr	r3, [r4, #0]
 8010676:	4620      	mov	r0, r4
 8010678:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801067a:	4798      	blx	r3
 801067c:	e013      	b.n	80106a6 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801067e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010682:	d0f7      	beq.n	8010674 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010684:	d804      	bhi.n	8010690 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010686:	2b80      	cmp	r3, #128	; 0x80
 8010688:	d0f4      	beq.n	8010674 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801068a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801068e:	e7f0      	b.n	8010672 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010690:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010694:	d0ee      	beq.n	8010674 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010696:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801069a:	e7e5      	b.n	8010668 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801069c:	6823      	ldr	r3, [r4, #0]
 801069e:	7f01      	ldrb	r1, [r0, #28]
 80106a0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80106a2:	4620      	mov	r0, r4
 80106a4:	4798      	blx	r3
 80106a6:	6823      	ldr	r3, [r4, #0]
 80106a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80106aa:	e006      	b.n	80106ba <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 80106ac:	6823      	ldr	r3, [r4, #0]
 80106ae:	7f01      	ldrb	r1, [r0, #28]
 80106b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80106b2:	4620      	mov	r0, r4
 80106b4:	4798      	blx	r3
 80106b6:	6823      	ldr	r3, [r4, #0]
 80106b8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80106ba:	4629      	mov	r1, r5
 80106bc:	4620      	mov	r0, r4
 80106be:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80106c2:	4718      	bx	r3
 80106c4:	6823      	ldr	r3, [r4, #0]
 80106c6:	4620      	mov	r0, r4
 80106c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80106ca:	4798      	blx	r3
 80106cc:	e7f3      	b.n	80106b6 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

080106ce <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 80106ce:	4770      	bx	lr

080106d0 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 80106d0:	4770      	bx	lr

080106d2 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 80106d2:	4770      	bx	lr

080106d4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80106d4:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80106d8:	1ad2      	subs	r2, r2, r3
 80106da:	2a00      	cmp	r2, #0
 80106dc:	b510      	push	{r4, lr}
 80106de:	bfdc      	itt	le
 80106e0:	6884      	ldrle	r4, [r0, #8]
 80106e2:	1912      	addle	r2, r2, r4
 80106e4:	2a01      	cmp	r2, #1
 80106e6:	dd16      	ble.n	8010716 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80106e8:	6842      	ldr	r2, [r0, #4]
 80106ea:	2424      	movs	r4, #36	; 0x24
 80106ec:	fb04 2303 	mla	r3, r4, r3, r2
 80106f0:	f101 0220 	add.w	r2, r1, #32
 80106f4:	f851 4b04 	ldr.w	r4, [r1], #4
 80106f8:	f843 4b04 	str.w	r4, [r3], #4
 80106fc:	4291      	cmp	r1, r2
 80106fe:	d1f9      	bne.n	80106f4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8010700:	780a      	ldrb	r2, [r1, #0]
 8010702:	701a      	strb	r2, [r3, #0]
 8010704:	68c3      	ldr	r3, [r0, #12]
 8010706:	6882      	ldr	r2, [r0, #8]
 8010708:	f3bf 8f5b 	dmb	ish
 801070c:	3301      	adds	r3, #1
 801070e:	429a      	cmp	r2, r3
 8010710:	bfd8      	it	le
 8010712:	1a9b      	suble	r3, r3, r2
 8010714:	60c3      	str	r3, [r0, #12]
 8010716:	bd10      	pop	{r4, pc}

08010718 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8010718:	6903      	ldr	r3, [r0, #16]
 801071a:	6882      	ldr	r2, [r0, #8]
 801071c:	f3bf 8f5b 	dmb	ish
 8010720:	3301      	adds	r3, #1
 8010722:	429a      	cmp	r2, r3
 8010724:	bfd8      	it	le
 8010726:	1a9b      	suble	r3, r3, r2
 8010728:	6103      	str	r3, [r0, #16]
 801072a:	4770      	bx	lr

0801072c <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 801072c:	b570      	push	{r4, r5, r6, lr}
 801072e:	4604      	mov	r4, r0
 8010730:	460e      	mov	r6, r1
 8010732:	6860      	ldr	r0, [r4, #4]
 8010734:	6803      	ldr	r3, [r0, #0]
 8010736:	685b      	ldr	r3, [r3, #4]
 8010738:	4798      	blx	r3
 801073a:	2800      	cmp	r0, #0
 801073c:	d1f9      	bne.n	8010732 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801073e:	4d0d      	ldr	r5, [pc, #52]	; (8010774 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8010740:	6828      	ldr	r0, [r5, #0]
 8010742:	6803      	ldr	r3, [r0, #0]
 8010744:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8010746:	4798      	blx	r3
 8010748:	f7f0 fd62 	bl	8001210 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 801074c:	6828      	ldr	r0, [r5, #0]
 801074e:	2101      	movs	r1, #1
 8010750:	f7ff ff12 	bl	8010578 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010754:	6860      	ldr	r0, [r4, #4]
 8010756:	6803      	ldr	r3, [r0, #0]
 8010758:	4631      	mov	r1, r6
 801075a:	689b      	ldr	r3, [r3, #8]
 801075c:	4798      	blx	r3
 801075e:	6823      	ldr	r3, [r4, #0]
 8010760:	4620      	mov	r0, r4
 8010762:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010764:	4798      	blx	r3
 8010766:	6828      	ldr	r0, [r5, #0]
 8010768:	6803      	ldr	r3, [r0, #0]
 801076a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801076e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010770:	4718      	bx	r3
 8010772:	bf00      	nop
 8010774:	2000ef1c 	.word	0x2000ef1c

08010778 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010778:	b508      	push	{r3, lr}
 801077a:	f7f0 fd3b 	bl	80011f4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801077e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010782:	f7f0 bd3f 	b.w	8001204 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010786 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010786:	b510      	push	{r4, lr}
 8010788:	2114      	movs	r1, #20
 801078a:	4604      	mov	r4, r0
 801078c:	f015 fdc8 	bl	8026320 <_ZdlPvj>
 8010790:	4620      	mov	r0, r4
 8010792:	bd10      	pop	{r4, pc}

08010794 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010794:	b510      	push	{r4, lr}
 8010796:	4604      	mov	r4, r0
 8010798:	6840      	ldr	r0, [r0, #4]
 801079a:	6803      	ldr	r3, [r0, #0]
 801079c:	681b      	ldr	r3, [r3, #0]
 801079e:	4798      	blx	r3
 80107a0:	b948      	cbnz	r0, 80107b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80107a2:	7a63      	ldrb	r3, [r4, #9]
 80107a4:	b13b      	cbz	r3, 80107b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80107a6:	7a23      	ldrb	r3, [r4, #8]
 80107a8:	b92b      	cbnz	r3, 80107b6 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 80107aa:	6823      	ldr	r3, [r4, #0]
 80107ac:	4620      	mov	r0, r4
 80107ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80107b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80107b4:	4718      	bx	r3
 80107b6:	bd10      	pop	{r4, pc}

080107b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 80107b8:	b570      	push	{r4, r5, r6, lr}
 80107ba:	4604      	mov	r4, r0
 80107bc:	6840      	ldr	r0, [r0, #4]
 80107be:	6803      	ldr	r3, [r0, #0]
 80107c0:	681b      	ldr	r3, [r3, #0]
 80107c2:	4798      	blx	r3
 80107c4:	4605      	mov	r5, r0
 80107c6:	b930      	cbnz	r0, 80107d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80107c8:	7a23      	ldrb	r3, [r4, #8]
 80107ca:	b123      	cbz	r3, 80107d6 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 80107cc:	6860      	ldr	r0, [r4, #4]
 80107ce:	6803      	ldr	r3, [r0, #0]
 80107d0:	695b      	ldr	r3, [r3, #20]
 80107d2:	4798      	blx	r3
 80107d4:	7225      	strb	r5, [r4, #8]
 80107d6:	6860      	ldr	r0, [r4, #4]
 80107d8:	6803      	ldr	r3, [r0, #0]
 80107da:	681b      	ldr	r3, [r3, #0]
 80107dc:	4798      	blx	r3
 80107de:	b928      	cbnz	r0, 80107ec <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80107e0:	6823      	ldr	r3, [r4, #0]
 80107e2:	4620      	mov	r0, r4
 80107e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80107e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107ea:	4718      	bx	r3
 80107ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107f0:	f7f0 bd16 	b.w	8001220 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080107f4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80107f4:	b510      	push	{r4, lr}
 80107f6:	4c04      	ldr	r4, [pc, #16]	; (8010808 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80107f8:	6082      	str	r2, [r0, #8]
 80107fa:	2200      	movs	r2, #0
 80107fc:	e9c0 4100 	strd	r4, r1, [r0]
 8010800:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010804:	bd10      	pop	{r4, pc}
 8010806:	bf00      	nop
 8010808:	08029d14 	.word	0x08029d14

0801080c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 801080c:	6840      	ldr	r0, [r0, #4]
 801080e:	6803      	ldr	r3, [r0, #0]
 8010810:	681b      	ldr	r3, [r3, #0]
 8010812:	4718      	bx	r3

08010814 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010814:	4b06      	ldr	r3, [pc, #24]	; (8010830 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010816:	60c1      	str	r1, [r0, #12]
 8010818:	094a      	lsrs	r2, r1, #5
 801081a:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 801081e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010822:	4313      	orrs	r3, r2
 8010824:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010828:	4319      	orrs	r1, r3
 801082a:	8201      	strh	r1, [r0, #16]
 801082c:	4770      	bx	lr
 801082e:	bf00      	nop
 8010830:	fffff800 	.word	0xfffff800

08010834 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010834:	f1a0 0008 	sub.w	r0, r0, #8
 8010838:	e7ec      	b.n	8010814 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 801083a:	bf00      	nop

0801083c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 801083c:	b508      	push	{r3, lr}
 801083e:	4b05      	ldr	r3, [pc, #20]	; (8010854 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010840:	6818      	ldr	r0, [r3, #0]
 8010842:	6803      	ldr	r3, [r0, #0]
 8010844:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010848:	4798      	blx	r3
 801084a:	1e43      	subs	r3, r0, #1
 801084c:	4258      	negs	r0, r3
 801084e:	4158      	adcs	r0, r3
 8010850:	bd08      	pop	{r3, pc}
 8010852:	bf00      	nop
 8010854:	2000ef1c 	.word	0x2000ef1c

08010858 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010858:	4770      	bx	lr

0801085a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 801085a:	3808      	subs	r0, #8
 801085c:	4770      	bx	lr

0801085e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 801085e:	b430      	push	{r4, r5}
 8010860:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010864:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010868:	8a02      	ldrh	r2, [r0, #16]
 801086a:	9202      	str	r2, [sp, #8]
 801086c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010870:	68c2      	ldr	r2, [r0, #12]
 8010872:	4629      	mov	r1, r5
 8010874:	4620      	mov	r0, r4
 8010876:	bc30      	pop	{r4, r5}
 8010878:	f7f0 be90 	b.w	800159c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0801087c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 801087c:	f7f0 be84 	b.w	8001588 <_ZN8touchgfx5paint8tearDownEv>

08010880 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010880:	b510      	push	{r4, lr}
 8010882:	2114      	movs	r1, #20
 8010884:	4604      	mov	r4, r0
 8010886:	f015 fd4b 	bl	8026320 <_ZdlPvj>
 801088a:	4620      	mov	r0, r4
 801088c:	bd10      	pop	{r4, pc}

0801088e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 801088e:	f1a0 0008 	sub.w	r0, r0, #8
 8010892:	e7f5      	b.n	8010880 <_ZN8touchgfx13PainterRGB565D0Ev>

08010894 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010894:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010896:	6803      	ldr	r3, [r0, #0]
 8010898:	460d      	mov	r5, r1
 801089a:	4604      	mov	r4, r0
 801089c:	4601      	mov	r1, r0
 801089e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80108a0:	a802      	add	r0, sp, #8
 80108a2:	4798      	blx	r3
 80108a4:	6828      	ldr	r0, [r5, #0]
 80108a6:	6869      	ldr	r1, [r5, #4]
 80108a8:	466b      	mov	r3, sp
 80108aa:	c303      	stmia	r3!, {r0, r1}
 80108ac:	4668      	mov	r0, sp
 80108ae:	4619      	mov	r1, r3
 80108b0:	f7fe ff8c 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 80108b4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80108b6:	b188      	cbz	r0, 80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80108b8:	6803      	ldr	r3, [r0, #0]
 80108ba:	1d21      	adds	r1, r4, #4
 80108bc:	68db      	ldr	r3, [r3, #12]
 80108be:	4798      	blx	r3
 80108c0:	b160      	cbz	r0, 80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80108c2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80108c6:	2b00      	cmp	r3, #0
 80108c8:	dd08      	ble.n	80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80108ca:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 80108ce:	2d00      	cmp	r5, #0
 80108d0:	dd04      	ble.n	80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80108d2:	4a2b      	ldr	r2, [pc, #172]	; (8010980 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 80108d4:	7812      	ldrb	r2, [r2, #0]
 80108d6:	b11a      	cbz	r2, 80108e0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 80108d8:	2a01      	cmp	r2, #1
 80108da:	d029      	beq.n	8010930 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 80108dc:	b004      	add	sp, #16
 80108de:	bd70      	pop	{r4, r5, r6, pc}
 80108e0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80108e4:	441d      	add	r5, r3
 80108e6:	b2ad      	uxth	r5, r5
 80108e8:	b22e      	sxth	r6, r5
 80108ea:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80108ee:	42b3      	cmp	r3, r6
 80108f0:	daf4      	bge.n	80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80108f2:	6823      	ldr	r3, [r4, #0]
 80108f4:	4669      	mov	r1, sp
 80108f6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80108f8:	4620      	mov	r0, r4
 80108fa:	4798      	blx	r3
 80108fc:	b940      	cbnz	r0, 8010910 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 80108fe:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010902:	2b01      	cmp	r3, #1
 8010904:	d004      	beq.n	8010910 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010906:	3301      	adds	r3, #1
 8010908:	105b      	asrs	r3, r3, #1
 801090a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801090e:	e7f0      	b.n	80108f2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010910:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010914:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010918:	4413      	add	r3, r2
 801091a:	b29b      	uxth	r3, r3
 801091c:	441a      	add	r2, r3
 801091e:	b212      	sxth	r2, r2
 8010920:	4296      	cmp	r6, r2
 8010922:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010926:	dae0      	bge.n	80108ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010928:	1aeb      	subs	r3, r5, r3
 801092a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801092e:	e7dc      	b.n	80108ea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010930:	f8bd 5000 	ldrh.w	r5, [sp]
 8010934:	441d      	add	r5, r3
 8010936:	b2ad      	uxth	r5, r5
 8010938:	b22e      	sxth	r6, r5
 801093a:	f9bd 3000 	ldrsh.w	r3, [sp]
 801093e:	42b3      	cmp	r3, r6
 8010940:	dacc      	bge.n	80108dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010942:	6823      	ldr	r3, [r4, #0]
 8010944:	4669      	mov	r1, sp
 8010946:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010948:	4620      	mov	r0, r4
 801094a:	4798      	blx	r3
 801094c:	b940      	cbnz	r0, 8010960 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 801094e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010952:	2b01      	cmp	r3, #1
 8010954:	d004      	beq.n	8010960 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010956:	3301      	adds	r3, #1
 8010958:	105b      	asrs	r3, r3, #1
 801095a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801095e:	e7f0      	b.n	8010942 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010960:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010964:	f8bd 3000 	ldrh.w	r3, [sp]
 8010968:	4413      	add	r3, r2
 801096a:	b29b      	uxth	r3, r3
 801096c:	441a      	add	r2, r3
 801096e:	b212      	sxth	r2, r2
 8010970:	4296      	cmp	r6, r2
 8010972:	f8ad 3000 	strh.w	r3, [sp]
 8010976:	dae0      	bge.n	801093a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010978:	1aeb      	subs	r3, r5, r3
 801097a:	f8ad 3004 	strh.w	r3, [sp, #4]
 801097e:	e7dc      	b.n	801093a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010980:	2000ef14 	.word	0x2000ef14

08010984 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010984:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010986:	6803      	ldr	r3, [r0, #0]
 8010988:	4604      	mov	r4, r0
 801098a:	4601      	mov	r1, r0
 801098c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801098e:	4668      	mov	r0, sp
 8010990:	4798      	blx	r3
 8010992:	2100      	movs	r1, #0
 8010994:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010998:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801099c:	9102      	str	r1, [sp, #8]
 801099e:	4668      	mov	r0, sp
 80109a0:	a902      	add	r1, sp, #8
 80109a2:	f8ad 200c 	strh.w	r2, [sp, #12]
 80109a6:	f8ad 300e 	strh.w	r3, [sp, #14]
 80109aa:	f7fe ff0f 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 80109ae:	6823      	ldr	r3, [r4, #0]
 80109b0:	4669      	mov	r1, sp
 80109b2:	691b      	ldr	r3, [r3, #16]
 80109b4:	4620      	mov	r0, r4
 80109b6:	4798      	blx	r3
 80109b8:	b004      	add	sp, #16
 80109ba:	bd10      	pop	{r4, pc}

080109bc <_ZN8touchgfx12CanvasWidgetC1Ev>:
 80109bc:	2101      	movs	r1, #1
 80109be:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 80109c2:	490b      	ldr	r1, [pc, #44]	; (80109f0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 80109c4:	6001      	str	r1, [r0, #0]
 80109c6:	2200      	movs	r2, #0
 80109c8:	21ff      	movs	r1, #255	; 0xff
 80109ca:	8082      	strh	r2, [r0, #4]
 80109cc:	80c2      	strh	r2, [r0, #6]
 80109ce:	8102      	strh	r2, [r0, #8]
 80109d0:	8142      	strh	r2, [r0, #10]
 80109d2:	8182      	strh	r2, [r0, #12]
 80109d4:	81c2      	strh	r2, [r0, #14]
 80109d6:	8202      	strh	r2, [r0, #16]
 80109d8:	8242      	strh	r2, [r0, #18]
 80109da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80109de:	61c2      	str	r2, [r0, #28]
 80109e0:	8402      	strh	r2, [r0, #32]
 80109e2:	8442      	strh	r2, [r0, #34]	; 0x22
 80109e4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 80109e8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 80109ec:	6282      	str	r2, [r0, #40]	; 0x28
 80109ee:	4770      	bx	lr
 80109f0:	08029d70 	.word	0x08029d70

080109f4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 80109f4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 80109f8:	4602      	mov	r2, r0
 80109fa:	cb03      	ldmia	r3!, {r0, r1}
 80109fc:	6010      	str	r0, [r2, #0]
 80109fe:	6051      	str	r1, [r2, #4]
 8010a00:	4610      	mov	r0, r2
 8010a02:	4770      	bx	lr

08010a04 <_ZN8touchgfx4LineD1Ev>:
 8010a04:	4770      	bx	lr

08010a06 <_ZN8touchgfx4LineD0Ev>:
 8010a06:	b510      	push	{r4, lr}
 8010a08:	2170      	movs	r1, #112	; 0x70
 8010a0a:	4604      	mov	r4, r0
 8010a0c:	f015 fc88 	bl	8026320 <_ZdlPvj>
 8010a10:	4620      	mov	r0, r4
 8010a12:	bd10      	pop	{r4, pc}

08010a14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010a14:	b507      	push	{r0, r1, r2, lr}
 8010a16:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010a1a:	ab01      	add	r3, sp, #4
 8010a1c:	6809      	ldr	r1, [r1, #0]
 8010a1e:	6800      	ldr	r0, [r0, #0]
 8010a20:	f005 fba0 	bl	8016164 <_ZN8touchgfx6muldivElllRl>
 8010a24:	b003      	add	sp, #12
 8010a26:	f85d fb04 	ldr.w	pc, [sp], #4

08010a2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010a2a:	6800      	ldr	r0, [r0, #0]
 8010a2c:	2800      	cmp	r0, #0
 8010a2e:	bfb9      	ittee	lt
 8010a30:	2320      	movlt	r3, #32
 8010a32:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010a36:	301f      	addge	r0, #31
 8010a38:	1140      	asrge	r0, r0, #5
 8010a3a:	4770      	bx	lr

08010a3c <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010a3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a40:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010a44:	b089      	sub	sp, #36	; 0x24
 8010a46:	4604      	mov	r4, r0
 8010a48:	b353      	cbz	r3, 8010aa0 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010a4a:	6803      	ldr	r3, [r0, #0]
 8010a4c:	4601      	mov	r1, r0
 8010a4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010a50:	a802      	add	r0, sp, #8
 8010a52:	4798      	blx	r3
 8010a54:	2220      	movs	r2, #32
 8010a56:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010a5a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010a5c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010a60:	fb91 f5f2 	sdiv	r5, r1, r2
 8010a64:	1b40      	subs	r0, r0, r5
 8010a66:	2800      	cmp	r0, #0
 8010a68:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010a6a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010a6e:	bfb8      	it	lt
 8010a70:	4240      	neglt	r0, r0
 8010a72:	0076      	lsls	r6, r6, #1
 8010a74:	4286      	cmp	r6, r0
 8010a76:	f8d4 b000 	ldr.w	fp, [r4]
 8010a7a:	dc0c      	bgt.n	8010a96 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010a7c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010a7e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010a82:	fb95 f0f2 	sdiv	r0, r5, r2
 8010a86:	fb98 f7f2 	sdiv	r7, r8, r2
 8010a8a:	1bc0      	subs	r0, r0, r7
 8010a8c:	2800      	cmp	r0, #0
 8010a8e:	bfb8      	it	lt
 8010a90:	4240      	neglt	r0, r0
 8010a92:	4286      	cmp	r6, r0
 8010a94:	dd07      	ble.n	8010aa6 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010a96:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010a9a:	a902      	add	r1, sp, #8
 8010a9c:	4620      	mov	r0, r4
 8010a9e:	4798      	blx	r3
 8010aa0:	b009      	add	sp, #36	; 0x24
 8010aa2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010aa6:	3301      	adds	r3, #1
 8010aa8:	2002      	movs	r0, #2
 8010aaa:	f10d 0920 	add.w	r9, sp, #32
 8010aae:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010ab2:	4103      	asrs	r3, r0
 8010ab4:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010ab8:	eb01 060a 	add.w	r6, r1, sl
 8010abc:	eb08 0705 	add.w	r7, r8, r5
 8010ac0:	fb96 f6f0 	sdiv	r6, r6, r0
 8010ac4:	fb97 f7f0 	sdiv	r7, r7, r0
 8010ac8:	4648      	mov	r0, r9
 8010aca:	9101      	str	r1, [sp, #4]
 8010acc:	b236      	sxth	r6, r6
 8010ace:	b23f      	sxth	r7, r7
 8010ad0:	fb96 f6f2 	sdiv	r6, r6, r2
 8010ad4:	fb97 f7f2 	sdiv	r7, r7, r2
 8010ad8:	f7ff ffa7 	bl	8010a2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010adc:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010ae0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010ae4:	9901      	ldr	r1, [sp, #4]
 8010ae6:	4293      	cmp	r3, r2
 8010ae8:	fa1f fe87 	uxth.w	lr, r7
 8010aec:	fa1f fc86 	uxth.w	ip, r6
 8010af0:	eba1 0a0a 	sub.w	sl, r1, sl
 8010af4:	b280      	uxth	r0, r0
 8010af6:	da54      	bge.n	8010ba2 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010af8:	ebac 0100 	sub.w	r1, ip, r0
 8010afc:	b289      	uxth	r1, r1
 8010afe:	4460      	add	r0, ip
 8010b00:	f1ba 0f00 	cmp.w	sl, #0
 8010b04:	b20e      	sxth	r6, r1
 8010b06:	b280      	uxth	r0, r0
 8010b08:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010b0c:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010b10:	da29      	bge.n	8010b66 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010b12:	eba8 0505 	sub.w	r5, r8, r5
 8010b16:	2d00      	cmp	r5, #0
 8010b18:	da2a      	bge.n	8010b70 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010b1a:	fa1f f88a 	uxth.w	r8, sl
 8010b1e:	eba0 0008 	sub.w	r0, r0, r8
 8010b22:	fa1f f58c 	uxth.w	r5, ip
 8010b26:	4443      	add	r3, r8
 8010b28:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010b2c:	1a59      	subs	r1, r3, r1
 8010b2e:	ebae 0005 	sub.w	r0, lr, r5
 8010b32:	f8ad a010 	strh.w	sl, [sp, #16]
 8010b36:	f8ad c012 	strh.w	ip, [sp, #18]
 8010b3a:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010b3e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010b42:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010b46:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010b4a:	442a      	add	r2, r5
 8010b4c:	eba2 0e0e 	sub.w	lr, r2, lr
 8010b50:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010b54:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010b58:	a904      	add	r1, sp, #16
 8010b5a:	4620      	mov	r0, r4
 8010b5c:	4798      	blx	r3
 8010b5e:	6823      	ldr	r3, [r4, #0]
 8010b60:	4649      	mov	r1, r9
 8010b62:	691b      	ldr	r3, [r3, #16]
 8010b64:	e79a      	b.n	8010a9c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010b66:	d003      	beq.n	8010b70 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010b68:	eba8 0505 	sub.w	r5, r8, r5
 8010b6c:	2d00      	cmp	r5, #0
 8010b6e:	dcd4      	bgt.n	8010b1a <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010b70:	fa1f f88a 	uxth.w	r8, sl
 8010b74:	4443      	add	r3, r8
 8010b76:	fa1f f58c 	uxth.w	r5, ip
 8010b7a:	1a59      	subs	r1, r3, r1
 8010b7c:	eba0 0008 	sub.w	r0, r0, r8
 8010b80:	ebae 0305 	sub.w	r3, lr, r5
 8010b84:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010b88:	f8ad c012 	strh.w	ip, [sp, #18]
 8010b8c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010b90:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010b94:	f8ad a018 	strh.w	sl, [sp, #24]
 8010b98:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010b9c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010ba0:	e7d3      	b.n	8010b4a <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010ba2:	ebae 0100 	sub.w	r1, lr, r0
 8010ba6:	b289      	uxth	r1, r1
 8010ba8:	4470      	add	r0, lr
 8010baa:	f1ba 0f00 	cmp.w	sl, #0
 8010bae:	b20f      	sxth	r7, r1
 8010bb0:	b280      	uxth	r0, r0
 8010bb2:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010bb6:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010bba:	da20      	bge.n	8010bfe <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010bbc:	eba8 0505 	sub.w	r5, r8, r5
 8010bc0:	2d00      	cmp	r5, #0
 8010bc2:	da21      	bge.n	8010c08 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010bc4:	fa1f f88e 	uxth.w	r8, lr
 8010bc8:	fa1f f58a 	uxth.w	r5, sl
 8010bcc:	4443      	add	r3, r8
 8010bce:	442a      	add	r2, r5
 8010bd0:	f8ad e010 	strh.w	lr, [sp, #16]
 8010bd4:	1b40      	subs	r0, r0, r5
 8010bd6:	ebac 0e08 	sub.w	lr, ip, r8
 8010bda:	1a51      	subs	r1, r2, r1
 8010bdc:	eba3 0c0c 	sub.w	ip, r3, ip
 8010be0:	f8ad a012 	strh.w	sl, [sp, #18]
 8010be4:	f8ad e014 	strh.w	lr, [sp, #20]
 8010be8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010bec:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010bf0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010bf4:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010bf8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010bfc:	e7aa      	b.n	8010b54 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010bfe:	d003      	beq.n	8010c08 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010c00:	eba8 0505 	sub.w	r5, r8, r5
 8010c04:	2d00      	cmp	r5, #0
 8010c06:	dcdd      	bgt.n	8010bc4 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010c08:	fa1f f58e 	uxth.w	r5, lr
 8010c0c:	fa1f f88a 	uxth.w	r8, sl
 8010c10:	4442      	add	r2, r8
 8010c12:	442b      	add	r3, r5
 8010c14:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010c18:	1a51      	subs	r1, r2, r1
 8010c1a:	ebac 0705 	sub.w	r7, ip, r5
 8010c1e:	eba0 0008 	sub.w	r0, r0, r8
 8010c22:	eba3 0c0c 	sub.w	ip, r3, ip
 8010c26:	f8ad e010 	strh.w	lr, [sp, #16]
 8010c2a:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010c2e:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010c32:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010c36:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010c3a:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010c3e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010c42:	e787      	b.n	8010b54 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010c44 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010c44:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010c48:	fb90 f2f3 	sdiv	r2, r0, r3
 8010c4c:	fb02 0013 	mls	r0, r2, r3, r0
 8010c50:	2800      	cmp	r0, #0
 8010c52:	bfb8      	it	lt
 8010c54:	18c0      	addlt	r0, r0, r3
 8010c56:	285a      	cmp	r0, #90	; 0x5a
 8010c58:	4b09      	ldr	r3, [pc, #36]	; (8010c80 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010c5a:	dc02      	bgt.n	8010c62 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010c5c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010c60:	4770      	bx	lr
 8010c62:	28b4      	cmp	r0, #180	; 0xb4
 8010c64:	dc02      	bgt.n	8010c6c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010c66:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010c6a:	e7f7      	b.n	8010c5c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010c6c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010c70:	bfd4      	ite	le
 8010c72:	38b4      	suble	r0, #180	; 0xb4
 8010c74:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010c78:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010c7c:	4240      	negs	r0, r0
 8010c7e:	4770      	bx	lr
 8010c80:	08029e3c 	.word	0x08029e3c

08010c84 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010c84:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010c88:	bf2c      	ite	cs
 8010c8a:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010c8e:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010c92:	2300      	movs	r3, #0
 8010c94:	1899      	adds	r1, r3, r2
 8010c96:	4288      	cmp	r0, r1
 8010c98:	bf24      	itt	cs
 8010c9a:	1853      	addcs	r3, r2, r1
 8010c9c:	1a40      	subcs	r0, r0, r1
 8010c9e:	0892      	lsrs	r2, r2, #2
 8010ca0:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010ca4:	d1f6      	bne.n	8010c94 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010ca6:	4618      	mov	r0, r3
 8010ca8:	4770      	bx	lr

08010caa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010caa:	b510      	push	{r4, lr}
 8010cac:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010cb0:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010cb4:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010cb8:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010cbc:	13a4      	asrs	r4, r4, #14
 8010cbe:	139b      	asrs	r3, r3, #14
 8010cc0:	429c      	cmp	r4, r3
 8010cc2:	bfb8      	it	lt
 8010cc4:	461c      	movlt	r4, r3
 8010cc6:	2c01      	cmp	r4, #1
 8010cc8:	dd07      	ble.n	8010cda <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010cca:	fb91 f1f4 	sdiv	r1, r1, r4
 8010cce:	fb90 f0f4 	sdiv	r0, r0, r4
 8010cd2:	f7ff ffea 	bl	8010caa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010cd6:	4360      	muls	r0, r4
 8010cd8:	bd10      	pop	{r4, pc}
 8010cda:	4340      	muls	r0, r0
 8010cdc:	fb01 0001 	mla	r0, r1, r1, r0
 8010ce0:	f7ff ffd0 	bl	8010c84 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010ce4:	e7f8      	b.n	8010cd8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

08010ce8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010ce8:	2800      	cmp	r0, #0
 8010cea:	b508      	push	{r3, lr}
 8010cec:	da05      	bge.n	8010cfa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010cee:	4240      	negs	r0, r0
 8010cf0:	f7ff fffa 	bl	8010ce8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010cf4:	4240      	negs	r0, r0
 8010cf6:	b240      	sxtb	r0, r0
 8010cf8:	bd08      	pop	{r3, pc}
 8010cfa:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010cfe:	dc11      	bgt.n	8010d24 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010d00:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010d04:	dd09      	ble.n	8010d1a <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010d06:	4340      	muls	r0, r0
 8010d08:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010d0c:	f7ff ffba 	bl	8010c84 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010d10:	f7ff ffea 	bl	8010ce8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010d14:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010d18:	e7ed      	b.n	8010cf6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010d1a:	3003      	adds	r0, #3
 8010d1c:	10c0      	asrs	r0, r0, #3
 8010d1e:	4b02      	ldr	r3, [pc, #8]	; (8010d28 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010d20:	5618      	ldrsb	r0, [r3, r0]
 8010d22:	e7e9      	b.n	8010cf8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010d24:	2000      	movs	r0, #0
 8010d26:	e7e7      	b.n	8010cf8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010d28:	08029de0 	.word	0x08029de0

08010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010d2c:	4281      	cmp	r1, r0
 8010d2e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010d30:	460c      	mov	r4, r1
 8010d32:	4615      	mov	r5, r2
 8010d34:	dd07      	ble.n	8010d46 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010d36:	4601      	mov	r1, r0
 8010d38:	4620      	mov	r0, r4
 8010d3a:	f7ff fff7 	bl	8010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010d3e:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010d42:	b003      	add	sp, #12
 8010d44:	bd30      	pop	{r4, r5, pc}
 8010d46:	f7ff ffb0 	bl	8010caa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010d4a:	6028      	str	r0, [r5, #0]
 8010d4c:	2800      	cmp	r0, #0
 8010d4e:	d0f8      	beq.n	8010d42 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8010d50:	4602      	mov	r2, r0
 8010d52:	ab01      	add	r3, sp, #4
 8010d54:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8010d58:	4620      	mov	r0, r4
 8010d5a:	f005 fa03 	bl	8016164 <_ZN8touchgfx6muldivElllRl>
 8010d5e:	f7ff ffc3 	bl	8010ce8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010d62:	e7ee      	b.n	8010d42 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08010d64 <_ZN8touchgfx4LineC1Ev>:
 8010d64:	b510      	push	{r4, lr}
 8010d66:	4604      	mov	r4, r0
 8010d68:	f7ff fe28 	bl	80109bc <_ZN8touchgfx12CanvasWidgetC1Ev>
 8010d6c:	4b0c      	ldr	r3, [pc, #48]	; (8010da0 <_ZN8touchgfx4LineC1Ev+0x3c>)
 8010d6e:	6023      	str	r3, [r4, #0]
 8010d70:	2220      	movs	r2, #32
 8010d72:	2300      	movs	r3, #0
 8010d74:	63e2      	str	r2, [r4, #60]	; 0x3c
 8010d76:	2212      	movs	r2, #18
 8010d78:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 8010d7c:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8010d80:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8010d84:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8010d88:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 8010d8c:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8010d90:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8010d94:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8010d98:	66e2      	str	r2, [r4, #108]	; 0x6c
 8010d9a:	60a3      	str	r3, [r4, #8]
 8010d9c:	4620      	mov	r0, r4
 8010d9e:	bd10      	pop	{r4, pc}
 8010da0:	08029efc 	.word	0x08029efc

08010da4 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8010da4:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8010da8:	6b47      	ldr	r7, [r0, #52]	; 0x34
 8010daa:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010dac:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8010dae:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8010db0:	1aff      	subs	r7, r7, r3
 8010db2:	4604      	mov	r4, r0
 8010db4:	eba5 0502 	sub.w	r5, r5, r2
 8010db8:	d142      	bne.n	8010e40 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 8010dba:	b955      	cbnz	r5, 8010dd2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 8010dbc:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8010dc0:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8010dc4:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8010dc8:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 8010dcc:	b002      	add	sp, #8
 8010dce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010dd2:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8010dd6:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 8010dda:	4629      	mov	r1, r5
 8010ddc:	4642      	mov	r2, r8
 8010dde:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010de0:	f005 f9df 	bl	80161a2 <_ZN8touchgfx6muldivElll>
 8010de4:	2502      	movs	r5, #2
 8010de6:	4642      	mov	r2, r8
 8010de8:	fb90 f6f5 	sdiv	r6, r0, r5
 8010dec:	4639      	mov	r1, r7
 8010dee:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010df0:	f005 f9d7 	bl	80161a2 <_ZN8touchgfx6muldivElll>
 8010df4:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 8010df8:	fb90 f5f5 	sdiv	r5, r0, r5
 8010dfc:	f1b9 0f00 	cmp.w	r9, #0
 8010e00:	d067      	beq.n	8010ed2 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 8010e02:	f1b9 0f02 	cmp.w	r9, #2
 8010e06:	d878      	bhi.n	8010efa <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 8010e08:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010e0a:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010e0c:	1b93      	subs	r3, r2, r6
 8010e0e:	1b5b      	subs	r3, r3, r5
 8010e10:	6463      	str	r3, [r4, #68]	; 0x44
 8010e12:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010e14:	18e9      	adds	r1, r5, r3
 8010e16:	1b89      	subs	r1, r1, r6
 8010e18:	6561      	str	r1, [r4, #84]	; 0x54
 8010e1a:	1b81      	subs	r1, r0, r6
 8010e1c:	4429      	add	r1, r5
 8010e1e:	64a1      	str	r1, [r4, #72]	; 0x48
 8010e20:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010e22:	4430      	add	r0, r6
 8010e24:	186f      	adds	r7, r5, r1
 8010e26:	4432      	add	r2, r6
 8010e28:	1b49      	subs	r1, r1, r5
 8010e2a:	4437      	add	r7, r6
 8010e2c:	4428      	add	r0, r5
 8010e2e:	4431      	add	r1, r6
 8010e30:	1b52      	subs	r2, r2, r5
 8010e32:	1b5b      	subs	r3, r3, r5
 8010e34:	65a7      	str	r7, [r4, #88]	; 0x58
 8010e36:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010e38:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010e3a:	6522      	str	r2, [r4, #80]	; 0x50
 8010e3c:	1b9b      	subs	r3, r3, r6
 8010e3e:	e05b      	b.n	8010ef8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 8010e40:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 8010e44:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 8010e48:	2d00      	cmp	r5, #0
 8010e4a:	d0c6      	beq.n	8010dda <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010e4c:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8010e50:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8010e54:	fb93 f2f8 	sdiv	r2, r3, r8
 8010e58:	fb08 3312 	mls	r3, r8, r2, r3
 8010e5c:	b353      	cbz	r3, 8010eb4 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 8010e5e:	fb98 f2f3 	sdiv	r2, r8, r3
 8010e62:	fb03 8812 	mls	r8, r3, r2, r8
 8010e66:	f1b8 0f00 	cmp.w	r8, #0
 8010e6a:	d1f3      	bne.n	8010e54 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 8010e6c:	2b01      	cmp	r3, #1
 8010e6e:	bf1c      	itt	ne
 8010e70:	fb95 f5f3 	sdivne	r5, r5, r3
 8010e74:	fb97 f7f3 	sdivne	r7, r7, r3
 8010e78:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 8010e7c:	f24b 5104 	movw	r1, #46340	; 0xb504
 8010e80:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8010e84:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8010e88:	428b      	cmp	r3, r1
 8010e8a:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 8010e8e:	4608      	mov	r0, r1
 8010e90:	dd01      	ble.n	8010e96 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8010e92:	428a      	cmp	r2, r1
 8010e94:	dc10      	bgt.n	8010eb8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8010e96:	fb90 f3f3 	sdiv	r3, r0, r3
 8010e9a:	fb90 f2f2 	sdiv	r2, r0, r2
 8010e9e:	4293      	cmp	r3, r2
 8010ea0:	bfa8      	it	ge
 8010ea2:	4613      	movge	r3, r2
 8010ea4:	435f      	muls	r7, r3
 8010ea6:	435d      	muls	r5, r3
 8010ea8:	4629      	mov	r1, r5
 8010eaa:	4638      	mov	r0, r7
 8010eac:	f7ff fefd 	bl	8010caa <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010eb0:	4680      	mov	r8, r0
 8010eb2:	e792      	b.n	8010dda <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8010eb4:	4643      	mov	r3, r8
 8010eb6:	e7d9      	b.n	8010e6c <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8010eb8:	fb93 f3f1 	sdiv	r3, r3, r1
 8010ebc:	fb92 f2f1 	sdiv	r2, r2, r1
 8010ec0:	4293      	cmp	r3, r2
 8010ec2:	bfcc      	ite	gt
 8010ec4:	3301      	addgt	r3, #1
 8010ec6:	1c53      	addle	r3, r2, #1
 8010ec8:	fb97 f7f3 	sdiv	r7, r7, r3
 8010ecc:	fb95 f5f3 	sdiv	r5, r5, r3
 8010ed0:	e7ea      	b.n	8010ea8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8010ed2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8010ed4:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8010ed6:	1b93      	subs	r3, r2, r6
 8010ed8:	6463      	str	r3, [r4, #68]	; 0x44
 8010eda:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010edc:	18e9      	adds	r1, r5, r3
 8010ede:	6561      	str	r1, [r4, #84]	; 0x54
 8010ee0:	1b81      	subs	r1, r0, r6
 8010ee2:	64a1      	str	r1, [r4, #72]	; 0x48
 8010ee4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8010ee6:	4430      	add	r0, r6
 8010ee8:	186f      	adds	r7, r5, r1
 8010eea:	4432      	add	r2, r6
 8010eec:	1b49      	subs	r1, r1, r5
 8010eee:	65a7      	str	r7, [r4, #88]	; 0x58
 8010ef0:	64e0      	str	r0, [r4, #76]	; 0x4c
 8010ef2:	65e1      	str	r1, [r4, #92]	; 0x5c
 8010ef4:	6522      	str	r2, [r4, #80]	; 0x50
 8010ef6:	1b5b      	subs	r3, r3, r5
 8010ef8:	6623      	str	r3, [r4, #96]	; 0x60
 8010efa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8010efc:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8010efe:	9200      	str	r2, [sp, #0]
 8010f00:	9301      	str	r3, [sp, #4]
 8010f02:	f104 0148 	add.w	r1, r4, #72	; 0x48
 8010f06:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 8010f0a:	680f      	ldr	r7, [r1, #0]
 8010f0c:	9800      	ldr	r0, [sp, #0]
 8010f0e:	42ba      	cmp	r2, r7
 8010f10:	bfa8      	it	ge
 8010f12:	463a      	movge	r2, r7
 8010f14:	4287      	cmp	r7, r0
 8010f16:	bfc8      	it	gt
 8010f18:	9700      	strgt	r7, [sp, #0]
 8010f1a:	690f      	ldr	r7, [r1, #16]
 8010f1c:	9801      	ldr	r0, [sp, #4]
 8010f1e:	42bb      	cmp	r3, r7
 8010f20:	bfa8      	it	ge
 8010f22:	463b      	movge	r3, r7
 8010f24:	3104      	adds	r1, #4
 8010f26:	4287      	cmp	r7, r0
 8010f28:	bfc8      	it	gt
 8010f2a:	9701      	strgt	r7, [sp, #4]
 8010f2c:	458c      	cmp	ip, r1
 8010f2e:	d1ec      	bne.n	8010f0a <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 8010f30:	4668      	mov	r0, sp
 8010f32:	2720      	movs	r7, #32
 8010f34:	fb92 f8f7 	sdiv	r8, r2, r7
 8010f38:	fb93 f7f7 	sdiv	r7, r3, r7
 8010f3c:	f7ff fd75 	bl	8010a2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010f40:	4682      	mov	sl, r0
 8010f42:	a801      	add	r0, sp, #4
 8010f44:	f7ff fd71 	bl	8010a2a <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010f48:	ebaa 0208 	sub.w	r2, sl, r8
 8010f4c:	1bc0      	subs	r0, r0, r7
 8010f4e:	f1b9 0f01 	cmp.w	r9, #1
 8010f52:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8010f56:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 8010f5a:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 8010f5e:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8010f62:	f47f af33 	bne.w	8010dcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8010f66:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8010f68:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010f6a:	1b83      	subs	r3, r0, r6
 8010f6c:	6463      	str	r3, [r4, #68]	; 0x44
 8010f6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8010f70:	18ea      	adds	r2, r5, r3
 8010f72:	6562      	str	r2, [r4, #84]	; 0x54
 8010f74:	1b8a      	subs	r2, r1, r6
 8010f76:	64a2      	str	r2, [r4, #72]	; 0x48
 8010f78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8010f7a:	4431      	add	r1, r6
 8010f7c:	18af      	adds	r7, r5, r2
 8010f7e:	4406      	add	r6, r0
 8010f80:	1b52      	subs	r2, r2, r5
 8010f82:	1b5d      	subs	r5, r3, r5
 8010f84:	65a7      	str	r7, [r4, #88]	; 0x58
 8010f86:	64e1      	str	r1, [r4, #76]	; 0x4c
 8010f88:	65e2      	str	r2, [r4, #92]	; 0x5c
 8010f8a:	6526      	str	r6, [r4, #80]	; 0x50
 8010f8c:	6625      	str	r5, [r4, #96]	; 0x60
 8010f8e:	e71d      	b.n	8010dcc <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08010f90 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8010f90:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8010f92:	428b      	cmp	r3, r1
 8010f94:	d102      	bne.n	8010f9c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8010f96:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8010f98:	4293      	cmp	r3, r2
 8010f9a:	d003      	beq.n	8010fa4 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 8010f9c:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8010fa0:	f7ff bf00 	b.w	8010da4 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010fa4:	4770      	bx	lr

08010fa6 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8010fa6:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8010fa8:	428b      	cmp	r3, r1
 8010faa:	d102      	bne.n	8010fb2 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 8010fac:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8010fae:	4293      	cmp	r3, r2
 8010fb0:	d003      	beq.n	8010fba <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8010fb2:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8010fb6:	f7ff bef5 	b.w	8010da4 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8010fba:	4770      	bx	lr

08010fbc <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 8010fbc:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8010fc0:	f7ff bef0 	b.w	8010da4 <_ZN8touchgfx4Line17updateCachedShapeEv>

08010fc4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8010fc4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010fc8:	b0a0      	sub	sp, #128	; 0x80
 8010fca:	4604      	mov	r4, r0
 8010fcc:	460a      	mov	r2, r1
 8010fce:	4601      	mov	r1, r0
 8010fd0:	a804      	add	r0, sp, #16
 8010fd2:	f014 ff45 	bl	8025e60 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8010fd6:	2300      	movs	r3, #0
 8010fd8:	9301      	str	r3, [sp, #4]
 8010fda:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 8010fde:	2b01      	cmp	r3, #1
 8010fe0:	d17c      	bne.n	80110dc <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8010fe2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8010fe4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8010fe6:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8010fe8:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8010fea:	1ac0      	subs	r0, r0, r3
 8010fec:	eba1 0102 	sub.w	r1, r1, r2
 8010ff0:	d437      	bmi.n	8011062 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 8010ff2:	2900      	cmp	r1, #0
 8010ff4:	aa01      	add	r2, sp, #4
 8010ff6:	db2e      	blt.n	8011056 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 8010ff8:	f7ff fe98 	bl	8010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010ffc:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 8011000:	6d62      	ldr	r2, [r4, #84]	; 0x54
 8011002:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011004:	a804      	add	r0, sp, #16
 8011006:	f015 f8ab 	bl	8026160 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801100a:	6da2      	ldr	r2, [r4, #88]	; 0x58
 801100c:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801100e:	a804      	add	r0, sp, #16
 8011010:	f015 f8f3 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011014:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011016:	2db3      	cmp	r5, #179	; 0xb3
 8011018:	dc33      	bgt.n	8011082 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 801101a:	eba6 0805 	sub.w	r8, r6, r5
 801101e:	4640      	mov	r0, r8
 8011020:	f7ff fe10 	bl	8010c44 <_ZN8touchgfx7CWRUtil4sineEi>
 8011024:	a902      	add	r1, sp, #8
 8011026:	9002      	str	r0, [sp, #8]
 8011028:	a801      	add	r0, sp, #4
 801102a:	f7ff fcf3 	bl	8010a14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801102e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8011030:	1847      	adds	r7, r0, r1
 8011032:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 8011036:	f7ff fe05 	bl	8010c44 <_ZN8touchgfx7CWRUtil4sineEi>
 801103a:	a903      	add	r1, sp, #12
 801103c:	9003      	str	r0, [sp, #12]
 801103e:	a801      	add	r0, sp, #4
 8011040:	f7ff fce8 	bl	8010a14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011044:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8011046:	4639      	mov	r1, r7
 8011048:	1a12      	subs	r2, r2, r0
 801104a:	a804      	add	r0, sp, #16
 801104c:	f015 f8d5 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011050:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011052:	441d      	add	r5, r3
 8011054:	e7df      	b.n	8011016 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011056:	4249      	negs	r1, r1
 8011058:	f7ff fe68 	bl	8010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801105c:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011060:	e7ce      	b.n	8011000 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011062:	2900      	cmp	r1, #0
 8011064:	f1c0 0000 	rsb	r0, r0, #0
 8011068:	aa01      	add	r2, sp, #4
 801106a:	db04      	blt.n	8011076 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 801106c:	f7ff fe5e 	bl	8010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011070:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011074:	e7c4      	b.n	8011000 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011076:	4249      	negs	r1, r1
 8011078:	f7ff fe58 	bl	8010d2c <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801107c:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011080:	e7be      	b.n	8011000 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011082:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011084:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011086:	a804      	add	r0, sp, #16
 8011088:	f015 f8b7 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801108c:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801108e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011090:	a804      	add	r0, sp, #16
 8011092:	f015 f8b2 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011096:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011098:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 801109c:	2d00      	cmp	r5, #0
 801109e:	dd31      	ble.n	8011104 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 80110a0:	eb05 0806 	add.w	r8, r5, r6
 80110a4:	4640      	mov	r0, r8
 80110a6:	f7ff fdcd 	bl	8010c44 <_ZN8touchgfx7CWRUtil4sineEi>
 80110aa:	a902      	add	r1, sp, #8
 80110ac:	9002      	str	r0, [sp, #8]
 80110ae:	a801      	add	r0, sp, #4
 80110b0:	f7ff fcb0 	bl	8010a14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80110b4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80110b6:	1847      	adds	r7, r0, r1
 80110b8:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80110bc:	f7ff fdc2 	bl	8010c44 <_ZN8touchgfx7CWRUtil4sineEi>
 80110c0:	a903      	add	r1, sp, #12
 80110c2:	9003      	str	r0, [sp, #12]
 80110c4:	a801      	add	r0, sp, #4
 80110c6:	f7ff fca5 	bl	8010a14 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80110ca:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80110cc:	4639      	mov	r1, r7
 80110ce:	1a12      	subs	r2, r2, r0
 80110d0:	a804      	add	r0, sp, #16
 80110d2:	f015 f892 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80110d6:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 80110d8:	1aed      	subs	r5, r5, r3
 80110da:	e7df      	b.n	801109c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 80110dc:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80110de:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80110e0:	a804      	add	r0, sp, #16
 80110e2:	f015 f83d 	bl	8026160 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80110e6:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80110e8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80110ea:	a804      	add	r0, sp, #16
 80110ec:	f015 f885 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80110f0:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80110f2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80110f4:	a804      	add	r0, sp, #16
 80110f6:	f015 f880 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80110fa:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80110fc:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80110fe:	a804      	add	r0, sp, #16
 8011100:	f015 f87b 	bl	80261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011104:	21ff      	movs	r1, #255	; 0xff
 8011106:	a804      	add	r0, sp, #16
 8011108:	f014 ff66 	bl	8025fd8 <_ZN8touchgfx6Canvas6renderEh>
 801110c:	4b04      	ldr	r3, [pc, #16]	; (8011120 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 801110e:	9304      	str	r3, [sp, #16]
 8011110:	4604      	mov	r4, r0
 8011112:	a80c      	add	r0, sp, #48	; 0x30
 8011114:	f001 f9d6 	bl	80124c4 <_ZN8touchgfx7OutlineD1Ev>
 8011118:	4620      	mov	r0, r4
 801111a:	b020      	add	sp, #128	; 0x80
 801111c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011120:	0802a784 	.word	0x0802a784

08011124 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 8011124:	b508      	push	{r3, lr}
 8011126:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801112a:	b10b      	cbz	r3, 8011130 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 801112c:	f7f0 fc4f 	bl	80019ce <_ZNK8touchgfx8Drawable17invalidateContentEv>
 8011130:	bd08      	pop	{r3, pc}

08011132 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 8011132:	6803      	ldr	r3, [r0, #0]
 8011134:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 8011138:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801113a:	4718      	bx	r3

0801113c <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 801113c:	4770      	bx	lr

0801113e <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 801113e:	b510      	push	{r4, lr}
 8011140:	212c      	movs	r1, #44	; 0x2c
 8011142:	4604      	mov	r4, r0
 8011144:	f015 f8ec 	bl	8026320 <_ZdlPvj>
 8011148:	4620      	mov	r0, r4
 801114a:	bd10      	pop	{r4, pc}

0801114c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 801114c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8011150:	2bff      	cmp	r3, #255	; 0xff
 8011152:	b510      	push	{r4, lr}
 8011154:	d104      	bne.n	8011160 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 8011156:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 8011158:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801115c:	429a      	cmp	r2, r3
 801115e:	d105      	bne.n	801116c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8011160:	2300      	movs	r3, #0
 8011162:	8003      	strh	r3, [r0, #0]
 8011164:	8043      	strh	r3, [r0, #2]
 8011166:	8083      	strh	r3, [r0, #4]
 8011168:	80c3      	strh	r3, [r0, #6]
 801116a:	bd10      	pop	{r4, pc}
 801116c:	2300      	movs	r3, #0
 801116e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8011172:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8011176:	8003      	strh	r3, [r0, #0]
 8011178:	8043      	strh	r3, [r0, #2]
 801117a:	8084      	strh	r4, [r0, #4]
 801117c:	80c2      	strh	r2, [r0, #6]
 801117e:	e7f4      	b.n	801116a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08011180 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8011180:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011184:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8011188:	b087      	sub	sp, #28
 801118a:	4604      	mov	r4, r0
 801118c:	4689      	mov	r9, r1
 801118e:	b363      	cbz	r3, 80111ea <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8011190:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8011192:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011196:	429a      	cmp	r2, r3
 8011198:	d027      	beq.n	80111ea <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 801119a:	ad06      	add	r5, sp, #24
 801119c:	2700      	movs	r7, #0
 801119e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 80111a2:	4628      	mov	r0, r5
 80111a4:	f007 f93a 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80111a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 80111ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80111b0:	6823      	ldr	r3, [r4, #0]
 80111b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80111b6:	a904      	add	r1, sp, #16
 80111b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80111ba:	9704      	str	r7, [sp, #16]
 80111bc:	4620      	mov	r0, r4
 80111be:	4798      	blx	r3
 80111c0:	f7f3 f926 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 80111c4:	6803      	ldr	r3, [r0, #0]
 80111c6:	4606      	mov	r6, r0
 80111c8:	f8d3 800c 	ldr.w	r8, [r3, #12]
 80111cc:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80111ce:	f8ad 300c 	strh.w	r3, [sp, #12]
 80111d2:	4628      	mov	r0, r5
 80111d4:	f007 fa0e 	bl	80185f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80111d8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 80111dc:	9300      	str	r3, [sp, #0]
 80111de:	4601      	mov	r1, r0
 80111e0:	9701      	str	r7, [sp, #4]
 80111e2:	464b      	mov	r3, r9
 80111e4:	aa04      	add	r2, sp, #16
 80111e6:	4630      	mov	r0, r6
 80111e8:	47c0      	blx	r8
 80111ea:	b007      	add	sp, #28
 80111ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080111f0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 80111f0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80111f2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80111f6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80111fa:	6803      	ldr	r3, [r0, #0]
 80111fc:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 8011200:	f8ad 2004 	strh.w	r2, [sp, #4]
 8011204:	460d      	mov	r5, r1
 8011206:	2100      	movs	r1, #0
 8011208:	4604      	mov	r4, r0
 801120a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801120c:	9100      	str	r1, [sp, #0]
 801120e:	4669      	mov	r1, sp
 8011210:	4798      	blx	r3
 8011212:	4621      	mov	r1, r4
 8011214:	a802      	add	r0, sp, #8
 8011216:	f004 fe73 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801121a:	f7f3 f8f9 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 801121e:	6803      	ldr	r3, [r0, #0]
 8011220:	aa02      	add	r2, sp, #8
 8011222:	695e      	ldr	r6, [r3, #20]
 8011224:	4669      	mov	r1, sp
 8011226:	462b      	mov	r3, r5
 8011228:	47b0      	blx	r6
 801122a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801122e:	2800      	cmp	r0, #0
 8011230:	bf08      	it	eq
 8011232:	461d      	moveq	r5, r3
 8011234:	84e5      	strh	r5, [r4, #38]	; 0x26
 8011236:	b004      	add	sp, #16
 8011238:	bd70      	pop	{r4, r5, r6, pc}
	...

0801123c <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 801123c:	2200      	movs	r2, #0
 801123e:	8082      	strh	r2, [r0, #4]
 8011240:	80c2      	strh	r2, [r0, #6]
 8011242:	8102      	strh	r2, [r0, #8]
 8011244:	8142      	strh	r2, [r0, #10]
 8011246:	8182      	strh	r2, [r0, #12]
 8011248:	81c2      	strh	r2, [r0, #14]
 801124a:	8202      	strh	r2, [r0, #16]
 801124c:	8242      	strh	r2, [r0, #18]
 801124e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011252:	61c2      	str	r2, [r0, #28]
 8011254:	8402      	strh	r2, [r0, #32]
 8011256:	8442      	strh	r2, [r0, #34]	; 0x22
 8011258:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801125c:	2201      	movs	r2, #1
 801125e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011262:	4a04      	ldr	r2, [pc, #16]	; (8011274 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8011264:	6002      	str	r2, [r0, #0]
 8011266:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801126a:	84c2      	strh	r2, [r0, #38]	; 0x26
 801126c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8011270:	4770      	bx	lr
 8011272:	bf00      	nop
 8011274:	08029f74 	.word	0x08029f74

08011278 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011278:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801127c:	b12a      	cbz	r2, 801128a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801127e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011282:	b112      	cbz	r2, 801128a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011284:	6803      	ldr	r3, [r0, #0]
 8011286:	695b      	ldr	r3, [r3, #20]
 8011288:	4718      	bx	r3
 801128a:	4770      	bx	lr

0801128c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 801128c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011290:	4770      	bx	lr

08011292 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8011292:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8011296:	4770      	bx	lr

08011298 <_ZN8touchgfx13ScalableImageD1Ev>:
 8011298:	4770      	bx	lr

0801129a <_ZN8touchgfx13ScalableImageD0Ev>:
 801129a:	b510      	push	{r4, lr}
 801129c:	212c      	movs	r1, #44	; 0x2c
 801129e:	4604      	mov	r4, r0
 80112a0:	f015 f83e 	bl	8026320 <_ZdlPvj>
 80112a4:	4620      	mov	r0, r4
 80112a6:	bd10      	pop	{r4, pc}

080112a8 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 80112a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112aa:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80112ae:	2bff      	cmp	r3, #255	; 0xff
 80112b0:	b085      	sub	sp, #20
 80112b2:	4604      	mov	r4, r0
 80112b4:	460d      	mov	r5, r1
 80112b6:	d128      	bne.n	801130a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80112b8:	f101 0626 	add.w	r6, r1, #38	; 0x26
 80112bc:	4631      	mov	r1, r6
 80112be:	4668      	mov	r0, sp
 80112c0:	f007 f914 	bl	80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80112c4:	4630      	mov	r0, r6
 80112c6:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 80112ca:	f007 f8a7 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80112ce:	4287      	cmp	r7, r0
 80112d0:	d11b      	bne.n	801130a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80112d2:	4630      	mov	r0, r6
 80112d4:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 80112d8:	f007 f8d4 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80112dc:	4287      	cmp	r7, r0
 80112de:	d114      	bne.n	801130a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 80112e0:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 80112e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80112e8:	2100      	movs	r1, #0
 80112ea:	466b      	mov	r3, sp
 80112ec:	9102      	str	r1, [sp, #8]
 80112ee:	cb03      	ldmia	r3!, {r0, r1}
 80112f0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80112f4:	6020      	str	r0, [r4, #0]
 80112f6:	6061      	str	r1, [r4, #4]
 80112f8:	4620      	mov	r0, r4
 80112fa:	4619      	mov	r1, r3
 80112fc:	f8ad 200c 	strh.w	r2, [sp, #12]
 8011300:	f7fe fa64 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8011304:	4620      	mov	r0, r4
 8011306:	b005      	add	sp, #20
 8011308:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801130a:	2300      	movs	r3, #0
 801130c:	8023      	strh	r3, [r4, #0]
 801130e:	8063      	strh	r3, [r4, #2]
 8011310:	80a3      	strh	r3, [r4, #4]
 8011312:	80e3      	strh	r3, [r4, #6]
 8011314:	e7f6      	b.n	8011304 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>
	...

08011318 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 8011318:	b538      	push	{r3, r4, r5, lr}
 801131a:	2300      	movs	r3, #0
 801131c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8011320:	8083      	strh	r3, [r0, #4]
 8011322:	80c3      	strh	r3, [r0, #6]
 8011324:	8103      	strh	r3, [r0, #8]
 8011326:	8143      	strh	r3, [r0, #10]
 8011328:	8183      	strh	r3, [r0, #12]
 801132a:	81c3      	strh	r3, [r0, #14]
 801132c:	8203      	strh	r3, [r0, #16]
 801132e:	8243      	strh	r3, [r0, #18]
 8011330:	61c3      	str	r3, [r0, #28]
 8011332:	8403      	strh	r3, [r0, #32]
 8011334:	8443      	strh	r3, [r0, #34]	; 0x22
 8011336:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 801133a:	2501      	movs	r5, #1
 801133c:	4b08      	ldr	r3, [pc, #32]	; (8011360 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 801133e:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 8011342:	6003      	str	r3, [r0, #0]
 8011344:	880b      	ldrh	r3, [r1, #0]
 8011346:	84c3      	strh	r3, [r0, #38]	; 0x26
 8011348:	23ff      	movs	r3, #255	; 0xff
 801134a:	4604      	mov	r4, r0
 801134c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011350:	f000 ff52 	bl	80121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011354:	4b03      	ldr	r3, [pc, #12]	; (8011364 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8011356:	6023      	str	r3, [r4, #0]
 8011358:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801135c:	4620      	mov	r0, r4
 801135e:	bd38      	pop	{r3, r4, r5, pc}
 8011360:	0802a22c 	.word	0x0802a22c
 8011364:	08029fe4 	.word	0x08029fe4

08011368 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8011368:	4603      	mov	r3, r0
 801136a:	3026      	adds	r0, #38	; 0x26
 801136c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8011370:	b90b      	cbnz	r3, 8011376 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8011372:	f004 be69 	b.w	8016048 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8011376:	f004 be77 	b.w	8016068 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801137c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801137c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011380:	4604      	mov	r4, r0
 8011382:	b0b3      	sub	sp, #204	; 0xcc
 8011384:	469b      	mov	fp, r3
 8011386:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801138a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801138e:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 8011392:	ab11      	add	r3, sp, #68	; 0x44
 8011394:	2500      	movs	r5, #0
 8011396:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801139a:	4618      	mov	r0, r3
 801139c:	9206      	str	r2, [sp, #24]
 801139e:	9511      	str	r5, [sp, #68]	; 0x44
 80113a0:	9307      	str	r3, [sp, #28]
 80113a2:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 80113a6:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 80113aa:	f7fe fa0f 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 80113ae:	9b07      	ldr	r3, [sp, #28]
 80113b0:	e893 0003 	ldmia.w	r3, {r0, r1}
 80113b4:	ad13      	add	r5, sp, #76	; 0x4c
 80113b6:	e885 0003 	stmia.w	r5, {r0, r1}
 80113ba:	6821      	ldr	r1, [r4, #0]
 80113bc:	4620      	mov	r0, r4
 80113be:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80113c0:	4629      	mov	r1, r5
 80113c2:	47b0      	blx	r6
 80113c4:	4621      	mov	r1, r4
 80113c6:	a815      	add	r0, sp, #84	; 0x54
 80113c8:	f004 fd9a 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80113cc:	a815      	add	r0, sp, #84	; 0x54
 80113ce:	f003 fa5f 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80113d2:	9b07      	ldr	r3, [sp, #28]
 80113d4:	1d26      	adds	r6, r4, #4
 80113d6:	4618      	mov	r0, r3
 80113d8:	4631      	mov	r1, r6
 80113da:	f003 fa9d 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80113de:	4628      	mov	r0, r5
 80113e0:	f104 0526 	add.w	r5, r4, #38	; 0x26
 80113e4:	f003 fa54 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80113e8:	4628      	mov	r0, r5
 80113ea:	f007 f903 	bl	80185f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 80113ee:	9007      	str	r0, [sp, #28]
 80113f0:	2800      	cmp	r0, #0
 80113f2:	f000 80ce 	beq.w	8011592 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 80113f6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80113fa:	920c      	str	r2, [sp, #48]	; 0x30
 80113fc:	f8da 2000 	ldr.w	r2, [sl]
 8011400:	f8db 1000 	ldr.w	r1, [fp]
 8011404:	920d      	str	r2, [sp, #52]	; 0x34
 8011406:	f8da 2004 	ldr.w	r2, [sl, #4]
 801140a:	9109      	str	r1, [sp, #36]	; 0x24
 801140c:	920e      	str	r2, [sp, #56]	; 0x38
 801140e:	f8db 1004 	ldr.w	r1, [fp, #4]
 8011412:	f8da 2008 	ldr.w	r2, [sl, #8]
 8011416:	910a      	str	r1, [sp, #40]	; 0x28
 8011418:	920f      	str	r2, [sp, #60]	; 0x3c
 801141a:	f8db 1008 	ldr.w	r1, [fp, #8]
 801141e:	f8da 200c 	ldr.w	r2, [sl, #12]
 8011422:	910b      	str	r1, [sp, #44]	; 0x2c
 8011424:	9210      	str	r2, [sp, #64]	; 0x40
 8011426:	a90d      	add	r1, sp, #52	; 0x34
 8011428:	4632      	mov	r2, r6
 801142a:	a809      	add	r0, sp, #36	; 0x24
 801142c:	f003 fa58 	bl	80148e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8011430:	4632      	mov	r2, r6
 8011432:	a90e      	add	r1, sp, #56	; 0x38
 8011434:	a80a      	add	r0, sp, #40	; 0x28
 8011436:	f003 fa53 	bl	80148e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801143a:	4632      	mov	r2, r6
 801143c:	a90f      	add	r1, sp, #60	; 0x3c
 801143e:	a80b      	add	r0, sp, #44	; 0x2c
 8011440:	f003 fa4e 	bl	80148e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8011444:	4632      	mov	r2, r6
 8011446:	a910      	add	r1, sp, #64	; 0x40
 8011448:	a80c      	add	r0, sp, #48	; 0x30
 801144a:	f003 fa49 	bl	80148e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 801144e:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8011452:	ed97 3a00 	vldr	s6, [r7]
 8011456:	edd7 4a01 	vldr	s9, [r7, #4]
 801145a:	ed99 2a00 	vldr	s4, [r9]
 801145e:	edd8 2a00 	vldr	s5, [r8]
 8011462:	edd9 3a01 	vldr	s7, [r9, #4]
 8011466:	ed98 4a01 	vldr	s8, [r8, #4]
 801146a:	ed99 5a02 	vldr	s10, [r9, #8]
 801146e:	edd8 5a02 	vldr	s11, [r8, #8]
 8011472:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8011476:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801147a:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 801147e:	eef0 6a67 	vmov.f32	s13, s15
 8011482:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8011486:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 801148a:	eeb0 7a67 	vmov.f32	s14, s15
 801148e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8011492:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 8011496:	eeb0 6a67 	vmov.f32	s12, s15
 801149a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801149e:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 80114a2:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 80114a6:	ee16 6a10 	vmov	r6, s12
 80114aa:	eeb0 6a67 	vmov.f32	s12, s15
 80114ae:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80114b2:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 80114b6:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 80114ba:	ee16 0a10 	vmov	r0, s12
 80114be:	eeb0 6a67 	vmov.f32	s12, s15
 80114c2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80114c6:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 80114ca:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 80114ce:	ee16 1a10 	vmov	r1, s12
 80114d2:	eeb0 6a67 	vmov.f32	s12, s15
 80114d6:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80114da:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 80114de:	ee16 2a10 	vmov	r2, s12
 80114e2:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 80114e6:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 80114ea:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80114ee:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80114f2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80114f6:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80114fa:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80114fe:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8011502:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8011506:	9624      	str	r6, [sp, #144]	; 0x90
 8011508:	68ff      	ldr	r7, [r7, #12]
 801150a:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 801150e:	922d      	str	r2, [sp, #180]	; 0xb4
 8011510:	4a21      	ldr	r2, [pc, #132]	; (8011598 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 8011512:	9b06      	ldr	r3, [sp, #24]
 8011514:	8812      	ldrh	r2, [r2, #0]
 8011516:	9317      	str	r3, [sp, #92]	; 0x5c
 8011518:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 801151c:	9b07      	ldr	r3, [sp, #28]
 801151e:	9218      	str	r2, [sp, #96]	; 0x60
 8011520:	4628      	mov	r0, r5
 8011522:	9319      	str	r3, [sp, #100]	; 0x64
 8011524:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 8011528:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 801152c:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8011530:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8011534:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8011538:	9731      	str	r7, [sp, #196]	; 0xc4
 801153a:	f007 f88b 	bl	8018654 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801153e:	901a      	str	r0, [sp, #104]	; 0x68
 8011540:	4628      	mov	r0, r5
 8011542:	f006 ff6b 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011546:	901b      	str	r0, [sp, #108]	; 0x6c
 8011548:	4628      	mov	r0, r5
 801154a:	f006 ff9b 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801154e:	901c      	str	r0, [sp, #112]	; 0x70
 8011550:	4628      	mov	r0, r5
 8011552:	f006 ff63 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011556:	4b11      	ldr	r3, [pc, #68]	; (801159c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 8011558:	901d      	str	r0, [sp, #116]	; 0x74
 801155a:	681b      	ldr	r3, [r3, #0]
 801155c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011560:	b10a      	cbz	r2, 8011566 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 8011562:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8011564:	b905      	cbnz	r5, 8011568 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 8011566:	689d      	ldr	r5, [r3, #8]
 8011568:	682b      	ldr	r3, [r5, #0]
 801156a:	4620      	mov	r0, r4
 801156c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 801156e:	f7ff fefb 	bl	8011368 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8011572:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011576:	9304      	str	r3, [sp, #16]
 8011578:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801157c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8011580:	ab13      	add	r3, sp, #76	; 0x4c
 8011582:	9301      	str	r3, [sp, #4]
 8011584:	ab15      	add	r3, sp, #84	; 0x54
 8011586:	9300      	str	r3, [sp, #0]
 8011588:	aa1e      	add	r2, sp, #120	; 0x78
 801158a:	ab19      	add	r3, sp, #100	; 0x64
 801158c:	a917      	add	r1, sp, #92	; 0x5c
 801158e:	4628      	mov	r0, r5
 8011590:	47b0      	blx	r6
 8011592:	b033      	add	sp, #204	; 0xcc
 8011594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011598:	2000ef16 	.word	0x2000ef16
 801159c:	2000ef1c 	.word	0x2000ef1c

080115a0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 80115a0:	b570      	push	{r4, r5, r6, lr}
 80115a2:	ed2d 8b04 	vpush	{d8-d9}
 80115a6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80115aa:	b098      	sub	sp, #96	; 0x60
 80115ac:	4604      	mov	r4, r0
 80115ae:	460e      	mov	r6, r1
 80115b0:	2b00      	cmp	r3, #0
 80115b2:	d065      	beq.n	8011680 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 80115b4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 80115b8:	ed9f 8a38 	vldr	s16, [pc, #224]	; 801169c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 80115bc:	ee09 3a10 	vmov	s18, r3
 80115c0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80115c4:	f100 0526 	add.w	r5, r0, #38	; 0x26
 80115c8:	ee08 3a90 	vmov	s17, r3
 80115cc:	4628      	mov	r0, r5
 80115ce:	4b34      	ldr	r3, [pc, #208]	; (80116a0 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 80115d0:	930c      	str	r3, [sp, #48]	; 0x30
 80115d2:	930d      	str	r3, [sp, #52]	; 0x34
 80115d4:	930e      	str	r3, [sp, #56]	; 0x38
 80115d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80115d8:	f006 ff20 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80115dc:	ee07 0a90 	vmov	s15, r0
 80115e0:	4628      	mov	r0, r5
 80115e2:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 80115e6:	f006 ff4d 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80115ea:	4b2e      	ldr	r3, [pc, #184]	; (80116a4 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 80115ec:	781b      	ldrb	r3, [r3, #0]
 80115ee:	ee07 0a90 	vmov	s15, r0
 80115f2:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 80115f6:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 80115fa:	2b01      	cmp	r3, #1
 80115fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8011600:	ee39 9a08 	vadd.f32	s18, s18, s16
 8011604:	ee78 8a88 	vadd.f32	s17, s17, s16
 8011608:	eef0 7a48 	vmov.f32	s15, s16
 801160c:	d13c      	bne.n	8011688 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 801160e:	eef0 6a69 	vmov.f32	s13, s19
 8011612:	eeb0 6a47 	vmov.f32	s12, s14
 8011616:	eef0 5a47 	vmov.f32	s11, s14
 801161a:	ee19 3a90 	vmov	r3, s19
 801161e:	eeb0 7a48 	vmov.f32	s14, s16
 8011622:	eef0 9a48 	vmov.f32	s19, s16
 8011626:	9314      	str	r3, [sp, #80]	; 0x50
 8011628:	ab14      	add	r3, sp, #80	; 0x50
 801162a:	9303      	str	r3, [sp, #12]
 801162c:	ab10      	add	r3, sp, #64	; 0x40
 801162e:	9302      	str	r3, [sp, #8]
 8011630:	ab0c      	add	r3, sp, #48	; 0x30
 8011632:	9301      	str	r3, [sp, #4]
 8011634:	ab08      	add	r3, sp, #32
 8011636:	9300      	str	r3, [sp, #0]
 8011638:	2200      	movs	r2, #0
 801163a:	ab04      	add	r3, sp, #16
 801163c:	4631      	mov	r1, r6
 801163e:	4620      	mov	r0, r4
 8011640:	edcd 7a04 	vstr	s15, [sp, #16]
 8011644:	ed8d 9a05 	vstr	s18, [sp, #20]
 8011648:	ed8d 9a06 	vstr	s18, [sp, #24]
 801164c:	edcd 7a07 	vstr	s15, [sp, #28]
 8011650:	edcd 7a08 	vstr	s15, [sp, #32]
 8011654:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 8011658:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 801165c:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 8011660:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8011664:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 8011668:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 801166c:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011670:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8011674:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8011678:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 801167c:	f7ff fe7e 	bl	801137c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8011680:	b018      	add	sp, #96	; 0x60
 8011682:	ecbd 8b04 	vpop	{d8-d9}
 8011686:	bd70      	pop	{r4, r5, r6, pc}
 8011688:	eef0 6a47 	vmov.f32	s13, s14
 801168c:	eef0 5a69 	vmov.f32	s11, s19
 8011690:	eeb0 6a48 	vmov.f32	s12, s16
 8011694:	ee18 3a10 	vmov	r3, s16
 8011698:	e7c5      	b.n	8011626 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 801169a:	bf00      	nop
 801169c:	00000000 	.word	0x00000000
 80116a0:	42c80000 	.word	0x42c80000
 80116a4:	2000ef14 	.word	0x2000ef14

080116a8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 80116a8:	2000      	movs	r0, #0
 80116aa:	4770      	bx	lr

080116ac <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 80116ac:	4b07      	ldr	r3, [pc, #28]	; (80116cc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 80116ae:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80116b0:	881b      	ldrh	r3, [r3, #0]
 80116b2:	4293      	cmp	r3, r2
 80116b4:	bf81      	itttt	hi
 80116b6:	4b06      	ldrhi	r3, [pc, #24]	; (80116d0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 80116b8:	681b      	ldrhi	r3, [r3, #0]
 80116ba:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 80116be:	7858      	ldrbhi	r0, [r3, #1]
 80116c0:	bf8c      	ite	hi
 80116c2:	f000 0003 	andhi.w	r0, r0, #3
 80116c6:	2000      	movls	r0, #0
 80116c8:	4770      	bx	lr
 80116ca:	bf00      	nop
 80116cc:	2000ef78 	.word	0x2000ef78
 80116d0:	2000ef74 	.word	0x2000ef74

080116d4 <_ZN8touchgfx8TextAreaD1Ev>:
 80116d4:	4770      	bx	lr
	...

080116d8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 80116d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116dc:	4b10      	ldr	r3, [pc, #64]	; (8011720 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 80116de:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80116e0:	881b      	ldrh	r3, [r3, #0]
 80116e2:	428b      	cmp	r3, r1
 80116e4:	4604      	mov	r4, r0
 80116e6:	d918      	bls.n	801171a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 80116e8:	6803      	ldr	r3, [r0, #0]
 80116ea:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 80116ec:	4b0d      	ldr	r3, [pc, #52]	; (8011724 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 80116ee:	6818      	ldr	r0, [r3, #0]
 80116f0:	f7f6 fbe6 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80116f4:	6823      	ldr	r3, [r4, #0]
 80116f6:	4606      	mov	r6, r0
 80116f8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80116fa:	4620      	mov	r0, r4
 80116fc:	4798      	blx	r3
 80116fe:	6823      	ldr	r3, [r4, #0]
 8011700:	4607      	mov	r7, r0
 8011702:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011706:	4620      	mov	r0, r4
 8011708:	4798      	blx	r3
 801170a:	463a      	mov	r2, r7
 801170c:	4603      	mov	r3, r0
 801170e:	4631      	mov	r1, r6
 8011710:	4620      	mov	r0, r4
 8011712:	46ac      	mov	ip, r5
 8011714:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011718:	4760      	bx	ip
 801171a:	2000      	movs	r0, #0
 801171c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011720:	2000ef78 	.word	0x2000ef78
 8011724:	2000ef80 	.word	0x2000ef80

08011728 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011728:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801172c:	4b17      	ldr	r3, [pc, #92]	; (801178c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801172e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011730:	881b      	ldrh	r3, [r3, #0]
 8011732:	428b      	cmp	r3, r1
 8011734:	4604      	mov	r4, r0
 8011736:	d926      	bls.n	8011786 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011738:	4b15      	ldr	r3, [pc, #84]	; (8011790 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801173a:	681b      	ldr	r3, [r3, #0]
 801173c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011740:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011744:	4b13      	ldr	r3, [pc, #76]	; (8011794 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011746:	7855      	ldrb	r5, [r2, #1]
 8011748:	681b      	ldr	r3, [r3, #0]
 801174a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801174e:	6833      	ldr	r3, [r6, #0]
 8011750:	69df      	ldr	r7, [r3, #28]
 8011752:	4b11      	ldr	r3, [pc, #68]	; (8011798 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011754:	6818      	ldr	r0, [r3, #0]
 8011756:	f7f6 fbb3 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 801175a:	6823      	ldr	r3, [r4, #0]
 801175c:	4680      	mov	r8, r0
 801175e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011760:	4620      	mov	r0, r4
 8011762:	4798      	blx	r3
 8011764:	6823      	ldr	r3, [r4, #0]
 8011766:	4681      	mov	r9, r0
 8011768:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801176c:	4620      	mov	r0, r4
 801176e:	4798      	blx	r3
 8011770:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011774:	9000      	str	r0, [sp, #0]
 8011776:	464b      	mov	r3, r9
 8011778:	4642      	mov	r2, r8
 801177a:	4629      	mov	r1, r5
 801177c:	4630      	mov	r0, r6
 801177e:	47b8      	blx	r7
 8011780:	b003      	add	sp, #12
 8011782:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011786:	2000      	movs	r0, #0
 8011788:	e7fa      	b.n	8011780 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801178a:	bf00      	nop
 801178c:	2000ef78 	.word	0x2000ef78
 8011790:	2000ef74 	.word	0x2000ef74
 8011794:	2000ef7c 	.word	0x2000ef7c
 8011798:	2000ef80 	.word	0x2000ef80

0801179c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801179c:	b40e      	push	{r1, r2, r3}
 801179e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80117a2:	4b2f      	ldr	r3, [pc, #188]	; (8011860 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 80117a4:	881a      	ldrh	r2, [r3, #0]
 80117a6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 80117a8:	429a      	cmp	r2, r3
 80117aa:	b09d      	sub	sp, #116	; 0x74
 80117ac:	4604      	mov	r4, r0
 80117ae:	d954      	bls.n	801185a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 80117b0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011864 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 80117b4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011868 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 80117b8:	aa26      	add	r2, sp, #152	; 0x98
 80117ba:	9202      	str	r2, [sp, #8]
 80117bc:	f8d9 2000 	ldr.w	r2, [r9]
 80117c0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80117c4:	f8d8 3000 	ldr.w	r3, [r8]
 80117c8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80117cc:	682b      	ldr	r3, [r5, #0]
 80117ce:	4628      	mov	r0, r5
 80117d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80117d2:	4798      	blx	r3
 80117d4:	b207      	sxth	r7, r0
 80117d6:	4606      	mov	r6, r0
 80117d8:	a803      	add	r0, sp, #12
 80117da:	f005 f89f 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 80117de:	682b      	ldr	r3, [r5, #0]
 80117e0:	4628      	mov	r0, r5
 80117e2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80117e4:	4798      	blx	r3
 80117e6:	682b      	ldr	r3, [r5, #0]
 80117e8:	4682      	mov	sl, r0
 80117ea:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80117ec:	4628      	mov	r0, r5
 80117ee:	4798      	blx	r3
 80117f0:	4653      	mov	r3, sl
 80117f2:	9000      	str	r0, [sp, #0]
 80117f4:	9a02      	ldr	r2, [sp, #8]
 80117f6:	9925      	ldr	r1, [sp, #148]	; 0x94
 80117f8:	a803      	add	r0, sp, #12
 80117fa:	f005 f8ea 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80117fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011800:	f8d9 3000 	ldr.w	r3, [r9]
 8011804:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011808:	8925      	ldrh	r5, [r4, #8]
 801180a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801180e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011812:	eba5 050c 	sub.w	r5, r5, ip
 8011816:	784a      	ldrb	r2, [r1, #1]
 8011818:	f8d8 3000 	ldr.w	r3, [r8]
 801181c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011820:	b22d      	sxth	r5, r5
 8011822:	9500      	str	r5, [sp, #0]
 8011824:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011828:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801182c:	a803      	add	r0, sp, #12
 801182e:	f002 fd35 	bl	801429c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011832:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011836:	18b9      	adds	r1, r7, r2
 8011838:	2900      	cmp	r1, #0
 801183a:	b203      	sxth	r3, r0
 801183c:	dd0b      	ble.n	8011856 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801183e:	3b01      	subs	r3, #1
 8011840:	fb13 f302 	smulbb	r3, r3, r2
 8011844:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011848:	b21f      	sxth	r7, r3
 801184a:	4638      	mov	r0, r7
 801184c:	b01d      	add	sp, #116	; 0x74
 801184e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011852:	b003      	add	sp, #12
 8011854:	4770      	bx	lr
 8011856:	2b00      	cmp	r3, #0
 8011858:	dcf7      	bgt.n	801184a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801185a:	2700      	movs	r7, #0
 801185c:	e7f5      	b.n	801184a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801185e:	bf00      	nop
 8011860:	2000ef78 	.word	0x2000ef78
 8011864:	2000ef74 	.word	0x2000ef74
 8011868:	2000ef7c 	.word	0x2000ef7c

0801186c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801186c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011870:	4bbc      	ldr	r3, [pc, #752]	; (8011b64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011872:	460c      	mov	r4, r1
 8011874:	881b      	ldrh	r3, [r3, #0]
 8011876:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011878:	428b      	cmp	r3, r1
 801187a:	b0a9      	sub	sp, #164	; 0xa4
 801187c:	4680      	mov	r8, r0
 801187e:	d809      	bhi.n	8011894 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011880:	2300      	movs	r3, #0
 8011882:	f04f 32ff 	mov.w	r2, #4294967295
 8011886:	e9c0 3200 	strd	r3, r2, [r0]
 801188a:	6083      	str	r3, [r0, #8]
 801188c:	4640      	mov	r0, r8
 801188e:	b029      	add	sp, #164	; 0xa4
 8011890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011894:	4eb4      	ldr	r6, [pc, #720]	; (8011b68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011896:	6833      	ldr	r3, [r6, #0]
 8011898:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801189c:	4bb3      	ldr	r3, [pc, #716]	; (8011b6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 801189e:	681b      	ldr	r3, [r3, #0]
 80118a0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80118a4:	4bb2      	ldr	r3, [pc, #712]	; (8011b70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80118a6:	6818      	ldr	r0, [r3, #0]
 80118a8:	f7f6 fb0a 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80118ac:	682b      	ldr	r3, [r5, #0]
 80118ae:	4681      	mov	r9, r0
 80118b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80118b2:	4628      	mov	r0, r5
 80118b4:	4798      	blx	r3
 80118b6:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 80118b8:	b203      	sxth	r3, r0
 80118ba:	4407      	add	r7, r0
 80118bc:	9304      	str	r3, [sp, #16]
 80118be:	b2bb      	uxth	r3, r7
 80118c0:	9303      	str	r3, [sp, #12]
 80118c2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80118c6:	4682      	mov	sl, r0
 80118c8:	a80f      	add	r0, sp, #60	; 0x3c
 80118ca:	2b00      	cmp	r3, #0
 80118cc:	f040 80a6 	bne.w	8011a1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 80118d0:	f005 f824 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 80118d4:	682b      	ldr	r3, [r5, #0]
 80118d6:	4628      	mov	r0, r5
 80118d8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80118da:	4798      	blx	r3
 80118dc:	682b      	ldr	r3, [r5, #0]
 80118de:	4606      	mov	r6, r0
 80118e0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80118e2:	4628      	mov	r0, r5
 80118e4:	4798      	blx	r3
 80118e6:	6823      	ldr	r3, [r4, #0]
 80118e8:	4607      	mov	r7, r0
 80118ea:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80118ec:	4620      	mov	r0, r4
 80118ee:	4798      	blx	r3
 80118f0:	6823      	ldr	r3, [r4, #0]
 80118f2:	4683      	mov	fp, r0
 80118f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80118f8:	4620      	mov	r0, r4
 80118fa:	4798      	blx	r3
 80118fc:	463b      	mov	r3, r7
 80118fe:	e9cd b000 	strd	fp, r0, [sp]
 8011902:	4649      	mov	r1, r9
 8011904:	4632      	mov	r2, r6
 8011906:	a80f      	add	r0, sp, #60	; 0x3c
 8011908:	f005 f878 	bl	80169fc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801190c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011910:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011b68 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011914:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011918:	f04f 0600 	mov.w	r6, #0
 801191c:	bf0c      	ite	eq
 801191e:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011922:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011926:	4637      	mov	r7, r6
 8011928:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801192a:	f8db 3000 	ldr.w	r3, [fp]
 801192e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011932:	4629      	mov	r1, r5
 8011934:	785b      	ldrb	r3, [r3, #1]
 8011936:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801193a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801193e:	a80f      	add	r0, sp, #60	; 0x3c
 8011940:	f002 f9c7 	bl	8013cd2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011944:	9b03      	ldr	r3, [sp, #12]
 8011946:	4286      	cmp	r6, r0
 8011948:	bfb8      	it	lt
 801194a:	4606      	movlt	r6, r0
 801194c:	3701      	adds	r7, #1
 801194e:	eba9 0903 	sub.w	r9, r9, r3
 8011952:	a80f      	add	r0, sp, #60	; 0x3c
 8011954:	b236      	sxth	r6, r6
 8011956:	b2bf      	uxth	r7, r7
 8011958:	fa0f f989 	sxth.w	r9, r9
 801195c:	f005 f805 	bl	801696a <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011960:	b918      	cbnz	r0, 801196a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011962:	7a2b      	ldrb	r3, [r5, #8]
 8011964:	444b      	add	r3, r9
 8011966:	2b00      	cmp	r3, #0
 8011968:	dcde      	bgt.n	8011928 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 801196a:	9b03      	ldr	r3, [sp, #12]
 801196c:	9a04      	ldr	r2, [sp, #16]
 801196e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011972:	fb13 f707 	smulbb	r7, r3, r7
 8011976:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011978:	1aff      	subs	r7, r7, r3
 801197a:	b2bf      	uxth	r7, r7
 801197c:	b23b      	sxth	r3, r7
 801197e:	429a      	cmp	r2, r3
 8011980:	bfa8      	it	ge
 8011982:	4657      	movge	r7, sl
 8011984:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011988:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801198c:	6823      	ldr	r3, [r4, #0]
 801198e:	bf08      	it	eq
 8011990:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011994:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011996:	bf18      	it	ne
 8011998:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 801199c:	4620      	mov	r0, r4
 801199e:	4798      	blx	r3
 80119a0:	444f      	add	r7, r9
 80119a2:	fa1f f987 	uxth.w	r9, r7
 80119a6:	2801      	cmp	r0, #1
 80119a8:	fa0f f789 	sxth.w	r7, r9
 80119ac:	b2b3      	uxth	r3, r6
 80119ae:	f000 80e1 	beq.w	8011b74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 80119b2:	2802      	cmp	r0, #2
 80119b4:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 80119b8:	f000 80e2 	beq.w	8011b80 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 80119bc:	7aea      	ldrb	r2, [r5, #11]
 80119be:	7b2d      	ldrb	r5, [r5, #12]
 80119c0:	b236      	sxth	r6, r6
 80119c2:	1ab6      	subs	r6, r6, r2
 80119c4:	442a      	add	r2, r5
 80119c6:	4413      	add	r3, r2
 80119c8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 80119cc:	fa1f fa86 	uxth.w	sl, r6
 80119d0:	b29b      	uxth	r3, r3
 80119d2:	2a02      	cmp	r2, #2
 80119d4:	fa0f fb8a 	sxth.w	fp, sl
 80119d8:	b21e      	sxth	r6, r3
 80119da:	f000 80d5 	beq.w	8011b88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 80119de:	2a03      	cmp	r2, #3
 80119e0:	f000 80dd 	beq.w	8011b9e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 80119e4:	2a01      	cmp	r2, #1
 80119e6:	f040 80e5 	bne.w	8011bb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 80119ea:	8925      	ldrh	r5, [r4, #8]
 80119ec:	4633      	mov	r3, r6
 80119ee:	eba5 0909 	sub.w	r9, r5, r9
 80119f2:	463e      	mov	r6, r7
 80119f4:	465d      	mov	r5, fp
 80119f6:	461f      	mov	r7, r3
 80119f8:	fa0f fb89 	sxth.w	fp, r9
 80119fc:	4b5c      	ldr	r3, [pc, #368]	; (8011b70 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 80119fe:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011a00:	6818      	ldr	r0, [r3, #0]
 8011a02:	f7f6 fa5d 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8011a06:	f8a8 b000 	strh.w	fp, [r8]
 8011a0a:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011a0e:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011a12:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011a16:	f8c8 0008 	str.w	r0, [r8, #8]
 8011a1a:	e737      	b.n	801188c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011a1c:	f004 ff7e 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8011a20:	682b      	ldr	r3, [r5, #0]
 8011a22:	4628      	mov	r0, r5
 8011a24:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a26:	4798      	blx	r3
 8011a28:	682b      	ldr	r3, [r5, #0]
 8011a2a:	4607      	mov	r7, r0
 8011a2c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011a2e:	4628      	mov	r0, r5
 8011a30:	4798      	blx	r3
 8011a32:	6823      	ldr	r3, [r4, #0]
 8011a34:	4683      	mov	fp, r0
 8011a36:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a38:	4620      	mov	r0, r4
 8011a3a:	4798      	blx	r3
 8011a3c:	6822      	ldr	r2, [r4, #0]
 8011a3e:	9005      	str	r0, [sp, #20]
 8011a40:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011a44:	4620      	mov	r0, r4
 8011a46:	4790      	blx	r2
 8011a48:	9b05      	ldr	r3, [sp, #20]
 8011a4a:	9001      	str	r0, [sp, #4]
 8011a4c:	463a      	mov	r2, r7
 8011a4e:	4649      	mov	r1, r9
 8011a50:	9300      	str	r3, [sp, #0]
 8011a52:	a80f      	add	r0, sp, #60	; 0x3c
 8011a54:	465b      	mov	r3, fp
 8011a56:	f004 ffd1 	bl	80169fc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011a5a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011a5e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011a62:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011a64:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011a68:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011a6c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011a70:	bf0a      	itet	eq
 8011a72:	464a      	moveq	r2, r9
 8011a74:	461a      	movne	r2, r3
 8011a76:	4699      	moveq	r9, r3
 8011a78:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011a7c:	1ad2      	subs	r2, r2, r3
 8011a7e:	6833      	ldr	r3, [r6, #0]
 8011a80:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011a84:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011a88:	af0f      	add	r7, sp, #60	; 0x3c
 8011a8a:	7859      	ldrb	r1, [r3, #1]
 8011a8c:	9707      	str	r7, [sp, #28]
 8011a8e:	2300      	movs	r3, #0
 8011a90:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011a94:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a98:	f88d 1020 	strb.w	r1, [sp, #32]
 8011a9c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011aa0:	9509      	str	r5, [sp, #36]	; 0x24
 8011aa2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011aa6:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011aaa:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011aae:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011ab2:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011ab6:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011aba:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011abe:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011ac2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011ac6:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011aca:	b350      	cbz	r0, 8011b22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011acc:	682b      	ldr	r3, [r5, #0]
 8011ace:	4628      	mov	r0, r5
 8011ad0:	695b      	ldr	r3, [r3, #20]
 8011ad2:	4798      	blx	r3
 8011ad4:	4607      	mov	r7, r0
 8011ad6:	b320      	cbz	r0, 8011b22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ad8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ada:	6803      	ldr	r3, [r0, #0]
 8011adc:	4639      	mov	r1, r7
 8011ade:	68db      	ldr	r3, [r3, #12]
 8011ae0:	4798      	blx	r3
 8011ae2:	4606      	mov	r6, r0
 8011ae4:	b1e8      	cbz	r0, 8011b22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011ae6:	7b43      	ldrb	r3, [r0, #13]
 8011ae8:	7a82      	ldrb	r2, [r0, #10]
 8011aea:	005b      	lsls	r3, r3, #1
 8011aec:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011af0:	4313      	orrs	r3, r2
 8011af2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011af6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011afa:	2b06      	cmp	r3, #6
 8011afc:	d111      	bne.n	8011b22 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011afe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011b00:	6803      	ldr	r3, [r0, #0]
 8011b02:	4632      	mov	r2, r6
 8011b04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011b06:	4639      	mov	r1, r7
 8011b08:	4798      	blx	r3
 8011b0a:	7b73      	ldrb	r3, [r6, #13]
 8011b0c:	005b      	lsls	r3, r3, #1
 8011b0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011b12:	7ab3      	ldrb	r3, [r6, #10]
 8011b14:	4313      	orrs	r3, r2
 8011b16:	4418      	add	r0, r3
 8011b18:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011b1c:	4418      	add	r0, r3
 8011b1e:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011b22:	2600      	movs	r6, #0
 8011b24:	4637      	mov	r7, r6
 8011b26:	a806      	add	r0, sp, #24
 8011b28:	f002 fab4 	bl	8014094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011b2c:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011b30:	9b03      	ldr	r3, [sp, #12]
 8011b32:	4286      	cmp	r6, r0
 8011b34:	eba9 0903 	sub.w	r9, r9, r3
 8011b38:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011b3c:	bfb8      	it	lt
 8011b3e:	4606      	movlt	r6, r0
 8011b40:	3701      	adds	r7, #1
 8011b42:	b236      	sxth	r6, r6
 8011b44:	b2bf      	uxth	r7, r7
 8011b46:	fa0f f989 	sxth.w	r9, r9
 8011b4a:	2b00      	cmp	r3, #0
 8011b4c:	f43f af0d 	beq.w	801196a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b50:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011b54:	2b00      	cmp	r3, #0
 8011b56:	f47f af08 	bne.w	801196a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b5a:	7a2b      	ldrb	r3, [r5, #8]
 8011b5c:	444b      	add	r3, r9
 8011b5e:	2b00      	cmp	r3, #0
 8011b60:	dce1      	bgt.n	8011b26 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011b62:	e702      	b.n	801196a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011b64:	2000ef78 	.word	0x2000ef78
 8011b68:	2000ef74 	.word	0x2000ef74
 8011b6c:	2000ef7c 	.word	0x2000ef7c
 8011b70:	2000ef80 	.word	0x2000ef80
 8011b74:	ebaa 0606 	sub.w	r6, sl, r6
 8011b78:	2002      	movs	r0, #2
 8011b7a:	fb96 f6f0 	sdiv	r6, r6, r0
 8011b7e:	e71d      	b.n	80119bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b80:	441e      	add	r6, r3
 8011b82:	ebaa 0606 	sub.w	r6, sl, r6
 8011b86:	e719      	b.n	80119bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011b88:	8925      	ldrh	r5, [r4, #8]
 8011b8a:	1aed      	subs	r5, r5, r3
 8011b8c:	eba5 050a 	sub.w	r5, r5, sl
 8011b90:	fa0f fb85 	sxth.w	fp, r5
 8011b94:	8965      	ldrh	r5, [r4, #10]
 8011b96:	eba5 0509 	sub.w	r5, r5, r9
 8011b9a:	b22d      	sxth	r5, r5
 8011b9c:	e72e      	b.n	80119fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011b9e:	8965      	ldrh	r5, [r4, #10]
 8011ba0:	1aed      	subs	r5, r5, r3
 8011ba2:	eba5 050a 	sub.w	r5, r5, sl
 8011ba6:	4633      	mov	r3, r6
 8011ba8:	b22d      	sxth	r5, r5
 8011baa:	463e      	mov	r6, r7
 8011bac:	f04f 0b00 	mov.w	fp, #0
 8011bb0:	461f      	mov	r7, r3
 8011bb2:	e723      	b.n	80119fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011bb4:	2500      	movs	r5, #0
 8011bb6:	e721      	b.n	80119fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011bb8 <_ZN8touchgfx8TextAreaD0Ev>:
 8011bb8:	b510      	push	{r4, lr}
 8011bba:	2148      	movs	r1, #72	; 0x48
 8011bbc:	4604      	mov	r4, r0
 8011bbe:	f014 fbaf 	bl	8026320 <_ZdlPvj>
 8011bc2:	4620      	mov	r0, r4
 8011bc4:	bd10      	pop	{r4, pc}
	...

08011bc8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011bc8:	b513      	push	{r0, r1, r4, lr}
 8011bca:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011bce:	4604      	mov	r4, r0
 8011bd0:	b1fb      	cbz	r3, 8011c12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bd2:	4b16      	ldr	r3, [pc, #88]	; (8011c2c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011bd4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011bd6:	881b      	ldrh	r3, [r3, #0]
 8011bd8:	428b      	cmp	r3, r1
 8011bda:	d91a      	bls.n	8011c12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bdc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011be0:	2b00      	cmp	r3, #0
 8011be2:	dd16      	ble.n	8011c12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011be4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011be8:	2b00      	cmp	r3, #0
 8011bea:	dd12      	ble.n	8011c12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011bec:	4b10      	ldr	r3, [pc, #64]	; (8011c30 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011bee:	6818      	ldr	r0, [r3, #0]
 8011bf0:	f7f6 f966 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8011bf4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011bf8:	6822      	ldr	r2, [r4, #0]
 8011bfa:	2b00      	cmp	r3, #0
 8011bfc:	db06      	blt.n	8011c0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011bfe:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011c02:	2b00      	cmp	r3, #0
 8011c04:	db02      	blt.n	8011c0c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011c06:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011c08:	4298      	cmp	r0, r3
 8011c0a:	d004      	beq.n	8011c16 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011c0c:	6953      	ldr	r3, [r2, #20]
 8011c0e:	4620      	mov	r0, r4
 8011c10:	4798      	blx	r3
 8011c12:	b002      	add	sp, #8
 8011c14:	bd10      	pop	{r4, pc}
 8011c16:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011c1a:	c903      	ldmia	r1, {r0, r1}
 8011c1c:	466b      	mov	r3, sp
 8011c1e:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c22:	6912      	ldr	r2, [r2, #16]
 8011c24:	4619      	mov	r1, r3
 8011c26:	4620      	mov	r0, r4
 8011c28:	4790      	blx	r2
 8011c2a:	e7f2      	b.n	8011c12 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011c2c:	2000ef78 	.word	0x2000ef78
 8011c30:	2000ef80 	.word	0x2000ef80

08011c34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011c34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c38:	4b44      	ldr	r3, [pc, #272]	; (8011d4c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011c3a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011c3c:	881b      	ldrh	r3, [r3, #0]
 8011c3e:	4293      	cmp	r3, r2
 8011c40:	b08e      	sub	sp, #56	; 0x38
 8011c42:	4604      	mov	r4, r0
 8011c44:	d97e      	bls.n	8011d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c46:	6808      	ldr	r0, [r1, #0]
 8011c48:	4d41      	ldr	r5, [pc, #260]	; (8011d50 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011c4a:	6849      	ldr	r1, [r1, #4]
 8011c4c:	ab05      	add	r3, sp, #20
 8011c4e:	c303      	stmia	r3!, {r0, r1}
 8011c50:	4611      	mov	r1, r2
 8011c52:	6828      	ldr	r0, [r5, #0]
 8011c54:	f7f6 f934 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8011c58:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011c5c:	2b00      	cmp	r3, #0
 8011c5e:	db11      	blt.n	8011c84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c60:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011c64:	2b00      	cmp	r3, #0
 8011c66:	db0d      	blt.n	8011c84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c68:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011c6a:	4298      	cmp	r0, r3
 8011c6c:	d10a      	bne.n	8011c84 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011c6e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011c72:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011c76:	ab09      	add	r3, sp, #36	; 0x24
 8011c78:	e883 0003 	stmia.w	r3, {r0, r1}
 8011c7c:	4619      	mov	r1, r3
 8011c7e:	a805      	add	r0, sp, #20
 8011c80:	f7fd fda4 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8011c84:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011c88:	2b00      	cmp	r3, #0
 8011c8a:	dd5b      	ble.n	8011d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c8c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011c90:	2b00      	cmp	r3, #0
 8011c92:	dd57      	ble.n	8011d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011c94:	4f2f      	ldr	r7, [pc, #188]	; (8011d54 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011c96:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011c98:	683b      	ldr	r3, [r7, #0]
 8011c9a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011c9e:	4b2e      	ldr	r3, [pc, #184]	; (8011d58 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011ca0:	681b      	ldr	r3, [r3, #0]
 8011ca2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011ca6:	2e00      	cmp	r6, #0
 8011ca8:	d04c      	beq.n	8011d44 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011caa:	6823      	ldr	r3, [r4, #0]
 8011cac:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011cb0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011cb2:	4620      	mov	r0, r4
 8011cb4:	4798      	blx	r3
 8011cb6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011cb8:	683b      	ldr	r3, [r7, #0]
 8011cba:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011cbe:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011cc2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011cc6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011cc8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011ccc:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011cd0:	785b      	ldrb	r3, [r3, #1]
 8011cd2:	9609      	str	r6, [sp, #36]	; 0x24
 8011cd4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011cd8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011cdc:	4b1f      	ldr	r3, [pc, #124]	; (8011d5c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011cde:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011ce2:	681b      	ldr	r3, [r3, #0]
 8011ce4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011ce8:	910b      	str	r1, [sp, #44]	; 0x2c
 8011cea:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011cee:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011cf2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011cf6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011cfa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011cfe:	b10a      	cbz	r2, 8011d04 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011d00:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011d02:	b906      	cbnz	r6, 8011d06 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011d04:	689e      	ldr	r6, [r3, #8]
 8011d06:	af07      	add	r7, sp, #28
 8011d08:	4621      	mov	r1, r4
 8011d0a:	4638      	mov	r0, r7
 8011d0c:	f004 f8f8 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011d10:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011d12:	6828      	ldr	r0, [r5, #0]
 8011d14:	f7f6 f8d4 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8011d18:	6823      	ldr	r3, [r4, #0]
 8011d1a:	4605      	mov	r5, r0
 8011d1c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011d1e:	4620      	mov	r0, r4
 8011d20:	4798      	blx	r3
 8011d22:	6823      	ldr	r3, [r4, #0]
 8011d24:	4680      	mov	r8, r0
 8011d26:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011d2a:	4620      	mov	r0, r4
 8011d2c:	4798      	blx	r3
 8011d2e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011d32:	ab09      	add	r3, sp, #36	; 0x24
 8011d34:	9300      	str	r3, [sp, #0]
 8011d36:	9501      	str	r5, [sp, #4]
 8011d38:	ab05      	add	r3, sp, #20
 8011d3a:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011d3e:	4630      	mov	r0, r6
 8011d40:	f7f6 f870 	bl	8007e24 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011d44:	b00e      	add	sp, #56	; 0x38
 8011d46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011d4a:	bf00      	nop
 8011d4c:	2000ef78 	.word	0x2000ef78
 8011d50:	2000ef80 	.word	0x2000ef80
 8011d54:	2000ef74 	.word	0x2000ef74
 8011d58:	2000ef7c 	.word	0x2000ef7c
 8011d5c:	2000ef1c 	.word	0x2000ef1c

08011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8011d60:	b538      	push	{r3, r4, r5, lr}
 8011d62:	4b0e      	ldr	r3, [pc, #56]	; (8011d9c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8011d64:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011d66:	881b      	ldrh	r3, [r3, #0]
 8011d68:	429a      	cmp	r2, r3
 8011d6a:	4604      	mov	r4, r0
 8011d6c:	d214      	bcs.n	8011d98 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 8011d6e:	6803      	ldr	r3, [r0, #0]
 8011d70:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8011d72:	4798      	blx	r3
 8011d74:	6823      	ldr	r3, [r4, #0]
 8011d76:	4605      	mov	r5, r0
 8011d78:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8011d7a:	4620      	mov	r0, r4
 8011d7c:	4798      	blx	r3
 8011d7e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d82:	b22d      	sxth	r5, r5
 8011d84:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d88:	4601      	mov	r1, r0
 8011d8a:	bf06      	itte	eq
 8011d8c:	4602      	moveq	r2, r0
 8011d8e:	4629      	moveq	r1, r5
 8011d90:	462a      	movne	r2, r5
 8011d92:	4620      	mov	r0, r4
 8011d94:	f7f5 f9c8 	bl	8007128 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8011d98:	bd38      	pop	{r3, r4, r5, pc}
 8011d9a:	bf00      	nop
 8011d9c:	2000ef78 	.word	0x2000ef78

08011da0 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8011da0:	b530      	push	{r4, r5, lr}
 8011da2:	888b      	ldrh	r3, [r1, #4]
 8011da4:	8583      	strh	r3, [r0, #44]	; 0x2c
 8011da6:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011daa:	b085      	sub	sp, #20
 8011dac:	4604      	mov	r4, r0
 8011dae:	b923      	cbnz	r3, 8011dba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011db0:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011db4:	b90b      	cbnz	r3, 8011dba <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8011db6:	f7ff ffd3 	bl	8011d60 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8011dba:	6823      	ldr	r3, [r4, #0]
 8011dbc:	466d      	mov	r5, sp
 8011dbe:	4621      	mov	r1, r4
 8011dc0:	4628      	mov	r0, r5
 8011dc2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8011dc6:	4798      	blx	r3
 8011dc8:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8011dcc:	343c      	adds	r4, #60	; 0x3c
 8011dce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8011dd2:	b005      	add	sp, #20
 8011dd4:	bd30      	pop	{r4, r5, pc}

08011dd6 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8011dd6:	2300      	movs	r3, #0
 8011dd8:	8083      	strh	r3, [r0, #4]
 8011dda:	80c3      	strh	r3, [r0, #6]
 8011ddc:	8003      	strh	r3, [r0, #0]
 8011dde:	8043      	strh	r3, [r0, #2]
 8011de0:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8011de4:	2bff      	cmp	r3, #255	; 0xff
 8011de6:	bf01      	itttt	eq
 8011de8:	890b      	ldrheq	r3, [r1, #8]
 8011dea:	8083      	strheq	r3, [r0, #4]
 8011dec:	894b      	ldrheq	r3, [r1, #10]
 8011dee:	80c3      	strheq	r3, [r0, #6]
 8011df0:	4770      	bx	lr
	...

08011df4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8011df4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8011df6:	4604      	mov	r4, r0
 8011df8:	6808      	ldr	r0, [r1, #0]
 8011dfa:	6849      	ldr	r1, [r1, #4]
 8011dfc:	466b      	mov	r3, sp
 8011dfe:	c303      	stmia	r3!, {r0, r1}
 8011e00:	6823      	ldr	r3, [r4, #0]
 8011e02:	4669      	mov	r1, sp
 8011e04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011e06:	4620      	mov	r0, r4
 8011e08:	4798      	blx	r3
 8011e0a:	4b08      	ldr	r3, [pc, #32]	; (8011e2c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8011e0c:	681b      	ldr	r3, [r3, #0]
 8011e0e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011e12:	b10a      	cbz	r2, 8011e18 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8011e14:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011e16:	b900      	cbnz	r0, 8011e1a <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8011e18:	6898      	ldr	r0, [r3, #8]
 8011e1a:	6803      	ldr	r3, [r0, #0]
 8011e1c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8011e1e:	6a1d      	ldr	r5, [r3, #32]
 8011e20:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8011e24:	4669      	mov	r1, sp
 8011e26:	47a8      	blx	r5
 8011e28:	b003      	add	sp, #12
 8011e2a:	bd30      	pop	{r4, r5, pc}
 8011e2c:	2000ef1c 	.word	0x2000ef1c

08011e30 <_ZN8touchgfx3BoxD1Ev>:
 8011e30:	4770      	bx	lr

08011e32 <_ZN8touchgfx3BoxD0Ev>:
 8011e32:	b510      	push	{r4, lr}
 8011e34:	212c      	movs	r1, #44	; 0x2c
 8011e36:	4604      	mov	r4, r0
 8011e38:	f014 fa72 	bl	8026320 <_ZdlPvj>
 8011e3c:	4620      	mov	r0, r4
 8011e3e:	bd10      	pop	{r4, pc}

08011e40 <_ZNK8touchgfx3Box17invalidateContentEv>:
 8011e40:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 8011e44:	b12a      	cbz	r2, 8011e52 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011e46:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011e4a:	b112      	cbz	r2, 8011e52 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8011e4c:	6803      	ldr	r3, [r0, #0]
 8011e4e:	695b      	ldr	r3, [r3, #20]
 8011e50:	4718      	bx	r3
 8011e52:	4770      	bx	lr

08011e54 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011e54:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8011e58:	4770      	bx	lr

08011e5a <_ZN8touchgfx6ButtonD1Ev>:
 8011e5a:	4770      	bx	lr

08011e5c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8011e5c:	b570      	push	{r4, r5, r6, lr}
 8011e5e:	880b      	ldrh	r3, [r1, #0]
 8011e60:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8011e62:	4605      	mov	r5, r0
 8011e64:	8813      	ldrh	r3, [r2, #0]
 8011e66:	f825 3f30 	strh.w	r3, [r5, #48]!
 8011e6a:	4604      	mov	r4, r0
 8011e6c:	4628      	mov	r0, r5
 8011e6e:	f006 fad5 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e72:	4606      	mov	r6, r0
 8011e74:	4628      	mov	r0, r5
 8011e76:	f006 fb05 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e7a:	6823      	ldr	r3, [r4, #0]
 8011e7c:	4605      	mov	r5, r0
 8011e7e:	4631      	mov	r1, r6
 8011e80:	4620      	mov	r0, r4
 8011e82:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011e84:	4798      	blx	r3
 8011e86:	6823      	ldr	r3, [r4, #0]
 8011e88:	4629      	mov	r1, r5
 8011e8a:	4620      	mov	r0, r4
 8011e8c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011e8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011e92:	4718      	bx	r3

08011e94 <_ZN8touchgfx6ButtonD0Ev>:
 8011e94:	b510      	push	{r4, lr}
 8011e96:	2134      	movs	r1, #52	; 0x34
 8011e98:	4604      	mov	r4, r0
 8011e9a:	f014 fa41 	bl	8026320 <_ZdlPvj>
 8011e9e:	4620      	mov	r0, r4
 8011ea0:	bd10      	pop	{r4, pc}

08011ea2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011ea2:	b510      	push	{r4, lr}
 8011ea4:	4604      	mov	r4, r0
 8011ea6:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8011ea8:	b150      	cbz	r0, 8011ec0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011eaa:	6803      	ldr	r3, [r0, #0]
 8011eac:	68db      	ldr	r3, [r3, #12]
 8011eae:	4798      	blx	r3
 8011eb0:	b130      	cbz	r0, 8011ec0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011eb2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8011eb4:	6803      	ldr	r3, [r0, #0]
 8011eb6:	4621      	mov	r1, r4
 8011eb8:	689b      	ldr	r3, [r3, #8]
 8011eba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011ebe:	4718      	bx	r3
 8011ec0:	bd10      	pop	{r4, pc}

08011ec2 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8011ec2:	b510      	push	{r4, lr}
 8011ec4:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8011ec8:	2bff      	cmp	r3, #255	; 0xff
 8011eca:	4604      	mov	r4, r0
 8011ecc:	d006      	beq.n	8011edc <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 8011ece:	2300      	movs	r3, #0
 8011ed0:	8003      	strh	r3, [r0, #0]
 8011ed2:	8043      	strh	r3, [r0, #2]
 8011ed4:	8083      	strh	r3, [r0, #4]
 8011ed6:	80c3      	strh	r3, [r0, #6]
 8011ed8:	4620      	mov	r0, r4
 8011eda:	bd10      	pop	{r4, pc}
 8011edc:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8011ee0:	b11b      	cbz	r3, 8011eea <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8011ee2:	3130      	adds	r1, #48	; 0x30
 8011ee4:	f006 fb02 	bl	80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011ee8:	e7f6      	b.n	8011ed8 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8011eea:	312e      	adds	r1, #46	; 0x2e
 8011eec:	e7fa      	b.n	8011ee4 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

08011ef0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 8011ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ef4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8011ef8:	b08a      	sub	sp, #40	; 0x28
 8011efa:	4604      	mov	r4, r0
 8011efc:	4688      	mov	r8, r1
 8011efe:	2b00      	cmp	r3, #0
 8011f00:	d066      	beq.n	8011fd0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 8011f02:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8011f04:	f8ad 3014 	strh.w	r3, [sp, #20]
 8011f08:	a805      	add	r0, sp, #20
 8011f0a:	f006 fa87 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011f0e:	4607      	mov	r7, r0
 8011f10:	a805      	add	r0, sp, #20
 8011f12:	f006 fab7 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011f16:	f9b8 6000 	ldrsh.w	r6, [r8]
 8011f1a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 8011f1e:	4432      	add	r2, r6
 8011f20:	b292      	uxth	r2, r2
 8011f22:	2300      	movs	r3, #0
 8011f24:	fa0f fc82 	sxth.w	ip, r2
 8011f28:	459c      	cmp	ip, r3
 8011f2a:	9306      	str	r3, [sp, #24]
 8011f2c:	dd52      	ble.n	8011fd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f2e:	42b7      	cmp	r7, r6
 8011f30:	dd50      	ble.n	8011fd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f32:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8011f36:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8011f3a:	442b      	add	r3, r5
 8011f3c:	b29b      	uxth	r3, r3
 8011f3e:	b219      	sxth	r1, r3
 8011f40:	2900      	cmp	r1, #0
 8011f42:	dd47      	ble.n	8011fd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f44:	42a8      	cmp	r0, r5
 8011f46:	dd45      	ble.n	8011fd4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8011f48:	4567      	cmp	r7, ip
 8011f4a:	bfb8      	it	lt
 8011f4c:	b2ba      	uxthlt	r2, r7
 8011f4e:	4288      	cmp	r0, r1
 8011f50:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8011f54:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8011f58:	bfb8      	it	lt
 8011f5a:	b283      	uxthlt	r3, r0
 8011f5c:	1b92      	subs	r2, r2, r6
 8011f5e:	1b5b      	subs	r3, r3, r5
 8011f60:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011f64:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011f68:	f8ad 6018 	strh.w	r6, [sp, #24]
 8011f6c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8011f70:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8011f74:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011f78:	429a      	cmp	r2, r3
 8011f7a:	d026      	beq.n	8011fca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f7c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8011f80:	2b00      	cmp	r3, #0
 8011f82:	dd22      	ble.n	8011fca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f84:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8011f88:	2b00      	cmp	r3, #0
 8011f8a:	dd1e      	ble.n	8011fca <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8011f8c:	2300      	movs	r3, #0
 8011f8e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8011f92:	6823      	ldr	r3, [r4, #0]
 8011f94:	a908      	add	r1, sp, #32
 8011f96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011f98:	4620      	mov	r0, r4
 8011f9a:	4798      	blx	r3
 8011f9c:	4b0f      	ldr	r3, [pc, #60]	; (8011fdc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8011f9e:	681b      	ldr	r3, [r3, #0]
 8011fa0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011fa4:	b10a      	cbz	r2, 8011faa <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8011fa6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8011fa8:	b900      	cbnz	r0, 8011fac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8011faa:	6898      	ldr	r0, [r3, #8]
 8011fac:	6801      	ldr	r1, [r0, #0]
 8011fae:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011fb2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8011fb6:	2501      	movs	r5, #1
 8011fb8:	9502      	str	r5, [sp, #8]
 8011fba:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 8011fbe:	9401      	str	r4, [sp, #4]
 8011fc0:	ac06      	add	r4, sp, #24
 8011fc2:	9400      	str	r4, [sp, #0]
 8011fc4:	688c      	ldr	r4, [r1, #8]
 8011fc6:	a905      	add	r1, sp, #20
 8011fc8:	47a0      	blx	r4
 8011fca:	b00a      	add	sp, #40	; 0x28
 8011fcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011fd0:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8011fd2:	e797      	b.n	8011f04 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8011fd4:	2300      	movs	r3, #0
 8011fd6:	9307      	str	r3, [sp, #28]
 8011fd8:	e7ca      	b.n	8011f70 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8011fda:	bf00      	nop
 8011fdc:	2000ef1c 	.word	0x2000ef1c

08011fe0 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011fe0:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8011fe4:	b12a      	cbz	r2, 8011ff2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011fe6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011fea:	b112      	cbz	r2, 8011ff2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011fec:	6803      	ldr	r3, [r0, #0]
 8011fee:	695b      	ldr	r3, [r3, #20]
 8011ff0:	4718      	bx	r3
 8011ff2:	4770      	bx	lr

08011ff4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 8011ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011ff8:	4b2f      	ldr	r3, [pc, #188]	; (80120b8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8011ffa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011ffc:	881b      	ldrh	r3, [r3, #0]
 8011ffe:	4293      	cmp	r3, r2
 8012000:	b08d      	sub	sp, #52	; 0x34
 8012002:	4604      	mov	r4, r0
 8012004:	460f      	mov	r7, r1
 8012006:	d954      	bls.n	80120b2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012008:	4b2c      	ldr	r3, [pc, #176]	; (80120bc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801200a:	6819      	ldr	r1, [r3, #0]
 801200c:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012010:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 8012014:	4a2a      	ldr	r2, [pc, #168]	; (80120c0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 8012016:	6812      	ldr	r2, [r2, #0]
 8012018:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801201c:	2900      	cmp	r1, #0
 801201e:	d048      	beq.n	80120b2 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012020:	785a      	ldrb	r2, [r3, #1]
 8012022:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8012026:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801202a:	4b26      	ldr	r3, [pc, #152]	; (80120c4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 801202c:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 8012030:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 8012034:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 8012038:	6b26      	ldr	r6, [r4, #48]	; 0x30
 801203a:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801203e:	9107      	str	r1, [sp, #28]
 8012040:	f3c2 0801 	ubfx	r8, r2, #0, #2
 8012044:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012048:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 801204c:	681a      	ldr	r2, [r3, #0]
 801204e:	f88d 8020 	strb.w	r8, [sp, #32]
 8012052:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8012056:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801205a:	9609      	str	r6, [sp, #36]	; 0x24
 801205c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012060:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012064:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012068:	b10b      	cbz	r3, 801206e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801206a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801206c:	b905      	cbnz	r5, 8012070 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801206e:	6895      	ldr	r5, [r2, #8]
 8012070:	ae05      	add	r6, sp, #20
 8012072:	4621      	mov	r1, r4
 8012074:	4630      	mov	r0, r6
 8012076:	f003 ff43 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801207a:	4b13      	ldr	r3, [pc, #76]	; (80120c8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801207c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801207e:	6818      	ldr	r0, [r3, #0]
 8012080:	f7f5 ff1e 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 8012084:	6823      	ldr	r3, [r4, #0]
 8012086:	4680      	mov	r8, r0
 8012088:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801208a:	4620      	mov	r0, r4
 801208c:	4798      	blx	r3
 801208e:	6823      	ldr	r3, [r4, #0]
 8012090:	4681      	mov	r9, r0
 8012092:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012096:	4620      	mov	r0, r4
 8012098:	4798      	blx	r3
 801209a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801209e:	ab07      	add	r3, sp, #28
 80120a0:	9300      	str	r3, [sp, #0]
 80120a2:	f8cd 8004 	str.w	r8, [sp, #4]
 80120a6:	463b      	mov	r3, r7
 80120a8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80120ac:	4628      	mov	r0, r5
 80120ae:	f7f5 feb9 	bl	8007e24 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80120b2:	b00d      	add	sp, #52	; 0x34
 80120b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80120b8:	2000ef78 	.word	0x2000ef78
 80120bc:	2000ef74 	.word	0x2000ef74
 80120c0:	2000ef7c 	.word	0x2000ef7c
 80120c4:	2000ef1c 	.word	0x2000ef1c
 80120c8:	2000ef80 	.word	0x2000ef80

080120cc <_ZN8touchgfx13BoxWithBorderD1Ev>:
 80120cc:	4770      	bx	lr

080120ce <_ZN8touchgfx13BoxWithBorderD0Ev>:
 80120ce:	b510      	push	{r4, lr}
 80120d0:	2134      	movs	r1, #52	; 0x34
 80120d2:	4604      	mov	r4, r0
 80120d4:	f014 f924 	bl	8026320 <_ZdlPvj>
 80120d8:	4620      	mov	r0, r4
 80120da:	bd10      	pop	{r4, pc}

080120dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80120dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120e0:	4604      	mov	r4, r0
 80120e2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80120e4:	8962      	ldrh	r2, [r4, #10]
 80120e6:	b218      	sxth	r0, r3
 80120e8:	460e      	mov	r6, r1
 80120ea:	005b      	lsls	r3, r3, #1
 80120ec:	8921      	ldrh	r1, [r4, #8]
 80120ee:	b29b      	uxth	r3, r3
 80120f0:	1ac9      	subs	r1, r1, r3
 80120f2:	b08e      	sub	sp, #56	; 0x38
 80120f4:	b209      	sxth	r1, r1
 80120f6:	1ad3      	subs	r3, r2, r3
 80120f8:	b21b      	sxth	r3, r3
 80120fa:	2900      	cmp	r1, #0
 80120fc:	f8ad 0000 	strh.w	r0, [sp]
 8012100:	f8ad 0002 	strh.w	r0, [sp, #2]
 8012104:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012108:	f8ad 3006 	strh.w	r3, [sp, #6]
 801210c:	dd5e      	ble.n	80121cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801210e:	2b00      	cmp	r3, #0
 8012110:	dd5c      	ble.n	80121cc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8012112:	6830      	ldr	r0, [r6, #0]
 8012114:	6871      	ldr	r1, [r6, #4]
 8012116:	ab02      	add	r3, sp, #8
 8012118:	c303      	stmia	r3!, {r0, r1}
 801211a:	4669      	mov	r1, sp
 801211c:	a802      	add	r0, sp, #8
 801211e:	f7fd fb55 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8012122:	4620      	mov	r0, r4
 8012124:	a902      	add	r1, sp, #8
 8012126:	f7ff fe65 	bl	8011df4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 801212a:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 801212c:	2800      	cmp	r0, #0
 801212e:	d05f      	beq.n	80121f0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012130:	8963      	ldrh	r3, [r4, #10]
 8012132:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012136:	f8ad 101c 	strh.w	r1, [sp, #28]
 801213a:	1a1f      	subs	r7, r3, r0
 801213c:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8012140:	b202      	sxth	r2, r0
 8012142:	2500      	movs	r5, #0
 8012144:	b21b      	sxth	r3, r3
 8012146:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801214a:	1a09      	subs	r1, r1, r0
 801214c:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012150:	9506      	str	r5, [sp, #24]
 8012152:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012156:	f8ad 5020 	strh.w	r5, [sp, #32]
 801215a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801215e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8012162:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012166:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801216a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801216e:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8012172:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012176:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801217a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801217e:	af04      	add	r7, sp, #16
 8012180:	ab06      	add	r3, sp, #24
 8012182:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012186:	e893 0003 	ldmia.w	r3, {r0, r1}
 801218a:	e887 0003 	stmia.w	r7, {r0, r1}
 801218e:	4631      	mov	r1, r6
 8012190:	4638      	mov	r0, r7
 8012192:	f7fd fb1b 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8012196:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801219a:	2b00      	cmp	r3, #0
 801219c:	dd12      	ble.n	80121c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801219e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80121a2:	2b00      	cmp	r3, #0
 80121a4:	dd0e      	ble.n	80121c4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80121a6:	6823      	ldr	r3, [r4, #0]
 80121a8:	4639      	mov	r1, r7
 80121aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121ac:	4620      	mov	r0, r4
 80121ae:	4798      	blx	r3
 80121b0:	f7f2 f92e 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 80121b4:	6803      	ldr	r3, [r0, #0]
 80121b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80121b8:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80121bc:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80121c0:	4639      	mov	r1, r7
 80121c2:	47c0      	blx	r8
 80121c4:	3501      	adds	r5, #1
 80121c6:	2d04      	cmp	r5, #4
 80121c8:	d1da      	bne.n	8012180 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80121ca:	e011      	b.n	80121f0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80121cc:	6830      	ldr	r0, [r6, #0]
 80121ce:	6871      	ldr	r1, [r6, #4]
 80121d0:	ab06      	add	r3, sp, #24
 80121d2:	c303      	stmia	r3!, {r0, r1}
 80121d4:	6823      	ldr	r3, [r4, #0]
 80121d6:	a906      	add	r1, sp, #24
 80121d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80121da:	4620      	mov	r0, r4
 80121dc:	4798      	blx	r3
 80121de:	f7f2 f917 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 80121e2:	6803      	ldr	r3, [r0, #0]
 80121e4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80121e6:	6a1d      	ldr	r5, [r3, #32]
 80121e8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80121ec:	a906      	add	r1, sp, #24
 80121ee:	47a8      	blx	r5
 80121f0:	b00e      	add	sp, #56	; 0x38
 80121f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080121f6 <_ZN8touchgfx5ImageD1Ev>:
 80121f6:	4770      	bx	lr

080121f8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80121f8:	b570      	push	{r4, r5, r6, lr}
 80121fa:	880b      	ldrh	r3, [r1, #0]
 80121fc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80121fe:	4604      	mov	r4, r0
 8012200:	4608      	mov	r0, r1
 8012202:	460d      	mov	r5, r1
 8012204:	f006 f90a 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012208:	4606      	mov	r6, r0
 801220a:	4628      	mov	r0, r5
 801220c:	f006 f93a 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012210:	6823      	ldr	r3, [r4, #0]
 8012212:	4605      	mov	r5, r0
 8012214:	4631      	mov	r1, r6
 8012216:	4620      	mov	r0, r4
 8012218:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801221a:	4798      	blx	r3
 801221c:	6823      	ldr	r3, [r4, #0]
 801221e:	4629      	mov	r1, r5
 8012220:	4620      	mov	r0, r4
 8012222:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012224:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012228:	4718      	bx	r3

0801222a <_ZN8touchgfx5ImageD0Ev>:
 801222a:	b510      	push	{r4, lr}
 801222c:	212c      	movs	r1, #44	; 0x2c
 801222e:	4604      	mov	r4, r0
 8012230:	f014 f876 	bl	8026320 <_ZdlPvj>
 8012234:	4620      	mov	r0, r4
 8012236:	bd10      	pop	{r4, pc}

08012238 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8012238:	b510      	push	{r4, lr}
 801223a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801223e:	2bff      	cmp	r3, #255	; 0xff
 8012240:	4604      	mov	r4, r0
 8012242:	d006      	beq.n	8012252 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8012244:	2300      	movs	r3, #0
 8012246:	8003      	strh	r3, [r0, #0]
 8012248:	8043      	strh	r3, [r0, #2]
 801224a:	8083      	strh	r3, [r0, #4]
 801224c:	80c3      	strh	r3, [r0, #6]
 801224e:	4620      	mov	r0, r4
 8012250:	bd10      	pop	{r4, pc}
 8012252:	3126      	adds	r1, #38	; 0x26
 8012254:	f006 f94a 	bl	80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012258:	e7f9      	b.n	801224e <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0801225c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801225c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012260:	4604      	mov	r4, r0
 8012262:	b088      	sub	sp, #32
 8012264:	f854 3b26 	ldr.w	r3, [r4], #38
 8012268:	2500      	movs	r5, #0
 801226a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801226c:	460f      	mov	r7, r1
 801226e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012272:	a904      	add	r1, sp, #16
 8012274:	4606      	mov	r6, r0
 8012276:	4798      	blx	r3
 8012278:	4620      	mov	r0, r4
 801227a:	f006 f8cf 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801227e:	4680      	mov	r8, r0
 8012280:	4620      	mov	r0, r4
 8012282:	f006 f8ff 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012286:	9506      	str	r5, [sp, #24]
 8012288:	ad06      	add	r5, sp, #24
 801228a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801228e:	4639      	mov	r1, r7
 8012290:	4628      	mov	r0, r5
 8012292:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012296:	f7fd fa99 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801229a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801229e:	2b00      	cmp	r3, #0
 80122a0:	dd19      	ble.n	80122d6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80122a2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80122a6:	2b00      	cmp	r3, #0
 80122a8:	dd15      	ble.n	80122d6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 80122aa:	4b0c      	ldr	r3, [pc, #48]	; (80122dc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 80122ac:	681b      	ldr	r3, [r3, #0]
 80122ae:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80122b2:	b10a      	cbz	r2, 80122b8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 80122b4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80122b6:	b900      	cbnz	r0, 80122ba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 80122b8:	6898      	ldr	r0, [r3, #8]
 80122ba:	6801      	ldr	r1, [r0, #0]
 80122bc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80122c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80122c4:	2701      	movs	r7, #1
 80122c6:	9702      	str	r7, [sp, #8]
 80122c8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 80122cc:	e9cd 5600 	strd	r5, r6, [sp]
 80122d0:	688d      	ldr	r5, [r1, #8]
 80122d2:	4621      	mov	r1, r4
 80122d4:	47a8      	blx	r5
 80122d6:	b008      	add	sp, #32
 80122d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122dc:	2000ef1c 	.word	0x2000ef1c

080122e0 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 80122e0:	4770      	bx	lr

080122e2 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 80122e2:	b510      	push	{r4, lr}
 80122e4:	2148      	movs	r1, #72	; 0x48
 80122e6:	4604      	mov	r4, r0
 80122e8:	f014 f81a 	bl	8026320 <_ZdlPvj>
 80122ec:	4620      	mov	r0, r4
 80122ee:	bd10      	pop	{r4, pc}

080122f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80122f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122f4:	b08d      	sub	sp, #52	; 0x34
 80122f6:	4604      	mov	r4, r0
 80122f8:	460f      	mov	r7, r1
 80122fa:	f7ff fdf9 	bl	8011ef0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80122fe:	4a55      	ldr	r2, [pc, #340]	; (8012454 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012300:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012302:	8812      	ldrh	r2, [r2, #0]
 8012304:	429a      	cmp	r2, r3
 8012306:	f240 8082 	bls.w	801240e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 801230a:	4d53      	ldr	r5, [pc, #332]	; (8012458 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 801230c:	682a      	ldr	r2, [r5, #0]
 801230e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012312:	4b52      	ldr	r3, [pc, #328]	; (801245c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8012314:	681b      	ldr	r3, [r3, #0]
 8012316:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801231a:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 801231e:	2200      	movs	r2, #0
 8012320:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8012324:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 8012328:	2a03      	cmp	r2, #3
 801232a:	d811      	bhi.n	8012350 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801232c:	e8df f002 	tbb	[pc, r2]
 8012330:	89727902 	.word	0x89727902
 8012334:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012338:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801233c:	1ad2      	subs	r2, r2, r3
 801233e:	2002      	movs	r0, #2
 8012340:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012344:	fb92 f2f0 	sdiv	r2, r2, r0
 8012348:	f8ad 3012 	strh.w	r3, [sp, #18]
 801234c:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012350:	f10d 080c 	add.w	r8, sp, #12
 8012354:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012358:	f10d 0914 	add.w	r9, sp, #20
 801235c:	e889 0003 	stmia.w	r9, {r0, r1}
 8012360:	4639      	mov	r1, r7
 8012362:	4648      	mov	r0, r9
 8012364:	f7fd fa32 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8012368:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801236c:	2b00      	cmp	r3, #0
 801236e:	dd4e      	ble.n	801240e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012370:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012374:	2b00      	cmp	r3, #0
 8012376:	dd4a      	ble.n	801240e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012378:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801237c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012380:	1a9b      	subs	r3, r3, r2
 8012382:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012386:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801238a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801238e:	1a9b      	subs	r3, r3, r2
 8012390:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012394:	6823      	ldr	r3, [r4, #0]
 8012396:	4641      	mov	r1, r8
 8012398:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801239a:	4620      	mov	r0, r4
 801239c:	4798      	blx	r3
 801239e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 80123a2:	2b00      	cmp	r3, #0
 80123a4:	d053      	beq.n	801244e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 80123a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80123a8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 80123aa:	682b      	ldr	r3, [r5, #0]
 80123ac:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 80123b0:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 80123b4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 80123b8:	785b      	ldrb	r3, [r3, #1]
 80123ba:	9209      	str	r2, [sp, #36]	; 0x24
 80123bc:	f3c3 0501 	ubfx	r5, r3, #0, #2
 80123c0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 80123c4:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 80123c8:	2300      	movs	r3, #0
 80123ca:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80123ce:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80123d2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80123d6:	4b22      	ldr	r3, [pc, #136]	; (8012460 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 80123d8:	9607      	str	r6, [sp, #28]
 80123da:	681b      	ldr	r3, [r3, #0]
 80123dc:	f88d 5020 	strb.w	r5, [sp, #32]
 80123e0:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80123e4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80123e8:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80123ec:	b10a      	cbz	r2, 80123f2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 80123ee:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80123f0:	b904      	cbnz	r4, 80123f4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80123f2:	689c      	ldr	r4, [r3, #8]
 80123f4:	4b1b      	ldr	r3, [pc, #108]	; (8012464 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80123f6:	6818      	ldr	r0, [r3, #0]
 80123f8:	f7f5 fd62 	bl	8007ec0 <_ZNK8touchgfx5Texts7getTextEt>
 80123fc:	ab07      	add	r3, sp, #28
 80123fe:	9001      	str	r0, [sp, #4]
 8012400:	9300      	str	r3, [sp, #0]
 8012402:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012406:	464b      	mov	r3, r9
 8012408:	4620      	mov	r0, r4
 801240a:	f7f5 fd0b 	bl	8007e24 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801240e:	b00d      	add	sp, #52	; 0x34
 8012410:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012414:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012418:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801241c:	1ad2      	subs	r2, r2, r3
 801241e:	3201      	adds	r2, #1
 8012420:	e78d      	b.n	801233e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012422:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012426:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801242a:	1ad2      	subs	r2, r2, r3
 801242c:	3201      	adds	r2, #1
 801242e:	2002      	movs	r0, #2
 8012430:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012434:	fb92 f2f0 	sdiv	r2, r2, r0
 8012438:	f8ad 1012 	strh.w	r1, [sp, #18]
 801243c:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012440:	e786      	b.n	8012350 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012442:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012446:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801244a:	1ad2      	subs	r2, r2, r3
 801244c:	e7ef      	b.n	801242e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 801244e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012450:	e7aa      	b.n	80123a8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012452:	bf00      	nop
 8012454:	2000ef78 	.word	0x2000ef78
 8012458:	2000ef74 	.word	0x2000ef74
 801245c:	2000ef7c 	.word	0x2000ef7c
 8012460:	2000ef1c 	.word	0x2000ef1c
 8012464:	2000ef80 	.word	0x2000ef80

08012468 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012468:	b510      	push	{r4, lr}
 801246a:	2101      	movs	r1, #1
 801246c:	4c13      	ldr	r4, [pc, #76]	; (80124bc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801246e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012472:	2200      	movs	r2, #0
 8012474:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012478:	6004      	str	r4, [r0, #0]
 801247a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801247e:	4c10      	ldr	r4, [pc, #64]	; (80124c0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012480:	8082      	strh	r2, [r0, #4]
 8012482:	80c2      	strh	r2, [r0, #6]
 8012484:	8102      	strh	r2, [r0, #8]
 8012486:	8142      	strh	r2, [r0, #10]
 8012488:	8182      	strh	r2, [r0, #12]
 801248a:	81c2      	strh	r2, [r0, #14]
 801248c:	8202      	strh	r2, [r0, #16]
 801248e:	8242      	strh	r2, [r0, #18]
 8012490:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012494:	61c2      	str	r2, [r0, #28]
 8012496:	8402      	strh	r2, [r0, #32]
 8012498:	8442      	strh	r2, [r0, #34]	; 0x22
 801249a:	6282      	str	r2, [r0, #40]	; 0x28
 801249c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 80124a0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 80124a2:	8601      	strh	r1, [r0, #48]	; 0x30
 80124a4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 80124a8:	6344      	str	r4, [r0, #52]	; 0x34
 80124aa:	8701      	strh	r1, [r0, #56]	; 0x38
 80124ac:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 80124b0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 80124b4:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 80124b8:	bd10      	pop	{r4, pc}
 80124ba:	bf00      	nop
 80124bc:	0802a298 	.word	0x0802a298
 80124c0:	08028208 	.word	0x08028208

080124c4 <_ZN8touchgfx7OutlineD1Ev>:
 80124c4:	4770      	bx	lr

080124c6 <_ZN8touchgfx7OutlineD0Ev>:
 80124c6:	b510      	push	{r4, lr}
 80124c8:	2130      	movs	r1, #48	; 0x30
 80124ca:	4604      	mov	r4, r0
 80124cc:	f013 ff28 	bl	8026320 <_ZdlPvj>
 80124d0:	4620      	mov	r0, r4
 80124d2:	bd10      	pop	{r4, pc}

080124d4 <_ZN8touchgfx7Outline5resetEv>:
 80124d4:	b510      	push	{r4, lr}
 80124d6:	4604      	mov	r4, r0
 80124d8:	f000 fe96 	bl	8013208 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 80124dc:	60e0      	str	r0, [r4, #12]
 80124de:	f000 fe99 	bl	8013214 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 80124e2:	68e3      	ldr	r3, [r4, #12]
 80124e4:	6123      	str	r3, [r4, #16]
 80124e6:	08c0      	lsrs	r0, r0, #3
 80124e8:	2200      	movs	r2, #0
 80124ea:	f647 71ff 	movw	r1, #32767	; 0x7fff
 80124ee:	3801      	subs	r0, #1
 80124f0:	6060      	str	r0, [r4, #4]
 80124f2:	60a2      	str	r2, [r4, #8]
 80124f4:	8019      	strh	r1, [r3, #0]
 80124f6:	8059      	strh	r1, [r3, #2]
 80124f8:	809a      	strh	r2, [r3, #4]
 80124fa:	80da      	strh	r2, [r3, #6]
 80124fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80124fe:	f023 0301 	bic.w	r3, r3, #1
 8012502:	f043 0302 	orr.w	r3, r3, #2
 8012506:	6263      	str	r3, [r4, #36]	; 0x24
 8012508:	bd10      	pop	{r4, pc}
	...

0801250c <_ZN8touchgfx7OutlineC1Ev>:
 801250c:	b510      	push	{r4, lr}
 801250e:	4b0a      	ldr	r3, [pc, #40]	; (8012538 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 8012510:	6003      	str	r3, [r0, #0]
 8012512:	2300      	movs	r3, #0
 8012514:	e9c0 3301 	strd	r3, r3, [r0, #4]
 8012518:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801251c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 8012520:	e9c0 3307 	strd	r3, r3, [r0, #28]
 8012524:	6243      	str	r3, [r0, #36]	; 0x24
 8012526:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801252a:	4604      	mov	r4, r0
 801252c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 8012530:	f7ff ffd0 	bl	80124d4 <_ZN8touchgfx7Outline5resetEv>
 8012534:	4620      	mov	r0, r4
 8012536:	bd10      	pop	{r4, pc}
 8012538:	0802a30c 	.word	0x0802a30c

0801253c <_ZN8touchgfx7Outline10renderLineEiiii>:
 801253c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012540:	b093      	sub	sp, #76	; 0x4c
 8012542:	1156      	asrs	r6, r2, #5
 8012544:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8012546:	9305      	str	r3, [sp, #20]
 8012548:	f004 051f 	and.w	r5, r4, #31
 801254c:	1153      	asrs	r3, r2, #5
 801254e:	9504      	str	r5, [sp, #16]
 8012550:	1165      	asrs	r5, r4, #5
 8012552:	9303      	str	r3, [sp, #12]
 8012554:	42ae      	cmp	r6, r5
 8012556:	ea4f 1364 	mov.w	r3, r4, asr #5
 801255a:	9306      	str	r3, [sp, #24]
 801255c:	f002 031f 	and.w	r3, r2, #31
 8012560:	f040 80f8 	bne.w	8012754 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012564:	9c04      	ldr	r4, [sp, #16]
 8012566:	9a05      	ldr	r2, [sp, #20]
 8012568:	42a3      	cmp	r3, r4
 801256a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801256e:	6902      	ldr	r2, [r0, #16]
 8012570:	d125      	bne.n	80125be <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012572:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012576:	459e      	cmp	lr, r3
 8012578:	d103      	bne.n	8012582 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801257a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801257e:	429e      	cmp	r6, r3
 8012580:	d035      	beq.n	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012582:	88d1      	ldrh	r1, [r2, #6]
 8012584:	8893      	ldrh	r3, [r2, #4]
 8012586:	430b      	orrs	r3, r1
 8012588:	d010      	beq.n	80125ac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801258a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801258e:	2b00      	cmp	r3, #0
 8012590:	db0c      	blt.n	80125ac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012592:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012594:	428b      	cmp	r3, r1
 8012596:	da09      	bge.n	80125ac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012598:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801259c:	428b      	cmp	r3, r1
 801259e:	bf38      	it	cc
 80125a0:	3208      	addcc	r2, #8
 80125a2:	f103 0301 	add.w	r3, r3, #1
 80125a6:	bf38      	it	cc
 80125a8:	6102      	strcc	r2, [r0, #16]
 80125aa:	6083      	str	r3, [r0, #8]
 80125ac:	6903      	ldr	r3, [r0, #16]
 80125ae:	9a03      	ldr	r2, [sp, #12]
 80125b0:	f8a3 e000 	strh.w	lr, [r3]
 80125b4:	805a      	strh	r2, [r3, #2]
 80125b6:	2200      	movs	r2, #0
 80125b8:	809a      	strh	r2, [r3, #4]
 80125ba:	80da      	strh	r2, [r3, #6]
 80125bc:	e017      	b.n	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80125be:	9c05      	ldr	r4, [sp, #20]
 80125c0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 80125c4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 80125c8:	f004 041f 	and.w	r4, r4, #31
 80125cc:	114e      	asrs	r6, r1, #5
 80125ce:	9402      	str	r4, [sp, #8]
 80125d0:	9c04      	ldr	r4, [sp, #16]
 80125d2:	4576      	cmp	r6, lr
 80125d4:	f001 0c1f 	and.w	ip, r1, #31
 80125d8:	eba4 0403 	sub.w	r4, r4, r3
 80125dc:	d10a      	bne.n	80125f4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 80125de:	9b02      	ldr	r3, [sp, #8]
 80125e0:	449c      	add	ip, r3
 80125e2:	44a0      	add	r8, r4
 80125e4:	fb04 a40c 	mla	r4, r4, ip, sl
 80125e8:	f8a2 8004 	strh.w	r8, [r2, #4]
 80125ec:	80d4      	strh	r4, [r2, #6]
 80125ee:	b013      	add	sp, #76	; 0x4c
 80125f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80125f4:	9d05      	ldr	r5, [sp, #20]
 80125f6:	1a69      	subs	r1, r5, r1
 80125f8:	bf5b      	ittet	pl
 80125fa:	f1cc 0520 	rsbpl	r5, ip, #32
 80125fe:	436c      	mulpl	r4, r5
 8012600:	2500      	movmi	r5, #0
 8012602:	2520      	movpl	r5, #32
 8012604:	bf44      	itt	mi
 8012606:	fb04 f40c 	mulmi.w	r4, r4, ip
 801260a:	4249      	negmi	r1, r1
 801260c:	9501      	str	r5, [sp, #4]
 801260e:	9f01      	ldr	r7, [sp, #4]
 8012610:	fb94 f5f1 	sdiv	r5, r4, r1
 8012614:	fb01 4415 	mls	r4, r1, r5, r4
 8012618:	bf54      	ite	pl
 801261a:	f04f 0901 	movpl.w	r9, #1
 801261e:	f04f 39ff 	movmi.w	r9, #4294967295
 8012622:	2c00      	cmp	r4, #0
 8012624:	bfb8      	it	lt
 8012626:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801262a:	44bc      	add	ip, r7
 801262c:	44a8      	add	r8, r5
 801262e:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012632:	f8a2 8004 	strh.w	r8, [r2, #4]
 8012636:	f8a2 c006 	strh.w	ip, [r2, #6]
 801263a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801263e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012642:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 8012646:	bfb8      	it	lt
 8012648:	1864      	addlt	r4, r4, r1
 801264a:	ea58 0202 	orrs.w	r2, r8, r2
 801264e:	444e      	add	r6, r9
 8012650:	d011      	beq.n	8012676 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012652:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012656:	f1b8 0f00 	cmp.w	r8, #0
 801265a:	db0c      	blt.n	8012676 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801265c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801265e:	4590      	cmp	r8, r2
 8012660:	da09      	bge.n	8012676 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012662:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012666:	4590      	cmp	r8, r2
 8012668:	bf3c      	itt	cc
 801266a:	f10c 0208 	addcc.w	r2, ip, #8
 801266e:	6102      	strcc	r2, [r0, #16]
 8012670:	f108 0201 	add.w	r2, r8, #1
 8012674:	6082      	str	r2, [r0, #8]
 8012676:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801267a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801267e:	f8ac 6000 	strh.w	r6, [ip]
 8012682:	2700      	movs	r7, #0
 8012684:	45b6      	cmp	lr, r6
 8012686:	f8ac 2002 	strh.w	r2, [ip, #2]
 801268a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801268e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012692:	442b      	add	r3, r5
 8012694:	d04d      	beq.n	8012732 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012696:	9f04      	ldr	r7, [sp, #16]
 8012698:	1aff      	subs	r7, r7, r3
 801269a:	443d      	add	r5, r7
 801269c:	016d      	lsls	r5, r5, #5
 801269e:	fb95 f8f1 	sdiv	r8, r5, r1
 80126a2:	fb01 5518 	mls	r5, r1, r8, r5
 80126a6:	2d00      	cmp	r5, #0
 80126a8:	bfb8      	it	lt
 80126aa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80126ae:	f108 0701 	add.w	r7, r8, #1
 80126b2:	bfb8      	it	lt
 80126b4:	186d      	addlt	r5, r5, r1
 80126b6:	1a64      	subs	r4, r4, r1
 80126b8:	9703      	str	r7, [sp, #12]
 80126ba:	f04f 0a00 	mov.w	sl, #0
 80126be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126c2:	1964      	adds	r4, r4, r5
 80126c4:	bf58      	it	pl
 80126c6:	9f03      	ldrpl	r7, [sp, #12]
 80126c8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80126cc:	bf48      	it	mi
 80126ce:	4647      	movmi	r7, r8
 80126d0:	44bb      	add	fp, r7
 80126d2:	f8ac b004 	strh.w	fp, [ip, #4]
 80126d6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80126da:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80126de:	f8ac b006 	strh.w	fp, [ip, #6]
 80126e2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80126e6:	443b      	add	r3, r7
 80126e8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80126ec:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80126f0:	bf58      	it	pl
 80126f2:	1a64      	subpl	r4, r4, r1
 80126f4:	ea5b 0707 	orrs.w	r7, fp, r7
 80126f8:	444e      	add	r6, r9
 80126fa:	d011      	beq.n	8012720 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80126fc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012700:	f1bb 0f00 	cmp.w	fp, #0
 8012704:	db0c      	blt.n	8012720 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 8012706:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012708:	45bb      	cmp	fp, r7
 801270a:	da09      	bge.n	8012720 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801270c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012710:	45bb      	cmp	fp, r7
 8012712:	bf3c      	itt	cc
 8012714:	f10c 0708 	addcc.w	r7, ip, #8
 8012718:	6107      	strcc	r7, [r0, #16]
 801271a:	f10b 0701 	add.w	r7, fp, #1
 801271e:	6087      	str	r7, [r0, #8]
 8012720:	6907      	ldr	r7, [r0, #16]
 8012722:	45b6      	cmp	lr, r6
 8012724:	803e      	strh	r6, [r7, #0]
 8012726:	807a      	strh	r2, [r7, #2]
 8012728:	f8a7 a004 	strh.w	sl, [r7, #4]
 801272c:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012730:	d1c5      	bne.n	80126be <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 8012732:	9a04      	ldr	r2, [sp, #16]
 8012734:	1ad3      	subs	r3, r2, r3
 8012736:	6902      	ldr	r2, [r0, #16]
 8012738:	8891      	ldrh	r1, [r2, #4]
 801273a:	88d6      	ldrh	r6, [r2, #6]
 801273c:	4419      	add	r1, r3
 801273e:	8091      	strh	r1, [r2, #4]
 8012740:	9902      	ldr	r1, [sp, #8]
 8012742:	f101 0c20 	add.w	ip, r1, #32
 8012746:	9901      	ldr	r1, [sp, #4]
 8012748:	ebac 0c01 	sub.w	ip, ip, r1
 801274c:	fb03 630c 	mla	r3, r3, ip, r6
 8012750:	80d3      	strh	r3, [r2, #6]
 8012752:	e74c      	b.n	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012754:	9d05      	ldr	r5, [sp, #20]
 8012756:	1aa2      	subs	r2, r4, r2
 8012758:	eba5 0501 	sub.w	r5, r5, r1
 801275c:	9508      	str	r5, [sp, #32]
 801275e:	9202      	str	r2, [sp, #8]
 8012760:	f140 8128 	bpl.w	80129b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012764:	9a03      	ldr	r2, [sp, #12]
 8012766:	2a00      	cmp	r2, #0
 8012768:	f6ff af41 	blt.w	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801276c:	9a02      	ldr	r2, [sp, #8]
 801276e:	4252      	negs	r2, r2
 8012770:	9202      	str	r2, [sp, #8]
 8012772:	9a06      	ldr	r2, [sp, #24]
 8012774:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012778:	f04f 34ff 	mov.w	r4, #4294967295
 801277c:	9206      	str	r2, [sp, #24]
 801277e:	462a      	mov	r2, r5
 8012780:	940b      	str	r4, [sp, #44]	; 0x2c
 8012782:	435a      	muls	r2, r3
 8012784:	2400      	movs	r4, #0
 8012786:	9d02      	ldr	r5, [sp, #8]
 8012788:	9401      	str	r4, [sp, #4]
 801278a:	9c02      	ldr	r4, [sp, #8]
 801278c:	fb92 f4f4 	sdiv	r4, r2, r4
 8012790:	fb05 2214 	mls	r2, r5, r4, r2
 8012794:	2a00      	cmp	r2, #0
 8012796:	9207      	str	r2, [sp, #28]
 8012798:	bfbc      	itt	lt
 801279a:	1952      	addlt	r2, r2, r5
 801279c:	9207      	strlt	r2, [sp, #28]
 801279e:	9a01      	ldr	r2, [sp, #4]
 80127a0:	6905      	ldr	r5, [r0, #16]
 80127a2:	bfb8      	it	lt
 80127a4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 80127a8:	eb04 0901 	add.w	r9, r4, r1
 80127ac:	429a      	cmp	r2, r3
 80127ae:	ea4f 1669 	mov.w	r6, r9, asr #5
 80127b2:	f040 8112 	bne.w	80129da <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 80127b6:	f9b5 3000 	ldrsh.w	r3, [r5]
 80127ba:	429e      	cmp	r6, r3
 80127bc:	d104      	bne.n	80127c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 80127be:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80127c2:	9a03      	ldr	r2, [sp, #12]
 80127c4:	429a      	cmp	r2, r3
 80127c6:	d01b      	beq.n	8012800 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 80127c8:	88ea      	ldrh	r2, [r5, #6]
 80127ca:	88ab      	ldrh	r3, [r5, #4]
 80127cc:	4313      	orrs	r3, r2
 80127ce:	d010      	beq.n	80127f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127d0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80127d4:	2a00      	cmp	r2, #0
 80127d6:	db0c      	blt.n	80127f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127d8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80127da:	429a      	cmp	r2, r3
 80127dc:	da09      	bge.n	80127f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 80127de:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 80127e2:	429a      	cmp	r2, r3
 80127e4:	bf38      	it	cc
 80127e6:	3508      	addcc	r5, #8
 80127e8:	f102 0201 	add.w	r2, r2, #1
 80127ec:	bf38      	it	cc
 80127ee:	6105      	strcc	r5, [r0, #16]
 80127f0:	6082      	str	r2, [r0, #8]
 80127f2:	6903      	ldr	r3, [r0, #16]
 80127f4:	9a03      	ldr	r2, [sp, #12]
 80127f6:	805a      	strh	r2, [r3, #2]
 80127f8:	2200      	movs	r2, #0
 80127fa:	801e      	strh	r6, [r3, #0]
 80127fc:	809a      	strh	r2, [r3, #4]
 80127fe:	80da      	strh	r2, [r3, #6]
 8012800:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012802:	9a03      	ldr	r2, [sp, #12]
 8012804:	6901      	ldr	r1, [r0, #16]
 8012806:	441a      	add	r2, r3
 8012808:	f9b1 3000 	ldrsh.w	r3, [r1]
 801280c:	42b3      	cmp	r3, r6
 801280e:	d103      	bne.n	8012818 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012810:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012814:	429a      	cmp	r2, r3
 8012816:	d01a      	beq.n	801284e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012818:	88cc      	ldrh	r4, [r1, #6]
 801281a:	888b      	ldrh	r3, [r1, #4]
 801281c:	4323      	orrs	r3, r4
 801281e:	d010      	beq.n	8012842 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012820:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012824:	2c00      	cmp	r4, #0
 8012826:	db0c      	blt.n	8012842 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012828:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801282a:	429c      	cmp	r4, r3
 801282c:	da09      	bge.n	8012842 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801282e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012832:	429c      	cmp	r4, r3
 8012834:	bf38      	it	cc
 8012836:	3108      	addcc	r1, #8
 8012838:	f104 0401 	add.w	r4, r4, #1
 801283c:	bf38      	it	cc
 801283e:	6101      	strcc	r1, [r0, #16]
 8012840:	6084      	str	r4, [r0, #8]
 8012842:	6903      	ldr	r3, [r0, #16]
 8012844:	2100      	movs	r1, #0
 8012846:	801e      	strh	r6, [r3, #0]
 8012848:	805a      	strh	r2, [r3, #2]
 801284a:	8099      	strh	r1, [r3, #4]
 801284c:	80d9      	strh	r1, [r3, #6]
 801284e:	9b06      	ldr	r3, [sp, #24]
 8012850:	4293      	cmp	r3, r2
 8012852:	f000 8082 	beq.w	801295a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012856:	9b08      	ldr	r3, [sp, #32]
 8012858:	9c02      	ldr	r4, [sp, #8]
 801285a:	9902      	ldr	r1, [sp, #8]
 801285c:	015b      	lsls	r3, r3, #5
 801285e:	fb93 f1f1 	sdiv	r1, r3, r1
 8012862:	fb04 3311 	mls	r3, r4, r1, r3
 8012866:	2b00      	cmp	r3, #0
 8012868:	9103      	str	r1, [sp, #12]
 801286a:	9308      	str	r3, [sp, #32]
 801286c:	da04      	bge.n	8012878 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801286e:	1e4b      	subs	r3, r1, #1
 8012870:	9303      	str	r3, [sp, #12]
 8012872:	9b08      	ldr	r3, [sp, #32]
 8012874:	4423      	add	r3, r4
 8012876:	9308      	str	r3, [sp, #32]
 8012878:	9b07      	ldr	r3, [sp, #28]
 801287a:	9902      	ldr	r1, [sp, #8]
 801287c:	1a5b      	subs	r3, r3, r1
 801287e:	9307      	str	r3, [sp, #28]
 8012880:	9b01      	ldr	r3, [sp, #4]
 8012882:	f1c3 0320 	rsb	r3, r3, #32
 8012886:	930e      	str	r3, [sp, #56]	; 0x38
 8012888:	990e      	ldr	r1, [sp, #56]	; 0x38
 801288a:	9b01      	ldr	r3, [sp, #4]
 801288c:	1a5b      	subs	r3, r3, r1
 801288e:	464f      	mov	r7, r9
 8012890:	930a      	str	r3, [sp, #40]	; 0x28
 8012892:	2600      	movs	r6, #0
 8012894:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012898:	185b      	adds	r3, r3, r1
 801289a:	bf58      	it	pl
 801289c:	9902      	ldrpl	r1, [sp, #8]
 801289e:	9307      	str	r3, [sp, #28]
 80128a0:	bf5d      	ittte	pl
 80128a2:	1a5b      	subpl	r3, r3, r1
 80128a4:	9307      	strpl	r3, [sp, #28]
 80128a6:	9b03      	ldrpl	r3, [sp, #12]
 80128a8:	9903      	ldrmi	r1, [sp, #12]
 80128aa:	bf58      	it	pl
 80128ac:	1c59      	addpl	r1, r3, #1
 80128ae:	4489      	add	r9, r1
 80128b0:	2a00      	cmp	r2, #0
 80128b2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 80128b6:	db2e      	blt.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80128b8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 80128ba:	4293      	cmp	r3, r2
 80128bc:	dd2b      	ble.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80128be:	9c01      	ldr	r4, [sp, #4]
 80128c0:	6905      	ldr	r5, [r0, #16]
 80128c2:	46a0      	mov	r8, r4
 80128c4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80128c6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 80128ca:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 80128ce:	45a0      	cmp	r8, r4
 80128d0:	f040 814f 	bne.w	8012b72 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 80128d4:	f9b5 1000 	ldrsh.w	r1, [r5]
 80128d8:	4551      	cmp	r1, sl
 80128da:	d103      	bne.n	80128e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 80128dc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80128e0:	4291      	cmp	r1, r2
 80128e2:	d018      	beq.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 80128e4:	ea5c 010e 	orrs.w	r1, ip, lr
 80128e8:	d00f      	beq.n	801290a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128ea:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 80128ee:	2900      	cmp	r1, #0
 80128f0:	db0b      	blt.n	801290a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128f2:	428b      	cmp	r3, r1
 80128f4:	dd09      	ble.n	801290a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 80128f6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 80128fa:	4299      	cmp	r1, r3
 80128fc:	bf38      	it	cc
 80128fe:	3508      	addcc	r5, #8
 8012900:	f101 0101 	add.w	r1, r1, #1
 8012904:	bf38      	it	cc
 8012906:	6105      	strcc	r5, [r0, #16]
 8012908:	6081      	str	r1, [r0, #8]
 801290a:	6903      	ldr	r3, [r0, #16]
 801290c:	f8a3 a000 	strh.w	sl, [r3]
 8012910:	805a      	strh	r2, [r3, #2]
 8012912:	809e      	strh	r6, [r3, #4]
 8012914:	80de      	strh	r6, [r3, #6]
 8012916:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012918:	6901      	ldr	r1, [r0, #16]
 801291a:	441a      	add	r2, r3
 801291c:	88cc      	ldrh	r4, [r1, #6]
 801291e:	888b      	ldrh	r3, [r1, #4]
 8012920:	4323      	orrs	r3, r4
 8012922:	d010      	beq.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012924:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012928:	2c00      	cmp	r4, #0
 801292a:	db0c      	blt.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801292c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801292e:	429c      	cmp	r4, r3
 8012930:	da09      	bge.n	8012946 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012932:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012936:	429c      	cmp	r4, r3
 8012938:	bf38      	it	cc
 801293a:	3108      	addcc	r1, #8
 801293c:	f104 0401 	add.w	r4, r4, #1
 8012940:	bf38      	it	cc
 8012942:	6101      	strcc	r1, [r0, #16]
 8012944:	6084      	str	r4, [r0, #8]
 8012946:	6903      	ldr	r3, [r0, #16]
 8012948:	f8a3 a000 	strh.w	sl, [r3]
 801294c:	805a      	strh	r2, [r3, #2]
 801294e:	809e      	strh	r6, [r3, #4]
 8012950:	80de      	strh	r6, [r3, #6]
 8012952:	9b06      	ldr	r3, [sp, #24]
 8012954:	4293      	cmp	r3, r2
 8012956:	464f      	mov	r7, r9
 8012958:	d19c      	bne.n	8012894 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801295a:	9b01      	ldr	r3, [sp, #4]
 801295c:	6907      	ldr	r7, [r0, #16]
 801295e:	f1c3 0620 	rsb	r6, r3, #32
 8012962:	9b05      	ldr	r3, [sp, #20]
 8012964:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012968:	9b04      	ldr	r3, [sp, #16]
 801296a:	429e      	cmp	r6, r3
 801296c:	f040 81cc 	bne.w	8012d08 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012970:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012974:	459e      	cmp	lr, r3
 8012976:	d104      	bne.n	8012982 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012978:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801297c:	429a      	cmp	r2, r3
 801297e:	f43f ae36 	beq.w	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012982:	88f9      	ldrh	r1, [r7, #6]
 8012984:	88bb      	ldrh	r3, [r7, #4]
 8012986:	430b      	orrs	r3, r1
 8012988:	d010      	beq.n	80129ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801298a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801298e:	2b00      	cmp	r3, #0
 8012990:	db0c      	blt.n	80129ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012992:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012994:	428b      	cmp	r3, r1
 8012996:	da09      	bge.n	80129ac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012998:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801299c:	428b      	cmp	r3, r1
 801299e:	bf38      	it	cc
 80129a0:	3708      	addcc	r7, #8
 80129a2:	f103 0301 	add.w	r3, r3, #1
 80129a6:	bf38      	it	cc
 80129a8:	6107      	strcc	r7, [r0, #16]
 80129aa:	6083      	str	r3, [r0, #8]
 80129ac:	6903      	ldr	r3, [r0, #16]
 80129ae:	f8a3 e000 	strh.w	lr, [r3]
 80129b2:	e5ff      	b.n	80125b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 80129b4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 80129b6:	9c03      	ldr	r4, [sp, #12]
 80129b8:	42a2      	cmp	r2, r4
 80129ba:	f6ff ae18 	blt.w	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 80129be:	9c06      	ldr	r4, [sp, #24]
 80129c0:	42a2      	cmp	r2, r4
 80129c2:	bfb8      	it	lt
 80129c4:	3201      	addlt	r2, #1
 80129c6:	9c08      	ldr	r4, [sp, #32]
 80129c8:	bfb8      	it	lt
 80129ca:	9206      	strlt	r2, [sp, #24]
 80129cc:	f1c3 0220 	rsb	r2, r3, #32
 80129d0:	4362      	muls	r2, r4
 80129d2:	2401      	movs	r4, #1
 80129d4:	940b      	str	r4, [sp, #44]	; 0x2c
 80129d6:	2420      	movs	r4, #32
 80129d8:	e6d5      	b.n	8012786 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 80129da:	f009 021f 	and.w	r2, r9, #31
 80129de:	ea4f 1861 	mov.w	r8, r1, asr #5
 80129e2:	920c      	str	r2, [sp, #48]	; 0x30
 80129e4:	9a01      	ldr	r2, [sp, #4]
 80129e6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 80129ea:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 80129ee:	45b0      	cmp	r8, r6
 80129f0:	f001 011f 	and.w	r1, r1, #31
 80129f4:	eba2 0203 	sub.w	r2, r2, r3
 80129f8:	d108      	bne.n	8012a0c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 80129fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80129fc:	4419      	add	r1, r3
 80129fe:	4496      	add	lr, r2
 8012a00:	fb02 a101 	mla	r1, r2, r1, sl
 8012a04:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012a08:	80e9      	strh	r1, [r5, #6]
 8012a0a:	e6f9      	b.n	8012800 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a0c:	2c00      	cmp	r4, #0
 8012a0e:	f2c0 80a9 	blt.w	8012b64 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012a12:	2701      	movs	r7, #1
 8012a14:	f1c1 0c20 	rsb	ip, r1, #32
 8012a18:	970a      	str	r7, [sp, #40]	; 0x28
 8012a1a:	fb02 f20c 	mul.w	r2, r2, ip
 8012a1e:	2720      	movs	r7, #32
 8012a20:	9709      	str	r7, [sp, #36]	; 0x24
 8012a22:	fb92 fcf4 	sdiv	ip, r2, r4
 8012a26:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012a28:	fb04 221c 	mls	r2, r4, ip, r2
 8012a2c:	2a00      	cmp	r2, #0
 8012a2e:	bfb8      	it	lt
 8012a30:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012a34:	4439      	add	r1, r7
 8012a36:	fb0c a101 	mla	r1, ip, r1, sl
 8012a3a:	80e9      	strh	r1, [r5, #6]
 8012a3c:	44e6      	add	lr, ip
 8012a3e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012a40:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012a44:	eb08 0501 	add.w	r5, r8, r1
 8012a48:	6901      	ldr	r1, [r0, #16]
 8012a4a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012a4e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012a52:	bfb8      	it	lt
 8012a54:	1912      	addlt	r2, r2, r4
 8012a56:	ea58 070e 	orrs.w	r7, r8, lr
 8012a5a:	d010      	beq.n	8012a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a5c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012a60:	f1be 0f00 	cmp.w	lr, #0
 8012a64:	db0b      	blt.n	8012a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a66:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012a68:	45be      	cmp	lr, r7
 8012a6a:	da08      	bge.n	8012a7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012a6c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012a70:	45be      	cmp	lr, r7
 8012a72:	bf3c      	itt	cc
 8012a74:	3108      	addcc	r1, #8
 8012a76:	6101      	strcc	r1, [r0, #16]
 8012a78:	f10e 0101 	add.w	r1, lr, #1
 8012a7c:	6081      	str	r1, [r0, #8]
 8012a7e:	6901      	ldr	r1, [r0, #16]
 8012a80:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012a84:	800d      	strh	r5, [r1, #0]
 8012a86:	f04f 0e00 	mov.w	lr, #0
 8012a8a:	42ae      	cmp	r6, r5
 8012a8c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012a90:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012a94:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012a98:	4463      	add	r3, ip
 8012a9a:	d054      	beq.n	8012b46 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012a9c:	9901      	ldr	r1, [sp, #4]
 8012a9e:	1ac9      	subs	r1, r1, r3
 8012aa0:	4461      	add	r1, ip
 8012aa2:	0149      	lsls	r1, r1, #5
 8012aa4:	fb91 fef4 	sdiv	lr, r1, r4
 8012aa8:	fb04 111e 	mls	r1, r4, lr, r1
 8012aac:	2900      	cmp	r1, #0
 8012aae:	bfb8      	it	lt
 8012ab0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012ab4:	f10e 0701 	add.w	r7, lr, #1
 8012ab8:	bfb8      	it	lt
 8012aba:	1909      	addlt	r1, r1, r4
 8012abc:	1b12      	subs	r2, r2, r4
 8012abe:	970d      	str	r7, [sp, #52]	; 0x34
 8012ac0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012ac4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012ac6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012aca:	1852      	adds	r2, r2, r1
 8012acc:	bf54      	ite	pl
 8012ace:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012ad2:	46f4      	movmi	ip, lr
 8012ad4:	44e3      	add	fp, ip
 8012ad6:	f8aa b004 	strh.w	fp, [sl, #4]
 8012ada:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012ade:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012ae2:	f8aa b006 	strh.w	fp, [sl, #6]
 8012ae6:	4463      	add	r3, ip
 8012ae8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012aec:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012af0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012af4:	bf58      	it	pl
 8012af6:	1b12      	subpl	r2, r2, r4
 8012af8:	443d      	add	r5, r7
 8012afa:	ea5b 070a 	orrs.w	r7, fp, sl
 8012afe:	d014      	beq.n	8012b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b00:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012b04:	f1ba 0f00 	cmp.w	sl, #0
 8012b08:	db0f      	blt.n	8012b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b0a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012b0c:	45ba      	cmp	sl, r7
 8012b0e:	da0c      	bge.n	8012b2a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012b10:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012b14:	45ba      	cmp	sl, r7
 8012b16:	bf38      	it	cc
 8012b18:	f10c 0c08 	addcc.w	ip, ip, #8
 8012b1c:	f10a 0a01 	add.w	sl, sl, #1
 8012b20:	bf38      	it	cc
 8012b22:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012b26:	f8c0 a008 	str.w	sl, [r0, #8]
 8012b2a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012b2e:	f04f 0700 	mov.w	r7, #0
 8012b32:	42ae      	cmp	r6, r5
 8012b34:	f8ac 5000 	strh.w	r5, [ip]
 8012b38:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012b3c:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012b40:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012b44:	d1bc      	bne.n	8012ac0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012b46:	6904      	ldr	r4, [r0, #16]
 8012b48:	9a01      	ldr	r2, [sp, #4]
 8012b4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012b4c:	1ad3      	subs	r3, r2, r3
 8012b4e:	88a2      	ldrh	r2, [r4, #4]
 8012b50:	441a      	add	r2, r3
 8012b52:	80a2      	strh	r2, [r4, #4]
 8012b54:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012b56:	3120      	adds	r1, #32
 8012b58:	1a89      	subs	r1, r1, r2
 8012b5a:	88e2      	ldrh	r2, [r4, #6]
 8012b5c:	fb03 2301 	mla	r3, r3, r1, r2
 8012b60:	80e3      	strh	r3, [r4, #6]
 8012b62:	e64d      	b.n	8012800 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012b64:	f04f 37ff 	mov.w	r7, #4294967295
 8012b68:	970a      	str	r7, [sp, #40]	; 0x28
 8012b6a:	434a      	muls	r2, r1
 8012b6c:	4264      	negs	r4, r4
 8012b6e:	2700      	movs	r7, #0
 8012b70:	e756      	b.n	8012a20 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012b72:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012b76:	f009 031f 	and.w	r3, r9, #31
 8012b7a:	45d0      	cmp	r8, sl
 8012b7c:	f007 071f 	and.w	r7, r7, #31
 8012b80:	930f      	str	r3, [sp, #60]	; 0x3c
 8012b82:	fa1f fc8c 	uxth.w	ip, ip
 8012b86:	fa1f fe8e 	uxth.w	lr, lr
 8012b8a:	d10a      	bne.n	8012ba2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012b8c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b8e:	449c      	add	ip, r3
 8012b90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012b92:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012b96:	441f      	add	r7, r3
 8012b98:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012b9a:	fb03 e707 	mla	r7, r3, r7, lr
 8012b9e:	80ef      	strh	r7, [r5, #6]
 8012ba0:	e6b9      	b.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012ba2:	2900      	cmp	r1, #0
 8012ba4:	f2c0 80a8 	blt.w	8012cf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012ba8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012baa:	f1c7 0320 	rsb	r3, r7, #32
 8012bae:	4363      	muls	r3, r4
 8012bb0:	2401      	movs	r4, #1
 8012bb2:	940d      	str	r4, [sp, #52]	; 0x34
 8012bb4:	2420      	movs	r4, #32
 8012bb6:	940c      	str	r4, [sp, #48]	; 0x30
 8012bb8:	fb93 f4f1 	sdiv	r4, r3, r1
 8012bbc:	fb01 3b14 	mls	fp, r1, r4, r3
 8012bc0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012bc2:	f1bb 0f00 	cmp.w	fp, #0
 8012bc6:	bfb8      	it	lt
 8012bc8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012bcc:	441f      	add	r7, r3
 8012bce:	fb04 e707 	mla	r7, r4, r7, lr
 8012bd2:	44a4      	add	ip, r4
 8012bd4:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012bd8:	80ef      	strh	r7, [r5, #6]
 8012bda:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012bde:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012be0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012be4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012be8:	bfb8      	it	lt
 8012bea:	448b      	addlt	fp, r1
 8012bec:	eb08 0503 	add.w	r5, r8, r3
 8012bf0:	ea5e 0307 	orrs.w	r3, lr, r7
 8012bf4:	d011      	beq.n	8012c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012bf6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012bfa:	f1be 0f00 	cmp.w	lr, #0
 8012bfe:	db0c      	blt.n	8012c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012c00:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012c02:	45be      	cmp	lr, r7
 8012c04:	da09      	bge.n	8012c1a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012c06:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012c0a:	45be      	cmp	lr, r7
 8012c0c:	bf3c      	itt	cc
 8012c0e:	f10c 0708 	addcc.w	r7, ip, #8
 8012c12:	6107      	strcc	r7, [r0, #16]
 8012c14:	f10e 0701 	add.w	r7, lr, #1
 8012c18:	6087      	str	r7, [r0, #8]
 8012c1a:	6907      	ldr	r7, [r0, #16]
 8012c1c:	b213      	sxth	r3, r2
 8012c1e:	9310      	str	r3, [sp, #64]	; 0x40
 8012c20:	807b      	strh	r3, [r7, #2]
 8012c22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012c24:	803d      	strh	r5, [r7, #0]
 8012c26:	4555      	cmp	r5, sl
 8012c28:	80be      	strh	r6, [r7, #4]
 8012c2a:	80fe      	strh	r6, [r7, #6]
 8012c2c:	eb04 0c03 	add.w	ip, r4, r3
 8012c30:	d051      	beq.n	8012cd6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012c32:	9b01      	ldr	r3, [sp, #4]
 8012c34:	eba3 070c 	sub.w	r7, r3, ip
 8012c38:	443c      	add	r4, r7
 8012c3a:	0164      	lsls	r4, r4, #5
 8012c3c:	fb94 f8f1 	sdiv	r8, r4, r1
 8012c40:	fb01 4418 	mls	r4, r1, r8, r4
 8012c44:	2c00      	cmp	r4, #0
 8012c46:	bfb8      	it	lt
 8012c48:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012c4c:	ebab 0301 	sub.w	r3, fp, r1
 8012c50:	f108 0701 	add.w	r7, r8, #1
 8012c54:	bfb8      	it	lt
 8012c56:	1864      	addlt	r4, r4, r1
 8012c58:	9309      	str	r3, [sp, #36]	; 0x24
 8012c5a:	9711      	str	r7, [sp, #68]	; 0x44
 8012c5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012c5e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c62:	191b      	adds	r3, r3, r4
 8012c64:	bf58      	it	pl
 8012c66:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012c68:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012c6c:	9309      	str	r3, [sp, #36]	; 0x24
 8012c6e:	bf48      	it	mi
 8012c70:	4647      	movmi	r7, r8
 8012c72:	44bb      	add	fp, r7
 8012c74:	f8ae b004 	strh.w	fp, [lr, #4]
 8012c78:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c7c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012c80:	f8ae b006 	strh.w	fp, [lr, #6]
 8012c84:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012c88:	44bc      	add	ip, r7
 8012c8a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012c8c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012c90:	443d      	add	r5, r7
 8012c92:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012c96:	bf5c      	itt	pl
 8012c98:	1a5b      	subpl	r3, r3, r1
 8012c9a:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012c9c:	ea5b 0307 	orrs.w	r3, fp, r7
 8012ca0:	d011      	beq.n	8012cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012ca2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012ca6:	f1bb 0f00 	cmp.w	fp, #0
 8012caa:	db0c      	blt.n	8012cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012cac:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012cae:	45bb      	cmp	fp, r7
 8012cb0:	da09      	bge.n	8012cc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012cb2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012cb6:	45bb      	cmp	fp, r7
 8012cb8:	bf3c      	itt	cc
 8012cba:	f10e 0708 	addcc.w	r7, lr, #8
 8012cbe:	6107      	strcc	r7, [r0, #16]
 8012cc0:	f10b 0701 	add.w	r7, fp, #1
 8012cc4:	6087      	str	r7, [r0, #8]
 8012cc6:	6907      	ldr	r7, [r0, #16]
 8012cc8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012cca:	803d      	strh	r5, [r7, #0]
 8012ccc:	4555      	cmp	r5, sl
 8012cce:	807b      	strh	r3, [r7, #2]
 8012cd0:	80be      	strh	r6, [r7, #4]
 8012cd2:	80fe      	strh	r6, [r7, #6]
 8012cd4:	d1c2      	bne.n	8012c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012cd6:	9b01      	ldr	r3, [sp, #4]
 8012cd8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012cda:	eba3 0c0c 	sub.w	ip, r3, ip
 8012cde:	6903      	ldr	r3, [r0, #16]
 8012ce0:	8899      	ldrh	r1, [r3, #4]
 8012ce2:	4461      	add	r1, ip
 8012ce4:	8099      	strh	r1, [r3, #4]
 8012ce6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012ce8:	3720      	adds	r7, #32
 8012cea:	1a7f      	subs	r7, r7, r1
 8012cec:	88d9      	ldrh	r1, [r3, #6]
 8012cee:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012cf2:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012cf6:	e60e      	b.n	8012916 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012cfa:	f04f 34ff 	mov.w	r4, #4294967295
 8012cfe:	940d      	str	r4, [sp, #52]	; 0x34
 8012d00:	437b      	muls	r3, r7
 8012d02:	4249      	negs	r1, r1
 8012d04:	2400      	movs	r4, #0
 8012d06:	e756      	b.n	8012bb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012d08:	9905      	ldr	r1, [sp, #20]
 8012d0a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012d0e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012d12:	f001 011f 	and.w	r1, r1, #31
 8012d16:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012d1a:	9102      	str	r1, [sp, #8]
 8012d1c:	9904      	ldr	r1, [sp, #16]
 8012d1e:	45f3      	cmp	fp, lr
 8012d20:	f009 0c1f 	and.w	ip, r9, #31
 8012d24:	eba1 0406 	sub.w	r4, r1, r6
 8012d28:	d108      	bne.n	8012d3c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012d2a:	9b02      	ldr	r3, [sp, #8]
 8012d2c:	449c      	add	ip, r3
 8012d2e:	44a0      	add	r8, r4
 8012d30:	fb04 a40c 	mla	r4, r4, ip, sl
 8012d34:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d38:	80fc      	strh	r4, [r7, #6]
 8012d3a:	e458      	b.n	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012d3c:	9905      	ldr	r1, [sp, #20]
 8012d3e:	ebb1 0109 	subs.w	r1, r1, r9
 8012d42:	bf5b      	ittet	pl
 8012d44:	f1cc 0520 	rsbpl	r5, ip, #32
 8012d48:	436c      	mulpl	r4, r5
 8012d4a:	2500      	movmi	r5, #0
 8012d4c:	2520      	movpl	r5, #32
 8012d4e:	bf44      	itt	mi
 8012d50:	fb04 f40c 	mulmi.w	r4, r4, ip
 8012d54:	4249      	negmi	r1, r1
 8012d56:	9501      	str	r5, [sp, #4]
 8012d58:	9b01      	ldr	r3, [sp, #4]
 8012d5a:	fb94 f5f1 	sdiv	r5, r4, r1
 8012d5e:	fb01 4415 	mls	r4, r1, r5, r4
 8012d62:	bf54      	ite	pl
 8012d64:	f04f 0901 	movpl.w	r9, #1
 8012d68:	f04f 39ff 	movmi.w	r9, #4294967295
 8012d6c:	2c00      	cmp	r4, #0
 8012d6e:	bfb8      	it	lt
 8012d70:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8012d74:	449c      	add	ip, r3
 8012d76:	44a8      	add	r8, r5
 8012d78:	fb05 ac0c 	mla	ip, r5, ip, sl
 8012d7c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012d80:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012d84:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d88:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 8012d8c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012d90:	bfb8      	it	lt
 8012d92:	1864      	addlt	r4, r4, r1
 8012d94:	ea58 0707 	orrs.w	r7, r8, r7
 8012d98:	eb0b 0309 	add.w	r3, fp, r9
 8012d9c:	d011      	beq.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012d9e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012da2:	f1b8 0f00 	cmp.w	r8, #0
 8012da6:	db0c      	blt.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012da8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012daa:	45b8      	cmp	r8, r7
 8012dac:	da09      	bge.n	8012dc2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8012dae:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8012db2:	45b8      	cmp	r8, r7
 8012db4:	bf3c      	itt	cc
 8012db6:	f10c 0708 	addcc.w	r7, ip, #8
 8012dba:	6107      	strcc	r7, [r0, #16]
 8012dbc:	f108 0701 	add.w	r7, r8, #1
 8012dc0:	6087      	str	r7, [r0, #8]
 8012dc2:	6907      	ldr	r7, [r0, #16]
 8012dc4:	f04f 0c00 	mov.w	ip, #0
 8012dc8:	b212      	sxth	r2, r2
 8012dca:	459e      	cmp	lr, r3
 8012dcc:	803b      	strh	r3, [r7, #0]
 8012dce:	807a      	strh	r2, [r7, #2]
 8012dd0:	f8a7 c004 	strh.w	ip, [r7, #4]
 8012dd4:	f8a7 c006 	strh.w	ip, [r7, #6]
 8012dd8:	442e      	add	r6, r5
 8012dda:	d04d      	beq.n	8012e78 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 8012ddc:	9f04      	ldr	r7, [sp, #16]
 8012dde:	1bbf      	subs	r7, r7, r6
 8012de0:	443d      	add	r5, r7
 8012de2:	016d      	lsls	r5, r5, #5
 8012de4:	fb95 f8f1 	sdiv	r8, r5, r1
 8012de8:	fb01 5518 	mls	r5, r1, r8, r5
 8012dec:	4565      	cmp	r5, ip
 8012dee:	bfb8      	it	lt
 8012df0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012df4:	f108 0701 	add.w	r7, r8, #1
 8012df8:	bfb8      	it	lt
 8012dfa:	186d      	addlt	r5, r5, r1
 8012dfc:	1a64      	subs	r4, r4, r1
 8012dfe:	9703      	str	r7, [sp, #12]
 8012e00:	f04f 0a00 	mov.w	sl, #0
 8012e04:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e08:	1964      	adds	r4, r4, r5
 8012e0a:	bf58      	it	pl
 8012e0c:	9f03      	ldrpl	r7, [sp, #12]
 8012e0e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 8012e12:	bf48      	it	mi
 8012e14:	4647      	movmi	r7, r8
 8012e16:	44bb      	add	fp, r7
 8012e18:	f8ac b004 	strh.w	fp, [ip, #4]
 8012e1c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e20:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012e24:	f8ac b006 	strh.w	fp, [ip, #6]
 8012e28:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e2c:	443e      	add	r6, r7
 8012e2e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012e32:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e36:	bf58      	it	pl
 8012e38:	1a64      	subpl	r4, r4, r1
 8012e3a:	ea5b 0707 	orrs.w	r7, fp, r7
 8012e3e:	444b      	add	r3, r9
 8012e40:	d011      	beq.n	8012e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e42:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 8012e46:	f1bb 0f00 	cmp.w	fp, #0
 8012e4a:	db0c      	blt.n	8012e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e4c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012e4e:	45bb      	cmp	fp, r7
 8012e50:	da09      	bge.n	8012e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8012e52:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012e56:	45bb      	cmp	fp, r7
 8012e58:	bf3c      	itt	cc
 8012e5a:	f10c 0708 	addcc.w	r7, ip, #8
 8012e5e:	6107      	strcc	r7, [r0, #16]
 8012e60:	f10b 0701 	add.w	r7, fp, #1
 8012e64:	6087      	str	r7, [r0, #8]
 8012e66:	6907      	ldr	r7, [r0, #16]
 8012e68:	459e      	cmp	lr, r3
 8012e6a:	803b      	strh	r3, [r7, #0]
 8012e6c:	807a      	strh	r2, [r7, #2]
 8012e6e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8012e72:	f8a7 a006 	strh.w	sl, [r7, #6]
 8012e76:	d1c5      	bne.n	8012e04 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8012e78:	9b04      	ldr	r3, [sp, #16]
 8012e7a:	1b9e      	subs	r6, r3, r6
 8012e7c:	6903      	ldr	r3, [r0, #16]
 8012e7e:	889a      	ldrh	r2, [r3, #4]
 8012e80:	4432      	add	r2, r6
 8012e82:	809a      	strh	r2, [r3, #4]
 8012e84:	9a02      	ldr	r2, [sp, #8]
 8012e86:	f102 0c20 	add.w	ip, r2, #32
 8012e8a:	9a01      	ldr	r2, [sp, #4]
 8012e8c:	ebac 0c02 	sub.w	ip, ip, r2
 8012e90:	88da      	ldrh	r2, [r3, #6]
 8012e92:	fb06 260c 	mla	r6, r6, ip, r2
 8012e96:	80de      	strh	r6, [r3, #6]
 8012e98:	f7ff bba9 	b.w	80125ee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

08012e9c <_ZN8touchgfx7Outline6lineToEii>:
 8012e9c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012e9e:	079b      	lsls	r3, r3, #30
 8012ea0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012ea2:	460e      	mov	r6, r1
 8012ea4:	4615      	mov	r5, r2
 8012ea6:	d511      	bpl.n	8012ecc <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012ea8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 8012eac:	ea86 0701 	eor.w	r7, r6, r1
 8012eb0:	ea85 0302 	eor.w	r3, r5, r2
 8012eb4:	433b      	orrs	r3, r7
 8012eb6:	d009      	beq.n	8012ecc <_ZN8touchgfx7Outline6lineToEii+0x30>
 8012eb8:	4633      	mov	r3, r6
 8012eba:	9500      	str	r5, [sp, #0]
 8012ebc:	f7ff fb3e 	bl	801253c <_ZN8touchgfx7Outline10renderLineEiiii>
 8012ec0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012ec2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8012ec6:	f043 0301 	orr.w	r3, r3, #1
 8012eca:	6243      	str	r3, [r0, #36]	; 0x24
 8012ecc:	b003      	add	sp, #12
 8012ece:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012ed0 <_ZN8touchgfx7Outline6moveToEii>:
 8012ed0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012ed2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8012ed4:	4615      	mov	r5, r2
 8012ed6:	079a      	lsls	r2, r3, #30
 8012ed8:	4604      	mov	r4, r0
 8012eda:	460e      	mov	r6, r1
 8012edc:	d401      	bmi.n	8012ee2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 8012ede:	f7ff faf9 	bl	80124d4 <_ZN8touchgfx7Outline5resetEv>
 8012ee2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8012ee4:	07db      	lsls	r3, r3, #31
 8012ee6:	d504      	bpl.n	8012ef2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8012ee8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 8012eec:	4620      	mov	r0, r4
 8012eee:	f7ff ffd5 	bl	8012e9c <_ZN8touchgfx7Outline6lineToEii>
 8012ef2:	6923      	ldr	r3, [r4, #16]
 8012ef4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012ef8:	1170      	asrs	r0, r6, #5
 8012efa:	4290      	cmp	r0, r2
 8012efc:	ea4f 1165 	mov.w	r1, r5, asr #5
 8012f00:	d103      	bne.n	8012f0a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 8012f02:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012f06:	4291      	cmp	r1, r2
 8012f08:	d01a      	beq.n	8012f40 <_ZN8touchgfx7Outline6moveToEii+0x70>
 8012f0a:	88df      	ldrh	r7, [r3, #6]
 8012f0c:	889a      	ldrh	r2, [r3, #4]
 8012f0e:	433a      	orrs	r2, r7
 8012f10:	d010      	beq.n	8012f34 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f12:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8012f16:	2a00      	cmp	r2, #0
 8012f18:	db0c      	blt.n	8012f34 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f1a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8012f1c:	42ba      	cmp	r2, r7
 8012f1e:	da09      	bge.n	8012f34 <_ZN8touchgfx7Outline6moveToEii+0x64>
 8012f20:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 8012f24:	42ba      	cmp	r2, r7
 8012f26:	bf38      	it	cc
 8012f28:	3308      	addcc	r3, #8
 8012f2a:	f102 0201 	add.w	r2, r2, #1
 8012f2e:	bf38      	it	cc
 8012f30:	6123      	strcc	r3, [r4, #16]
 8012f32:	60a2      	str	r2, [r4, #8]
 8012f34:	6923      	ldr	r3, [r4, #16]
 8012f36:	2200      	movs	r2, #0
 8012f38:	8018      	strh	r0, [r3, #0]
 8012f3a:	8059      	strh	r1, [r3, #2]
 8012f3c:	809a      	strh	r2, [r3, #4]
 8012f3e:	80da      	strh	r2, [r3, #6]
 8012f40:	6166      	str	r6, [r4, #20]
 8012f42:	e9c4 5606 	strd	r5, r6, [r4, #24]
 8012f46:	6225      	str	r5, [r4, #32]
 8012f48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08012f4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 8012f4a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8012f4e:	b0d0      	sub	sp, #320	; 0x140
 8012f50:	466c      	mov	r4, sp
 8012f52:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8012f56:	4627      	mov	r7, r4
 8012f58:	1a0d      	subs	r5, r1, r0
 8012f5a:	2d48      	cmp	r5, #72	; 0x48
 8012f5c:	f100 0308 	add.w	r3, r0, #8
 8012f60:	f340 80d5 	ble.w	801310e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8012f64:	112d      	asrs	r5, r5, #4
 8012f66:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 8012f6a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8012f6e:	6816      	ldr	r6, [r2, #0]
 8012f70:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8012f74:	6006      	str	r6, [r0, #0]
 8012f76:	6856      	ldr	r6, [r2, #4]
 8012f78:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8012f7c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8012f80:	6046      	str	r6, [r0, #4]
 8012f82:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8012f86:	f8a2 8002 	strh.w	r8, [r2, #2]
 8012f8a:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012f8e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012f92:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8012f96:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 8012f9a:	4565      	cmp	r5, ip
 8012f9c:	f1a1 0208 	sub.w	r2, r1, #8
 8012fa0:	db06      	blt.n	8012fb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8012fa2:	d119      	bne.n	8012fd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012fa4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8012fa8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 8012fac:	42ae      	cmp	r6, r5
 8012fae:	dd13      	ble.n	8012fd8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8012fb0:	460e      	mov	r6, r1
 8012fb2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8012fb6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8012fba:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 8012fbe:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8012fc2:	601d      	str	r5, [r3, #0]
 8012fc4:	6875      	ldr	r5, [r6, #4]
 8012fc6:	605d      	str	r5, [r3, #4]
 8012fc8:	f821 9c08 	strh.w	r9, [r1, #-8]
 8012fcc:	f821 cc06 	strh.w	ip, [r1, #-6]
 8012fd0:	f821 8c04 	strh.w	r8, [r1, #-4]
 8012fd4:	f821 ec02 	strh.w	lr, [r1, #-2]
 8012fd8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8012fdc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8012fe0:	42ae      	cmp	r6, r5
 8012fe2:	db06      	blt.n	8012ff2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8012fe4:	d116      	bne.n	8013014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012fe6:	f9b0 c000 	ldrsh.w	ip, [r0]
 8012fea:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 8012fee:	45ac      	cmp	ip, r5
 8012ff0:	da10      	bge.n	8013014 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8012ff2:	681d      	ldr	r5, [r3, #0]
 8012ff4:	f9b0 8000 	ldrsh.w	r8, [r0]
 8012ff8:	6005      	str	r5, [r0, #0]
 8012ffa:	685d      	ldr	r5, [r3, #4]
 8012ffc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013000:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 8013004:	f8a0 8008 	strh.w	r8, [r0, #8]
 8013008:	6045      	str	r5, [r0, #4]
 801300a:	8146      	strh	r6, [r0, #10]
 801300c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 8013010:	f8a0 c00e 	strh.w	ip, [r0, #14]
 8013014:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013018:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801301c:	4565      	cmp	r5, ip
 801301e:	db06      	blt.n	801302e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 8013020:	d119      	bne.n	8013056 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013022:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 8013026:	f9b0 5000 	ldrsh.w	r5, [r0]
 801302a:	42ae      	cmp	r6, r5
 801302c:	da13      	bge.n	8013056 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801302e:	460e      	mov	r6, r1
 8013030:	f9b0 9000 	ldrsh.w	r9, [r0]
 8013034:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 8013038:	6005      	str	r5, [r0, #0]
 801303a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801303e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 8013042:	6875      	ldr	r5, [r6, #4]
 8013044:	6045      	str	r5, [r0, #4]
 8013046:	f821 9c08 	strh.w	r9, [r1, #-8]
 801304a:	f821 cc06 	strh.w	ip, [r1, #-6]
 801304e:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013052:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013056:	3308      	adds	r3, #8
 8013058:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801305c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013060:	45e6      	cmp	lr, ip
 8013062:	dbf8      	blt.n	8013056 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013064:	d105      	bne.n	8013072 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013066:	f9b3 6000 	ldrsh.w	r6, [r3]
 801306a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801306e:	42ae      	cmp	r6, r5
 8013070:	dbf1      	blt.n	8013056 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013072:	4615      	mov	r5, r2
 8013074:	3a08      	subs	r2, #8
 8013076:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801307a:	45b4      	cmp	ip, r6
 801307c:	dbf9      	blt.n	8013072 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801307e:	d105      	bne.n	801308c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013080:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013084:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013088:	45b0      	cmp	r8, r6
 801308a:	dbf2      	blt.n	8013072 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801308c:	4293      	cmp	r3, r2
 801308e:	f1a5 0608 	sub.w	r6, r5, #8
 8013092:	d816      	bhi.n	80130c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8013094:	f8d6 c000 	ldr.w	ip, [r6]
 8013098:	f9b3 a000 	ldrsh.w	sl, [r3]
 801309c:	f8c3 c000 	str.w	ip, [r3]
 80130a0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 80130a4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 80130a8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 80130ac:	f8c3 c004 	str.w	ip, [r3, #4]
 80130b0:	f825 ac08 	strh.w	sl, [r5, #-8]
 80130b4:	f825 ec06 	strh.w	lr, [r5, #-6]
 80130b8:	f825 9c04 	strh.w	r9, [r5, #-4]
 80130bc:	f825 8c02 	strh.w	r8, [r5, #-2]
 80130c0:	e7c9      	b.n	8013056 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80130c2:	f8d6 e000 	ldr.w	lr, [r6]
 80130c6:	f9b0 a000 	ldrsh.w	sl, [r0]
 80130ca:	f8c0 e000 	str.w	lr, [r0]
 80130ce:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 80130d2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 80130d6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 80130da:	f8c0 e004 	str.w	lr, [r0, #4]
 80130de:	f825 ac08 	strh.w	sl, [r5, #-8]
 80130e2:	f825 cc06 	strh.w	ip, [r5, #-6]
 80130e6:	f825 9c04 	strh.w	r9, [r5, #-4]
 80130ea:	f825 8c02 	strh.w	r8, [r5, #-2]
 80130ee:	1acd      	subs	r5, r1, r3
 80130f0:	1a16      	subs	r6, r2, r0
 80130f2:	10ed      	asrs	r5, r5, #3
 80130f4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80130f8:	bfb5      	itete	lt
 80130fa:	e9c4 0200 	strdlt	r0, r2, [r4]
 80130fe:	e9c4 3100 	strdge	r3, r1, [r4]
 8013102:	460a      	movlt	r2, r1
 8013104:	4603      	movge	r3, r0
 8013106:	3408      	adds	r4, #8
 8013108:	4618      	mov	r0, r3
 801310a:	4611      	mov	r1, r2
 801310c:	e724      	b.n	8012f58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801310e:	4299      	cmp	r1, r3
 8013110:	d928      	bls.n	8013164 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 8013112:	f1a3 0210 	sub.w	r2, r3, #16
 8013116:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 801311a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801311e:	45ac      	cmp	ip, r5
 8013120:	db06      	blt.n	8013130 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 8013122:	d11d      	bne.n	8013160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013124:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 8013128:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 801312c:	42ae      	cmp	r6, r5
 801312e:	da17      	bge.n	8013160 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 8013130:	4615      	mov	r5, r2
 8013132:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 8013136:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801313a:	6116      	str	r6, [r2, #16]
 801313c:	686e      	ldr	r6, [r5, #4]
 801313e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 8013142:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 8013146:	f8a2 9008 	strh.w	r9, [r2, #8]
 801314a:	42a8      	cmp	r0, r5
 801314c:	6156      	str	r6, [r2, #20]
 801314e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8013152:	f8a2 800c 	strh.w	r8, [r2, #12]
 8013156:	f8a2 e00e 	strh.w	lr, [r2, #14]
 801315a:	f1a2 0208 	sub.w	r2, r2, #8
 801315e:	d1da      	bne.n	8013116 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013160:	3308      	adds	r3, #8
 8013162:	e7d4      	b.n	801310e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013164:	42bc      	cmp	r4, r7
 8013166:	d903      	bls.n	8013170 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013168:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801316c:	3c08      	subs	r4, #8
 801316e:	e6f3      	b.n	8012f58 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013170:	b050      	add	sp, #320	; 0x140
 8013172:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013176 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8013176:	b510      	push	{r4, lr}
 8013178:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801317a:	07da      	lsls	r2, r3, #31
 801317c:	4604      	mov	r4, r0
 801317e:	d507      	bpl.n	8013190 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013180:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8013184:	f7ff fe8a 	bl	8012e9c <_ZN8touchgfx7Outline6lineToEii>
 8013188:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801318a:	f023 0301 	bic.w	r3, r3, #1
 801318e:	6243      	str	r3, [r0, #36]	; 0x24
 8013190:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013192:	079b      	lsls	r3, r3, #30
 8013194:	d521      	bpl.n	80131da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8013196:	6923      	ldr	r3, [r4, #16]
 8013198:	88d9      	ldrh	r1, [r3, #6]
 801319a:	889a      	ldrh	r2, [r3, #4]
 801319c:	430a      	orrs	r2, r1
 801319e:	d010      	beq.n	80131c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131a0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131a4:	2a00      	cmp	r2, #0
 80131a6:	db0c      	blt.n	80131c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80131aa:	428a      	cmp	r2, r1
 80131ac:	da09      	bge.n	80131c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 80131ae:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 80131b2:	4291      	cmp	r1, r2
 80131b4:	bf88      	it	hi
 80131b6:	3308      	addhi	r3, #8
 80131b8:	f102 0201 	add.w	r2, r2, #1
 80131bc:	bf88      	it	hi
 80131be:	6123      	strhi	r3, [r4, #16]
 80131c0:	60a2      	str	r2, [r4, #8]
 80131c2:	68a1      	ldr	r1, [r4, #8]
 80131c4:	b129      	cbz	r1, 80131d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80131c6:	6863      	ldr	r3, [r4, #4]
 80131c8:	4299      	cmp	r1, r3
 80131ca:	d802      	bhi.n	80131d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 80131cc:	68e0      	ldr	r0, [r4, #12]
 80131ce:	f7ff febc 	bl	8012f4a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 80131d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80131d4:	f023 0302 	bic.w	r3, r3, #2
 80131d8:	6263      	str	r3, [r4, #36]	; 0x24
 80131da:	68e0      	ldr	r0, [r4, #12]
 80131dc:	bd10      	pop	{r4, pc}
	...

080131e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 80131e0:	4b02      	ldr	r3, [pc, #8]	; (80131ec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 80131e2:	6018      	str	r0, [r3, #0]
 80131e4:	4b02      	ldr	r3, [pc, #8]	; (80131f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 80131e6:	6019      	str	r1, [r3, #0]
 80131e8:	4770      	bx	lr
 80131ea:	bf00      	nop
 80131ec:	2000ef24 	.word	0x2000ef24
 80131f0:	2000ef28 	.word	0x2000ef28

080131f4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80131f4:	4a02      	ldr	r2, [pc, #8]	; (8013200 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80131f6:	2300      	movs	r3, #0
 80131f8:	6013      	str	r3, [r2, #0]
 80131fa:	4a02      	ldr	r2, [pc, #8]	; (8013204 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80131fc:	6013      	str	r3, [r2, #0]
 80131fe:	4770      	bx	lr
 8013200:	2000ef24 	.word	0x2000ef24
 8013204:	2000ef28 	.word	0x2000ef28

08013208 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 8013208:	4b01      	ldr	r3, [pc, #4]	; (8013210 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 801320a:	6818      	ldr	r0, [r3, #0]
 801320c:	4770      	bx	lr
 801320e:	bf00      	nop
 8013210:	2000ef24 	.word	0x2000ef24

08013214 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 8013214:	4b01      	ldr	r3, [pc, #4]	; (801321c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 8013216:	6818      	ldr	r0, [r3, #0]
 8013218:	4770      	bx	lr
 801321a:	bf00      	nop
 801321c:	2000ef28 	.word	0x2000ef28

08013220 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8013220:	b510      	push	{r4, lr}
 8013222:	6803      	ldr	r3, [r0, #0]
 8013224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013226:	460c      	mov	r4, r1
 8013228:	4798      	blx	r3
 801322a:	1b03      	subs	r3, r0, r4
 801322c:	4258      	negs	r0, r3
 801322e:	4158      	adcs	r0, r3
 8013230:	bd10      	pop	{r4, pc}
	...

08013234 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8013234:	4b01      	ldr	r3, [pc, #4]	; (801323c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8013236:	6019      	str	r1, [r3, #0]
 8013238:	4770      	bx	lr
 801323a:	bf00      	nop
 801323c:	2000ef2c 	.word	0x2000ef2c

08013240 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013240:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013244:	4696      	mov	lr, r2
 8013246:	4605      	mov	r5, r0
 8013248:	4614      	mov	r4, r2
 801324a:	460e      	mov	r6, r1
 801324c:	461f      	mov	r7, r3
 801324e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013252:	b097      	sub	sp, #92	; 0x5c
 8013254:	f10d 0c1c 	add.w	ip, sp, #28
 8013258:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801325c:	f8de 3000 	ldr.w	r3, [lr]
 8013260:	f8cc 3000 	str.w	r3, [ip]
 8013264:	f104 0e14 	add.w	lr, r4, #20
 8013268:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801326c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013270:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013274:	f8de 3000 	ldr.w	r3, [lr]
 8013278:	f8cc 3000 	str.w	r3, [ip]
 801327c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013280:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013284:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013288:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801328c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013290:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013294:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013298:	f8de 3000 	ldr.w	r3, [lr]
 801329c:	f8cc 3000 	str.w	r3, [ip]
 80132a0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80132a2:	682b      	ldr	r3, [r5, #0]
 80132a4:	9201      	str	r2, [sp, #4]
 80132a6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80132aa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80132ac:	9200      	str	r2, [sp, #0]
 80132ae:	f8cd 8008 	str.w	r8, [sp, #8]
 80132b2:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 80132b6:	aa07      	add	r2, sp, #28
 80132b8:	463b      	mov	r3, r7
 80132ba:	4631      	mov	r1, r6
 80132bc:	4628      	mov	r0, r5
 80132be:	47d8      	blx	fp
 80132c0:	46a6      	mov	lr, r4
 80132c2:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80132c6:	f10d 0c1c 	add.w	ip, sp, #28
 80132ca:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132ce:	f8de 3000 	ldr.w	r3, [lr]
 80132d2:	f8cc 3000 	str.w	r3, [ip]
 80132d6:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 80132da:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80132de:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80132e2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132e6:	343c      	adds	r4, #60	; 0x3c
 80132e8:	f8de 3000 	ldr.w	r3, [lr]
 80132ec:	f8cc 3000 	str.w	r3, [ip]
 80132f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80132f2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80132f6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80132fa:	6823      	ldr	r3, [r4, #0]
 80132fc:	f8cc 3000 	str.w	r3, [ip]
 8013300:	682b      	ldr	r3, [r5, #0]
 8013302:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8013306:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013308:	9201      	str	r2, [sp, #4]
 801330a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801330c:	9200      	str	r2, [sp, #0]
 801330e:	f8cd 8008 	str.w	r8, [sp, #8]
 8013312:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8013314:	aa07      	add	r2, sp, #28
 8013316:	463b      	mov	r3, r7
 8013318:	4631      	mov	r1, r6
 801331a:	4628      	mov	r0, r5
 801331c:	47a0      	blx	r4
 801331e:	b017      	add	sp, #92	; 0x5c
 8013320:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013324 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8013324:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013328:	b08d      	sub	sp, #52	; 0x34
 801332a:	4688      	mov	r8, r1
 801332c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801332e:	f8d3 c000 	ldr.w	ip, [r3]
 8013332:	680f      	ldr	r7, [r1, #0]
 8013334:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8013338:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 801333c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8013340:	edd3 6a07 	vldr	s13, [r3, #28]
 8013344:	9918      	ldr	r1, [sp, #96]	; 0x60
 8013346:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 801334a:	f9b1 9000 	ldrsh.w	r9, [r1]
 801334e:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013352:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013356:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801335a:	eba7 070c 	sub.w	r7, r7, ip
 801335e:	42bc      	cmp	r4, r7
 8013360:	bfa8      	it	ge
 8013362:	463c      	movge	r4, r7
 8013364:	ee07 4a90 	vmov	s15, r4
 8013368:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801336c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013370:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013374:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013378:	ee25 5a27 	vmul.f32	s10, s10, s15
 801337c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013380:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013384:	eb09 0e0c 	add.w	lr, r9, ip
 8013388:	4571      	cmp	r1, lr
 801338a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801338e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013392:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013396:	ee61 1a87 	vmul.f32	s3, s3, s14
 801339a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801339e:	f340 808d 	ble.w	80134bc <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80133a2:	eba1 060e 	sub.w	r6, r1, lr
 80133a6:	fb96 f5f4 	sdiv	r5, r6, r4
 80133aa:	ee07 5a10 	vmov	s14, r5
 80133ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80133b2:	2d00      	cmp	r5, #0
 80133b4:	fb04 6615 	mls	r6, r4, r5, r6
 80133b8:	eea7 0a04 	vfma.f32	s0, s14, s8
 80133bc:	eee7 0a24 	vfma.f32	s1, s14, s9
 80133c0:	eea7 1a05 	vfma.f32	s2, s14, s10
 80133c4:	dd13      	ble.n	80133ee <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80133c6:	ee70 6a44 	vsub.f32	s13, s0, s8
 80133ca:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80133ce:	eef5 6a40 	vcmp.f32	s13, #0.0
 80133d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80133d6:	bf18      	it	ne
 80133d8:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80133dc:	ee31 2a45 	vsub.f32	s4, s2, s10
 80133e0:	bf08      	it	eq
 80133e2:	eeb0 7a67 	vmoveq.f32	s14, s15
 80133e6:	ee61 1a87 	vmul.f32	s3, s3, s14
 80133ea:	ee22 2a07 	vmul.f32	s4, s4, s14
 80133ee:	fb05 f204 	mul.w	r2, r5, r4
 80133f2:	1abf      	subs	r7, r7, r2
 80133f4:	4494      	add	ip, r2
 80133f6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80133fa:	4411      	add	r1, r2
 80133fc:	eb09 020c 	add.w	r2, r9, ip
 8013400:	443a      	add	r2, r7
 8013402:	b209      	sxth	r1, r1
 8013404:	428a      	cmp	r2, r1
 8013406:	bfc4      	itt	gt
 8013408:	eba1 0209 	subgt.w	r2, r1, r9
 801340c:	eba2 070c 	subgt.w	r7, r2, ip
 8013410:	2f00      	cmp	r7, #0
 8013412:	dd50      	ble.n	80134b6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8013414:	fb97 f1f4 	sdiv	r1, r7, r4
 8013418:	fb04 7211 	mls	r2, r4, r1, r7
 801341c:	b90a      	cbnz	r2, 8013422 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801341e:	3901      	subs	r1, #1
 8013420:	4622      	mov	r2, r4
 8013422:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013426:	6840      	ldr	r0, [r0, #4]
 8013428:	900b      	str	r0, [sp, #44]	; 0x2c
 801342a:	f8d0 a000 	ldr.w	sl, [r0]
 801342e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8013430:	9008      	str	r0, [sp, #32]
 8013432:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8013436:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013438:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801343c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8013440:	695b      	ldr	r3, [r3, #20]
 8013442:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8013444:	445b      	add	r3, fp
 8013446:	eef0 6a42 	vmov.f32	s13, s4
 801344a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801344e:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013452:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013456:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801345a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801345e:	9307      	str	r3, [sp, #28]
 8013460:	ee17 7a90 	vmov	r7, s15
 8013464:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013468:	eeb0 7a61 	vmov.f32	s14, s3
 801346c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013470:	ee16 3a90 	vmov	r3, s13
 8013474:	fb97 f7f4 	sdiv	r7, r7, r4
 8013478:	ee17 ca90 	vmov	ip, s15
 801347c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013480:	fb9c fcf4 	sdiv	ip, ip, r4
 8013484:	fb0c 3306 	mla	r3, ip, r6, r3
 8013488:	9302      	str	r3, [sp, #8]
 801348a:	ee17 3a10 	vmov	r3, s14
 801348e:	44b6      	add	lr, r6
 8013490:	fb04 e505 	mla	r5, r4, r5, lr
 8013494:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013498:	fb07 3706 	mla	r7, r7, r6, r3
 801349c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80134a0:	e9cd 4700 	strd	r4, r7, [sp]
 80134a4:	2900      	cmp	r1, #0
 80134a6:	bfcc      	ite	gt
 80134a8:	46a1      	movgt	r9, r4
 80134aa:	4691      	movle	r9, r2
 80134ac:	eba9 0306 	sub.w	r3, r9, r6
 80134b0:	f8da 4008 	ldr.w	r4, [sl, #8]
 80134b4:	47a0      	blx	r4
 80134b6:	b00d      	add	sp, #52	; 0x34
 80134b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80134bc:	2500      	movs	r5, #0
 80134be:	462e      	mov	r6, r5
 80134c0:	e799      	b.n	80133f6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080134c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80134c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134c8:	b0db      	sub	sp, #364	; 0x16c
 80134ca:	461d      	mov	r5, r3
 80134cc:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80134d0:	930a      	str	r3, [sp, #40]	; 0x28
 80134d2:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80134d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80134d8:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80134dc:	9310      	str	r3, [sp, #64]	; 0x40
 80134de:	6803      	ldr	r3, [r0, #0]
 80134e0:	910f      	str	r1, [sp, #60]	; 0x3c
 80134e2:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80134e4:	9009      	str	r0, [sp, #36]	; 0x24
 80134e6:	4614      	mov	r4, r2
 80134e8:	4629      	mov	r1, r5
 80134ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80134ee:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80134f2:	47b8      	blx	r7
 80134f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134f6:	6058      	str	r0, [r3, #4]
 80134f8:	2800      	cmp	r0, #0
 80134fa:	f000 83a1 	beq.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80134fe:	682b      	ldr	r3, [r5, #0]
 8013500:	9314      	str	r3, [sp, #80]	; 0x50
 8013502:	686b      	ldr	r3, [r5, #4]
 8013504:	9315      	str	r3, [sp, #84]	; 0x54
 8013506:	4bc4      	ldr	r3, [pc, #784]	; (8013818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013508:	ed94 7a02 	vldr	s14, [r4, #8]
 801350c:	7819      	ldrb	r1, [r3, #0]
 801350e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8013512:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8013516:	2900      	cmp	r1, #0
 8013518:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801351c:	bf16      	itet	ne
 801351e:	4619      	movne	r1, r3
 8013520:	4611      	moveq	r1, r2
 8013522:	4613      	movne	r3, r2
 8013524:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013528:	9116      	str	r1, [sp, #88]	; 0x58
 801352a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801352e:	f240 8387 	bls.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013532:	ed94 7a07 	vldr	s14, [r4, #28]
 8013536:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801353a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801353e:	f240 837f 	bls.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013542:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8013546:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801354a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801354e:	f240 8377 	bls.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013552:	6822      	ldr	r2, [r4, #0]
 8013554:	4bb1      	ldr	r3, [pc, #708]	; (801381c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013556:	429a      	cmp	r2, r3
 8013558:	f2c0 8372 	blt.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801355c:	49b0      	ldr	r1, [pc, #704]	; (8013820 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801355e:	6963      	ldr	r3, [r4, #20]
 8013560:	428a      	cmp	r2, r1
 8013562:	f300 836d 	bgt.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013566:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801356a:	48ae      	ldr	r0, [pc, #696]	; (8013824 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801356c:	33ff      	adds	r3, #255	; 0xff
 801356e:	4283      	cmp	r3, r0
 8013570:	f200 8366 	bhi.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013574:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013576:	4dac      	ldr	r5, [pc, #688]	; (8013828 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013578:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801357c:	33ff      	adds	r3, #255	; 0xff
 801357e:	42ab      	cmp	r3, r5
 8013580:	f200 835e 	bhi.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013584:	6862      	ldr	r2, [r4, #4]
 8013586:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801358a:	33ff      	adds	r3, #255	; 0xff
 801358c:	4283      	cmp	r3, r0
 801358e:	f200 8357 	bhi.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013592:	69a1      	ldr	r1, [r4, #24]
 8013594:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013598:	33ff      	adds	r3, #255	; 0xff
 801359a:	4283      	cmp	r3, r0
 801359c:	f200 8350 	bhi.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135a0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80135a2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80135a6:	30ff      	adds	r0, #255	; 0xff
 80135a8:	42a8      	cmp	r0, r5
 80135aa:	f200 8349 	bhi.w	8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80135ae:	428a      	cmp	r2, r1
 80135b0:	f280 8110 	bge.w	80137d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80135b4:	429a      	cmp	r2, r3
 80135b6:	f300 8119 	bgt.w	80137ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80135ba:	4299      	cmp	r1, r3
 80135bc:	f280 811d 	bge.w	80137fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80135c0:	2502      	movs	r5, #2
 80135c2:	2701      	movs	r7, #1
 80135c4:	46a9      	mov	r9, r5
 80135c6:	46b8      	mov	r8, r7
 80135c8:	f04f 0a00 	mov.w	sl, #0
 80135cc:	4621      	mov	r1, r4
 80135ce:	a849      	add	r0, sp, #292	; 0x124
 80135d0:	f003 feec 	bl	80173ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80135d4:	4622      	mov	r2, r4
 80135d6:	4653      	mov	r3, sl
 80135d8:	a949      	add	r1, sp, #292	; 0x124
 80135da:	f8cd 9000 	str.w	r9, [sp]
 80135de:	a819      	add	r0, sp, #100	; 0x64
 80135e0:	f004 f814 	bl	801760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135e4:	4622      	mov	r2, r4
 80135e6:	4653      	mov	r3, sl
 80135e8:	a949      	add	r1, sp, #292	; 0x124
 80135ea:	f8cd 8000 	str.w	r8, [sp]
 80135ee:	a829      	add	r0, sp, #164	; 0xa4
 80135f0:	f004 f80c 	bl	801760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80135f4:	4643      	mov	r3, r8
 80135f6:	4622      	mov	r2, r4
 80135f8:	a949      	add	r1, sp, #292	; 0x124
 80135fa:	f8cd 9000 	str.w	r9, [sp]
 80135fe:	a839      	add	r0, sp, #228	; 0xe4
 8013600:	f004 f804 	bl	801760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013604:	42af      	cmp	r7, r5
 8013606:	bfb5      	itete	lt
 8013608:	2300      	movlt	r3, #0
 801360a:	2301      	movge	r3, #1
 801360c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801360e:	930e      	strge	r3, [sp, #56]	; 0x38
 8013610:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013612:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013616:	af12      	add	r7, sp, #72	; 0x48
 8013618:	bfb9      	ittee	lt
 801361a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801361c:	ac19      	addlt	r4, sp, #100	; 0x64
 801361e:	ad19      	addge	r5, sp, #100	; 0x64
 8013620:	ac29      	addge	r4, sp, #164	; 0xa4
 8013622:	e887 0003 	stmia.w	r7, {r0, r1}
 8013626:	b928      	cbnz	r0, 8013634 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013628:	4b80      	ldr	r3, [pc, #512]	; (801382c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801362a:	6818      	ldr	r0, [r3, #0]
 801362c:	6803      	ldr	r3, [r0, #0]
 801362e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8013630:	4798      	blx	r3
 8013632:	6038      	str	r0, [r7, #0]
 8013634:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013636:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801363a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801363e:	930c      	str	r3, [sp, #48]	; 0x30
 8013640:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013642:	6963      	ldr	r3, [r4, #20]
 8013644:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013646:	440b      	add	r3, r1
 8013648:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801364c:	4408      	add	r0, r1
 801364e:	b200      	sxth	r0, r0
 8013650:	4283      	cmp	r3, r0
 8013652:	900d      	str	r0, [sp, #52]	; 0x34
 8013654:	f280 80dd 	bge.w	8013812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013658:	428b      	cmp	r3, r1
 801365a:	da08      	bge.n	801366e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801365c:	2a00      	cmp	r2, #0
 801365e:	dd06      	ble.n	801366e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013660:	1acb      	subs	r3, r1, r3
 8013662:	429a      	cmp	r2, r3
 8013664:	f2c0 80e4 	blt.w	8013830 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013668:	2b00      	cmp	r3, #0
 801366a:	f300 80e2 	bgt.w	8013832 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801366e:	6967      	ldr	r7, [r4, #20]
 8013670:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013672:	443b      	add	r3, r7
 8013674:	461f      	mov	r7, r3
 8013676:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013678:	1bdf      	subs	r7, r3, r7
 801367a:	4297      	cmp	r7, r2
 801367c:	bfa8      	it	ge
 801367e:	4617      	movge	r7, r2
 8013680:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013684:	2f00      	cmp	r7, #0
 8013686:	f340 8166 	ble.w	8013956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801368a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801368c:	6829      	ldr	r1, [r5, #0]
 801368e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013692:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013696:	6820      	ldr	r0, [r4, #0]
 8013698:	4411      	add	r1, r2
 801369a:	4299      	cmp	r1, r3
 801369c:	dd1a      	ble.n	80136d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801369e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80136a2:	440b      	add	r3, r1
 80136a4:	4402      	add	r2, r0
 80136a6:	b21b      	sxth	r3, r3
 80136a8:	429a      	cmp	r2, r3
 80136aa:	dc13      	bgt.n	80136d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80136ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80136ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80136b0:	681b      	ldr	r3, [r3, #0]
 80136b2:	9206      	str	r2, [sp, #24]
 80136b4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80136b6:	9205      	str	r2, [sp, #20]
 80136b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80136ba:	9500      	str	r5, [sp, #0]
 80136bc:	e9cd b203 	strd	fp, r2, [sp, #12]
 80136c0:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80136c2:	9809      	ldr	r0, [sp, #36]	; 0x24
 80136c4:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80136c8:	a912      	add	r1, sp, #72	; 0x48
 80136ca:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80136ce:	aa49      	add	r2, sp, #292	; 0x124
 80136d0:	4623      	mov	r3, r4
 80136d2:	47c8      	blx	r9
 80136d4:	e9d4 2300 	ldrd	r2, r3, [r4]
 80136d8:	441a      	add	r2, r3
 80136da:	6963      	ldr	r3, [r4, #20]
 80136dc:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80136e0:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80136e4:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80136e8:	68a1      	ldr	r1, [r4, #8]
 80136ea:	ed94 6a08 	vldr	s12, [r4, #32]
 80136ee:	6022      	str	r2, [r4, #0]
 80136f0:	3301      	adds	r3, #1
 80136f2:	6163      	str	r3, [r4, #20]
 80136f4:	69a3      	ldr	r3, [r4, #24]
 80136f6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80136fa:	3b01      	subs	r3, #1
 80136fc:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013700:	61a3      	str	r3, [r4, #24]
 8013702:	6923      	ldr	r3, [r4, #16]
 8013704:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013708:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801370c:	edd4 6a07 	vldr	s13, [r4, #28]
 8013710:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013714:	440b      	add	r3, r1
 8013716:	68e1      	ldr	r1, [r4, #12]
 8013718:	6123      	str	r3, [r4, #16]
 801371a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801371e:	428b      	cmp	r3, r1
 8013720:	edc4 6a07 	vstr	s13, [r4, #28]
 8013724:	db15      	blt.n	8013752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013726:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801372a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801372e:	3201      	adds	r2, #1
 8013730:	edc4 6a07 	vstr	s13, [r4, #28]
 8013734:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013738:	6022      	str	r2, [r4, #0]
 801373a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801373e:	1a5b      	subs	r3, r3, r1
 8013740:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013744:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013748:	6123      	str	r3, [r4, #16]
 801374a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801374e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013752:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013756:	441a      	add	r2, r3
 8013758:	696b      	ldr	r3, [r5, #20]
 801375a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801375e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013762:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013766:	68a9      	ldr	r1, [r5, #8]
 8013768:	ed95 6a08 	vldr	s12, [r5, #32]
 801376c:	602a      	str	r2, [r5, #0]
 801376e:	3301      	adds	r3, #1
 8013770:	616b      	str	r3, [r5, #20]
 8013772:	69ab      	ldr	r3, [r5, #24]
 8013774:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013778:	3b01      	subs	r3, #1
 801377a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801377e:	61ab      	str	r3, [r5, #24]
 8013780:	692b      	ldr	r3, [r5, #16]
 8013782:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013786:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801378a:	edd5 6a07 	vldr	s13, [r5, #28]
 801378e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013792:	440b      	add	r3, r1
 8013794:	68e9      	ldr	r1, [r5, #12]
 8013796:	612b      	str	r3, [r5, #16]
 8013798:	ee76 6a86 	vadd.f32	s13, s13, s12
 801379c:	428b      	cmp	r3, r1
 801379e:	edc5 6a07 	vstr	s13, [r5, #28]
 80137a2:	db15      	blt.n	80137d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80137a4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80137a8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80137ac:	3201      	adds	r2, #1
 80137ae:	edc5 6a07 	vstr	s13, [r5, #28]
 80137b2:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80137b6:	602a      	str	r2, [r5, #0]
 80137b8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80137bc:	1a5b      	subs	r3, r3, r1
 80137be:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80137c2:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80137c6:	612b      	str	r3, [r5, #16]
 80137c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80137cc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80137d0:	3f01      	subs	r7, #1
 80137d2:	e757      	b.n	8013684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80137d4:	4299      	cmp	r1, r3
 80137d6:	dc13      	bgt.n	8013800 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80137d8:	429a      	cmp	r2, r3
 80137da:	da14      	bge.n	8013806 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80137dc:	2502      	movs	r5, #2
 80137de:	2703      	movs	r7, #3
 80137e0:	46a9      	mov	r9, r5
 80137e2:	f04f 0800 	mov.w	r8, #0
 80137e6:	f04f 0a01 	mov.w	sl, #1
 80137ea:	e6ef      	b.n	80135cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80137ec:	2501      	movs	r5, #1
 80137ee:	2700      	movs	r7, #0
 80137f0:	46a9      	mov	r9, r5
 80137f2:	46b8      	mov	r8, r7
 80137f4:	f04f 0a02 	mov.w	sl, #2
 80137f8:	e6e8      	b.n	80135cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80137fa:	2501      	movs	r5, #1
 80137fc:	2702      	movs	r7, #2
 80137fe:	e6e1      	b.n	80135c4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013800:	2500      	movs	r5, #0
 8013802:	2701      	movs	r7, #1
 8013804:	e7f4      	b.n	80137f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013806:	2702      	movs	r7, #2
 8013808:	2503      	movs	r5, #3
 801380a:	f04f 0900 	mov.w	r9, #0
 801380e:	46b8      	mov	r8, r7
 8013810:	e7e9      	b.n	80137e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013812:	4613      	mov	r3, r2
 8013814:	e728      	b.n	8013668 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013816:	bf00      	nop
 8013818:	2000ef14 	.word	0x2000ef14
 801381c:	fffd8f01 	.word	0xfffd8f01
 8013820:	00027100 	.word	0x00027100
 8013824:	0004e1ff 	.word	0x0004e1ff
 8013828:	0004e1fe 	.word	0x0004e1fe
 801382c:	2000ef1c 	.word	0x2000ef1c
 8013830:	4613      	mov	r3, r2
 8013832:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013834:	9111      	str	r1, [sp, #68]	; 0x44
 8013836:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801383a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801383e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013840:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013844:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013848:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 801384c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013850:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013854:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013858:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 801385c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013860:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013864:	469e      	mov	lr, r3
 8013866:	469c      	mov	ip, r3
 8013868:	f04f 0900 	mov.w	r9, #0
 801386c:	f1bc 0f00 	cmp.w	ip, #0
 8013870:	d147      	bne.n	8013902 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013872:	eb03 0c07 	add.w	ip, r3, r7
 8013876:	1ad7      	subs	r7, r2, r3
 8013878:	f1b9 0f00 	cmp.w	r9, #0
 801387c:	d009      	beq.n	8013892 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801387e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013882:	9029      	str	r0, [sp, #164]	; 0xa4
 8013884:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013888:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801388c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013890:	912d      	str	r1, [sp, #180]	; 0xb4
 8013892:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013894:	9111      	str	r1, [sp, #68]	; 0x44
 8013896:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801389a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801389e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80138a2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80138a6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80138aa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80138ae:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80138b2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80138b6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80138ba:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80138be:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80138c2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80138c6:	f04f 0800 	mov.w	r8, #0
 80138ca:	f1be 0f00 	cmp.w	lr, #0
 80138ce:	d031      	beq.n	8013934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80138d0:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80138d2:	4431      	add	r1, r6
 80138d4:	4549      	cmp	r1, r9
 80138d6:	4450      	add	r0, sl
 80138d8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80138dc:	ee37 7a04 	vadd.f32	s14, s14, s8
 80138e0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80138e4:	db08      	blt.n	80138f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80138e6:	ee77 7a85 	vadd.f32	s15, s15, s10
 80138ea:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80138ee:	ee37 7a06 	vadd.f32	s14, s14, s12
 80138f2:	3001      	adds	r0, #1
 80138f4:	eba1 0109 	sub.w	r1, r1, r9
 80138f8:	f10e 3eff 	add.w	lr, lr, #4294967295
 80138fc:	f04f 0801 	mov.w	r8, #1
 8013900:	e7e3      	b.n	80138ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013902:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013904:	4431      	add	r1, r6
 8013906:	4541      	cmp	r1, r8
 8013908:	4450      	add	r0, sl
 801390a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801390e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013912:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013916:	db08      	blt.n	801392a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013918:	ee76 6a85 	vadd.f32	s13, s13, s10
 801391c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013920:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013924:	3001      	adds	r0, #1
 8013926:	eba1 0108 	sub.w	r1, r1, r8
 801392a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801392e:	f04f 0901 	mov.w	r9, #1
 8013932:	e79b      	b.n	801386c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013934:	449c      	add	ip, r3
 8013936:	1aff      	subs	r7, r7, r3
 8013938:	f1b8 0f00 	cmp.w	r8, #0
 801393c:	d009      	beq.n	8013952 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801393e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013942:	9019      	str	r0, [sp, #100]	; 0x64
 8013944:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013948:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801394c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013950:	911d      	str	r1, [sp, #116]	; 0x74
 8013952:	1ad2      	subs	r2, r2, r3
 8013954:	e68b      	b.n	801366e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013956:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013958:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801395a:	2b00      	cmp	r3, #0
 801395c:	f000 80d1 	beq.w	8013b02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013960:	ad19      	add	r5, sp, #100	; 0x64
 8013962:	ac39      	add	r4, sp, #228	; 0xe4
 8013964:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013966:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801396a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801396e:	930c      	str	r3, [sp, #48]	; 0x30
 8013970:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013972:	6963      	ldr	r3, [r4, #20]
 8013974:	440b      	add	r3, r1
 8013976:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801397a:	4408      	add	r0, r1
 801397c:	b200      	sxth	r0, r0
 801397e:	4283      	cmp	r3, r0
 8013980:	900d      	str	r0, [sp, #52]	; 0x34
 8013982:	f280 80c1 	bge.w	8013b08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013986:	428b      	cmp	r3, r1
 8013988:	da08      	bge.n	801399c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801398a:	2a00      	cmp	r2, #0
 801398c:	dd06      	ble.n	801399c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801398e:	1acb      	subs	r3, r1, r3
 8013990:	429a      	cmp	r2, r3
 8013992:	f2c0 80bb 	blt.w	8013b0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013996:	2b00      	cmp	r3, #0
 8013998:	f300 80b9 	bgt.w	8013b0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801399c:	6967      	ldr	r7, [r4, #20]
 801399e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80139a0:	443b      	add	r3, r7
 80139a2:	461f      	mov	r7, r3
 80139a4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80139a6:	1bdf      	subs	r7, r3, r7
 80139a8:	4297      	cmp	r7, r2
 80139aa:	bfa8      	it	ge
 80139ac:	4617      	movge	r7, r2
 80139ae:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80139b2:	2f00      	cmp	r7, #0
 80139b4:	f340 813c 	ble.w	8013c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80139b8:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80139ba:	6829      	ldr	r1, [r5, #0]
 80139bc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80139c0:	f9bb 3000 	ldrsh.w	r3, [fp]
 80139c4:	6820      	ldr	r0, [r4, #0]
 80139c6:	4411      	add	r1, r2
 80139c8:	4299      	cmp	r1, r3
 80139ca:	dd1a      	ble.n	8013a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80139cc:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80139d0:	440b      	add	r3, r1
 80139d2:	4402      	add	r2, r0
 80139d4:	b21b      	sxth	r3, r3
 80139d6:	429a      	cmp	r2, r3
 80139d8:	dc13      	bgt.n	8013a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80139da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139dc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80139de:	681b      	ldr	r3, [r3, #0]
 80139e0:	9206      	str	r2, [sp, #24]
 80139e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80139e4:	9205      	str	r2, [sp, #20]
 80139e6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80139e8:	9500      	str	r5, [sp, #0]
 80139ea:	e9cd b203 	strd	fp, r2, [sp, #12]
 80139ee:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80139f0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80139f2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80139f6:	a912      	add	r1, sp, #72	; 0x48
 80139f8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80139fc:	aa49      	add	r2, sp, #292	; 0x124
 80139fe:	4623      	mov	r3, r4
 8013a00:	47c8      	blx	r9
 8013a02:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013a06:	441a      	add	r2, r3
 8013a08:	6963      	ldr	r3, [r4, #20]
 8013a0a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013a0e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013a12:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013a16:	68a1      	ldr	r1, [r4, #8]
 8013a18:	ed94 6a08 	vldr	s12, [r4, #32]
 8013a1c:	6022      	str	r2, [r4, #0]
 8013a1e:	3301      	adds	r3, #1
 8013a20:	6163      	str	r3, [r4, #20]
 8013a22:	69a3      	ldr	r3, [r4, #24]
 8013a24:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a28:	3b01      	subs	r3, #1
 8013a2a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013a2e:	61a3      	str	r3, [r4, #24]
 8013a30:	6923      	ldr	r3, [r4, #16]
 8013a32:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a3a:	edd4 6a07 	vldr	s13, [r4, #28]
 8013a3e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a42:	440b      	add	r3, r1
 8013a44:	68e1      	ldr	r1, [r4, #12]
 8013a46:	6123      	str	r3, [r4, #16]
 8013a48:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a4c:	428b      	cmp	r3, r1
 8013a4e:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a52:	db15      	blt.n	8013a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013a54:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013a58:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a5c:	3201      	adds	r2, #1
 8013a5e:	edc4 6a07 	vstr	s13, [r4, #28]
 8013a62:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013a66:	6022      	str	r2, [r4, #0]
 8013a68:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a6c:	1a5b      	subs	r3, r3, r1
 8013a6e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013a72:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013a76:	6123      	str	r3, [r4, #16]
 8013a78:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a7c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a80:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013a84:	441a      	add	r2, r3
 8013a86:	696b      	ldr	r3, [r5, #20]
 8013a88:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013a8c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013a90:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013a94:	68a9      	ldr	r1, [r5, #8]
 8013a96:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a9a:	602a      	str	r2, [r5, #0]
 8013a9c:	3301      	adds	r3, #1
 8013a9e:	616b      	str	r3, [r5, #20]
 8013aa0:	69ab      	ldr	r3, [r5, #24]
 8013aa2:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013aa6:	3b01      	subs	r3, #1
 8013aa8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013aac:	61ab      	str	r3, [r5, #24]
 8013aae:	692b      	ldr	r3, [r5, #16]
 8013ab0:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013ab4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013ab8:	edd5 6a07 	vldr	s13, [r5, #28]
 8013abc:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013ac0:	440b      	add	r3, r1
 8013ac2:	68e9      	ldr	r1, [r5, #12]
 8013ac4:	612b      	str	r3, [r5, #16]
 8013ac6:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013aca:	428b      	cmp	r3, r1
 8013acc:	edc5 6a07 	vstr	s13, [r5, #28]
 8013ad0:	db15      	blt.n	8013afe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013ad2:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013ad6:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013ada:	3201      	adds	r2, #1
 8013adc:	edc5 6a07 	vstr	s13, [r5, #28]
 8013ae0:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013ae4:	602a      	str	r2, [r5, #0]
 8013ae6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013aea:	1a5b      	subs	r3, r3, r1
 8013aec:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013af0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013af4:	612b      	str	r3, [r5, #16]
 8013af6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013afa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013afe:	3f01      	subs	r7, #1
 8013b00:	e757      	b.n	80139b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013b02:	ad39      	add	r5, sp, #228	; 0xe4
 8013b04:	ac19      	add	r4, sp, #100	; 0x64
 8013b06:	e72d      	b.n	8013964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013b08:	4613      	mov	r3, r2
 8013b0a:	e744      	b.n	8013996 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013b0c:	4613      	mov	r3, r2
 8013b0e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013b12:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013b14:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013b18:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013b1c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013b20:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013b24:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013b28:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013b2c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013b30:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013b32:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013b36:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013b3a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013b3e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013b42:	960e      	str	r6, [sp, #56]	; 0x38
 8013b44:	469e      	mov	lr, r3
 8013b46:	461f      	mov	r7, r3
 8013b48:	f04f 0900 	mov.w	r9, #0
 8013b4c:	2f00      	cmp	r7, #0
 8013b4e:	d146      	bne.n	8013bde <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013b50:	449c      	add	ip, r3
 8013b52:	1ad7      	subs	r7, r2, r3
 8013b54:	f1b9 0f00 	cmp.w	r9, #0
 8013b58:	d009      	beq.n	8013b6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013b5a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013b5e:	9039      	str	r0, [sp, #228]	; 0xe4
 8013b60:	913d      	str	r1, [sp, #244]	; 0xf4
 8013b62:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013b66:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013b6a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013b6e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013b70:	910e      	str	r1, [sp, #56]	; 0x38
 8013b72:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013b76:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013b7a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013b7e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013b82:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013b86:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013b8a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013b8e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013b92:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013b96:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013b9a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013b9e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013ba2:	f04f 0800 	mov.w	r8, #0
 8013ba6:	f1be 0f00 	cmp.w	lr, #0
 8013baa:	d030      	beq.n	8013c0e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013bac:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013bae:	4431      	add	r1, r6
 8013bb0:	4549      	cmp	r1, r9
 8013bb2:	4450      	add	r0, sl
 8013bb4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013bb8:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013bbc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013bc0:	db08      	blt.n	8013bd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013bc2:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013bc6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013bca:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013bce:	3001      	adds	r0, #1
 8013bd0:	eba1 0109 	sub.w	r1, r1, r9
 8013bd4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013bd8:	f04f 0801 	mov.w	r8, #1
 8013bdc:	e7e3      	b.n	8013ba6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013bde:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013be0:	4431      	add	r1, r6
 8013be2:	4541      	cmp	r1, r8
 8013be4:	4450      	add	r0, sl
 8013be6:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013bea:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013bee:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013bf2:	db08      	blt.n	8013c06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013bf4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013bf8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013bfc:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013c00:	3001      	adds	r0, #1
 8013c02:	eba1 0108 	sub.w	r1, r1, r8
 8013c06:	3f01      	subs	r7, #1
 8013c08:	f04f 0901 	mov.w	r9, #1
 8013c0c:	e79e      	b.n	8013b4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013c0e:	449c      	add	ip, r3
 8013c10:	1aff      	subs	r7, r7, r3
 8013c12:	f1b8 0f00 	cmp.w	r8, #0
 8013c16:	d009      	beq.n	8013c2c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013c18:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013c1c:	9019      	str	r0, [sp, #100]	; 0x64
 8013c1e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013c22:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013c26:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013c2a:	911d      	str	r1, [sp, #116]	; 0x74
 8013c2c:	1ad2      	subs	r2, r2, r3
 8013c2e:	e6b5      	b.n	801399c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c30:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013c32:	681b      	ldr	r3, [r3, #0]
 8013c34:	b923      	cbnz	r3, 8013c40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013c36:	4b04      	ldr	r3, [pc, #16]	; (8013c48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013c38:	6818      	ldr	r0, [r3, #0]
 8013c3a:	6803      	ldr	r3, [r0, #0]
 8013c3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013c3e:	4798      	blx	r3
 8013c40:	b05b      	add	sp, #364	; 0x16c
 8013c42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013c46:	bf00      	nop
 8013c48:	2000ef1c 	.word	0x2000ef1c

08013c4c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013c4c:	b570      	push	{r4, r5, r6, lr}
 8013c4e:	4604      	mov	r4, r0
 8013c50:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013c54:	9805      	ldr	r0, [sp, #20]
 8013c56:	6061      	str	r1, [r4, #4]
 8013c58:	2500      	movs	r5, #0
 8013c5a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013c5e:	8263      	strh	r3, [r4, #18]
 8013c60:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013c64:	8025      	strh	r5, [r4, #0]
 8013c66:	7221      	strb	r1, [r4, #8]
 8013c68:	7266      	strb	r6, [r4, #9]
 8013c6a:	60e0      	str	r0, [r4, #12]
 8013c6c:	8222      	strh	r2, [r4, #16]
 8013c6e:	82a3      	strh	r3, [r4, #20]
 8013c70:	82e5      	strh	r5, [r4, #22]
 8013c72:	8325      	strh	r5, [r4, #24]
 8013c74:	8365      	strh	r5, [r4, #26]
 8013c76:	83a5      	strh	r5, [r4, #28]
 8013c78:	83e5      	strh	r5, [r4, #30]
 8013c7a:	8425      	strh	r5, [r4, #32]
 8013c7c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013c80:	b32e      	cbz	r6, 8013cce <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c82:	6803      	ldr	r3, [r0, #0]
 8013c84:	695b      	ldr	r3, [r3, #20]
 8013c86:	4798      	blx	r3
 8013c88:	4606      	mov	r6, r0
 8013c8a:	b300      	cbz	r0, 8013cce <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c8c:	68e0      	ldr	r0, [r4, #12]
 8013c8e:	6803      	ldr	r3, [r0, #0]
 8013c90:	4631      	mov	r1, r6
 8013c92:	68db      	ldr	r3, [r3, #12]
 8013c94:	4798      	blx	r3
 8013c96:	4605      	mov	r5, r0
 8013c98:	b1c8      	cbz	r0, 8013cce <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013c9a:	7b43      	ldrb	r3, [r0, #13]
 8013c9c:	7a82      	ldrb	r2, [r0, #10]
 8013c9e:	005b      	lsls	r3, r3, #1
 8013ca0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013ca4:	4313      	orrs	r3, r2
 8013ca6:	8423      	strh	r3, [r4, #32]
 8013ca8:	7a63      	ldrb	r3, [r4, #9]
 8013caa:	2b06      	cmp	r3, #6
 8013cac:	d10f      	bne.n	8013cce <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013cae:	68e0      	ldr	r0, [r4, #12]
 8013cb0:	6803      	ldr	r3, [r0, #0]
 8013cb2:	462a      	mov	r2, r5
 8013cb4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013cb6:	4631      	mov	r1, r6
 8013cb8:	4798      	blx	r3
 8013cba:	7b6b      	ldrb	r3, [r5, #13]
 8013cbc:	005b      	lsls	r3, r3, #1
 8013cbe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013cc2:	7aab      	ldrb	r3, [r5, #10]
 8013cc4:	4313      	orrs	r3, r2
 8013cc6:	4418      	add	r0, r3
 8013cc8:	8c23      	ldrh	r3, [r4, #32]
 8013cca:	4418      	add	r0, r3
 8013ccc:	8420      	strh	r0, [r4, #32]
 8013cce:	4620      	mov	r0, r4
 8013cd0:	bd70      	pop	{r4, r5, r6, pc}

08013cd2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013cd2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cd6:	2400      	movs	r4, #0
 8013cd8:	b085      	sub	sp, #20
 8013cda:	4681      	mov	r9, r0
 8013cdc:	4688      	mov	r8, r1
 8013cde:	4692      	mov	sl, r2
 8013ce0:	469b      	mov	fp, r3
 8013ce2:	4627      	mov	r7, r4
 8013ce4:	4625      	mov	r5, r4
 8013ce6:	4626      	mov	r6, r4
 8013ce8:	4554      	cmp	r4, sl
 8013cea:	da2a      	bge.n	8013d42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013cec:	2300      	movs	r3, #0
 8013cee:	9303      	str	r3, [sp, #12]
 8013cf0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013cf4:	429d      	cmp	r5, r3
 8013cf6:	d004      	beq.n	8013d02 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013cf8:	f242 030b 	movw	r3, #8203	; 0x200b
 8013cfc:	429d      	cmp	r5, r3
 8013cfe:	bf18      	it	ne
 8013d00:	462f      	movne	r7, r5
 8013d02:	ab03      	add	r3, sp, #12
 8013d04:	4642      	mov	r2, r8
 8013d06:	4659      	mov	r1, fp
 8013d08:	4648      	mov	r0, r9
 8013d0a:	f003 f965 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013d0e:	4605      	mov	r5, r0
 8013d10:	b1b8      	cbz	r0, 8013d42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013d12:	280a      	cmp	r0, #10
 8013d14:	d015      	beq.n	8013d42 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013d16:	9a03      	ldr	r2, [sp, #12]
 8013d18:	b18a      	cbz	r2, 8013d3e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013d1a:	7b50      	ldrb	r0, [r2, #13]
 8013d1c:	7a93      	ldrb	r3, [r2, #10]
 8013d1e:	8895      	ldrh	r5, [r2, #4]
 8013d20:	0040      	lsls	r0, r0, #1
 8013d22:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013d26:	4303      	orrs	r3, r0
 8013d28:	9301      	str	r3, [sp, #4]
 8013d2a:	f8d8 3000 	ldr.w	r3, [r8]
 8013d2e:	4639      	mov	r1, r7
 8013d30:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013d32:	4640      	mov	r0, r8
 8013d34:	4798      	blx	r3
 8013d36:	9b01      	ldr	r3, [sp, #4]
 8013d38:	4418      	add	r0, r3
 8013d3a:	4406      	add	r6, r0
 8013d3c:	b2b6      	uxth	r6, r6
 8013d3e:	3401      	adds	r4, #1
 8013d40:	e7d2      	b.n	8013ce8 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013d42:	4630      	mov	r0, r6
 8013d44:	b005      	add	sp, #20
 8013d46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013d4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013d4a:	2a02      	cmp	r2, #2
 8013d4c:	b530      	push	{r4, r5, lr}
 8013d4e:	d011      	beq.n	8013d74 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8013d50:	2a03      	cmp	r2, #3
 8013d52:	d01c      	beq.n	8013d8e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8013d54:	2a01      	cmp	r2, #1
 8013d56:	d10c      	bne.n	8013d72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013d58:	888b      	ldrh	r3, [r1, #4]
 8013d5a:	8801      	ldrh	r1, [r0, #0]
 8013d5c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8013d60:	8844      	ldrh	r4, [r0, #2]
 8013d62:	8004      	strh	r4, [r0, #0]
 8013d64:	1a5b      	subs	r3, r3, r1
 8013d66:	1a9b      	subs	r3, r3, r2
 8013d68:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013d6c:	8043      	strh	r3, [r0, #2]
 8013d6e:	8081      	strh	r1, [r0, #4]
 8013d70:	80c2      	strh	r2, [r0, #6]
 8013d72:	bd30      	pop	{r4, r5, pc}
 8013d74:	88cb      	ldrh	r3, [r1, #6]
 8013d76:	8842      	ldrh	r2, [r0, #2]
 8013d78:	1a9b      	subs	r3, r3, r2
 8013d7a:	88c2      	ldrh	r2, [r0, #6]
 8013d7c:	1a9b      	subs	r3, r3, r2
 8013d7e:	888a      	ldrh	r2, [r1, #4]
 8013d80:	8801      	ldrh	r1, [r0, #0]
 8013d82:	8043      	strh	r3, [r0, #2]
 8013d84:	1a52      	subs	r2, r2, r1
 8013d86:	8881      	ldrh	r1, [r0, #4]
 8013d88:	1a52      	subs	r2, r2, r1
 8013d8a:	8002      	strh	r2, [r0, #0]
 8013d8c:	e7f1      	b.n	8013d72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8013d8e:	88cb      	ldrh	r3, [r1, #6]
 8013d90:	8841      	ldrh	r1, [r0, #2]
 8013d92:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013d96:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013d9a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013d9e:	8045      	strh	r5, [r0, #2]
 8013da0:	1a5b      	subs	r3, r3, r1
 8013da2:	1a9b      	subs	r3, r3, r2
 8013da4:	8003      	strh	r3, [r0, #0]
 8013da6:	8082      	strh	r2, [r0, #4]
 8013da8:	80c4      	strh	r4, [r0, #6]
 8013daa:	e7e2      	b.n	8013d72 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013dac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013db0:	b09f      	sub	sp, #124	; 0x7c
 8013db2:	9116      	str	r1, [sp, #88]	; 0x58
 8013db4:	9317      	str	r3, [sp, #92]	; 0x5c
 8013db6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013db8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013dba:	8809      	ldrh	r1, [r1, #0]
 8013dbc:	889b      	ldrh	r3, [r3, #4]
 8013dbe:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8013dc2:	9212      	str	r2, [sp, #72]	; 0x48
 8013dc4:	440b      	add	r3, r1
 8013dc6:	b21b      	sxth	r3, r3
 8013dc8:	9310      	str	r3, [sp, #64]	; 0x40
 8013dca:	f8d8 3000 	ldr.w	r3, [r8]
 8013dce:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8013dd2:	7b19      	ldrb	r1, [r3, #12]
 8013dd4:	7adb      	ldrb	r3, [r3, #11]
 8013dd6:	9011      	str	r0, [sp, #68]	; 0x44
 8013dd8:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8013ddc:	9114      	str	r1, [sp, #80]	; 0x50
 8013dde:	9315      	str	r3, [sp, #84]	; 0x54
 8013de0:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8013de4:	2a00      	cmp	r2, #0
 8013de6:	d06a      	beq.n	8013ebe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013de8:	f898 3010 	ldrb.w	r3, [r8, #16]
 8013dec:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8013dee:	2b06      	cmp	r3, #6
 8013df0:	bf14      	ite	ne
 8013df2:	2301      	movne	r3, #1
 8013df4:	2302      	moveq	r3, #2
 8013df6:	4413      	add	r3, r2
 8013df8:	f04f 0900 	mov.w	r9, #0
 8013dfc:	930f      	str	r3, [sp, #60]	; 0x3c
 8013dfe:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8013e02:	464c      	mov	r4, r9
 8013e04:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8013e08:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8013e0c:	4293      	cmp	r3, r2
 8013e0e:	f280 808f 	bge.w	8013f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013e12:	2300      	movs	r3, #0
 8013e14:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8013e18:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8013e1c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013e20:	429c      	cmp	r4, r3
 8013e22:	d006      	beq.n	8013e32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8013e24:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e26:	f242 020b 	movw	r2, #8203	; 0x200b
 8013e2a:	4294      	cmp	r4, r2
 8013e2c:	bf18      	it	ne
 8013e2e:	4623      	movne	r3, r4
 8013e30:	930d      	str	r3, [sp, #52]	; 0x34
 8013e32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e34:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8013e36:	f8d8 2000 	ldr.w	r2, [r8]
 8013e3a:	428b      	cmp	r3, r1
 8013e3c:	db41      	blt.n	8013ec2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013e3e:	6813      	ldr	r3, [r2, #0]
 8013e40:	4610      	mov	r0, r2
 8013e42:	695b      	ldr	r3, [r3, #20]
 8013e44:	4798      	blx	r3
 8013e46:	4604      	mov	r4, r0
 8013e48:	f8d8 0000 	ldr.w	r0, [r8]
 8013e4c:	6803      	ldr	r3, [r0, #0]
 8013e4e:	aa1d      	add	r2, sp, #116	; 0x74
 8013e50:	689d      	ldr	r5, [r3, #8]
 8013e52:	4621      	mov	r1, r4
 8013e54:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013e58:	47a8      	blx	r5
 8013e5a:	901c      	str	r0, [sp, #112]	; 0x70
 8013e5c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013e60:	429c      	cmp	r4, r3
 8013e62:	f000 80eb 	beq.w	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e66:	f242 030b 	movw	r3, #8203	; 0x200b
 8013e6a:	429c      	cmp	r4, r3
 8013e6c:	f000 80e6 	beq.w	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013e70:	2c00      	cmp	r4, #0
 8013e72:	f000 80f8 	beq.w	8014066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013e76:	2c0a      	cmp	r4, #10
 8013e78:	d060      	beq.n	8013f3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8013e7a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013e7c:	b36a      	cbz	r2, 8013eda <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013e7e:	8894      	ldrh	r4, [r2, #4]
 8013e80:	f1bb 0f00 	cmp.w	fp, #0
 8013e84:	d03b      	beq.n	8013efe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013e86:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013e8a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013e8e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8013e92:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013e96:	f1bb 0f01 	cmp.w	fp, #1
 8013e9a:	ea49 0903 	orr.w	r9, r9, r3
 8013e9e:	d134      	bne.n	8013f0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8013ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013ea2:	eba6 0609 	sub.w	r6, r6, r9
 8013ea6:	2b00      	cmp	r3, #0
 8013ea8:	d14f      	bne.n	8013f4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013eaa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8013eac:	eb09 0306 	add.w	r3, r9, r6
 8013eb0:	4413      	add	r3, r2
 8013eb2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8013eb4:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013eb8:	4293      	cmp	r3, r2
 8013eba:	da51      	bge.n	8013f60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013ebc:	e038      	b.n	8013f30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8013ebe:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8013ec0:	e79a      	b.n	8013df8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8013ec2:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8013ec6:	9301      	str	r3, [sp, #4]
 8013ec8:	ab1d      	add	r3, sp, #116	; 0x74
 8013eca:	9300      	str	r3, [sp, #0]
 8013ecc:	4659      	mov	r1, fp
 8013ece:	ab1c      	add	r3, sp, #112	; 0x70
 8013ed0:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8013ed2:	f003 f8ca 	bl	801706a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013ed6:	4604      	mov	r4, r0
 8013ed8:	e7c0      	b.n	8013e5c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013eda:	f8d8 0000 	ldr.w	r0, [r8]
 8013ede:	6803      	ldr	r3, [r0, #0]
 8013ee0:	691b      	ldr	r3, [r3, #16]
 8013ee2:	4798      	blx	r3
 8013ee4:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013ee8:	4298      	cmp	r0, r3
 8013eea:	f000 80a7 	beq.w	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013eee:	f242 030b 	movw	r3, #8203	; 0x200b
 8013ef2:	4298      	cmp	r0, r3
 8013ef4:	f000 80a2 	beq.w	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ef8:	f1bb 0f00 	cmp.w	fp, #0
 8013efc:	d100      	bne.n	8013f00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8013efe:	444e      	add	r6, r9
 8013f00:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8013f02:	2a00      	cmp	r2, #0
 8013f04:	d1bf      	bne.n	8013e86 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013f06:	4691      	mov	r9, r2
 8013f08:	e098      	b.n	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f0a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f0c:	2b00      	cmp	r3, #0
 8013f0e:	f000 80ac 	beq.w	801406a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8013f12:	f1bb 0f00 	cmp.w	fp, #0
 8013f16:	d118      	bne.n	8013f4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8013f18:	f8d8 0000 	ldr.w	r0, [r8]
 8013f1c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013f1e:	6803      	ldr	r3, [r0, #0]
 8013f20:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f22:	4798      	blx	r3
 8013f24:	4406      	add	r6, r0
 8013f26:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013f28:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013f2a:	1af3      	subs	r3, r6, r3
 8013f2c:	4293      	cmp	r3, r2
 8013f2e:	dd17      	ble.n	8013f60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8013f30:	2c00      	cmp	r4, #0
 8013f32:	f000 8098 	beq.w	8014066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8013f36:	2c0a      	cmp	r4, #10
 8013f38:	f040 8086 	bne.w	8014048 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013f3c:	240a      	movs	r4, #10
 8013f3e:	fab4 f084 	clz	r0, r4
 8013f42:	0940      	lsrs	r0, r0, #5
 8013f44:	b01f      	add	sp, #124	; 0x7c
 8013f46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f4a:	f8d8 0000 	ldr.w	r0, [r8]
 8013f4e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8013f50:	6803      	ldr	r3, [r0, #0]
 8013f52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f54:	4798      	blx	r3
 8013f56:	f1bb 0f01 	cmp.w	fp, #1
 8013f5a:	eba6 0600 	sub.w	r6, r6, r0
 8013f5e:	d0a4      	beq.n	8013eaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013f60:	981c      	ldr	r0, [sp, #112]	; 0x70
 8013f62:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8013f64:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013f68:	f9b3 7000 	ldrsh.w	r7, [r3]
 8013f6c:	7b43      	ldrb	r3, [r0, #13]
 8013f6e:	015b      	lsls	r3, r3, #5
 8013f70:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f74:	7983      	ldrb	r3, [r0, #6]
 8013f76:	4431      	add	r1, r6
 8013f78:	4313      	orrs	r3, r2
 8013f7a:	440b      	add	r3, r1
 8013f7c:	42bb      	cmp	r3, r7
 8013f7e:	db5d      	blt.n	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f80:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f82:	4299      	cmp	r1, r3
 8013f84:	da5a      	bge.n	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013f86:	f8d8 0000 	ldr.w	r0, [r8]
 8013f8a:	6803      	ldr	r3, [r0, #0]
 8013f8c:	42b7      	cmp	r7, r6
 8013f8e:	bfc8      	it	gt
 8013f90:	1bbf      	subgt	r7, r7, r6
 8013f92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8013f94:	bfcc      	ite	gt
 8013f96:	b2bf      	uxthgt	r7, r7
 8013f98:	2700      	movle	r7, #0
 8013f9a:	4798      	blx	r3
 8013f9c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8013f9e:	7b5a      	ldrb	r2, [r3, #13]
 8013fa0:	00d1      	lsls	r1, r2, #3
 8013fa2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8013fa6:	7a19      	ldrb	r1, [r3, #8]
 8013fa8:	4329      	orrs	r1, r5
 8013faa:	0655      	lsls	r5, r2, #25
 8013fac:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8013fae:	bf44      	itt	mi
 8013fb0:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8013fb4:	b209      	sxthmi	r1, r1
 8013fb6:	1945      	adds	r5, r0, r5
 8013fb8:	1a6d      	subs	r5, r5, r1
 8013fba:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8013fbc:	b2ad      	uxth	r5, r5
 8013fbe:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8013fc2:	fa0f fa85 	sxth.w	sl, r5
 8013fc6:	4551      	cmp	r1, sl
 8013fc8:	dd3c      	ble.n	8014044 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013fca:	0112      	lsls	r2, r2, #4
 8013fcc:	79d8      	ldrb	r0, [r3, #7]
 8013fce:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013fd2:	4302      	orrs	r2, r0
 8013fd4:	4492      	add	sl, r2
 8013fd6:	4551      	cmp	r1, sl
 8013fd8:	dc30      	bgt.n	801403c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013fda:	1b4d      	subs	r5, r1, r5
 8013fdc:	b22d      	sxth	r5, r5
 8013fde:	468a      	mov	sl, r1
 8013fe0:	9319      	str	r3, [sp, #100]	; 0x64
 8013fe2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013fe4:	f8d8 0000 	ldr.w	r0, [r8]
 8013fe8:	681a      	ldr	r2, [r3, #0]
 8013fea:	6801      	ldr	r1, [r0, #0]
 8013fec:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8013fee:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8013ff0:	9313      	str	r3, [sp, #76]	; 0x4c
 8013ff2:	9218      	str	r2, [sp, #96]	; 0x60
 8013ff4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8013ff6:	4788      	blx	r1
 8013ff8:	f898 1006 	ldrb.w	r1, [r8, #6]
 8013ffc:	910b      	str	r1, [sp, #44]	; 0x2c
 8013ffe:	f898 100e 	ldrb.w	r1, [r8, #14]
 8014002:	910a      	str	r1, [sp, #40]	; 0x28
 8014004:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8014008:	9109      	str	r1, [sp, #36]	; 0x24
 801400a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801400e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014010:	9305      	str	r3, [sp, #20]
 8014012:	b2ad      	uxth	r5, r5
 8014014:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8014018:	e9cd 7502 	strd	r7, r5, [sp, #8]
 801401c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801401e:	9304      	str	r3, [sp, #16]
 8014020:	4437      	add	r7, r6
 8014022:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8014024:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014026:	9206      	str	r2, [sp, #24]
 8014028:	b23f      	sxth	r7, r7
 801402a:	f8cd a004 	str.w	sl, [sp, #4]
 801402e:	9700      	str	r7, [sp, #0]
 8014030:	681a      	ldr	r2, [r3, #0]
 8014032:	9916      	ldr	r1, [sp, #88]	; 0x58
 8014034:	685b      	ldr	r3, [r3, #4]
 8014036:	9811      	ldr	r0, [sp, #68]	; 0x44
 8014038:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801403a:	47a8      	blx	r5
 801403c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801403e:	3301      	adds	r3, #1
 8014040:	930e      	str	r3, [sp, #56]	; 0x38
 8014042:	e6e1      	b.n	8013e08 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8014044:	2500      	movs	r5, #0
 8014046:	e7cb      	b.n	8013fe0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8014048:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801404a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801404c:	3501      	adds	r5, #1
 801404e:	429d      	cmp	r5, r3
 8014050:	f6bf af75 	bge.w	8013f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014054:	4659      	mov	r1, fp
 8014056:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014058:	f7f3 fea0 	bl	8007d9c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801405c:	4604      	mov	r4, r0
 801405e:	b110      	cbz	r0, 8014066 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014060:	280a      	cmp	r0, #10
 8014062:	d1f2      	bne.n	801404a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014064:	e76a      	b.n	8013f3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014066:	2400      	movs	r4, #0
 8014068:	e769      	b.n	8013f3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801406a:	f1bb 0f00 	cmp.w	fp, #0
 801406e:	f43f af5a 	beq.w	8013f26 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014072:	e775      	b.n	8013f60 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014074 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014074:	b530      	push	{r4, r5, lr}
 8014076:	8ac4      	ldrh	r4, [r0, #22]
 8014078:	8b45      	ldrh	r5, [r0, #26]
 801407a:	8343      	strh	r3, [r0, #26]
 801407c:	442c      	add	r4, r5
 801407e:	1ae4      	subs	r4, r4, r3
 8014080:	82c4      	strh	r4, [r0, #22]
 8014082:	8b83      	ldrh	r3, [r0, #28]
 8014084:	8b04      	ldrh	r4, [r0, #24]
 8014086:	4422      	add	r2, r4
 8014088:	440c      	add	r4, r1
 801408a:	1a59      	subs	r1, r3, r1
 801408c:	83c2      	strh	r2, [r0, #30]
 801408e:	8304      	strh	r4, [r0, #24]
 8014090:	8381      	strh	r1, [r0, #28]
 8014092:	bd30      	pop	{r4, r5, pc}

08014094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8014094:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014098:	4604      	mov	r4, r0
 801409a:	8a47      	ldrh	r7, [r0, #18]
 801409c:	68c0      	ldr	r0, [r0, #12]
 801409e:	6803      	ldr	r3, [r0, #0]
 80140a0:	b085      	sub	sp, #20
 80140a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80140a4:	4798      	blx	r3
 80140a6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 80140aa:	7a63      	ldrb	r3, [r4, #9]
 80140ac:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 80140b0:	42b7      	cmp	r7, r6
 80140b2:	f103 33ff 	add.w	r3, r3, #4294967295
 80140b6:	bfac      	ite	ge
 80140b8:	f04f 0900 	movge.w	r9, #0
 80140bc:	f04f 0901 	movlt.w	r9, #1
 80140c0:	2b05      	cmp	r3, #5
 80140c2:	d804      	bhi.n	80140ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 80140c4:	e8df f003 	tbb	[pc, r3]
 80140c8:	470e0854 	.word	0x470e0854
 80140cc:	4c4c      	.short	0x4c4c
 80140ce:	2500      	movs	r5, #0
 80140d0:	46a9      	mov	r9, r5
 80140d2:	462e      	mov	r6, r5
 80140d4:	462f      	mov	r7, r5
 80140d6:	e00d      	b.n	80140f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80140d8:	42b7      	cmp	r7, r6
 80140da:	bfb4      	ite	lt
 80140dc:	2600      	movlt	r6, #0
 80140de:	2601      	movge	r6, #1
 80140e0:	2500      	movs	r5, #0
 80140e2:	e7f7      	b.n	80140d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 80140e4:	42b7      	cmp	r7, r6
 80140e6:	464d      	mov	r5, r9
 80140e8:	f04f 0900 	mov.w	r9, #0
 80140ec:	bfb4      	ite	lt
 80140ee:	2600      	movlt	r6, #0
 80140f0:	2601      	movge	r6, #1
 80140f2:	464f      	mov	r7, r9
 80140f4:	f04f 0800 	mov.w	r8, #0
 80140f8:	f8a4 8016 	strh.w	r8, [r4, #22]
 80140fc:	f8a4 8018 	strh.w	r8, [r4, #24]
 8014100:	f8cd 8004 	str.w	r8, [sp, #4]
 8014104:	2300      	movs	r3, #0
 8014106:	9303      	str	r3, [sp, #12]
 8014108:	8823      	ldrh	r3, [r4, #0]
 801410a:	2b20      	cmp	r3, #32
 801410c:	d034      	beq.n	8014178 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 801410e:	f242 010b 	movw	r1, #8203	; 0x200b
 8014112:	1a5a      	subs	r2, r3, r1
 8014114:	f1d2 0a00 	rsbs	sl, r2, #0
 8014118:	eb4a 0a02 	adc.w	sl, sl, r2
 801411c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8014120:	4293      	cmp	r3, r2
 8014122:	d009      	beq.n	8014138 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014124:	428b      	cmp	r3, r1
 8014126:	9a01      	ldr	r2, [sp, #4]
 8014128:	bf18      	it	ne
 801412a:	461a      	movne	r2, r3
 801412c:	9201      	str	r2, [sp, #4]
 801412e:	bf0c      	ite	eq
 8014130:	f04f 0a01 	moveq.w	sl, #1
 8014134:	f04f 0a00 	movne.w	sl, #0
 8014138:	ab03      	add	r3, sp, #12
 801413a:	68e2      	ldr	r2, [r4, #12]
 801413c:	7a21      	ldrb	r1, [r4, #8]
 801413e:	6860      	ldr	r0, [r4, #4]
 8014140:	f002 ff4a 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8014144:	8020      	strh	r0, [r4, #0]
 8014146:	b9d8      	cbnz	r0, 8014180 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8014148:	8ba2      	ldrh	r2, [r4, #28]
 801414a:	2300      	movs	r3, #0
 801414c:	4611      	mov	r1, r2
 801414e:	4620      	mov	r0, r4
 8014150:	f7ff ff90 	bl	8014074 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014154:	e06e      	b.n	8014234 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014156:	2500      	movs	r5, #0
 8014158:	46a9      	mov	r9, r5
 801415a:	462e      	mov	r6, r5
 801415c:	2701      	movs	r7, #1
 801415e:	e7c9      	b.n	80140f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014160:	42b7      	cmp	r7, r6
 8014162:	f04f 0500 	mov.w	r5, #0
 8014166:	bfb4      	ite	lt
 8014168:	2700      	movlt	r7, #0
 801416a:	2701      	movge	r7, #1
 801416c:	462e      	mov	r6, r5
 801416e:	e7c1      	b.n	80140f4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014170:	2500      	movs	r5, #0
 8014172:	46a9      	mov	r9, r5
 8014174:	2601      	movs	r6, #1
 8014176:	e7ad      	b.n	80140d4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014178:	9301      	str	r3, [sp, #4]
 801417a:	f04f 0a01 	mov.w	sl, #1
 801417e:	e7db      	b.n	8014138 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014180:	8b63      	ldrh	r3, [r4, #26]
 8014182:	280a      	cmp	r0, #10
 8014184:	f103 0301 	add.w	r3, r3, #1
 8014188:	8363      	strh	r3, [r4, #26]
 801418a:	d0dd      	beq.n	8014148 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801418c:	9a03      	ldr	r2, [sp, #12]
 801418e:	bb62      	cbnz	r2, 80141ea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014190:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014194:	4298      	cmp	r0, r3
 8014196:	d003      	beq.n	80141a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014198:	f242 030b 	movw	r3, #8203	; 0x200b
 801419c:	4298      	cmp	r0, r3
 801419e:	d1b1      	bne.n	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80141a0:	8823      	ldrh	r3, [r4, #0]
 80141a2:	8ba1      	ldrh	r1, [r4, #28]
 80141a4:	2b20      	cmp	r3, #32
 80141a6:	d003      	beq.n	80141b0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 80141a8:	f242 000b 	movw	r0, #8203	; 0x200b
 80141ac:	4283      	cmp	r3, r0
 80141ae:	d131      	bne.n	8014214 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 80141b0:	f1ba 0f00 	cmp.w	sl, #0
 80141b4:	bf0a      	itet	eq
 80141b6:	4688      	moveq	r8, r1
 80141b8:	4650      	movne	r0, sl
 80141ba:	2001      	moveq	r0, #1
 80141bc:	440a      	add	r2, r1
 80141be:	8b23      	ldrh	r3, [r4, #24]
 80141c0:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 80141c4:	b292      	uxth	r2, r2
 80141c6:	83a2      	strh	r2, [r4, #28]
 80141c8:	4413      	add	r3, r2
 80141ca:	f1b9 0f00 	cmp.w	r9, #0
 80141ce:	d102      	bne.n	80141d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 80141d0:	2d00      	cmp	r5, #0
 80141d2:	d042      	beq.n	801425a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 80141d4:	b300      	cbz	r0, 8014218 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 80141d6:	8c21      	ldrh	r1, [r4, #32]
 80141d8:	4419      	add	r1, r3
 80141da:	458c      	cmp	ip, r1
 80141dc:	da37      	bge.n	801424e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80141de:	8ae1      	ldrh	r1, [r4, #22]
 80141e0:	2900      	cmp	r1, #0
 80141e2:	d034      	beq.n	801424e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 80141e4:	4563      	cmp	r3, ip
 80141e6:	dd8d      	ble.n	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80141e8:	e01d      	b.n	8014226 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 80141ea:	8893      	ldrh	r3, [r2, #4]
 80141ec:	8023      	strh	r3, [r4, #0]
 80141ee:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80141f2:	9901      	ldr	r1, [sp, #4]
 80141f4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80141f8:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80141fc:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8014200:	ea4b 0b00 	orr.w	fp, fp, r0
 8014204:	68e0      	ldr	r0, [r4, #12]
 8014206:	6803      	ldr	r3, [r0, #0]
 8014208:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801420a:	4798      	blx	r3
 801420c:	eb0b 0200 	add.w	r2, fp, r0
 8014210:	b292      	uxth	r2, r2
 8014212:	e7c5      	b.n	80141a0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014214:	2000      	movs	r0, #0
 8014216:	e7d1      	b.n	80141bc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8014218:	4563      	cmp	r3, ip
 801421a:	f77f af73 	ble.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801421e:	8ae3      	ldrh	r3, [r4, #22]
 8014220:	2b00      	cmp	r3, #0
 8014222:	f43f af6f 	beq.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014226:	2301      	movs	r3, #1
 8014228:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 801422c:	8c22      	ldrh	r2, [r4, #32]
 801422e:	8be3      	ldrh	r3, [r4, #30]
 8014230:	4413      	add	r3, r2
 8014232:	83e3      	strh	r3, [r4, #30]
 8014234:	68e0      	ldr	r0, [r4, #12]
 8014236:	6803      	ldr	r3, [r0, #0]
 8014238:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801423a:	4798      	blx	r3
 801423c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8014240:	4418      	add	r0, r3
 8014242:	8a63      	ldrh	r3, [r4, #18]
 8014244:	1a18      	subs	r0, r3, r0
 8014246:	8260      	strh	r0, [r4, #18]
 8014248:	b005      	add	sp, #20
 801424a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801424e:	2300      	movs	r3, #0
 8014250:	4611      	mov	r1, r2
 8014252:	4620      	mov	r0, r4
 8014254:	f7ff ff0e 	bl	8014074 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014258:	e754      	b.n	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801425a:	4563      	cmp	r3, ip
 801425c:	dd14      	ble.n	8014288 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801425e:	b117      	cbz	r7, 8014266 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014260:	2301      	movs	r3, #1
 8014262:	460a      	mov	r2, r1
 8014264:	e772      	b.n	801414c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014266:	2e00      	cmp	r6, #0
 8014268:	f43f af4c 	beq.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801426c:	2800      	cmp	r0, #0
 801426e:	f47f af49 	bne.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014272:	f1ba 0f00 	cmp.w	sl, #0
 8014276:	d002      	beq.n	801427e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014278:	2301      	movs	r3, #1
 801427a:	4642      	mov	r2, r8
 801427c:	e767      	b.n	801414e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801427e:	8ae3      	ldrh	r3, [r4, #22]
 8014280:	2b00      	cmp	r3, #0
 8014282:	f43f af3f 	beq.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014286:	e7d5      	b.n	8014234 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014288:	2800      	cmp	r0, #0
 801428a:	f47f af3b 	bne.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801428e:	f1ba 0f00 	cmp.w	sl, #0
 8014292:	f43f af37 	beq.w	8014104 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014296:	2301      	movs	r3, #1
 8014298:	4642      	mov	r2, r8
 801429a:	e7da      	b.n	8014252 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801429c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801429c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801429e:	4605      	mov	r5, r0
 80142a0:	b08f      	sub	sp, #60	; 0x3c
 80142a2:	4617      	mov	r7, r2
 80142a4:	461c      	mov	r4, r3
 80142a6:	460e      	mov	r6, r1
 80142a8:	b1d1      	cbz	r1, 80142e0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 80142aa:	681b      	ldr	r3, [r3, #0]
 80142ac:	4620      	mov	r0, r4
 80142ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80142b0:	4798      	blx	r3
 80142b2:	4240      	negs	r0, r0
 80142b4:	b200      	sxth	r0, r0
 80142b6:	e9cd 4001 	strd	r4, r0, [sp, #4]
 80142ba:	9603      	str	r6, [sp, #12]
 80142bc:	9700      	str	r7, [sp, #0]
 80142be:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80142c2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80142c6:	4629      	mov	r1, r5
 80142c8:	a805      	add	r0, sp, #20
 80142ca:	f7ff fcbf 	bl	8013c4c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80142ce:	2401      	movs	r4, #1
 80142d0:	a805      	add	r0, sp, #20
 80142d2:	f7ff fedf 	bl	8014094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80142d6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 80142da:	b163      	cbz	r3, 80142f6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 80142dc:	3401      	adds	r4, #1
 80142de:	e7f7      	b.n	80142d0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 80142e0:	f002 ff48 	bl	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80142e4:	2401      	movs	r4, #1
 80142e6:	280a      	cmp	r0, #10
 80142e8:	4628      	mov	r0, r5
 80142ea:	bf08      	it	eq
 80142ec:	3401      	addeq	r4, #1
 80142ee:	f002 ff41 	bl	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80142f2:	2800      	cmp	r0, #0
 80142f4:	d1f7      	bne.n	80142e6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80142f6:	b2a0      	uxth	r0, r4
 80142f8:	b00f      	add	sp, #60	; 0x3c
 80142fa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080142fc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80142fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014300:	b0e3      	sub	sp, #396	; 0x18c
 8014302:	461c      	mov	r4, r3
 8014304:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8014306:	4683      	mov	fp, r0
 8014308:	4688      	mov	r8, r1
 801430a:	2b00      	cmp	r3, #0
 801430c:	f000 8112 	beq.w	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014310:	6823      	ldr	r3, [r4, #0]
 8014312:	2b00      	cmp	r3, #0
 8014314:	f000 810e 	beq.w	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014318:	7ba3      	ldrb	r3, [r4, #14]
 801431a:	2b00      	cmp	r3, #0
 801431c:	f000 810a 	beq.w	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014320:	6810      	ldr	r0, [r2, #0]
 8014322:	6851      	ldr	r1, [r2, #4]
 8014324:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8014328:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801432c:	ad0a      	add	r5, sp, #40	; 0x28
 801432e:	462b      	mov	r3, r5
 8014330:	c303      	stmia	r3!, {r0, r1}
 8014332:	2100      	movs	r1, #0
 8014334:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8014338:	910c      	str	r1, [sp, #48]	; 0x30
 801433a:	79a2      	ldrb	r2, [r4, #6]
 801433c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014340:	a90c      	add	r1, sp, #48	; 0x30
 8014342:	4628      	mov	r0, r5
 8014344:	f7ff fd01 	bl	8013d4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014348:	a90c      	add	r1, sp, #48	; 0x30
 801434a:	4608      	mov	r0, r1
 801434c:	79a2      	ldrb	r2, [r4, #6]
 801434e:	f7ff fcfc 	bl	8013d4a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014352:	a817      	add	r0, sp, #92	; 0x5c
 8014354:	f002 fae2 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8014358:	6820      	ldr	r0, [r4, #0]
 801435a:	6803      	ldr	r3, [r0, #0]
 801435c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801435e:	4798      	blx	r3
 8014360:	4606      	mov	r6, r0
 8014362:	6820      	ldr	r0, [r4, #0]
 8014364:	6803      	ldr	r3, [r0, #0]
 8014366:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014368:	4798      	blx	r3
 801436a:	4633      	mov	r3, r6
 801436c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801436e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014370:	9000      	str	r0, [sp, #0]
 8014372:	a817      	add	r0, sp, #92	; 0x5c
 8014374:	f002 fb2d 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014378:	6820      	ldr	r0, [r4, #0]
 801437a:	f894 a004 	ldrb.w	sl, [r4, #4]
 801437e:	6803      	ldr	r3, [r0, #0]
 8014380:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014382:	4798      	blx	r3
 8014384:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014388:	6823      	ldr	r3, [r4, #0]
 801438a:	4607      	mov	r7, r0
 801438c:	4406      	add	r6, r0
 801438e:	a830      	add	r0, sp, #192	; 0xc0
 8014390:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014394:	f002 fac2 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8014398:	7c23      	ldrb	r3, [r4, #16]
 801439a:	b17b      	cbz	r3, 80143bc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801439c:	6820      	ldr	r0, [r4, #0]
 801439e:	6803      	ldr	r3, [r0, #0]
 80143a0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80143a2:	4798      	blx	r3
 80143a4:	9009      	str	r0, [sp, #36]	; 0x24
 80143a6:	6820      	ldr	r0, [r4, #0]
 80143a8:	6802      	ldr	r2, [r0, #0]
 80143aa:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80143ac:	4790      	blx	r2
 80143ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143b0:	9000      	str	r0, [sp, #0]
 80143b2:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80143b4:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80143b6:	a830      	add	r0, sp, #192	; 0xc0
 80143b8:	f002 fb0b 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80143bc:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80143c0:	7be2      	ldrb	r2, [r4, #15]
 80143c2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80143c6:	1a8a      	subs	r2, r1, r2
 80143c8:	7c21      	ldrb	r1, [r4, #16]
 80143ca:	9103      	str	r1, [sp, #12]
 80143cc:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80143d0:	9102      	str	r1, [sp, #8]
 80143d2:	6821      	ldr	r1, [r4, #0]
 80143d4:	9101      	str	r1, [sp, #4]
 80143d6:	7961      	ldrb	r1, [r4, #5]
 80143d8:	9100      	str	r1, [sp, #0]
 80143da:	b292      	uxth	r2, r2
 80143dc:	a930      	add	r1, sp, #192	; 0xc0
 80143de:	a80e      	add	r0, sp, #56	; 0x38
 80143e0:	f7ff fc34 	bl	8013c4c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80143e4:	2e00      	cmp	r6, #0
 80143e6:	dc5b      	bgt.n	80144a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80143e8:	af17      	add	r7, sp, #92	; 0x5c
 80143ea:	f04f 0900 	mov.w	r9, #0
 80143ee:	7c23      	ldrb	r3, [r4, #16]
 80143f0:	2b00      	cmp	r3, #0
 80143f2:	f000 80b1 	beq.w	8014558 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80143f6:	a80e      	add	r0, sp, #56	; 0x38
 80143f8:	f7ff fe4c 	bl	8014094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80143fc:	f1ba 0f00 	cmp.w	sl, #0
 8014400:	f000 80a5 	beq.w	801454e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014404:	7c23      	ldrb	r3, [r4, #16]
 8014406:	9309      	str	r3, [sp, #36]	; 0x24
 8014408:	2264      	movs	r2, #100	; 0x64
 801440a:	4639      	mov	r1, r7
 801440c:	a849      	add	r0, sp, #292	; 0x124
 801440e:	f012 f833 	bl	8026478 <memcpy>
 8014412:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014414:	2b00      	cmp	r3, #0
 8014416:	f000 80a7 	beq.w	8014568 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 801441a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801441e:	7922      	ldrb	r2, [r4, #4]
 8014420:	2a01      	cmp	r2, #1
 8014422:	f040 808a 	bne.w	801453a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8014426:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 801442a:	1ac0      	subs	r0, r0, r3
 801442c:	2302      	movs	r3, #2
 801442e:	fb90 f0f3 	sdiv	r0, r0, r3
 8014432:	b200      	sxth	r0, r0
 8014434:	7c23      	ldrb	r3, [r4, #16]
 8014436:	2b00      	cmp	r3, #0
 8014438:	f000 808b 	beq.w	8014552 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801443c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8014440:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8014444:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014448:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801444c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014450:	4410      	add	r0, r2
 8014452:	b200      	sxth	r0, r0
 8014454:	9000      	str	r0, [sp, #0]
 8014456:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801445a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801445e:	4642      	mov	r2, r8
 8014460:	2100      	movs	r1, #0
 8014462:	4658      	mov	r0, fp
 8014464:	f7ff fca2 	bl	8013dac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014468:	2800      	cmp	r0, #0
 801446a:	d163      	bne.n	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801446c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014470:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014474:	b2b2      	uxth	r2, r6
 8014476:	4413      	add	r3, r2
 8014478:	1a8a      	subs	r2, r1, r2
 801447a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801447e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014482:	b21b      	sxth	r3, r3
 8014484:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014488:	2a00      	cmp	r2, #0
 801448a:	d153      	bne.n	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801448c:	6822      	ldr	r2, [r4, #0]
 801448e:	8869      	ldrh	r1, [r5, #2]
 8014490:	7a12      	ldrb	r2, [r2, #8]
 8014492:	1a9b      	subs	r3, r3, r2
 8014494:	88ea      	ldrh	r2, [r5, #6]
 8014496:	440a      	add	r2, r1
 8014498:	b212      	sxth	r2, r2
 801449a:	4293      	cmp	r3, r2
 801449c:	dda7      	ble.n	80143ee <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801449e:	e049      	b.n	8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144a0:	7c23      	ldrb	r3, [r4, #16]
 80144a2:	444f      	add	r7, r9
 80144a4:	b1c3      	cbz	r3, 80144d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80144a6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80144aa:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80144ae:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80144b2:	443b      	add	r3, r7
 80144b4:	4293      	cmp	r3, r2
 80144b6:	da97      	bge.n	80143e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80144b8:	a80e      	add	r0, sp, #56	; 0x38
 80144ba:	f7ff fdeb 	bl	8014094 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80144be:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80144c2:	3b01      	subs	r3, #1
 80144c4:	b29b      	uxth	r3, r3
 80144c6:	454b      	cmp	r3, r9
 80144c8:	9309      	str	r3, [sp, #36]	; 0x24
 80144ca:	d021      	beq.n	8014510 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80144cc:	7961      	ldrb	r1, [r4, #5]
 80144ce:	a817      	add	r0, sp, #92	; 0x5c
 80144d0:	f7f3 fc64 	bl	8007d9c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80144d4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80144d6:	e7f4      	b.n	80144c2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80144d8:	fa1f f986 	uxth.w	r9, r6
 80144dc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80144e0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80144e4:	443b      	add	r3, r7
 80144e6:	4293      	cmp	r3, r2
 80144e8:	f6bf af7e 	bge.w	80143e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80144ec:	a817      	add	r0, sp, #92	; 0x5c
 80144ee:	f002 fe41 	bl	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80144f2:	b1f8      	cbz	r0, 8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80144f4:	280a      	cmp	r0, #10
 80144f6:	d1f1      	bne.n	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80144f8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80144fc:	444b      	add	r3, r9
 80144fe:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014502:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014506:	eba3 0309 	sub.w	r3, r3, r9
 801450a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801450e:	e7e5      	b.n	80144dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014510:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8014514:	b2b3      	uxth	r3, r6
 8014516:	441a      	add	r2, r3
 8014518:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801451c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8014520:	1ad3      	subs	r3, r2, r3
 8014522:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8014526:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801452a:	b11b      	cbz	r3, 8014534 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801452c:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 8014530:	2b00      	cmp	r3, #0
 8014532:	d0ba      	beq.n	80144aa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8014534:	b063      	add	sp, #396	; 0x18c
 8014536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801453a:	2a02      	cmp	r2, #2
 801453c:	d105      	bne.n	801454a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 801453e:	7be2      	ldrb	r2, [r4, #15]
 8014540:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 8014544:	1a80      	subs	r0, r0, r2
 8014546:	1ac0      	subs	r0, r0, r3
 8014548:	e773      	b.n	8014432 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 801454a:	2000      	movs	r0, #0
 801454c:	e772      	b.n	8014434 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801454e:	7be0      	ldrb	r0, [r4, #15]
 8014550:	e770      	b.n	8014434 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014552:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014556:	e773      	b.n	8014440 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014558:	f1ba 0f00 	cmp.w	sl, #0
 801455c:	d0f7      	beq.n	801454e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801455e:	2264      	movs	r2, #100	; 0x64
 8014560:	4639      	mov	r1, r7
 8014562:	a849      	add	r0, sp, #292	; 0x124
 8014564:	f011 ff88 	bl	8026478 <memcpy>
 8014568:	2300      	movs	r3, #0
 801456a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801456e:	6821      	ldr	r1, [r4, #0]
 8014570:	a849      	add	r0, sp, #292	; 0x124
 8014572:	f7ff fbae 	bl	8013cd2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014576:	b203      	sxth	r3, r0
 8014578:	e751      	b.n	801441e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801457a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801457a:	2b03      	cmp	r3, #3
 801457c:	d818      	bhi.n	80145b0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801457e:	e8df f003 	tbb	[pc, r3]
 8014582:	0602      	.short	0x0602
 8014584:	130d      	.short	0x130d
 8014586:	f9b0 2000 	ldrsh.w	r2, [r0]
 801458a:	1850      	adds	r0, r2, r1
 801458c:	4770      	bx	lr
 801458e:	8803      	ldrh	r3, [r0, #0]
 8014590:	8880      	ldrh	r0, [r0, #4]
 8014592:	4418      	add	r0, r3
 8014594:	b200      	sxth	r0, r0
 8014596:	1a80      	subs	r0, r0, r2
 8014598:	3801      	subs	r0, #1
 801459a:	4770      	bx	lr
 801459c:	8803      	ldrh	r3, [r0, #0]
 801459e:	8880      	ldrh	r0, [r0, #4]
 80145a0:	4418      	add	r0, r3
 80145a2:	b200      	sxth	r0, r0
 80145a4:	1a40      	subs	r0, r0, r1
 80145a6:	e7f7      	b.n	8014598 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80145a8:	f9b0 0000 	ldrsh.w	r0, [r0]
 80145ac:	4410      	add	r0, r2
 80145ae:	4770      	bx	lr
 80145b0:	2000      	movs	r0, #0
 80145b2:	4770      	bx	lr

080145b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80145b4:	2b03      	cmp	r3, #3
 80145b6:	d817      	bhi.n	80145e8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80145b8:	e8df f003 	tbb	[pc, r3]
 80145bc:	10090602 	.word	0x10090602
 80145c0:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80145c4:	1850      	adds	r0, r2, r1
 80145c6:	4770      	bx	lr
 80145c8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80145cc:	e7fa      	b.n	80145c4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80145ce:	8843      	ldrh	r3, [r0, #2]
 80145d0:	88c0      	ldrh	r0, [r0, #6]
 80145d2:	4418      	add	r0, r3
 80145d4:	b200      	sxth	r0, r0
 80145d6:	1a80      	subs	r0, r0, r2
 80145d8:	3801      	subs	r0, #1
 80145da:	4770      	bx	lr
 80145dc:	8843      	ldrh	r3, [r0, #2]
 80145de:	88c0      	ldrh	r0, [r0, #6]
 80145e0:	4418      	add	r0, r3
 80145e2:	b200      	sxth	r0, r0
 80145e4:	1a40      	subs	r0, r0, r1
 80145e6:	e7f7      	b.n	80145d8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80145e8:	2000      	movs	r0, #0
 80145ea:	4770      	bx	lr

080145ec <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80145ec:	4b01      	ldr	r3, [pc, #4]	; (80145f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80145ee:	2200      	movs	r2, #0
 80145f0:	601a      	str	r2, [r3, #0]
 80145f2:	4770      	bx	lr
 80145f4:	2000ef2c 	.word	0x2000ef2c

080145f8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80145f8:	4603      	mov	r3, r0
 80145fa:	b1c8      	cbz	r0, 8014630 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80145fc:	0c02      	lsrs	r2, r0, #16
 80145fe:	0412      	lsls	r2, r2, #16
 8014600:	b9a2      	cbnz	r2, 801462c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8014602:	0403      	lsls	r3, r0, #16
 8014604:	2010      	movs	r0, #16
 8014606:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801460a:	bf04      	itt	eq
 801460c:	021b      	lsleq	r3, r3, #8
 801460e:	3008      	addeq	r0, #8
 8014610:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8014614:	bf04      	itt	eq
 8014616:	011b      	lsleq	r3, r3, #4
 8014618:	3004      	addeq	r0, #4
 801461a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801461e:	bf04      	itt	eq
 8014620:	009b      	lsleq	r3, r3, #2
 8014622:	3002      	addeq	r0, #2
 8014624:	2b00      	cmp	r3, #0
 8014626:	db04      	blt.n	8014632 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014628:	3001      	adds	r0, #1
 801462a:	4770      	bx	lr
 801462c:	2000      	movs	r0, #0
 801462e:	e7ea      	b.n	8014606 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014630:	2020      	movs	r0, #32
 8014632:	4770      	bx	lr

08014634 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8014634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014638:	b087      	sub	sp, #28
 801463a:	460d      	mov	r5, r1
 801463c:	4616      	mov	r6, r2
 801463e:	4698      	mov	r8, r3
 8014640:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8014644:	4601      	mov	r1, r0
 8014646:	b120      	cbz	r0, 8014652 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014648:	b11a      	cbz	r2, 8014652 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801464a:	2d1f      	cmp	r5, #31
 801464c:	d801      	bhi.n	8014652 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 801464e:	2b1f      	cmp	r3, #31
 8014650:	d904      	bls.n	801465c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014652:	2000      	movs	r0, #0
 8014654:	6038      	str	r0, [r7, #0]
 8014656:	b007      	add	sp, #28
 8014658:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801465c:	b97d      	cbnz	r5, 801467e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801465e:	b143      	cbz	r3, 8014672 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014660:	4602      	mov	r2, r0
 8014662:	e9cd 4700 	strd	r4, r7, [sp]
 8014666:	462b      	mov	r3, r5
 8014668:	4641      	mov	r1, r8
 801466a:	4630      	mov	r0, r6
 801466c:	f7ff ffe2 	bl	8014634 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014670:	e7f1      	b.n	8014656 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014672:	f04f 33ff 	mov.w	r3, #4294967295
 8014676:	603b      	str	r3, [r7, #0]
 8014678:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801467c:	e7eb      	b.n	8014656 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801467e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014682:	d106      	bne.n	8014692 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014684:	4346      	muls	r6, r0
 8014686:	fbb6 f0f4 	udiv	r0, r6, r4
 801468a:	fb04 6610 	mls	r6, r4, r0, r6
 801468e:	603e      	str	r6, [r7, #0]
 8014690:	e7e1      	b.n	8014656 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014692:	2201      	movs	r2, #1
 8014694:	40aa      	lsls	r2, r5
 8014696:	3a01      	subs	r2, #1
 8014698:	4016      	ands	r6, r2
 801469a:	fa00 fb05 	lsl.w	fp, r0, r5
 801469e:	4630      	mov	r0, r6
 80146a0:	fbbb f9f4 	udiv	r9, fp, r4
 80146a4:	fb0a f309 	mul.w	r3, sl, r9
 80146a8:	9303      	str	r3, [sp, #12]
 80146aa:	f7ff ffa5 	bl	80145f8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80146ae:	462b      	mov	r3, r5
 80146b0:	460a      	mov	r2, r1
 80146b2:	e9cd 4700 	strd	r4, r7, [sp]
 80146b6:	4601      	mov	r1, r0
 80146b8:	4630      	mov	r0, r6
 80146ba:	f7ff ffbb 	bl	8014634 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80146be:	fb04 b919 	mls	r9, r4, r9, fp
 80146c2:	4606      	mov	r6, r0
 80146c4:	4648      	mov	r0, r9
 80146c6:	eb05 0108 	add.w	r1, r5, r8
 80146ca:	f7ff ff95 	bl	80145f8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80146ce:	ab05      	add	r3, sp, #20
 80146d0:	e9cd 4300 	strd	r4, r3, [sp]
 80146d4:	464a      	mov	r2, r9
 80146d6:	4603      	mov	r3, r0
 80146d8:	4650      	mov	r0, sl
 80146da:	f7ff ffab 	bl	8014634 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80146de:	6839      	ldr	r1, [r7, #0]
 80146e0:	9a05      	ldr	r2, [sp, #20]
 80146e2:	9b03      	ldr	r3, [sp, #12]
 80146e4:	4411      	add	r1, r2
 80146e6:	fbb1 f2f4 	udiv	r2, r1, r4
 80146ea:	18d3      	adds	r3, r2, r3
 80146ec:	441e      	add	r6, r3
 80146ee:	fb04 1412 	mls	r4, r4, r2, r1
 80146f2:	4430      	add	r0, r6
 80146f4:	603c      	str	r4, [r7, #0]
 80146f6:	e7ae      	b.n	8014656 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080146f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80146f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80146fc:	b085      	sub	sp, #20
 80146fe:	f1b0 0900 	subs.w	r9, r0, #0
 8014702:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014704:	461d      	mov	r5, r3
 8014706:	bfbf      	itttt	lt
 8014708:	6823      	ldrlt	r3, [r4, #0]
 801470a:	425b      	neglt	r3, r3
 801470c:	f1c9 0900 	rsblt	r9, r9, #0
 8014710:	6023      	strlt	r3, [r4, #0]
 8014712:	bfb4      	ite	lt
 8014714:	f04f 36ff 	movlt.w	r6, #4294967295
 8014718:	2601      	movge	r6, #1
 801471a:	2a00      	cmp	r2, #0
 801471c:	4617      	mov	r7, r2
 801471e:	da04      	bge.n	801472a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014720:	6823      	ldr	r3, [r4, #0]
 8014722:	425b      	negs	r3, r3
 8014724:	4257      	negs	r7, r2
 8014726:	4276      	negs	r6, r6
 8014728:	6023      	str	r3, [r4, #0]
 801472a:	2d00      	cmp	r5, #0
 801472c:	4638      	mov	r0, r7
 801472e:	bfba      	itte	lt
 8014730:	426d      	neglt	r5, r5
 8014732:	f04f 38ff 	movlt.w	r8, #4294967295
 8014736:	f04f 0801 	movge.w	r8, #1
 801473a:	f7ff ff5d 	bl	80145f8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801473e:	ab03      	add	r3, sp, #12
 8014740:	e9cd 5300 	strd	r5, r3, [sp]
 8014744:	463a      	mov	r2, r7
 8014746:	4603      	mov	r3, r0
 8014748:	4648      	mov	r0, r9
 801474a:	f7ff ff73 	bl	8014634 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801474e:	6823      	ldr	r3, [r4, #0]
 8014750:	9a03      	ldr	r2, [sp, #12]
 8014752:	4546      	cmp	r6, r8
 8014754:	441a      	add	r2, r3
 8014756:	fb92 f3f5 	sdiv	r3, r2, r5
 801475a:	4418      	add	r0, r3
 801475c:	bf18      	it	ne
 801475e:	4240      	negne	r0, r0
 8014760:	fb05 2313 	mls	r3, r5, r3, r2
 8014764:	1c72      	adds	r2, r6, #1
 8014766:	6023      	str	r3, [r4, #0]
 8014768:	d105      	bne.n	8014776 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801476a:	2b00      	cmp	r3, #0
 801476c:	f1c3 0200 	rsb	r2, r3, #0
 8014770:	db0b      	blt.n	801478a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014772:	6022      	str	r2, [r4, #0]
 8014774:	e006      	b.n	8014784 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014776:	2e01      	cmp	r6, #1
 8014778:	d104      	bne.n	8014784 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801477a:	2b00      	cmp	r3, #0
 801477c:	da02      	bge.n	8014784 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801477e:	442b      	add	r3, r5
 8014780:	3801      	subs	r0, #1
 8014782:	6023      	str	r3, [r4, #0]
 8014784:	b005      	add	sp, #20
 8014786:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801478a:	3801      	subs	r0, #1
 801478c:	1b52      	subs	r2, r2, r5
 801478e:	e7f0      	b.n	8014772 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014790 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014790:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014794:	4c1c      	ldr	r4, [pc, #112]	; (8014808 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014796:	6807      	ldr	r7, [r0, #0]
 8014798:	69a3      	ldr	r3, [r4, #24]
 801479a:	4605      	mov	r5, r0
 801479c:	b92b      	cbnz	r3, 80147aa <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801479e:	6840      	ldr	r0, [r0, #4]
 80147a0:	e9c5 7000 	strd	r7, r0, [r5]
 80147a4:	b004      	add	sp, #16
 80147a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80147aa:	68a2      	ldr	r2, [r4, #8]
 80147ac:	6820      	ldr	r0, [r4, #0]
 80147ae:	ae04      	add	r6, sp, #16
 80147b0:	f04f 0802 	mov.w	r8, #2
 80147b4:	fb93 f1f8 	sdiv	r1, r3, r8
 80147b8:	440a      	add	r2, r1
 80147ba:	f846 2d04 	str.w	r2, [r6, #-4]!
 80147be:	69e1      	ldr	r1, [r4, #28]
 80147c0:	9600      	str	r6, [sp, #0]
 80147c2:	463a      	mov	r2, r7
 80147c4:	f7ff ff98 	bl	80146f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80147c8:	69a3      	ldr	r3, [r4, #24]
 80147ca:	686a      	ldr	r2, [r5, #4]
 80147cc:	6a21      	ldr	r1, [r4, #32]
 80147ce:	9600      	str	r6, [sp, #0]
 80147d0:	4607      	mov	r7, r0
 80147d2:	6860      	ldr	r0, [r4, #4]
 80147d4:	f7ff ff90 	bl	80146f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80147d8:	6962      	ldr	r2, [r4, #20]
 80147da:	69a3      	ldr	r3, [r4, #24]
 80147dc:	fb93 f8f8 	sdiv	r8, r3, r8
 80147e0:	4442      	add	r2, r8
 80147e2:	9203      	str	r2, [sp, #12]
 80147e4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80147e6:	682a      	ldr	r2, [r5, #0]
 80147e8:	9600      	str	r6, [sp, #0]
 80147ea:	4407      	add	r7, r0
 80147ec:	68e0      	ldr	r0, [r4, #12]
 80147ee:	f7ff ff83 	bl	80146f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80147f2:	9600      	str	r6, [sp, #0]
 80147f4:	4680      	mov	r8, r0
 80147f6:	69a3      	ldr	r3, [r4, #24]
 80147f8:	686a      	ldr	r2, [r5, #4]
 80147fa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80147fc:	6920      	ldr	r0, [r4, #16]
 80147fe:	f7ff ff7b 	bl	80146f8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014802:	4440      	add	r0, r8
 8014804:	e7cc      	b.n	80147a0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014806:	bf00      	nop
 8014808:	2000ef30 	.word	0x2000ef30

0801480c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801480c:	4b07      	ldr	r3, [pc, #28]	; (801482c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801480e:	781b      	ldrb	r3, [r3, #0]
 8014810:	2b01      	cmp	r3, #1
 8014812:	d109      	bne.n	8014828 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014814:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014818:	f9b0 2000 	ldrsh.w	r2, [r0]
 801481c:	8003      	strh	r3, [r0, #0]
 801481e:	4b04      	ldr	r3, [pc, #16]	; (8014830 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014820:	881b      	ldrh	r3, [r3, #0]
 8014822:	3b01      	subs	r3, #1
 8014824:	1a9b      	subs	r3, r3, r2
 8014826:	800b      	strh	r3, [r1, #0]
 8014828:	4770      	bx	lr
 801482a:	bf00      	nop
 801482c:	2000ef14 	.word	0x2000ef14
 8014830:	2000ef10 	.word	0x2000ef10

08014834 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014834:	b510      	push	{r4, lr}
 8014836:	4b07      	ldr	r3, [pc, #28]	; (8014854 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014838:	781b      	ldrb	r3, [r3, #0]
 801483a:	2b01      	cmp	r3, #1
 801483c:	d108      	bne.n	8014850 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801483e:	4b06      	ldr	r3, [pc, #24]	; (8014858 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014840:	880c      	ldrh	r4, [r1, #0]
 8014842:	881b      	ldrh	r3, [r3, #0]
 8014844:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014848:	3b01      	subs	r3, #1
 801484a:	1b1b      	subs	r3, r3, r4
 801484c:	8003      	strh	r3, [r0, #0]
 801484e:	800a      	strh	r2, [r1, #0]
 8014850:	bd10      	pop	{r4, pc}
 8014852:	bf00      	nop
 8014854:	2000ef14 	.word	0x2000ef14
 8014858:	2000ef10 	.word	0x2000ef10

0801485c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801485c:	b510      	push	{r4, lr}
 801485e:	4b0a      	ldr	r3, [pc, #40]	; (8014888 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014860:	781b      	ldrb	r3, [r3, #0]
 8014862:	2b01      	cmp	r3, #1
 8014864:	d10e      	bne.n	8014884 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014866:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801486a:	8843      	ldrh	r3, [r0, #2]
 801486c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014870:	8044      	strh	r4, [r0, #2]
 8014872:	18ca      	adds	r2, r1, r3
 8014874:	4b05      	ldr	r3, [pc, #20]	; (801488c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014876:	881b      	ldrh	r3, [r3, #0]
 8014878:	1a9b      	subs	r3, r3, r2
 801487a:	8003      	strh	r3, [r0, #0]
 801487c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014880:	80c3      	strh	r3, [r0, #6]
 8014882:	8081      	strh	r1, [r0, #4]
 8014884:	bd10      	pop	{r4, pc}
 8014886:	bf00      	nop
 8014888:	2000ef14 	.word	0x2000ef14
 801488c:	2000ef10 	.word	0x2000ef10

08014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014890:	4b08      	ldr	r3, [pc, #32]	; (80148b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014892:	781b      	ldrb	r3, [r3, #0]
 8014894:	2b01      	cmp	r3, #1
 8014896:	d10c      	bne.n	80148b2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014898:	8803      	ldrh	r3, [r0, #0]
 801489a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801489e:	8842      	ldrh	r2, [r0, #2]
 80148a0:	8002      	strh	r2, [r0, #0]
 80148a2:	185a      	adds	r2, r3, r1
 80148a4:	4b04      	ldr	r3, [pc, #16]	; (80148b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80148a6:	881b      	ldrh	r3, [r3, #0]
 80148a8:	1a9b      	subs	r3, r3, r2
 80148aa:	8043      	strh	r3, [r0, #2]
 80148ac:	88c3      	ldrh	r3, [r0, #6]
 80148ae:	8083      	strh	r3, [r0, #4]
 80148b0:	80c1      	strh	r1, [r0, #6]
 80148b2:	4770      	bx	lr
 80148b4:	2000ef14 	.word	0x2000ef14
 80148b8:	2000ef10 	.word	0x2000ef10

080148bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80148bc:	b510      	push	{r4, lr}
 80148be:	4b07      	ldr	r3, [pc, #28]	; (80148dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80148c0:	781b      	ldrb	r3, [r3, #0]
 80148c2:	2b01      	cmp	r3, #1
 80148c4:	d108      	bne.n	80148d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80148c6:	f9b1 3000 	ldrsh.w	r3, [r1]
 80148ca:	f9b0 4000 	ldrsh.w	r4, [r0]
 80148ce:	8003      	strh	r3, [r0, #0]
 80148d0:	8893      	ldrh	r3, [r2, #4]
 80148d2:	3b01      	subs	r3, #1
 80148d4:	1b1b      	subs	r3, r3, r4
 80148d6:	800b      	strh	r3, [r1, #0]
 80148d8:	bd10      	pop	{r4, pc}
 80148da:	bf00      	nop
 80148dc:	2000ef14 	.word	0x2000ef14

080148e0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80148e0:	4b0b      	ldr	r3, [pc, #44]	; (8014910 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80148e2:	781b      	ldrb	r3, [r3, #0]
 80148e4:	2b01      	cmp	r3, #1
 80148e6:	d111      	bne.n	801490c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80148e8:	680b      	ldr	r3, [r1, #0]
 80148ea:	ed90 7a00 	vldr	s14, [r0]
 80148ee:	6003      	str	r3, [r0, #0]
 80148f0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80148f4:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014914 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80148f8:	ee07 3a90 	vmov	s15, r3
 80148fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014900:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014904:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014908:	edc1 7a00 	vstr	s15, [r1]
 801490c:	4770      	bx	lr
 801490e:	bf00      	nop
 8014910:	2000ef14 	.word	0x2000ef14
 8014914:	38d1b717 	.word	0x38d1b717

08014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014918:	b510      	push	{r4, lr}
 801491a:	4b0a      	ldr	r3, [pc, #40]	; (8014944 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801491c:	781b      	ldrb	r3, [r3, #0]
 801491e:	2b01      	cmp	r3, #1
 8014920:	460a      	mov	r2, r1
 8014922:	d10d      	bne.n	8014940 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014924:	8881      	ldrh	r1, [r0, #4]
 8014926:	8803      	ldrh	r3, [r0, #0]
 8014928:	440b      	add	r3, r1
 801492a:	4601      	mov	r1, r0
 801492c:	3b01      	subs	r3, #1
 801492e:	f821 3b02 	strh.w	r3, [r1], #2
 8014932:	f7ff ffc3 	bl	80148bc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014936:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801493a:	88c2      	ldrh	r2, [r0, #6]
 801493c:	8082      	strh	r2, [r0, #4]
 801493e:	80c3      	strh	r3, [r0, #6]
 8014940:	bd10      	pop	{r4, pc}
 8014942:	bf00      	nop
 8014944:	2000ef14 	.word	0x2000ef14

08014948 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014948:	4b06      	ldr	r3, [pc, #24]	; (8014964 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801494a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801494e:	4b06      	ldr	r3, [pc, #24]	; (8014968 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014950:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014954:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014958:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801495c:	2100      	movs	r1, #0
 801495e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014962:	4770      	bx	lr
 8014964:	2000ef10 	.word	0x2000ef10
 8014968:	2000ef12 	.word	0x2000ef12

0801496c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801496c:	4b03      	ldr	r3, [pc, #12]	; (801497c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801496e:	6818      	ldr	r0, [r3, #0]
 8014970:	b110      	cbz	r0, 8014978 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014972:	6803      	ldr	r3, [r0, #0]
 8014974:	699b      	ldr	r3, [r3, #24]
 8014976:	4718      	bx	r3
 8014978:	4770      	bx	lr
 801497a:	bf00      	nop
 801497c:	2000ef60 	.word	0x2000ef60

08014980 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014980:	4770      	bx	lr
	...

08014984 <_ZN8touchgfx11Application4drawEv>:
 8014984:	b507      	push	{r0, r1, r2, lr}
 8014986:	4b09      	ldr	r3, [pc, #36]	; (80149ac <_ZN8touchgfx11Application4drawEv+0x28>)
 8014988:	f9b3 2000 	ldrsh.w	r2, [r3]
 801498c:	4b08      	ldr	r3, [pc, #32]	; (80149b0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801498e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014992:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014996:	f8ad 3006 	strh.w	r3, [sp, #6]
 801499a:	6803      	ldr	r3, [r0, #0]
 801499c:	2100      	movs	r1, #0
 801499e:	9100      	str	r1, [sp, #0]
 80149a0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80149a2:	4669      	mov	r1, sp
 80149a4:	4798      	blx	r3
 80149a6:	b003      	add	sp, #12
 80149a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80149ac:	2000ef10 	.word	0x2000ef10
 80149b0:	2000ef12 	.word	0x2000ef12

080149b4 <_ZN8touchgfx11Application10invalidateEv>:
 80149b4:	4b09      	ldr	r3, [pc, #36]	; (80149dc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80149b6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80149ba:	4b09      	ldr	r3, [pc, #36]	; (80149e0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80149bc:	b082      	sub	sp, #8
 80149be:	f9b3 3000 	ldrsh.w	r3, [r3]
 80149c2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80149c6:	2100      	movs	r1, #0
 80149c8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80149cc:	9100      	str	r1, [sp, #0]
 80149ce:	6803      	ldr	r3, [r0, #0]
 80149d0:	aa02      	add	r2, sp, #8
 80149d2:	e912 0006 	ldmdb	r2, {r1, r2}
 80149d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80149d8:	b002      	add	sp, #8
 80149da:	4718      	bx	r3
 80149dc:	2000ef10 	.word	0x2000ef10
 80149e0:	2000ef12 	.word	0x2000ef12

080149e4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80149e4:	4b03      	ldr	r3, [pc, #12]	; (80149f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80149e6:	6818      	ldr	r0, [r3, #0]
 80149e8:	b110      	cbz	r0, 80149f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80149ea:	6803      	ldr	r3, [r0, #0]
 80149ec:	69db      	ldr	r3, [r3, #28]
 80149ee:	4718      	bx	r3
 80149f0:	4770      	bx	lr
 80149f2:	bf00      	nop
 80149f4:	2000ef60 	.word	0x2000ef60

080149f8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80149f8:	4b03      	ldr	r3, [pc, #12]	; (8014a08 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80149fa:	6818      	ldr	r0, [r3, #0]
 80149fc:	b110      	cbz	r0, 8014a04 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80149fe:	6803      	ldr	r3, [r0, #0]
 8014a00:	6a1b      	ldr	r3, [r3, #32]
 8014a02:	4718      	bx	r3
 8014a04:	4770      	bx	lr
 8014a06:	bf00      	nop
 8014a08:	2000ef60 	.word	0x2000ef60

08014a0c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014a0c:	2300      	movs	r3, #0
 8014a0e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014a12:	4770      	bx	lr

08014a14 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014a14:	4b03      	ldr	r3, [pc, #12]	; (8014a24 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014a16:	6818      	ldr	r0, [r3, #0]
 8014a18:	b110      	cbz	r0, 8014a20 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014a1a:	6803      	ldr	r3, [r0, #0]
 8014a1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014a1e:	4718      	bx	r3
 8014a20:	4770      	bx	lr
 8014a22:	bf00      	nop
 8014a24:	2000ef60 	.word	0x2000ef60

08014a28 <_ZN8touchgfx11ApplicationD1Ev>:
 8014a28:	4770      	bx	lr

08014a2a <_ZN8touchgfx11ApplicationD0Ev>:
 8014a2a:	b510      	push	{r4, lr}
 8014a2c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014a30:	4604      	mov	r4, r0
 8014a32:	f011 fc75 	bl	8026320 <_ZdlPvj>
 8014a36:	4620      	mov	r0, r4
 8014a38:	bd10      	pop	{r4, pc}

08014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014a3a:	b510      	push	{r4, lr}
 8014a3c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014a40:	888a      	ldrh	r2, [r1, #4]
 8014a42:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014a46:	4422      	add	r2, r4
 8014a48:	b212      	sxth	r2, r2
 8014a4a:	4293      	cmp	r3, r2
 8014a4c:	da15      	bge.n	8014a7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a4e:	8882      	ldrh	r2, [r0, #4]
 8014a50:	4413      	add	r3, r2
 8014a52:	b21b      	sxth	r3, r3
 8014a54:	429c      	cmp	r4, r3
 8014a56:	da10      	bge.n	8014a7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a58:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014a5c:	88c9      	ldrh	r1, [r1, #6]
 8014a5e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014a62:	4419      	add	r1, r3
 8014a64:	b209      	sxth	r1, r1
 8014a66:	428a      	cmp	r2, r1
 8014a68:	da07      	bge.n	8014a7a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014a6a:	88c0      	ldrh	r0, [r0, #6]
 8014a6c:	4410      	add	r0, r2
 8014a6e:	b200      	sxth	r0, r0
 8014a70:	4283      	cmp	r3, r0
 8014a72:	bfac      	ite	ge
 8014a74:	2000      	movge	r0, #0
 8014a76:	2001      	movlt	r0, #1
 8014a78:	bd10      	pop	{r4, pc}
 8014a7a:	2000      	movs	r0, #0
 8014a7c:	e7fc      	b.n	8014a78 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014a7e <_ZN8touchgfx4Rect10restrictToEss>:
 8014a7e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014a82:	2b00      	cmp	r3, #0
 8014a84:	b510      	push	{r4, lr}
 8014a86:	da04      	bge.n	8014a92 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014a88:	8884      	ldrh	r4, [r0, #4]
 8014a8a:	4423      	add	r3, r4
 8014a8c:	8083      	strh	r3, [r0, #4]
 8014a8e:	2300      	movs	r3, #0
 8014a90:	8003      	strh	r3, [r0, #0]
 8014a92:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014a96:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014a9a:	1b09      	subs	r1, r1, r4
 8014a9c:	428b      	cmp	r3, r1
 8014a9e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014aa2:	bfc8      	it	gt
 8014aa4:	8081      	strhgt	r1, [r0, #4]
 8014aa6:	2b00      	cmp	r3, #0
 8014aa8:	da04      	bge.n	8014ab4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014aaa:	88c1      	ldrh	r1, [r0, #6]
 8014aac:	440b      	add	r3, r1
 8014aae:	80c3      	strh	r3, [r0, #6]
 8014ab0:	2300      	movs	r3, #0
 8014ab2:	8043      	strh	r3, [r0, #2]
 8014ab4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014ab8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014abc:	1a52      	subs	r2, r2, r1
 8014abe:	4293      	cmp	r3, r2
 8014ac0:	bfc8      	it	gt
 8014ac2:	80c2      	strhgt	r2, [r0, #6]
 8014ac4:	bd10      	pop	{r4, pc}
	...

08014ac8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014ac8:	b510      	push	{r4, lr}
 8014aca:	4b10      	ldr	r3, [pc, #64]	; (8014b0c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014acc:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ad0:	4b0f      	ldr	r3, [pc, #60]	; (8014b10 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014ad2:	460c      	mov	r4, r1
 8014ad4:	4620      	mov	r0, r4
 8014ad6:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014ada:	f7ff ffd0 	bl	8014a7e <_ZN8touchgfx4Rect10restrictToEss>
 8014ade:	4b0d      	ldr	r3, [pc, #52]	; (8014b14 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014ae0:	6818      	ldr	r0, [r3, #0]
 8014ae2:	b190      	cbz	r0, 8014b0a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014ae4:	6803      	ldr	r3, [r0, #0]
 8014ae6:	4621      	mov	r1, r4
 8014ae8:	689b      	ldr	r3, [r3, #8]
 8014aea:	4798      	blx	r3
 8014aec:	4b0a      	ldr	r3, [pc, #40]	; (8014b18 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014aee:	6818      	ldr	r0, [r3, #0]
 8014af0:	b118      	cbz	r0, 8014afa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014af2:	6803      	ldr	r3, [r0, #0]
 8014af4:	4621      	mov	r1, r4
 8014af6:	689b      	ldr	r3, [r3, #8]
 8014af8:	4798      	blx	r3
 8014afa:	4b08      	ldr	r3, [pc, #32]	; (8014b1c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014afc:	6818      	ldr	r0, [r3, #0]
 8014afe:	6803      	ldr	r3, [r0, #0]
 8014b00:	4621      	mov	r1, r4
 8014b02:	69db      	ldr	r3, [r3, #28]
 8014b04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014b08:	4718      	bx	r3
 8014b0a:	bd10      	pop	{r4, pc}
 8014b0c:	2000ef12 	.word	0x2000ef12
 8014b10:	2000ef10 	.word	0x2000ef10
 8014b14:	2000ef60 	.word	0x2000ef60
 8014b18:	2000ef5c 	.word	0x2000ef5c
 8014b1c:	2000ef1c 	.word	0x2000ef1c

08014b20 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b22:	4606      	mov	r6, r0
 8014b24:	4608      	mov	r0, r1
 8014b26:	460f      	mov	r7, r1
 8014b28:	f7fa fe93 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b2c:	b9e8      	cbnz	r0, 8014b6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b2e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014b32:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014b36:	42a5      	cmp	r5, r4
 8014b38:	db17      	blt.n	8014b6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b3a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014b3e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014b42:	429a      	cmp	r2, r3
 8014b44:	db11      	blt.n	8014b6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b46:	88b9      	ldrh	r1, [r7, #4]
 8014b48:	440d      	add	r5, r1
 8014b4a:	88b1      	ldrh	r1, [r6, #4]
 8014b4c:	440c      	add	r4, r1
 8014b4e:	b22d      	sxth	r5, r5
 8014b50:	b224      	sxth	r4, r4
 8014b52:	42a5      	cmp	r5, r4
 8014b54:	dc09      	bgt.n	8014b6a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014b56:	88f8      	ldrh	r0, [r7, #6]
 8014b58:	4410      	add	r0, r2
 8014b5a:	88f2      	ldrh	r2, [r6, #6]
 8014b5c:	4413      	add	r3, r2
 8014b5e:	b200      	sxth	r0, r0
 8014b60:	b21b      	sxth	r3, r3
 8014b62:	4298      	cmp	r0, r3
 8014b64:	bfcc      	ite	gt
 8014b66:	2000      	movgt	r0, #0
 8014b68:	2001      	movle	r0, #1
 8014b6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014b6c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014b6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014b6e:	4604      	mov	r4, r0
 8014b70:	4608      	mov	r0, r1
 8014b72:	460d      	mov	r5, r1
 8014b74:	f7fa fe6d 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b78:	b978      	cbnz	r0, 8014b9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014b7a:	4620      	mov	r0, r4
 8014b7c:	f7fa fe69 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b80:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014b84:	b150      	cbz	r0, 8014b9c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014b86:	8026      	strh	r6, [r4, #0]
 8014b88:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014b8c:	8063      	strh	r3, [r4, #2]
 8014b8e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014b92:	80a3      	strh	r3, [r4, #4]
 8014b94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014b98:	80e3      	strh	r3, [r4, #6]
 8014b9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014b9c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014ba0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014ba4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014ba8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014bac:	88ed      	ldrh	r5, [r5, #6]
 8014bae:	42b1      	cmp	r1, r6
 8014bb0:	460f      	mov	r7, r1
 8014bb2:	bfa8      	it	ge
 8014bb4:	4637      	movge	r7, r6
 8014bb6:	4293      	cmp	r3, r2
 8014bb8:	4618      	mov	r0, r3
 8014bba:	4466      	add	r6, ip
 8014bbc:	bfa8      	it	ge
 8014bbe:	4610      	movge	r0, r2
 8014bc0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014bc4:	8027      	strh	r7, [r4, #0]
 8014bc6:	442a      	add	r2, r5
 8014bc8:	88e5      	ldrh	r5, [r4, #6]
 8014bca:	8060      	strh	r0, [r4, #2]
 8014bcc:	4461      	add	r1, ip
 8014bce:	442b      	add	r3, r5
 8014bd0:	b236      	sxth	r6, r6
 8014bd2:	b209      	sxth	r1, r1
 8014bd4:	b212      	sxth	r2, r2
 8014bd6:	b21b      	sxth	r3, r3
 8014bd8:	428e      	cmp	r6, r1
 8014bda:	bfac      	ite	ge
 8014bdc:	ebc7 0106 	rsbge	r1, r7, r6
 8014be0:	ebc7 0101 	rsblt	r1, r7, r1
 8014be4:	429a      	cmp	r2, r3
 8014be6:	bfac      	ite	ge
 8014be8:	ebc0 0202 	rsbge	r2, r0, r2
 8014bec:	ebc0 0203 	rsblt	r2, r0, r3
 8014bf0:	80a1      	strh	r1, [r4, #4]
 8014bf2:	80e2      	strh	r2, [r4, #6]
 8014bf4:	e7d1      	b.n	8014b9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014bf8 <_ZN8touchgfx11Application11getInstanceEv>:
 8014bf8:	4b01      	ldr	r3, [pc, #4]	; (8014c00 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014bfa:	6818      	ldr	r0, [r3, #0]
 8014bfc:	4770      	bx	lr
 8014bfe:	bf00      	nop
 8014c00:	2000ef70 	.word	0x2000ef70

08014c04 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014c04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014c06:	4b10      	ldr	r3, [pc, #64]	; (8014c48 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014c08:	781b      	ldrb	r3, [r3, #0]
 8014c0a:	4605      	mov	r5, r0
 8014c0c:	b1d3      	cbz	r3, 8014c44 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014c0e:	4b0f      	ldr	r3, [pc, #60]	; (8014c4c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014c10:	4f0f      	ldr	r7, [pc, #60]	; (8014c50 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014c12:	881c      	ldrh	r4, [r3, #0]
 8014c14:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014c18:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014c1c:	42a3      	cmp	r3, r4
 8014c1e:	d90e      	bls.n	8014c3e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014c20:	683b      	ldr	r3, [r7, #0]
 8014c22:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014c26:	b10a      	cbz	r2, 8014c2c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014c28:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014c2a:	b900      	cbnz	r0, 8014c2e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014c2c:	6898      	ldr	r0, [r3, #8]
 8014c2e:	6803      	ldr	r3, [r0, #0]
 8014c30:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014c34:	69db      	ldr	r3, [r3, #28]
 8014c36:	3401      	adds	r4, #1
 8014c38:	4798      	blx	r3
 8014c3a:	b2a4      	uxth	r4, r4
 8014c3c:	e7ec      	b.n	8014c18 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014c3e:	2300      	movs	r3, #0
 8014c40:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014c44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014c46:	bf00      	nop
 8014c48:	2000ef1a 	.word	0x2000ef1a
 8014c4c:	20000060 	.word	0x20000060
 8014c50:	2000ef1c 	.word	0x2000ef1c

08014c54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014c54:	b510      	push	{r4, lr}
 8014c56:	2300      	movs	r3, #0
 8014c58:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014c5c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014c60:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014c64:	4604      	mov	r4, r0
 8014c66:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014c6a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014c6e:	429a      	cmp	r2, r3
 8014c70:	d90e      	bls.n	8014c90 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014c72:	18e2      	adds	r2, r4, r3
 8014c74:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014c78:	b122      	cbz	r2, 8014c84 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014c7a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014c7e:	6803      	ldr	r3, [r0, #0]
 8014c80:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014c82:	4798      	blx	r3
 8014c84:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014c88:	3301      	adds	r3, #1
 8014c8a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014c8e:	e7ea      	b.n	8014c66 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014c90:	bd10      	pop	{r4, pc}

08014c92 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014c92:	b530      	push	{r4, r5, lr}
 8014c94:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014c98:	2200      	movs	r2, #0
 8014c9a:	b293      	uxth	r3, r2
 8014c9c:	429d      	cmp	r5, r3
 8014c9e:	d90e      	bls.n	8014cbe <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014ca0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014ca4:	428b      	cmp	r3, r1
 8014ca6:	d10b      	bne.n	8014cc0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014ca8:	1884      	adds	r4, r0, r2
 8014caa:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014cae:	b13b      	cbz	r3, 8014cc0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014cb0:	3b01      	subs	r3, #1
 8014cb2:	b2db      	uxtb	r3, r3
 8014cb4:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014cb8:	b90b      	cbnz	r3, 8014cbe <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014cba:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014cbe:	bd30      	pop	{r4, r5, pc}
 8014cc0:	3201      	adds	r2, #1
 8014cc2:	e7ea      	b.n	8014c9a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014cc4:	2300      	movs	r3, #0
 8014cc6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014cca:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014cce:	30a4      	adds	r0, #164	; 0xa4
 8014cd0:	f802 3b01 	strb.w	r3, [r2], #1
 8014cd4:	4282      	cmp	r2, r0
 8014cd6:	d1fb      	bne.n	8014cd0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014cd8:	4770      	bx	lr
	...

08014cdc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014cdc:	b570      	push	{r4, r5, r6, lr}
 8014cde:	4c0b      	ldr	r4, [pc, #44]	; (8014d0c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014ce0:	4605      	mov	r5, r0
 8014ce2:	6820      	ldr	r0, [r4, #0]
 8014ce4:	460e      	mov	r6, r1
 8014ce6:	b110      	cbz	r0, 8014cee <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014ce8:	6803      	ldr	r3, [r0, #0]
 8014cea:	695b      	ldr	r3, [r3, #20]
 8014cec:	4798      	blx	r3
 8014cee:	1d28      	adds	r0, r5, #4
 8014cf0:	f7ff ffe8 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014cf4:	6026      	str	r6, [r4, #0]
 8014cf6:	6833      	ldr	r3, [r6, #0]
 8014cf8:	4630      	mov	r0, r6
 8014cfa:	68db      	ldr	r3, [r3, #12]
 8014cfc:	4798      	blx	r3
 8014cfe:	682b      	ldr	r3, [r5, #0]
 8014d00:	4628      	mov	r0, r5
 8014d02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014d04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014d08:	4718      	bx	r3
 8014d0a:	bf00      	nop
 8014d0c:	2000ef60 	.word	0x2000ef60

08014d10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014d10:	2300      	movs	r3, #0
 8014d12:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014d16:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014d1a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014d1c:	461a      	mov	r2, r3
 8014d1e:	461c      	mov	r4, r3
 8014d20:	461d      	mov	r5, r3
 8014d22:	459c      	cmp	ip, r3
 8014d24:	dd1a      	ble.n	8014d5c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014d26:	18c6      	adds	r6, r0, r3
 8014d28:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014d2c:	b16e      	cbz	r6, 8014d4a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014d2e:	429a      	cmp	r2, r3
 8014d30:	d008      	beq.n	8014d44 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014d32:	fa1f fe82 	uxth.w	lr, r2
 8014d36:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014d3a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014d3e:	1887      	adds	r7, r0, r2
 8014d40:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014d44:	3201      	adds	r2, #1
 8014d46:	3301      	adds	r3, #1
 8014d48:	e7eb      	b.n	8014d22 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014d4a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014d4e:	4299      	cmp	r1, r3
 8014d50:	bfa8      	it	ge
 8014d52:	3501      	addge	r5, #1
 8014d54:	429e      	cmp	r6, r3
 8014d56:	bfc8      	it	gt
 8014d58:	3401      	addgt	r4, #1
 8014d5a:	e7f4      	b.n	8014d46 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014d5c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8014d60:	1b49      	subs	r1, r1, r5
 8014d62:	1b1b      	subs	r3, r3, r4
 8014d64:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8014d68:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014d6c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014d70:	4293      	cmp	r3, r2
 8014d72:	dd03      	ble.n	8014d7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014d74:	3b01      	subs	r3, #1
 8014d76:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014d7a:	e7f7      	b.n	8014d6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014d7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014d80 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014d80:	b570      	push	{r4, r5, r6, lr}
 8014d82:	4d16      	ldr	r5, [pc, #88]	; (8014ddc <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014d84:	4604      	mov	r4, r0
 8014d86:	6828      	ldr	r0, [r5, #0]
 8014d88:	b140      	cbz	r0, 8014d9c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014d8a:	7a03      	ldrb	r3, [r0, #8]
 8014d8c:	b933      	cbnz	r3, 8014d9c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014d8e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014d92:	6803      	ldr	r3, [r0, #0]
 8014d94:	689b      	ldr	r3, [r3, #8]
 8014d96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014d9a:	4718      	bx	r3
 8014d9c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8014da0:	4e0f      	ldr	r6, [pc, #60]	; (8014de0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014da2:	b973      	cbnz	r3, 8014dc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014da4:	b168      	cbz	r0, 8014dc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014da6:	7a03      	ldrb	r3, [r0, #8]
 8014da8:	b15b      	cbz	r3, 8014dc2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014daa:	6830      	ldr	r0, [r6, #0]
 8014dac:	b110      	cbz	r0, 8014db4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014dae:	6803      	ldr	r3, [r0, #0]
 8014db0:	691b      	ldr	r3, [r3, #16]
 8014db2:	4798      	blx	r3
 8014db4:	6828      	ldr	r0, [r5, #0]
 8014db6:	6803      	ldr	r3, [r0, #0]
 8014db8:	68db      	ldr	r3, [r3, #12]
 8014dba:	4798      	blx	r3
 8014dbc:	2301      	movs	r3, #1
 8014dbe:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8014dc2:	3404      	adds	r4, #4
 8014dc4:	4620      	mov	r0, r4
 8014dc6:	f7ff ff45 	bl	8014c54 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014dca:	4620      	mov	r0, r4
 8014dcc:	f7ff ffa0 	bl	8014d10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014dd0:	6830      	ldr	r0, [r6, #0]
 8014dd2:	b110      	cbz	r0, 8014dda <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014dd4:	6803      	ldr	r3, [r0, #0]
 8014dd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8014dd8:	e7dd      	b.n	8014d96 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014dda:	bd70      	pop	{r4, r5, r6, pc}
 8014ddc:	2000ef64 	.word	0x2000ef64
 8014de0:	2000ef60 	.word	0x2000ef60

08014de4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014de6:	2300      	movs	r3, #0
 8014de8:	4604      	mov	r4, r0
 8014dea:	460d      	mov	r5, r1
 8014dec:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8014df0:	4618      	mov	r0, r3
 8014df2:	b29a      	uxth	r2, r3
 8014df4:	4291      	cmp	r1, r2
 8014df6:	d911      	bls.n	8014e1c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8014df8:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014dfc:	18e6      	adds	r6, r4, r3
 8014dfe:	42af      	cmp	r7, r5
 8014e00:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8014e04:	d105      	bne.n	8014e12 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8014e06:	2aff      	cmp	r2, #255	; 0xff
 8014e08:	d002      	beq.n	8014e10 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014e0a:	3201      	adds	r2, #1
 8014e0c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8014e10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e12:	2a00      	cmp	r2, #0
 8014e14:	bf08      	it	eq
 8014e16:	2001      	moveq	r0, #1
 8014e18:	3301      	adds	r3, #1
 8014e1a:	e7ea      	b.n	8014df2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8014e1c:	b120      	cbz	r0, 8014e28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014e1e:	2920      	cmp	r1, #32
 8014e20:	d102      	bne.n	8014e28 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8014e22:	4620      	mov	r0, r4
 8014e24:	f7ff ff74 	bl	8014d10 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014e28:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8014e2c:	2b1f      	cmp	r3, #31
 8014e2e:	d8ef      	bhi.n	8014e10 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8014e30:	18e2      	adds	r2, r4, r3
 8014e32:	2101      	movs	r1, #1
 8014e34:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8014e38:	185a      	adds	r2, r3, r1
 8014e3a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8014e3e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8014e42:	e7e5      	b.n	8014e10 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08014e44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8014e44:	4603      	mov	r3, r0
 8014e46:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8014e4a:	2200      	movs	r2, #0
 8014e4c:	801a      	strh	r2, [r3, #0]
 8014e4e:	805a      	strh	r2, [r3, #2]
 8014e50:	809a      	strh	r2, [r3, #4]
 8014e52:	80da      	strh	r2, [r3, #6]
 8014e54:	3308      	adds	r3, #8
 8014e56:	428b      	cmp	r3, r1
 8014e58:	d1f8      	bne.n	8014e4c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8014e5a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8014e5e:	4770      	bx	lr

08014e60 <_ZN8touchgfx11ApplicationC1Ev>:
 8014e60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e62:	4606      	mov	r6, r0
 8014e64:	4b1c      	ldr	r3, [pc, #112]	; (8014ed8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014e66:	f846 3b04 	str.w	r3, [r6], #4
 8014e6a:	4604      	mov	r4, r0
 8014e6c:	2500      	movs	r5, #0
 8014e6e:	22a8      	movs	r2, #168	; 0xa8
 8014e70:	2100      	movs	r1, #0
 8014e72:	4630      	mov	r0, r6
 8014e74:	f011 fb0e 	bl	8026494 <memset>
 8014e78:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8014e7c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8014e80:	f7ff ffe0 	bl	8014e44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014e84:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8014e88:	f7ff ffdc 	bl	8014e44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014e8c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8014e90:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8014e94:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8014e98:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8014e9c:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8014ea0:	490e      	ldr	r1, [pc, #56]	; (8014edc <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014ea2:	480f      	ldr	r0, [pc, #60]	; (8014ee0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014ea4:	4f0f      	ldr	r7, [pc, #60]	; (8014ee4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014ea6:	f010 fde9 	bl	8025a7c <CRC_Lock>
 8014eaa:	4b0f      	ldr	r3, [pc, #60]	; (8014ee8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014eac:	b158      	cbz	r0, 8014ec6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014eae:	801d      	strh	r5, [r3, #0]
 8014eb0:	4a0e      	ldr	r2, [pc, #56]	; (8014eec <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014eb2:	2300      	movs	r3, #0
 8014eb4:	6013      	str	r3, [r2, #0]
 8014eb6:	4a0e      	ldr	r2, [pc, #56]	; (8014ef0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014eb8:	603b      	str	r3, [r7, #0]
 8014eba:	4630      	mov	r0, r6
 8014ebc:	6013      	str	r3, [r2, #0]
 8014ebe:	f7ff ff01 	bl	8014cc4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014ec2:	4620      	mov	r0, r4
 8014ec4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ec6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8014eca:	2002      	movs	r0, #2
 8014ecc:	801a      	strh	r2, [r3, #0]
 8014ece:	6038      	str	r0, [r7, #0]
 8014ed0:	f001 fb4a 	bl	8016568 <_ZN8touchgfx6Screen4drawEv>
 8014ed4:	e7ec      	b.n	8014eb0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014ed6:	bf00      	nop
 8014ed8:	0802a31c 	.word	0x0802a31c
 8014edc:	b5e8b5cd 	.word	0xb5e8b5cd
 8014ee0:	f407a5c2 	.word	0xf407a5c2
 8014ee4:	2000ef60 	.word	0x2000ef60
 8014ee8:	20000060 	.word	0x20000060
 8014eec:	2000ef70 	.word	0x2000ef70
 8014ef0:	2000ef64 	.word	0x2000ef64

08014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014ef4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8014ef8:	3b01      	subs	r3, #1
 8014efa:	b29b      	uxth	r3, r3
 8014efc:	428b      	cmp	r3, r1
 8014efe:	b510      	push	{r4, lr}
 8014f00:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8014f04:	d908      	bls.n	8014f18 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014f06:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014f0a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014f0e:	681a      	ldr	r2, [r3, #0]
 8014f10:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014f14:	685a      	ldr	r2, [r3, #4]
 8014f16:	6062      	str	r2, [r4, #4]
 8014f18:	bd10      	pop	{r4, pc}
	...

08014f1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f20:	4b8f      	ldr	r3, [pc, #572]	; (8015160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014f22:	b08f      	sub	sp, #60	; 0x3c
 8014f24:	ac0a      	add	r4, sp, #40	; 0x28
 8014f26:	e884 0006 	stmia.w	r4, {r1, r2}
 8014f2a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014f2e:	4b8d      	ldr	r3, [pc, #564]	; (8015164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014f30:	4683      	mov	fp, r0
 8014f32:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014f36:	4620      	mov	r0, r4
 8014f38:	f7ff fda1 	bl	8014a7e <_ZN8touchgfx4Rect10restrictToEss>
 8014f3c:	4620      	mov	r0, r4
 8014f3e:	f7fa fc88 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f42:	2800      	cmp	r0, #0
 8014f44:	d16a      	bne.n	801501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014f46:	9403      	str	r4, [sp, #12]
 8014f48:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8014f4c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8014f50:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014f54:	35a4      	adds	r5, #164	; 0xa4
 8014f56:	9301      	str	r3, [sp, #4]
 8014f58:	b15c      	cbz	r4, 8014f72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014f5a:	4629      	mov	r1, r5
 8014f5c:	9803      	ldr	r0, [sp, #12]
 8014f5e:	f7ff fddf 	bl	8014b20 <_ZNK8touchgfx4Rect8includesERKS0_>
 8014f62:	3c01      	subs	r4, #1
 8014f64:	b118      	cbz	r0, 8014f6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014f66:	b2a1      	uxth	r1, r4
 8014f68:	9801      	ldr	r0, [sp, #4]
 8014f6a:	f7ff ffc3 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014f6e:	3d08      	subs	r5, #8
 8014f70:	e7f2      	b.n	8014f58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014f72:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8014f76:	f8cd a010 	str.w	sl, [sp, #16]
 8014f7a:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014f7e:	9302      	str	r3, [sp, #8]
 8014f80:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014f84:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8014f88:	9306      	str	r3, [sp, #24]
 8014f8a:	445c      	add	r4, fp
 8014f8c:	2500      	movs	r5, #0
 8014f8e:	4626      	mov	r6, r4
 8014f90:	f8cd a014 	str.w	sl, [sp, #20]
 8014f94:	462f      	mov	r7, r5
 8014f96:	9b05      	ldr	r3, [sp, #20]
 8014f98:	2b00      	cmp	r3, #0
 8014f9a:	d073      	beq.n	8015084 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014f9c:	9903      	ldr	r1, [sp, #12]
 8014f9e:	4630      	mov	r0, r6
 8014fa0:	f7ff fd4b 	bl	8014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014fa4:	b350      	cbz	r0, 8014ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014fa6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8014faa:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014fae:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8014fb2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014fb6:	45e6      	cmp	lr, ip
 8014fb8:	db33      	blt.n	8015022 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014fba:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8014fbe:	88b3      	ldrh	r3, [r6, #4]
 8014fc0:	4472      	add	r2, lr
 8014fc2:	4463      	add	r3, ip
 8014fc4:	b212      	sxth	r2, r2
 8014fc6:	b21b      	sxth	r3, r3
 8014fc8:	429a      	cmp	r2, r3
 8014fca:	dc2a      	bgt.n	8015022 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014fcc:	88f3      	ldrh	r3, [r6, #6]
 8014fce:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014fd2:	fa1f f289 	uxth.w	r2, r9
 8014fd6:	4413      	add	r3, r2
 8014fd8:	b29b      	uxth	r3, r3
 8014fda:	45c8      	cmp	r8, r9
 8014fdc:	fa1f fc88 	uxth.w	ip, r8
 8014fe0:	fa0f fe83 	sxth.w	lr, r3
 8014fe4:	db0f      	blt.n	8015006 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014fe6:	eba3 030c 	sub.w	r3, r3, ip
 8014fea:	1ac9      	subs	r1, r1, r3
 8014fec:	b209      	sxth	r1, r1
 8014fee:	2900      	cmp	r1, #0
 8014ff0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8014ff4:	dd12      	ble.n	801501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014ff6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8014ffa:	4605      	mov	r5, r0
 8014ffc:	9b05      	ldr	r3, [sp, #20]
 8014ffe:	3b01      	subs	r3, #1
 8015000:	9305      	str	r3, [sp, #20]
 8015002:	3e08      	subs	r6, #8
 8015004:	e7c7      	b.n	8014f96 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8015006:	4461      	add	r1, ip
 8015008:	b209      	sxth	r1, r1
 801500a:	4571      	cmp	r1, lr
 801500c:	dc38      	bgt.n	8015080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801500e:	eba2 020c 	sub.w	r2, r2, ip
 8015012:	b212      	sxth	r2, r2
 8015014:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8015018:	2a00      	cmp	r2, #0
 801501a:	dcee      	bgt.n	8014ffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801501c:	b00f      	add	sp, #60	; 0x3c
 801501e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015022:	45c8      	cmp	r8, r9
 8015024:	db2c      	blt.n	8015080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015026:	88f3      	ldrh	r3, [r6, #6]
 8015028:	4499      	add	r9, r3
 801502a:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801502e:	4498      	add	r8, r3
 8015030:	fa0f f989 	sxth.w	r9, r9
 8015034:	fa0f f888 	sxth.w	r8, r8
 8015038:	45c1      	cmp	r9, r8
 801503a:	db21      	blt.n	8015080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801503c:	88b3      	ldrh	r3, [r6, #4]
 801503e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8015042:	fa1f f28c 	uxth.w	r2, ip
 8015046:	4413      	add	r3, r2
 8015048:	b29b      	uxth	r3, r3
 801504a:	45e6      	cmp	lr, ip
 801504c:	fa1f f88e 	uxth.w	r8, lr
 8015050:	fa0f f983 	sxth.w	r9, r3
 8015054:	db0a      	blt.n	801506c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8015056:	eba3 0308 	sub.w	r3, r3, r8
 801505a:	1ac9      	subs	r1, r1, r3
 801505c:	b209      	sxth	r1, r1
 801505e:	2900      	cmp	r1, #0
 8015060:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015064:	ddda      	ble.n	801501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015066:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801506a:	e7c6      	b.n	8014ffa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801506c:	4441      	add	r1, r8
 801506e:	b209      	sxth	r1, r1
 8015070:	4549      	cmp	r1, r9
 8015072:	dc05      	bgt.n	8015080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015074:	eba2 0208 	sub.w	r2, r2, r8
 8015078:	b212      	sxth	r2, r2
 801507a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801507e:	e7cb      	b.n	8015018 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015080:	4607      	mov	r7, r0
 8015082:	e7bb      	b.n	8014ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015084:	2d00      	cmp	r5, #0
 8015086:	d181      	bne.n	8014f8c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015088:	2f00      	cmp	r7, #0
 801508a:	f000 81dd 	beq.w	8015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801508e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015092:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8015096:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 801509a:	b2b3      	uxth	r3, r6
 801509c:	9305      	str	r3, [sp, #20]
 801509e:	9a05      	ldr	r2, [sp, #20]
 80150a0:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 80150a4:	4413      	add	r3, r2
 80150a6:	b2ba      	uxth	r2, r7
 80150a8:	4492      	add	sl, r2
 80150aa:	b29b      	uxth	r3, r3
 80150ac:	fa1f fa8a 	uxth.w	sl, sl
 80150b0:	fa0f f883 	sxth.w	r8, r3
 80150b4:	fa0f f98a 	sxth.w	r9, sl
 80150b8:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80150bc:	9b04      	ldr	r3, [sp, #16]
 80150be:	2b00      	cmp	r3, #0
 80150c0:	d052      	beq.n	8015168 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 80150c2:	9903      	ldr	r1, [sp, #12]
 80150c4:	4620      	mov	r0, r4
 80150c6:	f7ff fcb8 	bl	8014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80150ca:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 80150ce:	b1c0      	cbz	r0, 8015102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80150d0:	f9b4 e000 	ldrsh.w	lr, [r4]
 80150d4:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80150d8:	4576      	cmp	r6, lr
 80150da:	dc22      	bgt.n	8015122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80150dc:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80150e0:	44f4      	add	ip, lr
 80150e2:	fa0f fc8c 	sxth.w	ip, ip
 80150e6:	45e0      	cmp	r8, ip
 80150e8:	db1b      	blt.n	8015122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 80150ea:	428f      	cmp	r7, r1
 80150ec:	fa1f fc81 	uxth.w	ip, r1
 80150f0:	88e1      	ldrh	r1, [r4, #6]
 80150f2:	dc0d      	bgt.n	8015110 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80150f4:	ebaa 0c0c 	sub.w	ip, sl, ip
 80150f8:	eba1 010c 	sub.w	r1, r1, ip
 80150fc:	f8a4 9002 	strh.w	r9, [r4, #2]
 8015100:	80e1      	strh	r1, [r4, #6]
 8015102:	4628      	mov	r0, r5
 8015104:	9904      	ldr	r1, [sp, #16]
 8015106:	3901      	subs	r1, #1
 8015108:	9104      	str	r1, [sp, #16]
 801510a:	3c08      	subs	r4, #8
 801510c:	4605      	mov	r5, r0
 801510e:	e7d3      	b.n	80150b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8015110:	4461      	add	r1, ip
 8015112:	b209      	sxth	r1, r1
 8015114:	4549      	cmp	r1, r9
 8015116:	dcf5      	bgt.n	8015104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015118:	eba2 0c0c 	sub.w	ip, r2, ip
 801511c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8015120:	e7ef      	b.n	8015102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015122:	428f      	cmp	r7, r1
 8015124:	dcee      	bgt.n	8015104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015126:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801512a:	4461      	add	r1, ip
 801512c:	b209      	sxth	r1, r1
 801512e:	4589      	cmp	r9, r1
 8015130:	dbe8      	blt.n	8015104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015132:	4576      	cmp	r6, lr
 8015134:	fa1f fc8e 	uxth.w	ip, lr
 8015138:	88a1      	ldrh	r1, [r4, #4]
 801513a:	dc07      	bgt.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 801513c:	eba3 0c0c 	sub.w	ip, r3, ip
 8015140:	eba1 010c 	sub.w	r1, r1, ip
 8015144:	f8a4 8000 	strh.w	r8, [r4]
 8015148:	80a1      	strh	r1, [r4, #4]
 801514a:	e7da      	b.n	8015102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 801514c:	4461      	add	r1, ip
 801514e:	b209      	sxth	r1, r1
 8015150:	4588      	cmp	r8, r1
 8015152:	dbd7      	blt.n	8015104 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015154:	9905      	ldr	r1, [sp, #20]
 8015156:	eba1 0c0c 	sub.w	ip, r1, ip
 801515a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801515e:	e7d0      	b.n	8015102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015160:	2000ef12 	.word	0x2000ef12
 8015164:	2000ef10 	.word	0x2000ef10
 8015168:	2d00      	cmp	r5, #0
 801516a:	f000 816d 	beq.w	8015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801516e:	9b06      	ldr	r3, [sp, #24]
 8015170:	445b      	add	r3, fp
 8015172:	461c      	mov	r4, r3
 8015174:	9b02      	ldr	r3, [sp, #8]
 8015176:	3301      	adds	r3, #1
 8015178:	f000 8166 	beq.w	8015448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801517c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015180:	4629      	mov	r1, r5
 8015182:	9803      	ldr	r0, [sp, #12]
 8015184:	f7ff fccc 	bl	8014b20 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015188:	b120      	cbz	r0, 8015194 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801518a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801518e:	9801      	ldr	r0, [sp, #4]
 8015190:	f7ff feb0 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015194:	9903      	ldr	r1, [sp, #12]
 8015196:	4628      	mov	r0, r5
 8015198:	f7ff fc4f 	bl	8014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 801519c:	2800      	cmp	r0, #0
 801519e:	f000 809c 	beq.w	80152da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80151a2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 80151a6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80151aa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80151ae:	9309      	str	r3, [sp, #36]	; 0x24
 80151b0:	fa1f f189 	uxth.w	r1, r9
 80151b4:	eb01 0c03 	add.w	ip, r1, r3
 80151b8:	fa1f fa8c 	uxth.w	sl, ip
 80151bc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80151c0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 80151c4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 80151c8:	b283      	uxth	r3, r0
 80151ca:	eb03 050c 	add.w	r5, r3, ip
 80151ce:	b2ad      	uxth	r5, r5
 80151d0:	9505      	str	r5, [sp, #20]
 80151d2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 80151d6:	9504      	str	r5, [sp, #16]
 80151d8:	4548      	cmp	r0, r9
 80151da:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 80151de:	f340 8099 	ble.w	8015314 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 80151e2:	1a5b      	subs	r3, r3, r1
 80151e4:	b29b      	uxth	r3, r3
 80151e6:	4596      	cmp	lr, r2
 80151e8:	fa0f f08a 	sxth.w	r0, sl
 80151ec:	b21e      	sxth	r6, r3
 80151ee:	dd2e      	ble.n	801524e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80151f0:	9f02      	ldr	r7, [sp, #8]
 80151f2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80151f6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80151fa:	9f04      	ldr	r7, [sp, #16]
 80151fc:	1a3f      	subs	r7, r7, r0
 80151fe:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8015202:	fa1f fe8e 	uxth.w	lr, lr
 8015206:	b292      	uxth	r2, r2
 8015208:	ebae 0102 	sub.w	r1, lr, r2
 801520c:	44a6      	add	lr, r4
 801520e:	4402      	add	r2, r0
 8015210:	b289      	uxth	r1, r1
 8015212:	fa0f fe8e 	sxth.w	lr, lr
 8015216:	b212      	sxth	r2, r2
 8015218:	b20d      	sxth	r5, r1
 801521a:	ebae 0202 	sub.w	r2, lr, r2
 801521e:	436f      	muls	r7, r5
 8015220:	4372      	muls	r2, r6
 8015222:	4297      	cmp	r7, r2
 8015224:	db09      	blt.n	801523a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8015226:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 801522a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 801522e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8015232:	449c      	add	ip, r3
 8015234:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8015238:	e686      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801523a:	4421      	add	r1, r4
 801523c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8015240:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8015244:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015248:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801524c:	e67c      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801524e:	9f04      	ldr	r7, [sp, #16]
 8015250:	42b8      	cmp	r0, r7
 8015252:	da27      	bge.n	80152a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015254:	9902      	ldr	r1, [sp, #8]
 8015256:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801525a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801525e:	eb05 010e 	add.w	r1, r5, lr
 8015262:	fa1f f881 	uxth.w	r8, r1
 8015266:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801526a:	4411      	add	r1, r2
 801526c:	eba1 0108 	sub.w	r1, r1, r8
 8015270:	b289      	uxth	r1, r1
 8015272:	fa0f f988 	sxth.w	r9, r8
 8015276:	eba2 020e 	sub.w	r2, r2, lr
 801527a:	fa0f f881 	sxth.w	r8, r1
 801527e:	1a3f      	subs	r7, r7, r0
 8015280:	4372      	muls	r2, r6
 8015282:	fb08 f707 	mul.w	r7, r8, r7
 8015286:	42ba      	cmp	r2, r7
 8015288:	dc06      	bgt.n	8015298 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801528a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801528e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015292:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015296:	e7ca      	b.n	801522e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015298:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801529c:	4429      	add	r1, r5
 801529e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80152a2:	e651      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80152a4:	9805      	ldr	r0, [sp, #20]
 80152a6:	ebaa 0000 	sub.w	r0, sl, r0
 80152aa:	b280      	uxth	r0, r0
 80152ac:	2d06      	cmp	r5, #6
 80152ae:	fa0f fe80 	sxth.w	lr, r0
 80152b2:	d817      	bhi.n	80152e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 80152b4:	9b04      	ldr	r3, [sp, #16]
 80152b6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80152ba:	1c6b      	adds	r3, r5, #1
 80152bc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 80152c0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 80152c4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80152c8:	9b01      	ldr	r3, [sp, #4]
 80152ca:	9801      	ldr	r0, [sp, #4]
 80152cc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80152d0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 80152d4:	805a      	strh	r2, [r3, #2]
 80152d6:	809e      	strh	r6, [r3, #4]
 80152d8:	80d9      	strh	r1, [r3, #6]
 80152da:	9b02      	ldr	r3, [sp, #8]
 80152dc:	3b01      	subs	r3, #1
 80152de:	9302      	str	r3, [sp, #8]
 80152e0:	3c08      	subs	r4, #8
 80152e2:	e747      	b.n	8015174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 80152e4:	9a02      	ldr	r2, [sp, #8]
 80152e6:	45b6      	cmp	lr, r6
 80152e8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80152ec:	db0d      	blt.n	801530a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 80152ee:	449c      	add	ip, r3
 80152f0:	fa1f fc8c 	uxth.w	ip, ip
 80152f4:	445a      	add	r2, fp
 80152f6:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80152fa:	448c      	add	ip, r1
 80152fc:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8015300:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8015304:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8015308:	e61e      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801530a:	445a      	add	r2, fp
 801530c:	4484      	add	ip, r0
 801530e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8015312:	e78f      	b.n	8015234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015314:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8015318:	fa1f f18e 	uxth.w	r1, lr
 801531c:	eb01 0806 	add.w	r8, r1, r6
 8015320:	b293      	uxth	r3, r2
 8015322:	fa1f f888 	uxth.w	r8, r8
 8015326:	9306      	str	r3, [sp, #24]
 8015328:	fa0f f388 	sxth.w	r3, r8
 801532c:	9307      	str	r3, [sp, #28]
 801532e:	9f06      	ldr	r7, [sp, #24]
 8015330:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015334:	443b      	add	r3, r7
 8015336:	b29b      	uxth	r3, r3
 8015338:	4596      	cmp	lr, r2
 801533a:	9308      	str	r3, [sp, #32]
 801533c:	da24      	bge.n	8015388 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801533e:	9905      	ldr	r1, [sp, #20]
 8015340:	eba3 0308 	sub.w	r3, r3, r8
 8015344:	ebaa 0401 	sub.w	r4, sl, r1
 8015348:	b2a4      	uxth	r4, r4
 801534a:	b29b      	uxth	r3, r3
 801534c:	b225      	sxth	r5, r4
 801534e:	b219      	sxth	r1, r3
 8015350:	eba2 020e 	sub.w	r2, r2, lr
 8015354:	eba9 0000 	sub.w	r0, r9, r0
 8015358:	436a      	muls	r2, r5
 801535a:	4348      	muls	r0, r1
 801535c:	4282      	cmp	r2, r0
 801535e:	9a02      	ldr	r2, [sp, #8]
 8015360:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015364:	445a      	add	r2, fp
 8015366:	dc06      	bgt.n	8015376 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015368:	9b07      	ldr	r3, [sp, #28]
 801536a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801536e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015372:	44a4      	add	ip, r4
 8015374:	e75e      	b.n	8015234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015376:	9904      	ldr	r1, [sp, #16]
 8015378:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801537c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015380:	4433      	add	r3, r6
 8015382:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015386:	e5df      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015388:	9f06      	ldr	r7, [sp, #24]
 801538a:	9b04      	ldr	r3, [sp, #16]
 801538c:	1bc9      	subs	r1, r1, r7
 801538e:	fa0f f78a 	sxth.w	r7, sl
 8015392:	b289      	uxth	r1, r1
 8015394:	429f      	cmp	r7, r3
 8015396:	fa0f fe81 	sxth.w	lr, r1
 801539a:	dd23      	ble.n	80153e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 801539c:	9a05      	ldr	r2, [sp, #20]
 801539e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80153a2:	9d07      	ldr	r5, [sp, #28]
 80153a4:	ebaa 0202 	sub.w	r2, sl, r2
 80153a8:	b292      	uxth	r2, r2
 80153aa:	eba5 0a03 	sub.w	sl, r5, r3
 80153ae:	b214      	sxth	r4, r2
 80153b0:	eba9 0000 	sub.w	r0, r9, r0
 80153b4:	9b02      	ldr	r3, [sp, #8]
 80153b6:	fb0e f000 	mul.w	r0, lr, r0
 80153ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80153be:	00db      	lsls	r3, r3, #3
 80153c0:	4550      	cmp	r0, sl
 80153c2:	445b      	add	r3, fp
 80153c4:	db03      	blt.n	80153ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80153c6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80153ca:	4494      	add	ip, r2
 80153cc:	e732      	b.n	8015234 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80153ce:	9a04      	ldr	r2, [sp, #16]
 80153d0:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80153d4:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80153d8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80153dc:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80153e0:	4431      	add	r1, r6
 80153e2:	e75c      	b.n	801529e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80153e4:	9b08      	ldr	r3, [sp, #32]
 80153e6:	eba3 0308 	sub.w	r3, r3, r8
 80153ea:	b29b      	uxth	r3, r3
 80153ec:	2d06      	cmp	r5, #6
 80153ee:	b218      	sxth	r0, r3
 80153f0:	d813      	bhi.n	801541a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80153f2:	9b07      	ldr	r3, [sp, #28]
 80153f4:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80153f8:	1c6b      	adds	r3, r5, #1
 80153fa:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80153fe:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015402:	9b01      	ldr	r3, [sp, #4]
 8015404:	9901      	ldr	r1, [sp, #4]
 8015406:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801540a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801540e:	805a      	strh	r2, [r3, #2]
 8015410:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8015412:	809a      	strh	r2, [r3, #4]
 8015414:	f8a3 e006 	strh.w	lr, [r3, #6]
 8015418:	e75f      	b.n	80152da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801541a:	9c02      	ldr	r4, [sp, #8]
 801541c:	4570      	cmp	r0, lr
 801541e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8015422:	db0d      	blt.n	8015440 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8015424:	4431      	add	r1, r6
 8015426:	9b06      	ldr	r3, [sp, #24]
 8015428:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801542c:	b289      	uxth	r1, r1
 801542e:	445c      	add	r4, fp
 8015430:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015434:	4419      	add	r1, r3
 8015436:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 801543a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801543e:	e583      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015440:	445c      	add	r4, fp
 8015442:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8015446:	e79b      	b.n	8015380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8015448:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 801544c:	1e65      	subs	r5, r4, #1
 801544e:	b2ad      	uxth	r5, r5
 8015450:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015454:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015458:	42b5      	cmp	r5, r6
 801545a:	d044      	beq.n	80154e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801545c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015460:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015464:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015468:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 801546c:	4282      	cmp	r2, r0
 801546e:	d11f      	bne.n	80154b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015470:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015474:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015478:	459c      	cmp	ip, r3
 801547a:	d119      	bne.n	80154b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801547c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015480:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015484:	19d8      	adds	r0, r3, r7
 8015486:	b200      	sxth	r0, r0
 8015488:	4288      	cmp	r0, r1
 801548a:	d109      	bne.n	80154a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801548c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015490:	4413      	add	r3, r2
 8015492:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015496:	4629      	mov	r1, r5
 8015498:	9801      	ldr	r0, [sp, #4]
 801549a:	f7ff fd2b 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801549e:	e003      	b.n	80154a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154a0:	4411      	add	r1, r2
 80154a2:	b209      	sxth	r1, r1
 80154a4:	42b9      	cmp	r1, r7
 80154a6:	d0f3      	beq.n	8015490 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 80154a8:	3d01      	subs	r5, #1
 80154aa:	b2ad      	uxth	r5, r5
 80154ac:	3c08      	subs	r4, #8
 80154ae:	e7d3      	b.n	8015458 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 80154b0:	42b9      	cmp	r1, r7
 80154b2:	d1f9      	bne.n	80154a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154b4:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 80154b8:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80154bc:	4299      	cmp	r1, r3
 80154be:	d1f3      	bne.n	80154a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154c0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80154c4:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80154c8:	181f      	adds	r7, r3, r0
 80154ca:	b23f      	sxth	r7, r7
 80154cc:	42ba      	cmp	r2, r7
 80154ce:	d105      	bne.n	80154dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 80154d0:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 80154d4:	440b      	add	r3, r1
 80154d6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80154da:	e7dc      	b.n	8015496 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 80154dc:	440a      	add	r2, r1
 80154de:	b212      	sxth	r2, r2
 80154e0:	4290      	cmp	r0, r2
 80154e2:	d1e1      	bne.n	80154a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 80154e4:	e7f6      	b.n	80154d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 80154e6:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 80154ea:	2e07      	cmp	r6, #7
 80154ec:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80154f0:	d812      	bhi.n	8015518 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80154f2:	1c75      	adds	r5, r6, #1
 80154f4:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80154f8:	9d01      	ldr	r5, [sp, #4]
 80154fa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80154fe:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8015502:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8015506:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801550a:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801550e:	442c      	add	r4, r5
 8015510:	8061      	strh	r1, [r4, #2]
 8015512:	80a2      	strh	r2, [r4, #4]
 8015514:	80e3      	strh	r3, [r4, #6]
 8015516:	e581      	b.n	801501c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015518:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801551c:	3e01      	subs	r6, #1
 801551e:	445c      	add	r4, fp
 8015520:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8015524:	f04f 37ff 	mov.w	r7, #4294967295
 8015528:	2500      	movs	r5, #0
 801552a:	9305      	str	r3, [sp, #20]
 801552c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8015530:	9302      	str	r3, [sp, #8]
 8015532:	1e72      	subs	r2, r6, #1
 8015534:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015538:	9304      	str	r3, [sp, #16]
 801553a:	4691      	mov	r9, r2
 801553c:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 8015540:	f1b9 3fff 	cmp.w	r9, #4294967295
 8015544:	bf14      	ite	ne
 8015546:	9905      	ldrne	r1, [sp, #20]
 8015548:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801554c:	6818      	ldr	r0, [r3, #0]
 801554e:	9207      	str	r2, [sp, #28]
 8015550:	bf18      	it	ne
 8015552:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015556:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801555a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801555e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015562:	9306      	str	r3, [sp, #24]
 8015564:	fb18 f801 	smulbb	r8, r8, r1
 8015568:	6859      	ldr	r1, [r3, #4]
 801556a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801556e:	4671      	mov	r1, lr
 8015570:	a80c      	add	r0, sp, #48	; 0x30
 8015572:	f7ff fafb 	bl	8014b6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015576:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801557a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801557e:	9b04      	ldr	r3, [sp, #16]
 8015580:	9a02      	ldr	r2, [sp, #8]
 8015582:	fb10 f001 	smulbb	r0, r0, r1
 8015586:	fb02 8803 	mla	r8, r2, r3, r8
 801558a:	eba0 0108 	sub.w	r1, r0, r8
 801558e:	f04f 0c08 	mov.w	ip, #8
 8015592:	fb90 f0fc 	sdiv	r0, r0, ip
 8015596:	4288      	cmp	r0, r1
 8015598:	dc20      	bgt.n	80155dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801559a:	4551      	cmp	r1, sl
 801559c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80155a0:	da03      	bge.n	80155aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 80155a2:	b1d9      	cbz	r1, 80155dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 80155a4:	468a      	mov	sl, r1
 80155a6:	464f      	mov	r7, r9
 80155a8:	4635      	mov	r5, r6
 80155aa:	f109 39ff 	add.w	r9, r9, #4294967295
 80155ae:	f119 0f02 	cmn.w	r9, #2
 80155b2:	d1c5      	bne.n	8015540 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 80155b4:	4616      	mov	r6, r2
 80155b6:	3201      	adds	r2, #1
 80155b8:	f1a4 0408 	sub.w	r4, r4, #8
 80155bc:	d1b6      	bne.n	801552c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 80155be:	9b01      	ldr	r3, [sp, #4]
 80155c0:	b2ac      	uxth	r4, r5
 80155c2:	00ed      	lsls	r5, r5, #3
 80155c4:	1958      	adds	r0, r3, r5
 80155c6:	1c7b      	adds	r3, r7, #1
 80155c8:	d10b      	bne.n	80155e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 80155ca:	4601      	mov	r1, r0
 80155cc:	9803      	ldr	r0, [sp, #12]
 80155ce:	f7ff facd 	bl	8014b6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80155d2:	4621      	mov	r1, r4
 80155d4:	9801      	ldr	r0, [sp, #4]
 80155d6:	f7ff fc8d 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80155da:	e4b5      	b.n	8014f48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155dc:	464f      	mov	r7, r9
 80155de:	4635      	mov	r5, r6
 80155e0:	e7ed      	b.n	80155be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 80155e2:	9b01      	ldr	r3, [sp, #4]
 80155e4:	00ff      	lsls	r7, r7, #3
 80155e6:	19d9      	adds	r1, r3, r7
 80155e8:	f7ff fac0 	bl	8014b6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80155ec:	9b03      	ldr	r3, [sp, #12]
 80155ee:	cb03      	ldmia	r3!, {r0, r1}
 80155f0:	445f      	add	r7, fp
 80155f2:	445d      	add	r5, fp
 80155f4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80155f8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80155fc:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8015600:	9b03      	ldr	r3, [sp, #12]
 8015602:	6869      	ldr	r1, [r5, #4]
 8015604:	c303      	stmia	r3!, {r0, r1}
 8015606:	e7e4      	b.n	80155d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08015608 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8015608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801560c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8015610:	b09b      	sub	sp, #108	; 0x6c
 8015612:	4604      	mov	r4, r0
 8015614:	4630      	mov	r0, r6
 8015616:	f7fa f91c 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801561a:	4605      	mov	r5, r0
 801561c:	b948      	cbnz	r0, 8015632 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 801561e:	6823      	ldr	r3, [r4, #0]
 8015620:	e896 0006 	ldmia.w	r6, {r1, r2}
 8015624:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015626:	4620      	mov	r0, r4
 8015628:	4798      	blx	r3
 801562a:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801562e:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8015632:	4bc6      	ldr	r3, [pc, #792]	; (801594c <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8015634:	681b      	ldr	r3, [r3, #0]
 8015636:	2b00      	cmp	r3, #0
 8015638:	d03f      	beq.n	80156ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 801563a:	4dc5      	ldr	r5, [pc, #788]	; (8015950 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801563c:	4628      	mov	r0, r5
 801563e:	f7fa f908 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015642:	4606      	mov	r6, r0
 8015644:	2800      	cmp	r0, #0
 8015646:	d138      	bne.n	80156ba <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8015648:	4628      	mov	r0, r5
 801564a:	f7ff f907 	bl	801485c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801564e:	6823      	ldr	r3, [r4, #0]
 8015650:	6829      	ldr	r1, [r5, #0]
 8015652:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015654:	686a      	ldr	r2, [r5, #4]
 8015656:	4620      	mov	r0, r4
 8015658:	4798      	blx	r3
 801565a:	802e      	strh	r6, [r5, #0]
 801565c:	806e      	strh	r6, [r5, #2]
 801565e:	80ae      	strh	r6, [r5, #4]
 8015660:	80ee      	strh	r6, [r5, #6]
 8015662:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015666:	4dbb      	ldr	r5, [pc, #748]	; (8015954 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015668:	4640      	mov	r0, r8
 801566a:	f7ff fbeb 	bl	8014e44 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801566e:	882e      	ldrh	r6, [r5, #0]
 8015670:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015674:	4633      	mov	r3, r6
 8015676:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801567a:	42bb      	cmp	r3, r7
 801567c:	d224      	bcs.n	80156c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801567e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015682:	2907      	cmp	r1, #7
 8015684:	d816      	bhi.n	80156b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015686:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801568a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801568e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015692:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015696:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801569a:	1c4a      	adds	r2, r1, #1
 801569c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80156a0:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 80156a4:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 80156a8:	f8a2 a002 	strh.w	sl, [r2, #2]
 80156ac:	f8a2 e004 	strh.w	lr, [r2, #4]
 80156b0:	f8a2 c006 	strh.w	ip, [r2, #6]
 80156b4:	3301      	adds	r3, #1
 80156b6:	b29b      	uxth	r3, r3
 80156b8:	e7df      	b.n	801567a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 80156ba:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80156be:	2b00      	cmp	r3, #0
 80156c0:	d1cf      	bne.n	8015662 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 80156c2:	b01b      	add	sp, #108	; 0x6c
 80156c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80156c8:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 80156cc:	42b3      	cmp	r3, r6
 80156ce:	d90c      	bls.n	80156ea <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 80156d0:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 80156d4:	6822      	ldr	r2, [r4, #0]
 80156d6:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 80156da:	6c17      	ldr	r7, [r2, #64]	; 0x40
 80156dc:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 80156e0:	4620      	mov	r0, r4
 80156e2:	3601      	adds	r6, #1
 80156e4:	47b8      	blx	r7
 80156e6:	b2b6      	uxth	r6, r6
 80156e8:	e7ee      	b.n	80156c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 80156ea:	4a9b      	ldr	r2, [pc, #620]	; (8015958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80156ec:	6813      	ldr	r3, [r2, #0]
 80156ee:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80156f2:	2b01      	cmp	r3, #1
 80156f4:	4691      	mov	r9, r2
 80156f6:	f040 80e2 	bne.w	80158be <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80156fa:	8829      	ldrh	r1, [r5, #0]
 80156fc:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015700:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8015704:	33ae      	adds	r3, #174	; 0xae
 8015706:	2600      	movs	r6, #0
 8015708:	428f      	cmp	r7, r1
 801570a:	f103 0308 	add.w	r3, r3, #8
 801570e:	dd0a      	ble.n	8015726 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8015710:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8015714:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8015718:	4402      	add	r2, r0
 801571a:	b212      	sxth	r2, r2
 801571c:	4296      	cmp	r6, r2
 801571e:	bfb8      	it	lt
 8015720:	4616      	movlt	r6, r2
 8015722:	3101      	adds	r1, #1
 8015724:	e7f0      	b.n	8015708 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8015726:	4b8d      	ldr	r3, [pc, #564]	; (801595c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015728:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 801572c:	881b      	ldrh	r3, [r3, #0]
 801572e:	2b0f      	cmp	r3, #15
 8015730:	bf88      	it	hi
 8015732:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8015736:	f04f 0300 	mov.w	r3, #0
 801573a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801573e:	bf98      	it	ls
 8015740:	f04f 0b01 	movls.w	fp, #1
 8015744:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8015748:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 801574c:	4b82      	ldr	r3, [pc, #520]	; (8015958 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801574e:	4438      	add	r0, r7
 8015750:	b207      	sxth	r7, r0
 8015752:	6818      	ldr	r0, [r3, #0]
 8015754:	42b7      	cmp	r7, r6
 8015756:	6803      	ldr	r3, [r0, #0]
 8015758:	f280 8083 	bge.w	8015862 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801575c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015760:	4798      	blx	r3
 8015762:	eb07 030b 	add.w	r3, r7, fp
 8015766:	4298      	cmp	r0, r3
 8015768:	da07      	bge.n	801577a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801576a:	42b0      	cmp	r0, r6
 801576c:	da05      	bge.n	801577a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 801576e:	4287      	cmp	r7, r0
 8015770:	dd6c      	ble.n	801584c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015772:	2f00      	cmp	r7, #0
 8015774:	dd6a      	ble.n	801584c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015776:	4630      	mov	r0, r6
 8015778:	e004      	b.n	8015784 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 801577a:	4287      	cmp	r7, r0
 801577c:	dcfb      	bgt.n	8015776 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801577e:	42b0      	cmp	r0, r6
 8015780:	bfa8      	it	ge
 8015782:	4630      	movge	r0, r6
 8015784:	4b76      	ldr	r3, [pc, #472]	; (8015960 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015786:	f8ad 7016 	strh.w	r7, [sp, #22]
 801578a:	1bc0      	subs	r0, r0, r7
 801578c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015790:	882f      	ldrh	r7, [r5, #0]
 8015792:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015796:	2200      	movs	r2, #0
 8015798:	f8ad 2014 	strh.w	r2, [sp, #20]
 801579c:	f8ad 001a 	strh.w	r0, [sp, #26]
 80157a0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80157a4:	42bb      	cmp	r3, r7
 80157a6:	d9cd      	bls.n	8015744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 80157a8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80157ac:	ab07      	add	r3, sp, #28
 80157ae:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80157b2:	6851      	ldr	r1, [r2, #4]
 80157b4:	c303      	stmia	r3!, {r0, r1}
 80157b6:	a905      	add	r1, sp, #20
 80157b8:	a807      	add	r0, sp, #28
 80157ba:	f7ff f93e 	bl	8014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80157be:	2800      	cmp	r0, #0
 80157c0:	d04c      	beq.n	801585c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 80157c2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 80157c6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 80157ca:	f8bd a020 	ldrh.w	sl, [sp, #32]
 80157ce:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80157d2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80157d6:	9302      	str	r3, [sp, #8]
 80157d8:	4686      	mov	lr, r0
 80157da:	4290      	cmp	r0, r2
 80157dc:	4450      	add	r0, sl
 80157de:	f8bd a018 	ldrh.w	sl, [sp, #24]
 80157e2:	bfb8      	it	lt
 80157e4:	4696      	movlt	lr, r2
 80157e6:	4452      	add	r2, sl
 80157e8:	4299      	cmp	r1, r3
 80157ea:	b280      	uxth	r0, r0
 80157ec:	b292      	uxth	r2, r2
 80157ee:	468c      	mov	ip, r1
 80157f0:	fa0f fa82 	sxth.w	sl, r2
 80157f4:	bfb8      	it	lt
 80157f6:	469c      	movlt	ip, r3
 80157f8:	b203      	sxth	r3, r0
 80157fa:	4553      	cmp	r3, sl
 80157fc:	bfb8      	it	lt
 80157fe:	4602      	movlt	r2, r0
 8015800:	eba2 020e 	sub.w	r2, r2, lr
 8015804:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015808:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801580c:	9b02      	ldr	r3, [sp, #8]
 801580e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015812:	4411      	add	r1, r2
 8015814:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015818:	f8ad c01e 	strh.w	ip, [sp, #30]
 801581c:	4413      	add	r3, r2
 801581e:	b289      	uxth	r1, r1
 8015820:	b29b      	uxth	r3, r3
 8015822:	b208      	sxth	r0, r1
 8015824:	b21a      	sxth	r2, r3
 8015826:	4290      	cmp	r0, r2
 8015828:	bfb8      	it	lt
 801582a:	460b      	movlt	r3, r1
 801582c:	eba3 030c 	sub.w	r3, r3, ip
 8015830:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015834:	a807      	add	r0, sp, #28
 8015836:	f7fa f80c 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801583a:	b920      	cbnz	r0, 8015846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801583c:	6823      	ldr	r3, [r4, #0]
 801583e:	a907      	add	r1, sp, #28
 8015840:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015842:	4620      	mov	r0, r4
 8015844:	4798      	blx	r3
 8015846:	3701      	adds	r7, #1
 8015848:	b2bf      	uxth	r7, r7
 801584a:	e7a9      	b.n	80157a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 801584c:	f8d9 0000 	ldr.w	r0, [r9]
 8015850:	6803      	ldr	r3, [r0, #0]
 8015852:	2101      	movs	r1, #1
 8015854:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015858:	4798      	blx	r3
 801585a:	e773      	b.n	8015744 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 801585c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015860:	e7e8      	b.n	8015834 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015862:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015864:	4798      	blx	r3
 8015866:	4b3f      	ldr	r3, [pc, #252]	; (8015964 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015868:	781b      	ldrb	r3, [r3, #0]
 801586a:	2b00      	cmp	r3, #0
 801586c:	f43f af29 	beq.w	80156c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015870:	2300      	movs	r3, #0
 8015872:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015876:	882b      	ldrh	r3, [r5, #0]
 8015878:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801587c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015880:	42ab      	cmp	r3, r5
 8015882:	f4bf af1e 	bcs.w	80156c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015886:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 801588a:	2907      	cmp	r1, #7
 801588c:	d814      	bhi.n	80158b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 801588e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015892:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015896:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 801589a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801589e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 80158a2:	1c4a      	adds	r2, r1, #1
 80158a4:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80158a8:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80158ac:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 80158b0:	f8a2 c002 	strh.w	ip, [r2, #2]
 80158b4:	8097      	strh	r7, [r2, #4]
 80158b6:	80d6      	strh	r6, [r2, #6]
 80158b8:	3301      	adds	r3, #1
 80158ba:	b29b      	uxth	r3, r3
 80158bc:	e7e0      	b.n	8015880 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 80158be:	2b02      	cmp	r3, #2
 80158c0:	f040 8133 	bne.w	8015b2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 80158c4:	4b28      	ldr	r3, [pc, #160]	; (8015968 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80158c6:	781b      	ldrb	r3, [r3, #0]
 80158c8:	2b01      	cmp	r3, #1
 80158ca:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 80158ce:	f000 8098 	beq.w	8015a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80158d2:	882a      	ldrh	r2, [r5, #0]
 80158d4:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 80158d8:	3201      	adds	r2, #1
 80158da:	b292      	uxth	r2, r2
 80158dc:	2900      	cmp	r1, #0
 80158de:	d0c2      	beq.n	8015866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80158e0:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 80158e4:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 80158e8:	441e      	add	r6, r3
 80158ea:	b236      	sxth	r6, r6
 80158ec:	4694      	mov	ip, r2
 80158ee:	f04f 0900 	mov.w	r9, #0
 80158f2:	fa1f f38c 	uxth.w	r3, ip
 80158f6:	4299      	cmp	r1, r3
 80158f8:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 80158fc:	f240 80bf 	bls.w	8015a7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015900:	4427      	add	r7, r4
 8015902:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015906:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 801590a:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 801590e:	4283      	cmp	r3, r0
 8015910:	f340 80a1 	ble.w	8015a56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015914:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015918:	4406      	add	r6, r0
 801591a:	b236      	sxth	r6, r6
 801591c:	429e      	cmp	r6, r3
 801591e:	bfa8      	it	ge
 8015920:	461e      	movge	r6, r3
 8015922:	46e1      	mov	r9, ip
 8015924:	f10c 0c01 	add.w	ip, ip, #1
 8015928:	e7e3      	b.n	80158f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 801592a:	d10a      	bne.n	8015942 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 801592c:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015930:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015934:	4562      	cmp	r2, ip
 8015936:	bfb8      	it	lt
 8015938:	4662      	movlt	r2, ip
 801593a:	4288      	cmp	r0, r1
 801593c:	bfb8      	it	lt
 801593e:	461f      	movlt	r7, r3
 8015940:	e087      	b.n	8015a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015942:	428a      	cmp	r2, r1
 8015944:	bfb8      	it	lt
 8015946:	460a      	movlt	r2, r1
 8015948:	e083      	b.n	8015a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 801594a:	bf00      	nop
 801594c:	2000ef5c 	.word	0x2000ef5c
 8015950:	2000ef68 	.word	0x2000ef68
 8015954:	20000060 	.word	0x20000060
 8015958:	2000ef1c 	.word	0x2000ef1c
 801595c:	2000ef12 	.word	0x2000ef12
 8015960:	2000ef10 	.word	0x2000ef10
 8015964:	2000ef1a 	.word	0x2000ef1a
 8015968:	2000ef14 	.word	0x2000ef14
 801596c:	19a1      	adds	r1, r4, r6
 801596e:	ab07      	add	r3, sp, #28
 8015970:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015974:	6849      	ldr	r1, [r1, #4]
 8015976:	c303      	stmia	r3!, {r0, r1}
 8015978:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801597c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015980:	2b13      	cmp	r3, #19
 8015982:	bfd8      	it	le
 8015984:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015988:	f8ad 201c 	strh.w	r2, [sp, #28]
 801598c:	440b      	add	r3, r1
 801598e:	1a9b      	subs	r3, r3, r2
 8015990:	a807      	add	r0, sp, #28
 8015992:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015996:	f7fe ff7b 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801599a:	a807      	add	r0, sp, #28
 801599c:	f7f9 ff59 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 80159a0:	bb78      	cbnz	r0, 8015a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80159a2:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80159a6:	f8d9 0000 	ldr.w	r0, [r9]
 80159aa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80159ae:	f8d0 e000 	ldr.w	lr, [r0]
 80159b2:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 80159b6:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80159ba:	f1bc 0f14 	cmp.w	ip, #20
 80159be:	bfa8      	it	ge
 80159c0:	f04f 0c14 	movge.w	ip, #20
 80159c4:	fa1f fc8c 	uxth.w	ip, ip
 80159c8:	f8cd c000 	str.w	ip, [sp]
 80159cc:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 80159d0:	47d8      	blx	fp
 80159d2:	4683      	mov	fp, r0
 80159d4:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80159d8:	a807      	add	r0, sp, #28
 80159da:	f7fe ff3f 	bl	801485c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80159de:	6823      	ldr	r3, [r4, #0]
 80159e0:	4426      	add	r6, r4
 80159e2:	4620      	mov	r0, r4
 80159e4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80159e6:	a907      	add	r1, sp, #28
 80159e8:	4798      	blx	r3
 80159ea:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 80159ee:	eba0 000b 	sub.w	r0, r0, fp
 80159f2:	b200      	sxth	r0, r0
 80159f4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 80159f8:	b918      	cbnz	r0, 8015a02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 80159fa:	b2b9      	uxth	r1, r7
 80159fc:	4650      	mov	r0, sl
 80159fe:	f7ff fa79 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015a02:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015a06:	f1bb 0f00 	cmp.w	fp, #0
 8015a0a:	f43f af2c 	beq.w	8015866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015a0e:	882b      	ldrh	r3, [r5, #0]
 8015a10:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015a14:	3301      	adds	r3, #1
 8015a16:	b29b      	uxth	r3, r3
 8015a18:	2700      	movs	r7, #0
 8015a1a:	b299      	uxth	r1, r3
 8015a1c:	458b      	cmp	fp, r1
 8015a1e:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015a22:	d9a3      	bls.n	801596c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015a24:	4426      	add	r6, r4
 8015a26:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015a2a:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015a2e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015a32:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015a36:	4408      	add	r0, r1
 8015a38:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015a3c:	4461      	add	r1, ip
 8015a3e:	b200      	sxth	r0, r0
 8015a40:	b209      	sxth	r1, r1
 8015a42:	4288      	cmp	r0, r1
 8015a44:	f6bf af71 	bge.w	801592a <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015a48:	4584      	cmp	ip, r0
 8015a4a:	4662      	mov	r2, ip
 8015a4c:	461f      	mov	r7, r3
 8015a4e:	bfb8      	it	lt
 8015a50:	4602      	movlt	r2, r0
 8015a52:	3301      	adds	r3, #1
 8015a54:	e7e1      	b.n	8015a1a <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015a56:	d10e      	bne.n	8015a76 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015a58:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015a5c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015a60:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015a64:	4473      	add	r3, lr
 8015a66:	b21b      	sxth	r3, r3
 8015a68:	429e      	cmp	r6, r3
 8015a6a:	bfa8      	it	ge
 8015a6c:	461e      	movge	r6, r3
 8015a6e:	4287      	cmp	r7, r0
 8015a70:	bfb8      	it	lt
 8015a72:	46e1      	movlt	r9, ip
 8015a74:	e756      	b.n	8015924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015a76:	4286      	cmp	r6, r0
 8015a78:	bfa8      	it	ge
 8015a7a:	4606      	movge	r6, r0
 8015a7c:	e752      	b.n	8015924 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015a7e:	eb0a 0007 	add.w	r0, sl, r7
 8015a82:	4427      	add	r7, r4
 8015a84:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015a88:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015a8c:	f1bb 0f13 	cmp.w	fp, #19
 8015a90:	bfde      	ittt	le
 8015a92:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015a96:	445e      	addle	r6, fp
 8015a98:	b236      	sxthle	r6, r6
 8015a9a:	f7f9 feda 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015a9e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015aa2:	2800      	cmp	r0, #0
 8015aa4:	f47f af1a 	bne.w	80158dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015aa8:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015aac:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015ab0:	482a      	ldr	r0, [pc, #168]	; (8015b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015ab2:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015ab6:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015aba:	6800      	ldr	r0, [r0, #0]
 8015abc:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015ac0:	1ab6      	subs	r6, r6, r2
 8015ac2:	2e14      	cmp	r6, #20
 8015ac4:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015ac8:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015acc:	bfa8      	it	ge
 8015ace:	2614      	movge	r6, #20
 8015ad0:	f8d0 c000 	ldr.w	ip, [r0]
 8015ad4:	b2b6      	uxth	r6, r6
 8015ad6:	fa1f fb8b 	uxth.w	fp, fp
 8015ada:	455e      	cmp	r6, fp
 8015adc:	bf94      	ite	ls
 8015ade:	9600      	strls	r6, [sp, #0]
 8015ae0:	f8cd b000 	strhi.w	fp, [sp]
 8015ae4:	b292      	uxth	r2, r2
 8015ae6:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015aea:	b29b      	uxth	r3, r3
 8015aec:	b289      	uxth	r1, r1
 8015aee:	47b0      	blx	r6
 8015af0:	6823      	ldr	r3, [r4, #0]
 8015af2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015af6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015af8:	a907      	add	r1, sp, #28
 8015afa:	4620      	mov	r0, r4
 8015afc:	4798      	blx	r3
 8015afe:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015b02:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015b06:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015b0a:	1a5b      	subs	r3, r3, r1
 8015b0c:	440a      	add	r2, r1
 8015b0e:	b21b      	sxth	r3, r3
 8015b10:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015b14:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015b18:	2b00      	cmp	r3, #0
 8015b1a:	f47f aeda 	bne.w	80158d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015b1e:	fa1f f189 	uxth.w	r1, r9
 8015b22:	4650      	mov	r0, sl
 8015b24:	f7ff f9e6 	bl	8014ef4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015b28:	e6d3      	b.n	80158d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015b2a:	882e      	ldrh	r6, [r5, #0]
 8015b2c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015b30:	42b3      	cmp	r3, r6
 8015b32:	f67f ae98 	bls.w	8015866 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015b36:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015b3a:	ab07      	add	r3, sp, #28
 8015b3c:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015b40:	6851      	ldr	r1, [r2, #4]
 8015b42:	c303      	stmia	r3!, {r0, r1}
 8015b44:	a807      	add	r0, sp, #28
 8015b46:	f7f9 fe84 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015b4a:	b920      	cbnz	r0, 8015b56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015b4c:	6823      	ldr	r3, [r4, #0]
 8015b4e:	a907      	add	r1, sp, #28
 8015b50:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015b52:	4620      	mov	r0, r4
 8015b54:	4798      	blx	r3
 8015b56:	3601      	adds	r6, #1
 8015b58:	b2b6      	uxth	r6, r6
 8015b5a:	e7e7      	b.n	8015b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015b5c:	2000ef1c 	.word	0x2000ef1c

08015b60 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015b60:	4b03      	ldr	r3, [pc, #12]	; (8015b70 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015b62:	2200      	movs	r2, #0
 8015b64:	801a      	strh	r2, [r3, #0]
 8015b66:	805a      	strh	r2, [r3, #2]
 8015b68:	809a      	strh	r2, [r3, #4]
 8015b6a:	80da      	strh	r2, [r3, #6]
 8015b6c:	4770      	bx	lr
 8015b6e:	bf00      	nop
 8015b70:	2000ef68 	.word	0x2000ef68

08015b74 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b78:	4606      	mov	r6, r0
 8015b7a:	b09d      	sub	sp, #116	; 0x74
 8015b7c:	a803      	add	r0, sp, #12
 8015b7e:	4614      	mov	r4, r2
 8015b80:	468a      	mov	sl, r1
 8015b82:	461d      	mov	r5, r3
 8015b84:	f000 feca 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8015b88:	6833      	ldr	r3, [r6, #0]
 8015b8a:	4630      	mov	r0, r6
 8015b8c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015b8e:	4798      	blx	r3
 8015b90:	6833      	ldr	r3, [r6, #0]
 8015b92:	4607      	mov	r7, r0
 8015b94:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015b96:	4630      	mov	r0, r6
 8015b98:	4798      	blx	r3
 8015b9a:	462a      	mov	r2, r5
 8015b9c:	9000      	str	r0, [sp, #0]
 8015b9e:	4621      	mov	r1, r4
 8015ba0:	463b      	mov	r3, r7
 8015ba2:	a803      	add	r0, sp, #12
 8015ba4:	f000 ff15 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015ba8:	2500      	movs	r5, #0
 8015baa:	462c      	mov	r4, r5
 8015bac:	46a9      	mov	r9, r5
 8015bae:	46a8      	mov	r8, r5
 8015bb0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015bb4:	2300      	movs	r3, #0
 8015bb6:	9302      	str	r3, [sp, #8]
 8015bb8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015bbc:	429c      	cmp	r4, r3
 8015bbe:	d002      	beq.n	8015bc6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015bc0:	455c      	cmp	r4, fp
 8015bc2:	bf18      	it	ne
 8015bc4:	4625      	movne	r5, r4
 8015bc6:	ab02      	add	r3, sp, #8
 8015bc8:	4632      	mov	r2, r6
 8015bca:	4651      	mov	r1, sl
 8015bcc:	a803      	add	r0, sp, #12
 8015bce:	f001 fa03 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015bd2:	4604      	mov	r4, r0
 8015bd4:	b108      	cbz	r0, 8015bda <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015bd6:	280a      	cmp	r0, #10
 8015bd8:	d10a      	bne.n	8015bf0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015bda:	45c1      	cmp	r9, r8
 8015bdc:	bf38      	it	cc
 8015bde:	46c1      	movcc	r9, r8
 8015be0:	f04f 0800 	mov.w	r8, #0
 8015be4:	2c00      	cmp	r4, #0
 8015be6:	d1e5      	bne.n	8015bb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015be8:	4648      	mov	r0, r9
 8015bea:	b01d      	add	sp, #116	; 0x74
 8015bec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015bf0:	9a02      	ldr	r2, [sp, #8]
 8015bf2:	2a00      	cmp	r2, #0
 8015bf4:	d0de      	beq.n	8015bb4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015bf6:	7b57      	ldrb	r7, [r2, #13]
 8015bf8:	6833      	ldr	r3, [r6, #0]
 8015bfa:	8894      	ldrh	r4, [r2, #4]
 8015bfc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015bfe:	007f      	lsls	r7, r7, #1
 8015c00:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015c04:	7a97      	ldrb	r7, [r2, #10]
 8015c06:	4629      	mov	r1, r5
 8015c08:	4307      	orrs	r7, r0
 8015c0a:	4630      	mov	r0, r6
 8015c0c:	4798      	blx	r3
 8015c0e:	4438      	add	r0, r7
 8015c10:	4480      	add	r8, r0
 8015c12:	fa1f f888 	uxth.w	r8, r8
 8015c16:	e7e5      	b.n	8015be4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015c18 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015c18:	b508      	push	{r3, lr}
 8015c1a:	6803      	ldr	r3, [r0, #0]
 8015c1c:	68db      	ldr	r3, [r3, #12]
 8015c1e:	4798      	blx	r3
 8015c20:	b128      	cbz	r0, 8015c2e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015c22:	7b43      	ldrb	r3, [r0, #13]
 8015c24:	7a80      	ldrb	r0, [r0, #10]
 8015c26:	005b      	lsls	r3, r3, #1
 8015c28:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015c2c:	4318      	orrs	r0, r3
 8015c2e:	bd08      	pop	{r3, pc}

08015c30 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015c30:	b40e      	push	{r1, r2, r3}
 8015c32:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015c34:	b09e      	sub	sp, #120	; 0x78
 8015c36:	ab23      	add	r3, sp, #140	; 0x8c
 8015c38:	4605      	mov	r5, r0
 8015c3a:	f853 4b04 	ldr.w	r4, [r3], #4
 8015c3e:	9303      	str	r3, [sp, #12]
 8015c40:	a805      	add	r0, sp, #20
 8015c42:	f000 fe6b 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8015c46:	682b      	ldr	r3, [r5, #0]
 8015c48:	4628      	mov	r0, r5
 8015c4a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015c4c:	4798      	blx	r3
 8015c4e:	682b      	ldr	r3, [r5, #0]
 8015c50:	4606      	mov	r6, r0
 8015c52:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015c54:	4628      	mov	r0, r5
 8015c56:	4798      	blx	r3
 8015c58:	4633      	mov	r3, r6
 8015c5a:	ae1e      	add	r6, sp, #120	; 0x78
 8015c5c:	4621      	mov	r1, r4
 8015c5e:	9000      	str	r0, [sp, #0]
 8015c60:	9a03      	ldr	r2, [sp, #12]
 8015c62:	2400      	movs	r4, #0
 8015c64:	a805      	add	r0, sp, #20
 8015c66:	f000 feb4 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015c6a:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015c6e:	462a      	mov	r2, r5
 8015c70:	4633      	mov	r3, r6
 8015c72:	4621      	mov	r1, r4
 8015c74:	a805      	add	r0, sp, #20
 8015c76:	f001 f9af 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015c7a:	b1f0      	cbz	r0, 8015cba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015c7c:	280a      	cmp	r0, #10
 8015c7e:	d018      	beq.n	8015cb2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015c80:	9f04      	ldr	r7, [sp, #16]
 8015c82:	b1b7      	cbz	r7, 8015cb2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015c84:	7b78      	ldrb	r0, [r7, #13]
 8015c86:	7a3b      	ldrb	r3, [r7, #8]
 8015c88:	88ea      	ldrh	r2, [r5, #6]
 8015c8a:	00c1      	lsls	r1, r0, #3
 8015c8c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015c90:	4319      	orrs	r1, r3
 8015c92:	0643      	lsls	r3, r0, #25
 8015c94:	bf44      	itt	mi
 8015c96:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015c9a:	b219      	sxthmi	r1, r3
 8015c9c:	0100      	lsls	r0, r0, #4
 8015c9e:	79fb      	ldrb	r3, [r7, #7]
 8015ca0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015ca4:	4303      	orrs	r3, r0
 8015ca6:	4413      	add	r3, r2
 8015ca8:	1a5b      	subs	r3, r3, r1
 8015caa:	b21b      	sxth	r3, r3
 8015cac:	429c      	cmp	r4, r3
 8015cae:	bfb8      	it	lt
 8015cb0:	461c      	movlt	r4, r3
 8015cb2:	4633      	mov	r3, r6
 8015cb4:	462a      	mov	r2, r5
 8015cb6:	2100      	movs	r1, #0
 8015cb8:	e7dc      	b.n	8015c74 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015cba:	b2a0      	uxth	r0, r4
 8015cbc:	b01e      	add	sp, #120	; 0x78
 8015cbe:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015cc2:	b003      	add	sp, #12
 8015cc4:	4770      	bx	lr

08015cc6 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015cc6:	7a43      	ldrb	r3, [r0, #9]
 8015cc8:	8880      	ldrh	r0, [r0, #4]
 8015cca:	4418      	add	r0, r3
 8015ccc:	b280      	uxth	r0, r0
 8015cce:	4770      	bx	lr

08015cd0 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015cd0:	6803      	ldr	r3, [r0, #0]
 8015cd2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015cd4:	4718      	bx	r3

08015cd6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015cd6:	b40e      	push	{r1, r2, r3}
 8015cd8:	b570      	push	{r4, r5, r6, lr}
 8015cda:	b09d      	sub	sp, #116	; 0x74
 8015cdc:	ab21      	add	r3, sp, #132	; 0x84
 8015cde:	4604      	mov	r4, r0
 8015ce0:	f853 5b04 	ldr.w	r5, [r3], #4
 8015ce4:	9302      	str	r3, [sp, #8]
 8015ce6:	a803      	add	r0, sp, #12
 8015ce8:	f000 fe18 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8015cec:	6823      	ldr	r3, [r4, #0]
 8015cee:	4620      	mov	r0, r4
 8015cf0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015cf2:	4798      	blx	r3
 8015cf4:	6823      	ldr	r3, [r4, #0]
 8015cf6:	4606      	mov	r6, r0
 8015cf8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015cfa:	4620      	mov	r0, r4
 8015cfc:	4798      	blx	r3
 8015cfe:	4633      	mov	r3, r6
 8015d00:	9000      	str	r0, [sp, #0]
 8015d02:	9a02      	ldr	r2, [sp, #8]
 8015d04:	4629      	mov	r1, r5
 8015d06:	a803      	add	r0, sp, #12
 8015d08:	f000 fe63 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d0c:	a803      	add	r0, sp, #12
 8015d0e:	f001 fa31 	bl	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d12:	2401      	movs	r4, #1
 8015d14:	b2a3      	uxth	r3, r4
 8015d16:	b140      	cbz	r0, 8015d2a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015d18:	280a      	cmp	r0, #10
 8015d1a:	bf08      	it	eq
 8015d1c:	3301      	addeq	r3, #1
 8015d1e:	a803      	add	r0, sp, #12
 8015d20:	bf08      	it	eq
 8015d22:	b21c      	sxtheq	r4, r3
 8015d24:	f001 fa26 	bl	8017174 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015d28:	e7f4      	b.n	8015d14 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015d2a:	4618      	mov	r0, r3
 8015d2c:	b01d      	add	sp, #116	; 0x74
 8015d2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015d32:	b003      	add	sp, #12
 8015d34:	4770      	bx	lr

08015d36 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015d36:	b40e      	push	{r1, r2, r3}
 8015d38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015d3a:	b09e      	sub	sp, #120	; 0x78
 8015d3c:	ab23      	add	r3, sp, #140	; 0x8c
 8015d3e:	4604      	mov	r4, r0
 8015d40:	f853 5b04 	ldr.w	r5, [r3], #4
 8015d44:	9303      	str	r3, [sp, #12]
 8015d46:	a805      	add	r0, sp, #20
 8015d48:	f000 fde8 	bl	801691c <_ZN8touchgfx12TextProviderC1Ev>
 8015d4c:	6823      	ldr	r3, [r4, #0]
 8015d4e:	4620      	mov	r0, r4
 8015d50:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015d52:	4798      	blx	r3
 8015d54:	6823      	ldr	r3, [r4, #0]
 8015d56:	4606      	mov	r6, r0
 8015d58:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015d5a:	4620      	mov	r0, r4
 8015d5c:	4798      	blx	r3
 8015d5e:	4633      	mov	r3, r6
 8015d60:	4629      	mov	r1, r5
 8015d62:	9000      	str	r0, [sp, #0]
 8015d64:	9a03      	ldr	r2, [sp, #12]
 8015d66:	a805      	add	r0, sp, #20
 8015d68:	ad1e      	add	r5, sp, #120	; 0x78
 8015d6a:	f000 fe32 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015d6e:	2100      	movs	r1, #0
 8015d70:	f845 1d68 	str.w	r1, [r5, #-104]!
 8015d74:	4622      	mov	r2, r4
 8015d76:	462b      	mov	r3, r5
 8015d78:	a805      	add	r0, sp, #20
 8015d7a:	f001 f92d 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015d7e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8015d82:	b1d8      	cbz	r0, 8015dbc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015d84:	280a      	cmp	r0, #10
 8015d86:	d012      	beq.n	8015dae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015d88:	9804      	ldr	r0, [sp, #16]
 8015d8a:	b180      	cbz	r0, 8015dae <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8015d8c:	7b47      	ldrb	r7, [r0, #13]
 8015d8e:	88e2      	ldrh	r2, [r4, #6]
 8015d90:	00fb      	lsls	r3, r7, #3
 8015d92:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8015d96:	7a03      	ldrb	r3, [r0, #8]
 8015d98:	430b      	orrs	r3, r1
 8015d9a:	0679      	lsls	r1, r7, #25
 8015d9c:	bf44      	itt	mi
 8015d9e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8015da2:	b21b      	sxthmi	r3, r3
 8015da4:	1ad3      	subs	r3, r2, r3
 8015da6:	b21b      	sxth	r3, r3
 8015da8:	429e      	cmp	r6, r3
 8015daa:	bfa8      	it	ge
 8015dac:	461e      	movge	r6, r3
 8015dae:	462b      	mov	r3, r5
 8015db0:	4622      	mov	r2, r4
 8015db2:	2100      	movs	r1, #0
 8015db4:	a805      	add	r0, sp, #20
 8015db6:	f001 f90f 	bl	8016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015dba:	e7e2      	b.n	8015d82 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015dbc:	4630      	mov	r0, r6
 8015dbe:	b01e      	add	sp, #120	; 0x78
 8015dc0:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015dc4:	b003      	add	sp, #12
 8015dc6:	4770      	bx	lr

08015dc8 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8015dc8:	b513      	push	{r0, r1, r4, lr}
 8015dca:	6803      	ldr	r3, [r0, #0]
 8015dcc:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015dd0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015dd4:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015dd8:	2400      	movs	r4, #0
 8015dda:	9400      	str	r4, [sp, #0]
 8015ddc:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015de0:	691b      	ldr	r3, [r3, #16]
 8015de2:	4669      	mov	r1, sp
 8015de4:	4798      	blx	r3
 8015de6:	b002      	add	sp, #8
 8015de8:	bd10      	pop	{r4, pc}

08015dea <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8015dea:	b538      	push	{r3, r4, r5, lr}
 8015dec:	680b      	ldr	r3, [r1, #0]
 8015dee:	460c      	mov	r4, r1
 8015df0:	68db      	ldr	r3, [r3, #12]
 8015df2:	4605      	mov	r5, r0
 8015df4:	4798      	blx	r3
 8015df6:	6823      	ldr	r3, [r4, #0]
 8015df8:	4620      	mov	r0, r4
 8015dfa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015dfc:	4629      	mov	r1, r5
 8015dfe:	4798      	blx	r3
 8015e00:	4628      	mov	r0, r5
 8015e02:	bd38      	pop	{r3, r4, r5, pc}

08015e04 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015e04:	b410      	push	{r4}
 8015e06:	880a      	ldrh	r2, [r1, #0]
 8015e08:	8884      	ldrh	r4, [r0, #4]
 8015e0a:	4422      	add	r2, r4
 8015e0c:	800a      	strh	r2, [r1, #0]
 8015e0e:	88c4      	ldrh	r4, [r0, #6]
 8015e10:	884a      	ldrh	r2, [r1, #2]
 8015e12:	4422      	add	r2, r4
 8015e14:	804a      	strh	r2, [r1, #2]
 8015e16:	6940      	ldr	r0, [r0, #20]
 8015e18:	b120      	cbz	r0, 8015e24 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8015e1a:	6803      	ldr	r3, [r0, #0]
 8015e1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015e20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015e22:	4718      	bx	r3
 8015e24:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015e28:	4770      	bx	lr

08015e2a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8015e2a:	b570      	push	{r4, r5, r6, lr}
 8015e2c:	8882      	ldrh	r2, [r0, #4]
 8015e2e:	880b      	ldrh	r3, [r1, #0]
 8015e30:	4413      	add	r3, r2
 8015e32:	800b      	strh	r3, [r1, #0]
 8015e34:	88c2      	ldrh	r2, [r0, #6]
 8015e36:	884b      	ldrh	r3, [r1, #2]
 8015e38:	460c      	mov	r4, r1
 8015e3a:	4413      	add	r3, r2
 8015e3c:	804b      	strh	r3, [r1, #2]
 8015e3e:	4605      	mov	r5, r0
 8015e40:	1d01      	adds	r1, r0, #4
 8015e42:	4620      	mov	r0, r4
 8015e44:	f7f9 fcc2 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8015e48:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015e4c:	2b00      	cmp	r3, #0
 8015e4e:	dd0b      	ble.n	8015e68 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e50:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015e54:	2b00      	cmp	r3, #0
 8015e56:	dd07      	ble.n	8015e68 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e58:	6968      	ldr	r0, [r5, #20]
 8015e5a:	b128      	cbz	r0, 8015e68 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8015e5c:	6803      	ldr	r3, [r0, #0]
 8015e5e:	4621      	mov	r1, r4
 8015e60:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8015e62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015e66:	4718      	bx	r3
 8015e68:	bd70      	pop	{r4, r5, r6, pc}
	...

08015e6c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015e6c:	b570      	push	{r4, r5, r6, lr}
 8015e6e:	8882      	ldrh	r2, [r0, #4]
 8015e70:	880b      	ldrh	r3, [r1, #0]
 8015e72:	4413      	add	r3, r2
 8015e74:	800b      	strh	r3, [r1, #0]
 8015e76:	88c2      	ldrh	r2, [r0, #6]
 8015e78:	884b      	ldrh	r3, [r1, #2]
 8015e7a:	460c      	mov	r4, r1
 8015e7c:	4413      	add	r3, r2
 8015e7e:	804b      	strh	r3, [r1, #2]
 8015e80:	4605      	mov	r5, r0
 8015e82:	1d01      	adds	r1, r0, #4
 8015e84:	4620      	mov	r0, r4
 8015e86:	f7f9 fca1 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8015e8a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015e8e:	2b00      	cmp	r3, #0
 8015e90:	dd19      	ble.n	8015ec6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015e92:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015e96:	2b00      	cmp	r3, #0
 8015e98:	dd15      	ble.n	8015ec6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015e9a:	6968      	ldr	r0, [r5, #20]
 8015e9c:	b128      	cbz	r0, 8015eaa <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015e9e:	6803      	ldr	r3, [r0, #0]
 8015ea0:	4621      	mov	r1, r4
 8015ea2:	691b      	ldr	r3, [r3, #16]
 8015ea4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ea8:	4718      	bx	r3
 8015eaa:	4b07      	ldr	r3, [pc, #28]	; (8015ec8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015eac:	681b      	ldr	r3, [r3, #0]
 8015eae:	3304      	adds	r3, #4
 8015eb0:	429d      	cmp	r5, r3
 8015eb2:	d108      	bne.n	8015ec6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015eb4:	f7fe fea0 	bl	8014bf8 <_ZN8touchgfx11Application11getInstanceEv>
 8015eb8:	6803      	ldr	r3, [r0, #0]
 8015eba:	6821      	ldr	r1, [r4, #0]
 8015ebc:	6862      	ldr	r2, [r4, #4]
 8015ebe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015ec0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015ec4:	4718      	bx	r3
 8015ec6:	bd70      	pop	{r4, r5, r6, pc}
 8015ec8:	2000ef60 	.word	0x2000ef60

08015ecc <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015ecc:	b570      	push	{r4, r5, r6, lr}
 8015ece:	4604      	mov	r4, r0
 8015ed0:	4616      	mov	r6, r2
 8015ed2:	460d      	mov	r5, r1
 8015ed4:	b901      	cbnz	r1, 8015ed8 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015ed6:	b192      	cbz	r2, 8015efe <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015ed8:	6823      	ldr	r3, [r4, #0]
 8015eda:	4620      	mov	r0, r4
 8015edc:	699b      	ldr	r3, [r3, #24]
 8015ede:	4798      	blx	r3
 8015ee0:	88e2      	ldrh	r2, [r4, #6]
 8015ee2:	88a1      	ldrh	r1, [r4, #4]
 8015ee4:	4432      	add	r2, r6
 8015ee6:	4429      	add	r1, r5
 8015ee8:	4620      	mov	r0, r4
 8015eea:	b212      	sxth	r2, r2
 8015eec:	b209      	sxth	r1, r1
 8015eee:	f7ec fda3 	bl	8002a38 <_ZN8touchgfx8Drawable5setXYEss>
 8015ef2:	6823      	ldr	r3, [r4, #0]
 8015ef4:	4620      	mov	r0, r4
 8015ef6:	699b      	ldr	r3, [r3, #24]
 8015ef8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015efc:	4718      	bx	r3
 8015efe:	bd70      	pop	{r4, r5, r6, pc}

08015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015f00:	b510      	push	{r4, lr}
 8015f02:	4604      	mov	r4, r0
 8015f04:	4608      	mov	r0, r1
 8015f06:	2300      	movs	r3, #0
 8015f08:	8023      	strh	r3, [r4, #0]
 8015f0a:	8063      	strh	r3, [r4, #2]
 8015f0c:	6803      	ldr	r3, [r0, #0]
 8015f0e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015f12:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015f16:	80a1      	strh	r1, [r4, #4]
 8015f18:	80e2      	strh	r2, [r4, #6]
 8015f1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015f1c:	4621      	mov	r1, r4
 8015f1e:	4798      	blx	r3
 8015f20:	4620      	mov	r0, r4
 8015f22:	bd10      	pop	{r4, pc}

08015f24 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015f24:	b530      	push	{r4, r5, lr}
 8015f26:	8083      	strh	r3, [r0, #4]
 8015f28:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015f2c:	80c3      	strh	r3, [r0, #6]
 8015f2e:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015f32:	7203      	strb	r3, [r0, #8]
 8015f34:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015f38:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015f3c:	7243      	strb	r3, [r0, #9]
 8015f3e:	7a83      	ldrb	r3, [r0, #10]
 8015f40:	6141      	str	r1, [r0, #20]
 8015f42:	f365 0306 	bfi	r3, r5, #0, #7
 8015f46:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015f4a:	8302      	strh	r2, [r0, #24]
 8015f4c:	f365 13c7 	bfi	r3, r5, #7, #1
 8015f50:	7283      	strb	r3, [r0, #10]
 8015f52:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015f56:	72c3      	strb	r3, [r0, #11]
 8015f58:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8015f5c:	7303      	strb	r3, [r0, #12]
 8015f5e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8015f62:	81c3      	strh	r3, [r0, #14]
 8015f64:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015f68:	8203      	strh	r3, [r0, #16]
 8015f6a:	4b01      	ldr	r3, [pc, #4]	; (8015f70 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015f6c:	6003      	str	r3, [r0, #0]
 8015f6e:	bd30      	pop	{r4, r5, pc}
 8015f70:	0802a3d8 	.word	0x0802a3d8

08015f74 <_ZNK8touchgfx9ConstFont4findEt>:
 8015f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015f76:	6944      	ldr	r4, [r0, #20]
 8015f78:	b3bc      	cbz	r4, 8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f7a:	88a3      	ldrh	r3, [r4, #4]
 8015f7c:	8b02      	ldrh	r2, [r0, #24]
 8015f7e:	1acb      	subs	r3, r1, r3
 8015f80:	f102 32ff 	add.w	r2, r2, #4294967295
 8015f84:	d431      	bmi.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f86:	4293      	cmp	r3, r2
 8015f88:	dd0c      	ble.n	8015fa4 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015f8a:	230e      	movs	r3, #14
 8015f8c:	fb03 4302 	mla	r3, r3, r2, r4
 8015f90:	889b      	ldrh	r3, [r3, #4]
 8015f92:	1a5b      	subs	r3, r3, r1
 8015f94:	1ad3      	subs	r3, r2, r3
 8015f96:	429a      	cmp	r2, r3
 8015f98:	db27      	blt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015f9a:	2b00      	cmp	r3, #0
 8015f9c:	bfbc      	itt	lt
 8015f9e:	2302      	movlt	r3, #2
 8015fa0:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015fa4:	2500      	movs	r5, #0
 8015fa6:	260e      	movs	r6, #14
 8015fa8:	4295      	cmp	r5, r2
 8015faa:	dc1e      	bgt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fac:	fb06 4003 	mla	r0, r6, r3, r4
 8015fb0:	8887      	ldrh	r7, [r0, #4]
 8015fb2:	42b9      	cmp	r1, r7
 8015fb4:	d01a      	beq.n	8015fec <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015fb6:	d20d      	bcs.n	8015fd4 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015fb8:	1e5a      	subs	r2, r3, #1
 8015fba:	4295      	cmp	r5, r2
 8015fbc:	dc15      	bgt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fbe:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015fc2:	1a5b      	subs	r3, r3, r1
 8015fc4:	1ad3      	subs	r3, r2, r3
 8015fc6:	429a      	cmp	r2, r3
 8015fc8:	db0f      	blt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fca:	429d      	cmp	r5, r3
 8015fcc:	ddec      	ble.n	8015fa8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fce:	1953      	adds	r3, r2, r5
 8015fd0:	105b      	asrs	r3, r3, #1
 8015fd2:	e7e9      	b.n	8015fa8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fd4:	1c5d      	adds	r5, r3, #1
 8015fd6:	42aa      	cmp	r2, r5
 8015fd8:	db07      	blt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fda:	8a43      	ldrh	r3, [r0, #18]
 8015fdc:	1acb      	subs	r3, r1, r3
 8015fde:	442b      	add	r3, r5
 8015fe0:	429d      	cmp	r5, r3
 8015fe2:	dc02      	bgt.n	8015fea <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015fe4:	429a      	cmp	r2, r3
 8015fe6:	dadf      	bge.n	8015fa8 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015fe8:	e7f1      	b.n	8015fce <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015fea:	2000      	movs	r0, #0
 8015fec:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015fee <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015fee:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015ff0:	4604      	mov	r4, r0
 8015ff2:	4617      	mov	r7, r2
 8015ff4:	461e      	mov	r6, r3
 8015ff6:	b911      	cbnz	r1, 8015ffe <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015ff8:	2500      	movs	r5, #0
 8015ffa:	4628      	mov	r0, r5
 8015ffc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015ffe:	290a      	cmp	r1, #10
 8016000:	d0fa      	beq.n	8015ff8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016002:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8016006:	4291      	cmp	r1, r2
 8016008:	d0f6      	beq.n	8015ff8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801600a:	f242 020b 	movw	r2, #8203	; 0x200b
 801600e:	4291      	cmp	r1, r2
 8016010:	d0f2      	beq.n	8015ff8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016012:	f7ff ffaf 	bl	8015f74 <_ZNK8touchgfx9ConstFont4findEt>
 8016016:	4605      	mov	r5, r0
 8016018:	b950      	cbnz	r0, 8016030 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801601a:	6823      	ldr	r3, [r4, #0]
 801601c:	4620      	mov	r0, r4
 801601e:	691b      	ldr	r3, [r3, #16]
 8016020:	4798      	blx	r3
 8016022:	4601      	mov	r1, r0
 8016024:	4620      	mov	r0, r4
 8016026:	f7ff ffa5 	bl	8015f74 <_ZNK8touchgfx9ConstFont4findEt>
 801602a:	4605      	mov	r5, r0
 801602c:	2800      	cmp	r0, #0
 801602e:	d0e3      	beq.n	8015ff8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8016030:	6823      	ldr	r3, [r4, #0]
 8016032:	4629      	mov	r1, r5
 8016034:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8016036:	4620      	mov	r0, r4
 8016038:	4798      	blx	r3
 801603a:	6038      	str	r0, [r7, #0]
 801603c:	6823      	ldr	r3, [r4, #0]
 801603e:	4620      	mov	r0, r4
 8016040:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016042:	4798      	blx	r3
 8016044:	7030      	strb	r0, [r6, #0]
 8016046:	e7d8      	b.n	8015ffa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08016048 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8016048:	b538      	push	{r3, r4, r5, lr}
 801604a:	4605      	mov	r5, r0
 801604c:	f002 fb56 	bl	80186fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016050:	4604      	mov	r4, r0
 8016052:	4628      	mov	r0, r5
 8016054:	f002 fa96 	bl	8018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016058:	2800      	cmp	r0, #0
 801605a:	bf14      	ite	ne
 801605c:	2002      	movne	r0, #2
 801605e:	2000      	moveq	r0, #0
 8016060:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016064:	b280      	uxth	r0, r0
 8016066:	bd38      	pop	{r3, r4, r5, pc}

08016068 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016068:	b538      	push	{r3, r4, r5, lr}
 801606a:	4605      	mov	r5, r0
 801606c:	f002 fb46 	bl	80186fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016070:	4604      	mov	r4, r0
 8016072:	4628      	mov	r0, r5
 8016074:	f002 fa86 	bl	8018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016078:	2800      	cmp	r0, #0
 801607a:	bf14      	ite	ne
 801607c:	2002      	movne	r0, #2
 801607e:	2000      	moveq	r0, #0
 8016080:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016084:	f040 0001 	orr.w	r0, r0, #1
 8016088:	b280      	uxth	r0, r0
 801608a:	bd38      	pop	{r3, r4, r5, pc}

0801608c <_ZN8touchgfx4clzuEm>:
 801608c:	4603      	mov	r3, r0
 801608e:	b1c8      	cbz	r0, 80160c4 <_ZN8touchgfx4clzuEm+0x38>
 8016090:	0c02      	lsrs	r2, r0, #16
 8016092:	0412      	lsls	r2, r2, #16
 8016094:	b9a2      	cbnz	r2, 80160c0 <_ZN8touchgfx4clzuEm+0x34>
 8016096:	0403      	lsls	r3, r0, #16
 8016098:	2010      	movs	r0, #16
 801609a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801609e:	bf04      	itt	eq
 80160a0:	021b      	lsleq	r3, r3, #8
 80160a2:	3008      	addeq	r0, #8
 80160a4:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80160a8:	bf04      	itt	eq
 80160aa:	011b      	lsleq	r3, r3, #4
 80160ac:	3004      	addeq	r0, #4
 80160ae:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80160b2:	bf04      	itt	eq
 80160b4:	009b      	lsleq	r3, r3, #2
 80160b6:	3002      	addeq	r0, #2
 80160b8:	2b00      	cmp	r3, #0
 80160ba:	db04      	blt.n	80160c6 <_ZN8touchgfx4clzuEm+0x3a>
 80160bc:	3001      	adds	r0, #1
 80160be:	4770      	bx	lr
 80160c0:	2000      	movs	r0, #0
 80160c2:	e7ea      	b.n	801609a <_ZN8touchgfx4clzuEm+0xe>
 80160c4:	2020      	movs	r0, #32
 80160c6:	4770      	bx	lr

080160c8 <_ZN8touchgfx7muldivuEmmmRm>:
 80160c8:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 80160cc:	460f      	mov	r7, r1
 80160ce:	4615      	mov	r5, r2
 80160d0:	461e      	mov	r6, r3
 80160d2:	4601      	mov	r1, r0
 80160d4:	b100      	cbz	r0, 80160d8 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 80160d6:	b927      	cbnz	r7, 80160e2 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 80160d8:	2000      	movs	r0, #0
 80160da:	6030      	str	r0, [r6, #0]
 80160dc:	b002      	add	sp, #8
 80160de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80160e2:	f7ff ffd3 	bl	801608c <_ZN8touchgfx4clzuEm>
 80160e6:	b980      	cbnz	r0, 801610a <_ZN8touchgfx7muldivuEmmmRm+0x42>
 80160e8:	4638      	mov	r0, r7
 80160ea:	f7ff ffcf 	bl	801608c <_ZN8touchgfx4clzuEm>
 80160ee:	2800      	cmp	r0, #0
 80160f0:	dd05      	ble.n	80160fe <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80160f2:	4633      	mov	r3, r6
 80160f4:	462a      	mov	r2, r5
 80160f6:	4638      	mov	r0, r7
 80160f8:	f7ff ffe6 	bl	80160c8 <_ZN8touchgfx7muldivuEmmmRm>
 80160fc:	e7ee      	b.n	80160dc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80160fe:	f04f 33ff 	mov.w	r3, #4294967295
 8016102:	6033      	str	r3, [r6, #0]
 8016104:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8016108:	e7e8      	b.n	80160dc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 801610a:	fa37 f800 	lsrs.w	r8, r7, r0
 801610e:	fb07 f301 	mul.w	r3, r7, r1
 8016112:	d105      	bne.n	8016120 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 8016114:	fbb3 f0f5 	udiv	r0, r3, r5
 8016118:	fb05 3510 	mls	r5, r5, r0, r3
 801611c:	6035      	str	r5, [r6, #0]
 801611e:	e7dd      	b.n	80160dc <_ZN8touchgfx7muldivuEmmmRm+0x14>
 8016120:	2301      	movs	r3, #1
 8016122:	fa01 fa00 	lsl.w	sl, r1, r0
 8016126:	fa03 f000 	lsl.w	r0, r3, r0
 801612a:	3801      	subs	r0, #1
 801612c:	462a      	mov	r2, r5
 801612e:	4633      	mov	r3, r6
 8016130:	4038      	ands	r0, r7
 8016132:	f7ff ffc9 	bl	80160c8 <_ZN8touchgfx7muldivuEmmmRm>
 8016136:	fbba f9f5 	udiv	r9, sl, r5
 801613a:	462a      	mov	r2, r5
 801613c:	4607      	mov	r7, r0
 801613e:	ab01      	add	r3, sp, #4
 8016140:	fb05 a119 	mls	r1, r5, r9, sl
 8016144:	4640      	mov	r0, r8
 8016146:	f7ff ffbf 	bl	80160c8 <_ZN8touchgfx7muldivuEmmmRm>
 801614a:	9b01      	ldr	r3, [sp, #4]
 801614c:	6832      	ldr	r2, [r6, #0]
 801614e:	fb08 f409 	mul.w	r4, r8, r9
 8016152:	441a      	add	r2, r3
 8016154:	fbb2 f3f5 	udiv	r3, r2, r5
 8016158:	441c      	add	r4, r3
 801615a:	443c      	add	r4, r7
 801615c:	4420      	add	r0, r4
 801615e:	fb05 2513 	mls	r5, r5, r3, r2
 8016162:	e7db      	b.n	801611c <_ZN8touchgfx7muldivuEmmmRm+0x54>

08016164 <_ZN8touchgfx6muldivElllRl>:
 8016164:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016166:	2800      	cmp	r0, #0
 8016168:	bfba      	itte	lt
 801616a:	4240      	neglt	r0, r0
 801616c:	f04f 34ff 	movlt.w	r4, #4294967295
 8016170:	2401      	movge	r4, #1
 8016172:	2900      	cmp	r1, #0
 8016174:	bfbc      	itt	lt
 8016176:	4249      	neglt	r1, r1
 8016178:	4264      	neglt	r4, r4
 801617a:	2a00      	cmp	r2, #0
 801617c:	bfb6      	itet	lt
 801617e:	4265      	neglt	r5, r4
 8016180:	4625      	movge	r5, r4
 8016182:	4252      	neglt	r2, r2
 8016184:	4288      	cmp	r0, r1
 8016186:	461e      	mov	r6, r3
 8016188:	bfc2      	ittt	gt
 801618a:	4603      	movgt	r3, r0
 801618c:	4608      	movgt	r0, r1
 801618e:	4619      	movgt	r1, r3
 8016190:	ab01      	add	r3, sp, #4
 8016192:	f7ff ff99 	bl	80160c8 <_ZN8touchgfx7muldivuEmmmRm>
 8016196:	9b01      	ldr	r3, [sp, #4]
 8016198:	4368      	muls	r0, r5
 801619a:	435c      	muls	r4, r3
 801619c:	6034      	str	r4, [r6, #0]
 801619e:	b002      	add	sp, #8
 80161a0:	bd70      	pop	{r4, r5, r6, pc}

080161a2 <_ZN8touchgfx6muldivElll>:
 80161a2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80161a4:	4606      	mov	r6, r0
 80161a6:	ab01      	add	r3, sp, #4
 80161a8:	460d      	mov	r5, r1
 80161aa:	4614      	mov	r4, r2
 80161ac:	f7ff ffda 	bl	8016164 <_ZN8touchgfx6muldivElllRl>
 80161b0:	2e00      	cmp	r6, #0
 80161b2:	db20      	blt.n	80161f6 <_ZN8touchgfx6muldivElll+0x54>
 80161b4:	bf14      	ite	ne
 80161b6:	2301      	movne	r3, #1
 80161b8:	2300      	moveq	r3, #0
 80161ba:	2d00      	cmp	r5, #0
 80161bc:	db1e      	blt.n	80161fc <_ZN8touchgfx6muldivElll+0x5a>
 80161be:	bf14      	ite	ne
 80161c0:	2201      	movne	r2, #1
 80161c2:	2200      	moveq	r2, #0
 80161c4:	2c00      	cmp	r4, #0
 80161c6:	fb03 f202 	mul.w	r2, r3, r2
 80161ca:	db1a      	blt.n	8016202 <_ZN8touchgfx6muldivElll+0x60>
 80161cc:	bf14      	ite	ne
 80161ce:	2301      	movne	r3, #1
 80161d0:	2300      	moveq	r3, #0
 80161d2:	4353      	muls	r3, r2
 80161d4:	2b01      	cmp	r3, #1
 80161d6:	d117      	bne.n	8016208 <_ZN8touchgfx6muldivElll+0x66>
 80161d8:	9b01      	ldr	r3, [sp, #4]
 80161da:	2c00      	cmp	r4, #0
 80161dc:	bfb8      	it	lt
 80161de:	4264      	neglt	r4, r4
 80161e0:	2b00      	cmp	r3, #0
 80161e2:	f104 0401 	add.w	r4, r4, #1
 80161e6:	bfb8      	it	lt
 80161e8:	425b      	neglt	r3, r3
 80161ea:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80161ee:	db00      	blt.n	80161f2 <_ZN8touchgfx6muldivElll+0x50>
 80161f0:	3001      	adds	r0, #1
 80161f2:	b002      	add	sp, #8
 80161f4:	bd70      	pop	{r4, r5, r6, pc}
 80161f6:	f04f 33ff 	mov.w	r3, #4294967295
 80161fa:	e7de      	b.n	80161ba <_ZN8touchgfx6muldivElll+0x18>
 80161fc:	f04f 32ff 	mov.w	r2, #4294967295
 8016200:	e7e0      	b.n	80161c4 <_ZN8touchgfx6muldivElll+0x22>
 8016202:	f04f 33ff 	mov.w	r3, #4294967295
 8016206:	e7e4      	b.n	80161d2 <_ZN8touchgfx6muldivElll+0x30>
 8016208:	3301      	adds	r3, #1
 801620a:	d1f2      	bne.n	80161f2 <_ZN8touchgfx6muldivElll+0x50>
 801620c:	9b01      	ldr	r3, [sp, #4]
 801620e:	2c00      	cmp	r4, #0
 8016210:	bfb8      	it	lt
 8016212:	4264      	neglt	r4, r4
 8016214:	2b00      	cmp	r3, #0
 8016216:	bfb8      	it	lt
 8016218:	425b      	neglt	r3, r3
 801621a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801621e:	bfc8      	it	gt
 8016220:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8016224:	e7e5      	b.n	80161f2 <_ZN8touchgfx6muldivElll+0x50>

08016226 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8016226:	2000      	movs	r0, #0
 8016228:	4770      	bx	lr

0801622a <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801622a:	2001      	movs	r0, #1
 801622c:	4770      	bx	lr

0801622e <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801622e:	2002      	movs	r0, #2
 8016230:	4770      	bx	lr

08016232 <_ZN8touchgfx6ScreenD1Ev>:
 8016232:	4770      	bx	lr

08016234 <_ZN8touchgfx12GestureEventD1Ev>:
 8016234:	4770      	bx	lr

08016236 <_ZN8touchgfx9DragEventD1Ev>:
 8016236:	4770      	bx	lr

08016238 <_ZN8touchgfx10ClickEventD1Ev>:
 8016238:	4770      	bx	lr

0801623a <_ZN8touchgfx10ClickEventD0Ev>:
 801623a:	b510      	push	{r4, lr}
 801623c:	210c      	movs	r1, #12
 801623e:	4604      	mov	r4, r0
 8016240:	f010 f86e 	bl	8026320 <_ZdlPvj>
 8016244:	4620      	mov	r0, r4
 8016246:	bd10      	pop	{r4, pc}

08016248 <_ZN8touchgfx9DragEventD0Ev>:
 8016248:	b510      	push	{r4, lr}
 801624a:	2110      	movs	r1, #16
 801624c:	4604      	mov	r4, r0
 801624e:	f010 f867 	bl	8026320 <_ZdlPvj>
 8016252:	4620      	mov	r0, r4
 8016254:	bd10      	pop	{r4, pc}

08016256 <_ZN8touchgfx12GestureEventD0Ev>:
 8016256:	b510      	push	{r4, lr}
 8016258:	210c      	movs	r1, #12
 801625a:	4604      	mov	r4, r0
 801625c:	f010 f860 	bl	8026320 <_ZdlPvj>
 8016260:	4620      	mov	r0, r4
 8016262:	bd10      	pop	{r4, pc}

08016264 <_ZN8touchgfx6ScreenD0Ev>:
 8016264:	b510      	push	{r4, lr}
 8016266:	213c      	movs	r1, #60	; 0x3c
 8016268:	4604      	mov	r4, r0
 801626a:	f010 f859 	bl	8026320 <_ZdlPvj>
 801626e:	4620      	mov	r0, r4
 8016270:	bd10      	pop	{r4, pc}
	...

08016274 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016274:	b530      	push	{r4, r5, lr}
 8016276:	460d      	mov	r5, r1
 8016278:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801627a:	b087      	sub	sp, #28
 801627c:	4604      	mov	r4, r0
 801627e:	b301      	cbz	r1, 80162c2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016280:	a801      	add	r0, sp, #4
 8016282:	f7ff fe3d 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016286:	892a      	ldrh	r2, [r5, #8]
 8016288:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801628c:	7928      	ldrb	r0, [r5, #4]
 801628e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016292:	f88d 0010 	strb.w	r0, [sp, #16]
 8016296:	1ad2      	subs	r2, r2, r3
 8016298:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801629a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801629c:	f8ad 1012 	strh.w	r1, [sp, #18]
 80162a0:	441a      	add	r2, r3
 80162a2:	896b      	ldrh	r3, [r5, #10]
 80162a4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 80162a8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80162ac:	1b5b      	subs	r3, r3, r5
 80162ae:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 80162b0:	442b      	add	r3, r5
 80162b2:	4d05      	ldr	r5, [pc, #20]	; (80162c8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 80162b4:	9503      	str	r5, [sp, #12]
 80162b6:	f8ad 3016 	strh.w	r3, [sp, #22]
 80162ba:	6803      	ldr	r3, [r0, #0]
 80162bc:	a903      	add	r1, sp, #12
 80162be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80162c0:	4798      	blx	r3
 80162c2:	b007      	add	sp, #28
 80162c4:	bd30      	pop	{r4, r5, pc}
 80162c6:	bf00      	nop
 80162c8:	0802a460 	.word	0x0802a460

080162cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 80162cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80162d0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 80162d2:	b08a      	sub	sp, #40	; 0x28
 80162d4:	4604      	mov	r4, r0
 80162d6:	460d      	mov	r5, r1
 80162d8:	b113      	cbz	r3, 80162e0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 80162da:	790b      	ldrb	r3, [r1, #4]
 80162dc:	2b00      	cmp	r3, #0
 80162de:	d044      	beq.n	801636a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80162e0:	f104 0804 	add.w	r8, r4, #4
 80162e4:	4641      	mov	r1, r8
 80162e6:	a803      	add	r0, sp, #12
 80162e8:	f7ff fe0a 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80162ec:	792b      	ldrb	r3, [r5, #4]
 80162ee:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80162f2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80162f6:	b983      	cbnz	r3, 801631a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80162f8:	892a      	ldrh	r2, [r5, #8]
 80162fa:	88e9      	ldrh	r1, [r5, #6]
 80162fc:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8016300:	1b92      	subs	r2, r2, r6
 8016302:	1bc9      	subs	r1, r1, r7
 8016304:	9301      	str	r3, [sp, #4]
 8016306:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801630a:	9300      	str	r3, [sp, #0]
 801630c:	b212      	sxth	r2, r2
 801630e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8016312:	b209      	sxth	r1, r1
 8016314:	4640      	mov	r0, r8
 8016316:	f7f9 f975 	bl	800f604 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801631a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801631c:	b329      	cbz	r1, 801636a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801631e:	a805      	add	r0, sp, #20
 8016320:	f7ff fdee 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016324:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8016328:	792b      	ldrb	r3, [r5, #4]
 801632a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801632c:	f88d 3020 	strb.w	r3, [sp, #32]
 8016330:	1abf      	subs	r7, r7, r2
 8016332:	88ea      	ldrh	r2, [r5, #6]
 8016334:	4417      	add	r7, r2
 8016336:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8016338:	4417      	add	r7, r2
 801633a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801633e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8016342:	1ab6      	subs	r6, r6, r2
 8016344:	892a      	ldrh	r2, [r5, #8]
 8016346:	4416      	add	r6, r2
 8016348:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801634a:	4416      	add	r6, r2
 801634c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016350:	4a07      	ldr	r2, [pc, #28]	; (8016370 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016352:	9207      	str	r2, [sp, #28]
 8016354:	2600      	movs	r6, #0
 8016356:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801635a:	6803      	ldr	r3, [r0, #0]
 801635c:	a907      	add	r1, sp, #28
 801635e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016360:	4798      	blx	r3
 8016362:	792b      	ldrb	r3, [r5, #4]
 8016364:	b10b      	cbz	r3, 801636a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016366:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801636a:	b00a      	add	sp, #40	; 0x28
 801636c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016370:	0802a438 	.word	0x0802a438

08016374 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016374:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016378:	460c      	mov	r4, r1
 801637a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801637c:	b088      	sub	sp, #32
 801637e:	4605      	mov	r5, r0
 8016380:	2900      	cmp	r1, #0
 8016382:	d06d      	beq.n	8016460 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016384:	4668      	mov	r0, sp
 8016386:	f7ff fdbb 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801638a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801638c:	88e3      	ldrh	r3, [r4, #6]
 801638e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016392:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016396:	440b      	add	r3, r1
 8016398:	b21b      	sxth	r3, r3
 801639a:	4543      	cmp	r3, r8
 801639c:	db31      	blt.n	8016402 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801639e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 80163a2:	44c4      	add	ip, r8
 80163a4:	fa0f fc8c 	sxth.w	ip, ip
 80163a8:	4563      	cmp	r3, ip
 80163aa:	da2a      	bge.n	8016402 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163ac:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 80163ae:	8926      	ldrh	r6, [r4, #8]
 80163b0:	4416      	add	r6, r2
 80163b2:	b236      	sxth	r6, r6
 80163b4:	42be      	cmp	r6, r7
 80163b6:	db24      	blt.n	8016402 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163b8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 80163bc:	4438      	add	r0, r7
 80163be:	b200      	sxth	r0, r0
 80163c0:	4286      	cmp	r6, r0
 80163c2:	da1e      	bge.n	8016402 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163c4:	8963      	ldrh	r3, [r4, #10]
 80163c6:	4419      	add	r1, r3
 80163c8:	b209      	sxth	r1, r1
 80163ca:	4541      	cmp	r1, r8
 80163cc:	db08      	blt.n	80163e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80163ce:	4561      	cmp	r1, ip
 80163d0:	da06      	bge.n	80163e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80163d2:	89a3      	ldrh	r3, [r4, #12]
 80163d4:	441a      	add	r2, r3
 80163d6:	b212      	sxth	r2, r2
 80163d8:	42ba      	cmp	r2, r7
 80163da:	db01      	blt.n	80163e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 80163dc:	4282      	cmp	r2, r0
 80163de:	db10      	blt.n	8016402 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 80163e0:	4b21      	ldr	r3, [pc, #132]	; (8016468 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 80163e2:	9304      	str	r3, [sp, #16]
 80163e4:	2302      	movs	r3, #2
 80163e6:	f88d 3014 	strb.w	r3, [sp, #20]
 80163ea:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80163ec:	2300      	movs	r3, #0
 80163ee:	f8ad 3016 	strh.w	r3, [sp, #22]
 80163f2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80163f6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80163fa:	6803      	ldr	r3, [r0, #0]
 80163fc:	a904      	add	r1, sp, #16
 80163fe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016400:	4798      	blx	r3
 8016402:	1d29      	adds	r1, r5, #4
 8016404:	a802      	add	r0, sp, #8
 8016406:	f7ff fd7b 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801640a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801640e:	88e0      	ldrh	r0, [r4, #6]
 8016410:	7921      	ldrb	r1, [r4, #4]
 8016412:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8016416:	8922      	ldrh	r2, [r4, #8]
 8016418:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801641a:	f88d 1014 	strb.w	r1, [sp, #20]
 801641e:	eba3 0808 	sub.w	r8, r3, r8
 8016422:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016426:	1bdf      	subs	r7, r3, r7
 8016428:	b2bb      	uxth	r3, r7
 801642a:	fa1f f888 	uxth.w	r8, r8
 801642e:	8967      	ldrh	r7, [r4, #10]
 8016430:	89a4      	ldrh	r4, [r4, #12]
 8016432:	4440      	add	r0, r8
 8016434:	4460      	add	r0, ip
 8016436:	441a      	add	r2, r3
 8016438:	44b8      	add	r8, r7
 801643a:	4423      	add	r3, r4
 801643c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8016440:	4433      	add	r3, r6
 8016442:	4432      	add	r2, r6
 8016444:	44e0      	add	r8, ip
 8016446:	4c09      	ldr	r4, [pc, #36]	; (801646c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8016448:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801644a:	9404      	str	r4, [sp, #16]
 801644c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016450:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016454:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016458:	6803      	ldr	r3, [r0, #0]
 801645a:	a904      	add	r1, sp, #16
 801645c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801645e:	4798      	blx	r3
 8016460:	b008      	add	sp, #32
 8016462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016466:	bf00      	nop
 8016468:	0802a438 	.word	0x0802a438
 801646c:	0802a44c 	.word	0x0802a44c

08016470 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016470:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016472:	4604      	mov	r4, r0
 8016474:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016478:	3201      	adds	r2, #1
 801647a:	d112      	bne.n	80164a2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801647c:	6803      	ldr	r3, [r0, #0]
 801647e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016482:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016486:	f8ad 1004 	strh.w	r1, [sp, #4]
 801648a:	2500      	movs	r5, #0
 801648c:	9500      	str	r5, [sp, #0]
 801648e:	466d      	mov	r5, sp
 8016490:	4629      	mov	r1, r5
 8016492:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016496:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016498:	4798      	blx	r3
 801649a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801649e:	e884 0003 	stmia.w	r4, {r0, r1}
 80164a2:	4620      	mov	r0, r4
 80164a4:	b003      	add	sp, #12
 80164a6:	bd30      	pop	{r4, r5, pc}

080164a8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80164a8:	b513      	push	{r0, r1, r4, lr}
 80164aa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80164ae:	3301      	adds	r3, #1
 80164b0:	4604      	mov	r4, r0
 80164b2:	d109      	bne.n	80164c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80164b4:	4601      	mov	r1, r0
 80164b6:	4668      	mov	r0, sp
 80164b8:	f7ff fd22 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80164bc:	f8bd 3000 	ldrh.w	r3, [sp]
 80164c0:	8423      	strh	r3, [r4, #32]
 80164c2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80164c6:	8463      	strh	r3, [r4, #34]	; 0x22
 80164c8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80164cc:	b002      	add	sp, #8
 80164ce:	bd10      	pop	{r4, pc}

080164d0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80164d0:	b513      	push	{r0, r1, r4, lr}
 80164d2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80164d6:	3301      	adds	r3, #1
 80164d8:	4604      	mov	r4, r0
 80164da:	d109      	bne.n	80164f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80164dc:	4601      	mov	r1, r0
 80164de:	4668      	mov	r0, sp
 80164e0:	f7ff fd0e 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80164e4:	f8bd 3000 	ldrh.w	r3, [sp]
 80164e8:	8423      	strh	r3, [r4, #32]
 80164ea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80164ee:	8463      	strh	r3, [r4, #34]	; 0x22
 80164f0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80164f4:	b002      	add	sp, #8
 80164f6:	bd10      	pop	{r4, pc}

080164f8 <_ZN8touchgfx6ScreenC1Ev>:
 80164f8:	b570      	push	{r4, r5, r6, lr}
 80164fa:	4605      	mov	r5, r0
 80164fc:	4b16      	ldr	r3, [pc, #88]	; (8016558 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80164fe:	f845 3b04 	str.w	r3, [r5], #4
 8016502:	2300      	movs	r3, #0
 8016504:	8103      	strh	r3, [r0, #8]
 8016506:	8143      	strh	r3, [r0, #10]
 8016508:	8183      	strh	r3, [r0, #12]
 801650a:	81c3      	strh	r3, [r0, #14]
 801650c:	8203      	strh	r3, [r0, #16]
 801650e:	8243      	strh	r3, [r0, #18]
 8016510:	8283      	strh	r3, [r0, #20]
 8016512:	82c3      	strh	r3, [r0, #22]
 8016514:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8016518:	6203      	str	r3, [r0, #32]
 801651a:	8483      	strh	r3, [r0, #36]	; 0x24
 801651c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801651e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8016522:	4a0e      	ldr	r2, [pc, #56]	; (801655c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8016524:	6343      	str	r3, [r0, #52]	; 0x34
 8016526:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801652a:	4b0d      	ldr	r3, [pc, #52]	; (8016560 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801652c:	6042      	str	r2, [r0, #4]
 801652e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8016532:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8016534:	4a0b      	ldr	r2, [pc, #44]	; (8016564 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8016536:	4604      	mov	r4, r0
 8016538:	2101      	movs	r1, #1
 801653a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801653e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8016542:	f9b2 1000 	ldrsh.w	r1, [r2]
 8016546:	4628      	mov	r0, r5
 8016548:	4798      	blx	r3
 801654a:	6863      	ldr	r3, [r4, #4]
 801654c:	4628      	mov	r0, r5
 801654e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016550:	4631      	mov	r1, r6
 8016552:	4798      	blx	r3
 8016554:	4620      	mov	r0, r4
 8016556:	bd70      	pop	{r4, r5, r6, pc}
 8016558:	0802a474 	.word	0x0802a474
 801655c:	08029c78 	.word	0x08029c78
 8016560:	2000ef12 	.word	0x2000ef12
 8016564:	2000ef10 	.word	0x2000ef10

08016568 <_ZN8touchgfx6Screen4drawEv>:
 8016568:	b507      	push	{r0, r1, r2, lr}
 801656a:	4b09      	ldr	r3, [pc, #36]	; (8016590 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801656c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016570:	4b08      	ldr	r3, [pc, #32]	; (8016594 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016572:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016576:	f9b3 3000 	ldrsh.w	r3, [r3]
 801657a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801657e:	6803      	ldr	r3, [r0, #0]
 8016580:	2100      	movs	r1, #0
 8016582:	9100      	str	r1, [sp, #0]
 8016584:	689b      	ldr	r3, [r3, #8]
 8016586:	4669      	mov	r1, sp
 8016588:	4798      	blx	r3
 801658a:	b003      	add	sp, #12
 801658c:	f85d fb04 	ldr.w	pc, [sp], #4
 8016590:	2000ef10 	.word	0x2000ef10
 8016594:	2000ef12 	.word	0x2000ef12

08016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016598:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801659c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80165a0:	2b00      	cmp	r3, #0
 80165a2:	b089      	sub	sp, #36	; 0x24
 80165a4:	4680      	mov	r8, r0
 80165a6:	460c      	mov	r4, r1
 80165a8:	4615      	mov	r5, r2
 80165aa:	dd0e      	ble.n	80165ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80165ac:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80165b0:	2b00      	cmp	r3, #0
 80165b2:	dd0a      	ble.n	80165ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80165b4:	4628      	mov	r0, r5
 80165b6:	f7ff ff5b 	bl	8016470 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80165ba:	4621      	mov	r1, r4
 80165bc:	f7fe fa3d 	bl	8014a3a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80165c0:	69eb      	ldr	r3, [r5, #28]
 80165c2:	b928      	cbnz	r0, 80165d0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80165c4:	461d      	mov	r5, r3
 80165c6:	2b00      	cmp	r3, #0
 80165c8:	d1f4      	bne.n	80165b4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80165ca:	b009      	add	sp, #36	; 0x24
 80165cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165d0:	ae04      	add	r6, sp, #16
 80165d2:	2b00      	cmp	r3, #0
 80165d4:	f000 80b5 	beq.w	8016742 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80165d8:	682b      	ldr	r3, [r5, #0]
 80165da:	4629      	mov	r1, r5
 80165dc:	68db      	ldr	r3, [r3, #12]
 80165de:	a802      	add	r0, sp, #8
 80165e0:	4798      	blx	r3
 80165e2:	4628      	mov	r0, r5
 80165e4:	f7ff ff60 	bl	80164a8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80165e8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 80165ec:	4407      	add	r7, r0
 80165ee:	4628      	mov	r0, r5
 80165f0:	f7ff ff6e 	bl	80164d0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80165f4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80165f8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80165fc:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016600:	4418      	add	r0, r3
 8016602:	4621      	mov	r1, r4
 8016604:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8016608:	f8ad 0012 	strh.w	r0, [sp, #18]
 801660c:	b23f      	sxth	r7, r7
 801660e:	4630      	mov	r0, r6
 8016610:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016614:	f8ad 7010 	strh.w	r7, [sp, #16]
 8016618:	f7f9 f8d8 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801661c:	4628      	mov	r0, r5
 801661e:	f7ff ff27 	bl	8016470 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016622:	4602      	mov	r2, r0
 8016624:	e896 0003 	ldmia.w	r6, {r0, r1}
 8016628:	ab06      	add	r3, sp, #24
 801662a:	e883 0003 	stmia.w	r3, {r0, r1}
 801662e:	4611      	mov	r1, r2
 8016630:	4618      	mov	r0, r3
 8016632:	f7f9 f8cb 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 8016636:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801663a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801663e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8016642:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8016646:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801664a:	4299      	cmp	r1, r3
 801664c:	d10b      	bne.n	8016666 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801664e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016652:	4552      	cmp	r2, sl
 8016654:	d107      	bne.n	8016666 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016656:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801665a:	455a      	cmp	r2, fp
 801665c:	d103      	bne.n	8016666 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801665e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016662:	454a      	cmp	r2, r9
 8016664:	d06d      	beq.n	8016742 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016666:	f1bb 0f00 	cmp.w	fp, #0
 801666a:	dd65      	ble.n	8016738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801666c:	f1b9 0f00 	cmp.w	r9, #0
 8016670:	dd62      	ble.n	8016738 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016672:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016676:	fa1f f08a 	uxth.w	r0, sl
 801667a:	4552      	cmp	r2, sl
 801667c:	9000      	str	r0, [sp, #0]
 801667e:	da12      	bge.n	80166a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016680:	9301      	str	r3, [sp, #4]
 8016682:	9b00      	ldr	r3, [sp, #0]
 8016684:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016688:	f8ad 2012 	strh.w	r2, [sp, #18]
 801668c:	1a9a      	subs	r2, r3, r2
 801668e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016692:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016696:	f8ad 2016 	strh.w	r2, [sp, #22]
 801669a:	69ea      	ldr	r2, [r5, #28]
 801669c:	4631      	mov	r1, r6
 801669e:	4640      	mov	r0, r8
 80166a0:	f7ff ff7a 	bl	8016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166a4:	9b01      	ldr	r3, [sp, #4]
 80166a6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80166aa:	429a      	cmp	r2, r3
 80166ac:	b29f      	uxth	r7, r3
 80166ae:	da0d      	bge.n	80166cc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80166b0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80166b4:	1aba      	subs	r2, r7, r2
 80166b6:	f8ad a012 	strh.w	sl, [sp, #18]
 80166ba:	f8ad 2014 	strh.w	r2, [sp, #20]
 80166be:	f8ad 9016 	strh.w	r9, [sp, #22]
 80166c2:	69ea      	ldr	r2, [r5, #28]
 80166c4:	4631      	mov	r1, r6
 80166c6:	4640      	mov	r0, r8
 80166c8:	f7ff ff66 	bl	8016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166cc:	8822      	ldrh	r2, [r4, #0]
 80166ce:	88a3      	ldrh	r3, [r4, #4]
 80166d0:	445f      	add	r7, fp
 80166d2:	4413      	add	r3, r2
 80166d4:	b29b      	uxth	r3, r3
 80166d6:	b2bf      	uxth	r7, r7
 80166d8:	b23a      	sxth	r2, r7
 80166da:	b219      	sxth	r1, r3
 80166dc:	4291      	cmp	r1, r2
 80166de:	dd0d      	ble.n	80166fc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 80166e0:	1bdb      	subs	r3, r3, r7
 80166e2:	f8ad 2010 	strh.w	r2, [sp, #16]
 80166e6:	f8ad a012 	strh.w	sl, [sp, #18]
 80166ea:	f8ad 3014 	strh.w	r3, [sp, #20]
 80166ee:	f8ad 9016 	strh.w	r9, [sp, #22]
 80166f2:	69ea      	ldr	r2, [r5, #28]
 80166f4:	4631      	mov	r1, r6
 80166f6:	4640      	mov	r0, r8
 80166f8:	f7ff ff4e 	bl	8016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80166fc:	88e2      	ldrh	r2, [r4, #6]
 80166fe:	8863      	ldrh	r3, [r4, #2]
 8016700:	4413      	add	r3, r2
 8016702:	9a00      	ldr	r2, [sp, #0]
 8016704:	444a      	add	r2, r9
 8016706:	b29b      	uxth	r3, r3
 8016708:	fa1f f982 	uxth.w	r9, r2
 801670c:	fa0f f289 	sxth.w	r2, r9
 8016710:	b219      	sxth	r1, r3
 8016712:	428a      	cmp	r2, r1
 8016714:	da15      	bge.n	8016742 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016716:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801671a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801671e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8016722:	eba3 0309 	sub.w	r3, r3, r9
 8016726:	f8ad 0010 	strh.w	r0, [sp, #16]
 801672a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801672e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8016732:	69ea      	ldr	r2, [r5, #28]
 8016734:	4631      	mov	r1, r6
 8016736:	e001      	b.n	801673c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8016738:	69ea      	ldr	r2, [r5, #28]
 801673a:	4621      	mov	r1, r4
 801673c:	4640      	mov	r0, r8
 801673e:	f7ff ff2b 	bl	8016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016742:	4628      	mov	r0, r5
 8016744:	f7ff fe94 	bl	8016470 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8016748:	6861      	ldr	r1, [r4, #4]
 801674a:	4602      	mov	r2, r0
 801674c:	6820      	ldr	r0, [r4, #0]
 801674e:	4633      	mov	r3, r6
 8016750:	c303      	stmia	r3!, {r0, r1}
 8016752:	4611      	mov	r1, r2
 8016754:	4630      	mov	r0, r6
 8016756:	f7f9 f839 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801675a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801675e:	2b00      	cmp	r3, #0
 8016760:	f77f af33 	ble.w	80165ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016764:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016768:	2b00      	cmp	r3, #0
 801676a:	f77f af2e 	ble.w	80165ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801676e:	4628      	mov	r0, r5
 8016770:	f7ff fe9a 	bl	80164a8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016774:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016778:	1a18      	subs	r0, r3, r0
 801677a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801677e:	4628      	mov	r0, r5
 8016780:	f7ff fea6 	bl	80164d0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016784:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016788:	1a18      	subs	r0, r3, r0
 801678a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801678e:	682b      	ldr	r3, [r5, #0]
 8016790:	4631      	mov	r1, r6
 8016792:	689b      	ldr	r3, [r3, #8]
 8016794:	4628      	mov	r0, r5
 8016796:	4798      	blx	r3
 8016798:	e717      	b.n	80165ca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801679a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801679a:	b570      	push	{r4, r5, r6, lr}
 801679c:	460c      	mov	r4, r1
 801679e:	b086      	sub	sp, #24
 80167a0:	1d06      	adds	r6, r0, #4
 80167a2:	2300      	movs	r3, #0
 80167a4:	4631      	mov	r1, r6
 80167a6:	4605      	mov	r5, r0
 80167a8:	a802      	add	r0, sp, #8
 80167aa:	9301      	str	r3, [sp, #4]
 80167ac:	f7ff fba8 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80167b0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80167b4:	8822      	ldrh	r2, [r4, #0]
 80167b6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80167ba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80167be:	f8ad 0014 	strh.w	r0, [sp, #20]
 80167c2:	1ad2      	subs	r2, r2, r3
 80167c4:	8863      	ldrh	r3, [r4, #2]
 80167c6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80167ca:	1a5b      	subs	r3, r3, r1
 80167cc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80167d0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80167d4:	aa01      	add	r2, sp, #4
 80167d6:	a904      	add	r1, sp, #16
 80167d8:	4630      	mov	r0, r6
 80167da:	f8ad 3012 	strh.w	r3, [sp, #18]
 80167de:	f7f9 f8cd 	bl	800f97c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 80167e2:	9a01      	ldr	r2, [sp, #4]
 80167e4:	b11a      	cbz	r2, 80167ee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 80167e6:	4621      	mov	r1, r4
 80167e8:	4628      	mov	r0, r5
 80167ea:	f7ff fed5 	bl	8016598 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80167ee:	b006      	add	sp, #24
 80167f0:	bd70      	pop	{r4, r5, r6, pc}

080167f2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80167f2:	b530      	push	{r4, r5, lr}
 80167f4:	4602      	mov	r2, r0
 80167f6:	4604      	mov	r4, r0
 80167f8:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80167fc:	b085      	sub	sp, #20
 80167fe:	460d      	mov	r5, r1
 8016800:	6851      	ldr	r1, [r2, #4]
 8016802:	466b      	mov	r3, sp
 8016804:	c303      	stmia	r3!, {r0, r1}
 8016806:	4629      	mov	r1, r5
 8016808:	4668      	mov	r0, sp
 801680a:	f7f8 ffdf 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801680e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016812:	b12b      	cbz	r3, 8016820 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016814:	4669      	mov	r1, sp
 8016816:	4620      	mov	r0, r4
 8016818:	f7ff ffbf 	bl	801679a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801681c:	b005      	add	sp, #20
 801681e:	bd30      	pop	{r4, r5, pc}
 8016820:	3404      	adds	r4, #4
 8016822:	4621      	mov	r1, r4
 8016824:	a802      	add	r0, sp, #8
 8016826:	f7ff fb6b 	bl	8015f00 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801682a:	f8bd 3000 	ldrh.w	r3, [sp]
 801682e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016832:	1a9b      	subs	r3, r3, r2
 8016834:	f8ad 3000 	strh.w	r3, [sp]
 8016838:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801683c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016840:	4669      	mov	r1, sp
 8016842:	1a9b      	subs	r3, r3, r2
 8016844:	4620      	mov	r0, r4
 8016846:	f8ad 3002 	strh.w	r3, [sp, #2]
 801684a:	f7f9 f85e 	bl	800f90a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801684e:	e7e5      	b.n	801681c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016850 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016850:	680a      	ldr	r2, [r1, #0]
 8016852:	460b      	mov	r3, r1
 8016854:	6992      	ldr	r2, [r2, #24]
 8016856:	1d01      	adds	r1, r0, #4
 8016858:	4618      	mov	r0, r3
 801685a:	4710      	bx	r2

0801685c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801685c:	4298      	cmp	r0, r3
 801685e:	d200      	bcs.n	8016862 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016860:	b913      	cbnz	r3, 8016868 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016862:	440a      	add	r2, r1
 8016864:	b210      	sxth	r0, r2
 8016866:	4770      	bx	lr
 8016868:	ee07 0a90 	vmov	s15, r0
 801686c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016870:	ee07 3a90 	vmov	s15, r3
 8016874:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016878:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801687c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016880:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016884:	ee07 2a90 	vmov	s15, r2
 8016888:	ee67 5a07 	vmul.f32	s11, s14, s14
 801688c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016890:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016894:	ee07 1a90 	vmov	s15, r1
 8016898:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801689c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80168a0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80168a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ac:	bfcc      	ite	gt
 80168ae:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80168b2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80168b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80168ba:	ee17 3a90 	vmov	r3, s15
 80168be:	b218      	sxth	r0, r3
 80168c0:	4770      	bx	lr

080168c2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80168c2:	4298      	cmp	r0, r3
 80168c4:	d200      	bcs.n	80168c8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80168c6:	b913      	cbnz	r3, 80168ce <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80168c8:	440a      	add	r2, r1
 80168ca:	b210      	sxth	r0, r2
 80168cc:	4770      	bx	lr
 80168ce:	ee07 2a90 	vmov	s15, r2
 80168d2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80168d6:	ee07 0a90 	vmov	s15, r0
 80168da:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80168de:	ee67 7a27 	vmul.f32	s15, s14, s15
 80168e2:	ee07 3a10 	vmov	s14, r3
 80168e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80168ea:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80168ee:	ee07 1a90 	vmov	s15, r1
 80168f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80168f6:	ee77 7a27 	vadd.f32	s15, s14, s15
 80168fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80168fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016906:	bfcc      	ite	gt
 8016908:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801690c:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016910:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016914:	ee17 3a90 	vmov	r3, s15
 8016918:	b218      	sxth	r0, r3
 801691a:	4770      	bx	lr

0801691c <_ZN8touchgfx12TextProviderC1Ev>:
 801691c:	b538      	push	{r3, r4, r5, lr}
 801691e:	2500      	movs	r5, #0
 8016920:	2302      	movs	r3, #2
 8016922:	4604      	mov	r4, r0
 8016924:	e9c0 5500 	strd	r5, r5, [r0]
 8016928:	7403      	strb	r3, [r0, #16]
 801692a:	6145      	str	r5, [r0, #20]
 801692c:	7605      	strb	r5, [r0, #24]
 801692e:	83c5      	strh	r5, [r0, #30]
 8016930:	8405      	strh	r5, [r0, #32]
 8016932:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016934:	8705      	strh	r5, [r0, #56]	; 0x38
 8016936:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016938:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801693c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016940:	220e      	movs	r2, #14
 8016942:	4629      	mov	r1, r5
 8016944:	304c      	adds	r0, #76	; 0x4c
 8016946:	f00f fda5 	bl	8026494 <memset>
 801694a:	2301      	movs	r3, #1
 801694c:	4620      	mov	r0, r4
 801694e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016952:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016956:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801695a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801695e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016962:	f7f1 fa5d 	bl	8007e20 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016966:	4620      	mov	r0, r4
 8016968:	bd38      	pop	{r3, r4, r5, pc}

0801696a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801696a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801696c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016970:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016972:	fab0 f080 	clz	r0, r0
 8016976:	0940      	lsrs	r0, r0, #5
 8016978:	4770      	bx	lr

0801697a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801697a:	b530      	push	{r4, r5, lr}
 801697c:	2500      	movs	r5, #0
 801697e:	2401      	movs	r4, #1
 8016980:	6843      	ldr	r3, [r0, #4]
 8016982:	b913      	cbnz	r3, 801698a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016984:	6803      	ldr	r3, [r0, #0]
 8016986:	b313      	cbz	r3, 80169ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016988:	6043      	str	r3, [r0, #4]
 801698a:	7e03      	ldrb	r3, [r0, #24]
 801698c:	b143      	cbz	r3, 80169a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801698e:	6943      	ldr	r3, [r0, #20]
 8016990:	b12b      	cbz	r3, 801699e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016992:	881a      	ldrh	r2, [r3, #0]
 8016994:	b11a      	cbz	r2, 801699e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016996:	1c9a      	adds	r2, r3, #2
 8016998:	6142      	str	r2, [r0, #20]
 801699a:	8818      	ldrh	r0, [r3, #0]
 801699c:	bd30      	pop	{r4, r5, pc}
 801699e:	7605      	strb	r5, [r0, #24]
 80169a0:	6843      	ldr	r3, [r0, #4]
 80169a2:	8819      	ldrh	r1, [r3, #0]
 80169a4:	b199      	cbz	r1, 80169ce <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80169a6:	1c9a      	adds	r2, r3, #2
 80169a8:	2902      	cmp	r1, #2
 80169aa:	6042      	str	r2, [r0, #4]
 80169ac:	d1f5      	bne.n	801699a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80169ae:	7c03      	ldrb	r3, [r0, #16]
 80169b0:	2b01      	cmp	r3, #1
 80169b2:	d8e5      	bhi.n	8016980 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80169b4:	1c5a      	adds	r2, r3, #1
 80169b6:	3302      	adds	r3, #2
 80169b8:	7402      	strb	r2, [r0, #16]
 80169ba:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80169be:	6143      	str	r3, [r0, #20]
 80169c0:	2b00      	cmp	r3, #0
 80169c2:	d0dd      	beq.n	8016980 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80169c4:	881b      	ldrh	r3, [r3, #0]
 80169c6:	2b00      	cmp	r3, #0
 80169c8:	d0da      	beq.n	8016980 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80169ca:	7604      	strb	r4, [r0, #24]
 80169cc:	e7d8      	b.n	8016980 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80169ce:	2000      	movs	r0, #0
 80169d0:	e7e4      	b.n	801699c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80169d2:	b430      	push	{r4, r5}
 80169d4:	6001      	str	r1, [r0, #0]
 80169d6:	2100      	movs	r1, #0
 80169d8:	6041      	str	r1, [r0, #4]
 80169da:	6815      	ldr	r5, [r2, #0]
 80169dc:	6085      	str	r5, [r0, #8]
 80169de:	6852      	ldr	r2, [r2, #4]
 80169e0:	6443      	str	r3, [r0, #68]	; 0x44
 80169e2:	9b02      	ldr	r3, [sp, #8]
 80169e4:	60c2      	str	r2, [r0, #12]
 80169e6:	7401      	strb	r1, [r0, #16]
 80169e8:	6141      	str	r1, [r0, #20]
 80169ea:	7601      	strb	r1, [r0, #24]
 80169ec:	8701      	strh	r1, [r0, #56]	; 0x38
 80169ee:	8401      	strh	r1, [r0, #32]
 80169f0:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 80169f4:	6483      	str	r3, [r0, #72]	; 0x48
 80169f6:	bc30      	pop	{r4, r5}
 80169f8:	f7f1 ba12 	b.w	8007e20 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080169fc <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80169fc:	b408      	push	{r3}
 80169fe:	b510      	push	{r4, lr}
 8016a00:	b085      	sub	sp, #20
 8016a02:	ac07      	add	r4, sp, #28
 8016a04:	f854 3b04 	ldr.w	r3, [r4], #4
 8016a08:	9300      	str	r3, [sp, #0]
 8016a0a:	4613      	mov	r3, r2
 8016a0c:	4622      	mov	r2, r4
 8016a0e:	9403      	str	r4, [sp, #12]
 8016a10:	f7ff ffdf 	bl	80169d2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016a14:	b005      	add	sp, #20
 8016a16:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016a1a:	b001      	add	sp, #4
 8016a1c:	4770      	bx	lr

08016a1e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016a1e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016a20:	4605      	mov	r5, r0
 8016a22:	4608      	mov	r0, r1
 8016a24:	b1e9      	cbz	r1, 8016a62 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016a26:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016a2a:	460b      	mov	r3, r1
 8016a2c:	f101 0708 	add.w	r7, r1, #8
 8016a30:	4622      	mov	r2, r4
 8016a32:	6818      	ldr	r0, [r3, #0]
 8016a34:	6859      	ldr	r1, [r3, #4]
 8016a36:	4626      	mov	r6, r4
 8016a38:	c603      	stmia	r6!, {r0, r1}
 8016a3a:	3308      	adds	r3, #8
 8016a3c:	42bb      	cmp	r3, r7
 8016a3e:	4634      	mov	r4, r6
 8016a40:	d1f7      	bne.n	8016a32 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016a42:	6818      	ldr	r0, [r3, #0]
 8016a44:	6030      	str	r0, [r6, #0]
 8016a46:	889b      	ldrh	r3, [r3, #4]
 8016a48:	80b3      	strh	r3, [r6, #4]
 8016a4a:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016a4e:	015b      	lsls	r3, r3, #5
 8016a50:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016a54:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016a58:	430b      	orrs	r3, r1
 8016a5a:	425b      	negs	r3, r3
 8016a5c:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016a60:	4610      	mov	r0, r2
 8016a62:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016a64 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016a64:	b538      	push	{r3, r4, r5, lr}
 8016a66:	460c      	mov	r4, r1
 8016a68:	6811      	ldr	r1, [r2, #0]
 8016a6a:	4610      	mov	r0, r2
 8016a6c:	68cd      	ldr	r5, [r1, #12]
 8016a6e:	4619      	mov	r1, r3
 8016a70:	47a8      	blx	r5
 8016a72:	2800      	cmp	r0, #0
 8016a74:	bf08      	it	eq
 8016a76:	4620      	moveq	r0, r4
 8016a78:	bd38      	pop	{r3, r4, r5, pc}
	...

08016a7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016a7e:	4604      	mov	r4, r0
 8016a80:	4615      	mov	r5, r2
 8016a82:	4608      	mov	r0, r1
 8016a84:	b93a      	cbnz	r2, 8016a96 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016a86:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016a8a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016a8e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016a92:	4628      	mov	r0, r5
 8016a94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016a96:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016a9a:	8893      	ldrh	r3, [r2, #4]
 8016a9c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016aa0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016aa4:	79ee      	ldrb	r6, [r5, #7]
 8016aa6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016aaa:	4316      	orrs	r6, r2
 8016aac:	19da      	adds	r2, r3, r7
 8016aae:	b291      	uxth	r1, r2
 8016ab0:	291d      	cmp	r1, #29
 8016ab2:	b2b7      	uxth	r7, r6
 8016ab4:	d87a      	bhi.n	8016bac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016ab6:	2201      	movs	r2, #1
 8016ab8:	408a      	lsls	r2, r1
 8016aba:	4975      	ldr	r1, [pc, #468]	; (8016c90 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016abc:	420a      	tst	r2, r1
 8016abe:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016ac2:	d12d      	bne.n	8016b20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016ac4:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016ac8:	d070      	beq.n	8016bac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016aca:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016ace:	462b      	mov	r3, r5
 8016ad0:	f105 0e08 	add.w	lr, r5, #8
 8016ad4:	4615      	mov	r5, r2
 8016ad6:	6818      	ldr	r0, [r3, #0]
 8016ad8:	6859      	ldr	r1, [r3, #4]
 8016ada:	4694      	mov	ip, r2
 8016adc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016ae0:	3308      	adds	r3, #8
 8016ae2:	4573      	cmp	r3, lr
 8016ae4:	4662      	mov	r2, ip
 8016ae6:	d1f6      	bne.n	8016ad6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016ae8:	6818      	ldr	r0, [r3, #0]
 8016aea:	f8cc 0000 	str.w	r0, [ip]
 8016aee:	889b      	ldrh	r3, [r3, #4]
 8016af0:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016af4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016af8:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016afc:	b2b3      	uxth	r3, r6
 8016afe:	1aca      	subs	r2, r1, r3
 8016b00:	b292      	uxth	r2, r2
 8016b02:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016b06:	10d2      	asrs	r2, r2, #3
 8016b08:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016b0c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016b10:	4302      	orrs	r2, r0
 8016b12:	1bcf      	subs	r7, r1, r7
 8016b14:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016b18:	1afb      	subs	r3, r7, r3
 8016b1a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016b1e:	e7b8      	b.n	8016a92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016b20:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016b22:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016b26:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016b28:	f640 6333 	movw	r3, #3635	; 0xe33
 8016b2c:	4299      	cmp	r1, r3
 8016b2e:	d110      	bne.n	8016b52 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016b30:	6803      	ldr	r3, [r0, #0]
 8016b32:	68db      	ldr	r3, [r3, #12]
 8016b34:	4798      	blx	r3
 8016b36:	7b41      	ldrb	r1, [r0, #13]
 8016b38:	00cb      	lsls	r3, r1, #3
 8016b3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016b3e:	7a03      	ldrb	r3, [r0, #8]
 8016b40:	0648      	lsls	r0, r1, #25
 8016b42:	ea43 0302 	orr.w	r3, r3, r2
 8016b46:	bf44      	itt	mi
 8016b48:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016b4c:	b21b      	sxthmi	r3, r3
 8016b4e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016b52:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016b56:	443b      	add	r3, r7
 8016b58:	4433      	add	r3, r6
 8016b5a:	b29b      	uxth	r3, r3
 8016b5c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016b60:	462a      	mov	r2, r5
 8016b62:	f105 0c08 	add.w	ip, r5, #8
 8016b66:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016b6a:	4635      	mov	r5, r6
 8016b6c:	6810      	ldr	r0, [r2, #0]
 8016b6e:	6851      	ldr	r1, [r2, #4]
 8016b70:	4637      	mov	r7, r6
 8016b72:	c703      	stmia	r7!, {r0, r1}
 8016b74:	3208      	adds	r2, #8
 8016b76:	4562      	cmp	r2, ip
 8016b78:	463e      	mov	r6, r7
 8016b7a:	d1f7      	bne.n	8016b6c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016b7c:	6810      	ldr	r0, [r2, #0]
 8016b7e:	6038      	str	r0, [r7, #0]
 8016b80:	8892      	ldrh	r2, [r2, #4]
 8016b82:	80ba      	strh	r2, [r7, #4]
 8016b84:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016b88:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016b8c:	10db      	asrs	r3, r3, #3
 8016b8e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016b92:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016b96:	4313      	orrs	r3, r2
 8016b98:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016b9c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016ba0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016ba4:	1a9b      	subs	r3, r3, r2
 8016ba6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016baa:	e772      	b.n	8016a92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016bac:	f023 0204 	bic.w	r2, r3, #4
 8016bb0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016bb4:	428a      	cmp	r2, r1
 8016bb6:	d003      	beq.n	8016bc0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016bb8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016bbc:	4293      	cmp	r3, r2
 8016bbe:	d120      	bne.n	8016c02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016bc0:	3b01      	subs	r3, #1
 8016bc2:	4602      	mov	r2, r0
 8016bc4:	b29b      	uxth	r3, r3
 8016bc6:	4629      	mov	r1, r5
 8016bc8:	4620      	mov	r0, r4
 8016bca:	f7ff ff4b 	bl	8016a64 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016bce:	7b41      	ldrb	r1, [r0, #13]
 8016bd0:	00cb      	lsls	r3, r1, #3
 8016bd2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016bd6:	7a03      	ldrb	r3, [r0, #8]
 8016bd8:	0649      	lsls	r1, r1, #25
 8016bda:	ea43 0302 	orr.w	r3, r3, r2
 8016bde:	bf44      	itt	mi
 8016be0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016be4:	b21b      	sxthmi	r3, r3
 8016be6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016bea:	7b6b      	ldrb	r3, [r5, #13]
 8016bec:	7aaa      	ldrb	r2, [r5, #10]
 8016bee:	005b      	lsls	r3, r3, #1
 8016bf0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016bf4:	4313      	orrs	r3, r2
 8016bf6:	115a      	asrs	r2, r3, #5
 8016bf8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016bfc:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016c00:	e036      	b.n	8016c70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016c02:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016c06:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016c0a:	7a2a      	ldrb	r2, [r5, #8]
 8016c0c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016c10:	ea42 0201 	orr.w	r2, r2, r1
 8016c14:	bf1c      	itt	ne
 8016c16:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016c1a:	b212      	sxthne	r2, r2
 8016c1c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016c20:	f640 6109 	movw	r1, #3593	; 0xe09
 8016c24:	f023 0210 	bic.w	r2, r3, #16
 8016c28:	428a      	cmp	r2, r1
 8016c2a:	d003      	beq.n	8016c34 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016c2c:	f640 6213 	movw	r2, #3603	; 0xe13
 8016c30:	4293      	cmp	r3, r2
 8016c32:	d12a      	bne.n	8016c8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016c34:	7b6e      	ldrb	r6, [r5, #13]
 8016c36:	0076      	lsls	r6, r6, #1
 8016c38:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016c3c:	7aae      	ldrb	r6, [r5, #10]
 8016c3e:	4316      	orrs	r6, r2
 8016c40:	f640 6213 	movw	r2, #3603	; 0xe13
 8016c44:	4293      	cmp	r3, r2
 8016c46:	bf18      	it	ne
 8016c48:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016c4c:	4602      	mov	r2, r0
 8016c4e:	bf14      	ite	ne
 8016c50:	b29b      	uxthne	r3, r3
 8016c52:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016c56:	4629      	mov	r1, r5
 8016c58:	4620      	mov	r0, r4
 8016c5a:	f7ff ff03 	bl	8016a64 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016c5e:	7b43      	ldrb	r3, [r0, #13]
 8016c60:	7a82      	ldrb	r2, [r0, #10]
 8016c62:	005b      	lsls	r3, r3, #1
 8016c64:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016c68:	4313      	orrs	r3, r2
 8016c6a:	1af6      	subs	r6, r6, r3
 8016c6c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016c70:	7b69      	ldrb	r1, [r5, #13]
 8016c72:	00cb      	lsls	r3, r1, #3
 8016c74:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016c78:	7a2b      	ldrb	r3, [r5, #8]
 8016c7a:	4313      	orrs	r3, r2
 8016c7c:	064a      	lsls	r2, r1, #25
 8016c7e:	bf44      	itt	mi
 8016c80:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016c84:	b21b      	sxthmi	r3, r3
 8016c86:	1bdb      	subs	r3, r3, r7
 8016c88:	e747      	b.n	8016b1a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016c8a:	2300      	movs	r3, #0
 8016c8c:	e7b6      	b.n	8016bfc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016c8e:	bf00      	nop
 8016c90:	3fc00079 	.word	0x3fc00079

08016c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016c94:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016c98:	4604      	mov	r4, r0
 8016c9a:	b942      	cbnz	r2, 8016cae <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016c9c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016ca0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016ca4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016ca8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016cac:	e047      	b.n	8016d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016cae:	7b51      	ldrb	r1, [r2, #13]
 8016cb0:	8893      	ldrh	r3, [r2, #4]
 8016cb2:	010d      	lsls	r5, r1, #4
 8016cb4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016cb8:	79d5      	ldrb	r5, [r2, #7]
 8016cba:	4305      	orrs	r5, r0
 8016cbc:	2d04      	cmp	r5, #4
 8016cbe:	bfcc      	ite	gt
 8016cc0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016cc4:	f04f 0e01 	movle.w	lr, #1
 8016cc8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016ccc:	f200 80ab 	bhi.w	8016e26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016cd0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016cd4:	4283      	cmp	r3, r0
 8016cd6:	d216      	bcs.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cd8:	f240 605b 	movw	r0, #1627	; 0x65b
 8016cdc:	4283      	cmp	r3, r0
 8016cde:	d859      	bhi.n	8016d94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016ce0:	f240 6057 	movw	r0, #1623	; 0x657
 8016ce4:	4283      	cmp	r3, r0
 8016ce6:	d20e      	bcs.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ce8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016cec:	d24a      	bcs.n	8016d84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016cee:	f240 604e 	movw	r0, #1614	; 0x64e
 8016cf2:	4283      	cmp	r3, r0
 8016cf4:	d207      	bcs.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016cf6:	f240 601a 	movw	r0, #1562	; 0x61a
 8016cfa:	4283      	cmp	r3, r0
 8016cfc:	d02a      	beq.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016cfe:	d821      	bhi.n	8016d44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016d00:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016d04:	d35b      	bcc.n	8016dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d06:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016d0a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016d0e:	f040 80d0 	bne.w	8016eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016d12:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016d16:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016d1a:	f040 80ca 	bne.w	8016eb2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016d1e:	00cb      	lsls	r3, r1, #3
 8016d20:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016d24:	7a13      	ldrb	r3, [r2, #8]
 8016d26:	0649      	lsls	r1, r1, #25
 8016d28:	ea43 0300 	orr.w	r3, r3, r0
 8016d2c:	bf44      	itt	mi
 8016d2e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d32:	b21b      	sxthmi	r3, r3
 8016d34:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016d38:	1b5d      	subs	r5, r3, r5
 8016d3a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016d3e:	4610      	mov	r0, r2
 8016d40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016d44:	f240 604b 	movw	r0, #1611	; 0x64b
 8016d48:	4283      	cmp	r3, r0
 8016d4a:	d338      	bcc.n	8016dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016d4c:	f240 604c 	movw	r0, #1612	; 0x64c
 8016d50:	4283      	cmp	r3, r0
 8016d52:	d9d8      	bls.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d54:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8016d58:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8016d5c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016d60:	f040 80f2 	bne.w	8016f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016d64:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016d68:	f040 80ee 	bne.w	8016f48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016d6c:	00cb      	lsls	r3, r1, #3
 8016d6e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016d72:	7a13      	ldrb	r3, [r2, #8]
 8016d74:	064e      	lsls	r6, r1, #25
 8016d76:	ea43 0300 	orr.w	r3, r3, r0
 8016d7a:	bf44      	itt	mi
 8016d7c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016d80:	b21b      	sxthmi	r3, r3
 8016d82:	e7d9      	b.n	8016d38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016d84:	f240 6054 	movw	r0, #1620	; 0x654
 8016d88:	4283      	cmp	r3, r0
 8016d8a:	d8e3      	bhi.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d8c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016d90:	d9e0      	bls.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016d92:	e7b8      	b.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d94:	f240 6074 	movw	r0, #1652	; 0x674
 8016d98:	4283      	cmp	r3, r0
 8016d9a:	d0b4      	beq.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016d9c:	d82d      	bhi.n	8016dfa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8016d9e:	f240 605e 	movw	r0, #1630	; 0x65e
 8016da2:	4283      	cmp	r3, r0
 8016da4:	d804      	bhi.n	8016db0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016da6:	f240 605d 	movw	r0, #1629	; 0x65d
 8016daa:	4283      	cmp	r3, r0
 8016dac:	d3d2      	bcc.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016dae:	e7aa      	b.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016db0:	f240 605f 	movw	r0, #1631	; 0x65f
 8016db4:	4283      	cmp	r3, r0
 8016db6:	d0cd      	beq.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016db8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8016dbc:	d0a3      	beq.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016dbe:	00cb      	lsls	r3, r1, #3
 8016dc0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016dc4:	7a13      	ldrb	r3, [r2, #8]
 8016dc6:	0649      	lsls	r1, r1, #25
 8016dc8:	ea43 0300 	orr.w	r3, r3, r0
 8016dcc:	bf44      	itt	mi
 8016dce:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016dd2:	b21b      	sxthmi	r3, r3
 8016dd4:	1b5d      	subs	r5, r3, r5
 8016dd6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016dda:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016dde:	7b53      	ldrb	r3, [r2, #13]
 8016de0:	015b      	lsls	r3, r3, #5
 8016de2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016de6:	7993      	ldrb	r3, [r2, #6]
 8016de8:	430b      	orrs	r3, r1
 8016dea:	005b      	lsls	r3, r3, #1
 8016dec:	2105      	movs	r1, #5
 8016dee:	fb93 f3f1 	sdiv	r3, r3, r1
 8016df2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8016df6:	440b      	add	r3, r1
 8016df8:	e756      	b.n	8016ca8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016dfa:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8016dfe:	4283      	cmp	r3, r0
 8016e00:	d809      	bhi.n	8016e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8016e02:	f240 60df 	movw	r0, #1759	; 0x6df
 8016e06:	4283      	cmp	r3, r0
 8016e08:	f4bf af7d 	bcs.w	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e0c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8016e10:	2b05      	cmp	r3, #5
 8016e12:	d8d4      	bhi.n	8016dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016e14:	e777      	b.n	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e16:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8016e1a:	4283      	cmp	r3, r0
 8016e1c:	d09a      	beq.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e1e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8016e22:	4283      	cmp	r3, r0
 8016e24:	e7ca      	b.n	8016dbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8016e26:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8016e2a:	d22b      	bcs.n	8016e84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016e2c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8016e30:	4283      	cmp	r3, r0
 8016e32:	d28f      	bcs.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e34:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8016e38:	4283      	cmp	r3, r0
 8016e3a:	d816      	bhi.n	8016e6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016e3c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8016e40:	4283      	cmp	r3, r0
 8016e42:	f4bf af60 	bcs.w	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e46:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8016e4a:	4283      	cmp	r3, r0
 8016e4c:	d80a      	bhi.n	8016e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016e4e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8016e52:	4283      	cmp	r3, r0
 8016e54:	f4bf af57 	bcs.w	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e58:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8016e5c:	4283      	cmp	r3, r0
 8016e5e:	f43f af79 	beq.w	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e62:	e7ac      	b.n	8016dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016e64:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8016e68:	e7f8      	b.n	8016e5c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016e6a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8016e6e:	4283      	cmp	r3, r0
 8016e70:	d802      	bhi.n	8016e78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016e72:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8016e76:	e798      	b.n	8016daa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016e78:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8016e7c:	4283      	cmp	r3, r0
 8016e7e:	f47f af42 	bne.w	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016e82:	e767      	b.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e84:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8016e88:	4283      	cmp	r3, r0
 8016e8a:	f43f af63 	beq.w	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016e8e:	d802      	bhi.n	8016e96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016e90:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8016e94:	e7f2      	b.n	8016e7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016e96:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8016e9a:	4283      	cmp	r3, r0
 8016e9c:	d805      	bhi.n	8016eaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8016e9e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8016ea2:	4283      	cmp	r3, r0
 8016ea4:	f4ff af2f 	bcc.w	8016d06 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016ea8:	e754      	b.n	8016d54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016eaa:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8016eae:	4283      	cmp	r3, r0
 8016eb0:	e7af      	b.n	8016e12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016eb2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016eb6:	4617      	mov	r7, r2
 8016eb8:	f102 0808 	add.w	r8, r2, #8
 8016ebc:	4666      	mov	r6, ip
 8016ebe:	6838      	ldr	r0, [r7, #0]
 8016ec0:	6879      	ldr	r1, [r7, #4]
 8016ec2:	46e6      	mov	lr, ip
 8016ec4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8016ec8:	3708      	adds	r7, #8
 8016eca:	4547      	cmp	r7, r8
 8016ecc:	46f4      	mov	ip, lr
 8016ece:	d1f6      	bne.n	8016ebe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016ed0:	6838      	ldr	r0, [r7, #0]
 8016ed2:	f8ce 0000 	str.w	r0, [lr]
 8016ed6:	88b9      	ldrh	r1, [r7, #4]
 8016ed8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8016edc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016ee0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016ee4:	d009      	beq.n	8016efa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8016ee6:	7b51      	ldrb	r1, [r2, #13]
 8016ee8:	7992      	ldrb	r2, [r2, #6]
 8016eea:	0149      	lsls	r1, r1, #5
 8016eec:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016ef0:	4311      	orrs	r1, r2
 8016ef2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016ef6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016efa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016efe:	b2ad      	uxth	r5, r5
 8016f00:	d00d      	beq.n	8016f1e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8016f02:	442b      	add	r3, r5
 8016f04:	b29b      	uxth	r3, r3
 8016f06:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016f0a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016f0e:	10db      	asrs	r3, r3, #3
 8016f10:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016f14:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016f18:	4313      	orrs	r3, r2
 8016f1a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016f1e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016f22:	00cb      	lsls	r3, r1, #3
 8016f24:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f28:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016f2c:	064f      	lsls	r7, r1, #25
 8016f2e:	ea43 0302 	orr.w	r3, r3, r2
 8016f32:	bf44      	itt	mi
 8016f34:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f38:	b21b      	sxthmi	r3, r3
 8016f3a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016f3e:	1b5b      	subs	r3, r3, r5
 8016f40:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016f44:	4632      	mov	r2, r6
 8016f46:	e6fa      	b.n	8016d3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016f48:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8016f4c:	4617      	mov	r7, r2
 8016f4e:	f102 0908 	add.w	r9, r2, #8
 8016f52:	4666      	mov	r6, ip
 8016f54:	6838      	ldr	r0, [r7, #0]
 8016f56:	6879      	ldr	r1, [r7, #4]
 8016f58:	46e0      	mov	r8, ip
 8016f5a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016f5e:	3708      	adds	r7, #8
 8016f60:	454f      	cmp	r7, r9
 8016f62:	46c4      	mov	ip, r8
 8016f64:	d1f6      	bne.n	8016f54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8016f66:	6838      	ldr	r0, [r7, #0]
 8016f68:	f8c8 0000 	str.w	r0, [r8]
 8016f6c:	88b9      	ldrh	r1, [r7, #4]
 8016f6e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016f72:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8016f76:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016f7a:	d009      	beq.n	8016f90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016f7c:	7b51      	ldrb	r1, [r2, #13]
 8016f7e:	7992      	ldrb	r2, [r2, #6]
 8016f80:	0149      	lsls	r1, r1, #5
 8016f82:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8016f86:	4311      	orrs	r1, r2
 8016f88:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016f8c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8016f90:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016f94:	d00e      	beq.n	8016fb4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8016f96:	eba3 030e 	sub.w	r3, r3, lr
 8016f9a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016f9e:	b29b      	uxth	r3, r3
 8016fa0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016fa4:	10db      	asrs	r3, r3, #3
 8016fa6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016faa:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016fae:	4313      	orrs	r3, r2
 8016fb0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016fb4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8016fb8:	00cb      	lsls	r3, r1, #3
 8016fba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016fbe:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8016fc2:	0648      	lsls	r0, r1, #25
 8016fc4:	ea43 0302 	orr.w	r3, r3, r2
 8016fc8:	bf44      	itt	mi
 8016fca:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fce:	b21b      	sxthmi	r3, r3
 8016fd0:	1b5d      	subs	r5, r3, r5
 8016fd2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fd6:	e7b5      	b.n	8016f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08016fd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8016fd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016fdc:	461e      	mov	r6, r3
 8016fde:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016fe0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8016fe4:	4604      	mov	r4, r0
 8016fe6:	4617      	mov	r7, r2
 8016fe8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8016fec:	f7f0 fed6 	bl	8007d9c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016ff0:	4605      	mov	r5, r0
 8016ff2:	b918      	cbnz	r0, 8016ffc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8016ff4:	6030      	str	r0, [r6, #0]
 8016ff6:	4628      	mov	r0, r5
 8016ff8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016ffc:	683b      	ldr	r3, [r7, #0]
 8016ffe:	4601      	mov	r1, r0
 8017000:	68db      	ldr	r3, [r3, #12]
 8017002:	4638      	mov	r0, r7
 8017004:	4798      	blx	r3
 8017006:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801700a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801700e:	4602      	mov	r2, r0
 8017010:	6030      	str	r0, [r6, #0]
 8017012:	d213      	bcs.n	801703c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8017014:	4643      	mov	r3, r8
 8017016:	4639      	mov	r1, r7
 8017018:	4620      	mov	r0, r4
 801701a:	f7ff fe3b 	bl	8016c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801701e:	6030      	str	r0, [r6, #0]
 8017020:	6833      	ldr	r3, [r6, #0]
 8017022:	b143      	cbz	r3, 8017036 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8017024:	7b5a      	ldrb	r2, [r3, #13]
 8017026:	7a9b      	ldrb	r3, [r3, #10]
 8017028:	0052      	lsls	r2, r2, #1
 801702a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801702e:	4313      	orrs	r3, r2
 8017030:	bf0c      	ite	eq
 8017032:	2301      	moveq	r3, #1
 8017034:	2300      	movne	r3, #0
 8017036:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801703a:	e7dc      	b.n	8016ff6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801703c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017040:	b29b      	uxth	r3, r3
 8017042:	2b7f      	cmp	r3, #127	; 0x7f
 8017044:	d804      	bhi.n	8017050 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8017046:	4639      	mov	r1, r7
 8017048:	4620      	mov	r0, r4
 801704a:	f7ff fd17 	bl	8016a7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801704e:	e7e6      	b.n	801701e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017050:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017054:	2b00      	cmp	r3, #0
 8017056:	d0e3      	beq.n	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017058:	f640 1302 	movw	r3, #2306	; 0x902
 801705c:	429d      	cmp	r5, r3
 801705e:	d1df      	bne.n	8017020 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017060:	4601      	mov	r1, r0
 8017062:	4620      	mov	r0, r4
 8017064:	f7ff fcdb 	bl	8016a1e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017068:	e7d9      	b.n	801701e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801706a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801706a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801706e:	461e      	mov	r6, r3
 8017070:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017072:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017076:	4604      	mov	r4, r0
 8017078:	4617      	mov	r7, r2
 801707a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801707e:	f7f0 fe8d 	bl	8007d9c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017082:	4605      	mov	r5, r0
 8017084:	b918      	cbnz	r0, 801708e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8017086:	6030      	str	r0, [r6, #0]
 8017088:	4628      	mov	r0, r5
 801708a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801708e:	683b      	ldr	r3, [r7, #0]
 8017090:	4601      	mov	r1, r0
 8017092:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8017096:	4638      	mov	r0, r7
 8017098:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801709c:	47c8      	blx	r9
 801709e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80170a2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80170a6:	4602      	mov	r2, r0
 80170a8:	6030      	str	r0, [r6, #0]
 80170aa:	d213      	bcs.n	80170d4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80170ac:	4643      	mov	r3, r8
 80170ae:	4639      	mov	r1, r7
 80170b0:	4620      	mov	r0, r4
 80170b2:	f7ff fdef 	bl	8016c94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80170b6:	6030      	str	r0, [r6, #0]
 80170b8:	6833      	ldr	r3, [r6, #0]
 80170ba:	b143      	cbz	r3, 80170ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80170bc:	7b5a      	ldrb	r2, [r3, #13]
 80170be:	7a9b      	ldrb	r3, [r3, #10]
 80170c0:	0052      	lsls	r2, r2, #1
 80170c2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80170c6:	4313      	orrs	r3, r2
 80170c8:	bf0c      	ite	eq
 80170ca:	2301      	moveq	r3, #1
 80170cc:	2300      	movne	r3, #0
 80170ce:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80170d2:	e7d9      	b.n	8017088 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80170d4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80170d8:	b29b      	uxth	r3, r3
 80170da:	2b7f      	cmp	r3, #127	; 0x7f
 80170dc:	d804      	bhi.n	80170e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80170de:	4639      	mov	r1, r7
 80170e0:	4620      	mov	r0, r4
 80170e2:	f7ff fccb 	bl	8016a7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80170e6:	e7e6      	b.n	80170b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80170e8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80170ec:	2b00      	cmp	r3, #0
 80170ee:	d0e3      	beq.n	80170b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80170f0:	f640 1302 	movw	r3, #2306	; 0x902
 80170f4:	429d      	cmp	r5, r3
 80170f6:	d1df      	bne.n	80170b8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80170f8:	4601      	mov	r1, r0
 80170fa:	4620      	mov	r0, r4
 80170fc:	f7ff fc8f 	bl	8016a1e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017100:	e7d9      	b.n	80170b6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08017102 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8017102:	b510      	push	{r4, lr}
 8017104:	4604      	mov	r4, r0
 8017106:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801710a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801710c:	b1f1      	cbz	r1, 801714c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801710e:	2b0a      	cmp	r3, #10
 8017110:	d02f      	beq.n	8017172 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017112:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8017114:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8017118:	3901      	subs	r1, #1
 801711a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801711c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8017120:	1c51      	adds	r1, r2, #1
 8017122:	b289      	uxth	r1, r1
 8017124:	2901      	cmp	r1, #1
 8017126:	bf84      	itt	hi
 8017128:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801712c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801712e:	f103 0201 	add.w	r2, r3, #1
 8017132:	8722      	strh	r2, [r4, #56]	; 0x38
 8017134:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017136:	bf98      	it	ls
 8017138:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801713a:	4413      	add	r3, r2
 801713c:	b29b      	uxth	r3, r3
 801713e:	2b09      	cmp	r3, #9
 8017140:	bf88      	it	hi
 8017142:	3b0a      	subhi	r3, #10
 8017144:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017148:	8458      	strh	r0, [r3, #34]	; 0x22
 801714a:	e7dc      	b.n	8017106 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801714c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801714e:	2b0a      	cmp	r3, #10
 8017150:	d00f      	beq.n	8017172 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017152:	4620      	mov	r0, r4
 8017154:	f7ff fc11 	bl	801697a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017158:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801715a:	1c5a      	adds	r2, r3, #1
 801715c:	8722      	strh	r2, [r4, #56]	; 0x38
 801715e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017160:	4413      	add	r3, r2
 8017162:	b29b      	uxth	r3, r3
 8017164:	2b09      	cmp	r3, #9
 8017166:	bf88      	it	hi
 8017168:	3b0a      	subhi	r3, #10
 801716a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801716e:	8458      	strh	r0, [r3, #34]	; 0x22
 8017170:	e7ec      	b.n	801714c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017172:	bd10      	pop	{r4, pc}

08017174 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8017174:	b538      	push	{r3, r4, r5, lr}
 8017176:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017178:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801717c:	4604      	mov	r4, r0
 801717e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017180:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8017182:	3a01      	subs	r2, #1
 8017184:	8702      	strh	r2, [r0, #56]	; 0x38
 8017186:	1c5a      	adds	r2, r3, #1
 8017188:	b292      	uxth	r2, r2
 801718a:	2a09      	cmp	r2, #9
 801718c:	bf86      	itte	hi
 801718e:	3b09      	subhi	r3, #9
 8017190:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8017192:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8017194:	f7ff ffb5 	bl	8017102 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017198:	8c23      	ldrh	r3, [r4, #32]
 801719a:	2b01      	cmp	r3, #1
 801719c:	bf9c      	itt	ls
 801719e:	3301      	addls	r3, #1
 80171a0:	8423      	strhls	r3, [r4, #32]
 80171a2:	8be3      	ldrh	r3, [r4, #30]
 80171a4:	b90b      	cbnz	r3, 80171aa <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80171a6:	2302      	movs	r3, #2
 80171a8:	83e3      	strh	r3, [r4, #30]
 80171aa:	8be3      	ldrh	r3, [r4, #30]
 80171ac:	3b01      	subs	r3, #1
 80171ae:	b29b      	uxth	r3, r3
 80171b0:	83e3      	strh	r3, [r4, #30]
 80171b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171b6:	4628      	mov	r0, r5
 80171b8:	8365      	strh	r5, [r4, #26]
 80171ba:	bd38      	pop	{r3, r4, r5, pc}

080171bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80171bc:	428a      	cmp	r2, r1
 80171be:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80171c2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80171c4:	d931      	bls.n	801722a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80171c6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80171c8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80171cc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80171d0:	19ee      	adds	r6, r5, r7
 80171d2:	1a54      	subs	r4, r2, r1
 80171d4:	3e01      	subs	r6, #1
 80171d6:	fa1f fe84 	uxth.w	lr, r4
 80171da:	b2b4      	uxth	r4, r6
 80171dc:	eba4 090e 	sub.w	r9, r4, lr
 80171e0:	fa1f f989 	uxth.w	r9, r9
 80171e4:	2c09      	cmp	r4, #9
 80171e6:	4626      	mov	r6, r4
 80171e8:	bf88      	it	hi
 80171ea:	f1a4 060a 	subhi.w	r6, r4, #10
 80171ee:	f1bc 0f00 	cmp.w	ip, #0
 80171f2:	bf08      	it	eq
 80171f4:	f04f 0c02 	moveq.w	ip, #2
 80171f8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80171fc:	f10c 3cff 	add.w	ip, ip, #4294967295
 8017200:	fa1f fc8c 	uxth.w	ip, ip
 8017204:	3c01      	subs	r4, #1
 8017206:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801720a:	b2a4      	uxth	r4, r4
 801720c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8017210:	454c      	cmp	r4, r9
 8017212:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8017216:	d1e5      	bne.n	80171e4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8017218:	eba5 050e 	sub.w	r5, r5, lr
 801721c:	eb0e 0408 	add.w	r4, lr, r8
 8017220:	8705      	strh	r5, [r0, #56]	; 0x38
 8017222:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8017226:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801722a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801722c:	1a64      	subs	r4, r4, r1
 801722e:	4439      	add	r1, r7
 8017230:	b289      	uxth	r1, r1
 8017232:	2909      	cmp	r1, #9
 8017234:	bf88      	it	hi
 8017236:	390a      	subhi	r1, #10
 8017238:	8704      	strh	r4, [r0, #56]	; 0x38
 801723a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801723c:	250a      	movs	r5, #10
 801723e:	b18a      	cbz	r2, 8017264 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8017240:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8017242:	3a01      	subs	r2, #1
 8017244:	b292      	uxth	r2, r2
 8017246:	3101      	adds	r1, #1
 8017248:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801724c:	8701      	strh	r1, [r0, #56]	; 0x38
 801724e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017250:	b901      	cbnz	r1, 8017254 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8017252:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017254:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017256:	3901      	subs	r1, #1
 8017258:	b289      	uxth	r1, r1
 801725a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801725c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017260:	844c      	strh	r4, [r1, #34]	; 0x22
 8017262:	e7ec      	b.n	801723e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017264:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017268:	f7ff bf4b 	b.w	8017102 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801726c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801726c:	b570      	push	{r4, r5, r6, lr}
 801726e:	2500      	movs	r5, #0
 8017270:	4295      	cmp	r5, r2
 8017272:	d011      	beq.n	8017298 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017274:	8bc4      	ldrh	r4, [r0, #30]
 8017276:	f831 6b02 	ldrh.w	r6, [r1], #2
 801727a:	4414      	add	r4, r2
 801727c:	3c01      	subs	r4, #1
 801727e:	1b64      	subs	r4, r4, r5
 8017280:	b2a4      	uxth	r4, r4
 8017282:	2c01      	cmp	r4, #1
 8017284:	bf88      	it	hi
 8017286:	3c02      	subhi	r4, #2
 8017288:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801728c:	8b64      	ldrh	r4, [r4, #26]
 801728e:	42b4      	cmp	r4, r6
 8017290:	d117      	bne.n	80172c2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8017292:	3501      	adds	r5, #1
 8017294:	b2ad      	uxth	r5, r5
 8017296:	e7eb      	b.n	8017270 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017298:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801729c:	2400      	movs	r4, #0
 801729e:	4413      	add	r3, r2
 80172a0:	b2a2      	uxth	r2, r4
 80172a2:	429a      	cmp	r2, r3
 80172a4:	da0f      	bge.n	80172c6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80172a6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80172a8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80172ac:	4432      	add	r2, r6
 80172ae:	b292      	uxth	r2, r2
 80172b0:	2a09      	cmp	r2, #9
 80172b2:	bf88      	it	hi
 80172b4:	3a0a      	subhi	r2, #10
 80172b6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80172ba:	3401      	adds	r4, #1
 80172bc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80172be:	42aa      	cmp	r2, r5
 80172c0:	d0ee      	beq.n	80172a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80172c2:	2000      	movs	r0, #0
 80172c4:	bd70      	pop	{r4, r5, r6, pc}
 80172c6:	2001      	movs	r0, #1
 80172c8:	e7fc      	b.n	80172c4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080172ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80172ca:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80172ce:	4605      	mov	r5, r0
 80172d0:	4616      	mov	r6, r2
 80172d2:	1c8c      	adds	r4, r1, #2
 80172d4:	8809      	ldrh	r1, [r1, #0]
 80172d6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80172da:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80172de:	42b3      	cmp	r3, r6
 80172e0:	d124      	bne.n	801732c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80172e2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80172e6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80172ea:	f001 070f 	and.w	r7, r1, #15
 80172ee:	f8cd 8000 	str.w	r8, [sp]
 80172f2:	464b      	mov	r3, r9
 80172f4:	4652      	mov	r2, sl
 80172f6:	4621      	mov	r1, r4
 80172f8:	4628      	mov	r0, r5
 80172fa:	f7ff ffb7 	bl	801726c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80172fe:	4683      	mov	fp, r0
 8017300:	b168      	cbz	r0, 801731e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8017302:	eb0a 0109 	add.w	r1, sl, r9
 8017306:	4441      	add	r1, r8
 8017308:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801730c:	463a      	mov	r2, r7
 801730e:	4649      	mov	r1, r9
 8017310:	4628      	mov	r0, r5
 8017312:	f7ff ff53 	bl	80171bc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8017316:	4658      	mov	r0, fp
 8017318:	b003      	add	sp, #12
 801731a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801731e:	eb07 010a 	add.w	r1, r7, sl
 8017322:	4449      	add	r1, r9
 8017324:	4441      	add	r1, r8
 8017326:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801732a:	e7d2      	b.n	80172d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801732c:	f04f 0b00 	mov.w	fp, #0
 8017330:	e7f1      	b.n	8017316 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08017332 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8017332:	b570      	push	{r4, r5, r6, lr}
 8017334:	8810      	ldrh	r0, [r2, #0]
 8017336:	4298      	cmp	r0, r3
 8017338:	d817      	bhi.n	801736a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801733a:	1e48      	subs	r0, r1, #1
 801733c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8017340:	4298      	cmp	r0, r3
 8017342:	d312      	bcc.n	801736a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8017344:	2400      	movs	r4, #0
 8017346:	428c      	cmp	r4, r1
 8017348:	d20f      	bcs.n	801736a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801734a:	1860      	adds	r0, r4, r1
 801734c:	1040      	asrs	r0, r0, #1
 801734e:	0085      	lsls	r5, r0, #2
 8017350:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017354:	42b3      	cmp	r3, r6
 8017356:	d902      	bls.n	801735e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017358:	3001      	adds	r0, #1
 801735a:	b284      	uxth	r4, r0
 801735c:	e7f3      	b.n	8017346 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801735e:	d201      	bcs.n	8017364 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017360:	b281      	uxth	r1, r0
 8017362:	e7f0      	b.n	8017346 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017364:	442a      	add	r2, r5
 8017366:	8850      	ldrh	r0, [r2, #2]
 8017368:	bd70      	pop	{r4, r5, r6, pc}
 801736a:	2000      	movs	r0, #0
 801736c:	e7fc      	b.n	8017368 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801736e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801736e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017372:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017374:	886f      	ldrh	r7, [r5, #2]
 8017376:	4604      	mov	r4, r0
 8017378:	087f      	lsrs	r7, r7, #1
 801737a:	260b      	movs	r6, #11
 801737c:	3e01      	subs	r6, #1
 801737e:	d013      	beq.n	80173a8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017380:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017382:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017386:	462a      	mov	r2, r5
 8017388:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801738c:	4639      	mov	r1, r7
 801738e:	4643      	mov	r3, r8
 8017390:	4620      	mov	r0, r4
 8017392:	f7ff ffce 	bl	8017332 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017396:	b138      	cbz	r0, 80173a8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017398:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801739c:	4642      	mov	r2, r8
 801739e:	4620      	mov	r0, r4
 80173a0:	f7ff ff93 	bl	80172ca <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80173a4:	2800      	cmp	r0, #0
 80173a6:	d1e9      	bne.n	801737c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80173a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080173ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80173ac:	b570      	push	{r4, r5, r6, lr}
 80173ae:	694a      	ldr	r2, [r1, #20]
 80173b0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80173b2:	684b      	ldr	r3, [r1, #4]
 80173b4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80173b6:	1b54      	subs	r4, r2, r5
 80173b8:	f000 8106 	beq.w	80175c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80173bc:	1b9b      	subs	r3, r3, r6
 80173be:	d003      	beq.n	80173c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80173c0:	4363      	muls	r3, r4
 80173c2:	2210      	movs	r2, #16
 80173c4:	fb93 f3f2 	sdiv	r3, r3, r2
 80173c8:	680c      	ldr	r4, [r1, #0]
 80173ca:	698a      	ldr	r2, [r1, #24]
 80173cc:	1b65      	subs	r5, r4, r5
 80173ce:	f000 80fd 	beq.w	80175cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80173d2:	1b92      	subs	r2, r2, r6
 80173d4:	d003      	beq.n	80173de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80173d6:	436a      	muls	r2, r5
 80173d8:	2410      	movs	r4, #16
 80173da:	fb92 f2f4 	sdiv	r2, r2, r4
 80173de:	1a9b      	subs	r3, r3, r2
 80173e0:	ee07 3a90 	vmov	s15, r3
 80173e4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8017608 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80173e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80173ec:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80173f0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80173f4:	460a      	mov	r2, r1
 80173f6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80173fa:	4603      	mov	r3, r0
 80173fc:	f100 040c 	add.w	r4, r0, #12
 8017400:	eeb1 6a43 	vneg.f32	s12, s6
 8017404:	edd2 7a02 	vldr	s15, [r2, #8]
 8017408:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801740c:	3214      	adds	r2, #20
 801740e:	ece3 6a01 	vstmia	r3!, {s13}
 8017412:	ed52 7a02 	vldr	s15, [r2, #-8]
 8017416:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801741a:	429c      	cmp	r4, r3
 801741c:	edc3 7a02 	vstr	s15, [r3, #8]
 8017420:	ed52 7a01 	vldr	s15, [r2, #-4]
 8017424:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017428:	edc3 7a05 	vstr	s15, [r3, #20]
 801742c:	d1ea      	bne.n	8017404 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801742e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017430:	698b      	ldr	r3, [r1, #24]
 8017432:	edd0 4a02 	vldr	s9, [r0, #8]
 8017436:	edd0 3a00 	vldr	s7, [r0]
 801743a:	edd0 6a01 	vldr	s13, [r0, #4]
 801743e:	ed90 5a05 	vldr	s10, [r0, #20]
 8017442:	ed90 2a03 	vldr	s4, [r0, #12]
 8017446:	edd0 5a04 	vldr	s11, [r0, #16]
 801744a:	ed90 1a07 	vldr	s2, [r0, #28]
 801744e:	edd0 2a06 	vldr	s5, [r0, #24]
 8017452:	1a9b      	subs	r3, r3, r2
 8017454:	ee07 3a90 	vmov	s15, r3
 8017458:	684b      	ldr	r3, [r1, #4]
 801745a:	1a9b      	subs	r3, r3, r2
 801745c:	ee07 3a10 	vmov	s14, r3
 8017460:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017464:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017468:	ee67 7a84 	vmul.f32	s15, s15, s8
 801746c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017470:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017474:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017478:	ee27 7a04 	vmul.f32	s14, s14, s8
 801747c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017480:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017484:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017488:	ee67 7a83 	vmul.f32	s15, s15, s6
 801748c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017490:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017492:	694a      	ldr	r2, [r1, #20]
 8017494:	1b13      	subs	r3, r2, r4
 8017496:	ee07 3a10 	vmov	s14, r3
 801749a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801749e:	680b      	ldr	r3, [r1, #0]
 80174a0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174a4:	1b1b      	subs	r3, r3, r4
 80174a6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80174aa:	ee07 3a10 	vmov	s14, r3
 80174ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174b2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174b6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80174ba:	ee64 4a86 	vmul.f32	s9, s9, s12
 80174be:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80174c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80174c4:	698b      	ldr	r3, [r1, #24]
 80174c6:	1a9b      	subs	r3, r3, r2
 80174c8:	ee06 3a90 	vmov	s13, r3
 80174cc:	684b      	ldr	r3, [r1, #4]
 80174ce:	1a9b      	subs	r3, r3, r2
 80174d0:	ee07 3a10 	vmov	s14, r3
 80174d4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80174d8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80174dc:	ee66 6a84 	vmul.f32	s13, s13, s8
 80174e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80174e4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80174e8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80174ec:	ee66 6a83 	vmul.f32	s13, s13, s6
 80174f0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80174f4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80174f6:	694a      	ldr	r2, [r1, #20]
 80174f8:	1b13      	subs	r3, r2, r4
 80174fa:	ee07 3a10 	vmov	s14, r3
 80174fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017502:	680b      	ldr	r3, [r1, #0]
 8017504:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017508:	1b1b      	subs	r3, r3, r4
 801750a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801750e:	ee07 3a10 	vmov	s14, r3
 8017512:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017516:	ee27 7a04 	vmul.f32	s14, s14, s8
 801751a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801751e:	edd0 5a08 	vldr	s11, [r0, #32]
 8017522:	ee25 5a06 	vmul.f32	s10, s10, s12
 8017526:	ee31 1a65 	vsub.f32	s2, s2, s11
 801752a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801752e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017530:	698b      	ldr	r3, [r1, #24]
 8017532:	1a9b      	subs	r3, r3, r2
 8017534:	ee07 3a10 	vmov	s14, r3
 8017538:	684b      	ldr	r3, [r1, #4]
 801753a:	1a9b      	subs	r3, r3, r2
 801753c:	ee01 3a90 	vmov	s3, r3
 8017540:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017544:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8017548:	ee27 7a04 	vmul.f32	s14, s14, s8
 801754c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017550:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017554:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017558:	eea1 7a21 	vfma.f32	s14, s2, s3
 801755c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017560:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017564:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017566:	694a      	ldr	r2, [r1, #20]
 8017568:	1b13      	subs	r3, r2, r4
 801756a:	ee03 3a10 	vmov	s6, r3
 801756e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017572:	680b      	ldr	r3, [r1, #0]
 8017574:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017578:	1b1b      	subs	r3, r3, r4
 801757a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801757e:	ee03 3a10 	vmov	s6, r3
 8017582:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017586:	ee23 4a04 	vmul.f32	s8, s6, s8
 801758a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801758e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017592:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017596:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801759a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801759e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80175a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175a6:	dd13      	ble.n	80175d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80175a8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80175ac:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80175b0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80175b2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80175b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80175ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175be:	dd15      	ble.n	80175ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80175c0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80175c4:	6403      	str	r3, [r0, #64]	; 0x40
 80175c6:	bd70      	pop	{r4, r5, r6, pc}
 80175c8:	4623      	mov	r3, r4
 80175ca:	e6fd      	b.n	80173c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80175cc:	462a      	mov	r2, r5
 80175ce:	e706      	b.n	80173de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80175d0:	d502      	bpl.n	80175d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80175d2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80175d6:	e7e9      	b.n	80175ac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80175d8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80175dc:	eea3 2a85 	vfma.f32	s4, s7, s10
 80175e0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80175e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80175e8:	dade      	bge.n	80175a8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80175ea:	e7f2      	b.n	80175d2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80175ec:	d502      	bpl.n	80175f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80175ee:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80175f2:	e7e7      	b.n	80175c4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80175f4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80175f8:	eee3 4a86 	vfma.f32	s9, s7, s12
 80175fc:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8017600:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017604:	dadc      	bge.n	80175c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8017606:	e7f2      	b.n	80175ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8017608:	3d800000 	.word	0x3d800000

0801760c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801760c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017610:	2714      	movs	r7, #20
 8017612:	435f      	muls	r7, r3
 8017614:	eb02 0c07 	add.w	ip, r2, r7
 8017618:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801761c:	f115 0e0f 	adds.w	lr, r5, #15
 8017620:	f100 80a2 	bmi.w	8017768 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8017624:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8017628:	9c08      	ldr	r4, [sp, #32]
 801762a:	f8c0 e014 	str.w	lr, [r0, #20]
 801762e:	2614      	movs	r6, #20
 8017630:	4366      	muls	r6, r4
 8017632:	eb02 0806 	add.w	r8, r2, r6
 8017636:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801763a:	f115 040f 	adds.w	r4, r5, #15
 801763e:	f100 809f 	bmi.w	8017780 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8017642:	1124      	asrs	r4, r4, #4
 8017644:	eba4 040e 	sub.w	r4, r4, lr
 8017648:	6184      	str	r4, [r0, #24]
 801764a:	2c00      	cmp	r4, #0
 801764c:	f000 808a 	beq.w	8017764 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017650:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017654:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017658:	5995      	ldr	r5, [r2, r6]
 801765a:	eba4 0809 	sub.w	r8, r4, r9
 801765e:	59d4      	ldr	r4, [r2, r7]
 8017660:	eba5 0a04 	sub.w	sl, r5, r4
 8017664:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017668:	fb0e fe05 	mul.w	lr, lr, r5
 801766c:	fb0a ee19 	mls	lr, sl, r9, lr
 8017670:	fb08 e404 	mla	r4, r8, r4, lr
 8017674:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017678:	3c01      	subs	r4, #1
 801767a:	19a4      	adds	r4, r4, r6
 801767c:	f100 808c 	bmi.w	8017798 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017680:	fb94 fef6 	sdiv	lr, r4, r6
 8017684:	f8c0 e000 	str.w	lr, [r0]
 8017688:	fb06 441e 	mls	r4, r6, lr, r4
 801768c:	6104      	str	r4, [r0, #16]
 801768e:	2d00      	cmp	r5, #0
 8017690:	f2c0 8095 	blt.w	80177be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017694:	fb95 f4f6 	sdiv	r4, r5, r6
 8017698:	6044      	str	r4, [r0, #4]
 801769a:	fb06 5514 	mls	r5, r6, r4, r5
 801769e:	6085      	str	r5, [r0, #8]
 80176a0:	60c6      	str	r6, [r0, #12]
 80176a2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80176a6:	6945      	ldr	r5, [r0, #20]
 80176a8:	59d2      	ldr	r2, [r2, r7]
 80176aa:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80177e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80176ae:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80176b2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80176b6:	ee07 4a10 	vmov	s14, r4
 80176ba:	6804      	ldr	r4, [r0, #0]
 80176bc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80176c0:	ee07 2a90 	vmov	s15, r2
 80176c4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80176c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80176cc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80176d0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80176d4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176d8:	edd3 6a00 	vldr	s13, [r3]
 80176dc:	eee6 6a07 	vfma.f32	s13, s12, s14
 80176e0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80176e4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80176e8:	edc0 6a07 	vstr	s13, [r0, #28]
 80176ec:	edd0 6a01 	vldr	s13, [r0, #4]
 80176f0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80176f4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80176f8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80176fc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8017700:	ed80 6a08 	vstr	s12, [r0, #32]
 8017704:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8017706:	6242      	str	r2, [r0, #36]	; 0x24
 8017708:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801770c:	ed93 6a03 	vldr	s12, [r3, #12]
 8017710:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017714:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017718:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801771c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8017720:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8017724:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8017728:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801772c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8017730:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017732:	6302      	str	r2, [r0, #48]	; 0x30
 8017734:	ed93 6a06 	vldr	s12, [r3, #24]
 8017738:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801773c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017740:	eeb0 7a46 	vmov.f32	s14, s12
 8017744:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8017748:	eea6 7a27 	vfma.f32	s14, s12, s15
 801774c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017750:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017754:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017758:	eee6 7a87 	vfma.f32	s15, s13, s14
 801775c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017760:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017762:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017768:	f1c5 0501 	rsb	r5, r5, #1
 801776c:	f015 050f 	ands.w	r5, r5, #15
 8017770:	bf18      	it	ne
 8017772:	2501      	movne	r5, #1
 8017774:	2410      	movs	r4, #16
 8017776:	fb9e fef4 	sdiv	lr, lr, r4
 801777a:	ebae 0e05 	sub.w	lr, lr, r5
 801777e:	e753      	b.n	8017628 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017780:	f1c5 0501 	rsb	r5, r5, #1
 8017784:	f015 050f 	ands.w	r5, r5, #15
 8017788:	bf18      	it	ne
 801778a:	2501      	movne	r5, #1
 801778c:	f04f 0910 	mov.w	r9, #16
 8017790:	fb94 f4f9 	sdiv	r4, r4, r9
 8017794:	1b64      	subs	r4, r4, r5
 8017796:	e755      	b.n	8017644 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017798:	4264      	negs	r4, r4
 801779a:	fb94 fef6 	sdiv	lr, r4, r6
 801779e:	f1ce 0800 	rsb	r8, lr, #0
 80177a2:	fb06 441e 	mls	r4, r6, lr, r4
 80177a6:	f8c0 8000 	str.w	r8, [r0]
 80177aa:	6104      	str	r4, [r0, #16]
 80177ac:	2c00      	cmp	r4, #0
 80177ae:	f43f af6e 	beq.w	801768e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80177b2:	ea6f 0e0e 	mvn.w	lr, lr
 80177b6:	f8c0 e000 	str.w	lr, [r0]
 80177ba:	1b34      	subs	r4, r6, r4
 80177bc:	e766      	b.n	801768c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80177be:	426d      	negs	r5, r5
 80177c0:	fb95 f4f6 	sdiv	r4, r5, r6
 80177c4:	f1c4 0e00 	rsb	lr, r4, #0
 80177c8:	fb06 5514 	mls	r5, r6, r4, r5
 80177cc:	f8c0 e004 	str.w	lr, [r0, #4]
 80177d0:	6085      	str	r5, [r0, #8]
 80177d2:	2d00      	cmp	r5, #0
 80177d4:	f43f af64 	beq.w	80176a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80177d8:	43e4      	mvns	r4, r4
 80177da:	6044      	str	r4, [r0, #4]
 80177dc:	1b75      	subs	r5, r6, r5
 80177de:	e75e      	b.n	801769e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80177e0:	3d800000 	.word	0x3d800000

080177e4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80177e4:	4602      	mov	r2, r0
 80177e6:	b148      	cbz	r0, 80177fc <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80177e8:	2300      	movs	r3, #0
 80177ea:	b298      	uxth	r0, r3
 80177ec:	3301      	adds	r3, #1
 80177ee:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 80177f2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 80177f6:	2900      	cmp	r1, #0
 80177f8:	d1f7      	bne.n	80177ea <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 80177fa:	4770      	bx	lr
 80177fc:	4770      	bx	lr

080177fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 80177fe:	b530      	push	{r4, r5, lr}
 8017800:	4604      	mov	r4, r0
 8017802:	b159      	cbz	r1, 801781c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017804:	b148      	cbz	r0, 801781a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017806:	2300      	movs	r3, #0
 8017808:	b298      	uxth	r0, r3
 801780a:	4282      	cmp	r2, r0
 801780c:	d905      	bls.n	801781a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801780e:	5ccd      	ldrb	r5, [r1, r3]
 8017810:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017814:	3301      	adds	r3, #1
 8017816:	2d00      	cmp	r5, #0
 8017818:	d1f6      	bne.n	8017808 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801781a:	bd30      	pop	{r4, r5, pc}
 801781c:	4608      	mov	r0, r1
 801781e:	e7fc      	b.n	801781a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017820 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017820:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017822:	b08b      	sub	sp, #44	; 0x2c
 8017824:	468c      	mov	ip, r1
 8017826:	2100      	movs	r1, #0
 8017828:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801782c:	4604      	mov	r4, r0
 801782e:	261f      	movs	r6, #31
 8017830:	af01      	add	r7, sp, #4
 8017832:	fb94 fef3 	sdiv	lr, r4, r3
 8017836:	fb03 441e 	mls	r4, r3, lr, r4
 801783a:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 801783e:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017842:	b2ec      	uxtb	r4, r5
 8017844:	2d09      	cmp	r5, #9
 8017846:	bfd4      	ite	le
 8017848:	3430      	addle	r4, #48	; 0x30
 801784a:	3457      	addgt	r4, #87	; 0x57
 801784c:	b2e4      	uxtb	r4, r4
 801784e:	55bc      	strb	r4, [r7, r6]
 8017850:	4674      	mov	r4, lr
 8017852:	1e71      	subs	r1, r6, #1
 8017854:	b974      	cbnz	r4, 8017874 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017856:	2800      	cmp	r0, #0
 8017858:	da05      	bge.n	8017866 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 801785a:	ab0a      	add	r3, sp, #40	; 0x28
 801785c:	4419      	add	r1, r3
 801785e:	232d      	movs	r3, #45	; 0x2d
 8017860:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017864:	1eb1      	subs	r1, r6, #2
 8017866:	3101      	adds	r1, #1
 8017868:	4439      	add	r1, r7
 801786a:	4660      	mov	r0, ip
 801786c:	f7ff ffc7 	bl	80177fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017870:	b00b      	add	sp, #44	; 0x2c
 8017872:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017874:	460e      	mov	r6, r1
 8017876:	e7dc      	b.n	8017832 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017878 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017878:	b5f0      	push	{r4, r5, r6, r7, lr}
 801787a:	b08b      	sub	sp, #44	; 0x2c
 801787c:	468c      	mov	ip, r1
 801787e:	2100      	movs	r1, #0
 8017880:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017884:	ae01      	add	r6, sp, #4
 8017886:	211f      	movs	r1, #31
 8017888:	fbb0 f7f3 	udiv	r7, r0, r3
 801788c:	fb03 0517 	mls	r5, r3, r7, r0
 8017890:	b2ec      	uxtb	r4, r5
 8017892:	2d09      	cmp	r5, #9
 8017894:	bfd4      	ite	le
 8017896:	3430      	addle	r4, #48	; 0x30
 8017898:	3457      	addgt	r4, #87	; 0x57
 801789a:	b2e4      	uxtb	r4, r4
 801789c:	558c      	strb	r4, [r1, r6]
 801789e:	4638      	mov	r0, r7
 80178a0:	1e4c      	subs	r4, r1, #1
 80178a2:	b92f      	cbnz	r7, 80178b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 80178a4:	4431      	add	r1, r6
 80178a6:	4660      	mov	r0, ip
 80178a8:	f7ff ffa9 	bl	80177fe <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80178ac:	b00b      	add	sp, #44	; 0x2c
 80178ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80178b0:	4621      	mov	r1, r4
 80178b2:	e7e9      	b.n	8017888 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

080178b4 <_ZN8touchgfx7Unicode4itoaElPtti>:
 80178b4:	b410      	push	{r4}
 80178b6:	b131      	cbz	r1, 80178c6 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80178b8:	1e9c      	subs	r4, r3, #2
 80178ba:	2c22      	cmp	r4, #34	; 0x22
 80178bc:	d803      	bhi.n	80178c6 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 80178be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80178c2:	f7ff bfad 	b.w	8017820 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 80178c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80178ca:	4770      	bx	lr

080178cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80178cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80178d0:	4691      	mov	r9, r2
 80178d2:	b085      	sub	sp, #20
 80178d4:	6802      	ldr	r2, [r0, #0]
 80178d6:	9201      	str	r2, [sp, #4]
 80178d8:	4688      	mov	r8, r1
 80178da:	4683      	mov	fp, r0
 80178dc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80178e0:	9103      	str	r1, [sp, #12]
 80178e2:	4610      	mov	r0, r2
 80178e4:	461c      	mov	r4, r3
 80178e6:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80178ea:	9302      	str	r3, [sp, #8]
 80178ec:	f7ff ff7a 	bl	80177e4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80178f0:	f1b8 0f00 	cmp.w	r8, #0
 80178f4:	bf0c      	ite	eq
 80178f6:	4684      	moveq	ip, r0
 80178f8:	f100 0c01 	addne.w	ip, r0, #1
 80178fc:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017900:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017904:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017906:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017908:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 801790c:	9903      	ldr	r1, [sp, #12]
 801790e:	fa1f fc8c 	uxth.w	ip, ip
 8017912:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017916:	d041      	beq.n	801799c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017918:	d834      	bhi.n	8017984 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801791a:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 801791e:	d059      	beq.n	80179d4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017920:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017924:	d03a      	beq.n	801799c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017926:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801792a:	d034      	beq.n	8017996 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 801792c:	2400      	movs	r4, #0
 801792e:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017932:	3a01      	subs	r2, #1
 8017934:	b169      	cbz	r1, 8017952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017936:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017938:	458c      	cmp	ip, r1
 801793a:	da09      	bge.n	8017950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 801793c:	eba1 010c 	sub.w	r1, r1, ip
 8017940:	b289      	uxth	r1, r1
 8017942:	b933      	cbnz	r3, 8017952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017944:	2e00      	cmp	r6, #0
 8017946:	d051      	beq.n	80179ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017948:	2800      	cmp	r0, #0
 801794a:	d04f      	beq.n	80179ec <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801794c:	440c      	add	r4, r1
 801794e:	b2a4      	uxth	r4, r4
 8017950:	2100      	movs	r1, #0
 8017952:	682b      	ldr	r3, [r5, #0]
 8017954:	4293      	cmp	r3, r2
 8017956:	da07      	bge.n	8017968 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017958:	f1b8 0f00 	cmp.w	r8, #0
 801795c:	d004      	beq.n	8017968 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801795e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017962:	682b      	ldr	r3, [r5, #0]
 8017964:	3301      	adds	r3, #1
 8017966:	602b      	str	r3, [r5, #0]
 8017968:	2730      	movs	r7, #48	; 0x30
 801796a:	2c00      	cmp	r4, #0
 801796c:	d04e      	beq.n	8017a0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801796e:	682e      	ldr	r6, [r5, #0]
 8017970:	3c01      	subs	r4, #1
 8017972:	42b2      	cmp	r2, r6
 8017974:	b2a4      	uxth	r4, r4
 8017976:	dd49      	ble.n	8017a0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017978:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 801797c:	682b      	ldr	r3, [r5, #0]
 801797e:	3301      	adds	r3, #1
 8017980:	602b      	str	r3, [r5, #0]
 8017982:	e7f2      	b.n	801796a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017984:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017988:	d01d      	beq.n	80179c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801798a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 801798e:	d002      	beq.n	8017996 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017990:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017994:	e7c9      	b.n	801792a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017996:	4684      	mov	ip, r0
 8017998:	f04f 0800 	mov.w	r8, #0
 801799c:	2c00      	cmp	r4, #0
 801799e:	d0c6      	beq.n	801792e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80179a0:	b947      	cbnz	r7, 80179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80179a2:	2801      	cmp	r0, #1
 80179a4:	d106      	bne.n	80179b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80179a6:	8814      	ldrh	r4, [r2, #0]
 80179a8:	2c30      	cmp	r4, #48	; 0x30
 80179aa:	bf02      	ittt	eq
 80179ac:	3202      	addeq	r2, #2
 80179ae:	f8cb 2000 	streq.w	r2, [fp]
 80179b2:	4638      	moveq	r0, r7
 80179b4:	45bc      	cmp	ip, r7
 80179b6:	da14      	bge.n	80179e2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80179b8:	b2bf      	uxth	r7, r7
 80179ba:	eba7 040c 	sub.w	r4, r7, ip
 80179be:	b2a4      	uxth	r4, r4
 80179c0:	46bc      	mov	ip, r7
 80179c2:	2600      	movs	r6, #0
 80179c4:	e7b3      	b.n	801792e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80179c6:	4684      	mov	ip, r0
 80179c8:	b16c      	cbz	r4, 80179e6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80179ca:	42b8      	cmp	r0, r7
 80179cc:	dd00      	ble.n	80179d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80179ce:	b2b8      	uxth	r0, r7
 80179d0:	2400      	movs	r4, #0
 80179d2:	e003      	b.n	80179dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80179d4:	f04f 0c01 	mov.w	ip, #1
 80179d8:	2400      	movs	r4, #0
 80179da:	4660      	mov	r0, ip
 80179dc:	4626      	mov	r6, r4
 80179de:	46a0      	mov	r8, r4
 80179e0:	e7a5      	b.n	801792e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80179e2:	2400      	movs	r4, #0
 80179e4:	e7ed      	b.n	80179c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80179e6:	4626      	mov	r6, r4
 80179e8:	46a0      	mov	r8, r4
 80179ea:	e7a0      	b.n	801792e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80179ec:	2900      	cmp	r1, #0
 80179ee:	d0b0      	beq.n	8017952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80179f0:	2720      	movs	r7, #32
 80179f2:	682e      	ldr	r6, [r5, #0]
 80179f4:	2900      	cmp	r1, #0
 80179f6:	d0ac      	beq.n	8017952 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80179f8:	3901      	subs	r1, #1
 80179fa:	4296      	cmp	r6, r2
 80179fc:	b289      	uxth	r1, r1
 80179fe:	daa7      	bge.n	8017950 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017a00:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017a04:	682b      	ldr	r3, [r5, #0]
 8017a06:	3301      	adds	r3, #1
 8017a08:	602b      	str	r3, [r5, #0]
 8017a0a:	e7f2      	b.n	80179f2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017a0c:	b188      	cbz	r0, 8017a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017a0e:	682b      	ldr	r3, [r5, #0]
 8017a10:	3801      	subs	r0, #1
 8017a12:	429a      	cmp	r2, r3
 8017a14:	b280      	uxth	r0, r0
 8017a16:	dd0c      	ble.n	8017a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017a18:	f8db 3000 	ldr.w	r3, [fp]
 8017a1c:	1c9c      	adds	r4, r3, #2
 8017a1e:	f8cb 4000 	str.w	r4, [fp]
 8017a22:	881c      	ldrh	r4, [r3, #0]
 8017a24:	682b      	ldr	r3, [r5, #0]
 8017a26:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017a2a:	682b      	ldr	r3, [r5, #0]
 8017a2c:	3301      	adds	r3, #1
 8017a2e:	602b      	str	r3, [r5, #0]
 8017a30:	e7ec      	b.n	8017a0c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017a32:	2620      	movs	r6, #32
 8017a34:	b151      	cbz	r1, 8017a4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017a36:	6828      	ldr	r0, [r5, #0]
 8017a38:	3901      	subs	r1, #1
 8017a3a:	4282      	cmp	r2, r0
 8017a3c:	b289      	uxth	r1, r1
 8017a3e:	dd05      	ble.n	8017a4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017a40:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017a44:	682b      	ldr	r3, [r5, #0]
 8017a46:	3301      	adds	r3, #1
 8017a48:	602b      	str	r3, [r5, #0]
 8017a4a:	e7f3      	b.n	8017a34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017a4c:	b005      	add	sp, #20
 8017a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017a52:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017a56:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017a5a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017a5e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017a62:	2400      	movs	r4, #0
 8017a64:	8014      	strh	r4, [r2, #0]
 8017a66:	701c      	strb	r4, [r3, #0]
 8017a68:	f888 4000 	strb.w	r4, [r8]
 8017a6c:	f88c 4000 	strb.w	r4, [ip]
 8017a70:	f88e 4000 	strb.w	r4, [lr]
 8017a74:	703c      	strb	r4, [r7, #0]
 8017a76:	6804      	ldr	r4, [r0, #0]
 8017a78:	b1a4      	cbz	r4, 8017aa4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017a7a:	8824      	ldrh	r4, [r4, #0]
 8017a7c:	f04f 0901 	mov.w	r9, #1
 8017a80:	b314      	cbz	r4, 8017ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017a82:	2c2b      	cmp	r4, #43	; 0x2b
 8017a84:	d001      	beq.n	8017a8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017a86:	2c20      	cmp	r4, #32
 8017a88:	d110      	bne.n	8017aac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017a8a:	8014      	strh	r4, [r2, #0]
 8017a8c:	6804      	ldr	r4, [r0, #0]
 8017a8e:	b10c      	cbz	r4, 8017a94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017a90:	3402      	adds	r4, #2
 8017a92:	6004      	str	r4, [r0, #0]
 8017a94:	680c      	ldr	r4, [r1, #0]
 8017a96:	b10c      	cbz	r4, 8017a9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017a98:	3401      	adds	r4, #1
 8017a9a:	600c      	str	r4, [r1, #0]
 8017a9c:	6804      	ldr	r4, [r0, #0]
 8017a9e:	b17c      	cbz	r4, 8017ac0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017aa0:	8824      	ldrh	r4, [r4, #0]
 8017aa2:	e7ed      	b.n	8017a80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017aa4:	680c      	ldr	r4, [r1, #0]
 8017aa6:	b17c      	cbz	r4, 8017ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017aa8:	7824      	ldrb	r4, [r4, #0]
 8017aaa:	e7e7      	b.n	8017a7c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017aac:	2c2d      	cmp	r4, #45	; 0x2d
 8017aae:	d102      	bne.n	8017ab6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017ab0:	f883 9000 	strb.w	r9, [r3]
 8017ab4:	e7ea      	b.n	8017a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017ab6:	2c23      	cmp	r4, #35	; 0x23
 8017ab8:	d107      	bne.n	8017aca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017aba:	f888 9000 	strb.w	r9, [r8]
 8017abe:	e7e5      	b.n	8017a8c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017ac0:	680c      	ldr	r4, [r1, #0]
 8017ac2:	b10c      	cbz	r4, 8017ac8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017ac4:	7824      	ldrb	r4, [r4, #0]
 8017ac6:	e7db      	b.n	8017a80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017ac8:	2400      	movs	r4, #0
 8017aca:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017ace:	2b09      	cmp	r3, #9
 8017ad0:	d901      	bls.n	8017ad6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017ad2:	2c2a      	cmp	r4, #42	; 0x2a
 8017ad4:	d122      	bne.n	8017b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017ad6:	2301      	movs	r3, #1
 8017ad8:	2c30      	cmp	r4, #48	; 0x30
 8017ada:	f88e 3000 	strb.w	r3, [lr]
 8017ade:	d10d      	bne.n	8017afc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017ae0:	f88c 3000 	strb.w	r3, [ip]
 8017ae4:	6803      	ldr	r3, [r0, #0]
 8017ae6:	b10b      	cbz	r3, 8017aec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017ae8:	3302      	adds	r3, #2
 8017aea:	6003      	str	r3, [r0, #0]
 8017aec:	680b      	ldr	r3, [r1, #0]
 8017aee:	b10b      	cbz	r3, 8017af4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017af0:	3301      	adds	r3, #1
 8017af2:	600b      	str	r3, [r1, #0]
 8017af4:	6803      	ldr	r3, [r0, #0]
 8017af6:	2b00      	cmp	r3, #0
 8017af8:	d02f      	beq.n	8017b5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017afa:	881c      	ldrh	r4, [r3, #0]
 8017afc:	2c2a      	cmp	r4, #42	; 0x2a
 8017afe:	d135      	bne.n	8017b6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017b00:	f04f 33ff 	mov.w	r3, #4294967295
 8017b04:	6033      	str	r3, [r6, #0]
 8017b06:	6803      	ldr	r3, [r0, #0]
 8017b08:	b10b      	cbz	r3, 8017b0e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017b0a:	3302      	adds	r3, #2
 8017b0c:	6003      	str	r3, [r0, #0]
 8017b0e:	680b      	ldr	r3, [r1, #0]
 8017b10:	b10b      	cbz	r3, 8017b16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017b12:	3301      	adds	r3, #1
 8017b14:	600b      	str	r3, [r1, #0]
 8017b16:	6803      	ldr	r3, [r0, #0]
 8017b18:	b31b      	cbz	r3, 8017b62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017b1a:	881c      	ldrh	r4, [r3, #0]
 8017b1c:	2c2e      	cmp	r4, #46	; 0x2e
 8017b1e:	d11a      	bne.n	8017b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b20:	2301      	movs	r3, #1
 8017b22:	703b      	strb	r3, [r7, #0]
 8017b24:	6803      	ldr	r3, [r0, #0]
 8017b26:	b10b      	cbz	r3, 8017b2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017b28:	3302      	adds	r3, #2
 8017b2a:	6003      	str	r3, [r0, #0]
 8017b2c:	680b      	ldr	r3, [r1, #0]
 8017b2e:	b10b      	cbz	r3, 8017b34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017b30:	3301      	adds	r3, #1
 8017b32:	600b      	str	r3, [r1, #0]
 8017b34:	6803      	ldr	r3, [r0, #0]
 8017b36:	2b00      	cmp	r3, #0
 8017b38:	d036      	beq.n	8017ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017b3a:	881b      	ldrh	r3, [r3, #0]
 8017b3c:	2b2a      	cmp	r3, #42	; 0x2a
 8017b3e:	d137      	bne.n	8017bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017b40:	f04f 33ff 	mov.w	r3, #4294967295
 8017b44:	602b      	str	r3, [r5, #0]
 8017b46:	6803      	ldr	r3, [r0, #0]
 8017b48:	b10b      	cbz	r3, 8017b4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017b4a:	3302      	adds	r3, #2
 8017b4c:	6003      	str	r3, [r0, #0]
 8017b4e:	680b      	ldr	r3, [r1, #0]
 8017b50:	b10b      	cbz	r3, 8017b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b52:	3301      	adds	r3, #1
 8017b54:	600b      	str	r3, [r1, #0]
 8017b56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017b5a:	680c      	ldr	r4, [r1, #0]
 8017b5c:	b134      	cbz	r4, 8017b6c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017b5e:	7824      	ldrb	r4, [r4, #0]
 8017b60:	e7cc      	b.n	8017afc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017b62:	680b      	ldr	r3, [r1, #0]
 8017b64:	2b00      	cmp	r3, #0
 8017b66:	d0f6      	beq.n	8017b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017b68:	781c      	ldrb	r4, [r3, #0]
 8017b6a:	e7d7      	b.n	8017b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017b6c:	2300      	movs	r3, #0
 8017b6e:	6033      	str	r3, [r6, #0]
 8017b70:	220a      	movs	r2, #10
 8017b72:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017b76:	fa1f f38c 	uxth.w	r3, ip
 8017b7a:	2b09      	cmp	r3, #9
 8017b7c:	d8ce      	bhi.n	8017b1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017b7e:	6833      	ldr	r3, [r6, #0]
 8017b80:	fb02 c303 	mla	r3, r2, r3, ip
 8017b84:	6033      	str	r3, [r6, #0]
 8017b86:	6803      	ldr	r3, [r0, #0]
 8017b88:	b10b      	cbz	r3, 8017b8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017b8a:	3302      	adds	r3, #2
 8017b8c:	6003      	str	r3, [r0, #0]
 8017b8e:	680b      	ldr	r3, [r1, #0]
 8017b90:	b10b      	cbz	r3, 8017b96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017b92:	3301      	adds	r3, #1
 8017b94:	600b      	str	r3, [r1, #0]
 8017b96:	6803      	ldr	r3, [r0, #0]
 8017b98:	b10b      	cbz	r3, 8017b9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017b9a:	881c      	ldrh	r4, [r3, #0]
 8017b9c:	e7e9      	b.n	8017b72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017b9e:	680c      	ldr	r4, [r1, #0]
 8017ba0:	2c00      	cmp	r4, #0
 8017ba2:	d0e6      	beq.n	8017b72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017ba4:	7824      	ldrb	r4, [r4, #0]
 8017ba6:	e7e4      	b.n	8017b72 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017ba8:	680b      	ldr	r3, [r1, #0]
 8017baa:	b10b      	cbz	r3, 8017bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017bac:	781b      	ldrb	r3, [r3, #0]
 8017bae:	e7c5      	b.n	8017b3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017bb0:	2200      	movs	r2, #0
 8017bb2:	602a      	str	r2, [r5, #0]
 8017bb4:	240a      	movs	r4, #10
 8017bb6:	3b30      	subs	r3, #48	; 0x30
 8017bb8:	b29e      	uxth	r6, r3
 8017bba:	2e09      	cmp	r6, #9
 8017bbc:	682a      	ldr	r2, [r5, #0]
 8017bbe:	d813      	bhi.n	8017be8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017bc0:	fb04 3302 	mla	r3, r4, r2, r3
 8017bc4:	602b      	str	r3, [r5, #0]
 8017bc6:	6803      	ldr	r3, [r0, #0]
 8017bc8:	b10b      	cbz	r3, 8017bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017bca:	3302      	adds	r3, #2
 8017bcc:	6003      	str	r3, [r0, #0]
 8017bce:	680b      	ldr	r3, [r1, #0]
 8017bd0:	b10b      	cbz	r3, 8017bd6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017bd2:	3301      	adds	r3, #1
 8017bd4:	600b      	str	r3, [r1, #0]
 8017bd6:	6803      	ldr	r3, [r0, #0]
 8017bd8:	b10b      	cbz	r3, 8017bde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017bda:	881b      	ldrh	r3, [r3, #0]
 8017bdc:	e7eb      	b.n	8017bb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017bde:	680b      	ldr	r3, [r1, #0]
 8017be0:	2b00      	cmp	r3, #0
 8017be2:	d0e8      	beq.n	8017bb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017be4:	781b      	ldrb	r3, [r3, #0]
 8017be6:	e7e6      	b.n	8017bb6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017be8:	2a06      	cmp	r2, #6
 8017bea:	bfa8      	it	ge
 8017bec:	2206      	movge	r2, #6
 8017bee:	602a      	str	r2, [r5, #0]
 8017bf0:	e7b1      	b.n	8017b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017bf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017bf2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bf6:	b0a3      	sub	sp, #140	; 0x8c
 8017bf8:	2600      	movs	r6, #0
 8017bfa:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017bfe:	4607      	mov	r7, r0
 8017c00:	4688      	mov	r8, r1
 8017c02:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017c06:	4631      	mov	r1, r6
 8017c08:	2242      	movs	r2, #66	; 0x42
 8017c0a:	4648      	mov	r0, r9
 8017c0c:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017c0e:	960d      	str	r6, [sp, #52]	; 0x34
 8017c10:	f00e fc40 	bl	8026494 <memset>
 8017c14:	b15f      	cbz	r7, 8017c2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017c16:	f108 3aff 	add.w	sl, r8, #4294967295
 8017c1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017c1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c1e:	b152      	cbz	r2, 8017c36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017c20:	8812      	ldrh	r2, [r2, #0]
 8017c22:	b10a      	cbz	r2, 8017c28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017c24:	459a      	cmp	sl, r3
 8017c26:	dc2e      	bgt.n	8017c86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017c28:	2200      	movs	r2, #0
 8017c2a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017c2e:	4638      	mov	r0, r7
 8017c30:	b023      	add	sp, #140	; 0x8c
 8017c32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c36:	9a08      	ldr	r2, [sp, #32]
 8017c38:	2a00      	cmp	r2, #0
 8017c3a:	d0f5      	beq.n	8017c28 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017c3c:	7812      	ldrb	r2, [r2, #0]
 8017c3e:	e7f0      	b.n	8017c22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017c40:	2d00      	cmp	r5, #0
 8017c42:	d0ea      	beq.n	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c44:	782a      	ldrb	r2, [r5, #0]
 8017c46:	b142      	cbz	r2, 8017c5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017c48:	2a25      	cmp	r2, #37	; 0x25
 8017c4a:	d001      	beq.n	8017c50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017c4c:	459a      	cmp	sl, r3
 8017c4e:	dc08      	bgt.n	8017c62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017c50:	f1bb 0f00 	cmp.w	fp, #0
 8017c54:	d121      	bne.n	8017c9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017c56:	2d00      	cmp	r5, #0
 8017c58:	d0df      	beq.n	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017c5a:	782a      	ldrb	r2, [r5, #0]
 8017c5c:	f04f 0b00 	mov.w	fp, #0
 8017c60:	e01d      	b.n	8017c9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017c62:	f1bb 0f00 	cmp.w	fp, #0
 8017c66:	d078      	beq.n	8017d5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017c68:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c6c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017c70:	f1bb 0f00 	cmp.w	fp, #0
 8017c74:	d002      	beq.n	8017c7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017c76:	f10b 0202 	add.w	r2, fp, #2
 8017c7a:	9209      	str	r2, [sp, #36]	; 0x24
 8017c7c:	b10d      	cbz	r5, 8017c82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017c7e:	3501      	adds	r5, #1
 8017c80:	9508      	str	r5, [sp, #32]
 8017c82:	3301      	adds	r3, #1
 8017c84:	930d      	str	r3, [sp, #52]	; 0x34
 8017c86:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017c8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017c8c:	f1bb 0f00 	cmp.w	fp, #0
 8017c90:	d0d6      	beq.n	8017c40 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017c92:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c96:	2a00      	cmp	r2, #0
 8017c98:	d1d6      	bne.n	8017c48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017c9a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017c9e:	2a00      	cmp	r2, #0
 8017ca0:	d0bb      	beq.n	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ca2:	459a      	cmp	sl, r3
 8017ca4:	ddb9      	ble.n	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ca6:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017caa:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017cae:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017cb2:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017cb6:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017cba:	960e      	str	r6, [sp, #56]	; 0x38
 8017cbc:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017cc0:	960f      	str	r6, [sp, #60]	; 0x3c
 8017cc2:	f1bb 0f00 	cmp.w	fp, #0
 8017cc6:	d002      	beq.n	8017cce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017cc8:	f10b 0302 	add.w	r3, fp, #2
 8017ccc:	9309      	str	r3, [sp, #36]	; 0x24
 8017cce:	b10d      	cbz	r5, 8017cd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017cd0:	1c6b      	adds	r3, r5, #1
 8017cd2:	9308      	str	r3, [sp, #32]
 8017cd4:	ab0f      	add	r3, sp, #60	; 0x3c
 8017cd6:	9305      	str	r3, [sp, #20]
 8017cd8:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017cdc:	9304      	str	r3, [sp, #16]
 8017cde:	ab0e      	add	r3, sp, #56	; 0x38
 8017ce0:	9303      	str	r3, [sp, #12]
 8017ce2:	ab0c      	add	r3, sp, #48	; 0x30
 8017ce4:	9302      	str	r3, [sp, #8]
 8017ce6:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017cea:	9301      	str	r3, [sp, #4]
 8017cec:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017cf0:	9300      	str	r3, [sp, #0]
 8017cf2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017cf6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017cfa:	a908      	add	r1, sp, #32
 8017cfc:	a809      	add	r0, sp, #36	; 0x24
 8017cfe:	f7ff fea8 	bl	8017a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017d02:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017d04:	2b00      	cmp	r3, #0
 8017d06:	bfbe      	ittt	lt
 8017d08:	6823      	ldrlt	r3, [r4, #0]
 8017d0a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017d0e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017d10:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017d12:	bfb8      	it	lt
 8017d14:	3404      	addlt	r4, #4
 8017d16:	2b00      	cmp	r3, #0
 8017d18:	bfb8      	it	lt
 8017d1a:	6823      	ldrlt	r3, [r4, #0]
 8017d1c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017d20:	bfbe      	ittt	lt
 8017d22:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017d26:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017d28:	3404      	addlt	r4, #4
 8017d2a:	b1d9      	cbz	r1, 8017d64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017d2c:	880b      	ldrh	r3, [r1, #0]
 8017d2e:	2b69      	cmp	r3, #105	; 0x69
 8017d30:	d01f      	beq.n	8017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d32:	d82f      	bhi.n	8017d94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017d34:	2b58      	cmp	r3, #88	; 0x58
 8017d36:	d01c      	beq.n	8017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d38:	d818      	bhi.n	8017d6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017d3a:	2b25      	cmp	r3, #37	; 0x25
 8017d3c:	d034      	beq.n	8017da8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017d3e:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017d42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d44:	f1bb 0f00 	cmp.w	fp, #0
 8017d48:	f000 80b8 	beq.w	8017ebc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017d4c:	f8bb 5000 	ldrh.w	r5, [fp]
 8017d50:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8017d54:	3301      	adds	r3, #1
 8017d56:	930d      	str	r3, [sp, #52]	; 0x34
 8017d58:	e029      	b.n	8017dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017d5a:	b10d      	cbz	r5, 8017d60 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017d5c:	782a      	ldrb	r2, [r5, #0]
 8017d5e:	e785      	b.n	8017c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017d60:	462a      	mov	r2, r5
 8017d62:	e783      	b.n	8017c6c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017d64:	2a00      	cmp	r2, #0
 8017d66:	d0ea      	beq.n	8017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d68:	7813      	ldrb	r3, [r2, #0]
 8017d6a:	e7e0      	b.n	8017d2e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017d6c:	3b63      	subs	r3, #99	; 0x63
 8017d6e:	2b01      	cmp	r3, #1
 8017d70:	d8e5      	bhi.n	8017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d72:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8017d76:	b329      	cbz	r1, 8017dc4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017d78:	880b      	ldrh	r3, [r1, #0]
 8017d7a:	2b69      	cmp	r3, #105	; 0x69
 8017d7c:	d063      	beq.n	8017e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017d7e:	d825      	bhi.n	8017dcc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017d80:	2b63      	cmp	r3, #99	; 0x63
 8017d82:	d038      	beq.n	8017df6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8017d84:	2b64      	cmp	r3, #100	; 0x64
 8017d86:	d05e      	beq.n	8017e46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017d88:	2b58      	cmp	r3, #88	; 0x58
 8017d8a:	d07b      	beq.n	8017e84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017d8c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8017d90:	4625      	mov	r5, r4
 8017d92:	e036      	b.n	8017e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017d94:	2b73      	cmp	r3, #115	; 0x73
 8017d96:	d0ec      	beq.n	8017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017d98:	d802      	bhi.n	8017da0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8017d9a:	2b6f      	cmp	r3, #111	; 0x6f
 8017d9c:	d1cf      	bne.n	8017d3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017d9e:	e7e8      	b.n	8017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017da0:	2b75      	cmp	r3, #117	; 0x75
 8017da2:	d0e6      	beq.n	8017d72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017da4:	2b78      	cmp	r3, #120	; 0x78
 8017da6:	e7f9      	b.n	8017d9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8017da8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017daa:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8017dae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017db0:	b10b      	cbz	r3, 8017db6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8017db2:	3302      	adds	r3, #2
 8017db4:	9309      	str	r3, [sp, #36]	; 0x24
 8017db6:	9b08      	ldr	r3, [sp, #32]
 8017db8:	2b00      	cmp	r3, #0
 8017dba:	f43f af2e 	beq.w	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017dbe:	3301      	adds	r3, #1
 8017dc0:	9308      	str	r3, [sp, #32]
 8017dc2:	e72a      	b.n	8017c1a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017dc4:	2a00      	cmp	r2, #0
 8017dc6:	d0e1      	beq.n	8017d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017dc8:	7813      	ldrb	r3, [r2, #0]
 8017dca:	e7d6      	b.n	8017d7a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8017dcc:	2b73      	cmp	r3, #115	; 0x73
 8017dce:	d036      	beq.n	8017e3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8017dd0:	d807      	bhi.n	8017de2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8017dd2:	2b6f      	cmp	r3, #111	; 0x6f
 8017dd4:	d1da      	bne.n	8017d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017dd6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017dd8:	1d25      	adds	r5, r4, #4
 8017dda:	eba8 0202 	sub.w	r2, r8, r2
 8017dde:	2308      	movs	r3, #8
 8017de0:	e04a      	b.n	8017e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017de2:	2b75      	cmp	r3, #117	; 0x75
 8017de4:	d043      	beq.n	8017e6e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8017de6:	2b78      	cmp	r3, #120	; 0x78
 8017de8:	d1d0      	bne.n	8017d8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8017dea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017dec:	1d25      	adds	r5, r4, #4
 8017dee:	eba8 0202 	sub.w	r2, r8, r2
 8017df2:	2310      	movs	r3, #16
 8017df4:	e040      	b.n	8017e78 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8017df6:	6823      	ldr	r3, [r4, #0]
 8017df8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8017dfc:	1d25      	adds	r5, r4, #4
 8017dfe:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8017e02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8017e04:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8017e08:	2b00      	cmp	r3, #0
 8017e0a:	d052      	beq.n	8017eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017e0c:	881a      	ldrh	r2, [r3, #0]
 8017e0e:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8017e12:	a80d      	add	r0, sp, #52	; 0x34
 8017e14:	9005      	str	r0, [sp, #20]
 8017e16:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8017e1a:	9004      	str	r0, [sp, #16]
 8017e1c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8017e1e:	9003      	str	r0, [sp, #12]
 8017e20:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8017e24:	9002      	str	r0, [sp, #8]
 8017e26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8017e28:	9001      	str	r0, [sp, #4]
 8017e2a:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8017e2e:	9000      	str	r0, [sp, #0]
 8017e30:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8017e34:	a810      	add	r0, sp, #64	; 0x40
 8017e36:	f7ff fd49 	bl	80178cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017e3a:	462c      	mov	r4, r5
 8017e3c:	e7b7      	b.n	8017dae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017e3e:	6823      	ldr	r3, [r4, #0]
 8017e40:	1d25      	adds	r5, r4, #4
 8017e42:	9310      	str	r3, [sp, #64]	; 0x40
 8017e44:	e7dd      	b.n	8017e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e46:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e48:	6820      	ldr	r0, [r4, #0]
 8017e4a:	eba8 0202 	sub.w	r2, r8, r2
 8017e4e:	230a      	movs	r3, #10
 8017e50:	b292      	uxth	r2, r2
 8017e52:	4649      	mov	r1, r9
 8017e54:	f7ff fce4 	bl	8017820 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017e58:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8017e5c:	2b2d      	cmp	r3, #45	; 0x2d
 8017e5e:	f104 0504 	add.w	r5, r4, #4
 8017e62:	d1ce      	bne.n	8017e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e64:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017e68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017e6a:	3302      	adds	r3, #2
 8017e6c:	e7e9      	b.n	8017e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017e6e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e70:	1d25      	adds	r5, r4, #4
 8017e72:	eba8 0202 	sub.w	r2, r8, r2
 8017e76:	230a      	movs	r3, #10
 8017e78:	b292      	uxth	r2, r2
 8017e7a:	4649      	mov	r1, r9
 8017e7c:	6820      	ldr	r0, [r4, #0]
 8017e7e:	f7ff fcfb 	bl	8017878 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017e82:	e7be      	b.n	8017e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017e84:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8017e86:	6820      	ldr	r0, [r4, #0]
 8017e88:	eba8 0202 	sub.w	r2, r8, r2
 8017e8c:	b292      	uxth	r2, r2
 8017e8e:	2310      	movs	r3, #16
 8017e90:	4649      	mov	r1, r9
 8017e92:	f7ff fcf1 	bl	8017878 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8017e96:	1d25      	adds	r5, r4, #4
 8017e98:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8017e9c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8017ea0:	2b00      	cmp	r3, #0
 8017ea2:	d0ae      	beq.n	8017e02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8017ea4:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8017ea8:	2919      	cmp	r1, #25
 8017eaa:	d8f7      	bhi.n	8017e9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017eac:	3b20      	subs	r3, #32
 8017eae:	8013      	strh	r3, [r2, #0]
 8017eb0:	e7f4      	b.n	8017e9c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8017eb2:	9a08      	ldr	r2, [sp, #32]
 8017eb4:	2a00      	cmp	r2, #0
 8017eb6:	d0aa      	beq.n	8017e0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017eb8:	7812      	ldrb	r2, [r2, #0]
 8017eba:	e7a8      	b.n	8017e0e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8017ebc:	2d00      	cmp	r5, #0
 8017ebe:	f43f af47 	beq.w	8017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8017ec2:	782d      	ldrb	r5, [r5, #0]
 8017ec4:	e744      	b.n	8017d50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08017ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8017ec6:	b507      	push	{r0, r1, r2, lr}
 8017ec8:	9300      	str	r3, [sp, #0]
 8017eca:	4613      	mov	r3, r2
 8017ecc:	2200      	movs	r2, #0
 8017ece:	f7ff fe90 	bl	8017bf2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8017ed2:	b003      	add	sp, #12
 8017ed4:	f85d fb04 	ldr.w	pc, [sp], #4

08017ed8 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8017ed8:	b40c      	push	{r2, r3}
 8017eda:	b507      	push	{r0, r1, r2, lr}
 8017edc:	ab04      	add	r3, sp, #16
 8017ede:	f853 2b04 	ldr.w	r2, [r3], #4
 8017ee2:	9301      	str	r3, [sp, #4]
 8017ee4:	f7ff ffef 	bl	8017ec6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8017ee8:	b003      	add	sp, #12
 8017eea:	f85d eb04 	ldr.w	lr, [sp], #4
 8017eee:	b002      	add	sp, #8
 8017ef0:	4770      	bx	lr
	...

08017ef4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8017ef4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ef8:	b0c5      	sub	sp, #276	; 0x114
 8017efa:	2400      	movs	r4, #0
 8017efc:	af11      	add	r7, sp, #68	; 0x44
 8017efe:	4606      	mov	r6, r0
 8017f00:	468a      	mov	sl, r1
 8017f02:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017f06:	4621      	mov	r1, r4
 8017f08:	22c8      	movs	r2, #200	; 0xc8
 8017f0a:	4638      	mov	r0, r7
 8017f0c:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 8017f10:	940d      	str	r4, [sp, #52]	; 0x34
 8017f12:	f00e fabf 	bl	8026494 <memset>
 8017f16:	b16e      	cbz	r6, 8017f34 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8017f18:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 80181bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8017f1c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017f1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f20:	b162      	cbz	r2, 8017f3c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 8017f22:	8812      	ldrh	r2, [r2, #0]
 8017f24:	b11a      	cbz	r2, 8017f2e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017f26:	f10a 31ff 	add.w	r1, sl, #4294967295
 8017f2a:	4299      	cmp	r1, r3
 8017f2c:	dc2e      	bgt.n	8017f8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8017f2e:	2200      	movs	r2, #0
 8017f30:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017f34:	4630      	mov	r0, r6
 8017f36:	b045      	add	sp, #276	; 0x114
 8017f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f3c:	9a08      	ldr	r2, [sp, #32]
 8017f3e:	2a00      	cmp	r2, #0
 8017f40:	d0f5      	beq.n	8017f2e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 8017f42:	7812      	ldrb	r2, [r2, #0]
 8017f44:	e7ee      	b.n	8017f24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 8017f46:	2d00      	cmp	r5, #0
 8017f48:	d0e8      	beq.n	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f4a:	782a      	ldrb	r2, [r5, #0]
 8017f4c:	b142      	cbz	r2, 8017f60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8017f4e:	2a25      	cmp	r2, #37	; 0x25
 8017f50:	d001      	beq.n	8017f56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8017f52:	4299      	cmp	r1, r3
 8017f54:	dc08      	bgt.n	8017f68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8017f56:	f1b8 0f00 	cmp.w	r8, #0
 8017f5a:	d121      	bne.n	8017fa0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8017f5c:	2d00      	cmp	r5, #0
 8017f5e:	d0dd      	beq.n	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017f60:	782a      	ldrb	r2, [r5, #0]
 8017f62:	f04f 0800 	mov.w	r8, #0
 8017f66:	e01d      	b.n	8017fa4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8017f68:	f1b8 0f00 	cmp.w	r8, #0
 8017f6c:	d07f      	beq.n	801806e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8017f6e:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f72:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017f76:	f1b8 0f00 	cmp.w	r8, #0
 8017f7a:	d002      	beq.n	8017f82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8017f7c:	f108 0202 	add.w	r2, r8, #2
 8017f80:	9209      	str	r2, [sp, #36]	; 0x24
 8017f82:	b10d      	cbz	r5, 8017f88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8017f84:	3501      	adds	r5, #1
 8017f86:	9508      	str	r5, [sp, #32]
 8017f88:	3301      	adds	r3, #1
 8017f8a:	930d      	str	r3, [sp, #52]	; 0x34
 8017f8c:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8017f90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f92:	f1b8 0f00 	cmp.w	r8, #0
 8017f96:	d0d6      	beq.n	8017f46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8017f98:	f8b8 2000 	ldrh.w	r2, [r8]
 8017f9c:	2a00      	cmp	r2, #0
 8017f9e:	d1d6      	bne.n	8017f4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8017fa0:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fa4:	2a00      	cmp	r2, #0
 8017fa6:	d0b9      	beq.n	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017fa8:	4299      	cmp	r1, r3
 8017faa:	ddb7      	ble.n	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017fac:	2300      	movs	r3, #0
 8017fae:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017fb2:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8017fb6:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 8017fba:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 8017fbe:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8017fc2:	930e      	str	r3, [sp, #56]	; 0x38
 8017fc4:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8017fc8:	930f      	str	r3, [sp, #60]	; 0x3c
 8017fca:	f1b8 0f00 	cmp.w	r8, #0
 8017fce:	d002      	beq.n	8017fd6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8017fd0:	f108 0302 	add.w	r3, r8, #2
 8017fd4:	9309      	str	r3, [sp, #36]	; 0x24
 8017fd6:	b10d      	cbz	r5, 8017fdc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8017fd8:	1c6b      	adds	r3, r5, #1
 8017fda:	9308      	str	r3, [sp, #32]
 8017fdc:	ab0f      	add	r3, sp, #60	; 0x3c
 8017fde:	9305      	str	r3, [sp, #20]
 8017fe0:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017fe4:	9304      	str	r3, [sp, #16]
 8017fe6:	ab0e      	add	r3, sp, #56	; 0x38
 8017fe8:	9303      	str	r3, [sp, #12]
 8017fea:	ab0c      	add	r3, sp, #48	; 0x30
 8017fec:	9302      	str	r3, [sp, #8]
 8017fee:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017ff2:	9301      	str	r3, [sp, #4]
 8017ff4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017ff8:	9300      	str	r3, [sp, #0]
 8017ffa:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017ffe:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8018002:	a908      	add	r1, sp, #32
 8018004:	a809      	add	r0, sp, #36	; 0x24
 8018006:	f7ff fd24 	bl	8017a52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801800a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801800c:	2b00      	cmp	r3, #0
 801800e:	da0b      	bge.n	8018028 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8018010:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018014:	edd3 7a00 	vldr	s15, [r3]
 8018018:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801801c:	3401      	adds	r4, #1
 801801e:	ee17 3a90 	vmov	r3, s15
 8018022:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018026:	930e      	str	r3, [sp, #56]	; 0x38
 8018028:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801802a:	2b00      	cmp	r3, #0
 801802c:	da0b      	bge.n	8018046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 801802e:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018032:	edd3 7a00 	vldr	s15, [r3]
 8018036:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801803a:	3401      	adds	r4, #1
 801803c:	ee17 3a90 	vmov	r3, s15
 8018040:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018044:	930f      	str	r3, [sp, #60]	; 0x3c
 8018046:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018048:	b1b3      	cbz	r3, 8018078 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 801804a:	881a      	ldrh	r2, [r3, #0]
 801804c:	2a25      	cmp	r2, #37	; 0x25
 801804e:	d018      	beq.n	8018082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018050:	2a66      	cmp	r2, #102	; 0x66
 8018052:	d01c      	beq.n	801808e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8018054:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018058:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801805a:	f1b8 0f00 	cmp.w	r8, #0
 801805e:	f000 8121 	beq.w	80182a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8018062:	f8b8 5000 	ldrh.w	r5, [r8]
 8018066:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801806a:	3301      	adds	r3, #1
 801806c:	e00d      	b.n	801808a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801806e:	b10d      	cbz	r5, 8018074 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018070:	782a      	ldrb	r2, [r5, #0]
 8018072:	e77e      	b.n	8017f72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018074:	462a      	mov	r2, r5
 8018076:	e77c      	b.n	8017f72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018078:	9b08      	ldr	r3, [sp, #32]
 801807a:	2b00      	cmp	r3, #0
 801807c:	d0ea      	beq.n	8018054 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801807e:	781a      	ldrb	r2, [r3, #0]
 8018080:	e7e4      	b.n	801804c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8018082:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018084:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018088:	3302      	adds	r3, #2
 801808a:	930d      	str	r3, [sp, #52]	; 0x34
 801808c:	e041      	b.n	8018112 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801808e:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018092:	edd3 7a00 	vldr	s15, [r3]
 8018096:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801809a:	9710      	str	r7, [sp, #64]	; 0x40
 801809c:	3401      	adds	r4, #1
 801809e:	b923      	cbnz	r3, 80180aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80180a0:	2301      	movs	r3, #1
 80180a2:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 80180a6:	2306      	movs	r3, #6
 80180a8:	930f      	str	r3, [sp, #60]	; 0x3c
 80180aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80180ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180b2:	bf48      	it	mi
 80180b4:	eef1 7a67 	vnegmi.f32	s15, s15
 80180b8:	eeb0 7ae7 	vabs.f32	s14, s15
 80180bc:	bf48      	it	mi
 80180be:	232d      	movmi	r3, #45	; 0x2d
 80180c0:	eeb4 7a45 	vcmp.f32	s14, s10
 80180c4:	bf48      	it	mi
 80180c6:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 80180ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80180ce:	dd2b      	ble.n	8018128 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80180d0:	4b3b      	ldr	r3, [pc, #236]	; (80181c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80180d2:	9311      	str	r3, [sp, #68]	; 0x44
 80180d4:	2366      	movs	r3, #102	; 0x66
 80180d6:	9312      	str	r3, [sp, #72]	; 0x48
 80180d8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180da:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80180de:	2b00      	cmp	r3, #0
 80180e0:	f000 80da 	beq.w	8018298 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 80180e4:	881a      	ldrh	r2, [r3, #0]
 80180e6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80180ea:	a80d      	add	r0, sp, #52	; 0x34
 80180ec:	9005      	str	r0, [sp, #20]
 80180ee:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80180f2:	9004      	str	r0, [sp, #16]
 80180f4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80180f6:	9003      	str	r0, [sp, #12]
 80180f8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180fc:	9002      	str	r0, [sp, #8]
 80180fe:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018100:	9001      	str	r0, [sp, #4]
 8018102:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8018106:	9000      	str	r0, [sp, #0]
 8018108:	e9cd a606 	strd	sl, r6, [sp, #24]
 801810c:	a810      	add	r0, sp, #64	; 0x40
 801810e:	f7ff fbdd 	bl	80178cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8018112:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018114:	b10b      	cbz	r3, 801811a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 8018116:	3302      	adds	r3, #2
 8018118:	9309      	str	r3, [sp, #36]	; 0x24
 801811a:	9b08      	ldr	r3, [sp, #32]
 801811c:	2b00      	cmp	r3, #0
 801811e:	f43f aefd 	beq.w	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018122:	3301      	adds	r3, #1
 8018124:	9308      	str	r3, [sp, #32]
 8018126:	e6f9      	b.n	8017f1c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018128:	eef4 7a67 	vcmp.f32	s15, s15
 801812c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018130:	d63a      	bvs.n	80181a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 8018132:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 8018136:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 801813a:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 801813e:	eeb0 6a67 	vmov.f32	s12, s15
 8018142:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018146:	eef0 5a47 	vmov.f32	s11, s14
 801814a:	eeb4 6ac7 	vcmpe.f32	s12, s14
 801814e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018152:	da2d      	bge.n	80181b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8018154:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018156:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801815a:	2100      	movs	r1, #0
 801815c:	eef0 4a46 	vmov.f32	s9, s12
 8018160:	ebaa 0202 	sub.w	r2, sl, r2
 8018164:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801816c:	b28d      	uxth	r5, r1
 801816e:	db2c      	blt.n	80181ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018170:	1a53      	subs	r3, r2, r1
 8018172:	2b00      	cmp	r3, #0
 8018174:	dd29      	ble.n	80181ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018176:	3101      	adds	r1, #1
 8018178:	2964      	cmp	r1, #100	; 0x64
 801817a:	d025      	beq.n	80181c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801817c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018180:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8018184:	ee17 3a10 	vmov	r3, s14
 8018188:	2b09      	cmp	r3, #9
 801818a:	bfa8      	it	ge
 801818c:	2309      	movge	r3, #9
 801818e:	ee07 3a10 	vmov	s14, r3
 8018192:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018196:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801819a:	eee7 7a66 	vfms.f32	s15, s14, s13
 801819e:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80181a2:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80181a6:	e7dd      	b.n	8018164 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80181a8:	4b06      	ldr	r3, [pc, #24]	; (80181c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80181aa:	9311      	str	r3, [sp, #68]	; 0x44
 80181ac:	236e      	movs	r3, #110	; 0x6e
 80181ae:	e792      	b.n	80180d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80181b0:	ee66 6a87 	vmul.f32	s13, s13, s14
 80181b4:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80181b8:	e7c7      	b.n	801814a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80181ba:	bf00      	nop
 80181bc:	7f7fffff 	.word	0x7f7fffff
 80181c0:	006e0069 	.word	0x006e0069
 80181c4:	0061006e 	.word	0x0061006e
 80181c8:	2563      	movs	r5, #99	; 0x63
 80181ca:	2a63      	cmp	r2, #99	; 0x63
 80181cc:	bfd4      	ite	le
 80181ce:	ebc5 0202 	rsble	r2, r5, r2
 80181d2:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 80181d6:	2a00      	cmp	r2, #0
 80181d8:	dd43      	ble.n	8018262 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80181da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80181dc:	2b00      	cmp	r3, #0
 80181de:	dd40      	ble.n	8018262 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 80181e0:	f04f 0901 	mov.w	r9, #1
 80181e4:	210a      	movs	r1, #10
 80181e6:	f113 33ff 	adds.w	r3, r3, #4294967295
 80181ea:	d30c      	bcc.n	8018206 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 80181ec:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80181f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80181f4:	ee17 0a10 	vmov	r0, s14
 80181f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80181fc:	fb01 0909 	mla	r9, r1, r9, r0
 8018200:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8018204:	e7ef      	b.n	80181e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 8018206:	3501      	adds	r5, #1
 8018208:	930f      	str	r3, [sp, #60]	; 0x3c
 801820a:	b292      	uxth	r2, r2
 801820c:	230a      	movs	r3, #10
 801820e:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 8018212:	4648      	mov	r0, r9
 8018214:	f7ff fb4e 	bl	80178b4 <_ZN8touchgfx7Unicode4itoaElPtti>
 8018218:	f1b9 0f01 	cmp.w	r9, #1
 801821c:	dc1f      	bgt.n	801825e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 801821e:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 8018222:	2b00      	cmp	r3, #0
 8018224:	bf0c      	ite	eq
 8018226:	2300      	moveq	r3, #0
 8018228:	232e      	movne	r3, #46	; 0x2e
 801822a:	aa44      	add	r2, sp, #272	; 0x110
 801822c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018230:	eef4 7ae4 	vcmpe.f32	s15, s9
 8018234:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018238:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801823c:	f6ff af4c 	blt.w	80180d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8018240:	2300      	movs	r3, #0
 8018242:	f838 2b02 	ldrh.w	r2, [r8], #2
 8018246:	1c59      	adds	r1, r3, #1
 8018248:	b98a      	cbnz	r2, 801826e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 801824a:	b29b      	uxth	r3, r3
 801824c:	2130      	movs	r1, #48	; 0x30
 801824e:	b983      	cbnz	r3, 8018272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018250:	2331      	movs	r3, #49	; 0x31
 8018252:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018256:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018258:	3b02      	subs	r3, #2
 801825a:	9310      	str	r3, [sp, #64]	; 0x40
 801825c:	e73c      	b.n	80180d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801825e:	232e      	movs	r3, #46	; 0x2e
 8018260:	e7e3      	b.n	801822a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8018262:	ab44      	add	r3, sp, #272	; 0x110
 8018264:	3501      	adds	r5, #1
 8018266:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801826a:	2300      	movs	r3, #0
 801826c:	e7e0      	b.n	8018230 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801826e:	460b      	mov	r3, r1
 8018270:	e7e7      	b.n	8018242 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8018272:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8018276:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801827a:	2808      	cmp	r0, #8
 801827c:	d806      	bhi.n	801828c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801827e:	a944      	add	r1, sp, #272	; 0x110
 8018280:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018284:	3201      	adds	r2, #1
 8018286:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801828a:	e725      	b.n	80180d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801828c:	2a39      	cmp	r2, #57	; 0x39
 801828e:	bf08      	it	eq
 8018290:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8018294:	3b01      	subs	r3, #1
 8018296:	e7da      	b.n	801824e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018298:	9a08      	ldr	r2, [sp, #32]
 801829a:	2a00      	cmp	r2, #0
 801829c:	f43f af23 	beq.w	80180e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80182a0:	7812      	ldrb	r2, [r2, #0]
 80182a2:	e720      	b.n	80180e6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80182a4:	2d00      	cmp	r5, #0
 80182a6:	f43f aede 	beq.w	8018066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80182aa:	782d      	ldrb	r5, [r5, #0]
 80182ac:	e6db      	b.n	8018066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80182ae:	bf00      	nop

080182b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80182b0:	b507      	push	{r0, r1, r2, lr}
 80182b2:	9300      	str	r3, [sp, #0]
 80182b4:	4613      	mov	r3, r2
 80182b6:	2200      	movs	r2, #0
 80182b8:	f7ff fe1c 	bl	8017ef4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80182bc:	b003      	add	sp, #12
 80182be:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080182c4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80182c4:	4b01      	ldr	r3, [pc, #4]	; (80182cc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80182c6:	6018      	str	r0, [r3, #0]
 80182c8:	4770      	bx	lr
 80182ca:	bf00      	nop
 80182cc:	2000ef84 	.word	0x2000ef84

080182d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80182d0:	4b06      	ldr	r3, [pc, #24]	; (80182ec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80182d2:	881a      	ldrh	r2, [r3, #0]
 80182d4:	4282      	cmp	r2, r0
 80182d6:	d807      	bhi.n	80182e8 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80182d8:	4b05      	ldr	r3, [pc, #20]	; (80182f0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80182da:	881b      	ldrh	r3, [r3, #0]
 80182dc:	4413      	add	r3, r2
 80182de:	4298      	cmp	r0, r3
 80182e0:	bfac      	ite	ge
 80182e2:	2000      	movge	r0, #0
 80182e4:	2001      	movlt	r0, #1
 80182e6:	4770      	bx	lr
 80182e8:	2000      	movs	r0, #0
 80182ea:	4770      	bx	lr
 80182ec:	2000efa4 	.word	0x2000efa4
 80182f0:	2000efa8 	.word	0x2000efa8

080182f4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80182f4:	b508      	push	{r3, lr}
 80182f6:	4601      	mov	r1, r0
 80182f8:	f7ff ffea 	bl	80182d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80182fc:	b118      	cbz	r0, 8018306 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80182fe:	4b02      	ldr	r3, [pc, #8]	; (8018308 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8018300:	681b      	ldr	r3, [r3, #0]
 8018302:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8018306:	bd08      	pop	{r3, pc}
 8018308:	2000ef88 	.word	0x2000ef88

0801830c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801830c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801830e:	4c24      	ldr	r4, [pc, #144]	; (80183a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8018310:	6823      	ldr	r3, [r4, #0]
 8018312:	2b00      	cmp	r3, #0
 8018314:	d042      	beq.n	801839c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8018316:	4a23      	ldr	r2, [pc, #140]	; (80183a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8018318:	4d23      	ldr	r5, [pc, #140]	; (80183a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801831a:	8811      	ldrh	r1, [r2, #0]
 801831c:	f8b5 c000 	ldrh.w	ip, [r5]
 8018320:	4822      	ldr	r0, [pc, #136]	; (80183ac <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8018322:	4461      	add	r1, ip
 8018324:	1c4a      	adds	r2, r1, #1
 8018326:	f022 0201 	bic.w	r2, r2, #1
 801832a:	008f      	lsls	r7, r1, #2
 801832c:	0412      	lsls	r2, r2, #16
 801832e:	19de      	adds	r6, r3, r7
 8018330:	0c12      	lsrs	r2, r2, #16
 8018332:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8018336:	6006      	str	r6, [r0, #0]
 8018338:	4e1d      	ldr	r6, [pc, #116]	; (80183b0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801833a:	19da      	adds	r2, r3, r7
 801833c:	6032      	str	r2, [r6, #0]
 801833e:	220e      	movs	r2, #14
 8018340:	fb02 f20c 	mul.w	r2, r2, ip
 8018344:	3203      	adds	r2, #3
 8018346:	f022 0203 	bic.w	r2, r2, #3
 801834a:	443a      	add	r2, r7
 801834c:	4f19      	ldr	r7, [pc, #100]	; (80183b4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801834e:	4413      	add	r3, r2
 8018350:	603b      	str	r3, [r7, #0]
 8018352:	4f19      	ldr	r7, [pc, #100]	; (80183b8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018354:	2300      	movs	r3, #0
 8018356:	803b      	strh	r3, [r7, #0]
 8018358:	4f18      	ldr	r7, [pc, #96]	; (80183bc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801835a:	683f      	ldr	r7, [r7, #0]
 801835c:	1aba      	subs	r2, r7, r2
 801835e:	4f18      	ldr	r7, [pc, #96]	; (80183c0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018360:	603a      	str	r2, [r7, #0]
 8018362:	4a18      	ldr	r2, [pc, #96]	; (80183c4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018364:	469c      	mov	ip, r3
 8018366:	8013      	strh	r3, [r2, #0]
 8018368:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801836c:	428b      	cmp	r3, r1
 801836e:	d10d      	bne.n	801838c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018370:	882d      	ldrh	r5, [r5, #0]
 8018372:	6830      	ldr	r0, [r6, #0]
 8018374:	2300      	movs	r3, #0
 8018376:	240e      	movs	r4, #14
 8018378:	429d      	cmp	r5, r3
 801837a:	d90f      	bls.n	801839c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801837c:	fb04 0203 	mla	r2, r4, r3, r0
 8018380:	3301      	adds	r3, #1
 8018382:	7b11      	ldrb	r1, [r2, #12]
 8018384:	f36f 1145 	bfc	r1, #5, #1
 8018388:	7311      	strb	r1, [r2, #12]
 801838a:	e7f5      	b.n	8018378 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801838c:	6822      	ldr	r2, [r4, #0]
 801838e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018392:	6802      	ldr	r2, [r0, #0]
 8018394:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018398:	3301      	adds	r3, #1
 801839a:	e7e7      	b.n	801836c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801839c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801839e:	bf00      	nop
 80183a0:	2000ef88 	.word	0x2000ef88
 80183a4:	2000efa4 	.word	0x2000efa4
 80183a8:	2000efa8 	.word	0x2000efa8
 80183ac:	2000ef9c 	.word	0x2000ef9c
 80183b0:	2000ef8c 	.word	0x2000ef8c
 80183b4:	2000ef94 	.word	0x2000ef94
 80183b8:	2000efa6 	.word	0x2000efa6
 80183bc:	2000ef90 	.word	0x2000ef90
 80183c0:	2000efa0 	.word	0x2000efa0
 80183c4:	2000ef98 	.word	0x2000ef98

080183c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80183c8:	4b06      	ldr	r3, [pc, #24]	; (80183e4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80183ca:	681b      	ldr	r3, [r3, #0]
 80183cc:	b943      	cbnz	r3, 80183e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80183ce:	b139      	cbz	r1, 80183e0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80183d0:	4b05      	ldr	r3, [pc, #20]	; (80183e8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80183d2:	801a      	strh	r2, [r3, #0]
 80183d4:	4b05      	ldr	r3, [pc, #20]	; (80183ec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80183d6:	6019      	str	r1, [r3, #0]
 80183d8:	4b05      	ldr	r3, [pc, #20]	; (80183f0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80183da:	6018      	str	r0, [r3, #0]
 80183dc:	f7ff bf96 	b.w	801830c <_ZN8touchgfx6Bitmap10clearCacheEv>
 80183e0:	4770      	bx	lr
 80183e2:	bf00      	nop
 80183e4:	2000ef94 	.word	0x2000ef94
 80183e8:	2000efa8 	.word	0x2000efa8
 80183ec:	2000ef90 	.word	0x2000ef90
 80183f0:	2000ef88 	.word	0x2000ef88

080183f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80183f4:	b470      	push	{r4, r5, r6}
 80183f6:	4c07      	ldr	r4, [pc, #28]	; (8018414 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80183f8:	6826      	ldr	r6, [r4, #0]
 80183fa:	4605      	mov	r5, r0
 80183fc:	4610      	mov	r0, r2
 80183fe:	9a03      	ldr	r2, [sp, #12]
 8018400:	b936      	cbnz	r6, 8018410 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8018402:	6025      	str	r5, [r4, #0]
 8018404:	4c04      	ldr	r4, [pc, #16]	; (8018418 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8018406:	8021      	strh	r1, [r4, #0]
 8018408:	bc70      	pop	{r4, r5, r6}
 801840a:	4619      	mov	r1, r3
 801840c:	f7ff bfdc 	b.w	80183c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8018410:	bc70      	pop	{r4, r5, r6}
 8018412:	4770      	bx	lr
 8018414:	2000efac 	.word	0x2000efac
 8018418:	2000efa4 	.word	0x2000efa4

0801841c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801841c:	4a12      	ldr	r2, [pc, #72]	; (8018468 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801841e:	8803      	ldrh	r3, [r0, #0]
 8018420:	8812      	ldrh	r2, [r2, #0]
 8018422:	4293      	cmp	r3, r2
 8018424:	d207      	bcs.n	8018436 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8018426:	4a11      	ldr	r2, [pc, #68]	; (801846c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8018428:	6812      	ldr	r2, [r2, #0]
 801842a:	2114      	movs	r1, #20
 801842c:	fb01 2303 	mla	r3, r1, r3, r2
 8018430:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8018434:	4770      	bx	lr
 8018436:	490e      	ldr	r1, [pc, #56]	; (8018470 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8018438:	8809      	ldrh	r1, [r1, #0]
 801843a:	4411      	add	r1, r2
 801843c:	428b      	cmp	r3, r1
 801843e:	da04      	bge.n	801844a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8018440:	1a9b      	subs	r3, r3, r2
 8018442:	4a0c      	ldr	r2, [pc, #48]	; (8018474 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8018444:	210e      	movs	r1, #14
 8018446:	6812      	ldr	r2, [r2, #0]
 8018448:	e7f0      	b.n	801842c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801844a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801844e:	4293      	cmp	r3, r2
 8018450:	d108      	bne.n	8018464 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018452:	4b09      	ldr	r3, [pc, #36]	; (8018478 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018454:	781b      	ldrb	r3, [r3, #0]
 8018456:	b91b      	cbnz	r3, 8018460 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018458:	4b08      	ldr	r3, [pc, #32]	; (801847c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801845a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801845e:	4770      	bx	lr
 8018460:	4b07      	ldr	r3, [pc, #28]	; (8018480 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018462:	e7fa      	b.n	801845a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018464:	2000      	movs	r0, #0
 8018466:	4770      	bx	lr
 8018468:	2000efa4 	.word	0x2000efa4
 801846c:	2000efac 	.word	0x2000efac
 8018470:	2000efa8 	.word	0x2000efa8
 8018474:	2000ef8c 	.word	0x2000ef8c
 8018478:	2000ef14 	.word	0x2000ef14
 801847c:	2000ef16 	.word	0x2000ef16
 8018480:	2000ef18 	.word	0x2000ef18

08018484 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018484:	4a12      	ldr	r2, [pc, #72]	; (80184d0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018486:	8803      	ldrh	r3, [r0, #0]
 8018488:	8812      	ldrh	r2, [r2, #0]
 801848a:	4293      	cmp	r3, r2
 801848c:	d207      	bcs.n	801849e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801848e:	4a11      	ldr	r2, [pc, #68]	; (80184d4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018490:	6812      	ldr	r2, [r2, #0]
 8018492:	2114      	movs	r1, #20
 8018494:	fb01 2303 	mla	r3, r1, r3, r2
 8018498:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801849c:	4770      	bx	lr
 801849e:	490e      	ldr	r1, [pc, #56]	; (80184d8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80184a0:	8809      	ldrh	r1, [r1, #0]
 80184a2:	4411      	add	r1, r2
 80184a4:	428b      	cmp	r3, r1
 80184a6:	da04      	bge.n	80184b2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80184a8:	1a9b      	subs	r3, r3, r2
 80184aa:	4a0c      	ldr	r2, [pc, #48]	; (80184dc <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80184ac:	210e      	movs	r1, #14
 80184ae:	6812      	ldr	r2, [r2, #0]
 80184b0:	e7f0      	b.n	8018494 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80184b2:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80184b6:	4293      	cmp	r3, r2
 80184b8:	d108      	bne.n	80184cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80184ba:	4b09      	ldr	r3, [pc, #36]	; (80184e0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80184bc:	781b      	ldrb	r3, [r3, #0]
 80184be:	b91b      	cbnz	r3, 80184c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80184c0:	4b08      	ldr	r3, [pc, #32]	; (80184e4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80184c2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80184c6:	4770      	bx	lr
 80184c8:	4b07      	ldr	r3, [pc, #28]	; (80184e8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80184ca:	e7fa      	b.n	80184c2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80184cc:	2000      	movs	r0, #0
 80184ce:	4770      	bx	lr
 80184d0:	2000efa4 	.word	0x2000efa4
 80184d4:	2000efac 	.word	0x2000efac
 80184d8:	2000efa8 	.word	0x2000efa8
 80184dc:	2000ef8c 	.word	0x2000ef8c
 80184e0:	2000ef14 	.word	0x2000ef14
 80184e4:	2000ef18 	.word	0x2000ef18
 80184e8:	2000ef16 	.word	0x2000ef16

080184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80184ec:	b510      	push	{r4, lr}
 80184ee:	4a1f      	ldr	r2, [pc, #124]	; (801856c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80184f0:	880b      	ldrh	r3, [r1, #0]
 80184f2:	8812      	ldrh	r2, [r2, #0]
 80184f4:	4293      	cmp	r3, r2
 80184f6:	d213      	bcs.n	8018520 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80184f8:	4a1d      	ldr	r2, [pc, #116]	; (8018570 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80184fa:	6812      	ldr	r2, [r2, #0]
 80184fc:	2114      	movs	r1, #20
 80184fe:	fb01 2303 	mla	r3, r1, r3, r2
 8018502:	8a1a      	ldrh	r2, [r3, #16]
 8018504:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8018508:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801850c:	8a5b      	ldrh	r3, [r3, #18]
 801850e:	8004      	strh	r4, [r0, #0]
 8018510:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018514:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8018518:	8041      	strh	r1, [r0, #2]
 801851a:	8082      	strh	r2, [r0, #4]
 801851c:	80c3      	strh	r3, [r0, #6]
 801851e:	e00e      	b.n	801853e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018520:	4914      	ldr	r1, [pc, #80]	; (8018574 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8018522:	8809      	ldrh	r1, [r1, #0]
 8018524:	4411      	add	r1, r2
 8018526:	428b      	cmp	r3, r1
 8018528:	da0a      	bge.n	8018540 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 801852a:	1a9b      	subs	r3, r3, r2
 801852c:	4a12      	ldr	r2, [pc, #72]	; (8018578 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 801852e:	6812      	ldr	r2, [r2, #0]
 8018530:	210e      	movs	r1, #14
 8018532:	fb01 2303 	mla	r3, r1, r3, r2
 8018536:	681a      	ldr	r2, [r3, #0]
 8018538:	6002      	str	r2, [r0, #0]
 801853a:	685a      	ldr	r2, [r3, #4]
 801853c:	6042      	str	r2, [r0, #4]
 801853e:	bd10      	pop	{r4, pc}
 8018540:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018544:	4293      	cmp	r3, r2
 8018546:	d10b      	bne.n	8018560 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8018548:	4b0c      	ldr	r3, [pc, #48]	; (801857c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801854a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801854e:	4b0c      	ldr	r3, [pc, #48]	; (8018580 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018550:	8081      	strh	r1, [r0, #4]
 8018552:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018556:	80c2      	strh	r2, [r0, #6]
 8018558:	2300      	movs	r3, #0
 801855a:	8003      	strh	r3, [r0, #0]
 801855c:	8043      	strh	r3, [r0, #2]
 801855e:	e7ee      	b.n	801853e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018560:	2300      	movs	r3, #0
 8018562:	8003      	strh	r3, [r0, #0]
 8018564:	8043      	strh	r3, [r0, #2]
 8018566:	8083      	strh	r3, [r0, #4]
 8018568:	e7d8      	b.n	801851c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801856a:	bf00      	nop
 801856c:	2000efa4 	.word	0x2000efa4
 8018570:	2000efac 	.word	0x2000efac
 8018574:	2000efa8 	.word	0x2000efa8
 8018578:	2000ef8c 	.word	0x2000ef8c
 801857c:	2000ef10 	.word	0x2000ef10
 8018580:	2000ef12 	.word	0x2000ef12

08018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018584:	4a17      	ldr	r2, [pc, #92]	; (80185e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018586:	8803      	ldrh	r3, [r0, #0]
 8018588:	8812      	ldrh	r2, [r2, #0]
 801858a:	4293      	cmp	r3, r2
 801858c:	d213      	bcs.n	80185b6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801858e:	4a16      	ldr	r2, [pc, #88]	; (80185e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018590:	6812      	ldr	r2, [r2, #0]
 8018592:	2114      	movs	r1, #20
 8018594:	fb01 2303 	mla	r3, r1, r3, r2
 8018598:	8a1a      	ldrh	r2, [r3, #16]
 801859a:	8919      	ldrh	r1, [r3, #8]
 801859c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80185a0:	428a      	cmp	r2, r1
 80185a2:	db1d      	blt.n	80185e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80185a4:	8a58      	ldrh	r0, [r3, #18]
 80185a6:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80185aa:	895b      	ldrh	r3, [r3, #10]
 80185ac:	4298      	cmp	r0, r3
 80185ae:	bfac      	ite	ge
 80185b0:	2000      	movge	r0, #0
 80185b2:	2001      	movlt	r0, #1
 80185b4:	4770      	bx	lr
 80185b6:	490d      	ldr	r1, [pc, #52]	; (80185ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80185b8:	8809      	ldrh	r1, [r1, #0]
 80185ba:	4411      	add	r1, r2
 80185bc:	428b      	cmp	r3, r1
 80185be:	da0d      	bge.n	80185dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80185c0:	1a9b      	subs	r3, r3, r2
 80185c2:	4a0b      	ldr	r2, [pc, #44]	; (80185f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80185c4:	6812      	ldr	r2, [r2, #0]
 80185c6:	210e      	movs	r1, #14
 80185c8:	fb01 2303 	mla	r3, r1, r3, r2
 80185cc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80185d0:	891a      	ldrh	r2, [r3, #8]
 80185d2:	4291      	cmp	r1, r2
 80185d4:	db04      	blt.n	80185e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80185d6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80185da:	e7e6      	b.n	80185aa <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80185dc:	2000      	movs	r0, #0
 80185de:	4770      	bx	lr
 80185e0:	2001      	movs	r0, #1
 80185e2:	4770      	bx	lr
 80185e4:	2000efa4 	.word	0x2000efa4
 80185e8:	2000efac 	.word	0x2000efac
 80185ec:	2000efa8 	.word	0x2000efa8
 80185f0:	2000ef8c 	.word	0x2000ef8c

080185f4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80185f4:	4a12      	ldr	r2, [pc, #72]	; (8018640 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80185f6:	8803      	ldrh	r3, [r0, #0]
 80185f8:	8811      	ldrh	r1, [r2, #0]
 80185fa:	428b      	cmp	r3, r1
 80185fc:	d20b      	bcs.n	8018616 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80185fe:	4a11      	ldr	r2, [pc, #68]	; (8018644 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018600:	6812      	ldr	r2, [r2, #0]
 8018602:	b112      	cbz	r2, 801860a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8018604:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018608:	b9c0      	cbnz	r0, 801863c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 801860a:	4a0f      	ldr	r2, [pc, #60]	; (8018648 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 801860c:	6811      	ldr	r1, [r2, #0]
 801860e:	2214      	movs	r2, #20
 8018610:	4353      	muls	r3, r2
 8018612:	58c8      	ldr	r0, [r1, r3]
 8018614:	4770      	bx	lr
 8018616:	4a0d      	ldr	r2, [pc, #52]	; (801864c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8018618:	8812      	ldrh	r2, [r2, #0]
 801861a:	440a      	add	r2, r1
 801861c:	4293      	cmp	r3, r2
 801861e:	da04      	bge.n	801862a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8018620:	4a08      	ldr	r2, [pc, #32]	; (8018644 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8018622:	6812      	ldr	r2, [r2, #0]
 8018624:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8018628:	4770      	bx	lr
 801862a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801862e:	4293      	cmp	r3, r2
 8018630:	d103      	bne.n	801863a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8018632:	4b07      	ldr	r3, [pc, #28]	; (8018650 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8018634:	681b      	ldr	r3, [r3, #0]
 8018636:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8018638:	4770      	bx	lr
 801863a:	2000      	movs	r0, #0
 801863c:	4770      	bx	lr
 801863e:	bf00      	nop
 8018640:	2000efa4 	.word	0x2000efa4
 8018644:	2000ef88 	.word	0x2000ef88
 8018648:	2000efac 	.word	0x2000efac
 801864c:	2000efa8 	.word	0x2000efa8
 8018650:	2000ef1c 	.word	0x2000ef1c

08018654 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018654:	4b24      	ldr	r3, [pc, #144]	; (80186e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018656:	8802      	ldrh	r2, [r0, #0]
 8018658:	8818      	ldrh	r0, [r3, #0]
 801865a:	4282      	cmp	r2, r0
 801865c:	d221      	bcs.n	80186a2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801865e:	4b23      	ldr	r3, [pc, #140]	; (80186ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018660:	6819      	ldr	r1, [r3, #0]
 8018662:	2314      	movs	r3, #20
 8018664:	fb03 1302 	mla	r3, r3, r2, r1
 8018668:	6858      	ldr	r0, [r3, #4]
 801866a:	2800      	cmp	r0, #0
 801866c:	d03a      	beq.n	80186e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801866e:	4920      	ldr	r1, [pc, #128]	; (80186f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018670:	6809      	ldr	r1, [r1, #0]
 8018672:	2900      	cmp	r1, #0
 8018674:	d036      	beq.n	80186e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018676:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801867a:	2900      	cmp	r1, #0
 801867c:	d032      	beq.n	80186e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801867e:	891a      	ldrh	r2, [r3, #8]
 8018680:	8958      	ldrh	r0, [r3, #10]
 8018682:	4350      	muls	r0, r2
 8018684:	7c5a      	ldrb	r2, [r3, #17]
 8018686:	7cdb      	ldrb	r3, [r3, #19]
 8018688:	0952      	lsrs	r2, r2, #5
 801868a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801868e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018692:	2b0b      	cmp	r3, #11
 8018694:	bf18      	it	ne
 8018696:	0040      	lslne	r0, r0, #1
 8018698:	3003      	adds	r0, #3
 801869a:	f020 0003 	bic.w	r0, r0, #3
 801869e:	4408      	add	r0, r1
 80186a0:	4770      	bx	lr
 80186a2:	4b14      	ldr	r3, [pc, #80]	; (80186f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80186a4:	881b      	ldrh	r3, [r3, #0]
 80186a6:	4403      	add	r3, r0
 80186a8:	429a      	cmp	r2, r3
 80186aa:	da1a      	bge.n	80186e2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80186ac:	4b12      	ldr	r3, [pc, #72]	; (80186f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80186ae:	681b      	ldr	r3, [r3, #0]
 80186b0:	1a10      	subs	r0, r2, r0
 80186b2:	210e      	movs	r1, #14
 80186b4:	fb01 3000 	mla	r0, r1, r0, r3
 80186b8:	7b03      	ldrb	r3, [r0, #12]
 80186ba:	f003 031f 	and.w	r3, r3, #31
 80186be:	2b0b      	cmp	r3, #11
 80186c0:	d10b      	bne.n	80186da <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80186c2:	8903      	ldrh	r3, [r0, #8]
 80186c4:	8940      	ldrh	r0, [r0, #10]
 80186c6:	4358      	muls	r0, r3
 80186c8:	4b09      	ldr	r3, [pc, #36]	; (80186f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80186ca:	6819      	ldr	r1, [r3, #0]
 80186cc:	3003      	adds	r0, #3
 80186ce:	f020 0303 	bic.w	r3, r0, #3
 80186d2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80186d6:	4418      	add	r0, r3
 80186d8:	4770      	bx	lr
 80186da:	2b0d      	cmp	r3, #13
 80186dc:	d101      	bne.n	80186e2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80186de:	300d      	adds	r0, #13
 80186e0:	4770      	bx	lr
 80186e2:	2000      	movs	r0, #0
 80186e4:	4770      	bx	lr
 80186e6:	bf00      	nop
 80186e8:	2000efa4 	.word	0x2000efa4
 80186ec:	2000efac 	.word	0x2000efac
 80186f0:	2000ef88 	.word	0x2000ef88
 80186f4:	2000efa8 	.word	0x2000efa8
 80186f8:	2000ef8c 	.word	0x2000ef8c

080186fc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80186fc:	b510      	push	{r4, lr}
 80186fe:	4a17      	ldr	r2, [pc, #92]	; (801875c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8018700:	8803      	ldrh	r3, [r0, #0]
 8018702:	8812      	ldrh	r2, [r2, #0]
 8018704:	4293      	cmp	r3, r2
 8018706:	d20c      	bcs.n	8018722 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8018708:	4a15      	ldr	r2, [pc, #84]	; (8018760 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 801870a:	6812      	ldr	r2, [r2, #0]
 801870c:	2114      	movs	r1, #20
 801870e:	fb01 2303 	mla	r3, r1, r3, r2
 8018712:	7c58      	ldrb	r0, [r3, #17]
 8018714:	0942      	lsrs	r2, r0, #5
 8018716:	7cd8      	ldrb	r0, [r3, #19]
 8018718:	f3c0 1042 	ubfx	r0, r0, #5, #3
 801871c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8018720:	bd10      	pop	{r4, pc}
 8018722:	4910      	ldr	r1, [pc, #64]	; (8018764 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8018724:	8809      	ldrh	r1, [r1, #0]
 8018726:	4411      	add	r1, r2
 8018728:	428b      	cmp	r3, r1
 801872a:	da09      	bge.n	8018740 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 801872c:	1a9b      	subs	r3, r3, r2
 801872e:	4a0e      	ldr	r2, [pc, #56]	; (8018768 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8018730:	6812      	ldr	r2, [r2, #0]
 8018732:	210e      	movs	r1, #14
 8018734:	fb01 2303 	mla	r3, r1, r3, r2
 8018738:	7b18      	ldrb	r0, [r3, #12]
 801873a:	f000 001f 	and.w	r0, r0, #31
 801873e:	e7ef      	b.n	8018720 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018740:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018744:	4293      	cmp	r3, r2
 8018746:	d106      	bne.n	8018756 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8018748:	f7eb fe62 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 801874c:	6803      	ldr	r3, [r0, #0]
 801874e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018752:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018754:	4718      	bx	r3
 8018756:	2000      	movs	r0, #0
 8018758:	e7e2      	b.n	8018720 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801875a:	bf00      	nop
 801875c:	2000efa4 	.word	0x2000efa4
 8018760:	2000efac 	.word	0x2000efac
 8018764:	2000efa8 	.word	0x2000efa8
 8018768:	2000ef8c 	.word	0x2000ef8c

0801876c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 801876c:	2010      	movs	r0, #16
 801876e:	4770      	bx	lr

08018770 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018770:	2000      	movs	r0, #0
 8018772:	4770      	bx	lr

08018774 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018774:	4b02      	ldr	r3, [pc, #8]	; (8018780 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018776:	8818      	ldrh	r0, [r3, #0]
 8018778:	0040      	lsls	r0, r0, #1
 801877a:	b280      	uxth	r0, r0
 801877c:	4770      	bx	lr
 801877e:	bf00      	nop
 8018780:	2000ef16 	.word	0x2000ef16

08018784 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018784:	2bff      	cmp	r3, #255	; 0xff
 8018786:	d050      	beq.n	801882a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018788:	2a0b      	cmp	r2, #11
 801878a:	d04a      	beq.n	8018822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 801878c:	d80e      	bhi.n	80187ac <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 801878e:	2a03      	cmp	r2, #3
 8018790:	d03f      	beq.n	8018812 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018792:	d804      	bhi.n	801879e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018794:	2a01      	cmp	r2, #1
 8018796:	d03e      	beq.n	8018816 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018798:	d93f      	bls.n	801881a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801879a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 801879c:	4770      	bx	lr
 801879e:	2a09      	cmp	r2, #9
 80187a0:	d03f      	beq.n	8018822 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 80187a2:	d83c      	bhi.n	801881e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80187a4:	2a08      	cmp	r2, #8
 80187a6:	d03a      	beq.n	801881e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 80187a8:	2000      	movs	r0, #0
 80187aa:	4770      	bx	lr
 80187ac:	2a2f      	cmp	r2, #47	; 0x2f
 80187ae:	d024      	beq.n	80187fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 80187b0:	d80d      	bhi.n	80187ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 80187b2:	2a2d      	cmp	r2, #45	; 0x2d
 80187b4:	d014      	beq.n	80187e0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 80187b6:	d826      	bhi.n	8018806 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80187b8:	2a2c      	cmp	r2, #44	; 0x2c
 80187ba:	d1f5      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187bc:	684b      	ldr	r3, [r1, #4]
 80187be:	781b      	ldrb	r3, [r3, #0]
 80187c0:	2b01      	cmp	r3, #1
 80187c2:	d018      	beq.n	80187f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 80187c4:	d323      	bcc.n	801880e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 80187c6:	2b02      	cmp	r3, #2
 80187c8:	d1ee      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187ca:	6880      	ldr	r0, [r0, #8]
 80187cc:	4770      	bx	lr
 80187ce:	2a31      	cmp	r2, #49	; 0x31
 80187d0:	d004      	beq.n	80187dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80187d2:	d328      	bcc.n	8018826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80187d4:	2a32      	cmp	r2, #50	; 0x32
 80187d6:	d026      	beq.n	8018826 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80187d8:	2a33      	cmp	r2, #51	; 0x33
 80187da:	d1e5      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187dc:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80187de:	4770      	bx	lr
 80187e0:	684b      	ldr	r3, [r1, #4]
 80187e2:	781b      	ldrb	r3, [r3, #0]
 80187e4:	2b01      	cmp	r3, #1
 80187e6:	d004      	beq.n	80187f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80187e8:	d30b      	bcc.n	8018802 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80187ea:	2b02      	cmp	r3, #2
 80187ec:	d1dc      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80187ee:	6900      	ldr	r0, [r0, #16]
 80187f0:	4770      	bx	lr
 80187f2:	6a00      	ldr	r0, [r0, #32]
 80187f4:	4770      	bx	lr
 80187f6:	6980      	ldr	r0, [r0, #24]
 80187f8:	4770      	bx	lr
 80187fa:	684b      	ldr	r3, [r1, #4]
 80187fc:	781b      	ldrb	r3, [r3, #0]
 80187fe:	2b00      	cmp	r3, #0
 8018800:	d1d2      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018802:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018804:	4770      	bx	lr
 8018806:	684b      	ldr	r3, [r1, #4]
 8018808:	781b      	ldrb	r3, [r3, #0]
 801880a:	2b00      	cmp	r3, #0
 801880c:	d1cc      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801880e:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018810:	4770      	bx	lr
 8018812:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018814:	4770      	bx	lr
 8018816:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018818:	4770      	bx	lr
 801881a:	6c00      	ldr	r0, [r0, #64]	; 0x40
 801881c:	4770      	bx	lr
 801881e:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018820:	4770      	bx	lr
 8018822:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018824:	4770      	bx	lr
 8018826:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018828:	4770      	bx	lr
 801882a:	2a0b      	cmp	r2, #11
 801882c:	d049      	beq.n	80188c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 801882e:	d80e      	bhi.n	801884e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018830:	2a03      	cmp	r2, #3
 8018832:	d040      	beq.n	80188b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018834:	d804      	bhi.n	8018840 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018836:	2a01      	cmp	r2, #1
 8018838:	d03f      	beq.n	80188ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 801883a:	d940      	bls.n	80188be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 801883c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 801883e:	4770      	bx	lr
 8018840:	2a09      	cmp	r2, #9
 8018842:	d03e      	beq.n	80188c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018844:	d801      	bhi.n	801884a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018846:	2a08      	cmp	r2, #8
 8018848:	d1ae      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801884a:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 801884c:	4770      	bx	lr
 801884e:	2a2f      	cmp	r2, #47	; 0x2f
 8018850:	d024      	beq.n	801889c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018852:	d80d      	bhi.n	8018870 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018854:	2a2d      	cmp	r2, #45	; 0x2d
 8018856:	d014      	beq.n	8018882 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018858:	d826      	bhi.n	80188a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801885a:	2a2c      	cmp	r2, #44	; 0x2c
 801885c:	d1a4      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801885e:	684b      	ldr	r3, [r1, #4]
 8018860:	781b      	ldrb	r3, [r3, #0]
 8018862:	2b01      	cmp	r3, #1
 8018864:	d018      	beq.n	8018898 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018866:	d324      	bcc.n	80188b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018868:	2b02      	cmp	r3, #2
 801886a:	d19d      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801886c:	68c0      	ldr	r0, [r0, #12]
 801886e:	4770      	bx	lr
 8018870:	2a31      	cmp	r2, #49	; 0x31
 8018872:	d004      	beq.n	801887e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018874:	d327      	bcc.n	80188c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018876:	2a32      	cmp	r2, #50	; 0x32
 8018878:	d025      	beq.n	80188c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801887a:	2a33      	cmp	r2, #51	; 0x33
 801887c:	d194      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801887e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018880:	4770      	bx	lr
 8018882:	684b      	ldr	r3, [r1, #4]
 8018884:	781b      	ldrb	r3, [r3, #0]
 8018886:	2b01      	cmp	r3, #1
 8018888:	d004      	beq.n	8018894 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801888a:	d30b      	bcc.n	80188a4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 801888c:	2b02      	cmp	r3, #2
 801888e:	d18b      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018890:	6940      	ldr	r0, [r0, #20]
 8018892:	4770      	bx	lr
 8018894:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018896:	4770      	bx	lr
 8018898:	69c0      	ldr	r0, [r0, #28]
 801889a:	4770      	bx	lr
 801889c:	684b      	ldr	r3, [r1, #4]
 801889e:	781b      	ldrb	r3, [r3, #0]
 80188a0:	2b00      	cmp	r3, #0
 80188a2:	d181      	bne.n	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188a4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80188a6:	4770      	bx	lr
 80188a8:	684b      	ldr	r3, [r1, #4]
 80188aa:	781b      	ldrb	r3, [r3, #0]
 80188ac:	2b00      	cmp	r3, #0
 80188ae:	f47f af7b 	bne.w	80187a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80188b2:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 80188b4:	4770      	bx	lr
 80188b6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 80188b8:	4770      	bx	lr
 80188ba:	6d40      	ldr	r0, [r0, #84]	; 0x54
 80188bc:	4770      	bx	lr
 80188be:	6c40      	ldr	r0, [r0, #68]	; 0x44
 80188c0:	4770      	bx	lr
 80188c2:	6e40      	ldr	r0, [r0, #100]	; 0x64
 80188c4:	4770      	bx	lr
 80188c6:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 80188c8:	4770      	bx	lr

080188ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80188ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188ce:	b087      	sub	sp, #28
 80188d0:	9815      	ldr	r0, [sp, #84]	; 0x54
 80188d2:	9205      	str	r2, [sp, #20]
 80188d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80188d8:	9202      	str	r2, [sp, #8]
 80188da:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80188de:	9101      	str	r1, [sp, #4]
 80188e0:	6841      	ldr	r1, [r0, #4]
 80188e2:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80188e6:	fb01 2404 	mla	r4, r1, r4, r2
 80188ea:	6802      	ldr	r2, [r0, #0]
 80188ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80188f0:	f8de 2000 	ldr.w	r2, [lr]
 80188f4:	9203      	str	r2, [sp, #12]
 80188f6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80188fa:	3204      	adds	r2, #4
 80188fc:	9204      	str	r2, [sp, #16]
 80188fe:	9a02      	ldr	r2, [sp, #8]
 8018900:	43d6      	mvns	r6, r2
 8018902:	b2f6      	uxtb	r6, r6
 8018904:	9a01      	ldr	r2, [sp, #4]
 8018906:	2a00      	cmp	r2, #0
 8018908:	dc03      	bgt.n	8018912 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801890a:	9a05      	ldr	r2, [sp, #20]
 801890c:	2a00      	cmp	r2, #0
 801890e:	f340 8129 	ble.w	8018b64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018912:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018914:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018918:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 801891c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018920:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018922:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018926:	2b00      	cmp	r3, #0
 8018928:	dd0e      	ble.n	8018948 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801892a:	1408      	asrs	r0, r1, #16
 801892c:	d405      	bmi.n	801893a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801892e:	4560      	cmp	r0, ip
 8018930:	da03      	bge.n	801893a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018932:	1410      	asrs	r0, r2, #16
 8018934:	d401      	bmi.n	801893a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018936:	42b8      	cmp	r0, r7
 8018938:	db07      	blt.n	801894a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801893a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801893c:	4401      	add	r1, r0
 801893e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018940:	3b01      	subs	r3, #1
 8018942:	4402      	add	r2, r0
 8018944:	3402      	adds	r4, #2
 8018946:	e7ee      	b.n	8018926 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018948:	d071      	beq.n	8018a2e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801894a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801894c:	1e58      	subs	r0, r3, #1
 801894e:	fb05 1500 	mla	r5, r5, r0, r1
 8018952:	142d      	asrs	r5, r5, #16
 8018954:	d45f      	bmi.n	8018a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018956:	4565      	cmp	r5, ip
 8018958:	da5d      	bge.n	8018a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801895a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801895c:	fb05 2000 	mla	r0, r5, r0, r2
 8018960:	1400      	asrs	r0, r0, #16
 8018962:	d458      	bmi.n	8018a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018964:	42b8      	cmp	r0, r7
 8018966:	da56      	bge.n	8018a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018968:	f8bd b008 	ldrh.w	fp, [sp, #8]
 801896c:	4699      	mov	r9, r3
 801896e:	46a2      	mov	sl, r4
 8018970:	f1b9 0f00 	cmp.w	r9, #0
 8018974:	dd57      	ble.n	8018a26 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018976:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801897a:	9803      	ldr	r0, [sp, #12]
 801897c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018980:	140d      	asrs	r5, r1, #16
 8018982:	fb07 000c 	mla	r0, r7, ip, r0
 8018986:	f109 39ff 	add.w	r9, r9, #4294967295
 801898a:	5d40      	ldrb	r0, [r0, r5]
 801898c:	9d04      	ldr	r5, [sp, #16]
 801898e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018992:	f8ba 5000 	ldrh.w	r5, [sl]
 8018996:	122f      	asrs	r7, r5, #8
 8018998:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801899c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80189a0:	fb17 f706 	smulbb	r7, r7, r6
 80189a4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80189a8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80189ac:	00ed      	lsls	r5, r5, #3
 80189ae:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80189b2:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80189b6:	10c7      	asrs	r7, r0, #3
 80189b8:	b2ed      	uxtb	r5, r5
 80189ba:	00c0      	lsls	r0, r0, #3
 80189bc:	fb18 f806 	smulbb	r8, r8, r6
 80189c0:	fb15 f506 	smulbb	r5, r5, r6
 80189c4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189c8:	b2c0      	uxtb	r0, r0
 80189ca:	fa1f fc8c 	uxth.w	ip, ip
 80189ce:	fb07 870b 	mla	r7, r7, fp, r8
 80189d2:	fb00 500b 	mla	r0, r0, fp, r5
 80189d6:	b280      	uxth	r0, r0
 80189d8:	b2bf      	uxth	r7, r7
 80189da:	f10c 0501 	add.w	r5, ip, #1
 80189de:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80189e2:	f107 0801 	add.w	r8, r7, #1
 80189e6:	1c45      	adds	r5, r0, #1
 80189e8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80189ec:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80189f0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80189f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80189f6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80189fa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80189fe:	ea45 0c0c 	orr.w	ip, r5, ip
 8018a02:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018a06:	4401      	add	r1, r0
 8018a08:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018a0a:	ea4c 0c08 	orr.w	ip, ip, r8
 8018a0e:	f82a cb02 	strh.w	ip, [sl], #2
 8018a12:	4402      	add	r2, r0
 8018a14:	e7ac      	b.n	8018970 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018a16:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018a1a:	f04f 0800 	mov.w	r8, #0
 8018a1e:	eb03 0008 	add.w	r0, r3, r8
 8018a22:	2800      	cmp	r0, #0
 8018a24:	dc41      	bgt.n	8018aaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018a26:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018a2a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018a2e:	9b01      	ldr	r3, [sp, #4]
 8018a30:	2b00      	cmp	r3, #0
 8018a32:	f340 8097 	ble.w	8018b64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018a36:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018a3a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018a3e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018a42:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a44:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018a48:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018a4c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018a50:	eef0 6a62 	vmov.f32	s13, s5
 8018a54:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018a58:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018a60:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018a64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018a68:	eef0 6a43 	vmov.f32	s13, s6
 8018a6c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018a70:	ee12 2a90 	vmov	r2, s5
 8018a74:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018a78:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a7c:	ee13 2a10 	vmov	r2, s6
 8018a80:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a84:	fb92 f3f3 	sdiv	r3, r2, r3
 8018a88:	9314      	str	r3, [sp, #80]	; 0x50
 8018a8a:	9b01      	ldr	r3, [sp, #4]
 8018a8c:	9a05      	ldr	r2, [sp, #20]
 8018a8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018a92:	3b01      	subs	r3, #1
 8018a94:	9301      	str	r3, [sp, #4]
 8018a96:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018a9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018a9c:	eeb0 3a67 	vmov.f32	s6, s15
 8018aa0:	bf08      	it	eq
 8018aa2:	4613      	moveq	r3, r2
 8018aa4:	eef0 2a47 	vmov.f32	s5, s14
 8018aa8:	e72c      	b.n	8018904 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018aaa:	140f      	asrs	r7, r1, #16
 8018aac:	d453      	bmi.n	8018b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018aae:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018ab2:	42bd      	cmp	r5, r7
 8018ab4:	dd4f      	ble.n	8018b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018ab6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018aba:	d44c      	bmi.n	8018b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018abc:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018ac0:	4560      	cmp	r0, ip
 8018ac2:	dd48      	ble.n	8018b56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018ac4:	9803      	ldr	r0, [sp, #12]
 8018ac6:	b22d      	sxth	r5, r5
 8018ac8:	fb0c 0505 	mla	r5, ip, r5, r0
 8018acc:	5de8      	ldrb	r0, [r5, r7]
 8018ace:	9d04      	ldr	r5, [sp, #16]
 8018ad0:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018ad4:	f06f 0501 	mvn.w	r5, #1
 8018ad8:	fb05 fb08 	mul.w	fp, r5, r8
 8018adc:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018ae0:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018ae4:	122f      	asrs	r7, r5, #8
 8018ae6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018aea:	fb17 f706 	smulbb	r7, r7, r6
 8018aee:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018af2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018af6:	00ed      	lsls	r5, r5, #3
 8018af8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018afc:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018b00:	10c7      	asrs	r7, r0, #3
 8018b02:	b2ed      	uxtb	r5, r5
 8018b04:	00c0      	lsls	r0, r0, #3
 8018b06:	fb19 f906 	smulbb	r9, r9, r6
 8018b0a:	fb15 f506 	smulbb	r5, r5, r6
 8018b0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018b12:	b2c0      	uxtb	r0, r0
 8018b14:	fa1f fc8c 	uxth.w	ip, ip
 8018b18:	fb07 970a 	mla	r7, r7, sl, r9
 8018b1c:	fb00 500a 	mla	r0, r0, sl, r5
 8018b20:	b2bf      	uxth	r7, r7
 8018b22:	b280      	uxth	r0, r0
 8018b24:	f10c 0501 	add.w	r5, ip, #1
 8018b28:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018b2c:	f107 0901 	add.w	r9, r7, #1
 8018b30:	1c45      	adds	r5, r0, #1
 8018b32:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018b36:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018b3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018b3e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018b42:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018b46:	ea45 0c0c 	orr.w	ip, r5, ip
 8018b4a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018b4e:	ea4c 0c09 	orr.w	ip, ip, r9
 8018b52:	f824 c00b 	strh.w	ip, [r4, fp]
 8018b56:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018b58:	4401      	add	r1, r0
 8018b5a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018b5c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018b60:	4402      	add	r2, r0
 8018b62:	e75c      	b.n	8018a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018b64:	b007      	add	sp, #28
 8018b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b6a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b6e:	b085      	sub	sp, #20
 8018b70:	4693      	mov	fp, r2
 8018b72:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018b74:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018b76:	6870      	ldr	r0, [r6, #4]
 8018b78:	9100      	str	r1, [sp, #0]
 8018b7a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018b7e:	fb00 2404 	mla	r4, r0, r4, r2
 8018b82:	6832      	ldr	r2, [r6, #0]
 8018b84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b88:	682a      	ldr	r2, [r5, #0]
 8018b8a:	9201      	str	r2, [sp, #4]
 8018b8c:	686a      	ldr	r2, [r5, #4]
 8018b8e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018b92:	3204      	adds	r2, #4
 8018b94:	9202      	str	r2, [sp, #8]
 8018b96:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018b9a:	9a00      	ldr	r2, [sp, #0]
 8018b9c:	2a00      	cmp	r2, #0
 8018b9e:	dc03      	bgt.n	8018ba8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018ba0:	f1bb 0f00 	cmp.w	fp, #0
 8018ba4:	f340 80a0 	ble.w	8018ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018ba8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018baa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018bae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018bb2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018bb6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018bb8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018bbc:	2b00      	cmp	r3, #0
 8018bbe:	dd0c      	ble.n	8018bda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bc0:	1406      	asrs	r6, r0, #16
 8018bc2:	d405      	bmi.n	8018bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018bc4:	454e      	cmp	r6, r9
 8018bc6:	da03      	bge.n	8018bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018bc8:	1416      	asrs	r6, r2, #16
 8018bca:	d401      	bmi.n	8018bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018bcc:	4546      	cmp	r6, r8
 8018bce:	db05      	blt.n	8018bdc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018bd0:	4470      	add	r0, lr
 8018bd2:	4462      	add	r2, ip
 8018bd4:	3b01      	subs	r3, #1
 8018bd6:	3402      	adds	r4, #2
 8018bd8:	e7f0      	b.n	8018bbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018bda:	d00f      	beq.n	8018bfc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018bdc:	1e5e      	subs	r6, r3, #1
 8018bde:	fb0e 0706 	mla	r7, lr, r6, r0
 8018be2:	143f      	asrs	r7, r7, #16
 8018be4:	d541      	bpl.n	8018c6a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018be6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018bea:	4698      	mov	r8, r3
 8018bec:	9603      	str	r6, [sp, #12]
 8018bee:	f1b8 0f00 	cmp.w	r8, #0
 8018bf2:	dc59      	bgt.n	8018ca8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018bf4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018bf8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018bfc:	9b00      	ldr	r3, [sp, #0]
 8018bfe:	2b00      	cmp	r3, #0
 8018c00:	dd72      	ble.n	8018ce8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018c02:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c0a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018c0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c10:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c14:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018c18:	eeb0 6a62 	vmov.f32	s12, s5
 8018c1c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018c20:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c24:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018c28:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018c2c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018c30:	eeb0 6a43 	vmov.f32	s12, s6
 8018c34:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018c38:	ee12 2a90 	vmov	r2, s5
 8018c3c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018c40:	fb92 fef3 	sdiv	lr, r2, r3
 8018c44:	ee13 2a10 	vmov	r2, s6
 8018c48:	fb92 fcf3 	sdiv	ip, r2, r3
 8018c4c:	9b00      	ldr	r3, [sp, #0]
 8018c4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018c52:	3b01      	subs	r3, #1
 8018c54:	9300      	str	r3, [sp, #0]
 8018c56:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018c5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018c5c:	eeb0 3a67 	vmov.f32	s6, s15
 8018c60:	bf08      	it	eq
 8018c62:	465b      	moveq	r3, fp
 8018c64:	eef0 2a47 	vmov.f32	s5, s14
 8018c68:	e797      	b.n	8018b9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018c6a:	454f      	cmp	r7, r9
 8018c6c:	dabb      	bge.n	8018be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c6e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018c72:	1436      	asrs	r6, r6, #16
 8018c74:	d4b7      	bmi.n	8018be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c76:	4546      	cmp	r6, r8
 8018c78:	dab5      	bge.n	8018be6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018c7a:	461e      	mov	r6, r3
 8018c7c:	46a0      	mov	r8, r4
 8018c7e:	2e00      	cmp	r6, #0
 8018c80:	ddb8      	ble.n	8018bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018c82:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018c86:	9901      	ldr	r1, [sp, #4]
 8018c88:	1417      	asrs	r7, r2, #16
 8018c8a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018c8e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018c92:	9902      	ldr	r1, [sp, #8]
 8018c94:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018c98:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018c9c:	f828 7b02 	strh.w	r7, [r8], #2
 8018ca0:	4470      	add	r0, lr
 8018ca2:	4462      	add	r2, ip
 8018ca4:	3e01      	subs	r6, #1
 8018ca6:	e7ea      	b.n	8018c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018ca8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018cac:	d417      	bmi.n	8018cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cae:	68ae      	ldr	r6, [r5, #8]
 8018cb0:	454e      	cmp	r6, r9
 8018cb2:	dd14      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cb4:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018cb8:	d411      	bmi.n	8018cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cba:	68ef      	ldr	r7, [r5, #12]
 8018cbc:	4557      	cmp	r7, sl
 8018cbe:	dd0e      	ble.n	8018cde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018cc0:	9f01      	ldr	r7, [sp, #4]
 8018cc2:	b236      	sxth	r6, r6
 8018cc4:	fb0a 7606 	mla	r6, sl, r6, r7
 8018cc8:	9f02      	ldr	r7, [sp, #8]
 8018cca:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018cce:	f06f 0101 	mvn.w	r1, #1
 8018cd2:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018cd6:	fb01 f608 	mul.w	r6, r1, r8
 8018cda:	9903      	ldr	r1, [sp, #12]
 8018cdc:	538f      	strh	r7, [r1, r6]
 8018cde:	4470      	add	r0, lr
 8018ce0:	4462      	add	r2, ip
 8018ce2:	f108 38ff 	add.w	r8, r8, #4294967295
 8018ce6:	e782      	b.n	8018bee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018ce8:	b005      	add	sp, #20
 8018cea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018cee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018cee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018cf2:	b087      	sub	sp, #28
 8018cf4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018cf6:	9205      	str	r2, [sp, #20]
 8018cf8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018cfc:	9203      	str	r2, [sp, #12]
 8018cfe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018d02:	9102      	str	r1, [sp, #8]
 8018d04:	6861      	ldr	r1, [r4, #4]
 8018d06:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018d0a:	fb01 2000 	mla	r0, r1, r0, r2
 8018d0e:	6822      	ldr	r2, [r4, #0]
 8018d10:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018d14:	9200      	str	r2, [sp, #0]
 8018d16:	f8dc 2000 	ldr.w	r2, [ip]
 8018d1a:	9204      	str	r2, [sp, #16]
 8018d1c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018d20:	3204      	adds	r2, #4
 8018d22:	9201      	str	r2, [sp, #4]
 8018d24:	9a03      	ldr	r2, [sp, #12]
 8018d26:	43d5      	mvns	r5, r2
 8018d28:	b2ed      	uxtb	r5, r5
 8018d2a:	9a02      	ldr	r2, [sp, #8]
 8018d2c:	2a00      	cmp	r2, #0
 8018d2e:	dc03      	bgt.n	8018d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018d30:	9a05      	ldr	r2, [sp, #20]
 8018d32:	2a00      	cmp	r2, #0
 8018d34:	f340 812c 	ble.w	8018f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018d38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018d3a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018d3e:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018d42:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018d46:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018d48:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018d4c:	2b00      	cmp	r3, #0
 8018d4e:	dd10      	ble.n	8018d72 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018d50:	140c      	asrs	r4, r1, #16
 8018d52:	d405      	bmi.n	8018d60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d54:	4574      	cmp	r4, lr
 8018d56:	da03      	bge.n	8018d60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d58:	1414      	asrs	r4, r2, #16
 8018d5a:	d401      	bmi.n	8018d60 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018d5c:	42bc      	cmp	r4, r7
 8018d5e:	db09      	blt.n	8018d74 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8018d60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8018d62:	9800      	ldr	r0, [sp, #0]
 8018d64:	4421      	add	r1, r4
 8018d66:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8018d68:	3002      	adds	r0, #2
 8018d6a:	4422      	add	r2, r4
 8018d6c:	3b01      	subs	r3, #1
 8018d6e:	9000      	str	r0, [sp, #0]
 8018d70:	e7ec      	b.n	8018d4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8018d72:	d071      	beq.n	8018e58 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018d74:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018d76:	1e5c      	subs	r4, r3, #1
 8018d78:	fb06 1604 	mla	r6, r6, r4, r1
 8018d7c:	1436      	asrs	r6, r6, #16
 8018d7e:	d45d      	bmi.n	8018e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d80:	4576      	cmp	r6, lr
 8018d82:	da5b      	bge.n	8018e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d84:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8018d86:	fb06 2404 	mla	r4, r6, r4, r2
 8018d8a:	1424      	asrs	r4, r4, #16
 8018d8c:	d456      	bmi.n	8018e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d8e:	42bc      	cmp	r4, r7
 8018d90:	da54      	bge.n	8018e3c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018d92:	f8dd 9000 	ldr.w	r9, [sp]
 8018d96:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018d9a:	4698      	mov	r8, r3
 8018d9c:	f1b8 0f00 	cmp.w	r8, #0
 8018da0:	dd54      	ble.n	8018e4c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018da2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018da6:	9804      	ldr	r0, [sp, #16]
 8018da8:	1414      	asrs	r4, r2, #16
 8018daa:	fb07 0404 	mla	r4, r7, r4, r0
 8018dae:	140e      	asrs	r6, r1, #16
 8018db0:	9801      	ldr	r0, [sp, #4]
 8018db2:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018db6:	f8b9 4000 	ldrh.w	r4, [r9]
 8018dba:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018dbe:	eb00 0b0e 	add.w	fp, r0, lr
 8018dc2:	1227      	asrs	r7, r4, #8
 8018dc4:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018dc8:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018dcc:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8018dd0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018dd2:	fb16 f60a 	smulbb	r6, r6, sl
 8018dd6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018dda:	fb07 6705 	mla	r7, r7, r5, r6
 8018dde:	10e6      	asrs	r6, r4, #3
 8018de0:	00e4      	lsls	r4, r4, #3
 8018de2:	b2e4      	uxtb	r4, r4
 8018de4:	fb1b fb0a 	smulbb	fp, fp, sl
 8018de8:	fb14 f405 	smulbb	r4, r4, r5
 8018dec:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018df0:	b2bf      	uxth	r7, r7
 8018df2:	fb06 b605 	mla	r6, r6, r5, fp
 8018df6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018dfa:	b2b6      	uxth	r6, r6
 8018dfc:	fa1f fe8e 	uxth.w	lr, lr
 8018e00:	1c7c      	adds	r4, r7, #1
 8018e02:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018e06:	f106 0b01 	add.w	fp, r6, #1
 8018e0a:	f10e 0401 	add.w	r4, lr, #1
 8018e0e:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8018e12:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018e16:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018e1a:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018e1e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018e22:	4327      	orrs	r7, r4
 8018e24:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018e28:	4401      	add	r1, r0
 8018e2a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018e2c:	ea47 070b 	orr.w	r7, r7, fp
 8018e30:	f829 7b02 	strh.w	r7, [r9], #2
 8018e34:	4402      	add	r2, r0
 8018e36:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e3a:	e7af      	b.n	8018d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018e3c:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8018e40:	f04f 0e00 	mov.w	lr, #0
 8018e44:	eb03 040e 	add.w	r4, r3, lr
 8018e48:	2c00      	cmp	r4, #0
 8018e4a:	dc43      	bgt.n	8018ed4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8018e4c:	9a00      	ldr	r2, [sp, #0]
 8018e4e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e52:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8018e56:	9300      	str	r3, [sp, #0]
 8018e58:	9b02      	ldr	r3, [sp, #8]
 8018e5a:	2b00      	cmp	r3, #0
 8018e5c:	f340 8098 	ble.w	8018f90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018e60:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018e68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018e6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e72:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e7a:	eef0 6a62 	vmov.f32	s13, s5
 8018e7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018e86:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e8a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018e8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e92:	eef0 6a43 	vmov.f32	s13, s6
 8018e96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e9a:	ee12 2a90 	vmov	r2, s5
 8018e9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ea2:	fb92 f3f3 	sdiv	r3, r2, r3
 8018ea6:	ee13 2a10 	vmov	r2, s6
 8018eaa:	9313      	str	r3, [sp, #76]	; 0x4c
 8018eac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018eae:	fb92 f3f3 	sdiv	r3, r2, r3
 8018eb2:	9314      	str	r3, [sp, #80]	; 0x50
 8018eb4:	9b02      	ldr	r3, [sp, #8]
 8018eb6:	9a05      	ldr	r2, [sp, #20]
 8018eb8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018ebc:	3b01      	subs	r3, #1
 8018ebe:	9302      	str	r3, [sp, #8]
 8018ec0:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018ec4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018ec6:	eeb0 3a67 	vmov.f32	s6, s15
 8018eca:	bf08      	it	eq
 8018ecc:	4613      	moveq	r3, r2
 8018ece:	eef0 2a47 	vmov.f32	s5, s14
 8018ed2:	e72a      	b.n	8018d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018ed4:	140f      	asrs	r7, r1, #16
 8018ed6:	d454      	bmi.n	8018f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018ed8:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018edc:	42be      	cmp	r6, r7
 8018ede:	dd50      	ble.n	8018f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018ee0:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018ee4:	d44d      	bmi.n	8018f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018ee6:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018eea:	4544      	cmp	r4, r8
 8018eec:	dd49      	ble.n	8018f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018eee:	9c04      	ldr	r4, [sp, #16]
 8018ef0:	b236      	sxth	r6, r6
 8018ef2:	fb08 4606 	mla	r6, r8, r6, r4
 8018ef6:	f06f 0001 	mvn.w	r0, #1
 8018efa:	f816 8007 	ldrb.w	r8, [r6, r7]
 8018efe:	9c01      	ldr	r4, [sp, #4]
 8018f00:	fb00 fa0e 	mul.w	sl, r0, lr
 8018f04:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8018f08:	9800      	ldr	r0, [sp, #0]
 8018f0a:	eb04 0b08 	add.w	fp, r4, r8
 8018f0e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8018f12:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018f16:	9801      	ldr	r0, [sp, #4]
 8018f18:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018f1c:	f810 8008 	ldrb.w	r8, [r0, r8]
 8018f20:	9800      	ldr	r0, [sp, #0]
 8018f22:	1227      	asrs	r7, r4, #8
 8018f24:	fb16 f609 	smulbb	r6, r6, r9
 8018f28:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018f2c:	fb07 6705 	mla	r7, r7, r5, r6
 8018f30:	10e6      	asrs	r6, r4, #3
 8018f32:	00e4      	lsls	r4, r4, #3
 8018f34:	b2e4      	uxtb	r4, r4
 8018f36:	fb1b fb09 	smulbb	fp, fp, r9
 8018f3a:	fb14 f405 	smulbb	r4, r4, r5
 8018f3e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018f42:	b2bf      	uxth	r7, r7
 8018f44:	fb06 b605 	mla	r6, r6, r5, fp
 8018f48:	fb08 4809 	mla	r8, r8, r9, r4
 8018f4c:	b2b6      	uxth	r6, r6
 8018f4e:	fa1f f888 	uxth.w	r8, r8
 8018f52:	1c7c      	adds	r4, r7, #1
 8018f54:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8018f58:	f106 0b01 	add.w	fp, r6, #1
 8018f5c:	f108 0401 	add.w	r4, r8, #1
 8018f60:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018f64:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018f68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8018f6c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8018f70:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018f74:	4327      	orrs	r7, r4
 8018f76:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018f7a:	ea47 070b 	orr.w	r7, r7, fp
 8018f7e:	f820 700a 	strh.w	r7, [r0, sl]
 8018f82:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018f84:	4401      	add	r1, r0
 8018f86:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018f88:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018f8c:	4402      	add	r2, r0
 8018f8e:	e759      	b.n	8018e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018f90:	b007      	add	sp, #28
 8018f92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f9c:	b085      	sub	sp, #20
 8018f9e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018fa2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018fa4:	9203      	str	r2, [sp, #12]
 8018fa6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018faa:	6870      	ldr	r0, [r6, #4]
 8018fac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018fae:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8018fb2:	686f      	ldr	r7, [r5, #4]
 8018fb4:	9101      	str	r1, [sp, #4]
 8018fb6:	fb00 2404 	mla	r4, r0, r4, r2
 8018fba:	6832      	ldr	r2, [r6, #0]
 8018fbc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018fc0:	682a      	ldr	r2, [r5, #0]
 8018fc2:	9202      	str	r2, [sp, #8]
 8018fc4:	3704      	adds	r7, #4
 8018fc6:	9a01      	ldr	r2, [sp, #4]
 8018fc8:	2a00      	cmp	r2, #0
 8018fca:	dc03      	bgt.n	8018fd4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018fcc:	9a03      	ldr	r2, [sp, #12]
 8018fce:	2a00      	cmp	r2, #0
 8018fd0:	f340 80cc 	ble.w	801916c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018fd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018fd6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018fda:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018fde:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018fe2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018fe4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018fe8:	2b00      	cmp	r3, #0
 8018fea:	dd0d      	ble.n	8019008 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018fec:	1406      	asrs	r6, r0, #16
 8018fee:	d405      	bmi.n	8018ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ff0:	454e      	cmp	r6, r9
 8018ff2:	da03      	bge.n	8018ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ff4:	1416      	asrs	r6, r2, #16
 8018ff6:	d401      	bmi.n	8018ffc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018ff8:	4546      	cmp	r6, r8
 8018ffa:	db06      	blt.n	801900a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018ffc:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8018ffe:	4460      	add	r0, ip
 8019000:	4432      	add	r2, r6
 8019002:	3b01      	subs	r3, #1
 8019004:	3402      	adds	r4, #2
 8019006:	e7ef      	b.n	8018fe8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8019008:	d00f      	beq.n	801902a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801900a:	1e5e      	subs	r6, r3, #1
 801900c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8019010:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8019014:	d543      	bpl.n	801909e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8019016:	4698      	mov	r8, r3
 8019018:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 801901c:	f1b8 0f00 	cmp.w	r8, #0
 8019020:	dc71      	bgt.n	8019106 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8019022:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019026:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801902a:	9b01      	ldr	r3, [sp, #4]
 801902c:	2b00      	cmp	r3, #0
 801902e:	f340 809d 	ble.w	801916c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019032:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019036:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801903a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801903e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019040:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019044:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019048:	eeb0 6a62 	vmov.f32	s12, s5
 801904c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019050:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019054:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019058:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801905c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019060:	eeb0 6a43 	vmov.f32	s12, s6
 8019064:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019068:	ee12 2a90 	vmov	r2, s5
 801906c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019070:	fb92 fcf3 	sdiv	ip, r2, r3
 8019074:	ee13 2a10 	vmov	r2, s6
 8019078:	fb92 f3f3 	sdiv	r3, r2, r3
 801907c:	9312      	str	r3, [sp, #72]	; 0x48
 801907e:	9b01      	ldr	r3, [sp, #4]
 8019080:	9a03      	ldr	r2, [sp, #12]
 8019082:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019086:	3b01      	subs	r3, #1
 8019088:	9301      	str	r3, [sp, #4]
 801908a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801908e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019090:	eeb0 3a67 	vmov.f32	s6, s15
 8019094:	bf08      	it	eq
 8019096:	4613      	moveq	r3, r2
 8019098:	eef0 2a47 	vmov.f32	s5, s14
 801909c:	e793      	b.n	8018fc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801909e:	45ce      	cmp	lr, r9
 80190a0:	dab9      	bge.n	8019016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190a2:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190a4:	fb01 2606 	mla	r6, r1, r6, r2
 80190a8:	1436      	asrs	r6, r6, #16
 80190aa:	d4b4      	bmi.n	8019016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190ac:	4546      	cmp	r6, r8
 80190ae:	dab2      	bge.n	8019016 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80190b0:	4698      	mov	r8, r3
 80190b2:	46a2      	mov	sl, r4
 80190b4:	f1b8 0f00 	cmp.w	r8, #0
 80190b8:	ddb3      	ble.n	8019022 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80190ba:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80190be:	9902      	ldr	r1, [sp, #8]
 80190c0:	1416      	asrs	r6, r2, #16
 80190c2:	fb09 1606 	mla	r6, r9, r6, r1
 80190c6:	ea4f 4e20 	mov.w	lr, r0, asr #16
 80190ca:	492a      	ldr	r1, [pc, #168]	; (8019174 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80190cc:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80190d0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80190d4:	eb07 0b0e 	add.w	fp, r7, lr
 80190d8:	4460      	add	r0, ip
 80190da:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80190de:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80190e2:	00f6      	lsls	r6, r6, #3
 80190e4:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80190e8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80190ec:	ea49 0606 	orr.w	r6, r9, r6
 80190f0:	f817 900e 	ldrb.w	r9, [r7, lr]
 80190f4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80190f6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80190fa:	f82a 6b02 	strh.w	r6, [sl], #2
 80190fe:	440a      	add	r2, r1
 8019100:	f108 38ff 	add.w	r8, r8, #4294967295
 8019104:	e7d6      	b.n	80190b4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019106:	ea5f 4920 	movs.w	r9, r0, asr #16
 801910a:	d429      	bmi.n	8019160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801910c:	68ae      	ldr	r6, [r5, #8]
 801910e:	454e      	cmp	r6, r9
 8019110:	dd26      	ble.n	8019160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019112:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8019116:	d423      	bmi.n	8019160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8019118:	68e9      	ldr	r1, [r5, #12]
 801911a:	4559      	cmp	r1, fp
 801911c:	dd20      	ble.n	8019160 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801911e:	9902      	ldr	r1, [sp, #8]
 8019120:	fa0f fe86 	sxth.w	lr, r6
 8019124:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8019128:	f06f 0101 	mvn.w	r1, #1
 801912c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8019130:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019134:	eb07 060e 	add.w	r6, r7, lr
 8019138:	fb01 f908 	mul.w	r9, r1, r8
 801913c:	f896 b002 	ldrb.w	fp, [r6, #2]
 8019140:	7876      	ldrb	r6, [r6, #1]
 8019142:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8019146:	00f6      	lsls	r6, r6, #3
 8019148:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 801914c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019150:	ea4b 0606 	orr.w	r6, fp, r6
 8019154:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019158:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801915c:	f82a 6009 	strh.w	r6, [sl, r9]
 8019160:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019162:	4460      	add	r0, ip
 8019164:	440a      	add	r2, r1
 8019166:	f108 38ff 	add.w	r8, r8, #4294967295
 801916a:	e757      	b.n	801901c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801916c:	b005      	add	sp, #20
 801916e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019172:	bf00      	nop
 8019174:	fffff800 	.word	0xfffff800

08019178 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019178:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801917c:	b087      	sub	sp, #28
 801917e:	468b      	mov	fp, r1
 8019180:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019182:	9204      	str	r2, [sp, #16]
 8019184:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019188:	9205      	str	r2, [sp, #20]
 801918a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801918e:	6841      	ldr	r1, [r0, #4]
 8019190:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019194:	fb01 2404 	mla	r4, r1, r4, r2
 8019198:	6802      	ldr	r2, [r0, #0]
 801919a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801919e:	f8dc 2000 	ldr.w	r2, [ip]
 80191a2:	9201      	str	r2, [sp, #4]
 80191a4:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80191a8:	3204      	adds	r2, #4
 80191aa:	9202      	str	r2, [sp, #8]
 80191ac:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80191b0:	f1bb 0f00 	cmp.w	fp, #0
 80191b4:	dc03      	bgt.n	80191be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80191b6:	9a04      	ldr	r2, [sp, #16]
 80191b8:	2a00      	cmp	r2, #0
 80191ba:	f340 8138 	ble.w	801942e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80191be:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80191c0:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80191c4:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 80191c8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80191cc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80191ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80191d2:	2b00      	cmp	r3, #0
 80191d4:	dd0e      	ble.n	80191f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80191d6:	1402      	asrs	r2, r0, #16
 80191d8:	d405      	bmi.n	80191e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80191da:	42ba      	cmp	r2, r7
 80191dc:	da03      	bge.n	80191e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80191de:	140a      	asrs	r2, r1, #16
 80191e0:	d401      	bmi.n	80191e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80191e2:	42b2      	cmp	r2, r6
 80191e4:	db07      	blt.n	80191f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80191e6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80191e8:	4410      	add	r0, r2
 80191ea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80191ec:	3b01      	subs	r3, #1
 80191ee:	4411      	add	r1, r2
 80191f0:	3402      	adds	r4, #2
 80191f2:	e7ee      	b.n	80191d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80191f4:	d019      	beq.n	801922a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80191f6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80191f8:	1e5a      	subs	r2, r3, #1
 80191fa:	fb05 0502 	mla	r5, r5, r2, r0
 80191fe:	142d      	asrs	r5, r5, #16
 8019200:	d409      	bmi.n	8019216 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019202:	42bd      	cmp	r5, r7
 8019204:	da07      	bge.n	8019216 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019206:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019208:	fb05 1202 	mla	r2, r5, r2, r1
 801920c:	1412      	asrs	r2, r2, #16
 801920e:	d402      	bmi.n	8019216 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019210:	42b2      	cmp	r2, r6
 8019212:	f2c0 80ac 	blt.w	801936e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8019216:	f04f 0e00 	mov.w	lr, #0
 801921a:	eb03 020e 	add.w	r2, r3, lr
 801921e:	2a00      	cmp	r2, #0
 8019220:	dc3e      	bgt.n	80192a0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019222:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019226:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801922a:	f1bb 0f00 	cmp.w	fp, #0
 801922e:	f340 80fe 	ble.w	801942e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019232:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019236:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801923a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801923e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019240:	f1bb 0b01 	subs.w	fp, fp, #1
 8019244:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019248:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801924c:	eeb0 6a62 	vmov.f32	s12, s5
 8019250:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019254:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019258:	ee77 2a62 	vsub.f32	s5, s14, s5
 801925c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019260:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019264:	eeb0 6a43 	vmov.f32	s12, s6
 8019268:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801926c:	ee12 2a90 	vmov	r2, s5
 8019270:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019274:	fb92 f3f3 	sdiv	r3, r2, r3
 8019278:	ee13 2a10 	vmov	r2, s6
 801927c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019280:	9313      	str	r3, [sp, #76]	; 0x4c
 8019282:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019284:	fb92 f3f3 	sdiv	r3, r2, r3
 8019288:	9a04      	ldr	r2, [sp, #16]
 801928a:	9314      	str	r3, [sp, #80]	; 0x50
 801928c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019290:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019292:	eeb0 3a67 	vmov.f32	s6, s15
 8019296:	bf08      	it	eq
 8019298:	4613      	moveq	r3, r2
 801929a:	eef0 2a47 	vmov.f32	s5, s14
 801929e:	e787      	b.n	80191b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80192a0:	1406      	asrs	r6, r0, #16
 80192a2:	d45d      	bmi.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192a4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80192a8:	42b5      	cmp	r5, r6
 80192aa:	dd59      	ble.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192ac:	140f      	asrs	r7, r1, #16
 80192ae:	d457      	bmi.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192b0:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80192b4:	42ba      	cmp	r2, r7
 80192b6:	dd53      	ble.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192b8:	9a01      	ldr	r2, [sp, #4]
 80192ba:	b22d      	sxth	r5, r5
 80192bc:	fb07 2505 	mla	r5, r7, r5, r2
 80192c0:	5daa      	ldrb	r2, [r5, r6]
 80192c2:	9d02      	ldr	r5, [sp, #8]
 80192c4:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80192c8:	0e2e      	lsrs	r6, r5, #24
 80192ca:	d049      	beq.n	8019360 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80192cc:	f06f 0201 	mvn.w	r2, #1
 80192d0:	fb02 f20e 	mul.w	r2, r2, lr
 80192d4:	9203      	str	r2, [sp, #12]
 80192d6:	f834 8002 	ldrh.w	r8, [r4, r2]
 80192da:	9a05      	ldr	r2, [sp, #20]
 80192dc:	4356      	muls	r6, r2
 80192de:	1c72      	adds	r2, r6, #1
 80192e0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80192e4:	1212      	asrs	r2, r2, #8
 80192e6:	fa1f f982 	uxth.w	r9, r2
 80192ea:	ea4f 2728 	mov.w	r7, r8, asr #8
 80192ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80192f2:	43d2      	mvns	r2, r2
 80192f4:	b2d2      	uxtb	r2, r2
 80192f6:	fb16 f609 	smulbb	r6, r6, r9
 80192fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80192fe:	fb07 6702 	mla	r7, r7, r2, r6
 8019302:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019306:	ea4f 06e8 	mov.w	r6, r8, asr #3
 801930a:	b2ed      	uxtb	r5, r5
 801930c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019310:	fa5f f888 	uxtb.w	r8, r8
 8019314:	fb15 f509 	smulbb	r5, r5, r9
 8019318:	fb08 5502 	mla	r5, r8, r2, r5
 801931c:	b2bf      	uxth	r7, r7
 801931e:	fb1a fa09 	smulbb	sl, sl, r9
 8019322:	b2ad      	uxth	r5, r5
 8019324:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019328:	fb06 a602 	mla	r6, r6, r2, sl
 801932c:	1c7a      	adds	r2, r7, #1
 801932e:	f105 0a01 	add.w	sl, r5, #1
 8019332:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019336:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801933a:	b2b6      	uxth	r6, r6
 801933c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019340:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019344:	ea4a 0707 	orr.w	r7, sl, r7
 8019348:	f106 0a01 	add.w	sl, r6, #1
 801934c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019350:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019354:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019358:	9a03      	ldr	r2, [sp, #12]
 801935a:	ea47 070a 	orr.w	r7, r7, sl
 801935e:	52a7      	strh	r7, [r4, r2]
 8019360:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019362:	4410      	add	r0, r2
 8019364:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019366:	f10e 3eff 	add.w	lr, lr, #4294967295
 801936a:	4411      	add	r1, r2
 801936c:	e755      	b.n	801921a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801936e:	f04f 0800 	mov.w	r8, #0
 8019372:	eba3 0208 	sub.w	r2, r3, r8
 8019376:	2a00      	cmp	r2, #0
 8019378:	f77f af53 	ble.w	8019222 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801937c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019380:	9f01      	ldr	r7, [sp, #4]
 8019382:	140a      	asrs	r2, r1, #16
 8019384:	1405      	asrs	r5, r0, #16
 8019386:	fb06 7202 	mla	r2, r6, r2, r7
 801938a:	5d52      	ldrb	r2, [r2, r5]
 801938c:	9d02      	ldr	r5, [sp, #8]
 801938e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019392:	0e2e      	lsrs	r6, r5, #24
 8019394:	d044      	beq.n	8019420 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019396:	9a05      	ldr	r2, [sp, #20]
 8019398:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801939c:	4356      	muls	r6, r2
 801939e:	1c72      	adds	r2, r6, #1
 80193a0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80193a4:	1212      	asrs	r2, r2, #8
 80193a6:	fa1f f982 	uxth.w	r9, r2
 80193aa:	ea4f 272e 	mov.w	r7, lr, asr #8
 80193ae:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80193b2:	43d2      	mvns	r2, r2
 80193b4:	b2d2      	uxtb	r2, r2
 80193b6:	fb16 f609 	smulbb	r6, r6, r9
 80193ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80193be:	fb07 6702 	mla	r7, r7, r2, r6
 80193c2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80193c6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80193ca:	b2ed      	uxtb	r5, r5
 80193cc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80193d0:	fa5f fe8e 	uxtb.w	lr, lr
 80193d4:	fb15 f509 	smulbb	r5, r5, r9
 80193d8:	fb0e 5502 	mla	r5, lr, r2, r5
 80193dc:	b2bf      	uxth	r7, r7
 80193de:	fb1a fa09 	smulbb	sl, sl, r9
 80193e2:	b2ad      	uxth	r5, r5
 80193e4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80193e8:	fb06 a602 	mla	r6, r6, r2, sl
 80193ec:	1c7a      	adds	r2, r7, #1
 80193ee:	f105 0a01 	add.w	sl, r5, #1
 80193f2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80193f6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80193fa:	b2b6      	uxth	r6, r6
 80193fc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019400:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8019404:	ea4a 0707 	orr.w	r7, sl, r7
 8019408:	f106 0a01 	add.w	sl, r6, #1
 801940c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019410:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019414:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019418:	ea47 070a 	orr.w	r7, r7, sl
 801941c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019420:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019422:	4410      	add	r0, r2
 8019424:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019426:	f108 0801 	add.w	r8, r8, #1
 801942a:	4411      	add	r1, r2
 801942c:	e7a1      	b.n	8019372 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801942e:	b007      	add	sp, #28
 8019430:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019434 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019438:	b085      	sub	sp, #20
 801943a:	468b      	mov	fp, r1
 801943c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801943e:	9203      	str	r2, [sp, #12]
 8019440:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019444:	6841      	ldr	r1, [r0, #4]
 8019446:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801944a:	fb01 2404 	mla	r4, r1, r4, r2
 801944e:	6802      	ldr	r2, [r0, #0]
 8019450:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019454:	f8de 2000 	ldr.w	r2, [lr]
 8019458:	9200      	str	r2, [sp, #0]
 801945a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801945e:	3204      	adds	r2, #4
 8019460:	9201      	str	r2, [sp, #4]
 8019462:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019466:	f1bb 0f00 	cmp.w	fp, #0
 801946a:	dc03      	bgt.n	8019474 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801946c:	9a03      	ldr	r2, [sp, #12]
 801946e:	2a00      	cmp	r2, #0
 8019470:	f340 8153 	ble.w	801971a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019474:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019476:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801947a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801947e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019482:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019484:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019488:	2b00      	cmp	r3, #0
 801948a:	dd0e      	ble.n	80194aa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801948c:	1408      	asrs	r0, r1, #16
 801948e:	d405      	bmi.n	801949c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019490:	42b8      	cmp	r0, r7
 8019492:	da03      	bge.n	801949c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019494:	1410      	asrs	r0, r2, #16
 8019496:	d401      	bmi.n	801949c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019498:	42b0      	cmp	r0, r6
 801949a:	db07      	blt.n	80194ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801949c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801949e:	4401      	add	r1, r0
 80194a0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80194a2:	3b01      	subs	r3, #1
 80194a4:	4402      	add	r2, r0
 80194a6:	3402      	adds	r4, #2
 80194a8:	e7ee      	b.n	8019488 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80194aa:	d017      	beq.n	80194dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80194ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80194ae:	1e58      	subs	r0, r3, #1
 80194b0:	fb05 1500 	mla	r5, r5, r0, r1
 80194b4:	142d      	asrs	r5, r5, #16
 80194b6:	d409      	bmi.n	80194cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80194b8:	42bd      	cmp	r5, r7
 80194ba:	da07      	bge.n	80194cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80194bc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80194be:	fb05 2000 	mla	r0, r5, r0, r2
 80194c2:	1400      	asrs	r0, r0, #16
 80194c4:	d402      	bmi.n	80194cc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80194c6:	42b0      	cmp	r0, r6
 80194c8:	f2c0 80bc 	blt.w	8019644 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80194cc:	2600      	movs	r6, #0
 80194ce:	1998      	adds	r0, r3, r6
 80194d0:	2800      	cmp	r0, #0
 80194d2:	dc3e      	bgt.n	8019552 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80194d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80194d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80194dc:	f1bb 0f00 	cmp.w	fp, #0
 80194e0:	f340 811b 	ble.w	801971a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80194e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194ec:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80194f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194f2:	f1bb 0b01 	subs.w	fp, fp, #1
 80194f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194fe:	eeb0 6a62 	vmov.f32	s12, s5
 8019502:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019506:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801950a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801950e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019512:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019516:	eeb0 6a43 	vmov.f32	s12, s6
 801951a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801951e:	ee12 2a90 	vmov	r2, s5
 8019522:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019526:	fb92 f3f3 	sdiv	r3, r2, r3
 801952a:	ee13 2a10 	vmov	r2, s6
 801952e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019532:	9311      	str	r3, [sp, #68]	; 0x44
 8019534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019536:	fb92 f3f3 	sdiv	r3, r2, r3
 801953a:	9a03      	ldr	r2, [sp, #12]
 801953c:	9312      	str	r3, [sp, #72]	; 0x48
 801953e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019542:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019544:	eeb0 3a67 	vmov.f32	s6, s15
 8019548:	bf08      	it	eq
 801954a:	4613      	moveq	r3, r2
 801954c:	eef0 2a47 	vmov.f32	s5, s14
 8019550:	e789      	b.n	8019466 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019552:	140f      	asrs	r7, r1, #16
 8019554:	d426      	bmi.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019556:	f8de 5008 	ldr.w	r5, [lr, #8]
 801955a:	42bd      	cmp	r5, r7
 801955c:	dd22      	ble.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801955e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019562:	d41f      	bmi.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019564:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019568:	4560      	cmp	r0, ip
 801956a:	dd1b      	ble.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801956c:	9800      	ldr	r0, [sp, #0]
 801956e:	b22d      	sxth	r5, r5
 8019570:	fb0c 0505 	mla	r5, ip, r5, r0
 8019574:	5de8      	ldrb	r0, [r5, r7]
 8019576:	9d01      	ldr	r5, [sp, #4]
 8019578:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801957c:	0e07      	lsrs	r7, r0, #24
 801957e:	2fff      	cmp	r7, #255	; 0xff
 8019580:	d116      	bne.n	80195b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019582:	f06f 0501 	mvn.w	r5, #1
 8019586:	fb05 f706 	mul.w	r7, r5, r6
 801958a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801958e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019592:	0945      	lsrs	r5, r0, #5
 8019594:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019598:	ea4c 0505 	orr.w	r5, ip, r5
 801959c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80195a0:	4305      	orrs	r5, r0
 80195a2:	53e5      	strh	r5, [r4, r7]
 80195a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 80195a6:	4401      	add	r1, r0
 80195a8:	9812      	ldr	r0, [sp, #72]	; 0x48
 80195aa:	3e01      	subs	r6, #1
 80195ac:	4402      	add	r2, r0
 80195ae:	e78e      	b.n	80194ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80195b0:	b2fd      	uxtb	r5, r7
 80195b2:	2f00      	cmp	r7, #0
 80195b4:	d0f6      	beq.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80195b6:	f06f 0701 	mvn.w	r7, #1
 80195ba:	4377      	muls	r7, r6
 80195bc:	fa1f f985 	uxth.w	r9, r5
 80195c0:	f834 8007 	ldrh.w	r8, [r4, r7]
 80195c4:	9702      	str	r7, [sp, #8]
 80195c6:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80195ca:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80195ce:	43ed      	mvns	r5, r5
 80195d0:	b2ed      	uxtb	r5, r5
 80195d2:	fb17 f709 	smulbb	r7, r7, r9
 80195d6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80195da:	fb0c 7c05 	mla	ip, ip, r5, r7
 80195de:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80195e2:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80195e6:	b2c0      	uxtb	r0, r0
 80195e8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80195ec:	fa5f f888 	uxtb.w	r8, r8
 80195f0:	fb10 f009 	smulbb	r0, r0, r9
 80195f4:	fb08 0005 	mla	r0, r8, r5, r0
 80195f8:	b280      	uxth	r0, r0
 80195fa:	fa1f fc8c 	uxth.w	ip, ip
 80195fe:	fb1a fa09 	smulbb	sl, sl, r9
 8019602:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019606:	fb07 a705 	mla	r7, r7, r5, sl
 801960a:	f100 0a01 	add.w	sl, r0, #1
 801960e:	f10c 0501 	add.w	r5, ip, #1
 8019612:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8019616:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801961a:	b2bf      	uxth	r7, r7
 801961c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019620:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019624:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019628:	f107 0a01 	add.w	sl, r7, #1
 801962c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019630:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019634:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019638:	9802      	ldr	r0, [sp, #8]
 801963a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801963e:	f824 c000 	strh.w	ip, [r4, r0]
 8019642:	e7af      	b.n	80195a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019644:	f04f 0800 	mov.w	r8, #0
 8019648:	eba3 0008 	sub.w	r0, r3, r8
 801964c:	2800      	cmp	r0, #0
 801964e:	f77f af41 	ble.w	80194d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019652:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019656:	9f00      	ldr	r7, [sp, #0]
 8019658:	1410      	asrs	r0, r2, #16
 801965a:	140d      	asrs	r5, r1, #16
 801965c:	fb06 7000 	mla	r0, r6, r0, r7
 8019660:	5d40      	ldrb	r0, [r0, r5]
 8019662:	9d01      	ldr	r5, [sp, #4]
 8019664:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019668:	0e2e      	lsrs	r6, r5, #24
 801966a:	2eff      	cmp	r6, #255	; 0xff
 801966c:	d112      	bne.n	8019694 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801966e:	482c      	ldr	r0, [pc, #176]	; (8019720 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019670:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019674:	0968      	lsrs	r0, r5, #5
 8019676:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801967a:	4330      	orrs	r0, r6
 801967c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019680:	4328      	orrs	r0, r5
 8019682:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019686:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019688:	4401      	add	r1, r0
 801968a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801968c:	f108 0801 	add.w	r8, r8, #1
 8019690:	4402      	add	r2, r0
 8019692:	e7d9      	b.n	8019648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019694:	b2f0      	uxtb	r0, r6
 8019696:	2e00      	cmp	r6, #0
 8019698:	d0f5      	beq.n	8019686 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801969a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801969e:	fa1f f980 	uxth.w	r9, r0
 80196a2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80196a6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80196aa:	43c0      	mvns	r0, r0
 80196ac:	b2c0      	uxtb	r0, r0
 80196ae:	fb16 f609 	smulbb	r6, r6, r9
 80196b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80196b6:	fb07 6700 	mla	r7, r7, r0, r6
 80196ba:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80196be:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80196c2:	b2ed      	uxtb	r5, r5
 80196c4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80196c8:	fa5f fc8c 	uxtb.w	ip, ip
 80196cc:	fb15 f509 	smulbb	r5, r5, r9
 80196d0:	fb0c 5500 	mla	r5, ip, r0, r5
 80196d4:	b2bf      	uxth	r7, r7
 80196d6:	fb1a fa09 	smulbb	sl, sl, r9
 80196da:	b2ad      	uxth	r5, r5
 80196dc:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80196e0:	fb06 a600 	mla	r6, r6, r0, sl
 80196e4:	1c78      	adds	r0, r7, #1
 80196e6:	f105 0a01 	add.w	sl, r5, #1
 80196ea:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80196ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80196f2:	b2b6      	uxth	r6, r6
 80196f4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196f8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196fc:	ea4a 0707 	orr.w	r7, sl, r7
 8019700:	f106 0a01 	add.w	sl, r6, #1
 8019704:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019708:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801970c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019710:	ea47 070a 	orr.w	r7, r7, sl
 8019714:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8019718:	e7b5      	b.n	8019686 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801971a:	b005      	add	sp, #20
 801971c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019720:	fffff800 	.word	0xfffff800

08019724 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019728:	b087      	sub	sp, #28
 801972a:	468b      	mov	fp, r1
 801972c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801972e:	9204      	str	r2, [sp, #16]
 8019730:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019734:	9205      	str	r2, [sp, #20]
 8019736:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801973a:	6861      	ldr	r1, [r4, #4]
 801973c:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8019740:	fb01 2000 	mla	r0, r1, r0, r2
 8019744:	6822      	ldr	r2, [r4, #0]
 8019746:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801974a:	f8de 2000 	ldr.w	r2, [lr]
 801974e:	9201      	str	r2, [sp, #4]
 8019750:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019754:	9202      	str	r2, [sp, #8]
 8019756:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801975a:	f1bb 0f00 	cmp.w	fp, #0
 801975e:	dc03      	bgt.n	8019768 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019760:	9a04      	ldr	r2, [sp, #16]
 8019762:	2a00      	cmp	r2, #0
 8019764:	f340 8142 	ble.w	80199ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019768:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801976a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801976e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019772:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019776:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019778:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801977c:	2b00      	cmp	r3, #0
 801977e:	dd0e      	ble.n	801979e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019780:	140c      	asrs	r4, r1, #16
 8019782:	d405      	bmi.n	8019790 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019784:	42bc      	cmp	r4, r7
 8019786:	da03      	bge.n	8019790 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019788:	1414      	asrs	r4, r2, #16
 801978a:	d401      	bmi.n	8019790 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801978c:	42b4      	cmp	r4, r6
 801978e:	db07      	blt.n	80197a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019790:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019792:	4421      	add	r1, r4
 8019794:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019796:	3b01      	subs	r3, #1
 8019798:	4422      	add	r2, r4
 801979a:	3002      	adds	r0, #2
 801979c:	e7ee      	b.n	801977c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801979e:	d019      	beq.n	80197d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80197a0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80197a2:	1e5c      	subs	r4, r3, #1
 80197a4:	fb05 1504 	mla	r5, r5, r4, r1
 80197a8:	142d      	asrs	r5, r5, #16
 80197aa:	d409      	bmi.n	80197c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197ac:	42bd      	cmp	r5, r7
 80197ae:	da07      	bge.n	80197c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197b0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80197b2:	fb05 2404 	mla	r4, r5, r4, r2
 80197b6:	1424      	asrs	r4, r4, #16
 80197b8:	d402      	bmi.n	80197c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80197ba:	42b4      	cmp	r4, r6
 80197bc:	f2c0 80b1 	blt.w	8019922 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80197c0:	f04f 0800 	mov.w	r8, #0
 80197c4:	eb03 0408 	add.w	r4, r3, r8
 80197c8:	2c00      	cmp	r4, #0
 80197ca:	dc3e      	bgt.n	801984a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80197cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80197d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80197d4:	f1bb 0f00 	cmp.w	fp, #0
 80197d8:	f340 8108 	ble.w	80199ec <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80197dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80197e4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80197e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80197ea:	f1bb 0b01 	subs.w	fp, fp, #1
 80197ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197f6:	eeb0 6a62 	vmov.f32	s12, s5
 80197fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019802:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019806:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801980a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801980e:	eeb0 6a43 	vmov.f32	s12, s6
 8019812:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019816:	ee12 2a90 	vmov	r2, s5
 801981a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801981e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019822:	ee13 2a10 	vmov	r2, s6
 8019826:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801982a:	9313      	str	r3, [sp, #76]	; 0x4c
 801982c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801982e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019832:	9a04      	ldr	r2, [sp, #16]
 8019834:	9314      	str	r3, [sp, #80]	; 0x50
 8019836:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801983a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801983c:	eeb0 3a67 	vmov.f32	s6, s15
 8019840:	bf08      	it	eq
 8019842:	4613      	moveq	r3, r2
 8019844:	eef0 2a47 	vmov.f32	s5, s14
 8019848:	e787      	b.n	801975a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801984a:	140e      	asrs	r6, r1, #16
 801984c:	d462      	bmi.n	8019914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801984e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019852:	42b5      	cmp	r5, r6
 8019854:	dd5e      	ble.n	8019914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019856:	1417      	asrs	r7, r2, #16
 8019858:	d45c      	bmi.n	8019914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801985a:	f8de 400c 	ldr.w	r4, [lr, #12]
 801985e:	42bc      	cmp	r4, r7
 8019860:	dd58      	ble.n	8019914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019862:	b22d      	sxth	r5, r5
 8019864:	fb07 6505 	mla	r5, r7, r5, r6
 8019868:	9c02      	ldr	r4, [sp, #8]
 801986a:	5d66      	ldrb	r6, [r4, r5]
 801986c:	2e00      	cmp	r6, #0
 801986e:	d051      	beq.n	8019914 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019870:	9c01      	ldr	r4, [sp, #4]
 8019872:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019876:	f06f 0401 	mvn.w	r4, #1
 801987a:	fb04 f408 	mul.w	r4, r4, r8
 801987e:	9403      	str	r4, [sp, #12]
 8019880:	5b05      	ldrh	r5, [r0, r4]
 8019882:	9c05      	ldr	r4, [sp, #20]
 8019884:	4366      	muls	r6, r4
 8019886:	1c74      	adds	r4, r6, #1
 8019888:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801988c:	1224      	asrs	r4, r4, #8
 801988e:	b2a7      	uxth	r7, r4
 8019890:	122e      	asrs	r6, r5, #8
 8019892:	43e4      	mvns	r4, r4
 8019894:	b2e4      	uxtb	r4, r4
 8019896:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801989a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801989e:	fb16 f604 	smulbb	r6, r6, r4
 80198a2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80198a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80198aa:	00ed      	lsls	r5, r5, #3
 80198ac:	fb0c 6c07 	mla	ip, ip, r7, r6
 80198b0:	b2ed      	uxtb	r5, r5
 80198b2:	ea4f 06e9 	mov.w	r6, r9, asr #3
 80198b6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80198ba:	fb15 f504 	smulbb	r5, r5, r4
 80198be:	fa5f f989 	uxtb.w	r9, r9
 80198c2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80198c6:	fb09 5507 	mla	r5, r9, r7, r5
 80198ca:	fb1a fa04 	smulbb	sl, sl, r4
 80198ce:	fa1f fc8c 	uxth.w	ip, ip
 80198d2:	b2ad      	uxth	r5, r5
 80198d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80198d8:	fb06 a607 	mla	r6, r6, r7, sl
 80198dc:	f10c 0401 	add.w	r4, ip, #1
 80198e0:	f105 0a01 	add.w	sl, r5, #1
 80198e4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80198e8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80198ec:	b2b6      	uxth	r6, r6
 80198ee:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198f2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198f6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198fa:	f106 0a01 	add.w	sl, r6, #1
 80198fe:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019902:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019906:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801990a:	9c03      	ldr	r4, [sp, #12]
 801990c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019910:	f820 c004 	strh.w	ip, [r0, r4]
 8019914:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019916:	4421      	add	r1, r4
 8019918:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801991a:	f108 38ff 	add.w	r8, r8, #4294967295
 801991e:	4422      	add	r2, r4
 8019920:	e750      	b.n	80197c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019922:	f04f 0900 	mov.w	r9, #0
 8019926:	eba3 0409 	sub.w	r4, r3, r9
 801992a:	2c00      	cmp	r4, #0
 801992c:	f77f af4e 	ble.w	80197cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019930:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019934:	140d      	asrs	r5, r1, #16
 8019936:	1414      	asrs	r4, r2, #16
 8019938:	fb06 5404 	mla	r4, r6, r4, r5
 801993c:	9d02      	ldr	r5, [sp, #8]
 801993e:	5d2e      	ldrb	r6, [r5, r4]
 8019940:	2e00      	cmp	r6, #0
 8019942:	d04c      	beq.n	80199de <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019944:	9d01      	ldr	r5, [sp, #4]
 8019946:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801994a:	9c05      	ldr	r4, [sp, #20]
 801994c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019950:	4366      	muls	r6, r4
 8019952:	1c74      	adds	r4, r6, #1
 8019954:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019958:	1224      	asrs	r4, r4, #8
 801995a:	b2a7      	uxth	r7, r4
 801995c:	122e      	asrs	r6, r5, #8
 801995e:	43e4      	mvns	r4, r4
 8019960:	b2e4      	uxtb	r4, r4
 8019962:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019966:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801996a:	fb16 f604 	smulbb	r6, r6, r4
 801996e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019972:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019976:	00ed      	lsls	r5, r5, #3
 8019978:	fb0c 6c07 	mla	ip, ip, r7, r6
 801997c:	b2ed      	uxtb	r5, r5
 801997e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019982:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019986:	fb15 f504 	smulbb	r5, r5, r4
 801998a:	fa5f f888 	uxtb.w	r8, r8
 801998e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019992:	fb08 5507 	mla	r5, r8, r7, r5
 8019996:	fb1a fa04 	smulbb	sl, sl, r4
 801999a:	fa1f fc8c 	uxth.w	ip, ip
 801999e:	b2ad      	uxth	r5, r5
 80199a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80199a4:	fb06 a607 	mla	r6, r6, r7, sl
 80199a8:	f10c 0401 	add.w	r4, ip, #1
 80199ac:	f105 0a01 	add.w	sl, r5, #1
 80199b0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80199b4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80199b8:	b2b6      	uxth	r6, r6
 80199ba:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80199be:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80199c2:	ea4a 0c0c 	orr.w	ip, sl, ip
 80199c6:	f106 0a01 	add.w	sl, r6, #1
 80199ca:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80199ce:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80199d2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80199d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80199da:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80199de:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199e0:	4421      	add	r1, r4
 80199e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80199e4:	f109 0901 	add.w	r9, r9, #1
 80199e8:	4422      	add	r2, r4
 80199ea:	e79c      	b.n	8019926 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80199ec:	b007      	add	sp, #28
 80199ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080199f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f6:	b085      	sub	sp, #20
 80199f8:	468b      	mov	fp, r1
 80199fa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80199fc:	9203      	str	r2, [sp, #12]
 80199fe:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019a02:	6861      	ldr	r1, [r4, #4]
 8019a04:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019a08:	fb01 2000 	mla	r0, r1, r0, r2
 8019a0c:	6822      	ldr	r2, [r4, #0]
 8019a0e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019a12:	f8d8 2000 	ldr.w	r2, [r8]
 8019a16:	9200      	str	r2, [sp, #0]
 8019a18:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019a1c:	9201      	str	r2, [sp, #4]
 8019a1e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a22:	f1bb 0f00 	cmp.w	fp, #0
 8019a26:	dc03      	bgt.n	8019a30 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019a28:	9a03      	ldr	r2, [sp, #12]
 8019a2a:	2a00      	cmp	r2, #0
 8019a2c:	f340 8146 	ble.w	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019a30:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019a32:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019a36:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019a3a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a3e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019a40:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a44:	2b00      	cmp	r3, #0
 8019a46:	dd0e      	ble.n	8019a66 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019a48:	140c      	asrs	r4, r1, #16
 8019a4a:	d405      	bmi.n	8019a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a4c:	42bc      	cmp	r4, r7
 8019a4e:	da03      	bge.n	8019a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a50:	1414      	asrs	r4, r2, #16
 8019a52:	d401      	bmi.n	8019a58 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019a54:	42b4      	cmp	r4, r6
 8019a56:	db07      	blt.n	8019a68 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019a58:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019a5a:	4421      	add	r1, r4
 8019a5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019a5e:	3b01      	subs	r3, #1
 8019a60:	4422      	add	r2, r4
 8019a62:	3002      	adds	r0, #2
 8019a64:	e7ee      	b.n	8019a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019a66:	d017      	beq.n	8019a98 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019a68:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019a6a:	1e5c      	subs	r4, r3, #1
 8019a6c:	fb05 1504 	mla	r5, r5, r4, r1
 8019a70:	142d      	asrs	r5, r5, #16
 8019a72:	d409      	bmi.n	8019a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a74:	42bd      	cmp	r5, r7
 8019a76:	da07      	bge.n	8019a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a78:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019a7a:	fb05 2404 	mla	r4, r5, r4, r2
 8019a7e:	1424      	asrs	r4, r4, #16
 8019a80:	d402      	bmi.n	8019a88 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019a82:	42b4      	cmp	r4, r6
 8019a84:	f2c0 80b3 	blt.w	8019bee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019a88:	2600      	movs	r6, #0
 8019a8a:	199c      	adds	r4, r3, r6
 8019a8c:	2c00      	cmp	r4, #0
 8019a8e:	dc3e      	bgt.n	8019b0e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019a90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a94:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a98:	f1bb 0f00 	cmp.w	fp, #0
 8019a9c:	f340 810e 	ble.w	8019cbc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019aa0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019aa4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019aa8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019aac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019aae:	f1bb 0b01 	subs.w	fp, fp, #1
 8019ab2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ab6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019aba:	eeb0 6a62 	vmov.f32	s12, s5
 8019abe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ac2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ac6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019aca:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019ace:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019ad2:	eeb0 6a43 	vmov.f32	s12, s6
 8019ad6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ada:	ee12 2a90 	vmov	r2, s5
 8019ade:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ae2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ae6:	ee13 2a10 	vmov	r2, s6
 8019aea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019aee:	9311      	str	r3, [sp, #68]	; 0x44
 8019af0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019af2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019af6:	9a03      	ldr	r2, [sp, #12]
 8019af8:	9312      	str	r3, [sp, #72]	; 0x48
 8019afa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019afe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019b00:	eeb0 3a67 	vmov.f32	s6, s15
 8019b04:	bf08      	it	eq
 8019b06:	4613      	moveq	r3, r2
 8019b08:	eef0 2a47 	vmov.f32	s5, s14
 8019b0c:	e789      	b.n	8019a22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019b0e:	140f      	asrs	r7, r1, #16
 8019b10:	d418      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b12:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019b16:	42bd      	cmp	r5, r7
 8019b18:	dd14      	ble.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b1a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019b1e:	d411      	bmi.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b20:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019b24:	4564      	cmp	r4, ip
 8019b26:	dd0d      	ble.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b28:	b22d      	sxth	r5, r5
 8019b2a:	fb0c 7505 	mla	r5, ip, r5, r7
 8019b2e:	9c01      	ldr	r4, [sp, #4]
 8019b30:	5d64      	ldrb	r4, [r4, r5]
 8019b32:	2cff      	cmp	r4, #255	; 0xff
 8019b34:	d10c      	bne.n	8019b50 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019b36:	9c00      	ldr	r4, [sp, #0]
 8019b38:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019b3c:	f06f 0401 	mvn.w	r4, #1
 8019b40:	4374      	muls	r4, r6
 8019b42:	5305      	strh	r5, [r0, r4]
 8019b44:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019b46:	4421      	add	r1, r4
 8019b48:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b4a:	3e01      	subs	r6, #1
 8019b4c:	4422      	add	r2, r4
 8019b4e:	e79c      	b.n	8019a8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019b50:	2c00      	cmp	r4, #0
 8019b52:	d0f7      	beq.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019b54:	9f00      	ldr	r7, [sp, #0]
 8019b56:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019b5a:	f06f 0501 	mvn.w	r5, #1
 8019b5e:	4375      	muls	r5, r6
 8019b60:	9502      	str	r5, [sp, #8]
 8019b62:	5b45      	ldrh	r5, [r0, r5]
 8019b64:	fa1f fc84 	uxth.w	ip, r4
 8019b68:	122f      	asrs	r7, r5, #8
 8019b6a:	43e4      	mvns	r4, r4
 8019b6c:	b2e4      	uxtb	r4, r4
 8019b6e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019b72:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019b76:	fb17 f704 	smulbb	r7, r7, r4
 8019b7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b7e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019b82:	00ed      	lsls	r5, r5, #3
 8019b84:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019b88:	b2ed      	uxtb	r5, r5
 8019b8a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019b8e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b92:	fb15 f504 	smulbb	r5, r5, r4
 8019b96:	fa5f f989 	uxtb.w	r9, r9
 8019b9a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b9e:	fb09 550c 	mla	r5, r9, ip, r5
 8019ba2:	fb1a fa04 	smulbb	sl, sl, r4
 8019ba6:	fa1f fe8e 	uxth.w	lr, lr
 8019baa:	b2ad      	uxth	r5, r5
 8019bac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019bb0:	fb07 a70c 	mla	r7, r7, ip, sl
 8019bb4:	f10e 0401 	add.w	r4, lr, #1
 8019bb8:	f105 0a01 	add.w	sl, r5, #1
 8019bbc:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019bc0:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019bc4:	b2bf      	uxth	r7, r7
 8019bc6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019bca:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019bce:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019bd2:	f107 0a01 	add.w	sl, r7, #1
 8019bd6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019bda:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bde:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019be2:	9c02      	ldr	r4, [sp, #8]
 8019be4:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019be8:	f820 e004 	strh.w	lr, [r0, r4]
 8019bec:	e7aa      	b.n	8019b44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019bee:	f04f 0900 	mov.w	r9, #0
 8019bf2:	eba3 0409 	sub.w	r4, r3, r9
 8019bf6:	2c00      	cmp	r4, #0
 8019bf8:	f77f af4a 	ble.w	8019a90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019bfc:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019c00:	1414      	asrs	r4, r2, #16
 8019c02:	140d      	asrs	r5, r1, #16
 8019c04:	fb06 5504 	mla	r5, r6, r4, r5
 8019c08:	9c01      	ldr	r4, [sp, #4]
 8019c0a:	5d64      	ldrb	r4, [r4, r5]
 8019c0c:	2cff      	cmp	r4, #255	; 0xff
 8019c0e:	d10b      	bne.n	8019c28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019c10:	9c00      	ldr	r4, [sp, #0]
 8019c12:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019c16:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019c1a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019c1c:	4421      	add	r1, r4
 8019c1e:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019c20:	f109 0901 	add.w	r9, r9, #1
 8019c24:	4422      	add	r2, r4
 8019c26:	e7e4      	b.n	8019bf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019c28:	2c00      	cmp	r4, #0
 8019c2a:	d0f6      	beq.n	8019c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019c2c:	9e00      	ldr	r6, [sp, #0]
 8019c2e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019c32:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019c36:	b2a7      	uxth	r7, r4
 8019c38:	122e      	asrs	r6, r5, #8
 8019c3a:	43e4      	mvns	r4, r4
 8019c3c:	b2e4      	uxtb	r4, r4
 8019c3e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019c42:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c46:	fb16 f604 	smulbb	r6, r6, r4
 8019c4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c4e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c52:	00ed      	lsls	r5, r5, #3
 8019c54:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c58:	b2ed      	uxtb	r5, r5
 8019c5a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019c5e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019c62:	fb15 f504 	smulbb	r5, r5, r4
 8019c66:	fa5f fe8e 	uxtb.w	lr, lr
 8019c6a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c6e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019c72:	fb1a fa04 	smulbb	sl, sl, r4
 8019c76:	fa1f fc8c 	uxth.w	ip, ip
 8019c7a:	b2ad      	uxth	r5, r5
 8019c7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c80:	fb06 a607 	mla	r6, r6, r7, sl
 8019c84:	f10c 0401 	add.w	r4, ip, #1
 8019c88:	f105 0a01 	add.w	sl, r5, #1
 8019c8c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c90:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c94:	b2b6      	uxth	r6, r6
 8019c96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c9a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c9e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019ca2:	f106 0a01 	add.w	sl, r6, #1
 8019ca6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019caa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019cae:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019cb2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019cb6:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019cba:	e7ae      	b.n	8019c1a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019cbc:	b005      	add	sp, #20
 8019cbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019cc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019cc2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cc6:	b085      	sub	sp, #20
 8019cc8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019cca:	9203      	str	r2, [sp, #12]
 8019ccc:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019cd0:	9201      	str	r2, [sp, #4]
 8019cd2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019cd6:	9100      	str	r1, [sp, #0]
 8019cd8:	6841      	ldr	r1, [r0, #4]
 8019cda:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019cde:	fb01 2404 	mla	r4, r1, r4, r2
 8019ce2:	6802      	ldr	r2, [r0, #0]
 8019ce4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019ce8:	f8de 2000 	ldr.w	r2, [lr]
 8019cec:	9202      	str	r2, [sp, #8]
 8019cee:	9a01      	ldr	r2, [sp, #4]
 8019cf0:	43d6      	mvns	r6, r2
 8019cf2:	b2f6      	uxtb	r6, r6
 8019cf4:	9a00      	ldr	r2, [sp, #0]
 8019cf6:	2a00      	cmp	r2, #0
 8019cf8:	dc03      	bgt.n	8019d02 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019cfa:	9a03      	ldr	r2, [sp, #12]
 8019cfc:	2a00      	cmp	r2, #0
 8019cfe:	f340 8124 	ble.w	8019f4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019d02:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d04:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019d08:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019d0c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019d10:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019d12:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019d16:	2b00      	cmp	r3, #0
 8019d18:	dd0e      	ble.n	8019d38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019d1a:	1408      	asrs	r0, r1, #16
 8019d1c:	d405      	bmi.n	8019d2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d1e:	4560      	cmp	r0, ip
 8019d20:	da03      	bge.n	8019d2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d22:	1410      	asrs	r0, r2, #16
 8019d24:	d401      	bmi.n	8019d2a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019d26:	42b8      	cmp	r0, r7
 8019d28:	db07      	blt.n	8019d3a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019d2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019d2c:	4401      	add	r1, r0
 8019d2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019d30:	3b01      	subs	r3, #1
 8019d32:	4402      	add	r2, r0
 8019d34:	3402      	adds	r4, #2
 8019d36:	e7ee      	b.n	8019d16 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019d38:	d06e      	beq.n	8019e18 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019d3a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d3c:	1e58      	subs	r0, r3, #1
 8019d3e:	fb05 1500 	mla	r5, r5, r0, r1
 8019d42:	142d      	asrs	r5, r5, #16
 8019d44:	d45c      	bmi.n	8019e00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d46:	4565      	cmp	r5, ip
 8019d48:	da5a      	bge.n	8019e00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d4a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d4c:	fb05 2000 	mla	r0, r5, r0, r2
 8019d50:	1400      	asrs	r0, r0, #16
 8019d52:	d455      	bmi.n	8019e00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d54:	42b8      	cmp	r0, r7
 8019d56:	da53      	bge.n	8019e00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019d58:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8019d5c:	4699      	mov	r9, r3
 8019d5e:	46a2      	mov	sl, r4
 8019d60:	f1b9 0f00 	cmp.w	r9, #0
 8019d64:	dd54      	ble.n	8019e10 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019d66:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019d6a:	140d      	asrs	r5, r1, #16
 8019d6c:	1410      	asrs	r0, r2, #16
 8019d6e:	fb07 5000 	mla	r0, r7, r0, r5
 8019d72:	9d02      	ldr	r5, [sp, #8]
 8019d74:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019d78:	f8ba 5000 	ldrh.w	r5, [sl]
 8019d7c:	122f      	asrs	r7, r5, #8
 8019d7e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019d82:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019d86:	fb17 f706 	smulbb	r7, r7, r6
 8019d8a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8019d8e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019d92:	00ed      	lsls	r5, r5, #3
 8019d94:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019d98:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8019d9c:	10c7      	asrs	r7, r0, #3
 8019d9e:	b2ed      	uxtb	r5, r5
 8019da0:	00c0      	lsls	r0, r0, #3
 8019da2:	fb18 f806 	smulbb	r8, r8, r6
 8019da6:	fb15 f506 	smulbb	r5, r5, r6
 8019daa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dae:	b2c0      	uxtb	r0, r0
 8019db0:	fa1f fc8c 	uxth.w	ip, ip
 8019db4:	fb07 870b 	mla	r7, r7, fp, r8
 8019db8:	fb00 500b 	mla	r0, r0, fp, r5
 8019dbc:	b280      	uxth	r0, r0
 8019dbe:	b2bf      	uxth	r7, r7
 8019dc0:	f10c 0501 	add.w	r5, ip, #1
 8019dc4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019dc8:	f107 0801 	add.w	r8, r7, #1
 8019dcc:	1c45      	adds	r5, r0, #1
 8019dce:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019dd2:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019dd6:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019dd8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ddc:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019de0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019de4:	ea45 0c0c 	orr.w	ip, r5, ip
 8019de8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8019dec:	4401      	add	r1, r0
 8019dee:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019df0:	ea4c 0c08 	orr.w	ip, ip, r8
 8019df4:	f82a cb02 	strh.w	ip, [sl], #2
 8019df8:	4402      	add	r2, r0
 8019dfa:	f109 39ff 	add.w	r9, r9, #4294967295
 8019dfe:	e7af      	b.n	8019d60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019e00:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8019e04:	f04f 0800 	mov.w	r8, #0
 8019e08:	eb03 0008 	add.w	r0, r3, r8
 8019e0c:	2800      	cmp	r0, #0
 8019e0e:	dc41      	bgt.n	8019e94 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8019e10:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e14:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e18:	9b00      	ldr	r3, [sp, #0]
 8019e1a:	2b00      	cmp	r3, #0
 8019e1c:	f340 8095 	ble.w	8019f4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019e20:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019e28:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019e2c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e2e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e32:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e36:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e3a:	eef0 6a62 	vmov.f32	s13, s5
 8019e3e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e46:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e4a:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8019e4e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e52:	eef0 6a43 	vmov.f32	s13, s6
 8019e56:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e5a:	ee12 2a90 	vmov	r2, s5
 8019e5e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e62:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e66:	ee13 2a10 	vmov	r2, s6
 8019e6a:	9311      	str	r3, [sp, #68]	; 0x44
 8019e6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e72:	9312      	str	r3, [sp, #72]	; 0x48
 8019e74:	9b00      	ldr	r3, [sp, #0]
 8019e76:	9a03      	ldr	r2, [sp, #12]
 8019e78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019e7c:	3b01      	subs	r3, #1
 8019e7e:	9300      	str	r3, [sp, #0]
 8019e80:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8019e84:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e86:	eeb0 3a67 	vmov.f32	s6, s15
 8019e8a:	bf08      	it	eq
 8019e8c:	4613      	moveq	r3, r2
 8019e8e:	eef0 2a47 	vmov.f32	s5, s14
 8019e92:	e72f      	b.n	8019cf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019e94:	140f      	asrs	r7, r1, #16
 8019e96:	d451      	bmi.n	8019f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019e98:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019e9c:	42bd      	cmp	r5, r7
 8019e9e:	dd4d      	ble.n	8019f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ea0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019ea4:	d44a      	bmi.n	8019f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019ea6:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019eaa:	4560      	cmp	r0, ip
 8019eac:	dd46      	ble.n	8019f3c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019eae:	b22d      	sxth	r5, r5
 8019eb0:	fb0c 7505 	mla	r5, ip, r5, r7
 8019eb4:	9802      	ldr	r0, [sp, #8]
 8019eb6:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019eba:	f06f 0501 	mvn.w	r5, #1
 8019ebe:	fb05 fb08 	mul.w	fp, r5, r8
 8019ec2:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019ec6:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019eca:	122f      	asrs	r7, r5, #8
 8019ecc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019ed0:	fb17 f706 	smulbb	r7, r7, r6
 8019ed4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019ed8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019edc:	00ed      	lsls	r5, r5, #3
 8019ede:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8019ee2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8019ee6:	10c7      	asrs	r7, r0, #3
 8019ee8:	b2ed      	uxtb	r5, r5
 8019eea:	00c0      	lsls	r0, r0, #3
 8019eec:	fb19 f906 	smulbb	r9, r9, r6
 8019ef0:	fb15 f506 	smulbb	r5, r5, r6
 8019ef4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ef8:	b2c0      	uxtb	r0, r0
 8019efa:	fa1f fc8c 	uxth.w	ip, ip
 8019efe:	fb07 970a 	mla	r7, r7, sl, r9
 8019f02:	fb00 500a 	mla	r0, r0, sl, r5
 8019f06:	b2bf      	uxth	r7, r7
 8019f08:	b280      	uxth	r0, r0
 8019f0a:	f10c 0501 	add.w	r5, ip, #1
 8019f0e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019f12:	f107 0901 	add.w	r9, r7, #1
 8019f16:	1c45      	adds	r5, r0, #1
 8019f18:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8019f1c:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8019f20:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f24:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019f28:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019f2c:	ea45 0c0c 	orr.w	ip, r5, ip
 8019f30:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8019f34:	ea4c 0c09 	orr.w	ip, ip, r9
 8019f38:	f824 c00b 	strh.w	ip, [r4, fp]
 8019f3c:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019f3e:	4401      	add	r1, r0
 8019f40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019f42:	f108 38ff 	add.w	r8, r8, #4294967295
 8019f46:	4402      	add	r2, r0
 8019f48:	e75e      	b.n	8019e08 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8019f4a:	b005      	add	sp, #20
 8019f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f54:	b085      	sub	sp, #20
 8019f56:	4693      	mov	fp, r2
 8019f58:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019f5a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8019f5c:	6870      	ldr	r0, [r6, #4]
 8019f5e:	9101      	str	r1, [sp, #4]
 8019f60:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f64:	fb00 2404 	mla	r4, r0, r4, r2
 8019f68:	6832      	ldr	r2, [r6, #0]
 8019f6a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8019f6e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f72:	682a      	ldr	r2, [r5, #0]
 8019f74:	9202      	str	r2, [sp, #8]
 8019f76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019f7a:	9a01      	ldr	r2, [sp, #4]
 8019f7c:	2a00      	cmp	r2, #0
 8019f7e:	dc03      	bgt.n	8019f88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019f80:	f1bb 0f00 	cmp.w	fp, #0
 8019f84:	f340 809a 	ble.w	801a0bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019f88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019f8a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8019f8e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8019f92:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019f96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019f98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019f9c:	2b00      	cmp	r3, #0
 8019f9e:	dd0c      	ble.n	8019fba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8019fa0:	1406      	asrs	r6, r0, #16
 8019fa2:	d405      	bmi.n	8019fb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fa4:	454e      	cmp	r6, r9
 8019fa6:	da03      	bge.n	8019fb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fa8:	1416      	asrs	r6, r2, #16
 8019faa:	d401      	bmi.n	8019fb0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019fac:	4546      	cmp	r6, r8
 8019fae:	db05      	blt.n	8019fbc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019fb0:	4470      	add	r0, lr
 8019fb2:	4462      	add	r2, ip
 8019fb4:	3b01      	subs	r3, #1
 8019fb6:	3402      	adds	r4, #2
 8019fb8:	e7f0      	b.n	8019f9c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019fba:	d00f      	beq.n	8019fdc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019fbc:	1e5e      	subs	r6, r3, #1
 8019fbe:	fb0e 0706 	mla	r7, lr, r6, r0
 8019fc2:	143f      	asrs	r7, r7, #16
 8019fc4:	d541      	bpl.n	801a04a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019fc6:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019fca:	4698      	mov	r8, r3
 8019fcc:	9603      	str	r6, [sp, #12]
 8019fce:	f1b8 0f00 	cmp.w	r8, #0
 8019fd2:	dc56      	bgt.n	801a082 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019fd4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019fd8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019fdc:	9b01      	ldr	r3, [sp, #4]
 8019fde:	2b00      	cmp	r3, #0
 8019fe0:	dd6c      	ble.n	801a0bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019fe2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019fe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019fea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019fee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019ff0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019ff4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019ff8:	eeb0 6a62 	vmov.f32	s12, s5
 8019ffc:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a000:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a004:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a008:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a00c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a010:	eeb0 6a43 	vmov.f32	s12, s6
 801a014:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a018:	ee12 2a90 	vmov	r2, s5
 801a01c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a020:	fb92 fef3 	sdiv	lr, r2, r3
 801a024:	ee13 2a10 	vmov	r2, s6
 801a028:	fb92 fcf3 	sdiv	ip, r2, r3
 801a02c:	9b01      	ldr	r3, [sp, #4]
 801a02e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a032:	3b01      	subs	r3, #1
 801a034:	9301      	str	r3, [sp, #4]
 801a036:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a03a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a03c:	eeb0 3a67 	vmov.f32	s6, s15
 801a040:	bf08      	it	eq
 801a042:	465b      	moveq	r3, fp
 801a044:	eef0 2a47 	vmov.f32	s5, s14
 801a048:	e797      	b.n	8019f7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a04a:	454f      	cmp	r7, r9
 801a04c:	dabb      	bge.n	8019fc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a04e:	fb0c 2606 	mla	r6, ip, r6, r2
 801a052:	1436      	asrs	r6, r6, #16
 801a054:	d4b7      	bmi.n	8019fc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a056:	4546      	cmp	r6, r8
 801a058:	dab5      	bge.n	8019fc6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a05a:	461e      	mov	r6, r3
 801a05c:	46a0      	mov	r8, r4
 801a05e:	2e00      	cmp	r6, #0
 801a060:	ddb8      	ble.n	8019fd4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a062:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a066:	9902      	ldr	r1, [sp, #8]
 801a068:	1417      	asrs	r7, r2, #16
 801a06a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a06e:	fb0a 9707 	mla	r7, sl, r7, r9
 801a072:	4470      	add	r0, lr
 801a074:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a078:	f828 7b02 	strh.w	r7, [r8], #2
 801a07c:	4462      	add	r2, ip
 801a07e:	3e01      	subs	r6, #1
 801a080:	e7ed      	b.n	801a05e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a082:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a086:	d414      	bmi.n	801a0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a088:	68ae      	ldr	r6, [r5, #8]
 801a08a:	454e      	cmp	r6, r9
 801a08c:	dd11      	ble.n	801a0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a08e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a092:	d40e      	bmi.n	801a0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a094:	68ef      	ldr	r7, [r5, #12]
 801a096:	4557      	cmp	r7, sl
 801a098:	dd0b      	ble.n	801a0b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a09a:	b236      	sxth	r6, r6
 801a09c:	fb0a 9606 	mla	r6, sl, r6, r9
 801a0a0:	9f02      	ldr	r7, [sp, #8]
 801a0a2:	f06f 0101 	mvn.w	r1, #1
 801a0a6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a0aa:	fb01 f608 	mul.w	r6, r1, r8
 801a0ae:	9903      	ldr	r1, [sp, #12]
 801a0b0:	538f      	strh	r7, [r1, r6]
 801a0b2:	4470      	add	r0, lr
 801a0b4:	4462      	add	r2, ip
 801a0b6:	f108 38ff 	add.w	r8, r8, #4294967295
 801a0ba:	e788      	b.n	8019fce <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a0bc:	b005      	add	sp, #20
 801a0be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a0c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0c6:	b087      	sub	sp, #28
 801a0c8:	468b      	mov	fp, r1
 801a0ca:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a0cc:	9203      	str	r2, [sp, #12]
 801a0ce:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a0d2:	9204      	str	r2, [sp, #16]
 801a0d4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a0d8:	6841      	ldr	r1, [r0, #4]
 801a0da:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a0de:	fb01 2505 	mla	r5, r1, r5, r2
 801a0e2:	6802      	ldr	r2, [r0, #0]
 801a0e4:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a0e8:	f8d9 2000 	ldr.w	r2, [r9]
 801a0ec:	9201      	str	r2, [sp, #4]
 801a0ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a0f2:	f1bb 0f00 	cmp.w	fp, #0
 801a0f6:	dc03      	bgt.n	801a100 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a0f8:	9a03      	ldr	r2, [sp, #12]
 801a0fa:	2a00      	cmp	r2, #0
 801a0fc:	f340 8159 	ble.w	801a3b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a100:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a102:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a106:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a10a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a10e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a110:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a114:	2b00      	cmp	r3, #0
 801a116:	dd0e      	ble.n	801a136 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a118:	1402      	asrs	r2, r0, #16
 801a11a:	d405      	bmi.n	801a128 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a11c:	42ba      	cmp	r2, r7
 801a11e:	da03      	bge.n	801a128 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a120:	140a      	asrs	r2, r1, #16
 801a122:	d401      	bmi.n	801a128 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a124:	42b2      	cmp	r2, r6
 801a126:	db07      	blt.n	801a138 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a128:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a12a:	4410      	add	r0, r2
 801a12c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a12e:	3b01      	subs	r3, #1
 801a130:	4411      	add	r1, r2
 801a132:	3502      	adds	r5, #2
 801a134:	e7ee      	b.n	801a114 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a136:	d017      	beq.n	801a168 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a138:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a13a:	1e5a      	subs	r2, r3, #1
 801a13c:	fb04 0402 	mla	r4, r4, r2, r0
 801a140:	1424      	asrs	r4, r4, #16
 801a142:	d409      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a144:	42bc      	cmp	r4, r7
 801a146:	da07      	bge.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a148:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a14a:	fb04 1202 	mla	r2, r4, r2, r1
 801a14e:	1412      	asrs	r2, r2, #16
 801a150:	d402      	bmi.n	801a158 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a152:	42b2      	cmp	r2, r6
 801a154:	f2c0 80bf 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a158:	2700      	movs	r7, #0
 801a15a:	19da      	adds	r2, r3, r7
 801a15c:	2a00      	cmp	r2, #0
 801a15e:	dc3e      	bgt.n	801a1de <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a160:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a164:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a168:	f1bb 0f00 	cmp.w	fp, #0
 801a16c:	f340 8121 	ble.w	801a3b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a170:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a174:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a178:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a17c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a17e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a182:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a186:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a18a:	eeb0 6a62 	vmov.f32	s12, s5
 801a18e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a192:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a196:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a19a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a19e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a1a2:	eeb0 6a43 	vmov.f32	s12, s6
 801a1a6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a1aa:	ee12 2a90 	vmov	r2, s5
 801a1ae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a1b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1b6:	ee13 2a10 	vmov	r2, s6
 801a1ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a1be:	9313      	str	r3, [sp, #76]	; 0x4c
 801a1c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1c2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a1c6:	9a03      	ldr	r2, [sp, #12]
 801a1c8:	9314      	str	r3, [sp, #80]	; 0x50
 801a1ca:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a1ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a1d0:	eeb0 3a67 	vmov.f32	s6, s15
 801a1d4:	bf08      	it	eq
 801a1d6:	4613      	moveq	r3, r2
 801a1d8:	eef0 2a47 	vmov.f32	s5, s14
 801a1dc:	e789      	b.n	801a0f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a1de:	1406      	asrs	r6, r0, #16
 801a1e0:	d42d      	bmi.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1e2:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a1e6:	42b4      	cmp	r4, r6
 801a1e8:	dd29      	ble.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1ea:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a1ee:	d426      	bmi.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1f0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a1f4:	4562      	cmp	r2, ip
 801a1f6:	dd22      	ble.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a1f8:	b224      	sxth	r4, r4
 801a1fa:	9a01      	ldr	r2, [sp, #4]
 801a1fc:	fb0c 6404 	mla	r4, ip, r4, r6
 801a200:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a204:	0e22      	lsrs	r2, r4, #24
 801a206:	d01a      	beq.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a208:	9e04      	ldr	r6, [sp, #16]
 801a20a:	4372      	muls	r2, r6
 801a20c:	1c56      	adds	r6, r2, #1
 801a20e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a212:	1212      	asrs	r2, r2, #8
 801a214:	0a26      	lsrs	r6, r4, #8
 801a216:	2aff      	cmp	r2, #255	; 0xff
 801a218:	9605      	str	r6, [sp, #20]
 801a21a:	d116      	bne.n	801a24a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a21c:	f06f 0201 	mvn.w	r2, #1
 801a220:	fb02 fc07 	mul.w	ip, r2, r7
 801a224:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a228:	0962      	lsrs	r2, r4, #5
 801a22a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a22e:	f026 0607 	bic.w	r6, r6, #7
 801a232:	4316      	orrs	r6, r2
 801a234:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a238:	4326      	orrs	r6, r4
 801a23a:	f825 600c 	strh.w	r6, [r5, ip]
 801a23e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a240:	4410      	add	r0, r2
 801a242:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a244:	3f01      	subs	r7, #1
 801a246:	4411      	add	r1, r2
 801a248:	e787      	b.n	801a15a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a24a:	f06f 0601 	mvn.w	r6, #1
 801a24e:	437e      	muls	r6, r7
 801a250:	fa1f fa82 	uxth.w	sl, r2
 801a254:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a258:	9602      	str	r6, [sp, #8]
 801a25a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a25e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a262:	43d2      	mvns	r2, r2
 801a264:	b2d2      	uxtb	r2, r2
 801a266:	fb1c fc0a 	smulbb	ip, ip, sl
 801a26a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a26e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a272:	b2e4      	uxtb	r4, r4
 801a274:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a278:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a27c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a280:	fa5f f888 	uxtb.w	r8, r8
 801a284:	fb14 f40a 	smulbb	r4, r4, sl
 801a288:	fb08 4402 	mla	r4, r8, r2, r4
 801a28c:	fa1f fe8e 	uxth.w	lr, lr
 801a290:	fb16 f60a 	smulbb	r6, r6, sl
 801a294:	b2a4      	uxth	r4, r4
 801a296:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a29a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a29e:	f10e 0201 	add.w	r2, lr, #1
 801a2a2:	1c66      	adds	r6, r4, #1
 801a2a4:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a2a8:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a2ac:	fa1f fc8c 	uxth.w	ip, ip
 801a2b0:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a2b4:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a2b8:	ea46 0e0e 	orr.w	lr, r6, lr
 801a2bc:	f10c 0601 	add.w	r6, ip, #1
 801a2c0:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a2c4:	0976      	lsrs	r6, r6, #5
 801a2c6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a2ca:	9a02      	ldr	r2, [sp, #8]
 801a2cc:	ea4e 0e06 	orr.w	lr, lr, r6
 801a2d0:	f825 e002 	strh.w	lr, [r5, r2]
 801a2d4:	e7b3      	b.n	801a23e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a2d6:	f04f 0800 	mov.w	r8, #0
 801a2da:	eba3 0208 	sub.w	r2, r3, r8
 801a2de:	2a00      	cmp	r2, #0
 801a2e0:	f77f af3e 	ble.w	801a160 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a2e4:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a2e8:	1404      	asrs	r4, r0, #16
 801a2ea:	140a      	asrs	r2, r1, #16
 801a2ec:	fb06 4202 	mla	r2, r6, r2, r4
 801a2f0:	9c01      	ldr	r4, [sp, #4]
 801a2f2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a2f6:	0e22      	lsrs	r2, r4, #24
 801a2f8:	d016      	beq.n	801a328 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a2fa:	9e04      	ldr	r6, [sp, #16]
 801a2fc:	4372      	muls	r2, r6
 801a2fe:	1c56      	adds	r6, r2, #1
 801a300:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a304:	1212      	asrs	r2, r2, #8
 801a306:	2aff      	cmp	r2, #255	; 0xff
 801a308:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a30c:	d113      	bne.n	801a336 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a30e:	0962      	lsrs	r2, r4, #5
 801a310:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a314:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a318:	f026 0607 	bic.w	r6, r6, #7
 801a31c:	4316      	orrs	r6, r2
 801a31e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a322:	4326      	orrs	r6, r4
 801a324:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a328:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a32a:	4410      	add	r0, r2
 801a32c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a32e:	f108 0801 	add.w	r8, r8, #1
 801a332:	4411      	add	r1, r2
 801a334:	e7d1      	b.n	801a2da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a336:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a33a:	fa1f fa82 	uxth.w	sl, r2
 801a33e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a342:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a346:	43d2      	mvns	r2, r2
 801a348:	b2d2      	uxtb	r2, r2
 801a34a:	fb17 f70a 	smulbb	r7, r7, sl
 801a34e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a352:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a356:	b2e4      	uxtb	r4, r4
 801a358:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a35c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a360:	fa5f fe8e 	uxtb.w	lr, lr
 801a364:	fb14 f40a 	smulbb	r4, r4, sl
 801a368:	fb0e 4402 	mla	r4, lr, r2, r4
 801a36c:	b2f6      	uxtb	r6, r6
 801a36e:	fa1f fc8c 	uxth.w	ip, ip
 801a372:	fb16 f60a 	smulbb	r6, r6, sl
 801a376:	b2a4      	uxth	r4, r4
 801a378:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a37c:	fb07 6702 	mla	r7, r7, r2, r6
 801a380:	f10c 0201 	add.w	r2, ip, #1
 801a384:	1c66      	adds	r6, r4, #1
 801a386:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a38a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a38e:	b2bf      	uxth	r7, r7
 801a390:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a394:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a398:	ea46 0c0c 	orr.w	ip, r6, ip
 801a39c:	1c7e      	adds	r6, r7, #1
 801a39e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a3a2:	0976      	lsrs	r6, r6, #5
 801a3a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a3a8:	ea4c 0c06 	orr.w	ip, ip, r6
 801a3ac:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a3b0:	e7ba      	b.n	801a328 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a3b2:	b007      	add	sp, #28
 801a3b4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a3b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3bc:	b085      	sub	sp, #20
 801a3be:	468b      	mov	fp, r1
 801a3c0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a3c2:	9203      	str	r2, [sp, #12]
 801a3c4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a3c8:	6841      	ldr	r1, [r0, #4]
 801a3ca:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a3ce:	fb01 2404 	mla	r4, r1, r4, r2
 801a3d2:	6802      	ldr	r2, [r0, #0]
 801a3d4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a3d8:	f8d8 2000 	ldr.w	r2, [r8]
 801a3dc:	9201      	str	r2, [sp, #4]
 801a3de:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a3e2:	f1bb 0f00 	cmp.w	fp, #0
 801a3e6:	dc03      	bgt.n	801a3f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a3e8:	9a03      	ldr	r2, [sp, #12]
 801a3ea:	2a00      	cmp	r2, #0
 801a3ec:	f340 814f 	ble.w	801a68e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a3f0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a3f2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a3f6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a3fa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a400:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a404:	2b00      	cmp	r3, #0
 801a406:	dd0e      	ble.n	801a426 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a408:	1408      	asrs	r0, r1, #16
 801a40a:	d405      	bmi.n	801a418 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a40c:	42b8      	cmp	r0, r7
 801a40e:	da03      	bge.n	801a418 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a410:	1410      	asrs	r0, r2, #16
 801a412:	d401      	bmi.n	801a418 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a414:	42b0      	cmp	r0, r6
 801a416:	db07      	blt.n	801a428 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a418:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a41a:	4401      	add	r1, r0
 801a41c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a41e:	3b01      	subs	r3, #1
 801a420:	4402      	add	r2, r0
 801a422:	3402      	adds	r4, #2
 801a424:	e7ee      	b.n	801a404 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a426:	d017      	beq.n	801a458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a428:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a42a:	1e58      	subs	r0, r3, #1
 801a42c:	fb05 1500 	mla	r5, r5, r0, r1
 801a430:	142d      	asrs	r5, r5, #16
 801a432:	d409      	bmi.n	801a448 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a434:	42bd      	cmp	r5, r7
 801a436:	da07      	bge.n	801a448 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a438:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a43a:	fb05 2000 	mla	r0, r5, r0, r2
 801a43e:	1400      	asrs	r0, r0, #16
 801a440:	d402      	bmi.n	801a448 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a442:	42b0      	cmp	r0, r6
 801a444:	f2c0 80ba 	blt.w	801a5bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a448:	2600      	movs	r6, #0
 801a44a:	1998      	adds	r0, r3, r6
 801a44c:	2800      	cmp	r0, #0
 801a44e:	dc3e      	bgt.n	801a4ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a450:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a454:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a458:	f1bb 0f00 	cmp.w	fp, #0
 801a45c:	f340 8117 	ble.w	801a68e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a460:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a464:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a468:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a46c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a46e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a472:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a476:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a47a:	eeb0 6a62 	vmov.f32	s12, s5
 801a47e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a482:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a486:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a48a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a48e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a492:	eeb0 6a43 	vmov.f32	s12, s6
 801a496:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a49a:	ee12 2a90 	vmov	r2, s5
 801a49e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a4a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4a6:	ee13 2a10 	vmov	r2, s6
 801a4aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a4ae:	9311      	str	r3, [sp, #68]	; 0x44
 801a4b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a4b6:	9a03      	ldr	r2, [sp, #12]
 801a4b8:	9312      	str	r3, [sp, #72]	; 0x48
 801a4ba:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a4be:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a4c0:	eeb0 3a67 	vmov.f32	s6, s15
 801a4c4:	bf08      	it	eq
 801a4c6:	4613      	moveq	r3, r2
 801a4c8:	eef0 2a47 	vmov.f32	s5, s14
 801a4cc:	e789      	b.n	801a3e2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a4ce:	140f      	asrs	r7, r1, #16
 801a4d0:	d424      	bmi.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4d2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a4d6:	42bd      	cmp	r5, r7
 801a4d8:	dd20      	ble.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4da:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a4de:	d41d      	bmi.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4e0:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a4e4:	4560      	cmp	r0, ip
 801a4e6:	dd19      	ble.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a4e8:	b22d      	sxth	r5, r5
 801a4ea:	fb0c 7505 	mla	r5, ip, r5, r7
 801a4ee:	9801      	ldr	r0, [sp, #4]
 801a4f0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a4f4:	0e07      	lsrs	r7, r0, #24
 801a4f6:	2fff      	cmp	r7, #255	; 0xff
 801a4f8:	d116      	bne.n	801a528 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a4fa:	f06f 0501 	mvn.w	r5, #1
 801a4fe:	fb05 f706 	mul.w	r7, r5, r6
 801a502:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a506:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a50a:	0945      	lsrs	r5, r0, #5
 801a50c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a510:	ea4c 0505 	orr.w	r5, ip, r5
 801a514:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a518:	4305      	orrs	r5, r0
 801a51a:	53e5      	strh	r5, [r4, r7]
 801a51c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a51e:	4401      	add	r1, r0
 801a520:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a522:	3e01      	subs	r6, #1
 801a524:	4402      	add	r2, r0
 801a526:	e790      	b.n	801a44a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a528:	b2fd      	uxtb	r5, r7
 801a52a:	2f00      	cmp	r7, #0
 801a52c:	d0f6      	beq.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a52e:	f06f 0701 	mvn.w	r7, #1
 801a532:	4377      	muls	r7, r6
 801a534:	fa1f f985 	uxth.w	r9, r5
 801a538:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a53c:	9702      	str	r7, [sp, #8]
 801a53e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a542:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a546:	43ed      	mvns	r5, r5
 801a548:	b2ed      	uxtb	r5, r5
 801a54a:	fb17 f709 	smulbb	r7, r7, r9
 801a54e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a552:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a556:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a55a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a55e:	b2c0      	uxtb	r0, r0
 801a560:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a564:	fa5f fe8e 	uxtb.w	lr, lr
 801a568:	fb10 f009 	smulbb	r0, r0, r9
 801a56c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a570:	b280      	uxth	r0, r0
 801a572:	fa1f fc8c 	uxth.w	ip, ip
 801a576:	fb1a fa09 	smulbb	sl, sl, r9
 801a57a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a57e:	fb07 a705 	mla	r7, r7, r5, sl
 801a582:	f100 0a01 	add.w	sl, r0, #1
 801a586:	f10c 0501 	add.w	r5, ip, #1
 801a58a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a58e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a592:	b2bf      	uxth	r7, r7
 801a594:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a598:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a59c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a5a0:	f107 0a01 	add.w	sl, r7, #1
 801a5a4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a5a8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a5ac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a5b0:	9802      	ldr	r0, [sp, #8]
 801a5b2:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a5b6:	f824 c000 	strh.w	ip, [r4, r0]
 801a5ba:	e7af      	b.n	801a51c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a5bc:	f04f 0e00 	mov.w	lr, #0
 801a5c0:	eba3 000e 	sub.w	r0, r3, lr
 801a5c4:	2800      	cmp	r0, #0
 801a5c6:	f77f af43 	ble.w	801a450 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a5ca:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a5ce:	140d      	asrs	r5, r1, #16
 801a5d0:	1410      	asrs	r0, r2, #16
 801a5d2:	fb06 5000 	mla	r0, r6, r0, r5
 801a5d6:	9d01      	ldr	r5, [sp, #4]
 801a5d8:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a5dc:	0e2e      	lsrs	r6, r5, #24
 801a5de:	2eff      	cmp	r6, #255	; 0xff
 801a5e0:	d112      	bne.n	801a608 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a5e2:	482c      	ldr	r0, [pc, #176]	; (801a694 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a5e4:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a5e8:	0968      	lsrs	r0, r5, #5
 801a5ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a5ee:	4330      	orrs	r0, r6
 801a5f0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a5f4:	4328      	orrs	r0, r5
 801a5f6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a5fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a5fc:	4401      	add	r1, r0
 801a5fe:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a600:	f10e 0e01 	add.w	lr, lr, #1
 801a604:	4402      	add	r2, r0
 801a606:	e7db      	b.n	801a5c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a608:	b2f0      	uxtb	r0, r6
 801a60a:	2e00      	cmp	r6, #0
 801a60c:	d0f5      	beq.n	801a5fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a60e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a612:	fa1f f980 	uxth.w	r9, r0
 801a616:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a61a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a61e:	43c0      	mvns	r0, r0
 801a620:	b2c0      	uxtb	r0, r0
 801a622:	fb16 f609 	smulbb	r6, r6, r9
 801a626:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a62a:	fb07 6700 	mla	r7, r7, r0, r6
 801a62e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a632:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a636:	b2ed      	uxtb	r5, r5
 801a638:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a63c:	fa5f fc8c 	uxtb.w	ip, ip
 801a640:	fb15 f509 	smulbb	r5, r5, r9
 801a644:	fb0c 5500 	mla	r5, ip, r0, r5
 801a648:	b2bf      	uxth	r7, r7
 801a64a:	fb1a fa09 	smulbb	sl, sl, r9
 801a64e:	b2ad      	uxth	r5, r5
 801a650:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a654:	fb06 a600 	mla	r6, r6, r0, sl
 801a658:	1c78      	adds	r0, r7, #1
 801a65a:	f105 0a01 	add.w	sl, r5, #1
 801a65e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a662:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a666:	b2b6      	uxth	r6, r6
 801a668:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a66c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a670:	ea4a 0707 	orr.w	r7, sl, r7
 801a674:	f106 0a01 	add.w	sl, r6, #1
 801a678:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a67c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a680:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a684:	ea47 070a 	orr.w	r7, r7, sl
 801a688:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a68c:	e7b5      	b.n	801a5fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a68e:	b005      	add	sp, #20
 801a690:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a694:	fffff800 	.word	0xfffff800

0801a698 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a69c:	b087      	sub	sp, #28
 801a69e:	468b      	mov	fp, r1
 801a6a0:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a6a2:	9203      	str	r2, [sp, #12]
 801a6a4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a6a8:	9204      	str	r2, [sp, #16]
 801a6aa:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a6ae:	6841      	ldr	r1, [r0, #4]
 801a6b0:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a6b4:	fb01 2404 	mla	r4, r1, r4, r2
 801a6b8:	6802      	ldr	r2, [r0, #0]
 801a6ba:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a6be:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a6c2:	3201      	adds	r2, #1
 801a6c4:	f022 0201 	bic.w	r2, r2, #1
 801a6c8:	9200      	str	r2, [sp, #0]
 801a6ca:	f8d9 2000 	ldr.w	r2, [r9]
 801a6ce:	9201      	str	r2, [sp, #4]
 801a6d0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a6d4:	f1bb 0f00 	cmp.w	fp, #0
 801a6d8:	dc03      	bgt.n	801a6e2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a6da:	9a03      	ldr	r2, [sp, #12]
 801a6dc:	2a00      	cmp	r2, #0
 801a6de:	f340 8169 	ble.w	801a9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a6e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a6e4:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a6e8:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a6ec:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a6f0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a6f2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a6f6:	2b00      	cmp	r3, #0
 801a6f8:	dd0e      	ble.n	801a718 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a6fa:	1402      	asrs	r2, r0, #16
 801a6fc:	d405      	bmi.n	801a70a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a6fe:	42ba      	cmp	r2, r7
 801a700:	da03      	bge.n	801a70a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a702:	140a      	asrs	r2, r1, #16
 801a704:	d401      	bmi.n	801a70a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a706:	42b2      	cmp	r2, r6
 801a708:	db07      	blt.n	801a71a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a70a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a70c:	4410      	add	r0, r2
 801a70e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a710:	3b01      	subs	r3, #1
 801a712:	4411      	add	r1, r2
 801a714:	3402      	adds	r4, #2
 801a716:	e7ee      	b.n	801a6f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a718:	d017      	beq.n	801a74a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a71a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a71c:	1e5a      	subs	r2, r3, #1
 801a71e:	fb05 0502 	mla	r5, r5, r2, r0
 801a722:	142d      	asrs	r5, r5, #16
 801a724:	d409      	bmi.n	801a73a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a726:	42bd      	cmp	r5, r7
 801a728:	da07      	bge.n	801a73a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a72a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a72c:	fb05 1202 	mla	r2, r5, r2, r1
 801a730:	1412      	asrs	r2, r2, #16
 801a732:	d402      	bmi.n	801a73a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a734:	42b2      	cmp	r2, r6
 801a736:	f2c0 80c7 	blt.w	801a8c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a73a:	2700      	movs	r7, #0
 801a73c:	19da      	adds	r2, r3, r7
 801a73e:	2a00      	cmp	r2, #0
 801a740:	dc3e      	bgt.n	801a7c0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a742:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a746:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a74a:	f1bb 0f00 	cmp.w	fp, #0
 801a74e:	f340 8131 	ble.w	801a9b4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a752:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a756:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a75a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a75e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a760:	f1bb 0b01 	subs.w	fp, fp, #1
 801a764:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a768:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a76c:	eeb0 6a62 	vmov.f32	s12, s5
 801a770:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a774:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a778:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a77c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a780:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a784:	eeb0 6a43 	vmov.f32	s12, s6
 801a788:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a78c:	ee12 2a90 	vmov	r2, s5
 801a790:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a794:	fb92 f3f3 	sdiv	r3, r2, r3
 801a798:	ee13 2a10 	vmov	r2, s6
 801a79c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a7a0:	9313      	str	r3, [sp, #76]	; 0x4c
 801a7a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7a4:	fb92 f3f3 	sdiv	r3, r2, r3
 801a7a8:	9a03      	ldr	r2, [sp, #12]
 801a7aa:	9314      	str	r3, [sp, #80]	; 0x50
 801a7ac:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a7b0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a7b2:	eeb0 3a67 	vmov.f32	s6, s15
 801a7b6:	bf08      	it	eq
 801a7b8:	4613      	moveq	r3, r2
 801a7ba:	eef0 2a47 	vmov.f32	s5, s14
 801a7be:	e789      	b.n	801a6d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a7c0:	1405      	asrs	r5, r0, #16
 801a7c2:	d435      	bmi.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7c4:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a7c8:	42aa      	cmp	r2, r5
 801a7ca:	dd31      	ble.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7cc:	140e      	asrs	r6, r1, #16
 801a7ce:	d42f      	bmi.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7d0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a7d4:	42b2      	cmp	r2, r6
 801a7d6:	dd2b      	ble.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7d8:	9a00      	ldr	r2, [sp, #0]
 801a7da:	fb06 5502 	mla	r5, r6, r2, r5
 801a7de:	086a      	lsrs	r2, r5, #1
 801a7e0:	9e01      	ldr	r6, [sp, #4]
 801a7e2:	5cb2      	ldrb	r2, [r6, r2]
 801a7e4:	07ee      	lsls	r6, r5, #31
 801a7e6:	bf54      	ite	pl
 801a7e8:	f002 020f 	andpl.w	r2, r2, #15
 801a7ec:	1112      	asrmi	r2, r2, #4
 801a7ee:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a7f2:	b2d2      	uxtb	r2, r2
 801a7f4:	b1e2      	cbz	r2, 801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a7f6:	9d04      	ldr	r5, [sp, #16]
 801a7f8:	436a      	muls	r2, r5
 801a7fa:	1c55      	adds	r5, r2, #1
 801a7fc:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a800:	4d6e      	ldr	r5, [pc, #440]	; (801a9bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a802:	682d      	ldr	r5, [r5, #0]
 801a804:	1212      	asrs	r2, r2, #8
 801a806:	0a2e      	lsrs	r6, r5, #8
 801a808:	2aff      	cmp	r2, #255	; 0xff
 801a80a:	9605      	str	r6, [sp, #20]
 801a80c:	d116      	bne.n	801a83c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801a80e:	f06f 0201 	mvn.w	r2, #1
 801a812:	fb02 fc07 	mul.w	ip, r2, r7
 801a816:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a81a:	096a      	lsrs	r2, r5, #5
 801a81c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a820:	f026 0607 	bic.w	r6, r6, #7
 801a824:	4316      	orrs	r6, r2
 801a826:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a82a:	432e      	orrs	r6, r5
 801a82c:	f824 600c 	strh.w	r6, [r4, ip]
 801a830:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a832:	4410      	add	r0, r2
 801a834:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a836:	3f01      	subs	r7, #1
 801a838:	4411      	add	r1, r2
 801a83a:	e77f      	b.n	801a73c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801a83c:	f06f 0601 	mvn.w	r6, #1
 801a840:	437e      	muls	r6, r7
 801a842:	fa1f fa82 	uxth.w	sl, r2
 801a846:	f834 8006 	ldrh.w	r8, [r4, r6]
 801a84a:	9602      	str	r6, [sp, #8]
 801a84c:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a850:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801a854:	43d2      	mvns	r2, r2
 801a856:	b2d2      	uxtb	r2, r2
 801a858:	fb1c fc0a 	smulbb	ip, ip, sl
 801a85c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a860:	fb0e ce02 	mla	lr, lr, r2, ip
 801a864:	b2ed      	uxtb	r5, r5
 801a866:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a86a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a86e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a872:	fa5f f888 	uxtb.w	r8, r8
 801a876:	fb15 f50a 	smulbb	r5, r5, sl
 801a87a:	fb08 5502 	mla	r5, r8, r2, r5
 801a87e:	fa1f fe8e 	uxth.w	lr, lr
 801a882:	fb16 f60a 	smulbb	r6, r6, sl
 801a886:	b2ad      	uxth	r5, r5
 801a888:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a88c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a890:	f10e 0201 	add.w	r2, lr, #1
 801a894:	1c6e      	adds	r6, r5, #1
 801a896:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a89a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801a89e:	fa1f fc8c 	uxth.w	ip, ip
 801a8a2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a8a6:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a8aa:	ea46 0e0e 	orr.w	lr, r6, lr
 801a8ae:	f10c 0601 	add.w	r6, ip, #1
 801a8b2:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a8b6:	0976      	lsrs	r6, r6, #5
 801a8b8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a8bc:	9a02      	ldr	r2, [sp, #8]
 801a8be:	ea4e 0e06 	orr.w	lr, lr, r6
 801a8c2:	f824 e002 	strh.w	lr, [r4, r2]
 801a8c6:	e7b3      	b.n	801a830 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8c8:	f04f 0800 	mov.w	r8, #0
 801a8cc:	eba3 0208 	sub.w	r2, r3, r8
 801a8d0:	2a00      	cmp	r2, #0
 801a8d2:	f77f af36 	ble.w	801a742 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801a8d6:	9e00      	ldr	r6, [sp, #0]
 801a8d8:	1402      	asrs	r2, r0, #16
 801a8da:	140d      	asrs	r5, r1, #16
 801a8dc:	fb06 2505 	mla	r5, r6, r5, r2
 801a8e0:	086a      	lsrs	r2, r5, #1
 801a8e2:	9e01      	ldr	r6, [sp, #4]
 801a8e4:	5cb2      	ldrb	r2, [r6, r2]
 801a8e6:	07ed      	lsls	r5, r5, #31
 801a8e8:	bf54      	ite	pl
 801a8ea:	f002 020f 	andpl.w	r2, r2, #15
 801a8ee:	1112      	asrmi	r2, r2, #4
 801a8f0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a8f4:	b2d2      	uxtb	r2, r2
 801a8f6:	b1c2      	cbz	r2, 801a92a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a8f8:	9d04      	ldr	r5, [sp, #16]
 801a8fa:	436a      	muls	r2, r5
 801a8fc:	1c55      	adds	r5, r2, #1
 801a8fe:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801a902:	4d2e      	ldr	r5, [pc, #184]	; (801a9bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801a904:	1212      	asrs	r2, r2, #8
 801a906:	682e      	ldr	r6, [r5, #0]
 801a908:	2aff      	cmp	r2, #255	; 0xff
 801a90a:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801a90e:	d113      	bne.n	801a938 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801a910:	0972      	lsrs	r2, r6, #5
 801a912:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801a916:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a91a:	f025 0507 	bic.w	r5, r5, #7
 801a91e:	4315      	orrs	r5, r2
 801a920:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801a924:	4335      	orrs	r5, r6
 801a926:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801a92a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a92c:	4410      	add	r0, r2
 801a92e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a930:	f108 0801 	add.w	r8, r8, #1
 801a934:	4411      	add	r1, r2
 801a936:	e7c9      	b.n	801a8cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a938:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801a93c:	fa1f fa82 	uxth.w	sl, r2
 801a940:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a944:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801a948:	43d2      	mvns	r2, r2
 801a94a:	b2d2      	uxtb	r2, r2
 801a94c:	fb17 f70a 	smulbb	r7, r7, sl
 801a950:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a954:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a958:	b2f6      	uxtb	r6, r6
 801a95a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a95e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a962:	fa5f fe8e 	uxtb.w	lr, lr
 801a966:	fb16 f60a 	smulbb	r6, r6, sl
 801a96a:	fb0e 6602 	mla	r6, lr, r2, r6
 801a96e:	b2ed      	uxtb	r5, r5
 801a970:	fa1f fc8c 	uxth.w	ip, ip
 801a974:	fb15 f50a 	smulbb	r5, r5, sl
 801a978:	b2b6      	uxth	r6, r6
 801a97a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a97e:	fb07 5702 	mla	r7, r7, r2, r5
 801a982:	f10c 0201 	add.w	r2, ip, #1
 801a986:	1c75      	adds	r5, r6, #1
 801a988:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a98c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801a990:	b2bf      	uxth	r7, r7
 801a992:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a996:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a99a:	ea45 0c0c 	orr.w	ip, r5, ip
 801a99e:	1c7d      	adds	r5, r7, #1
 801a9a0:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801a9a4:	096d      	lsrs	r5, r5, #5
 801a9a6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a9aa:	ea4c 0c05 	orr.w	ip, ip, r5
 801a9ae:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801a9b2:	e7ba      	b.n	801a92a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801a9b4:	b007      	add	sp, #28
 801a9b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9ba:	bf00      	nop
 801a9bc:	2000ef2c 	.word	0x2000ef2c

0801a9c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a9c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9c4:	b087      	sub	sp, #28
 801a9c6:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801acd4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801a9ca:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a9cc:	9205      	str	r2, [sp, #20]
 801a9ce:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a9d2:	9101      	str	r1, [sp, #4]
 801a9d4:	6841      	ldr	r1, [r0, #4]
 801a9d6:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801a9da:	fb01 2404 	mla	r4, r1, r4, r2
 801a9de:	6802      	ldr	r2, [r0, #0]
 801a9e0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a9e4:	f8db 2008 	ldr.w	r2, [fp, #8]
 801a9e8:	3201      	adds	r2, #1
 801a9ea:	f022 0201 	bic.w	r2, r2, #1
 801a9ee:	9202      	str	r2, [sp, #8]
 801a9f0:	f8db 2000 	ldr.w	r2, [fp]
 801a9f4:	9203      	str	r2, [sp, #12]
 801a9f6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a9fa:	9a01      	ldr	r2, [sp, #4]
 801a9fc:	2a00      	cmp	r2, #0
 801a9fe:	dc03      	bgt.n	801aa08 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801aa00:	9a05      	ldr	r2, [sp, #20]
 801aa02:	2a00      	cmp	r2, #0
 801aa04:	f340 8162 	ble.w	801accc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aa08:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801aa0a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801aa0e:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801aa12:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801aa16:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801aa18:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801aa1c:	2b00      	cmp	r3, #0
 801aa1e:	dd0e      	ble.n	801aa3e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801aa20:	1402      	asrs	r2, r0, #16
 801aa22:	d405      	bmi.n	801aa30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa24:	42ba      	cmp	r2, r7
 801aa26:	da03      	bge.n	801aa30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa28:	140a      	asrs	r2, r1, #16
 801aa2a:	d401      	bmi.n	801aa30 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801aa2c:	42b2      	cmp	r2, r6
 801aa2e:	db07      	blt.n	801aa40 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801aa30:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aa32:	4410      	add	r0, r2
 801aa34:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aa36:	3b01      	subs	r3, #1
 801aa38:	4411      	add	r1, r2
 801aa3a:	3402      	adds	r4, #2
 801aa3c:	e7ee      	b.n	801aa1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801aa3e:	d017      	beq.n	801aa70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801aa40:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801aa42:	1e5a      	subs	r2, r3, #1
 801aa44:	fb05 0502 	mla	r5, r5, r2, r0
 801aa48:	142d      	asrs	r5, r5, #16
 801aa4a:	d409      	bmi.n	801aa60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa4c:	42bd      	cmp	r5, r7
 801aa4e:	da07      	bge.n	801aa60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa50:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801aa52:	fb05 1202 	mla	r2, r5, r2, r1
 801aa56:	1412      	asrs	r2, r2, #16
 801aa58:	d402      	bmi.n	801aa60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801aa5a:	42b2      	cmp	r2, r6
 801aa5c:	f2c0 80c3 	blt.w	801abe6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801aa60:	2500      	movs	r5, #0
 801aa62:	195a      	adds	r2, r3, r5
 801aa64:	2a00      	cmp	r2, #0
 801aa66:	dc3f      	bgt.n	801aae8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801aa68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801aa6c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801aa70:	9b01      	ldr	r3, [sp, #4]
 801aa72:	2b00      	cmp	r3, #0
 801aa74:	f340 812a 	ble.w	801accc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801aa78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa84:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa86:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa8e:	eeb0 6a62 	vmov.f32	s12, s5
 801aa92:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa9e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aaa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aaa6:	eeb0 6a43 	vmov.f32	s12, s6
 801aaaa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aaae:	ee12 2a90 	vmov	r2, s5
 801aab2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aab6:	fb92 f3f3 	sdiv	r3, r2, r3
 801aaba:	ee13 2a10 	vmov	r2, s6
 801aabe:	9313      	str	r3, [sp, #76]	; 0x4c
 801aac0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aac2:	fb92 f3f3 	sdiv	r3, r2, r3
 801aac6:	9314      	str	r3, [sp, #80]	; 0x50
 801aac8:	9b01      	ldr	r3, [sp, #4]
 801aaca:	9a05      	ldr	r2, [sp, #20]
 801aacc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aad0:	3b01      	subs	r3, #1
 801aad2:	9301      	str	r3, [sp, #4]
 801aad4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aad8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aada:	eeb0 3a67 	vmov.f32	s6, s15
 801aade:	bf08      	it	eq
 801aae0:	4613      	moveq	r3, r2
 801aae2:	eef0 2a47 	vmov.f32	s5, s14
 801aae6:	e788      	b.n	801a9fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801aae8:	1406      	asrs	r6, r0, #16
 801aaea:	d42c      	bmi.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaec:	f8db 2008 	ldr.w	r2, [fp, #8]
 801aaf0:	42b2      	cmp	r2, r6
 801aaf2:	dd28      	ble.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaf4:	140f      	asrs	r7, r1, #16
 801aaf6:	d426      	bmi.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801aaf8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801aafc:	42ba      	cmp	r2, r7
 801aafe:	dd22      	ble.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab00:	9a02      	ldr	r2, [sp, #8]
 801ab02:	fb07 6602 	mla	r6, r7, r2, r6
 801ab06:	0872      	lsrs	r2, r6, #1
 801ab08:	9f03      	ldr	r7, [sp, #12]
 801ab0a:	5cba      	ldrb	r2, [r7, r2]
 801ab0c:	07f6      	lsls	r6, r6, #31
 801ab0e:	bf54      	ite	pl
 801ab10:	f002 020f 	andpl.w	r2, r2, #15
 801ab14:	1112      	asrmi	r2, r2, #4
 801ab16:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ab1a:	b2d2      	uxtb	r2, r2
 801ab1c:	2aff      	cmp	r2, #255	; 0xff
 801ab1e:	d118      	bne.n	801ab52 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801ab20:	f8d8 2000 	ldr.w	r2, [r8]
 801ab24:	f06f 0601 	mvn.w	r6, #1
 801ab28:	fb06 f705 	mul.w	r7, r6, r5
 801ab2c:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ab30:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ab34:	0956      	lsrs	r6, r2, #5
 801ab36:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab3a:	ea4c 0606 	orr.w	r6, ip, r6
 801ab3e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ab42:	4316      	orrs	r6, r2
 801ab44:	53e6      	strh	r6, [r4, r7]
 801ab46:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ab48:	4410      	add	r0, r2
 801ab4a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ab4c:	3d01      	subs	r5, #1
 801ab4e:	4411      	add	r1, r2
 801ab50:	e787      	b.n	801aa62 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ab52:	2a00      	cmp	r2, #0
 801ab54:	d0f7      	beq.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ab56:	f06f 0601 	mvn.w	r6, #1
 801ab5a:	436e      	muls	r6, r5
 801ab5c:	f8d8 c000 	ldr.w	ip, [r8]
 801ab60:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ab64:	9604      	str	r6, [sp, #16]
 801ab66:	fa1f f982 	uxth.w	r9, r2
 801ab6a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ab6e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ab72:	43d2      	mvns	r2, r2
 801ab74:	b2d2      	uxtb	r2, r2
 801ab76:	fb16 f609 	smulbb	r6, r6, r9
 801ab7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ab7e:	fb07 6702 	mla	r7, r7, r2, r6
 801ab82:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ab86:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ab8a:	fa5f fc8c 	uxtb.w	ip, ip
 801ab8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ab92:	fa5f fe8e 	uxtb.w	lr, lr
 801ab96:	fb1c fc09 	smulbb	ip, ip, r9
 801ab9a:	fb0e cc02 	mla	ip, lr, r2, ip
 801ab9e:	b2bf      	uxth	r7, r7
 801aba0:	fb1a fa09 	smulbb	sl, sl, r9
 801aba4:	fa1f fc8c 	uxth.w	ip, ip
 801aba8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801abac:	fb06 a602 	mla	r6, r6, r2, sl
 801abb0:	1c7a      	adds	r2, r7, #1
 801abb2:	f10c 0a01 	add.w	sl, ip, #1
 801abb6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801abba:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801abbe:	b2b6      	uxth	r6, r6
 801abc0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801abc4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801abc8:	ea4a 0707 	orr.w	r7, sl, r7
 801abcc:	f106 0a01 	add.w	sl, r6, #1
 801abd0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801abd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801abd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801abdc:	9a04      	ldr	r2, [sp, #16]
 801abde:	ea47 070a 	orr.w	r7, r7, sl
 801abe2:	52a7      	strh	r7, [r4, r2]
 801abe4:	e7af      	b.n	801ab46 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801abe6:	f04f 0e00 	mov.w	lr, #0
 801abea:	eba3 020e 	sub.w	r2, r3, lr
 801abee:	2a00      	cmp	r2, #0
 801abf0:	f77f af3a 	ble.w	801aa68 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801abf4:	9e02      	ldr	r6, [sp, #8]
 801abf6:	1402      	asrs	r2, r0, #16
 801abf8:	140d      	asrs	r5, r1, #16
 801abfa:	fb06 2505 	mla	r5, r6, r5, r2
 801abfe:	086a      	lsrs	r2, r5, #1
 801ac00:	9e03      	ldr	r6, [sp, #12]
 801ac02:	5cb2      	ldrb	r2, [r6, r2]
 801ac04:	07ed      	lsls	r5, r5, #31
 801ac06:	bf54      	ite	pl
 801ac08:	f002 020f 	andpl.w	r2, r2, #15
 801ac0c:	1112      	asrmi	r2, r2, #4
 801ac0e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801ac12:	b2d2      	uxtb	r2, r2
 801ac14:	2aff      	cmp	r2, #255	; 0xff
 801ac16:	d115      	bne.n	801ac44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801ac18:	f8d8 5000 	ldr.w	r5, [r8]
 801ac1c:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801ac20:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801ac24:	096a      	lsrs	r2, r5, #5
 801ac26:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac2a:	4332      	orrs	r2, r6
 801ac2c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801ac30:	432a      	orrs	r2, r5
 801ac32:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801ac36:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ac38:	4410      	add	r0, r2
 801ac3a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ac3c:	f10e 0e01 	add.w	lr, lr, #1
 801ac40:	4411      	add	r1, r2
 801ac42:	e7d2      	b.n	801abea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ac44:	2a00      	cmp	r2, #0
 801ac46:	d0f6      	beq.n	801ac36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801ac48:	f8d8 7000 	ldr.w	r7, [r8]
 801ac4c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801ac50:	fa1f f982 	uxth.w	r9, r2
 801ac54:	ea4f 262c 	mov.w	r6, ip, asr #8
 801ac58:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801ac5c:	43d2      	mvns	r2, r2
 801ac5e:	b2d2      	uxtb	r2, r2
 801ac60:	fb15 f509 	smulbb	r5, r5, r9
 801ac64:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ac68:	fb06 5602 	mla	r6, r6, r2, r5
 801ac6c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801ac70:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801ac74:	b2ff      	uxtb	r7, r7
 801ac76:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ac7a:	fa5f fc8c 	uxtb.w	ip, ip
 801ac7e:	fb17 f709 	smulbb	r7, r7, r9
 801ac82:	fb0c 7702 	mla	r7, ip, r2, r7
 801ac86:	b2b6      	uxth	r6, r6
 801ac88:	fb1a fa09 	smulbb	sl, sl, r9
 801ac8c:	b2bf      	uxth	r7, r7
 801ac8e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ac92:	fb05 a502 	mla	r5, r5, r2, sl
 801ac96:	1c72      	adds	r2, r6, #1
 801ac98:	f107 0a01 	add.w	sl, r7, #1
 801ac9c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801aca0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801aca4:	b2ad      	uxth	r5, r5
 801aca6:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801acaa:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801acae:	ea4a 0606 	orr.w	r6, sl, r6
 801acb2:	f105 0a01 	add.w	sl, r5, #1
 801acb6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801acba:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801acbe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801acc2:	ea46 060a 	orr.w	r6, r6, sl
 801acc6:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801acca:	e7b4      	b.n	801ac36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801accc:	b007      	add	sp, #28
 801acce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801acd2:	bf00      	nop
 801acd4:	2000ef2c 	.word	0x2000ef2c

0801acd8 <_ZN8touchgfx8LCD16bppD1Ev>:
 801acd8:	4770      	bx	lr

0801acda <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801acda:	4770      	bx	lr

0801acdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801acdc:	4770      	bx	lr

0801acde <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801acde:	4770      	bx	lr

0801ace0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801ace0:	4770      	bx	lr

0801ace2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801ace2:	4770      	bx	lr

0801ace4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801ace4:	4770      	bx	lr

0801ace6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801ace6:	4770      	bx	lr

0801ace8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ace8:	4770      	bx	lr

0801acea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801acea:	4770      	bx	lr

0801acec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801acec:	4770      	bx	lr

0801acee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801acee:	4770      	bx	lr

0801acf0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801acf0:	4770      	bx	lr

0801acf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801acf2:	4770      	bx	lr

0801acf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801acf4:	4770      	bx	lr

0801acf6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801acf6:	4770      	bx	lr

0801acf8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801acf8:	4770      	bx	lr

0801acfa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801acfa:	4770      	bx	lr

0801acfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801acfc:	4770      	bx	lr

0801acfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801acfe:	4770      	bx	lr

0801ad00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801ad00:	4770      	bx	lr

0801ad02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801ad02:	4770      	bx	lr

0801ad04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801ad04:	4770      	bx	lr

0801ad06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801ad06:	4770      	bx	lr

0801ad08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ad08:	4770      	bx	lr

0801ad0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801ad0a:	4770      	bx	lr

0801ad0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ad0c:	4770      	bx	lr

0801ad0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801ad0e:	4770      	bx	lr

0801ad10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801ad10:	4770      	bx	lr

0801ad12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801ad12:	4770      	bx	lr

0801ad14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801ad14:	4770      	bx	lr

0801ad16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801ad16:	4770      	bx	lr

0801ad18 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801ad18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ad1c:	b088      	sub	sp, #32
 801ad1e:	ac08      	add	r4, sp, #32
 801ad20:	4606      	mov	r6, r0
 801ad22:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801ad26:	4620      	mov	r0, r4
 801ad28:	4688      	mov	r8, r1
 801ad2a:	4691      	mov	r9, r2
 801ad2c:	f7fd fc62 	bl	80185f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801ad30:	6833      	ldr	r3, [r6, #0]
 801ad32:	4605      	mov	r5, r0
 801ad34:	4620      	mov	r0, r4
 801ad36:	699f      	ldr	r7, [r3, #24]
 801ad38:	f7fd fb70 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801ad3c:	4682      	mov	sl, r0
 801ad3e:	4620      	mov	r0, r4
 801ad40:	f7fd fba0 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801ad44:	9500      	str	r5, [sp, #0]
 801ad46:	e9cd a001 	strd	sl, r0, [sp, #4]
 801ad4a:	464b      	mov	r3, r9
 801ad4c:	a806      	add	r0, sp, #24
 801ad4e:	4642      	mov	r2, r8
 801ad50:	4631      	mov	r1, r6
 801ad52:	47b8      	blx	r7
 801ad54:	4628      	mov	r0, r5
 801ad56:	b008      	add	sp, #32
 801ad58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801ad5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801ad5c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801ad60:	2300      	movs	r3, #0
 801ad62:	9300      	str	r3, [sp, #0]
 801ad64:	4b3d      	ldr	r3, [pc, #244]	; (801ae5c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801ad66:	781b      	ldrb	r3, [r3, #0]
 801ad68:	2b00      	cmp	r3, #0
 801ad6a:	d137      	bne.n	801addc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801ad6c:	4a3c      	ldr	r2, [pc, #240]	; (801ae60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ad6e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801ad72:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ad76:	2b00      	cmp	r3, #0
 801ad78:	d132      	bne.n	801ade0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801ad7a:	4b3a      	ldr	r3, [pc, #232]	; (801ae64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801ad7c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ad80:	6808      	ldr	r0, [r1, #0]
 801ad82:	6849      	ldr	r1, [r1, #4]
 801ad84:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ad88:	ac02      	add	r4, sp, #8
 801ad8a:	ab02      	add	r3, sp, #8
 801ad8c:	c303      	stmia	r3!, {r0, r1}
 801ad8e:	4669      	mov	r1, sp
 801ad90:	4620      	mov	r0, r4
 801ad92:	f7f9 fdc1 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ad96:	4668      	mov	r0, sp
 801ad98:	f7f9 fd7a 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ad9c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ada0:	f8bd 2000 	ldrh.w	r2, [sp]
 801ada4:	4d30      	ldr	r5, [pc, #192]	; (801ae68 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801ada6:	4413      	add	r3, r2
 801ada8:	f8ad 3008 	strh.w	r3, [sp, #8]
 801adac:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801adb0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801adb4:	6828      	ldr	r0, [r5, #0]
 801adb6:	4413      	add	r3, r2
 801adb8:	f8ad 300a 	strh.w	r3, [sp, #10]
 801adbc:	6803      	ldr	r3, [r0, #0]
 801adbe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801adc0:	4798      	blx	r3
 801adc2:	f010 0f01 	tst.w	r0, #1
 801adc6:	462f      	mov	r7, r5
 801adc8:	d00c      	beq.n	801ade4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801adca:	6828      	ldr	r0, [r5, #0]
 801adcc:	6803      	ldr	r3, [r0, #0]
 801adce:	e894 0006 	ldmia.w	r4, {r1, r2}
 801add2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801add4:	4798      	blx	r3
 801add6:	b004      	add	sp, #16
 801add8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801addc:	4a21      	ldr	r2, [pc, #132]	; (801ae64 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801adde:	e7c6      	b.n	801ad6e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801ade0:	4b1f      	ldr	r3, [pc, #124]	; (801ae60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ade2:	e7cb      	b.n	801ad7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801ade4:	6838      	ldr	r0, [r7, #0]
 801ade6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801adea:	6803      	ldr	r3, [r0, #0]
 801adec:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801adf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801adf2:	4798      	blx	r3
 801adf4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801adf8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801adfc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801ae00:	fb16 3602 	smlabb	r6, r6, r2, r3
 801ae04:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801ae08:	6838      	ldr	r0, [r7, #0]
 801ae0a:	6803      	ldr	r3, [r0, #0]
 801ae0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ae0e:	4798      	blx	r3
 801ae10:	4a13      	ldr	r2, [pc, #76]	; (801ae60 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801ae12:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801ae16:	8813      	ldrh	r3, [r2, #0]
 801ae18:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801ae1c:	fb03 1404 	mla	r4, r3, r4, r1
 801ae20:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ae24:	435d      	muls	r5, r3
 801ae26:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801ae2a:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801ae2e:	4691      	mov	r9, r2
 801ae30:	6838      	ldr	r0, [r7, #0]
 801ae32:	42ac      	cmp	r4, r5
 801ae34:	6803      	ldr	r3, [r0, #0]
 801ae36:	d20e      	bcs.n	801ae56 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801ae38:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801ae3c:	4632      	mov	r2, r6
 801ae3e:	4643      	mov	r3, r8
 801ae40:	4621      	mov	r1, r4
 801ae42:	47d0      	blx	sl
 801ae44:	f8b9 3000 	ldrh.w	r3, [r9]
 801ae48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ae4c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801ae50:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801ae54:	e7ec      	b.n	801ae30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801ae56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ae58:	4798      	blx	r3
 801ae5a:	e7bc      	b.n	801add6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801ae5c:	2000ef14 	.word	0x2000ef14
 801ae60:	2000ef16 	.word	0x2000ef16
 801ae64:	2000ef18 	.word	0x2000ef18
 801ae68:	2000ef1c 	.word	0x2000ef1c

0801ae6c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801ae6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ae70:	b08b      	sub	sp, #44	; 0x2c
 801ae72:	460f      	mov	r7, r1
 801ae74:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801ae78:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801ae7c:	4616      	mov	r6, r2
 801ae7e:	f1bb 0f00 	cmp.w	fp, #0
 801ae82:	d04a      	beq.n	801af1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801ae84:	6810      	ldr	r0, [r2, #0]
 801ae86:	6851      	ldr	r1, [r2, #4]
 801ae88:	ad06      	add	r5, sp, #24
 801ae8a:	c503      	stmia	r5!, {r0, r1}
 801ae8c:	6818      	ldr	r0, [r3, #0]
 801ae8e:	6859      	ldr	r1, [r3, #4]
 801ae90:	ad08      	add	r5, sp, #32
 801ae92:	c503      	stmia	r5!, {r0, r1}
 801ae94:	a806      	add	r0, sp, #24
 801ae96:	f7f9 fcfb 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ae9a:	4631      	mov	r1, r6
 801ae9c:	a808      	add	r0, sp, #32
 801ae9e:	f7f9 fd3b 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801aea2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801aea6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801aeaa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801aeae:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801aeb2:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801aeb6:	fb16 2103 	smlabb	r1, r6, r3, r2
 801aeba:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801aebe:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801aec2:	4f5f      	ldr	r7, [pc, #380]	; (801b040 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801aec4:	440a      	add	r2, r1
 801aec6:	f8ad 2020 	strh.w	r2, [sp, #32]
 801aeca:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801aece:	6838      	ldr	r0, [r7, #0]
 801aed0:	4413      	add	r3, r2
 801aed2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801aed6:	6803      	ldr	r3, [r0, #0]
 801aed8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801aeda:	4798      	blx	r3
 801aedc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801aee0:	46b9      	mov	r9, r7
 801aee2:	d11d      	bne.n	801af20 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801aee4:	b9fc      	cbnz	r4, 801af26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801aee6:	f010 0f01 	tst.w	r0, #1
 801aeea:	d01c      	beq.n	801af26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801aeec:	f8d9 0000 	ldr.w	r0, [r9]
 801aef0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801aef4:	6801      	ldr	r1, [r0, #0]
 801aef6:	f8cd b00c 	str.w	fp, [sp, #12]
 801aefa:	2700      	movs	r7, #0
 801aefc:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801af00:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801af04:	9402      	str	r4, [sp, #8]
 801af06:	b2ad      	uxth	r5, r5
 801af08:	fa1f f488 	uxth.w	r4, r8
 801af0c:	9501      	str	r5, [sp, #4]
 801af0e:	9400      	str	r4, [sp, #0]
 801af10:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801af12:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801af16:	4631      	mov	r1, r6
 801af18:	47a0      	blx	r4
 801af1a:	b00b      	add	sp, #44	; 0x2c
 801af1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af20:	f010 0f04 	tst.w	r0, #4
 801af24:	e7e1      	b.n	801aeea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801af26:	f8d9 0000 	ldr.w	r0, [r9]
 801af2a:	6803      	ldr	r3, [r0, #0]
 801af2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801af2e:	4798      	blx	r3
 801af30:	4b44      	ldr	r3, [pc, #272]	; (801b044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801af32:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801af36:	881a      	ldrh	r2, [r3, #0]
 801af38:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801af3c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801af40:	fb02 1404 	mla	r4, r2, r4, r1
 801af44:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801af48:	469a      	mov	sl, r3
 801af4a:	fb05 f502 	mul.w	r5, r5, r2
 801af4e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801af52:	d059      	beq.n	801b008 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801af54:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801af58:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801af5c:	fa1f f28b 	uxth.w	r2, fp
 801af60:	fa1f f989 	uxth.w	r9, r9
 801af64:	469e      	mov	lr, r3
 801af66:	42ac      	cmp	r4, r5
 801af68:	d264      	bcs.n	801b034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801af6a:	eb04 0a07 	add.w	sl, r4, r7
 801af6e:	4554      	cmp	r4, sl
 801af70:	d23d      	bcs.n	801afee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801af72:	8821      	ldrh	r1, [r4, #0]
 801af74:	f836 3b02 	ldrh.w	r3, [r6], #2
 801af78:	1208      	asrs	r0, r1, #8
 801af7a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801af7e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801af82:	fb10 f009 	smulbb	r0, r0, r9
 801af86:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801af8a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801af8e:	00c9      	lsls	r1, r1, #3
 801af90:	fb0c 0c02 	mla	ip, ip, r2, r0
 801af94:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801af98:	10d8      	asrs	r0, r3, #3
 801af9a:	b2c9      	uxtb	r1, r1
 801af9c:	00db      	lsls	r3, r3, #3
 801af9e:	fa1f fc8c 	uxth.w	ip, ip
 801afa2:	fb1b fb09 	smulbb	fp, fp, r9
 801afa6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801afaa:	b2db      	uxtb	r3, r3
 801afac:	fb11 f109 	smulbb	r1, r1, r9
 801afb0:	fb00 b002 	mla	r0, r0, r2, fp
 801afb4:	fb03 1302 	mla	r3, r3, r2, r1
 801afb8:	f10c 0b01 	add.w	fp, ip, #1
 801afbc:	b29b      	uxth	r3, r3
 801afbe:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801afc2:	b280      	uxth	r0, r0
 801afc4:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801afc8:	f103 0c01 	add.w	ip, r3, #1
 801afcc:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801afd0:	1c43      	adds	r3, r0, #1
 801afd2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801afd6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801afda:	0940      	lsrs	r0, r0, #5
 801afdc:	ea4c 0c0b 	orr.w	ip, ip, fp
 801afe0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801afe4:	ea4c 0c00 	orr.w	ip, ip, r0
 801afe8:	f824 cb02 	strh.w	ip, [r4], #2
 801afec:	e7bf      	b.n	801af6e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801afee:	f8be 3000 	ldrh.w	r3, [lr]
 801aff2:	eba3 0308 	sub.w	r3, r3, r8
 801aff6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801affa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801affe:	eba3 0308 	sub.w	r3, r3, r8
 801b002:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b006:	e7ae      	b.n	801af66 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b008:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b00c:	f8d9 0000 	ldr.w	r0, [r9]
 801b010:	42ac      	cmp	r4, r5
 801b012:	6803      	ldr	r3, [r0, #0]
 801b014:	d20e      	bcs.n	801b034 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b016:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b01a:	4632      	mov	r2, r6
 801b01c:	463b      	mov	r3, r7
 801b01e:	4621      	mov	r1, r4
 801b020:	47c0      	blx	r8
 801b022:	f8ba 3000 	ldrh.w	r3, [sl]
 801b026:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b02a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b02e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b032:	e7eb      	b.n	801b00c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b034:	4b02      	ldr	r3, [pc, #8]	; (801b040 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b036:	6818      	ldr	r0, [r3, #0]
 801b038:	6803      	ldr	r3, [r0, #0]
 801b03a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b03c:	4798      	blx	r3
 801b03e:	e76c      	b.n	801af1a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b040:	2000ef1c 	.word	0x2000ef1c
 801b044:	2000ef16 	.word	0x2000ef16

0801b048 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b048:	b510      	push	{r4, lr}
 801b04a:	2184      	movs	r1, #132	; 0x84
 801b04c:	4604      	mov	r4, r0
 801b04e:	f00b f967 	bl	8026320 <_ZdlPvj>
 801b052:	4620      	mov	r0, r4
 801b054:	bd10      	pop	{r4, pc}

0801b056 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b056:	b510      	push	{r4, lr}
 801b058:	2104      	movs	r1, #4
 801b05a:	4604      	mov	r4, r0
 801b05c:	f00b f960 	bl	8026320 <_ZdlPvj>
 801b060:	4620      	mov	r0, r4
 801b062:	bd10      	pop	{r4, pc}

0801b064 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b064:	b510      	push	{r4, lr}
 801b066:	2104      	movs	r1, #4
 801b068:	4604      	mov	r4, r0
 801b06a:	f00b f959 	bl	8026320 <_ZdlPvj>
 801b06e:	4620      	mov	r0, r4
 801b070:	bd10      	pop	{r4, pc}

0801b072 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b072:	b510      	push	{r4, lr}
 801b074:	f640 0144 	movw	r1, #2116	; 0x844
 801b078:	4604      	mov	r4, r0
 801b07a:	f00b f951 	bl	8026320 <_ZdlPvj>
 801b07e:	4620      	mov	r0, r4
 801b080:	bd10      	pop	{r4, pc}

0801b082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b082:	b510      	push	{r4, lr}
 801b084:	2104      	movs	r1, #4
 801b086:	4604      	mov	r4, r0
 801b088:	f00b f94a 	bl	8026320 <_ZdlPvj>
 801b08c:	4620      	mov	r0, r4
 801b08e:	bd10      	pop	{r4, pc}

0801b090 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b090:	b510      	push	{r4, lr}
 801b092:	2104      	movs	r1, #4
 801b094:	4604      	mov	r4, r0
 801b096:	f00b f943 	bl	8026320 <_ZdlPvj>
 801b09a:	4620      	mov	r0, r4
 801b09c:	bd10      	pop	{r4, pc}

0801b09e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b09e:	b510      	push	{r4, lr}
 801b0a0:	2104      	movs	r1, #4
 801b0a2:	4604      	mov	r4, r0
 801b0a4:	f00b f93c 	bl	8026320 <_ZdlPvj>
 801b0a8:	4620      	mov	r0, r4
 801b0aa:	bd10      	pop	{r4, pc}

0801b0ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b0ac:	b510      	push	{r4, lr}
 801b0ae:	2104      	movs	r1, #4
 801b0b0:	4604      	mov	r4, r0
 801b0b2:	f00b f935 	bl	8026320 <_ZdlPvj>
 801b0b6:	4620      	mov	r0, r4
 801b0b8:	bd10      	pop	{r4, pc}

0801b0ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b0ba:	b510      	push	{r4, lr}
 801b0bc:	2104      	movs	r1, #4
 801b0be:	4604      	mov	r4, r0
 801b0c0:	f00b f92e 	bl	8026320 <_ZdlPvj>
 801b0c4:	4620      	mov	r0, r4
 801b0c6:	bd10      	pop	{r4, pc}

0801b0c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b0c8:	b510      	push	{r4, lr}
 801b0ca:	2104      	movs	r1, #4
 801b0cc:	4604      	mov	r4, r0
 801b0ce:	f00b f927 	bl	8026320 <_ZdlPvj>
 801b0d2:	4620      	mov	r0, r4
 801b0d4:	bd10      	pop	{r4, pc}

0801b0d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b0d6:	b510      	push	{r4, lr}
 801b0d8:	2104      	movs	r1, #4
 801b0da:	4604      	mov	r4, r0
 801b0dc:	f00b f920 	bl	8026320 <_ZdlPvj>
 801b0e0:	4620      	mov	r0, r4
 801b0e2:	bd10      	pop	{r4, pc}

0801b0e4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b0e4:	b510      	push	{r4, lr}
 801b0e6:	2104      	movs	r1, #4
 801b0e8:	4604      	mov	r4, r0
 801b0ea:	f00b f919 	bl	8026320 <_ZdlPvj>
 801b0ee:	4620      	mov	r0, r4
 801b0f0:	bd10      	pop	{r4, pc}

0801b0f2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b0f2:	b510      	push	{r4, lr}
 801b0f4:	2104      	movs	r1, #4
 801b0f6:	4604      	mov	r4, r0
 801b0f8:	f00b f912 	bl	8026320 <_ZdlPvj>
 801b0fc:	4620      	mov	r0, r4
 801b0fe:	bd10      	pop	{r4, pc}

0801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b100:	b510      	push	{r4, lr}
 801b102:	2104      	movs	r1, #4
 801b104:	4604      	mov	r4, r0
 801b106:	f00b f90b 	bl	8026320 <_ZdlPvj>
 801b10a:	4620      	mov	r0, r4
 801b10c:	bd10      	pop	{r4, pc}

0801b10e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b10e:	b510      	push	{r4, lr}
 801b110:	2104      	movs	r1, #4
 801b112:	4604      	mov	r4, r0
 801b114:	f00b f904 	bl	8026320 <_ZdlPvj>
 801b118:	4620      	mov	r0, r4
 801b11a:	bd10      	pop	{r4, pc}

0801b11c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b11c:	b510      	push	{r4, lr}
 801b11e:	2104      	movs	r1, #4
 801b120:	4604      	mov	r4, r0
 801b122:	f00b f8fd 	bl	8026320 <_ZdlPvj>
 801b126:	4620      	mov	r0, r4
 801b128:	bd10      	pop	{r4, pc}

0801b12a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b12a:	b510      	push	{r4, lr}
 801b12c:	2104      	movs	r1, #4
 801b12e:	4604      	mov	r4, r0
 801b130:	f00b f8f6 	bl	8026320 <_ZdlPvj>
 801b134:	4620      	mov	r0, r4
 801b136:	bd10      	pop	{r4, pc}

0801b138 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b138:	b510      	push	{r4, lr}
 801b13a:	2104      	movs	r1, #4
 801b13c:	4604      	mov	r4, r0
 801b13e:	f00b f8ef 	bl	8026320 <_ZdlPvj>
 801b142:	4620      	mov	r0, r4
 801b144:	bd10      	pop	{r4, pc}

0801b146 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b146:	b510      	push	{r4, lr}
 801b148:	2104      	movs	r1, #4
 801b14a:	4604      	mov	r4, r0
 801b14c:	f00b f8e8 	bl	8026320 <_ZdlPvj>
 801b150:	4620      	mov	r0, r4
 801b152:	bd10      	pop	{r4, pc}

0801b154 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b154:	b510      	push	{r4, lr}
 801b156:	2104      	movs	r1, #4
 801b158:	4604      	mov	r4, r0
 801b15a:	f00b f8e1 	bl	8026320 <_ZdlPvj>
 801b15e:	4620      	mov	r0, r4
 801b160:	bd10      	pop	{r4, pc}

0801b162 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b162:	b510      	push	{r4, lr}
 801b164:	2104      	movs	r1, #4
 801b166:	4604      	mov	r4, r0
 801b168:	f00b f8da 	bl	8026320 <_ZdlPvj>
 801b16c:	4620      	mov	r0, r4
 801b16e:	bd10      	pop	{r4, pc}

0801b170 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b170:	b510      	push	{r4, lr}
 801b172:	2104      	movs	r1, #4
 801b174:	4604      	mov	r4, r0
 801b176:	f00b f8d3 	bl	8026320 <_ZdlPvj>
 801b17a:	4620      	mov	r0, r4
 801b17c:	bd10      	pop	{r4, pc}

0801b17e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b17e:	b510      	push	{r4, lr}
 801b180:	2104      	movs	r1, #4
 801b182:	4604      	mov	r4, r0
 801b184:	f00b f8cc 	bl	8026320 <_ZdlPvj>
 801b188:	4620      	mov	r0, r4
 801b18a:	bd10      	pop	{r4, pc}

0801b18c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b18c:	b510      	push	{r4, lr}
 801b18e:	2104      	movs	r1, #4
 801b190:	4604      	mov	r4, r0
 801b192:	f00b f8c5 	bl	8026320 <_ZdlPvj>
 801b196:	4620      	mov	r0, r4
 801b198:	bd10      	pop	{r4, pc}

0801b19a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b19a:	b510      	push	{r4, lr}
 801b19c:	2104      	movs	r1, #4
 801b19e:	4604      	mov	r4, r0
 801b1a0:	f00b f8be 	bl	8026320 <_ZdlPvj>
 801b1a4:	4620      	mov	r0, r4
 801b1a6:	bd10      	pop	{r4, pc}

0801b1a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b1a8:	b510      	push	{r4, lr}
 801b1aa:	2104      	movs	r1, #4
 801b1ac:	4604      	mov	r4, r0
 801b1ae:	f00b f8b7 	bl	8026320 <_ZdlPvj>
 801b1b2:	4620      	mov	r0, r4
 801b1b4:	bd10      	pop	{r4, pc}

0801b1b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b1b6:	b510      	push	{r4, lr}
 801b1b8:	2104      	movs	r1, #4
 801b1ba:	4604      	mov	r4, r0
 801b1bc:	f00b f8b0 	bl	8026320 <_ZdlPvj>
 801b1c0:	4620      	mov	r0, r4
 801b1c2:	bd10      	pop	{r4, pc}

0801b1c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b1c4:	b510      	push	{r4, lr}
 801b1c6:	2104      	movs	r1, #4
 801b1c8:	4604      	mov	r4, r0
 801b1ca:	f00b f8a9 	bl	8026320 <_ZdlPvj>
 801b1ce:	4620      	mov	r0, r4
 801b1d0:	bd10      	pop	{r4, pc}

0801b1d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b1d2:	b510      	push	{r4, lr}
 801b1d4:	2104      	movs	r1, #4
 801b1d6:	4604      	mov	r4, r0
 801b1d8:	f00b f8a2 	bl	8026320 <_ZdlPvj>
 801b1dc:	4620      	mov	r0, r4
 801b1de:	bd10      	pop	{r4, pc}

0801b1e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b1e0:	b510      	push	{r4, lr}
 801b1e2:	2104      	movs	r1, #4
 801b1e4:	4604      	mov	r4, r0
 801b1e6:	f00b f89b 	bl	8026320 <_ZdlPvj>
 801b1ea:	4620      	mov	r0, r4
 801b1ec:	bd10      	pop	{r4, pc}

0801b1ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b1ee:	b510      	push	{r4, lr}
 801b1f0:	2104      	movs	r1, #4
 801b1f2:	4604      	mov	r4, r0
 801b1f4:	f00b f894 	bl	8026320 <_ZdlPvj>
 801b1f8:	4620      	mov	r0, r4
 801b1fa:	bd10      	pop	{r4, pc}

0801b1fc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b1fc:	b510      	push	{r4, lr}
 801b1fe:	2104      	movs	r1, #4
 801b200:	4604      	mov	r4, r0
 801b202:	f00b f88d 	bl	8026320 <_ZdlPvj>
 801b206:	4620      	mov	r0, r4
 801b208:	bd10      	pop	{r4, pc}
	...

0801b20c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b210:	b08f      	sub	sp, #60	; 0x3c
 801b212:	461c      	mov	r4, r3
 801b214:	9205      	str	r2, [sp, #20]
 801b216:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b21a:	9100      	str	r1, [sp, #0]
 801b21c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b21e:	9201      	str	r2, [sp, #4]
 801b220:	2a00      	cmp	r2, #0
 801b222:	f000 8115 	beq.w	801b450 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b226:	6820      	ldr	r0, [r4, #0]
 801b228:	6861      	ldr	r1, [r4, #4]
 801b22a:	aa0a      	add	r2, sp, #40	; 0x28
 801b22c:	c203      	stmia	r2!, {r0, r1}
 801b22e:	6818      	ldr	r0, [r3, #0]
 801b230:	6859      	ldr	r1, [r3, #4]
 801b232:	aa0c      	add	r2, sp, #48	; 0x30
 801b234:	c203      	stmia	r2!, {r0, r1}
 801b236:	a80a      	add	r0, sp, #40	; 0x28
 801b238:	f7f9 fb2a 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b23c:	4621      	mov	r1, r4
 801b23e:	a80c      	add	r0, sp, #48	; 0x30
 801b240:	f7f9 fb6a 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b244:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b248:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b24c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b250:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b254:	bfde      	ittt	le
 801b256:	b2b3      	uxthle	r3, r6
 801b258:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b25c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b260:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b264:	bfc8      	it	gt
 801b266:	2301      	movgt	r3, #1
 801b268:	fb92 f1f3 	sdiv	r1, r2, r3
 801b26c:	fa1f fc81 	uxth.w	ip, r1
 801b270:	fb0c 2413 	mls	r4, ip, r3, r2
 801b274:	fb14 f406 	smulbb	r4, r4, r6
 801b278:	441d      	add	r5, r3
 801b27a:	4404      	add	r4, r0
 801b27c:	4661      	mov	r1, ip
 801b27e:	3d01      	subs	r5, #1
 801b280:	b2a4      	uxth	r4, r4
 801b282:	fb95 f5f3 	sdiv	r5, r5, r3
 801b286:	b131      	cbz	r1, 801b296 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b288:	9b05      	ldr	r3, [sp, #20]
 801b28a:	9900      	ldr	r1, [sp, #0]
 801b28c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b290:	ba1b      	rev	r3, r3
 801b292:	4419      	add	r1, r3
 801b294:	9100      	str	r1, [sp, #0]
 801b296:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b29a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b29e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b2a2:	4418      	add	r0, r3
 801b2a4:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b2a8:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b2ac:	441a      	add	r2, r3
 801b2ae:	4b6a      	ldr	r3, [pc, #424]	; (801b458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b2b0:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b2b4:	6818      	ldr	r0, [r3, #0]
 801b2b6:	6803      	ldr	r3, [r0, #0]
 801b2b8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b2ba:	4798      	blx	r3
 801b2bc:	4967      	ldr	r1, [pc, #412]	; (801b45c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b2be:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b2c2:	880b      	ldrh	r3, [r1, #0]
 801b2c4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b2c8:	9109      	str	r1, [sp, #36]	; 0x24
 801b2ca:	fb03 c202 	mla	r2, r3, r2, ip
 801b2ce:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b2d2:	4373      	muls	r3, r6
 801b2d4:	b2ad      	uxth	r5, r5
 801b2d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b2da:	00ad      	lsls	r5, r5, #2
 801b2dc:	9306      	str	r3, [sp, #24]
 801b2de:	1d2b      	adds	r3, r5, #4
 801b2e0:	9307      	str	r3, [sp, #28]
 801b2e2:	9b01      	ldr	r3, [sp, #4]
 801b2e4:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b2e8:	9103      	str	r1, [sp, #12]
 801b2ea:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b2ee:	2c00      	cmp	r4, #0
 801b2f0:	bf0c      	ite	eq
 801b2f2:	46c6      	moveq	lr, r8
 801b2f4:	f04f 0e00 	movne.w	lr, #0
 801b2f8:	2300      	movs	r3, #0
 801b2fa:	b292      	uxth	r2, r2
 801b2fc:	fa1f fe8e 	uxth.w	lr, lr
 801b300:	9302      	str	r3, [sp, #8]
 801b302:	9204      	str	r2, [sp, #16]
 801b304:	9a06      	ldr	r2, [sp, #24]
 801b306:	4282      	cmp	r2, r0
 801b308:	f240 809d 	bls.w	801b446 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b30c:	b963      	cbnz	r3, 801b328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b30e:	9b00      	ldr	r3, [sp, #0]
 801b310:	781a      	ldrb	r2, [r3, #0]
 801b312:	0993      	lsrs	r3, r2, #6
 801b314:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b318:	9202      	str	r2, [sp, #8]
 801b31a:	1e5a      	subs	r2, r3, #1
 801b31c:	2a02      	cmp	r2, #2
 801b31e:	d815      	bhi.n	801b34c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b320:	9a00      	ldr	r2, [sp, #0]
 801b322:	3201      	adds	r2, #1
 801b324:	9200      	str	r2, [sp, #0]
 801b326:	b29b      	uxth	r3, r3
 801b328:	b1b4      	cbz	r4, 801b358 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b32a:	429c      	cmp	r4, r3
 801b32c:	bf95      	itete	ls
 801b32e:	1b1c      	subls	r4, r3, r4
 801b330:	1ae4      	subhi	r4, r4, r3
 801b332:	fa1f fa84 	uxthls.w	sl, r4
 801b336:	b2a4      	uxthhi	r4, r4
 801b338:	bf87      	ittee	hi
 801b33a:	4671      	movhi	r1, lr
 801b33c:	f04f 0a00 	movhi.w	sl, #0
 801b340:	fa1f f188 	uxthls.w	r1, r8
 801b344:	2400      	movls	r4, #0
 801b346:	4653      	mov	r3, sl
 801b348:	468e      	mov	lr, r1
 801b34a:	e7db      	b.n	801b304 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b34c:	9a00      	ldr	r2, [sp, #0]
 801b34e:	9b00      	ldr	r3, [sp, #0]
 801b350:	3202      	adds	r2, #2
 801b352:	785b      	ldrb	r3, [r3, #1]
 801b354:	9200      	str	r2, [sp, #0]
 801b356:	e7e7      	b.n	801b328 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b358:	2202      	movs	r2, #2
 801b35a:	4615      	mov	r5, r2
 801b35c:	9907      	ldr	r1, [sp, #28]
 801b35e:	9a02      	ldr	r2, [sp, #8]
 801b360:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b364:	9905      	ldr	r1, [sp, #20]
 801b366:	4573      	cmp	r3, lr
 801b368:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b36c:	9a01      	ldr	r2, [sp, #4]
 801b36e:	bf2b      	itete	cs
 801b370:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b374:	ebae 0103 	subcc.w	r1, lr, r3
 801b378:	46f1      	movcs	r9, lr
 801b37a:	4699      	movcc	r9, r3
 801b37c:	bf27      	ittee	cs
 801b37e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b382:	4621      	movcs	r1, r4
 801b384:	b289      	uxthcc	r1, r1
 801b386:	46a2      	movcc	sl, r4
 801b388:	2aff      	cmp	r2, #255	; 0xff
 801b38a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b38e:	d105      	bne.n	801b39c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b390:	4481      	add	r9, r0
 801b392:	4581      	cmp	r9, r0
 801b394:	d045      	beq.n	801b422 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b396:	f820 cb02 	strh.w	ip, [r0], #2
 801b39a:	e7fa      	b.n	801b392 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b39c:	9d03      	ldr	r5, [sp, #12]
 801b39e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b3a2:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b3a6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b3aa:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b3ae:	436a      	muls	r2, r5
 801b3b0:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b3b4:	fa5f fc8c 	uxtb.w	ip, ip
 801b3b8:	9208      	str	r2, [sp, #32]
 801b3ba:	fb0b fb05 	mul.w	fp, fp, r5
 801b3be:	fb0c fc05 	mul.w	ip, ip, r5
 801b3c2:	4481      	add	r9, r0
 801b3c4:	4581      	cmp	r9, r0
 801b3c6:	d02c      	beq.n	801b422 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b3c8:	8802      	ldrh	r2, [r0, #0]
 801b3ca:	9d04      	ldr	r5, [sp, #16]
 801b3cc:	9f04      	ldr	r7, [sp, #16]
 801b3ce:	1216      	asrs	r6, r2, #8
 801b3d0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b3d4:	fb16 f605 	smulbb	r6, r6, r5
 801b3d8:	9d08      	ldr	r5, [sp, #32]
 801b3da:	442e      	add	r6, r5
 801b3dc:	10d5      	asrs	r5, r2, #3
 801b3de:	00d2      	lsls	r2, r2, #3
 801b3e0:	b2d2      	uxtb	r2, r2
 801b3e2:	fb12 f207 	smulbb	r2, r2, r7
 801b3e6:	b2b6      	uxth	r6, r6
 801b3e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b3ec:	4462      	add	r2, ip
 801b3ee:	fb15 f507 	smulbb	r5, r5, r7
 801b3f2:	b292      	uxth	r2, r2
 801b3f4:	1c77      	adds	r7, r6, #1
 801b3f6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b3fa:	1c57      	adds	r7, r2, #1
 801b3fc:	445d      	add	r5, fp
 801b3fe:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b402:	b2ad      	uxth	r5, r5
 801b404:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b408:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b40c:	4316      	orrs	r6, r2
 801b40e:	1c6a      	adds	r2, r5, #1
 801b410:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b414:	096d      	lsrs	r5, r5, #5
 801b416:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b41a:	432e      	orrs	r6, r5
 801b41c:	f820 6b02 	strh.w	r6, [r0], #2
 801b420:	e7d0      	b.n	801b3c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b422:	4573      	cmp	r3, lr
 801b424:	d38f      	bcc.n	801b346 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b426:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b42a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b42c:	fa1f f188 	uxth.w	r1, r8
 801b430:	1a64      	subs	r4, r4, r1
 801b432:	881b      	ldrh	r3, [r3, #0]
 801b434:	b2a4      	uxth	r4, r4
 801b436:	2c00      	cmp	r4, #0
 801b438:	eba3 0308 	sub.w	r3, r3, r8
 801b43c:	bf18      	it	ne
 801b43e:	2100      	movne	r1, #0
 801b440:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b444:	e77f      	b.n	801b346 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b446:	4b04      	ldr	r3, [pc, #16]	; (801b458 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b448:	6818      	ldr	r0, [r3, #0]
 801b44a:	6803      	ldr	r3, [r0, #0]
 801b44c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b44e:	4798      	blx	r3
 801b450:	b00f      	add	sp, #60	; 0x3c
 801b452:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b456:	bf00      	nop
 801b458:	2000ef1c 	.word	0x2000ef1c
 801b45c:	2000ef16 	.word	0x2000ef16

0801b460 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b464:	b09f      	sub	sp, #124	; 0x7c
 801b466:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b46a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b46e:	9209      	str	r2, [sp, #36]	; 0x24
 801b470:	461d      	mov	r5, r3
 801b472:	4604      	mov	r4, r0
 801b474:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b476:	2a00      	cmp	r2, #0
 801b478:	f000 81eb 	beq.w	801b852 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b47c:	6828      	ldr	r0, [r5, #0]
 801b47e:	6869      	ldr	r1, [r5, #4]
 801b480:	aa1a      	add	r2, sp, #104	; 0x68
 801b482:	c203      	stmia	r2!, {r0, r1}
 801b484:	6818      	ldr	r0, [r3, #0]
 801b486:	6859      	ldr	r1, [r3, #4]
 801b488:	aa1c      	add	r2, sp, #112	; 0x70
 801b48a:	c203      	stmia	r2!, {r0, r1}
 801b48c:	a81a      	add	r0, sp, #104	; 0x68
 801b48e:	f7f9 f9ff 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b492:	4629      	mov	r1, r5
 801b494:	a81c      	add	r0, sp, #112	; 0x70
 801b496:	f7f9 fa3f 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b49a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b49e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b4a2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b4a6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b4aa:	bfd7      	itett	le
 801b4ac:	b29a      	uxthle	r2, r3
 801b4ae:	2201      	movgt	r2, #1
 801b4b0:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b4b4:	fb91 f2f2 	sdivle	r2, r1, r2
 801b4b8:	9202      	str	r2, [sp, #8]
 801b4ba:	9802      	ldr	r0, [sp, #8]
 801b4bc:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b4c0:	fb92 f0f0 	sdiv	r0, r2, r0
 801b4c4:	b280      	uxth	r0, r0
 801b4c6:	9010      	str	r0, [sp, #64]	; 0x40
 801b4c8:	9902      	ldr	r1, [sp, #8]
 801b4ca:	9802      	ldr	r0, [sp, #8]
 801b4cc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b4ce:	4488      	add	r8, r1
 801b4d0:	fb05 2510 	mls	r5, r5, r0, r2
 801b4d4:	fb15 f503 	smulbb	r5, r5, r3
 801b4d8:	f108 38ff 	add.w	r8, r8, #4294967295
 801b4dc:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b4e0:	fb98 f8f1 	sdiv	r8, r8, r1
 801b4e4:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b4e8:	440d      	add	r5, r1
 801b4ea:	4419      	add	r1, r3
 801b4ec:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b4f0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b4f4:	441a      	add	r2, r3
 801b4f6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b4fa:	9304      	str	r3, [sp, #16]
 801b4fc:	4b95      	ldr	r3, [pc, #596]	; (801b754 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b4fe:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b502:	6818      	ldr	r0, [r3, #0]
 801b504:	6803      	ldr	r3, [r0, #0]
 801b506:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b508:	4798      	blx	r3
 801b50a:	4b93      	ldr	r3, [pc, #588]	; (801b758 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b50c:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b510:	881a      	ldrh	r2, [r3, #0]
 801b512:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b516:	9318      	str	r3, [sp, #96]	; 0x60
 801b518:	fb02 7101 	mla	r1, r2, r1, r7
 801b51c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b520:	4356      	muls	r6, r2
 801b522:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b526:	f108 0801 	add.w	r8, r8, #1
 801b52a:	920a      	str	r2, [sp, #40]	; 0x28
 801b52c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b52e:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b532:	930f      	str	r3, [sp, #60]	; 0x3c
 801b534:	fa1f f888 	uxth.w	r8, r8
 801b538:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b53c:	f108 0204 	add.w	r2, r8, #4
 801b540:	9211      	str	r2, [sp, #68]	; 0x44
 801b542:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b544:	4b85      	ldr	r3, [pc, #532]	; (801b75c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b546:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b54a:	b2ad      	uxth	r5, r5
 801b54c:	9215      	str	r2, [sp, #84]	; 0x54
 801b54e:	2d00      	cmp	r5, #0
 801b550:	9a04      	ldr	r2, [sp, #16]
 801b552:	f04f 0100 	mov.w	r1, #0
 801b556:	bf18      	it	ne
 801b558:	2200      	movne	r2, #0
 801b55a:	1b1b      	subs	r3, r3, r4
 801b55c:	b292      	uxth	r2, r2
 801b55e:	910d      	str	r1, [sp, #52]	; 0x34
 801b560:	9319      	str	r3, [sp, #100]	; 0x64
 801b562:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b564:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b566:	fa11 f383 	uxtah	r3, r1, r3
 801b56a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b56c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b570:	3304      	adds	r3, #4
 801b572:	9306      	str	r3, [sp, #24]
 801b574:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b576:	4283      	cmp	r3, r0
 801b578:	f240 8166 	bls.w	801b848 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b57c:	9902      	ldr	r1, [sp, #8]
 801b57e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b582:	fbb5 f3f3 	udiv	r3, r5, r3
 801b586:	1acb      	subs	r3, r1, r3
 801b588:	b29b      	uxth	r3, r3
 801b58a:	9316      	str	r3, [sp, #88]	; 0x58
 801b58c:	9b06      	ldr	r3, [sp, #24]
 801b58e:	9e06      	ldr	r6, [sp, #24]
 801b590:	7859      	ldrb	r1, [r3, #1]
 801b592:	789b      	ldrb	r3, [r3, #2]
 801b594:	7836      	ldrb	r6, [r6, #0]
 801b596:	9612      	str	r6, [sp, #72]	; 0x48
 801b598:	021b      	lsls	r3, r3, #8
 801b59a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b59e:	9906      	ldr	r1, [sp, #24]
 801b5a0:	78c9      	ldrb	r1, [r1, #3]
 801b5a2:	430b      	orrs	r3, r1
 801b5a4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b5a6:	3601      	adds	r6, #1
 801b5a8:	4419      	add	r1, r3
 801b5aa:	9605      	str	r6, [sp, #20]
 801b5ac:	1c4e      	adds	r6, r1, #1
 801b5ae:	9603      	str	r6, [sp, #12]
 801b5b0:	7849      	ldrb	r1, [r1, #1]
 801b5b2:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b5b4:	0209      	lsls	r1, r1, #8
 801b5b6:	5cf3      	ldrb	r3, [r6, r3]
 801b5b8:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b5bc:	4319      	orrs	r1, r3
 801b5be:	b28b      	uxth	r3, r1
 801b5c0:	930c      	str	r3, [sp, #48]	; 0x30
 801b5c2:	2300      	movs	r3, #0
 801b5c4:	f04f 0a01 	mov.w	sl, #1
 801b5c8:	9307      	str	r3, [sp, #28]
 801b5ca:	469c      	mov	ip, r3
 801b5cc:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b5d0:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b5d4:	46d3      	mov	fp, sl
 801b5d6:	4657      	mov	r7, sl
 801b5d8:	930e      	str	r3, [sp, #56]	; 0x38
 801b5da:	2d00      	cmp	r5, #0
 801b5dc:	d07e      	beq.n	801b6dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b5de:	42af      	cmp	r7, r5
 801b5e0:	d26e      	bcs.n	801b6c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b5e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b5e4:	9201      	str	r2, [sp, #4]
 801b5e6:	1bed      	subs	r5, r5, r7
 801b5e8:	4283      	cmp	r3, r0
 801b5ea:	b2ad      	uxth	r5, r5
 801b5ec:	d802      	bhi.n	801b5f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b5ee:	e073      	b.n	801b6d8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b5f0:	2b00      	cmp	r3, #0
 801b5f2:	d15f      	bne.n	801b6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b5f4:	9b03      	ldr	r3, [sp, #12]
 801b5f6:	785b      	ldrb	r3, [r3, #1]
 801b5f8:	f1cb 0207 	rsb	r2, fp, #7
 801b5fc:	4093      	lsls	r3, r2
 801b5fe:	005b      	lsls	r3, r3, #1
 801b600:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b604:	9b03      	ldr	r3, [sp, #12]
 801b606:	781b      	ldrb	r3, [r3, #0]
 801b608:	fa43 f30b 	asr.w	r3, r3, fp
 801b60c:	b2db      	uxtb	r3, r3
 801b60e:	4313      	orrs	r3, r2
 801b610:	f10b 0201 	add.w	r2, fp, #1
 801b614:	fa5f fb82 	uxtb.w	fp, r2
 801b618:	9a03      	ldr	r2, [sp, #12]
 801b61a:	f1bb 0f08 	cmp.w	fp, #8
 801b61e:	bf15      	itete	ne
 801b620:	3201      	addne	r2, #1
 801b622:	3202      	addeq	r2, #2
 801b624:	9203      	strne	r2, [sp, #12]
 801b626:	9203      	streq	r2, [sp, #12]
 801b628:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b62a:	b29f      	uxth	r7, r3
 801b62c:	bf08      	it	eq
 801b62e:	f04f 0b00 	moveq.w	fp, #0
 801b632:	42ba      	cmp	r2, r7
 801b634:	d309      	bcc.n	801b64a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b636:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b63a:	2301      	movs	r3, #1
 801b63c:	9a05      	ldr	r2, [sp, #20]
 801b63e:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b642:	d30e      	bcc.n	801b662 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b644:	469a      	mov	sl, r3
 801b646:	2600      	movs	r6, #0
 801b648:	e035      	b.n	801b6b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b64a:	9b05      	ldr	r3, [sp, #20]
 801b64c:	429f      	cmp	r7, r3
 801b64e:	d318      	bcc.n	801b682 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b650:	eb04 030a 	add.w	r3, r4, sl
 801b654:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b658:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b65c:	f10a 0301 	add.w	r3, sl, #1
 801b660:	b29b      	uxth	r3, r3
 801b662:	9a05      	ldr	r2, [sp, #20]
 801b664:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b668:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b66a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b66e:	7116      	strb	r6, [r2, #4]
 801b670:	f10a 0601 	add.w	r6, sl, #1
 801b674:	80d1      	strh	r1, [r2, #6]
 801b676:	7156      	strb	r6, [r2, #5]
 801b678:	9a05      	ldr	r2, [sp, #20]
 801b67a:	3201      	adds	r2, #1
 801b67c:	b292      	uxth	r2, r2
 801b67e:	9205      	str	r2, [sp, #20]
 801b680:	e7e0      	b.n	801b644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b682:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b686:	463a      	mov	r2, r7
 801b688:	795b      	ldrb	r3, [r3, #5]
 801b68a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b68e:	4426      	add	r6, r4
 801b690:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b692:	eb01 0c06 	add.w	ip, r1, r6
 801b696:	f1bc 0f00 	cmp.w	ip, #0
 801b69a:	dd07      	ble.n	801b6ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b69c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b6a0:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b6a4:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b6a8:	88d2      	ldrh	r2, [r2, #6]
 801b6aa:	e7f1      	b.n	801b690 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b6ac:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b6b0:	b29b      	uxth	r3, r3
 801b6b2:	e7c3      	b.n	801b63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b6b4:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b6b6:	970c      	str	r7, [sp, #48]	; 0x30
 801b6b8:	9a01      	ldr	r2, [sp, #4]
 801b6ba:	46b4      	mov	ip, r6
 801b6bc:	461f      	mov	r7, r3
 801b6be:	e78c      	b.n	801b5da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b6c0:	1b7b      	subs	r3, r7, r5
 801b6c2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b6c6:	9201      	str	r2, [sp, #4]
 801b6c8:	eb0c 0605 	add.w	r6, ip, r5
 801b6cc:	b29b      	uxth	r3, r3
 801b6ce:	b2b6      	uxth	r6, r6
 801b6d0:	2500      	movs	r5, #0
 801b6d2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b6d4:	4282      	cmp	r2, r0
 801b6d6:	d88b      	bhi.n	801b5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b6d8:	9a01      	ldr	r2, [sp, #4]
 801b6da:	e74b      	b.n	801b574 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b6dc:	4297      	cmp	r7, r2
 801b6de:	d332      	bcc.n	801b746 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b6e0:	1abb      	subs	r3, r7, r2
 801b6e2:	b29b      	uxth	r3, r3
 801b6e4:	9208      	str	r2, [sp, #32]
 801b6e6:	9501      	str	r5, [sp, #4]
 801b6e8:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b6ea:	29ff      	cmp	r1, #255	; 0xff
 801b6ec:	9908      	ldr	r1, [sp, #32]
 801b6ee:	eb0c 0601 	add.w	r6, ip, r1
 801b6f2:	d135      	bne.n	801b760 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b6f4:	f1a0 0e02 	sub.w	lr, r0, #2
 801b6f8:	b2b6      	uxth	r6, r6
 801b6fa:	45b4      	cmp	ip, r6
 801b6fc:	f040 808c 	bne.w	801b818 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b700:	9908      	ldr	r1, [sp, #32]
 801b702:	4297      	cmp	r7, r2
 801b704:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b708:	d3e2      	bcc.n	801b6d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b70a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b70c:	9904      	ldr	r1, [sp, #16]
 801b70e:	8812      	ldrh	r2, [r2, #0]
 801b710:	1a52      	subs	r2, r2, r1
 801b712:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b716:	9a07      	ldr	r2, [sp, #28]
 801b718:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b71a:	3201      	adds	r2, #1
 801b71c:	428a      	cmp	r2, r1
 801b71e:	9207      	str	r2, [sp, #28]
 801b720:	f040 8087 	bne.w	801b832 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b724:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b728:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b72c:	9b04      	ldr	r3, [sp, #16]
 801b72e:	1bed      	subs	r5, r5, r7
 801b730:	b2ad      	uxth	r5, r5
 801b732:	2d00      	cmp	r5, #0
 801b734:	bf08      	it	eq
 801b736:	461a      	moveq	r2, r3
 801b738:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b73a:	bf18      	it	ne
 801b73c:	2200      	movne	r2, #0
 801b73e:	3301      	adds	r3, #1
 801b740:	930d      	str	r3, [sp, #52]	; 0x34
 801b742:	b292      	uxth	r2, r2
 801b744:	e70d      	b.n	801b562 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b746:	1bd1      	subs	r1, r2, r7
 801b748:	b28b      	uxth	r3, r1
 801b74a:	9301      	str	r3, [sp, #4]
 801b74c:	9708      	str	r7, [sp, #32]
 801b74e:	462b      	mov	r3, r5
 801b750:	e7ca      	b.n	801b6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b752:	bf00      	nop
 801b754:	2000ef1c 	.word	0x2000ef1c
 801b758:	2000ef16 	.word	0x2000ef16
 801b75c:	fffff7fb 	.word	0xfffff7fb
 801b760:	b2b6      	uxth	r6, r6
 801b762:	900b      	str	r0, [sp, #44]	; 0x2c
 801b764:	45b4      	cmp	ip, r6
 801b766:	d0cb      	beq.n	801b700 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b768:	f10c 0101 	add.w	r1, ip, #1
 801b76c:	44a4      	add	ip, r4
 801b76e:	9117      	str	r1, [sp, #92]	; 0x5c
 801b770:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b774:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b776:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b77a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b77c:	f8b1 c000 	ldrh.w	ip, [r1]
 801b780:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b782:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b786:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801b78a:	fb1e fe01 	smulbb	lr, lr, r1
 801b78e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b792:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b794:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801b798:	fb08 e801 	mla	r8, r8, r1, lr
 801b79c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b7a0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b7a2:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801b7a6:	fb19 f901 	smulbb	r9, r9, r1
 801b7aa:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b7ae:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b7b0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801b7b4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b7b8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b7bc:	990e      	ldr	r1, [sp, #56]	; 0x38
 801b7be:	fa5f fc8c 	uxtb.w	ip, ip
 801b7c2:	fb1c fc01 	smulbb	ip, ip, r1
 801b7c6:	00ed      	lsls	r5, r5, #3
 801b7c8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801b7ca:	b2ed      	uxtb	r5, r5
 801b7cc:	fb05 c501 	mla	r5, r5, r1, ip
 801b7d0:	fa1f f888 	uxth.w	r8, r8
 801b7d4:	fa1f fe8e 	uxth.w	lr, lr
 801b7d8:	b2ad      	uxth	r5, r5
 801b7da:	f108 0c01 	add.w	ip, r8, #1
 801b7de:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b7e2:	f10e 0901 	add.w	r9, lr, #1
 801b7e6:	f105 0c01 	add.w	ip, r5, #1
 801b7ea:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b7ee:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b7f2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b7f6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801b7fa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b7fe:	ea4c 0808 	orr.w	r8, ip, r8
 801b802:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801b804:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801b808:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801b80c:	ea48 0809 	orr.w	r8, r8, r9
 801b810:	f821 8b02 	strh.w	r8, [r1], #2
 801b814:	910b      	str	r1, [sp, #44]	; 0x2c
 801b816:	e7a5      	b.n	801b764 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b818:	f10c 0801 	add.w	r8, ip, #1
 801b81c:	44a4      	add	ip, r4
 801b81e:	9911      	ldr	r1, [sp, #68]	; 0x44
 801b820:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801b824:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b828:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b82c:	fa1f fc88 	uxth.w	ip, r8
 801b830:	e763      	b.n	801b6fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b832:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b836:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801b83a:	1aad      	subs	r5, r5, r2
 801b83c:	b2ad      	uxth	r5, r5
 801b83e:	2d00      	cmp	r5, #0
 801b840:	bf18      	it	ne
 801b842:	2200      	movne	r2, #0
 801b844:	9201      	str	r2, [sp, #4]
 801b846:	e744      	b.n	801b6d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b848:	4b03      	ldr	r3, [pc, #12]	; (801b858 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b84a:	6818      	ldr	r0, [r3, #0]
 801b84c:	6803      	ldr	r3, [r0, #0]
 801b84e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b850:	4798      	blx	r3
 801b852:	b01f      	add	sp, #124	; 0x7c
 801b854:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b858:	2000ef1c 	.word	0x2000ef1c

0801b85c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b860:	b08f      	sub	sp, #60	; 0x3c
 801b862:	461c      	mov	r4, r3
 801b864:	9203      	str	r2, [sp, #12]
 801b866:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b86a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b86c:	9202      	str	r2, [sp, #8]
 801b86e:	460f      	mov	r7, r1
 801b870:	2a00      	cmp	r2, #0
 801b872:	f000 8128 	beq.w	801bac6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b876:	6820      	ldr	r0, [r4, #0]
 801b878:	6861      	ldr	r1, [r4, #4]
 801b87a:	aa0a      	add	r2, sp, #40	; 0x28
 801b87c:	c203      	stmia	r2!, {r0, r1}
 801b87e:	6818      	ldr	r0, [r3, #0]
 801b880:	6859      	ldr	r1, [r3, #4]
 801b882:	aa0c      	add	r2, sp, #48	; 0x30
 801b884:	c203      	stmia	r2!, {r0, r1}
 801b886:	a80a      	add	r0, sp, #40	; 0x28
 801b888:	f7f9 f802 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b88c:	4621      	mov	r1, r4
 801b88e:	a80c      	add	r0, sp, #48	; 0x30
 801b890:	f7f9 f842 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b894:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b898:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b89c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b8a0:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b8a4:	bfde      	ittt	le
 801b8a6:	b2b3      	uxthle	r3, r6
 801b8a8:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b8ac:	fb92 f3f3 	sdivle	r3, r2, r3
 801b8b0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b8b4:	bfc8      	it	gt
 801b8b6:	2301      	movgt	r3, #1
 801b8b8:	fb92 f1f3 	sdiv	r1, r2, r3
 801b8bc:	fa1f fc81 	uxth.w	ip, r1
 801b8c0:	fb0c 2413 	mls	r4, ip, r3, r2
 801b8c4:	fb14 f406 	smulbb	r4, r4, r6
 801b8c8:	441d      	add	r5, r3
 801b8ca:	4404      	add	r4, r0
 801b8cc:	4661      	mov	r1, ip
 801b8ce:	3d01      	subs	r5, #1
 801b8d0:	b2a4      	uxth	r4, r4
 801b8d2:	fb95 f5f3 	sdiv	r5, r5, r3
 801b8d6:	b121      	cbz	r1, 801b8e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b8d8:	9b03      	ldr	r3, [sp, #12]
 801b8da:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b8de:	ba1b      	rev	r3, r3
 801b8e0:	441f      	add	r7, r3
 801b8e2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b8e6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801b8ea:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b8ee:	4418      	add	r0, r3
 801b8f0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b8f4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b8f8:	441a      	add	r2, r3
 801b8fa:	4b74      	ldr	r3, [pc, #464]	; (801bacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b8fc:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b900:	6818      	ldr	r0, [r3, #0]
 801b902:	6803      	ldr	r3, [r0, #0]
 801b904:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b906:	4798      	blx	r3
 801b908:	4a71      	ldr	r2, [pc, #452]	; (801bad0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b90a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801b90e:	8813      	ldrh	r3, [r2, #0]
 801b910:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b914:	9209      	str	r2, [sp, #36]	; 0x24
 801b916:	fb03 c101 	mla	r1, r3, r1, ip
 801b91a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b91e:	4373      	muls	r3, r6
 801b920:	b2ad      	uxth	r5, r5
 801b922:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b926:	00ad      	lsls	r5, r5, #2
 801b928:	2c00      	cmp	r4, #0
 801b92a:	9304      	str	r3, [sp, #16]
 801b92c:	f105 0304 	add.w	r3, r5, #4
 801b930:	9305      	str	r3, [sp, #20]
 801b932:	bf0c      	ite	eq
 801b934:	46c8      	moveq	r8, r9
 801b936:	f04f 0800 	movne.w	r8, #0
 801b93a:	2300      	movs	r3, #0
 801b93c:	fa1f f888 	uxth.w	r8, r8
 801b940:	9301      	str	r3, [sp, #4]
 801b942:	9a04      	ldr	r2, [sp, #16]
 801b944:	4282      	cmp	r2, r0
 801b946:	f240 80b9 	bls.w	801babc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b94a:	b95b      	cbnz	r3, 801b964 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b94c:	783a      	ldrb	r2, [r7, #0]
 801b94e:	0993      	lsrs	r3, r2, #6
 801b950:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b954:	9201      	str	r2, [sp, #4]
 801b956:	1e5a      	subs	r2, r3, #1
 801b958:	2a02      	cmp	r2, #2
 801b95a:	bf8d      	iteet	hi
 801b95c:	787b      	ldrbhi	r3, [r7, #1]
 801b95e:	3701      	addls	r7, #1
 801b960:	b29b      	uxthls	r3, r3
 801b962:	3702      	addhi	r7, #2
 801b964:	b184      	cbz	r4, 801b988 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b966:	429c      	cmp	r4, r3
 801b968:	bf95      	itete	ls
 801b96a:	1b1c      	subls	r4, r3, r4
 801b96c:	1ae4      	subhi	r4, r4, r3
 801b96e:	fa1f fa84 	uxthls.w	sl, r4
 801b972:	b2a4      	uxthhi	r4, r4
 801b974:	bf87      	ittee	hi
 801b976:	46c4      	movhi	ip, r8
 801b978:	f04f 0a00 	movhi.w	sl, #0
 801b97c:	fa1f fc89 	uxthls.w	ip, r9
 801b980:	2400      	movls	r4, #0
 801b982:	4653      	mov	r3, sl
 801b984:	46e0      	mov	r8, ip
 801b986:	e7dc      	b.n	801b942 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b988:	2204      	movs	r2, #4
 801b98a:	4615      	mov	r5, r2
 801b98c:	9905      	ldr	r1, [sp, #20]
 801b98e:	9a01      	ldr	r2, [sp, #4]
 801b990:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b994:	9903      	ldr	r1, [sp, #12]
 801b996:	588a      	ldr	r2, [r1, r2]
 801b998:	4543      	cmp	r3, r8
 801b99a:	bf27      	ittee	cs
 801b99c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b9a0:	46c6      	movcs	lr, r8
 801b9a2:	eba8 0c03 	subcc.w	ip, r8, r3
 801b9a6:	469e      	movcc	lr, r3
 801b9a8:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b9ac:	bf27      	ittee	cs
 801b9ae:	fa1f fa8a 	uxthcs.w	sl, sl
 801b9b2:	46a4      	movcs	ip, r4
 801b9b4:	fa1f fc8c 	uxthcc.w	ip, ip
 801b9b8:	46a2      	movcc	sl, r4
 801b9ba:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b9be:	2900      	cmp	r1, #0
 801b9c0:	d066      	beq.n	801ba90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b9c2:	29ff      	cmp	r1, #255	; 0xff
 801b9c4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b9c8:	d114      	bne.n	801b9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b9ca:	9d02      	ldr	r5, [sp, #8]
 801b9cc:	2dff      	cmp	r5, #255	; 0xff
 801b9ce:	d111      	bne.n	801b9f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b9d0:	0951      	lsrs	r1, r2, #5
 801b9d2:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801b9d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801b9da:	f026 0607 	bic.w	r6, r6, #7
 801b9de:	430e      	orrs	r6, r1
 801b9e0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b9e4:	4316      	orrs	r6, r2
 801b9e6:	b2b6      	uxth	r6, r6
 801b9e8:	4486      	add	lr, r0
 801b9ea:	4586      	cmp	lr, r0
 801b9ec:	d051      	beq.n	801ba92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b9ee:	f820 6b02 	strh.w	r6, [r0], #2
 801b9f2:	e7fa      	b.n	801b9ea <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b9f4:	9d02      	ldr	r5, [sp, #8]
 801b9f6:	4369      	muls	r1, r5
 801b9f8:	1c4d      	adds	r5, r1, #1
 801b9fa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b9fe:	122d      	asrs	r5, r5, #8
 801ba00:	ea6f 0b05 	mvn.w	fp, r5
 801ba04:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801ba08:	b2ad      	uxth	r5, r5
 801ba0a:	b2f6      	uxtb	r6, r6
 801ba0c:	b2d2      	uxtb	r2, r2
 801ba0e:	fb11 f105 	smulbb	r1, r1, r5
 801ba12:	fb16 f605 	smulbb	r6, r6, r5
 801ba16:	fb12 f205 	smulbb	r2, r2, r5
 801ba1a:	b289      	uxth	r1, r1
 801ba1c:	b2b6      	uxth	r6, r6
 801ba1e:	b292      	uxth	r2, r2
 801ba20:	9106      	str	r1, [sp, #24]
 801ba22:	9607      	str	r6, [sp, #28]
 801ba24:	9208      	str	r2, [sp, #32]
 801ba26:	4486      	add	lr, r0
 801ba28:	fa5f fb8b 	uxtb.w	fp, fp
 801ba2c:	4586      	cmp	lr, r0
 801ba2e:	d030      	beq.n	801ba92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801ba30:	8802      	ldrh	r2, [r0, #0]
 801ba32:	9906      	ldr	r1, [sp, #24]
 801ba34:	1216      	asrs	r6, r2, #8
 801ba36:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801ba3a:	10d5      	asrs	r5, r2, #3
 801ba3c:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ba40:	fb06 160b 	mla	r6, r6, fp, r1
 801ba44:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801ba48:	9907      	ldr	r1, [sp, #28]
 801ba4a:	00d2      	lsls	r2, r2, #3
 801ba4c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801ba50:	fb05 150b 	mla	r5, r5, fp, r1
 801ba54:	b2d2      	uxtb	r2, r2
 801ba56:	9908      	ldr	r1, [sp, #32]
 801ba58:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801ba5c:	b2b6      	uxth	r6, r6
 801ba5e:	fb02 120b 	mla	r2, r2, fp, r1
 801ba62:	b292      	uxth	r2, r2
 801ba64:	1c71      	adds	r1, r6, #1
 801ba66:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801ba6a:	1c51      	adds	r1, r2, #1
 801ba6c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ba70:	b2ad      	uxth	r5, r5
 801ba72:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ba76:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801ba7a:	4316      	orrs	r6, r2
 801ba7c:	1c6a      	adds	r2, r5, #1
 801ba7e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ba82:	096d      	lsrs	r5, r5, #5
 801ba84:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ba88:	432e      	orrs	r6, r5
 801ba8a:	f820 6b02 	strh.w	r6, [r0], #2
 801ba8e:	e7cd      	b.n	801ba2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ba90:	4470      	add	r0, lr
 801ba92:	4543      	cmp	r3, r8
 801ba94:	f4ff af75 	bcc.w	801b982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ba98:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801ba9c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba9e:	fa1f fc89 	uxth.w	ip, r9
 801baa2:	eba4 040c 	sub.w	r4, r4, ip
 801baa6:	881b      	ldrh	r3, [r3, #0]
 801baa8:	b2a4      	uxth	r4, r4
 801baaa:	2c00      	cmp	r4, #0
 801baac:	eba3 0309 	sub.w	r3, r3, r9
 801bab0:	bf18      	it	ne
 801bab2:	f04f 0c00 	movne.w	ip, #0
 801bab6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801baba:	e762      	b.n	801b982 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801babc:	4b03      	ldr	r3, [pc, #12]	; (801bacc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801babe:	6818      	ldr	r0, [r3, #0]
 801bac0:	6803      	ldr	r3, [r0, #0]
 801bac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bac4:	4798      	blx	r3
 801bac6:	b00f      	add	sp, #60	; 0x3c
 801bac8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bacc:	2000ef1c 	.word	0x2000ef1c
 801bad0:	2000ef16 	.word	0x2000ef16

0801bad4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bad4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bad8:	b093      	sub	sp, #76	; 0x4c
 801bada:	461c      	mov	r4, r3
 801badc:	9205      	str	r2, [sp, #20]
 801bade:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bae2:	9101      	str	r1, [sp, #4]
 801bae4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bae6:	9202      	str	r2, [sp, #8]
 801bae8:	2a00      	cmp	r2, #0
 801baea:	f000 812c 	beq.w	801bd46 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801baee:	6820      	ldr	r0, [r4, #0]
 801baf0:	6861      	ldr	r1, [r4, #4]
 801baf2:	aa0e      	add	r2, sp, #56	; 0x38
 801baf4:	c203      	stmia	r2!, {r0, r1}
 801baf6:	6818      	ldr	r0, [r3, #0]
 801baf8:	6859      	ldr	r1, [r3, #4]
 801bafa:	aa10      	add	r2, sp, #64	; 0x40
 801bafc:	c203      	stmia	r2!, {r0, r1}
 801bafe:	a80e      	add	r0, sp, #56	; 0x38
 801bb00:	f7f8 fec6 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb04:	4621      	mov	r1, r4
 801bb06:	a810      	add	r0, sp, #64	; 0x40
 801bb08:	f7f8 ff06 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb0c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bb10:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bb14:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bb18:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bb1c:	bfde      	ittt	le
 801bb1e:	b2b3      	uxthle	r3, r6
 801bb20:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bb24:	fb92 f3f3 	sdivle	r3, r2, r3
 801bb28:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bb2c:	bfc8      	it	gt
 801bb2e:	2301      	movgt	r3, #1
 801bb30:	fb92 f1f3 	sdiv	r1, r2, r3
 801bb34:	fa1f fc81 	uxth.w	ip, r1
 801bb38:	fb0c 2413 	mls	r4, ip, r3, r2
 801bb3c:	fb14 f406 	smulbb	r4, r4, r6
 801bb40:	441d      	add	r5, r3
 801bb42:	4404      	add	r4, r0
 801bb44:	4661      	mov	r1, ip
 801bb46:	3d01      	subs	r5, #1
 801bb48:	b2a4      	uxth	r4, r4
 801bb4a:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb4e:	b131      	cbz	r1, 801bb5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bb50:	9b05      	ldr	r3, [sp, #20]
 801bb52:	9901      	ldr	r1, [sp, #4]
 801bb54:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb58:	ba1b      	rev	r3, r3
 801bb5a:	4419      	add	r1, r3
 801bb5c:	9101      	str	r1, [sp, #4]
 801bb5e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801bb62:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801bb66:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801bb6a:	4418      	add	r0, r3
 801bb6c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801bb70:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801bb74:	441a      	add	r2, r3
 801bb76:	4b75      	ldr	r3, [pc, #468]	; (801bd4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bb78:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801bb7c:	6818      	ldr	r0, [r3, #0]
 801bb7e:	6803      	ldr	r3, [r0, #0]
 801bb80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bb82:	4798      	blx	r3
 801bb84:	4972      	ldr	r1, [pc, #456]	; (801bd50 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bb86:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801bb8a:	880b      	ldrh	r3, [r1, #0]
 801bb8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bb90:	910d      	str	r1, [sp, #52]	; 0x34
 801bb92:	fb03 c202 	mla	r2, r3, r2, ip
 801bb96:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb9a:	4373      	muls	r3, r6
 801bb9c:	b2ad      	uxth	r5, r5
 801bb9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bba2:	00ad      	lsls	r5, r5, #2
 801bba4:	9308      	str	r3, [sp, #32]
 801bba6:	1d2b      	adds	r3, r5, #4
 801bba8:	9309      	str	r3, [sp, #36]	; 0x24
 801bbaa:	9b02      	ldr	r3, [sp, #8]
 801bbac:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bbb0:	9106      	str	r1, [sp, #24]
 801bbb2:	43da      	mvns	r2, r3
 801bbb4:	2c00      	cmp	r4, #0
 801bbb6:	bf0c      	ite	eq
 801bbb8:	46dc      	moveq	ip, fp
 801bbba:	f04f 0c00 	movne.w	ip, #0
 801bbbe:	2300      	movs	r3, #0
 801bbc0:	b2d2      	uxtb	r2, r2
 801bbc2:	fa1f fc8c 	uxth.w	ip, ip
 801bbc6:	9303      	str	r3, [sp, #12]
 801bbc8:	9207      	str	r2, [sp, #28]
 801bbca:	9a08      	ldr	r2, [sp, #32]
 801bbcc:	4282      	cmp	r2, r0
 801bbce:	f240 80b5 	bls.w	801bd3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bbd2:	b963      	cbnz	r3, 801bbee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bbd4:	9b01      	ldr	r3, [sp, #4]
 801bbd6:	781a      	ldrb	r2, [r3, #0]
 801bbd8:	0993      	lsrs	r3, r2, #6
 801bbda:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bbde:	9203      	str	r2, [sp, #12]
 801bbe0:	1e5a      	subs	r2, r3, #1
 801bbe2:	2a02      	cmp	r2, #2
 801bbe4:	d815      	bhi.n	801bc12 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bbe6:	9a01      	ldr	r2, [sp, #4]
 801bbe8:	3201      	adds	r2, #1
 801bbea:	9201      	str	r2, [sp, #4]
 801bbec:	b29b      	uxth	r3, r3
 801bbee:	b1b4      	cbz	r4, 801bc1e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bbf0:	429c      	cmp	r4, r3
 801bbf2:	bf95      	itete	ls
 801bbf4:	1b1c      	subls	r4, r3, r4
 801bbf6:	1ae4      	subhi	r4, r4, r3
 801bbf8:	fa1f f884 	uxthls.w	r8, r4
 801bbfc:	b2a4      	uxthhi	r4, r4
 801bbfe:	bf87      	ittee	hi
 801bc00:	4666      	movhi	r6, ip
 801bc02:	f04f 0800 	movhi.w	r8, #0
 801bc06:	fa1f f68b 	uxthls.w	r6, fp
 801bc0a:	2400      	movls	r4, #0
 801bc0c:	4643      	mov	r3, r8
 801bc0e:	46b4      	mov	ip, r6
 801bc10:	e7db      	b.n	801bbca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bc12:	9a01      	ldr	r2, [sp, #4]
 801bc14:	9b01      	ldr	r3, [sp, #4]
 801bc16:	3202      	adds	r2, #2
 801bc18:	785b      	ldrb	r3, [r3, #1]
 801bc1a:	9201      	str	r2, [sp, #4]
 801bc1c:	e7e7      	b.n	801bbee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bc1e:	2203      	movs	r2, #3
 801bc20:	4615      	mov	r5, r2
 801bc22:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bc24:	9a03      	ldr	r2, [sp, #12]
 801bc26:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bc2a:	9905      	ldr	r1, [sp, #20]
 801bc2c:	4563      	cmp	r3, ip
 801bc2e:	eb01 0502 	add.w	r5, r1, r2
 801bc32:	9902      	ldr	r1, [sp, #8]
 801bc34:	bf29      	itett	cs
 801bc36:	eba3 080c 	subcs.w	r8, r3, ip
 801bc3a:	ebac 0603 	subcc.w	r6, ip, r3
 801bc3e:	fa1f f888 	uxthcs.w	r8, r8
 801bc42:	46e1      	movcs	r9, ip
 801bc44:	bf2f      	iteee	cs
 801bc46:	4626      	movcs	r6, r4
 801bc48:	b2b6      	uxthcc	r6, r6
 801bc4a:	4699      	movcc	r9, r3
 801bc4c:	46a0      	movcc	r8, r4
 801bc4e:	29ff      	cmp	r1, #255	; 0xff
 801bc50:	d04a      	beq.n	801bce8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bc52:	9f06      	ldr	r7, [sp, #24]
 801bc54:	78a9      	ldrb	r1, [r5, #2]
 801bc56:	9004      	str	r0, [sp, #16]
 801bc58:	4379      	muls	r1, r7
 801bc5a:	910a      	str	r1, [sp, #40]	; 0x28
 801bc5c:	7869      	ldrb	r1, [r5, #1]
 801bc5e:	4379      	muls	r1, r7
 801bc60:	910b      	str	r1, [sp, #44]	; 0x2c
 801bc62:	9905      	ldr	r1, [sp, #20]
 801bc64:	5c8a      	ldrb	r2, [r1, r2]
 801bc66:	437a      	muls	r2, r7
 801bc68:	920c      	str	r2, [sp, #48]	; 0x30
 801bc6a:	46ca      	mov	sl, r9
 801bc6c:	f1ba 0f00 	cmp.w	sl, #0
 801bc70:	d03d      	beq.n	801bcee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bc72:	9a04      	ldr	r2, [sp, #16]
 801bc74:	9f07      	ldr	r7, [sp, #28]
 801bc76:	8812      	ldrh	r2, [r2, #0]
 801bc78:	1215      	asrs	r5, r2, #8
 801bc7a:	46be      	mov	lr, r7
 801bc7c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bc80:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bc82:	10d1      	asrs	r1, r2, #3
 801bc84:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bc88:	fb05 750e 	mla	r5, r5, lr, r7
 801bc8c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bc90:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bc92:	00d2      	lsls	r2, r2, #3
 801bc94:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bc98:	fb01 710e 	mla	r1, r1, lr, r7
 801bc9c:	b2d2      	uxtb	r2, r2
 801bc9e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bca0:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bca4:	b2ad      	uxth	r5, r5
 801bca6:	fb02 720e 	mla	r2, r2, lr, r7
 801bcaa:	b292      	uxth	r2, r2
 801bcac:	f105 0e01 	add.w	lr, r5, #1
 801bcb0:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bcb4:	f102 0e01 	add.w	lr, r2, #1
 801bcb8:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bcbc:	b289      	uxth	r1, r1
 801bcbe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bcc2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bcc6:	4315      	orrs	r5, r2
 801bcc8:	1c4a      	adds	r2, r1, #1
 801bcca:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bcce:	0949      	lsrs	r1, r1, #5
 801bcd0:	9a04      	ldr	r2, [sp, #16]
 801bcd2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bcd6:	430d      	orrs	r5, r1
 801bcd8:	f822 5b02 	strh.w	r5, [r2], #2
 801bcdc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bce0:	9204      	str	r2, [sp, #16]
 801bce2:	fa1f fa8a 	uxth.w	sl, sl
 801bce6:	e7c1      	b.n	801bc6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bce8:	4649      	mov	r1, r9
 801bcea:	4686      	mov	lr, r0
 801bcec:	b999      	cbnz	r1, 801bd16 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bcee:	4563      	cmp	r3, ip
 801bcf0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bcf4:	d38a      	bcc.n	801bc0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bcf6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bcfa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bcfc:	fa1f f68b 	uxth.w	r6, fp
 801bd00:	1ba4      	subs	r4, r4, r6
 801bd02:	881b      	ldrh	r3, [r3, #0]
 801bd04:	b2a4      	uxth	r4, r4
 801bd06:	2c00      	cmp	r4, #0
 801bd08:	eba3 030b 	sub.w	r3, r3, fp
 801bd0c:	bf18      	it	ne
 801bd0e:	2600      	movne	r6, #0
 801bd10:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd14:	e77a      	b.n	801bc0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bd16:	78aa      	ldrb	r2, [r5, #2]
 801bd18:	4f0e      	ldr	r7, [pc, #56]	; (801bd54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bd1a:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bd1e:	786a      	ldrb	r2, [r5, #1]
 801bd20:	00d2      	lsls	r2, r2, #3
 801bd22:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bd26:	ea4a 0202 	orr.w	r2, sl, r2
 801bd2a:	f895 a000 	ldrb.w	sl, [r5]
 801bd2e:	3901      	subs	r1, #1
 801bd30:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bd34:	f82e 2b02 	strh.w	r2, [lr], #2
 801bd38:	b289      	uxth	r1, r1
 801bd3a:	e7d7      	b.n	801bcec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bd3c:	4b03      	ldr	r3, [pc, #12]	; (801bd4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bd3e:	6818      	ldr	r0, [r3, #0]
 801bd40:	6803      	ldr	r3, [r0, #0]
 801bd42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd44:	4798      	blx	r3
 801bd46:	b013      	add	sp, #76	; 0x4c
 801bd48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd4c:	2000ef1c 	.word	0x2000ef1c
 801bd50:	2000ef16 	.word	0x2000ef16
 801bd54:	fffff800 	.word	0xfffff800

0801bd58 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bd58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd5c:	b09d      	sub	sp, #116	; 0x74
 801bd5e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801bd62:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801bd66:	920e      	str	r2, [sp, #56]	; 0x38
 801bd68:	461c      	mov	r4, r3
 801bd6a:	4683      	mov	fp, r0
 801bd6c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801bd6e:	2a00      	cmp	r2, #0
 801bd70:	f000 81e0 	beq.w	801c134 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bd74:	6820      	ldr	r0, [r4, #0]
 801bd76:	6861      	ldr	r1, [r4, #4]
 801bd78:	aa18      	add	r2, sp, #96	; 0x60
 801bd7a:	c203      	stmia	r2!, {r0, r1}
 801bd7c:	6818      	ldr	r0, [r3, #0]
 801bd7e:	6859      	ldr	r1, [r3, #4]
 801bd80:	aa1a      	add	r2, sp, #104	; 0x68
 801bd82:	c203      	stmia	r2!, {r0, r1}
 801bd84:	a818      	add	r0, sp, #96	; 0x60
 801bd86:	f7f8 fd83 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd8a:	4621      	mov	r1, r4
 801bd8c:	a81a      	add	r0, sp, #104	; 0x68
 801bd8e:	f7f8 fdc3 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd92:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801bd96:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801bd9a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801bd9e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801bda2:	bfd7      	itett	le
 801bda4:	b29a      	uxthle	r2, r3
 801bda6:	2201      	movgt	r2, #1
 801bda8:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801bdac:	fb91 f2f2 	sdivle	r2, r1, r2
 801bdb0:	9202      	str	r2, [sp, #8]
 801bdb2:	9802      	ldr	r0, [sp, #8]
 801bdb4:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801bdb8:	fb92 f0f0 	sdiv	r0, r2, r0
 801bdbc:	b280      	uxth	r0, r0
 801bdbe:	900f      	str	r0, [sp, #60]	; 0x3c
 801bdc0:	9902      	ldr	r1, [sp, #8]
 801bdc2:	9802      	ldr	r0, [sp, #8]
 801bdc4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801bdc6:	440c      	add	r4, r1
 801bdc8:	fb05 2510 	mls	r5, r5, r0, r2
 801bdcc:	fb15 f503 	smulbb	r5, r5, r3
 801bdd0:	3c01      	subs	r4, #1
 801bdd2:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801bdd6:	fb94 f4f1 	sdiv	r4, r4, r1
 801bdda:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801bdde:	440d      	add	r5, r1
 801bde0:	4419      	add	r1, r3
 801bde2:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801bde6:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801bdea:	441a      	add	r2, r3
 801bdec:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801bdf0:	9306      	str	r3, [sp, #24]
 801bdf2:	4bb3      	ldr	r3, [pc, #716]	; (801c0c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bdf4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801bdf8:	6818      	ldr	r0, [r3, #0]
 801bdfa:	6803      	ldr	r3, [r0, #0]
 801bdfc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bdfe:	4798      	blx	r3
 801be00:	4bb0      	ldr	r3, [pc, #704]	; (801c0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801be02:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801be06:	881a      	ldrh	r2, [r3, #0]
 801be08:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801be0c:	9316      	str	r3, [sp, #88]	; 0x58
 801be0e:	fb02 7101 	mla	r1, r2, r1, r7
 801be12:	3401      	adds	r4, #1
 801be14:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801be18:	b2a4      	uxth	r4, r4
 801be1a:	4356      	muls	r6, r2
 801be1c:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801be20:	00a4      	lsls	r4, r4, #2
 801be22:	920a      	str	r2, [sp, #40]	; 0x28
 801be24:	1d22      	adds	r2, r4, #4
 801be26:	b2ad      	uxth	r5, r5
 801be28:	9213      	str	r2, [sp, #76]	; 0x4c
 801be2a:	4ba7      	ldr	r3, [pc, #668]	; (801c0c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801be2c:	9a06      	ldr	r2, [sp, #24]
 801be2e:	2d00      	cmp	r5, #0
 801be30:	bf0c      	ite	eq
 801be32:	4611      	moveq	r1, r2
 801be34:	2100      	movne	r1, #0
 801be36:	2200      	movs	r2, #0
 801be38:	eba3 030b 	sub.w	r3, r3, fp
 801be3c:	b289      	uxth	r1, r1
 801be3e:	920d      	str	r2, [sp, #52]	; 0x34
 801be40:	9317      	str	r3, [sp, #92]	; 0x5c
 801be42:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801be44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801be46:	fa12 f383 	uxtah	r3, r2, r3
 801be4a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801be4c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801be50:	3304      	adds	r3, #4
 801be52:	9308      	str	r3, [sp, #32]
 801be54:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801be56:	4543      	cmp	r3, r8
 801be58:	f240 8167 	bls.w	801c12a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801be5c:	9a02      	ldr	r2, [sp, #8]
 801be5e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801be62:	fbb5 f3f3 	udiv	r3, r5, r3
 801be66:	1ad3      	subs	r3, r2, r3
 801be68:	b29b      	uxth	r3, r3
 801be6a:	9314      	str	r3, [sp, #80]	; 0x50
 801be6c:	9b08      	ldr	r3, [sp, #32]
 801be6e:	9808      	ldr	r0, [sp, #32]
 801be70:	785a      	ldrb	r2, [r3, #1]
 801be72:	789b      	ldrb	r3, [r3, #2]
 801be74:	7800      	ldrb	r0, [r0, #0]
 801be76:	9010      	str	r0, [sp, #64]	; 0x40
 801be78:	021b      	lsls	r3, r3, #8
 801be7a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801be7e:	9a08      	ldr	r2, [sp, #32]
 801be80:	78d2      	ldrb	r2, [r2, #3]
 801be82:	4313      	orrs	r3, r2
 801be84:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801be86:	3001      	adds	r0, #1
 801be88:	441a      	add	r2, r3
 801be8a:	9007      	str	r0, [sp, #28]
 801be8c:	1c50      	adds	r0, r2, #1
 801be8e:	9005      	str	r0, [sp, #20]
 801be90:	7852      	ldrb	r2, [r2, #1]
 801be92:	9811      	ldr	r0, [sp, #68]	; 0x44
 801be94:	0212      	lsls	r2, r2, #8
 801be96:	5cc3      	ldrb	r3, [r0, r3]
 801be98:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801be9c:	431a      	orrs	r2, r3
 801be9e:	b293      	uxth	r3, r2
 801bea0:	930b      	str	r3, [sp, #44]	; 0x2c
 801bea2:	2300      	movs	r3, #0
 801bea4:	9309      	str	r3, [sp, #36]	; 0x24
 801bea6:	2301      	movs	r3, #1
 801bea8:	9301      	str	r3, [sp, #4]
 801beaa:	9304      	str	r3, [sp, #16]
 801beac:	2300      	movs	r3, #0
 801beae:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801beb2:	9303      	str	r3, [sp, #12]
 801beb4:	f04f 0e01 	mov.w	lr, #1
 801beb8:	2d00      	cmp	r5, #0
 801beba:	d07c      	beq.n	801bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801bebc:	45ae      	cmp	lr, r5
 801bebe:	d26b      	bcs.n	801bf98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801bec0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bec2:	eba5 050e 	sub.w	r5, r5, lr
 801bec6:	4543      	cmp	r3, r8
 801bec8:	b2ad      	uxth	r5, r5
 801beca:	460c      	mov	r4, r1
 801becc:	d802      	bhi.n	801bed4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801bece:	e070      	b.n	801bfb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bed0:	2b00      	cmp	r3, #0
 801bed2:	d15c      	bne.n	801bf8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bed4:	9b05      	ldr	r3, [sp, #20]
 801bed6:	9a04      	ldr	r2, [sp, #16]
 801bed8:	785b      	ldrb	r3, [r3, #1]
 801beda:	9904      	ldr	r1, [sp, #16]
 801bedc:	f1c2 0207 	rsb	r2, r2, #7
 801bee0:	4093      	lsls	r3, r2
 801bee2:	005b      	lsls	r3, r3, #1
 801bee4:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801bee8:	9b05      	ldr	r3, [sp, #20]
 801beea:	781b      	ldrb	r3, [r3, #0]
 801beec:	410b      	asrs	r3, r1
 801beee:	3101      	adds	r1, #1
 801bef0:	b2c9      	uxtb	r1, r1
 801bef2:	2908      	cmp	r1, #8
 801bef4:	9104      	str	r1, [sp, #16]
 801bef6:	9905      	ldr	r1, [sp, #20]
 801bef8:	bf0a      	itet	eq
 801befa:	3102      	addeq	r1, #2
 801befc:	3101      	addne	r1, #1
 801befe:	9105      	streq	r1, [sp, #20]
 801bf00:	b2db      	uxtb	r3, r3
 801bf02:	bf0a      	itet	eq
 801bf04:	2100      	moveq	r1, #0
 801bf06:	9105      	strne	r1, [sp, #20]
 801bf08:	9104      	streq	r1, [sp, #16]
 801bf0a:	4313      	orrs	r3, r2
 801bf0c:	9910      	ldr	r1, [sp, #64]	; 0x40
 801bf0e:	b29a      	uxth	r2, r3
 801bf10:	4291      	cmp	r1, r2
 801bf12:	d30a      	bcc.n	801bf2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bf14:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801bf18:	2301      	movs	r3, #1
 801bf1a:	9907      	ldr	r1, [sp, #28]
 801bf1c:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801bf20:	d30f      	bcc.n	801bf42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bf22:	2100      	movs	r1, #0
 801bf24:	9301      	str	r3, [sp, #4]
 801bf26:	9103      	str	r1, [sp, #12]
 801bf28:	e032      	b.n	801bf90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801bf2a:	9b07      	ldr	r3, [sp, #28]
 801bf2c:	429a      	cmp	r2, r3
 801bf2e:	d318      	bcc.n	801bf62 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bf30:	9b01      	ldr	r3, [sp, #4]
 801bf32:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801bf36:	445b      	add	r3, fp
 801bf38:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801bf3c:	9b01      	ldr	r3, [sp, #4]
 801bf3e:	3301      	adds	r3, #1
 801bf40:	b29b      	uxth	r3, r3
 801bf42:	9907      	ldr	r1, [sp, #28]
 801bf44:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801bf48:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bf4c:	7108      	strb	r0, [r1, #4]
 801bf4e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801bf50:	80c8      	strh	r0, [r1, #6]
 801bf52:	9801      	ldr	r0, [sp, #4]
 801bf54:	3001      	adds	r0, #1
 801bf56:	7148      	strb	r0, [r1, #5]
 801bf58:	9907      	ldr	r1, [sp, #28]
 801bf5a:	3101      	adds	r1, #1
 801bf5c:	b289      	uxth	r1, r1
 801bf5e:	9107      	str	r1, [sp, #28]
 801bf60:	e7df      	b.n	801bf22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bf62:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bf66:	4611      	mov	r1, r2
 801bf68:	795b      	ldrb	r3, [r3, #5]
 801bf6a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801bf6e:	4458      	add	r0, fp
 801bf70:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801bf72:	4406      	add	r6, r0
 801bf74:	2e00      	cmp	r6, #0
 801bf76:	dd06      	ble.n	801bf86 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bf78:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bf7c:	790e      	ldrb	r6, [r1, #4]
 801bf7e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bf82:	88c9      	ldrh	r1, [r1, #6]
 801bf84:	e7f4      	b.n	801bf70 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bf86:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801bf8a:	b29b      	uxth	r3, r3
 801bf8c:	e7c5      	b.n	801bf1a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bf8e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bf90:	920b      	str	r2, [sp, #44]	; 0x2c
 801bf92:	4621      	mov	r1, r4
 801bf94:	469e      	mov	lr, r3
 801bf96:	e78f      	b.n	801beb8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bf98:	9a03      	ldr	r2, [sp, #12]
 801bf9a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bf9e:	442a      	add	r2, r5
 801bfa0:	ebae 0305 	sub.w	r3, lr, r5
 801bfa4:	b292      	uxth	r2, r2
 801bfa6:	b29b      	uxth	r3, r3
 801bfa8:	9203      	str	r2, [sp, #12]
 801bfaa:	2500      	movs	r5, #0
 801bfac:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801bfae:	4542      	cmp	r2, r8
 801bfb0:	d88e      	bhi.n	801bed0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bfb2:	4621      	mov	r1, r4
 801bfb4:	e74e      	b.n	801be54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bfb6:	458e      	cmp	lr, r1
 801bfb8:	bf29      	itett	cs
 801bfba:	ebae 0301 	subcs.w	r3, lr, r1
 801bfbe:	eba1 040e 	subcc.w	r4, r1, lr
 801bfc2:	b29b      	uxthcs	r3, r3
 801bfc4:	910c      	strcs	r1, [sp, #48]	; 0x30
 801bfc6:	bf2f      	iteee	cs
 801bfc8:	462c      	movcs	r4, r5
 801bfca:	b2a4      	uxthcc	r4, r4
 801bfcc:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801bfd0:	462b      	movcc	r3, r5
 801bfd2:	f04f 0900 	mov.w	r9, #0
 801bfd6:	9a03      	ldr	r2, [sp, #12]
 801bfd8:	980c      	ldr	r0, [sp, #48]	; 0x30
 801bfda:	444a      	add	r2, r9
 801bfdc:	4548      	cmp	r0, r9
 801bfde:	b292      	uxth	r2, r2
 801bfe0:	d074      	beq.n	801c0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bfe2:	445a      	add	r2, fp
 801bfe4:	2004      	movs	r0, #4
 801bfe6:	4605      	mov	r5, r0
 801bfe8:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801bfec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801bfee:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bff2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801bff4:	5880      	ldr	r0, [r0, r2]
 801bff6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bffa:	d014      	beq.n	801c026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bffc:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c000:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c004:	d112      	bne.n	801c02c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c006:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c008:	2aff      	cmp	r2, #255	; 0xff
 801c00a:	d10f      	bne.n	801c02c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c00c:	0942      	lsrs	r2, r0, #5
 801c00e:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c012:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c016:	f025 0507 	bic.w	r5, r5, #7
 801c01a:	4315      	orrs	r5, r2
 801c01c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c020:	4305      	orrs	r5, r0
 801c022:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c026:	f109 0901 	add.w	r9, r9, #1
 801c02a:	e7d4      	b.n	801bfd6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c02c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c030:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c034:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c038:	9215      	str	r2, [sp, #84]	; 0x54
 801c03a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c03c:	fb02 fa0a 	mul.w	sl, r2, sl
 801c040:	f10a 0201 	add.w	r2, sl, #1
 801c044:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c048:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c04c:	1212      	asrs	r2, r2, #8
 801c04e:	fa1f fa82 	uxth.w	sl, r2
 801c052:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c056:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c05a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c05e:	43d2      	mvns	r2, r2
 801c060:	b2d2      	uxtb	r2, r2
 801c062:	fb16 f60a 	smulbb	r6, r6, sl
 801c066:	fa5f fc8c 	uxtb.w	ip, ip
 801c06a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c06e:	b2c0      	uxtb	r0, r0
 801c070:	fb07 6702 	mla	r7, r7, r2, r6
 801c074:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c078:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c07a:	fb10 f00a 	smulbb	r0, r0, sl
 801c07e:	fb0c 0002 	mla	r0, ip, r2, r0
 801c082:	b2ed      	uxtb	r5, r5
 801c084:	b2bf      	uxth	r7, r7
 801c086:	fb15 f50a 	smulbb	r5, r5, sl
 801c08a:	b280      	uxth	r0, r0
 801c08c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c090:	fb06 5602 	mla	r6, r6, r2, r5
 801c094:	1c7a      	adds	r2, r7, #1
 801c096:	1c45      	adds	r5, r0, #1
 801c098:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c09c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c0a0:	b2b6      	uxth	r6, r6
 801c0a2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c0a6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c0aa:	432f      	orrs	r7, r5
 801c0ac:	1c75      	adds	r5, r6, #1
 801c0ae:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c0b2:	096d      	lsrs	r5, r5, #5
 801c0b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c0b8:	432f      	orrs	r7, r5
 801c0ba:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c0be:	e7b2      	b.n	801c026 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c0c0:	2000ef1c 	.word	0x2000ef1c
 801c0c4:	2000ef16 	.word	0x2000ef16
 801c0c8:	fffff7fb 	.word	0xfffff7fb
 801c0cc:	9203      	str	r2, [sp, #12]
 801c0ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c0d0:	458e      	cmp	lr, r1
 801c0d2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c0d6:	f4ff af68 	bcc.w	801bfaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c0da:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c0dc:	9906      	ldr	r1, [sp, #24]
 801c0de:	8812      	ldrh	r2, [r2, #0]
 801c0e0:	1a52      	subs	r2, r2, r1
 801c0e2:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c0e6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c0e8:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c0ea:	3201      	adds	r2, #1
 801c0ec:	428a      	cmp	r2, r1
 801c0ee:	9209      	str	r2, [sp, #36]	; 0x24
 801c0f0:	d111      	bne.n	801c116 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c0f2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c0f6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c0fa:	9b06      	ldr	r3, [sp, #24]
 801c0fc:	eba5 0509 	sub.w	r5, r5, r9
 801c100:	b2ad      	uxth	r5, r5
 801c102:	2d00      	cmp	r5, #0
 801c104:	bf08      	it	eq
 801c106:	4619      	moveq	r1, r3
 801c108:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c10a:	bf18      	it	ne
 801c10c:	2100      	movne	r1, #0
 801c10e:	3301      	adds	r3, #1
 801c110:	930d      	str	r3, [sp, #52]	; 0x34
 801c112:	b289      	uxth	r1, r1
 801c114:	e695      	b.n	801be42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c116:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c11a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c11e:	1b2d      	subs	r5, r5, r4
 801c120:	b2ad      	uxth	r5, r5
 801c122:	2d00      	cmp	r5, #0
 801c124:	bf18      	it	ne
 801c126:	2400      	movne	r4, #0
 801c128:	e740      	b.n	801bfac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c12a:	4b04      	ldr	r3, [pc, #16]	; (801c13c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c12c:	6818      	ldr	r0, [r3, #0]
 801c12e:	6803      	ldr	r3, [r0, #0]
 801c130:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c132:	4798      	blx	r3
 801c134:	b01d      	add	sp, #116	; 0x74
 801c136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c13a:	bf00      	nop
 801c13c:	2000ef1c 	.word	0x2000ef1c

0801c140 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c140:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c144:	b09f      	sub	sp, #124	; 0x7c
 801c146:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c14a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c14e:	920a      	str	r2, [sp, #40]	; 0x28
 801c150:	461d      	mov	r5, r3
 801c152:	4604      	mov	r4, r0
 801c154:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c156:	2a00      	cmp	r2, #0
 801c158:	f000 81fa 	beq.w	801c550 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c15c:	6828      	ldr	r0, [r5, #0]
 801c15e:	6869      	ldr	r1, [r5, #4]
 801c160:	aa1a      	add	r2, sp, #104	; 0x68
 801c162:	c203      	stmia	r2!, {r0, r1}
 801c164:	6818      	ldr	r0, [r3, #0]
 801c166:	6859      	ldr	r1, [r3, #4]
 801c168:	aa1c      	add	r2, sp, #112	; 0x70
 801c16a:	c203      	stmia	r2!, {r0, r1}
 801c16c:	a81a      	add	r0, sp, #104	; 0x68
 801c16e:	f7f8 fb8f 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c172:	4629      	mov	r1, r5
 801c174:	a81c      	add	r0, sp, #112	; 0x70
 801c176:	f7f8 fbcf 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c17a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c17e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c182:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c186:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c18a:	bfd7      	itett	le
 801c18c:	b29a      	uxthle	r2, r3
 801c18e:	2201      	movgt	r2, #1
 801c190:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c194:	fb91 f2f2 	sdivle	r2, r1, r2
 801c198:	9201      	str	r2, [sp, #4]
 801c19a:	9801      	ldr	r0, [sp, #4]
 801c19c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c1a0:	fb92 f0f0 	sdiv	r0, r2, r0
 801c1a4:	b280      	uxth	r0, r0
 801c1a6:	9010      	str	r0, [sp, #64]	; 0x40
 801c1a8:	9901      	ldr	r1, [sp, #4]
 801c1aa:	9801      	ldr	r0, [sp, #4]
 801c1ac:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c1ae:	440e      	add	r6, r1
 801c1b0:	fb05 2510 	mls	r5, r5, r0, r2
 801c1b4:	fb15 f503 	smulbb	r5, r5, r3
 801c1b8:	3e01      	subs	r6, #1
 801c1ba:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c1be:	fb96 f6f1 	sdiv	r6, r6, r1
 801c1c2:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c1c6:	440d      	add	r5, r1
 801c1c8:	4419      	add	r1, r3
 801c1ca:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c1ce:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c1d2:	441a      	add	r2, r3
 801c1d4:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c1d8:	9304      	str	r3, [sp, #16]
 801c1da:	4b96      	ldr	r3, [pc, #600]	; (801c434 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c1dc:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c1e0:	6818      	ldr	r0, [r3, #0]
 801c1e2:	6803      	ldr	r3, [r0, #0]
 801c1e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c1e6:	4798      	blx	r3
 801c1e8:	4b93      	ldr	r3, [pc, #588]	; (801c438 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c1ea:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c1ee:	881a      	ldrh	r2, [r3, #0]
 801c1f0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c1f4:	9318      	str	r3, [sp, #96]	; 0x60
 801c1f6:	fb02 c101 	mla	r1, r2, r1, ip
 801c1fa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c1fe:	4357      	muls	r7, r2
 801c200:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c204:	3601      	adds	r6, #1
 801c206:	920b      	str	r2, [sp, #44]	; 0x2c
 801c208:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c20a:	4b8c      	ldr	r3, [pc, #560]	; (801c43c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c20c:	b2b6      	uxth	r6, r6
 801c20e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c212:	1d32      	adds	r2, r6, #4
 801c214:	9206      	str	r2, [sp, #24]
 801c216:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c218:	43d2      	mvns	r2, r2
 801c21a:	b2d2      	uxtb	r2, r2
 801c21c:	b2ad      	uxth	r5, r5
 801c21e:	9215      	str	r2, [sp, #84]	; 0x54
 801c220:	9a04      	ldr	r2, [sp, #16]
 801c222:	2d00      	cmp	r5, #0
 801c224:	bf0c      	ite	eq
 801c226:	4611      	moveq	r1, r2
 801c228:	2100      	movne	r1, #0
 801c22a:	2200      	movs	r2, #0
 801c22c:	1b1b      	subs	r3, r3, r4
 801c22e:	b289      	uxth	r1, r1
 801c230:	920d      	str	r2, [sp, #52]	; 0x34
 801c232:	9319      	str	r3, [sp, #100]	; 0x64
 801c234:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c236:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c238:	fa12 f383 	uxtah	r3, r2, r3
 801c23c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c23e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c242:	3304      	adds	r3, #4
 801c244:	9307      	str	r3, [sp, #28]
 801c246:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c248:	455b      	cmp	r3, fp
 801c24a:	f240 817c 	bls.w	801c546 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c24e:	9a01      	ldr	r2, [sp, #4]
 801c250:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c254:	fbb5 f3f3 	udiv	r3, r5, r3
 801c258:	1ad3      	subs	r3, r2, r3
 801c25a:	b29b      	uxth	r3, r3
 801c25c:	9316      	str	r3, [sp, #88]	; 0x58
 801c25e:	9b07      	ldr	r3, [sp, #28]
 801c260:	9807      	ldr	r0, [sp, #28]
 801c262:	785a      	ldrb	r2, [r3, #1]
 801c264:	789b      	ldrb	r3, [r3, #2]
 801c266:	7800      	ldrb	r0, [r0, #0]
 801c268:	9011      	str	r0, [sp, #68]	; 0x44
 801c26a:	021b      	lsls	r3, r3, #8
 801c26c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c270:	9a07      	ldr	r2, [sp, #28]
 801c272:	78d2      	ldrb	r2, [r2, #3]
 801c274:	4313      	orrs	r3, r2
 801c276:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c278:	3001      	adds	r0, #1
 801c27a:	441a      	add	r2, r3
 801c27c:	9005      	str	r0, [sp, #20]
 801c27e:	1c50      	adds	r0, r2, #1
 801c280:	9003      	str	r0, [sp, #12]
 801c282:	7852      	ldrb	r2, [r2, #1]
 801c284:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c286:	0212      	lsls	r2, r2, #8
 801c288:	5cc3      	ldrb	r3, [r0, r3]
 801c28a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c28e:	431a      	orrs	r2, r3
 801c290:	b293      	uxth	r3, r2
 801c292:	930c      	str	r3, [sp, #48]	; 0x30
 801c294:	2300      	movs	r3, #0
 801c296:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c29a:	9308      	str	r3, [sp, #32]
 801c29c:	461a      	mov	r2, r3
 801c29e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c2a2:	930e      	str	r3, [sp, #56]	; 0x38
 801c2a4:	f04f 0801 	mov.w	r8, #1
 801c2a8:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c2ac:	f8cd 8008 	str.w	r8, [sp, #8]
 801c2b0:	46c4      	mov	ip, r8
 801c2b2:	930f      	str	r3, [sp, #60]	; 0x3c
 801c2b4:	2d00      	cmp	r5, #0
 801c2b6:	d07c      	beq.n	801c3b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c2b8:	45ac      	cmp	ip, r5
 801c2ba:	d26c      	bcs.n	801c396 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c2bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c2be:	eba5 050c 	sub.w	r5, r5, ip
 801c2c2:	455b      	cmp	r3, fp
 801c2c4:	b2ad      	uxth	r5, r5
 801c2c6:	4608      	mov	r0, r1
 801c2c8:	d802      	bhi.n	801c2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c2ca:	e070      	b.n	801c3ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c2cc:	2b00      	cmp	r3, #0
 801c2ce:	d15c      	bne.n	801c38a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c2d0:	9b03      	ldr	r3, [sp, #12]
 801c2d2:	9a02      	ldr	r2, [sp, #8]
 801c2d4:	785b      	ldrb	r3, [r3, #1]
 801c2d6:	9902      	ldr	r1, [sp, #8]
 801c2d8:	f1c2 0207 	rsb	r2, r2, #7
 801c2dc:	4093      	lsls	r3, r2
 801c2de:	005b      	lsls	r3, r3, #1
 801c2e0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c2e4:	9b03      	ldr	r3, [sp, #12]
 801c2e6:	781b      	ldrb	r3, [r3, #0]
 801c2e8:	410b      	asrs	r3, r1
 801c2ea:	3101      	adds	r1, #1
 801c2ec:	b2c9      	uxtb	r1, r1
 801c2ee:	2908      	cmp	r1, #8
 801c2f0:	9102      	str	r1, [sp, #8]
 801c2f2:	9903      	ldr	r1, [sp, #12]
 801c2f4:	bf0a      	itet	eq
 801c2f6:	3102      	addeq	r1, #2
 801c2f8:	3101      	addne	r1, #1
 801c2fa:	9103      	streq	r1, [sp, #12]
 801c2fc:	b2db      	uxtb	r3, r3
 801c2fe:	bf0a      	itet	eq
 801c300:	2100      	moveq	r1, #0
 801c302:	9103      	strne	r1, [sp, #12]
 801c304:	9102      	streq	r1, [sp, #8]
 801c306:	4313      	orrs	r3, r2
 801c308:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c30a:	b29a      	uxth	r2, r3
 801c30c:	4291      	cmp	r1, r2
 801c30e:	d30a      	bcc.n	801c326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c310:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c314:	2301      	movs	r3, #1
 801c316:	9905      	ldr	r1, [sp, #20]
 801c318:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c31c:	d30f      	bcc.n	801c33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c31e:	2100      	movs	r1, #0
 801c320:	4698      	mov	r8, r3
 801c322:	9100      	str	r1, [sp, #0]
 801c324:	e032      	b.n	801c38c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c326:	9b05      	ldr	r3, [sp, #20]
 801c328:	429a      	cmp	r2, r3
 801c32a:	d318      	bcc.n	801c35e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c32c:	eb04 0308 	add.w	r3, r4, r8
 801c330:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c334:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c338:	f108 0301 	add.w	r3, r8, #1
 801c33c:	b29b      	uxth	r3, r3
 801c33e:	9905      	ldr	r1, [sp, #20]
 801c340:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c344:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c348:	710e      	strb	r6, [r1, #4]
 801c34a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c34c:	80ce      	strh	r6, [r1, #6]
 801c34e:	f108 0601 	add.w	r6, r8, #1
 801c352:	714e      	strb	r6, [r1, #5]
 801c354:	9905      	ldr	r1, [sp, #20]
 801c356:	3101      	adds	r1, #1
 801c358:	b289      	uxth	r1, r1
 801c35a:	9105      	str	r1, [sp, #20]
 801c35c:	e7df      	b.n	801c31e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c35e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c362:	4611      	mov	r1, r2
 801c364:	795b      	ldrb	r3, [r3, #5]
 801c366:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c36a:	4426      	add	r6, r4
 801c36c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c36e:	4437      	add	r7, r6
 801c370:	2f00      	cmp	r7, #0
 801c372:	dd06      	ble.n	801c382 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c374:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c378:	790f      	ldrb	r7, [r1, #4]
 801c37a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c37e:	88c9      	ldrh	r1, [r1, #6]
 801c380:	e7f4      	b.n	801c36c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c382:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c386:	b29b      	uxth	r3, r3
 801c388:	e7c5      	b.n	801c316 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c38a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c38c:	920c      	str	r2, [sp, #48]	; 0x30
 801c38e:	4601      	mov	r1, r0
 801c390:	9a00      	ldr	r2, [sp, #0]
 801c392:	469c      	mov	ip, r3
 801c394:	e78e      	b.n	801c2b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c396:	1957      	adds	r7, r2, r5
 801c398:	ebac 0305 	sub.w	r3, ip, r5
 801c39c:	b2ba      	uxth	r2, r7
 801c39e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c3a2:	9200      	str	r2, [sp, #0]
 801c3a4:	b29b      	uxth	r3, r3
 801c3a6:	2500      	movs	r5, #0
 801c3a8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c3aa:	455a      	cmp	r2, fp
 801c3ac:	d88e      	bhi.n	801c2cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c3ae:	4601      	mov	r1, r0
 801c3b0:	e749      	b.n	801c246 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c3b2:	458c      	cmp	ip, r1
 801c3b4:	bf2c      	ite	cs
 801c3b6:	4628      	movcs	r0, r5
 801c3b8:	462b      	movcc	r3, r5
 801c3ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c3bc:	bf27      	ittee	cs
 801c3be:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c3c0:	ebac 0301 	subcs.w	r3, ip, r1
 801c3c4:	eba1 000c 	subcc.w	r0, r1, ip
 801c3c8:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c3cc:	bf2c      	ite	cs
 801c3ce:	b29b      	uxthcs	r3, r3
 801c3d0:	b280      	uxthcc	r0, r0
 801c3d2:	2dff      	cmp	r5, #255	; 0xff
 801c3d4:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c3d6:	eb02 0705 	add.w	r7, r2, r5
 801c3da:	b2bd      	uxth	r5, r7
 801c3dc:	9500      	str	r5, [sp, #0]
 801c3de:	d12f      	bne.n	801c440 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c3e0:	465e      	mov	r6, fp
 801c3e2:	9d00      	ldr	r5, [sp, #0]
 801c3e4:	42aa      	cmp	r2, r5
 801c3e6:	f040 8084 	bne.w	801c4f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c3ea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c3ec:	458c      	cmp	ip, r1
 801c3ee:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c3f2:	d3d8      	bcc.n	801c3a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c3f4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c3f6:	9904      	ldr	r1, [sp, #16]
 801c3f8:	8812      	ldrh	r2, [r2, #0]
 801c3fa:	1a52      	subs	r2, r2, r1
 801c3fc:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c400:	9a08      	ldr	r2, [sp, #32]
 801c402:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c404:	3201      	adds	r2, #1
 801c406:	428a      	cmp	r2, r1
 801c408:	9208      	str	r2, [sp, #32]
 801c40a:	f040 8092 	bne.w	801c532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c40e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c412:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c416:	9b04      	ldr	r3, [sp, #16]
 801c418:	eba5 050c 	sub.w	r5, r5, ip
 801c41c:	b2ad      	uxth	r5, r5
 801c41e:	2d00      	cmp	r5, #0
 801c420:	bf08      	it	eq
 801c422:	4619      	moveq	r1, r3
 801c424:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c426:	bf18      	it	ne
 801c428:	2100      	movne	r1, #0
 801c42a:	3301      	adds	r3, #1
 801c42c:	930d      	str	r3, [sp, #52]	; 0x34
 801c42e:	b289      	uxth	r1, r1
 801c430:	e700      	b.n	801c234 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c432:	bf00      	nop
 801c434:	2000ef1c 	.word	0x2000ef1c
 801c438:	2000ef16 	.word	0x2000ef16
 801c43c:	fffff7fb 	.word	0xfffff7fb
 801c440:	46d9      	mov	r9, fp
 801c442:	9d00      	ldr	r5, [sp, #0]
 801c444:	42aa      	cmp	r2, r5
 801c446:	d0d0      	beq.n	801c3ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c448:	1c55      	adds	r5, r2, #1
 801c44a:	4422      	add	r2, r4
 801c44c:	9517      	str	r5, [sp, #92]	; 0x5c
 801c44e:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c452:	9a06      	ldr	r2, [sp, #24]
 801c454:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c458:	4472      	add	r2, lr
 801c45a:	9212      	str	r2, [sp, #72]	; 0x48
 801c45c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c45e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c462:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c466:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c468:	1216      	asrs	r6, r2, #8
 801c46a:	fb1a fa07 	smulbb	sl, sl, r7
 801c46e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c472:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c474:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c478:	fb06 a607 	mla	r6, r6, r7, sl
 801c47c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c47e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c482:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c484:	10d5      	asrs	r5, r2, #3
 801c486:	fb1a fa07 	smulbb	sl, sl, r7
 801c48a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c48e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c490:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c494:	fb05 a507 	mla	r5, r5, r7, sl
 801c498:	9f06      	ldr	r7, [sp, #24]
 801c49a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c49e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c4a0:	00d2      	lsls	r2, r2, #3
 801c4a2:	fb1e fe07 	smulbb	lr, lr, r7
 801c4a6:	b2d2      	uxtb	r2, r2
 801c4a8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c4aa:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c4ae:	b2b6      	uxth	r6, r6
 801c4b0:	fb02 e207 	mla	r2, r2, r7, lr
 801c4b4:	b292      	uxth	r2, r2
 801c4b6:	b2ad      	uxth	r5, r5
 801c4b8:	f106 0a01 	add.w	sl, r6, #1
 801c4bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c4c0:	f102 0e01 	add.w	lr, r2, #1
 801c4c4:	f105 0a01 	add.w	sl, r5, #1
 801c4c8:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c4cc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c4d0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c4d4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c4d8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c4dc:	ea4e 0606 	orr.w	r6, lr, r6
 801c4e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c4e4:	ea46 060a 	orr.w	r6, r6, sl
 801c4e8:	f829 6b02 	strh.w	r6, [r9], #2
 801c4ec:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c4f0:	e7a7      	b.n	801c442 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c4f2:	f102 0e01 	add.w	lr, r2, #1
 801c4f6:	4422      	add	r2, r4
 801c4f8:	9f06      	ldr	r7, [sp, #24]
 801c4fa:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c4fe:	9a06      	ldr	r2, [sp, #24]
 801c500:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c504:	eb02 0a05 	add.w	sl, r2, r5
 801c508:	4a13      	ldr	r2, [pc, #76]	; (801c558 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c50a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c50e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c512:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c516:	00d2      	lsls	r2, r2, #3
 801c518:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c51c:	ea49 0202 	orr.w	r2, r9, r2
 801c520:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c524:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c528:	f826 2b02 	strh.w	r2, [r6], #2
 801c52c:	fa1f f28e 	uxth.w	r2, lr
 801c530:	e757      	b.n	801c3e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c532:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c536:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c53a:	1a2d      	subs	r5, r5, r0
 801c53c:	b2ad      	uxth	r5, r5
 801c53e:	2d00      	cmp	r5, #0
 801c540:	bf18      	it	ne
 801c542:	2000      	movne	r0, #0
 801c544:	e730      	b.n	801c3a8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c546:	4b05      	ldr	r3, [pc, #20]	; (801c55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c548:	6818      	ldr	r0, [r3, #0]
 801c54a:	6803      	ldr	r3, [r0, #0]
 801c54c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c54e:	4798      	blx	r3
 801c550:	b01f      	add	sp, #124	; 0x7c
 801c552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c556:	bf00      	nop
 801c558:	fffff800 	.word	0xfffff800
 801c55c:	2000ef1c 	.word	0x2000ef1c

0801c560 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c560:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c564:	b091      	sub	sp, #68	; 0x44
 801c566:	469b      	mov	fp, r3
 801c568:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c56c:	4616      	mov	r6, r2
 801c56e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c572:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c576:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c57a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c57e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c582:	4604      	mov	r4, r0
 801c584:	460d      	mov	r5, r1
 801c586:	4640      	mov	r0, r8
 801c588:	4659      	mov	r1, fp
 801c58a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c58e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c592:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c596:	f7f3 f919 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801c59a:	4631      	mov	r1, r6
 801c59c:	4640      	mov	r0, r8
 801c59e:	f7f3 f915 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801c5a2:	4b74      	ldr	r3, [pc, #464]	; (801c774 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c5a4:	8818      	ldrh	r0, [r3, #0]
 801c5a6:	4b74      	ldr	r3, [pc, #464]	; (801c778 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c5a8:	8819      	ldrh	r1, [r3, #0]
 801c5aa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c5ae:	2b00      	cmp	r3, #0
 801c5b0:	b202      	sxth	r2, r0
 801c5b2:	b20e      	sxth	r6, r1
 801c5b4:	da07      	bge.n	801c5c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c5b6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c5ba:	4463      	add	r3, ip
 801c5bc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c5c0:	2300      	movs	r3, #0
 801c5c2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c5c6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c5ca:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c5ce:	1ad2      	subs	r2, r2, r3
 801c5d0:	4594      	cmp	ip, r2
 801c5d2:	bfc4      	itt	gt
 801c5d4:	1ac2      	subgt	r2, r0, r3
 801c5d6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c5da:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c5de:	2a00      	cmp	r2, #0
 801c5e0:	da07      	bge.n	801c5f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c5e2:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c5e6:	4462      	add	r2, ip
 801c5e8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c5ec:	2200      	movs	r2, #0
 801c5ee:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c5f2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c5f6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c5fa:	eba6 060a 	sub.w	r6, r6, sl
 801c5fe:	42b2      	cmp	r2, r6
 801c600:	bfc4      	itt	gt
 801c602:	eba1 020a 	subgt.w	r2, r1, sl
 801c606:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c60a:	4a5c      	ldr	r2, [pc, #368]	; (801c77c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c60c:	7812      	ldrb	r2, [r2, #0]
 801c60e:	b9a2      	cbnz	r2, 801c63a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c610:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c614:	4286      	cmp	r6, r0
 801c616:	4640      	mov	r0, r8
 801c618:	9303      	str	r3, [sp, #12]
 801c61a:	bf14      	ite	ne
 801c61c:	2600      	movne	r6, #0
 801c61e:	2601      	moveq	r6, #1
 801c620:	f7f3 f917 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c624:	9b03      	ldr	r3, [sp, #12]
 801c626:	b160      	cbz	r0, 801c642 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c628:	2300      	movs	r3, #0
 801c62a:	8023      	strh	r3, [r4, #0]
 801c62c:	8063      	strh	r3, [r4, #2]
 801c62e:	80a3      	strh	r3, [r4, #4]
 801c630:	4620      	mov	r0, r4
 801c632:	80e3      	strh	r3, [r4, #6]
 801c634:	b011      	add	sp, #68	; 0x44
 801c636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c63a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c63e:	428e      	cmp	r6, r1
 801c640:	e7e9      	b.n	801c616 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c642:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c646:	9205      	str	r2, [sp, #20]
 801c648:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c64c:	9206      	str	r2, [sp, #24]
 801c64e:	f8bb 2000 	ldrh.w	r2, [fp]
 801c652:	900e      	str	r0, [sp, #56]	; 0x38
 801c654:	1a9b      	subs	r3, r3, r2
 801c656:	b21b      	sxth	r3, r3
 801c658:	9303      	str	r3, [sp, #12]
 801c65a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c65e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c662:	ebaa 0a03 	sub.w	sl, sl, r3
 801c666:	fa0f f38a 	sxth.w	r3, sl
 801c66a:	9304      	str	r3, [sp, #16]
 801c66c:	9b03      	ldr	r3, [sp, #12]
 801c66e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c672:	9b04      	ldr	r3, [sp, #16]
 801c674:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c678:	9b05      	ldr	r3, [sp, #20]
 801c67a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c67e:	a90e      	add	r1, sp, #56	; 0x38
 801c680:	9b06      	ldr	r3, [sp, #24]
 801c682:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c686:	a80c      	add	r0, sp, #48	; 0x30
 801c688:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c68c:	f7f8 f944 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c690:	4640      	mov	r0, r8
 801c692:	f7f8 f8fd 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c696:	a80e      	add	r0, sp, #56	; 0x38
 801c698:	f7f8 f8fa 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c69c:	4b38      	ldr	r3, [pc, #224]	; (801c780 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c69e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c6a2:	881b      	ldrh	r3, [r3, #0]
 801c6a4:	9307      	str	r3, [sp, #28]
 801c6a6:	682b      	ldr	r3, [r5, #0]
 801c6a8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801c784 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c6ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c6ae:	4628      	mov	r0, r5
 801c6b0:	4798      	blx	r3
 801c6b2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c6b6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c6ba:	4681      	mov	r9, r0
 801c6bc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c6c0:	f8db 0000 	ldr.w	r0, [fp]
 801c6c4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c6c6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c6ca:	6803      	ldr	r3, [r0, #0]
 801c6cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c6ce:	4798      	blx	r3
 801c6d0:	4607      	mov	r7, r0
 801c6d2:	f8db 0000 	ldr.w	r0, [fp]
 801c6d6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c6da:	6803      	ldr	r3, [r0, #0]
 801c6dc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c6e0:	9109      	str	r1, [sp, #36]	; 0x24
 801c6e2:	9208      	str	r2, [sp, #32]
 801c6e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c6e6:	4798      	blx	r3
 801c6e8:	f010 0f01 	tst.w	r0, #1
 801c6ec:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c6f0:	d012      	beq.n	801c718 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c6f2:	f8db 0000 	ldr.w	r0, [fp]
 801c6f6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c6fa:	6803      	ldr	r3, [r0, #0]
 801c6fc:	9200      	str	r2, [sp, #0]
 801c6fe:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c700:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c704:	462b      	mov	r3, r5
 801c706:	47b0      	blx	r6
 801c708:	9b03      	ldr	r3, [sp, #12]
 801c70a:	8023      	strh	r3, [r4, #0]
 801c70c:	9b04      	ldr	r3, [sp, #16]
 801c70e:	8063      	strh	r3, [r4, #2]
 801c710:	9b05      	ldr	r3, [sp, #20]
 801c712:	80a3      	strh	r3, [r4, #4]
 801c714:	9b06      	ldr	r3, [sp, #24]
 801c716:	e78b      	b.n	801c630 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c718:	fb09 f202 	mul.w	r2, r9, r2
 801c71c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c720:	440f      	add	r7, r1
 801c722:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c726:	b166      	cbz	r6, 801c742 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c728:	9a07      	ldr	r2, [sp, #28]
 801c72a:	4592      	cmp	sl, r2
 801c72c:	d109      	bne.n	801c742 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c72e:	f8db 0000 	ldr.w	r0, [fp]
 801c732:	6802      	ldr	r2, [r0, #0]
 801c734:	fb09 f303 	mul.w	r3, r9, r3
 801c738:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c73a:	4629      	mov	r1, r5
 801c73c:	463a      	mov	r2, r7
 801c73e:	47b0      	blx	r6
 801c740:	e7e2      	b.n	801c708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c742:	fb0a f303 	mul.w	r3, sl, r3
 801c746:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801c784 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c74a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c74e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c752:	4545      	cmp	r5, r8
 801c754:	d2d8      	bcs.n	801c708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c756:	f8db 0000 	ldr.w	r0, [fp]
 801c75a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801c75e:	6802      	ldr	r2, [r0, #0]
 801c760:	4629      	mov	r1, r5
 801c762:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801c766:	005b      	lsls	r3, r3, #1
 801c768:	463a      	mov	r2, r7
 801c76a:	47d0      	blx	sl
 801c76c:	444f      	add	r7, r9
 801c76e:	4435      	add	r5, r6
 801c770:	e7ef      	b.n	801c752 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c772:	bf00      	nop
 801c774:	2000ef10 	.word	0x2000ef10
 801c778:	2000ef12 	.word	0x2000ef12
 801c77c:	2000ef14 	.word	0x2000ef14
 801c780:	2000ef16 	.word	0x2000ef16
 801c784:	2000ef1c 	.word	0x2000ef1c

0801c788 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c788:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c78a:	4606      	mov	r6, r0
 801c78c:	b087      	sub	sp, #28
 801c78e:	460c      	mov	r4, r1
 801c790:	4617      	mov	r7, r2
 801c792:	461d      	mov	r5, r3
 801c794:	b333      	cbz	r3, 801c7e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c796:	4608      	mov	r0, r1
 801c798:	f7f3 f85b 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c79c:	bb10      	cbnz	r0, 801c7e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c79e:	6820      	ldr	r0, [r4, #0]
 801c7a0:	6861      	ldr	r1, [r4, #4]
 801c7a2:	4c1c      	ldr	r4, [pc, #112]	; (801c814 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c7a4:	ab04      	add	r3, sp, #16
 801c7a6:	c303      	stmia	r3!, {r0, r1}
 801c7a8:	a804      	add	r0, sp, #16
 801c7aa:	f7f8 f871 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c7ae:	6820      	ldr	r0, [r4, #0]
 801c7b0:	6803      	ldr	r3, [r0, #0]
 801c7b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c7b4:	4798      	blx	r3
 801c7b6:	2dff      	cmp	r5, #255	; 0xff
 801c7b8:	d016      	beq.n	801c7e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c7ba:	f010 0f08 	tst.w	r0, #8
 801c7be:	6820      	ldr	r0, [r4, #0]
 801c7c0:	d015      	beq.n	801c7ee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c7c2:	2400      	movs	r4, #0
 801c7c4:	6801      	ldr	r1, [r0, #0]
 801c7c6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c7ca:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c7ce:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c7d2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c7d6:	9401      	str	r4, [sp, #4]
 801c7d8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c7dc:	9400      	str	r4, [sp, #0]
 801c7de:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801c7e0:	4639      	mov	r1, r7
 801c7e2:	47a0      	blx	r4
 801c7e4:	b007      	add	sp, #28
 801c7e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c7e8:	f010 0f02 	tst.w	r0, #2
 801c7ec:	e7e7      	b.n	801c7be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c7ee:	6803      	ldr	r3, [r0, #0]
 801c7f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c7f2:	4798      	blx	r3
 801c7f4:	4b08      	ldr	r3, [pc, #32]	; (801c818 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c7f6:	881a      	ldrh	r2, [r3, #0]
 801c7f8:	6833      	ldr	r3, [r6, #0]
 801c7fa:	e9cd 7500 	strd	r7, r5, [sp]
 801c7fe:	4601      	mov	r1, r0
 801c800:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801c802:	4630      	mov	r0, r6
 801c804:	ab04      	add	r3, sp, #16
 801c806:	47a8      	blx	r5
 801c808:	6820      	ldr	r0, [r4, #0]
 801c80a:	6803      	ldr	r3, [r0, #0]
 801c80c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c80e:	4798      	blx	r3
 801c810:	e7e8      	b.n	801c7e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c812:	bf00      	nop
 801c814:	2000ef1c 	.word	0x2000ef1c
 801c818:	2000ef16 	.word	0x2000ef16

0801c81c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c81c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c820:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801c824:	9e08      	ldr	r6, [sp, #32]
 801c826:	4688      	mov	r8, r1
 801c828:	4614      	mov	r4, r2
 801c82a:	461d      	mov	r5, r3
 801c82c:	2f00      	cmp	r7, #0
 801c82e:	f000 80a9 	beq.w	801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c832:	4618      	mov	r0, r3
 801c834:	f7f3 f80d 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c838:	2800      	cmp	r0, #0
 801c83a:	f040 80a3 	bne.w	801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c83e:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c842:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c846:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c84a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c84e:	fb04 1303 	mla	r3, r4, r3, r1
 801c852:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c856:	4365      	muls	r5, r4
 801c858:	2fff      	cmp	r7, #255	; 0xff
 801c85a:	eba4 0200 	sub.w	r2, r4, r0
 801c85e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c862:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c866:	d04a      	beq.n	801c8fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c868:	b2bc      	uxth	r4, r7
 801c86a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801c86e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c872:	fa5f f788 	uxtb.w	r7, r8
 801c876:	b2f3      	uxtb	r3, r6
 801c878:	0040      	lsls	r0, r0, #1
 801c87a:	fb0e fe04 	mul.w	lr, lr, r4
 801c87e:	4367      	muls	r7, r4
 801c880:	4363      	muls	r3, r4
 801c882:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c886:	fa1f fc8c 	uxth.w	ip, ip
 801c88a:	42a9      	cmp	r1, r5
 801c88c:	d27a      	bcs.n	801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c88e:	eb01 0900 	add.w	r9, r1, r0
 801c892:	4549      	cmp	r1, r9
 801c894:	d231      	bcs.n	801c8fa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c896:	880a      	ldrh	r2, [r1, #0]
 801c898:	1214      	asrs	r4, r2, #8
 801c89a:	10d6      	asrs	r6, r2, #3
 801c89c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801c8a0:	00d2      	lsls	r2, r2, #3
 801c8a2:	b2d2      	uxtb	r2, r2
 801c8a4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c8a8:	fb14 f40c 	smulbb	r4, r4, ip
 801c8ac:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c8b0:	4474      	add	r4, lr
 801c8b2:	fb12 f20c 	smulbb	r2, r2, ip
 801c8b6:	b2a4      	uxth	r4, r4
 801c8b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801c8bc:	441a      	add	r2, r3
 801c8be:	b292      	uxth	r2, r2
 801c8c0:	f104 0a01 	add.w	sl, r4, #1
 801c8c4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c8c8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c8cc:	fb16 f60c 	smulbb	r6, r6, ip
 801c8d0:	f102 0a01 	add.w	sl, r2, #1
 801c8d4:	443e      	add	r6, r7
 801c8d6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c8da:	b2b6      	uxth	r6, r6
 801c8dc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801c8e0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c8e4:	4322      	orrs	r2, r4
 801c8e6:	1c74      	adds	r4, r6, #1
 801c8e8:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c8ec:	0976      	lsrs	r6, r6, #5
 801c8ee:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801c8f2:	4332      	orrs	r2, r6
 801c8f4:	f821 2b02 	strh.w	r2, [r1], #2
 801c8f8:	e7cb      	b.n	801c892 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c8fa:	4441      	add	r1, r8
 801c8fc:	e7c5      	b.n	801c88a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c8fe:	4f22      	ldr	r7, [pc, #136]	; (801c988 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c900:	0973      	lsrs	r3, r6, #5
 801c902:	ea08 0707 	and.w	r7, r8, r7
 801c906:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c90a:	433b      	orrs	r3, r7
 801c90c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c910:	4333      	orrs	r3, r6
 801c912:	07e7      	lsls	r7, r4, #31
 801c914:	b29b      	uxth	r3, r3
 801c916:	d50b      	bpl.n	801c930 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c918:	0040      	lsls	r0, r0, #1
 801c91a:	0052      	lsls	r2, r2, #1
 801c91c:	42a9      	cmp	r1, r5
 801c91e:	d231      	bcs.n	801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c920:	180c      	adds	r4, r1, r0
 801c922:	42a1      	cmp	r1, r4
 801c924:	d202      	bcs.n	801c92c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c926:	f821 3b02 	strh.w	r3, [r1], #2
 801c92a:	e7fa      	b.n	801c922 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c92c:	4411      	add	r1, r2
 801c92e:	e7f5      	b.n	801c91c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c930:	078e      	lsls	r6, r1, #30
 801c932:	d008      	beq.n	801c946 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c934:	0066      	lsls	r6, r4, #1
 801c936:	460a      	mov	r2, r1
 801c938:	42aa      	cmp	r2, r5
 801c93a:	d202      	bcs.n	801c942 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c93c:	8013      	strh	r3, [r2, #0]
 801c93e:	4432      	add	r2, r6
 801c940:	e7fa      	b.n	801c938 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c942:	3102      	adds	r1, #2
 801c944:	3801      	subs	r0, #1
 801c946:	07c2      	lsls	r2, r0, #31
 801c948:	d50b      	bpl.n	801c962 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c94a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801c94e:	3a01      	subs	r2, #1
 801c950:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c954:	0066      	lsls	r6, r4, #1
 801c956:	42aa      	cmp	r2, r5
 801c958:	d202      	bcs.n	801c960 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c95a:	8013      	strh	r3, [r2, #0]
 801c95c:	4432      	add	r2, r6
 801c95e:	e7fa      	b.n	801c956 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c960:	3801      	subs	r0, #1
 801c962:	b178      	cbz	r0, 801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c964:	1040      	asrs	r0, r0, #1
 801c966:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c96a:	0080      	lsls	r0, r0, #2
 801c96c:	0064      	lsls	r4, r4, #1
 801c96e:	42a9      	cmp	r1, r5
 801c970:	d208      	bcs.n	801c984 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c972:	180e      	adds	r6, r1, r0
 801c974:	460a      	mov	r2, r1
 801c976:	42b2      	cmp	r2, r6
 801c978:	d202      	bcs.n	801c980 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c97a:	f842 3b04 	str.w	r3, [r2], #4
 801c97e:	e7fa      	b.n	801c976 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c980:	4421      	add	r1, r4
 801c982:	e7f4      	b.n	801c96e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c984:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c988:	00fff800 	.word	0x00fff800

0801c98c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c98c:	2200      	movs	r2, #0
 801c98e:	4912      	ldr	r1, [pc, #72]	; (801c9d8 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c990:	6042      	str	r2, [r0, #4]
 801c992:	6001      	str	r1, [r0, #0]
 801c994:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801c998:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801c99c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801c9a0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801c9a4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801c9a8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801c9ac:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801c9b0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801c9b4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801c9b8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801c9bc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801c9c0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801c9c4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801c9c8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801c9cc:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801c9d0:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801c9d4:	4770      	bx	lr
 801c9d6:	bf00      	nop
 801c9d8:	0802a72c 	.word	0x0802a72c

0801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c9dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c9e0:	460d      	mov	r5, r1
 801c9e2:	b08d      	sub	sp, #52	; 0x34
 801c9e4:	4604      	mov	r4, r0
 801c9e6:	6808      	ldr	r0, [r1, #0]
 801c9e8:	6849      	ldr	r1, [r1, #4]
 801c9ea:	4699      	mov	r9, r3
 801c9ec:	ab08      	add	r3, sp, #32
 801c9ee:	c303      	stmia	r3!, {r0, r1}
 801c9f0:	6810      	ldr	r0, [r2, #0]
 801c9f2:	6851      	ldr	r1, [r2, #4]
 801c9f4:	ab0a      	add	r3, sp, #40	; 0x28
 801c9f6:	c303      	stmia	r3!, {r0, r1}
 801c9f8:	a808      	add	r0, sp, #32
 801c9fa:	f7f7 ff49 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c9fe:	4629      	mov	r1, r5
 801ca00:	a80a      	add	r0, sp, #40	; 0x28
 801ca02:	f7f7 ff89 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ca06:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ca0a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ca0e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ca12:	4d63      	ldr	r5, [pc, #396]	; (801cba0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ca14:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ca18:	6828      	ldr	r0, [r5, #0]
 801ca1a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ca1e:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ca22:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ca26:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ca2a:	440a      	add	r2, r1
 801ca2c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801ca30:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801ca34:	4413      	add	r3, r2
 801ca36:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ca3a:	6803      	ldr	r3, [r0, #0]
 801ca3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca3e:	4798      	blx	r3
 801ca40:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ca44:	d119      	bne.n	801ca7a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ca46:	f010 0f20 	tst.w	r0, #32
 801ca4a:	6828      	ldr	r0, [r5, #0]
 801ca4c:	d018      	beq.n	801ca80 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ca4e:	2500      	movs	r5, #0
 801ca50:	6801      	ldr	r1, [r0, #0]
 801ca52:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801ca56:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801ca5a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801ca5e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801ca62:	9502      	str	r5, [sp, #8]
 801ca64:	b2b6      	uxth	r6, r6
 801ca66:	fa1f f588 	uxth.w	r5, r8
 801ca6a:	9601      	str	r6, [sp, #4]
 801ca6c:	9500      	str	r5, [sp, #0]
 801ca6e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801ca70:	4621      	mov	r1, r4
 801ca72:	47a8      	blx	r5
 801ca74:	b00d      	add	sp, #52	; 0x34
 801ca76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca7a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801ca7e:	e7e4      	b.n	801ca4a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ca80:	6803      	ldr	r3, [r0, #0]
 801ca82:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ca84:	4798      	blx	r3
 801ca86:	4947      	ldr	r1, [pc, #284]	; (801cba4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ca88:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801ca8c:	880b      	ldrh	r3, [r1, #0]
 801ca8e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ca92:	fb03 5202 	mla	r2, r3, r2, r5
 801ca96:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca9a:	4373      	muls	r3, r6
 801ca9c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801caa0:	9307      	str	r3, [sp, #28]
 801caa2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801caa6:	9306      	str	r3, [sp, #24]
 801caa8:	468a      	mov	sl, r1
 801caaa:	9b07      	ldr	r3, [sp, #28]
 801caac:	4298      	cmp	r0, r3
 801caae:	d270      	bcs.n	801cb92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801cab0:	9b06      	ldr	r3, [sp, #24]
 801cab2:	4621      	mov	r1, r4
 801cab4:	eb00 0b03 	add.w	fp, r0, r3
 801cab8:	4558      	cmp	r0, fp
 801caba:	d25d      	bcs.n	801cb78 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cabc:	f851 4b04 	ldr.w	r4, [r1], #4
 801cac0:	0e23      	lsrs	r3, r4, #24
 801cac2:	d014      	beq.n	801caee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cac4:	2bff      	cmp	r3, #255	; 0xff
 801cac6:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801caca:	d112      	bne.n	801caf2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cacc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cad0:	d10f      	bne.n	801caf2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cad2:	0963      	lsrs	r3, r4, #5
 801cad4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cad8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cadc:	f02c 0c07 	bic.w	ip, ip, #7
 801cae0:	ea43 0c0c 	orr.w	ip, r3, ip
 801cae4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cae8:	ea4c 0404 	orr.w	r4, ip, r4
 801caec:	8004      	strh	r4, [r0, #0]
 801caee:	3002      	adds	r0, #2
 801caf0:	e7e2      	b.n	801cab8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801caf2:	fb09 f303 	mul.w	r3, r9, r3
 801caf6:	8807      	ldrh	r7, [r0, #0]
 801caf8:	1c5a      	adds	r2, r3, #1
 801cafa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cafe:	1212      	asrs	r2, r2, #8
 801cb00:	123e      	asrs	r6, r7, #8
 801cb02:	b293      	uxth	r3, r2
 801cb04:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cb08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cb0c:	43d2      	mvns	r2, r2
 801cb0e:	b2d2      	uxtb	r2, r2
 801cb10:	10fd      	asrs	r5, r7, #3
 801cb12:	fb1e fe03 	smulbb	lr, lr, r3
 801cb16:	00ff      	lsls	r7, r7, #3
 801cb18:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cb1c:	fb06 e602 	mla	r6, r6, r2, lr
 801cb20:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cb24:	b2ff      	uxtb	r7, r7
 801cb26:	fa5f fc8c 	uxtb.w	ip, ip
 801cb2a:	b2e4      	uxtb	r4, r4
 801cb2c:	b2b6      	uxth	r6, r6
 801cb2e:	fb1c fc03 	smulbb	ip, ip, r3
 801cb32:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cb36:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cb3a:	fb14 f403 	smulbb	r4, r4, r3
 801cb3e:	fb05 c502 	mla	r5, r5, r2, ip
 801cb42:	f106 0e01 	add.w	lr, r6, #1
 801cb46:	fb07 4702 	mla	r7, r7, r2, r4
 801cb4a:	b2ad      	uxth	r5, r5
 801cb4c:	b2bf      	uxth	r7, r7
 801cb4e:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cb52:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801cb56:	f105 0c01 	add.w	ip, r5, #1
 801cb5a:	1c7e      	adds	r6, r7, #1
 801cb5c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801cb60:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cb64:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801cb68:	096d      	lsrs	r5, r5, #5
 801cb6a:	ea46 060e 	orr.w	r6, r6, lr
 801cb6e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cb72:	432e      	orrs	r6, r5
 801cb74:	8006      	strh	r6, [r0, #0]
 801cb76:	e7ba      	b.n	801caee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cb78:	f8ba 3000 	ldrh.w	r3, [sl]
 801cb7c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801cb80:	eba3 0308 	sub.w	r3, r3, r8
 801cb84:	eba4 0408 	sub.w	r4, r4, r8
 801cb88:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cb8c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cb90:	e78b      	b.n	801caaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cb92:	4b03      	ldr	r3, [pc, #12]	; (801cba0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cb94:	6818      	ldr	r0, [r3, #0]
 801cb96:	6803      	ldr	r3, [r0, #0]
 801cb98:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cb9a:	4798      	blx	r3
 801cb9c:	e76a      	b.n	801ca74 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cb9e:	bf00      	nop
 801cba0:	2000ef1c 	.word	0x2000ef1c
 801cba4:	2000ef16 	.word	0x2000ef16

0801cba8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cba8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cbac:	460c      	mov	r4, r1
 801cbae:	b085      	sub	sp, #20
 801cbb0:	6810      	ldr	r0, [r2, #0]
 801cbb2:	6851      	ldr	r1, [r2, #4]
 801cbb4:	466d      	mov	r5, sp
 801cbb6:	c503      	stmia	r5!, {r0, r1}
 801cbb8:	6818      	ldr	r0, [r3, #0]
 801cbba:	6859      	ldr	r1, [r3, #4]
 801cbbc:	4616      	mov	r6, r2
 801cbbe:	c503      	stmia	r5!, {r0, r1}
 801cbc0:	4668      	mov	r0, sp
 801cbc2:	f7f7 fe65 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cbc6:	4631      	mov	r1, r6
 801cbc8:	a802      	add	r0, sp, #8
 801cbca:	f7f7 fea5 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cbce:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cbd2:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cbd6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cbda:	4d28      	ldr	r5, [pc, #160]	; (801cc7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cbdc:	4e28      	ldr	r6, [pc, #160]	; (801cc80 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cbde:	6828      	ldr	r0, [r5, #0]
 801cbe0:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cbe4:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cbe8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cbec:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cbf0:	f8bd 1000 	ldrh.w	r1, [sp]
 801cbf4:	440a      	add	r2, r1
 801cbf6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cbfa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cbfe:	4413      	add	r3, r2
 801cc00:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cc04:	6803      	ldr	r3, [r0, #0]
 801cc06:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cc08:	4798      	blx	r3
 801cc0a:	8833      	ldrh	r3, [r6, #0]
 801cc0c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cc10:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cc14:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cc84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cc18:	fb03 1202 	mla	r2, r3, r2, r1
 801cc1c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc20:	fb08 f303 	mul.w	r3, r8, r3
 801cc24:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cc28:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cc2c:	4298      	cmp	r0, r3
 801cc2e:	d21d      	bcs.n	801cc6c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cc30:	eb00 080c 	add.w	r8, r0, ip
 801cc34:	4540      	cmp	r0, r8
 801cc36:	d20f      	bcs.n	801cc58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cc38:	f854 1b04 	ldr.w	r1, [r4], #4
 801cc3c:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cc40:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cc44:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc48:	ea42 0209 	orr.w	r2, r2, r9
 801cc4c:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cc50:	430a      	orrs	r2, r1
 801cc52:	f820 2b02 	strh.w	r2, [r0], #2
 801cc56:	e7ed      	b.n	801cc34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cc58:	8832      	ldrh	r2, [r6, #0]
 801cc5a:	1bd2      	subs	r2, r2, r7
 801cc5c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cc60:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cc64:	1bd2      	subs	r2, r2, r7
 801cc66:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cc6a:	e7df      	b.n	801cc2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cc6c:	6828      	ldr	r0, [r5, #0]
 801cc6e:	6803      	ldr	r3, [r0, #0]
 801cc70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cc72:	4798      	blx	r3
 801cc74:	b005      	add	sp, #20
 801cc76:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cc7a:	bf00      	nop
 801cc7c:	2000ef1c 	.word	0x2000ef1c
 801cc80:	2000ef16 	.word	0x2000ef16
 801cc84:	fffff800 	.word	0xfffff800

0801cc88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cc88:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc8c:	460e      	mov	r6, r1
 801cc8e:	b08e      	sub	sp, #56	; 0x38
 801cc90:	4604      	mov	r4, r0
 801cc92:	6808      	ldr	r0, [r1, #0]
 801cc94:	6849      	ldr	r1, [r1, #4]
 801cc96:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801ce70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cc9a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801ce74 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cc9e:	461d      	mov	r5, r3
 801cca0:	ab0a      	add	r3, sp, #40	; 0x28
 801cca2:	c303      	stmia	r3!, {r0, r1}
 801cca4:	6810      	ldr	r0, [r2, #0]
 801cca6:	6851      	ldr	r1, [r2, #4]
 801cca8:	ab0c      	add	r3, sp, #48	; 0x30
 801ccaa:	c303      	stmia	r3!, {r0, r1}
 801ccac:	a80a      	add	r0, sp, #40	; 0x28
 801ccae:	f7f7 fdef 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccb2:	4631      	mov	r1, r6
 801ccb4:	a80c      	add	r0, sp, #48	; 0x30
 801ccb6:	f7f7 fe2f 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccba:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801ccbe:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801ccc2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801ccc6:	f8d8 0000 	ldr.w	r0, [r8]
 801ccca:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801ccce:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801ccd2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ccd6:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801ccda:	440c      	add	r4, r1
 801ccdc:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cce0:	440a      	add	r2, r1
 801cce2:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cce6:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801ccea:	4413      	add	r3, r2
 801ccec:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801ccf0:	6803      	ldr	r3, [r0, #0]
 801ccf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ccf4:	4798      	blx	r3
 801ccf6:	2dff      	cmp	r5, #255	; 0xff
 801ccf8:	d124      	bne.n	801cd44 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801ccfa:	f010 0f01 	tst.w	r0, #1
 801ccfe:	f8d8 0000 	ldr.w	r0, [r8]
 801cd02:	d022      	beq.n	801cd4a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cd04:	2100      	movs	r1, #0
 801cd06:	f8d0 c000 	ldr.w	ip, [r0]
 801cd0a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cd0e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cd12:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cd16:	f04f 0e01 	mov.w	lr, #1
 801cd1a:	f8cd e018 	str.w	lr, [sp, #24]
 801cd1e:	f8b9 e000 	ldrh.w	lr, [r9]
 801cd22:	9503      	str	r5, [sp, #12]
 801cd24:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cd28:	b2b6      	uxth	r6, r6
 801cd2a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cd2e:	9102      	str	r1, [sp, #8]
 801cd30:	b2bf      	uxth	r7, r7
 801cd32:	9601      	str	r6, [sp, #4]
 801cd34:	9700      	str	r7, [sp, #0]
 801cd36:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cd3a:	4621      	mov	r1, r4
 801cd3c:	47a8      	blx	r5
 801cd3e:	b00e      	add	sp, #56	; 0x38
 801cd40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cd44:	f010 0f04 	tst.w	r0, #4
 801cd48:	e7d9      	b.n	801ccfe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cd4a:	6803      	ldr	r3, [r0, #0]
 801cd4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd4e:	4798      	blx	r3
 801cd50:	f8b9 3000 	ldrh.w	r3, [r9]
 801cd54:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801cd58:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801cd5c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801cd60:	fb03 1202 	mla	r2, r3, r2, r1
 801cd64:	ebac 0c07 	sub.w	ip, ip, r7
 801cd68:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd6c:	435e      	muls	r6, r3
 801cd6e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cd72:	2dff      	cmp	r5, #255	; 0xff
 801cd74:	eba3 0707 	sub.w	r7, r3, r7
 801cd78:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cd7c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cd80:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cd84:	d049      	beq.n	801ce1a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cd86:	43eb      	mvns	r3, r5
 801cd88:	fa1f f985 	uxth.w	r9, r5
 801cd8c:	b2db      	uxtb	r3, r3
 801cd8e:	42b0      	cmp	r0, r6
 801cd90:	d266      	bcs.n	801ce60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cd92:	eb00 0a0e 	add.w	sl, r0, lr
 801cd96:	4550      	cmp	r0, sl
 801cd98:	4621      	mov	r1, r4
 801cd9a:	f104 0403 	add.w	r4, r4, #3
 801cd9e:	d25b      	bcs.n	801ce58 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cda0:	8802      	ldrh	r2, [r0, #0]
 801cda2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cda6:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cdaa:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801cdae:	fb11 f109 	smulbb	r1, r1, r9
 801cdb2:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cdb6:	10d5      	asrs	r5, r2, #3
 801cdb8:	fb08 1803 	mla	r8, r8, r3, r1
 801cdbc:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cdc0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdc4:	fb11 f109 	smulbb	r1, r1, r9
 801cdc8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cdcc:	fb05 1503 	mla	r5, r5, r3, r1
 801cdd0:	00d2      	lsls	r2, r2, #3
 801cdd2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cdd6:	b2d2      	uxtb	r2, r2
 801cdd8:	fb11 f109 	smulbb	r1, r1, r9
 801cddc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cde0:	fa1f f888 	uxth.w	r8, r8
 801cde4:	fb02 1203 	mla	r2, r2, r3, r1
 801cde8:	b292      	uxth	r2, r2
 801cdea:	f108 0101 	add.w	r1, r8, #1
 801cdee:	b2ad      	uxth	r5, r5
 801cdf0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cdf4:	1c51      	adds	r1, r2, #1
 801cdf6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cdfa:	1c69      	adds	r1, r5, #1
 801cdfc:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801ce00:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801ce04:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ce08:	096d      	lsrs	r5, r5, #5
 801ce0a:	ea42 0208 	orr.w	r2, r2, r8
 801ce0e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce12:	432a      	orrs	r2, r5
 801ce14:	f820 2b02 	strh.w	r2, [r0], #2
 801ce18:	e7bd      	b.n	801cd96 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801ce1a:	4a14      	ldr	r2, [pc, #80]	; (801ce6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801ce1c:	42b0      	cmp	r0, r6
 801ce1e:	d21f      	bcs.n	801ce60 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801ce20:	eb00 050e 	add.w	r5, r0, lr
 801ce24:	42a8      	cmp	r0, r5
 801ce26:	4621      	mov	r1, r4
 801ce28:	f104 0403 	add.w	r4, r4, #3
 801ce2c:	d210      	bcs.n	801ce50 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801ce2e:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801ce32:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801ce36:	00db      	lsls	r3, r3, #3
 801ce38:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801ce3c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce40:	430b      	orrs	r3, r1
 801ce42:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801ce46:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801ce4a:	f820 3b02 	strh.w	r3, [r0], #2
 801ce4e:	e7e9      	b.n	801ce24 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801ce50:	4438      	add	r0, r7
 801ce52:	eb01 040c 	add.w	r4, r1, ip
 801ce56:	e7e1      	b.n	801ce1c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801ce58:	4438      	add	r0, r7
 801ce5a:	eb01 040c 	add.w	r4, r1, ip
 801ce5e:	e796      	b.n	801cd8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801ce60:	4b03      	ldr	r3, [pc, #12]	; (801ce70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801ce62:	6818      	ldr	r0, [r3, #0]
 801ce64:	6803      	ldr	r3, [r0, #0]
 801ce66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce68:	4798      	blx	r3
 801ce6a:	e768      	b.n	801cd3e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801ce6c:	fffff800 	.word	0xfffff800
 801ce70:	2000ef1c 	.word	0x2000ef1c
 801ce74:	2000ef16 	.word	0x2000ef16

0801ce78 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ce78:	b4f0      	push	{r4, r5, r6, r7}
 801ce7a:	4616      	mov	r6, r2
 801ce7c:	2e01      	cmp	r6, #1
 801ce7e:	461c      	mov	r4, r3
 801ce80:	460d      	mov	r5, r1
 801ce82:	9a04      	ldr	r2, [sp, #16]
 801ce84:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ce88:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ce8c:	d012      	beq.n	801ceb4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ce8e:	d303      	bcc.n	801ce98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ce90:	2e02      	cmp	r6, #2
 801ce92:	d00a      	beq.n	801ceaa <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ce94:	bcf0      	pop	{r4, r5, r6, r7}
 801ce96:	4770      	bx	lr
 801ce98:	6805      	ldr	r5, [r0, #0]
 801ce9a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ce9e:	68ed      	ldr	r5, [r5, #12]
 801cea0:	4613      	mov	r3, r2
 801cea2:	46ac      	mov	ip, r5
 801cea4:	4622      	mov	r2, r4
 801cea6:	bcf0      	pop	{r4, r5, r6, r7}
 801cea8:	4760      	bx	ip
 801ceaa:	4621      	mov	r1, r4
 801ceac:	4628      	mov	r0, r5
 801ceae:	bcf0      	pop	{r4, r5, r6, r7}
 801ceb0:	f7ff bd94 	b.w	801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ceb4:	4621      	mov	r1, r4
 801ceb6:	4628      	mov	r0, r5
 801ceb8:	bcf0      	pop	{r4, r5, r6, r7}
 801ceba:	f7ff bee5 	b.w	801cc88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801cec0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801cec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cec4:	4681      	mov	r9, r0
 801cec6:	b093      	sub	sp, #76	; 0x4c
 801cec8:	6810      	ldr	r0, [r2, #0]
 801ceca:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801cece:	4f6d      	ldr	r7, [pc, #436]	; (801d084 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ced0:	4688      	mov	r8, r1
 801ced2:	6851      	ldr	r1, [r2, #4]
 801ced4:	ac0e      	add	r4, sp, #56	; 0x38
 801ced6:	c403      	stmia	r4!, {r0, r1}
 801ced8:	6818      	ldr	r0, [r3, #0]
 801ceda:	6859      	ldr	r1, [r3, #4]
 801cedc:	ac10      	add	r4, sp, #64	; 0x40
 801cede:	4616      	mov	r6, r2
 801cee0:	c403      	stmia	r4!, {r0, r1}
 801cee2:	a80e      	add	r0, sp, #56	; 0x38
 801cee4:	f7f7 fcd4 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cee8:	4631      	mov	r1, r6
 801ceea:	a810      	add	r0, sp, #64	; 0x40
 801ceec:	f7f7 fd14 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cef0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801cef4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801cef8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801cefc:	4e62      	ldr	r6, [pc, #392]	; (801d088 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cefe:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801cf02:	6830      	ldr	r0, [r6, #0]
 801cf04:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801cf08:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf0c:	4489      	add	r9, r1
 801cf0e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801cf12:	440a      	add	r2, r1
 801cf14:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801cf18:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801cf1c:	4413      	add	r3, r2
 801cf1e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801cf22:	6803      	ldr	r3, [r0, #0]
 801cf24:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cf26:	4798      	blx	r3
 801cf28:	f010 0f80 	tst.w	r0, #128	; 0x80
 801cf2c:	6830      	ldr	r0, [r6, #0]
 801cf2e:	d01d      	beq.n	801cf6c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cf30:	2200      	movs	r2, #0
 801cf32:	6801      	ldr	r1, [r0, #0]
 801cf34:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801cf38:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cf3c:	220b      	movs	r2, #11
 801cf3e:	9207      	str	r2, [sp, #28]
 801cf40:	883a      	ldrh	r2, [r7, #0]
 801cf42:	9206      	str	r2, [sp, #24]
 801cf44:	2201      	movs	r2, #1
 801cf46:	e9cd a204 	strd	sl, r2, [sp, #16]
 801cf4a:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801cf4e:	9203      	str	r2, [sp, #12]
 801cf50:	b2a4      	uxth	r4, r4
 801cf52:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801cf56:	9200      	str	r2, [sp, #0]
 801cf58:	b2ad      	uxth	r5, r5
 801cf5a:	9502      	str	r5, [sp, #8]
 801cf5c:	9401      	str	r4, [sp, #4]
 801cf5e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801cf60:	4642      	mov	r2, r8
 801cf62:	4649      	mov	r1, r9
 801cf64:	47a0      	blx	r4
 801cf66:	b013      	add	sp, #76	; 0x4c
 801cf68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cf6c:	6803      	ldr	r3, [r0, #0]
 801cf6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cf70:	4798      	blx	r3
 801cf72:	883b      	ldrh	r3, [r7, #0]
 801cf74:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801cf78:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801cf7c:	fb03 1202 	mla	r2, r3, r2, r1
 801cf80:	435d      	muls	r5, r3
 801cf82:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf86:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cf8a:	920c      	str	r2, [sp, #48]	; 0x30
 801cf8c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801cf90:	1b12      	subs	r2, r2, r4
 801cf92:	920d      	str	r2, [sp, #52]	; 0x34
 801cf94:	0062      	lsls	r2, r4, #1
 801cf96:	1b1c      	subs	r4, r3, r4
 801cf98:	0063      	lsls	r3, r4, #1
 801cf9a:	920a      	str	r2, [sp, #40]	; 0x28
 801cf9c:	930b      	str	r3, [sp, #44]	; 0x2c
 801cf9e:	f04f 0e04 	mov.w	lr, #4
 801cfa2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cfa4:	4298      	cmp	r0, r3
 801cfa6:	d266      	bcs.n	801d076 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cfa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801cfaa:	eb00 0b03 	add.w	fp, r0, r3
 801cfae:	4558      	cmp	r0, fp
 801cfb0:	d25c      	bcs.n	801d06c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cfb2:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cfb6:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cfba:	f858 2003 	ldr.w	r2, [r8, r3]
 801cfbe:	0e11      	lsrs	r1, r2, #24
 801cfc0:	d012      	beq.n	801cfe8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cfc2:	29ff      	cmp	r1, #255	; 0xff
 801cfc4:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cfc8:	d110      	bne.n	801cfec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cfca:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801cfce:	d10d      	bne.n	801cfec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cfd0:	0953      	lsrs	r3, r2, #5
 801cfd2:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801cfd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cfda:	f027 0707 	bic.w	r7, r7, #7
 801cfde:	431f      	orrs	r7, r3
 801cfe0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfe4:	433a      	orrs	r2, r7
 801cfe6:	8002      	strh	r2, [r0, #0]
 801cfe8:	3002      	adds	r0, #2
 801cfea:	e7e0      	b.n	801cfae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cfec:	fb0a f101 	mul.w	r1, sl, r1
 801cff0:	8806      	ldrh	r6, [r0, #0]
 801cff2:	1c4b      	adds	r3, r1, #1
 801cff4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cff8:	1235      	asrs	r5, r6, #8
 801cffa:	10f4      	asrs	r4, r6, #3
 801cffc:	121b      	asrs	r3, r3, #8
 801cffe:	00f6      	lsls	r6, r6, #3
 801d000:	b299      	uxth	r1, r3
 801d002:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d006:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d00a:	b2f6      	uxtb	r6, r6
 801d00c:	43db      	mvns	r3, r3
 801d00e:	b2d2      	uxtb	r2, r2
 801d010:	b2db      	uxtb	r3, r3
 801d012:	fb1c fc01 	smulbb	ip, ip, r1
 801d016:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d01a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d01e:	fb12 f201 	smulbb	r2, r2, r1
 801d022:	fb05 c503 	mla	r5, r5, r3, ip
 801d026:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d02a:	b2ff      	uxtb	r7, r7
 801d02c:	fb06 2203 	mla	r2, r6, r3, r2
 801d030:	b2ad      	uxth	r5, r5
 801d032:	fb17 f701 	smulbb	r7, r7, r1
 801d036:	b292      	uxth	r2, r2
 801d038:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d03c:	fb04 7403 	mla	r4, r4, r3, r7
 801d040:	f105 0c01 	add.w	ip, r5, #1
 801d044:	1c57      	adds	r7, r2, #1
 801d046:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d04a:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d04e:	b2a4      	uxth	r4, r4
 801d050:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d054:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d058:	433d      	orrs	r5, r7
 801d05a:	1c67      	adds	r7, r4, #1
 801d05c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d060:	0964      	lsrs	r4, r4, #5
 801d062:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d066:	4325      	orrs	r5, r4
 801d068:	8005      	strh	r5, [r0, #0]
 801d06a:	e7bd      	b.n	801cfe8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d06c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d06e:	4418      	add	r0, r3
 801d070:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d072:	4499      	add	r9, r3
 801d074:	e795      	b.n	801cfa2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d076:	4b04      	ldr	r3, [pc, #16]	; (801d088 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d078:	6818      	ldr	r0, [r3, #0]
 801d07a:	6803      	ldr	r3, [r0, #0]
 801d07c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d07e:	4798      	blx	r3
 801d080:	e771      	b.n	801cf66 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d082:	bf00      	nop
 801d084:	2000ef16 	.word	0x2000ef16
 801d088:	2000ef1c 	.word	0x2000ef1c

0801d08c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d08c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d090:	b087      	sub	sp, #28
 801d092:	4680      	mov	r8, r0
 801d094:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d098:	460d      	mov	r5, r1
 801d09a:	4614      	mov	r4, r2
 801d09c:	2e00      	cmp	r6, #0
 801d09e:	f000 80b9 	beq.w	801d214 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d0a2:	6810      	ldr	r0, [r2, #0]
 801d0a4:	6851      	ldr	r1, [r2, #4]
 801d0a6:	af02      	add	r7, sp, #8
 801d0a8:	c703      	stmia	r7!, {r0, r1}
 801d0aa:	6818      	ldr	r0, [r3, #0]
 801d0ac:	6859      	ldr	r1, [r3, #4]
 801d0ae:	af04      	add	r7, sp, #16
 801d0b0:	c703      	stmia	r7!, {r0, r1}
 801d0b2:	a802      	add	r0, sp, #8
 801d0b4:	f7f7 fbec 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d0b8:	4621      	mov	r1, r4
 801d0ba:	a804      	add	r0, sp, #16
 801d0bc:	f7f7 fc2c 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d0c0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d0c4:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d0c8:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d0cc:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d0d0:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d0d4:	eb08 0401 	add.w	r4, r8, r1
 801d0d8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d0dc:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d0e0:	440a      	add	r2, r1
 801d0e2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d0e6:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d0ea:	4413      	add	r3, r2
 801d0ec:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d0f0:	4b4a      	ldr	r3, [pc, #296]	; (801d21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d0f2:	6818      	ldr	r0, [r3, #0]
 801d0f4:	6803      	ldr	r3, [r0, #0]
 801d0f6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d0f8:	4798      	blx	r3
 801d0fa:	4b49      	ldr	r3, [pc, #292]	; (801d220 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d0fc:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d100:	881a      	ldrh	r2, [r3, #0]
 801d102:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d106:	2eff      	cmp	r6, #255	; 0xff
 801d108:	fb02 c101 	mla	r1, r2, r1, ip
 801d10c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d110:	fb02 f207 	mul.w	r2, r2, r7
 801d114:	f105 0104 	add.w	r1, r5, #4
 801d118:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d11c:	461d      	mov	r5, r3
 801d11e:	d05a      	beq.n	801d1d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d120:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d124:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d128:	b2b6      	uxth	r6, r6
 801d12a:	fa1f fe8e 	uxth.w	lr, lr
 801d12e:	9301      	str	r3, [sp, #4]
 801d130:	4282      	cmp	r2, r0
 801d132:	d96a      	bls.n	801d20a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d134:	eb00 0b0a 	add.w	fp, r0, sl
 801d138:	4583      	cmp	fp, r0
 801d13a:	d940      	bls.n	801d1be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d13c:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d140:	8805      	ldrh	r5, [r0, #0]
 801d142:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d146:	122f      	asrs	r7, r5, #8
 801d148:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d14c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d150:	fb17 f70e 	smulbb	r7, r7, lr
 801d154:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d158:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d15c:	00ed      	lsls	r5, r5, #3
 801d15e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d162:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d166:	10df      	asrs	r7, r3, #3
 801d168:	b2ed      	uxtb	r5, r5
 801d16a:	00db      	lsls	r3, r3, #3
 801d16c:	fa1f fc8c 	uxth.w	ip, ip
 801d170:	fb19 f90e 	smulbb	r9, r9, lr
 801d174:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d178:	b2db      	uxtb	r3, r3
 801d17a:	fb15 f50e 	smulbb	r5, r5, lr
 801d17e:	fb07 9706 	mla	r7, r7, r6, r9
 801d182:	fb03 5306 	mla	r3, r3, r6, r5
 801d186:	f10c 0901 	add.w	r9, ip, #1
 801d18a:	b29b      	uxth	r3, r3
 801d18c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d190:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d194:	f103 0c01 	add.w	ip, r3, #1
 801d198:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d19c:	b2bf      	uxth	r7, r7
 801d19e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d1a2:	ea4c 0c09 	orr.w	ip, ip, r9
 801d1a6:	f107 0901 	add.w	r9, r7, #1
 801d1aa:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d1ae:	097f      	lsrs	r7, r7, #5
 801d1b0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1b4:	ea4c 0c07 	orr.w	ip, ip, r7
 801d1b8:	f820 cb02 	strh.w	ip, [r0], #2
 801d1bc:	e7bc      	b.n	801d138 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d1be:	9b01      	ldr	r3, [sp, #4]
 801d1c0:	881b      	ldrh	r3, [r3, #0]
 801d1c2:	eba3 0308 	sub.w	r3, r3, r8
 801d1c6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1ca:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d1ce:	eba3 0308 	sub.w	r3, r3, r8
 801d1d2:	441c      	add	r4, r3
 801d1d4:	e7ac      	b.n	801d130 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d1d6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d1da:	4282      	cmp	r2, r0
 801d1dc:	d915      	bls.n	801d20a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d1de:	eb00 060a 	add.w	r6, r0, sl
 801d1e2:	4286      	cmp	r6, r0
 801d1e4:	d906      	bls.n	801d1f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d1e6:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d1ea:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d1ee:	f820 3b02 	strh.w	r3, [r0], #2
 801d1f2:	e7f6      	b.n	801d1e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d1f4:	882b      	ldrh	r3, [r5, #0]
 801d1f6:	eba3 0308 	sub.w	r3, r3, r8
 801d1fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d1fe:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d202:	eba3 0308 	sub.w	r3, r3, r8
 801d206:	441c      	add	r4, r3
 801d208:	e7e7      	b.n	801d1da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d20a:	4b04      	ldr	r3, [pc, #16]	; (801d21c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d20c:	6818      	ldr	r0, [r3, #0]
 801d20e:	6803      	ldr	r3, [r0, #0]
 801d210:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d212:	4798      	blx	r3
 801d214:	b007      	add	sp, #28
 801d216:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d21a:	bf00      	nop
 801d21c:	2000ef1c 	.word	0x2000ef1c
 801d220:	2000ef16 	.word	0x2000ef16

0801d224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d224:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d228:	b091      	sub	sp, #68	; 0x44
 801d22a:	4680      	mov	r8, r0
 801d22c:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d230:	460f      	mov	r7, r1
 801d232:	4614      	mov	r4, r2
 801d234:	2d00      	cmp	r5, #0
 801d236:	d051      	beq.n	801d2dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d238:	6810      	ldr	r0, [r2, #0]
 801d23a:	6851      	ldr	r1, [r2, #4]
 801d23c:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d240:	ae0c      	add	r6, sp, #48	; 0x30
 801d242:	c603      	stmia	r6!, {r0, r1}
 801d244:	6818      	ldr	r0, [r3, #0]
 801d246:	6859      	ldr	r1, [r3, #4]
 801d248:	ae0e      	add	r6, sp, #56	; 0x38
 801d24a:	c603      	stmia	r6!, {r0, r1}
 801d24c:	a80c      	add	r0, sp, #48	; 0x30
 801d24e:	f7f7 fb1f 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d252:	4621      	mov	r1, r4
 801d254:	a80e      	add	r0, sp, #56	; 0x38
 801d256:	f7f7 fb5f 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d25a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d25e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d262:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d266:	f8d9 0000 	ldr.w	r0, [r9]
 801d26a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d26e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d272:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d276:	eb08 0401 	add.w	r4, r8, r1
 801d27a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d27e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d444 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d282:	440a      	add	r2, r1
 801d284:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d288:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d28c:	4413      	add	r3, r2
 801d28e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d292:	6803      	ldr	r3, [r0, #0]
 801d294:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d296:	4798      	blx	r3
 801d298:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d29c:	f8d9 0000 	ldr.w	r0, [r9]
 801d2a0:	d01f      	beq.n	801d2e2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d2a2:	2200      	movs	r2, #0
 801d2a4:	6801      	ldr	r1, [r0, #0]
 801d2a6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d2aa:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d2ae:	220b      	movs	r2, #11
 801d2b0:	9207      	str	r2, [sp, #28]
 801d2b2:	f8b8 2000 	ldrh.w	r2, [r8]
 801d2b6:	9206      	str	r2, [sp, #24]
 801d2b8:	2201      	movs	r2, #1
 801d2ba:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d2be:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d2c2:	9203      	str	r2, [sp, #12]
 801d2c4:	fa1f f28a 	uxth.w	r2, sl
 801d2c8:	9202      	str	r2, [sp, #8]
 801d2ca:	b2b6      	uxth	r6, r6
 801d2cc:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d2d0:	9200      	str	r2, [sp, #0]
 801d2d2:	9601      	str	r6, [sp, #4]
 801d2d4:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d2d6:	463a      	mov	r2, r7
 801d2d8:	4621      	mov	r1, r4
 801d2da:	47a8      	blx	r5
 801d2dc:	b011      	add	sp, #68	; 0x44
 801d2de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2e2:	6803      	ldr	r3, [r0, #0]
 801d2e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d2e6:	4798      	blx	r3
 801d2e8:	f8b8 2000 	ldrh.w	r2, [r8]
 801d2ec:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d2f0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d2f4:	2dff      	cmp	r5, #255	; 0xff
 801d2f6:	fb02 1303 	mla	r3, r2, r3, r1
 801d2fa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d2fe:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d302:	fb0a fa02 	mul.w	sl, sl, r2
 801d306:	d062      	beq.n	801d3ce <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d308:	ea6f 0c05 	mvn.w	ip, r5
 801d30c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d310:	930a      	str	r3, [sp, #40]	; 0x28
 801d312:	b2ad      	uxth	r5, r5
 801d314:	fa5f fc8c 	uxtb.w	ip, ip
 801d318:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d31c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d31e:	4298      	cmp	r0, r3
 801d320:	f080 8085 	bcs.w	801d42e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d324:	eb00 0b09 	add.w	fp, r0, r9
 801d328:	4558      	cmp	r0, fp
 801d32a:	d246      	bcs.n	801d3ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d32c:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d330:	2303      	movs	r3, #3
 801d332:	2204      	movs	r2, #4
 801d334:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d338:	eb07 0a0e 	add.w	sl, r7, lr
 801d33c:	8803      	ldrh	r3, [r0, #0]
 801d33e:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d342:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d346:	1219      	asrs	r1, r3, #8
 801d348:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d34c:	fb18 f805 	smulbb	r8, r8, r5
 801d350:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d354:	10da      	asrs	r2, r3, #3
 801d356:	fb01 810c 	mla	r1, r1, ip, r8
 801d35a:	00db      	lsls	r3, r3, #3
 801d35c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d360:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d364:	b2db      	uxtb	r3, r3
 801d366:	fb18 f805 	smulbb	r8, r8, r5
 801d36a:	fb1e fe05 	smulbb	lr, lr, r5
 801d36e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d372:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d376:	b289      	uxth	r1, r1
 801d378:	fb02 820c 	mla	r2, r2, ip, r8
 801d37c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d380:	b292      	uxth	r2, r2
 801d382:	b29b      	uxth	r3, r3
 801d384:	f101 0801 	add.w	r8, r1, #1
 801d388:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d38c:	f103 0e01 	add.w	lr, r3, #1
 801d390:	f102 0801 	add.w	r8, r2, #1
 801d394:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d398:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d39c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d3a0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d3a4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d3a8:	ea4e 0101 	orr.w	r1, lr, r1
 801d3ac:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d3b0:	ea41 0108 	orr.w	r1, r1, r8
 801d3b4:	f820 1b02 	strh.w	r1, [r0], #2
 801d3b8:	e7b6      	b.n	801d328 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d3ba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d3bc:	881b      	ldrh	r3, [r3, #0]
 801d3be:	1b9b      	subs	r3, r3, r6
 801d3c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d3c4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d3c8:	1b9b      	subs	r3, r3, r6
 801d3ca:	441c      	add	r4, r3
 801d3cc:	e7a6      	b.n	801d31c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d3ce:	491b      	ldr	r1, [pc, #108]	; (801d43c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d3d0:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d3d4:	2203      	movs	r2, #3
 801d3d6:	2504      	movs	r5, #4
 801d3d8:	4550      	cmp	r0, sl
 801d3da:	d228      	bcs.n	801d42e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d3dc:	eb00 0c09 	add.w	ip, r0, r9
 801d3e0:	4560      	cmp	r0, ip
 801d3e2:	4623      	mov	r3, r4
 801d3e4:	d219      	bcs.n	801d41a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d3e6:	f893 e000 	ldrb.w	lr, [r3]
 801d3ea:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d3ee:	eb07 0b0e 	add.w	fp, r7, lr
 801d3f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d3f6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d3fa:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d3fe:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d402:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d406:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d40a:	ea43 030b 	orr.w	r3, r3, fp
 801d40e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d412:	3401      	adds	r4, #1
 801d414:	f820 3b02 	strh.w	r3, [r0], #2
 801d418:	e7e2      	b.n	801d3e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d41a:	f8b8 3000 	ldrh.w	r3, [r8]
 801d41e:	1b9b      	subs	r3, r3, r6
 801d420:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d424:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d428:	1b9b      	subs	r3, r3, r6
 801d42a:	441c      	add	r4, r3
 801d42c:	e7d4      	b.n	801d3d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d42e:	4b04      	ldr	r3, [pc, #16]	; (801d440 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d430:	6818      	ldr	r0, [r3, #0]
 801d432:	6803      	ldr	r3, [r0, #0]
 801d434:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d436:	4798      	blx	r3
 801d438:	e750      	b.n	801d2dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d43a:	bf00      	nop
 801d43c:	fffff800 	.word	0xfffff800
 801d440:	2000ef1c 	.word	0x2000ef1c
 801d444:	2000ef16 	.word	0x2000ef16

0801d448 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d448:	b4f0      	push	{r4, r5, r6, r7}
 801d44a:	460c      	mov	r4, r1
 801d44c:	4611      	mov	r1, r2
 801d44e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d452:	780f      	ldrb	r7, [r1, #0]
 801d454:	784e      	ldrb	r6, [r1, #1]
 801d456:	2f01      	cmp	r7, #1
 801d458:	461a      	mov	r2, r3
 801d45a:	9b04      	ldr	r3, [sp, #16]
 801d45c:	d036      	beq.n	801d4cc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d45e:	d31e      	bcc.n	801d49e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d460:	2f02      	cmp	r7, #2
 801d462:	d14a      	bne.n	801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d464:	2e03      	cmp	r6, #3
 801d466:	d848      	bhi.n	801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d468:	e8df f006 	tbb	[pc, r6]
 801d46c:	16140702 	.word	0x16140702
 801d470:	9504      	str	r5, [sp, #16]
 801d472:	4620      	mov	r0, r4
 801d474:	bcf0      	pop	{r4, r5, r6, r7}
 801d476:	f7ff be09 	b.w	801d08c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d47a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d47c:	2800      	cmp	r0, #0
 801d47e:	d03c      	beq.n	801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d480:	6806      	ldr	r6, [r0, #0]
 801d482:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d486:	68b5      	ldr	r5, [r6, #8]
 801d488:	4613      	mov	r3, r2
 801d48a:	46ac      	mov	ip, r5
 801d48c:	460a      	mov	r2, r1
 801d48e:	4621      	mov	r1, r4
 801d490:	bcf0      	pop	{r4, r5, r6, r7}
 801d492:	4760      	bx	ip
 801d494:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d496:	e7f1      	b.n	801d47c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d498:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d49c:	e7ee      	b.n	801d47c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d49e:	2e03      	cmp	r6, #3
 801d4a0:	d82b      	bhi.n	801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4a2:	e8df f006 	tbb	[pc, r6]
 801d4a6:	0702      	.short	0x0702
 801d4a8:	100e      	.short	0x100e
 801d4aa:	9504      	str	r5, [sp, #16]
 801d4ac:	4620      	mov	r0, r4
 801d4ae:	bcf0      	pop	{r4, r5, r6, r7}
 801d4b0:	f7ff bd06 	b.w	801cec0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d4b4:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d4b6:	b300      	cbz	r0, 801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4b8:	6806      	ldr	r6, [r0, #0]
 801d4ba:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d4be:	68f5      	ldr	r5, [r6, #12]
 801d4c0:	e7e2      	b.n	801d488 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d4c2:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d4c4:	e7f7      	b.n	801d4b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d4c6:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d4ca:	e7f4      	b.n	801d4b6 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d4cc:	2e03      	cmp	r6, #3
 801d4ce:	d814      	bhi.n	801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4d0:	e8df f006 	tbb	[pc, r6]
 801d4d4:	100e0702 	.word	0x100e0702
 801d4d8:	9504      	str	r5, [sp, #16]
 801d4da:	4620      	mov	r0, r4
 801d4dc:	bcf0      	pop	{r4, r5, r6, r7}
 801d4de:	f7ff bea1 	b.w	801d224 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d4e2:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d4e4:	b148      	cbz	r0, 801d4fa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d4e6:	6806      	ldr	r6, [r0, #0]
 801d4e8:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d4ec:	6935      	ldr	r5, [r6, #16]
 801d4ee:	e7cb      	b.n	801d488 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d4f0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d4f2:	e7f7      	b.n	801d4e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d4f4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d4f8:	e7f4      	b.n	801d4e4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d4fa:	bcf0      	pop	{r4, r5, r6, r7}
 801d4fc:	4770      	bx	lr
	...

0801d500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d504:	4604      	mov	r4, r0
 801d506:	b087      	sub	sp, #28
 801d508:	6810      	ldr	r0, [r2, #0]
 801d50a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d50e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d748 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d512:	460e      	mov	r6, r1
 801d514:	6851      	ldr	r1, [r2, #4]
 801d516:	ad02      	add	r5, sp, #8
 801d518:	c503      	stmia	r5!, {r0, r1}
 801d51a:	6818      	ldr	r0, [r3, #0]
 801d51c:	6859      	ldr	r1, [r3, #4]
 801d51e:	ad04      	add	r5, sp, #16
 801d520:	4617      	mov	r7, r2
 801d522:	c503      	stmia	r5!, {r0, r1}
 801d524:	a802      	add	r0, sp, #8
 801d526:	f7f7 f9b3 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d52a:	4639      	mov	r1, r7
 801d52c:	a804      	add	r0, sp, #16
 801d52e:	f7f7 f9f3 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d532:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d536:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d53a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d53e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d542:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d546:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d54a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d54e:	440e      	add	r6, r1
 801d550:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d554:	440a      	add	r2, r1
 801d556:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d55a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d55e:	4413      	add	r3, r2
 801d560:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d564:	4b77      	ldr	r3, [pc, #476]	; (801d744 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d566:	6818      	ldr	r0, [r3, #0]
 801d568:	6803      	ldr	r3, [r0, #0]
 801d56a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d56c:	4798      	blx	r3
 801d56e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d572:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d576:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d57a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d57e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d582:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d586:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d58a:	fb05 f50b 	mul.w	r5, r5, fp
 801d58e:	9300      	str	r3, [sp, #0]
 801d590:	d069      	beq.n	801d666 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d592:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d596:	4558      	cmp	r0, fp
 801d598:	f080 80cc 	bcs.w	801d734 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d59c:	9b00      	ldr	r3, [sp, #0]
 801d59e:	18c3      	adds	r3, r0, r3
 801d5a0:	9301      	str	r3, [sp, #4]
 801d5a2:	4631      	mov	r1, r6
 801d5a4:	9b01      	ldr	r3, [sp, #4]
 801d5a6:	4298      	cmp	r0, r3
 801d5a8:	d24f      	bcs.n	801d64a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d5aa:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d5ae:	2a00      	cmp	r2, #0
 801d5b0:	d048      	beq.n	801d644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d5b2:	fb0a f202 	mul.w	r2, sl, r2
 801d5b6:	1c53      	adds	r3, r2, #1
 801d5b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d5bc:	121b      	asrs	r3, r3, #8
 801d5be:	d041      	beq.n	801d644 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d5c0:	8802      	ldrh	r2, [r0, #0]
 801d5c2:	f8b4 c000 	ldrh.w	ip, [r4]
 801d5c6:	b29e      	uxth	r6, r3
 801d5c8:	1215      	asrs	r5, r2, #8
 801d5ca:	43db      	mvns	r3, r3
 801d5cc:	b2db      	uxtb	r3, r3
 801d5ce:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d5d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d5d6:	fb15 f503 	smulbb	r5, r5, r3
 801d5da:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d5de:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d5e2:	00d2      	lsls	r2, r2, #3
 801d5e4:	fb07 5706 	mla	r7, r7, r6, r5
 801d5e8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d5ec:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d5f0:	b2d2      	uxtb	r2, r2
 801d5f2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d5f6:	b2bf      	uxth	r7, r7
 801d5f8:	fb1e fe03 	smulbb	lr, lr, r3
 801d5fc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d600:	fa5f fc8c 	uxtb.w	ip, ip
 801d604:	fb12 f203 	smulbb	r2, r2, r3
 801d608:	fb05 e506 	mla	r5, r5, r6, lr
 801d60c:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d610:	f107 0e01 	add.w	lr, r7, #1
 801d614:	fa1f fc8c 	uxth.w	ip, ip
 801d618:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d61c:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d620:	f10c 0701 	add.w	r7, ip, #1
 801d624:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d628:	b2ad      	uxth	r5, r5
 801d62a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d62e:	ea47 070e 	orr.w	r7, r7, lr
 801d632:	f105 0e01 	add.w	lr, r5, #1
 801d636:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d63a:	096d      	lsrs	r5, r5, #5
 801d63c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d640:	432f      	orrs	r7, r5
 801d642:	8007      	strh	r7, [r0, #0]
 801d644:	3002      	adds	r0, #2
 801d646:	3402      	adds	r4, #2
 801d648:	e7ac      	b.n	801d5a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d64a:	f8b9 3000 	ldrh.w	r3, [r9]
 801d64e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d652:	eba3 0308 	sub.w	r3, r3, r8
 801d656:	eba6 0608 	sub.w	r6, r6, r8
 801d65a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d65e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d662:	440e      	add	r6, r1
 801d664:	e797      	b.n	801d596 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d666:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d66a:	42a8      	cmp	r0, r5
 801d66c:	d262      	bcs.n	801d734 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d66e:	9b00      	ldr	r3, [sp, #0]
 801d670:	4631      	mov	r1, r6
 801d672:	eb00 0b03 	add.w	fp, r0, r3
 801d676:	4558      	cmp	r0, fp
 801d678:	d24e      	bcs.n	801d718 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d67a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d67e:	b12b      	cbz	r3, 801d68c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d680:	2bff      	cmp	r3, #255	; 0xff
 801d682:	f8b4 e000 	ldrh.w	lr, [r4]
 801d686:	d104      	bne.n	801d692 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d688:	f8a0 e000 	strh.w	lr, [r0]
 801d68c:	3002      	adds	r0, #2
 801d68e:	3402      	adds	r4, #2
 801d690:	e7f1      	b.n	801d676 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d692:	8802      	ldrh	r2, [r0, #0]
 801d694:	b29f      	uxth	r7, r3
 801d696:	1216      	asrs	r6, r2, #8
 801d698:	43db      	mvns	r3, r3
 801d69a:	b2db      	uxtb	r3, r3
 801d69c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d6a0:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d6a4:	fb16 f603 	smulbb	r6, r6, r3
 801d6a8:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d6ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d6b0:	00d2      	lsls	r2, r2, #3
 801d6b2:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d6b6:	b2d2      	uxtb	r2, r2
 801d6b8:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d6bc:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d6c0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d6c4:	fb1a fa03 	smulbb	sl, sl, r3
 801d6c8:	fa1f fc8c 	uxth.w	ip, ip
 801d6cc:	fb12 f303 	smulbb	r3, r2, r3
 801d6d0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d6d4:	fa5f fe8e 	uxtb.w	lr, lr
 801d6d8:	fb06 a607 	mla	r6, r6, r7, sl
 801d6dc:	f10c 0201 	add.w	r2, ip, #1
 801d6e0:	fb0e 3307 	mla	r3, lr, r7, r3
 801d6e4:	b2b6      	uxth	r6, r6
 801d6e6:	b29b      	uxth	r3, r3
 801d6e8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d6ec:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d6f0:	f106 0a01 	add.w	sl, r6, #1
 801d6f4:	f103 0c01 	add.w	ip, r3, #1
 801d6f8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d6fc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d700:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d704:	0976      	lsrs	r6, r6, #5
 801d706:	ea4c 0c02 	orr.w	ip, ip, r2
 801d70a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d70e:	ea4c 0c06 	orr.w	ip, ip, r6
 801d712:	f8a0 c000 	strh.w	ip, [r0]
 801d716:	e7b9      	b.n	801d68c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d718:	f8b9 3000 	ldrh.w	r3, [r9]
 801d71c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d720:	eba3 0308 	sub.w	r3, r3, r8
 801d724:	eba6 0608 	sub.w	r6, r6, r8
 801d728:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d72c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d730:	440e      	add	r6, r1
 801d732:	e79a      	b.n	801d66a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d734:	4b03      	ldr	r3, [pc, #12]	; (801d744 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d736:	6818      	ldr	r0, [r3, #0]
 801d738:	6803      	ldr	r3, [r0, #0]
 801d73a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d73c:	4798      	blx	r3
 801d73e:	b007      	add	sp, #28
 801d740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d744:	2000ef1c 	.word	0x2000ef1c
 801d748:	2000ef16 	.word	0x2000ef16

0801d74c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d74c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d750:	b089      	sub	sp, #36	; 0x24
 801d752:	4682      	mov	sl, r0
 801d754:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801d758:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d75a:	460f      	mov	r7, r1
 801d75c:	4691      	mov	r9, r2
 801d75e:	4698      	mov	r8, r3
 801d760:	2e00      	cmp	r6, #0
 801d762:	d03d      	beq.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d764:	4608      	mov	r0, r1
 801d766:	f7fa fe59 	bl	801841c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d76a:	4605      	mov	r5, r0
 801d76c:	4638      	mov	r0, r7
 801d76e:	f7fa fe89 	bl	8018484 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d772:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d776:	4638      	mov	r0, r7
 801d778:	f8ad 9008 	strh.w	r9, [sp, #8]
 801d77c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d780:	f8ad 800a 	strh.w	r8, [sp, #10]
 801d784:	f7fa ff36 	bl	80185f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d788:	4605      	mov	r5, r0
 801d78a:	4638      	mov	r0, r7
 801d78c:	f7fa ff62 	bl	8018654 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d790:	4681      	mov	r9, r0
 801d792:	4638      	mov	r0, r7
 801d794:	f7fa ffb2 	bl	80186fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d798:	280b      	cmp	r0, #11
 801d79a:	d821      	bhi.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d79c:	e8df f000 	tbb	[pc, r0]
 801d7a0:	2006aebe 	.word	0x2006aebe
 801d7a4:	20202020 	.word	0x20202020
 801d7a8:	b5202020 	.word	0xb5202020
 801d7ac:	4bb0      	ldr	r3, [pc, #704]	; (801da70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801d7ae:	6818      	ldr	r0, [r3, #0]
 801d7b0:	6803      	ldr	r3, [r0, #0]
 801d7b2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d7b4:	4798      	blx	r3
 801d7b6:	2eff      	cmp	r6, #255	; 0xff
 801d7b8:	d101      	bne.n	801d7be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d7ba:	0683      	lsls	r3, r0, #26
 801d7bc:	d506      	bpl.n	801d7cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801d7be:	4633      	mov	r3, r6
 801d7c0:	4622      	mov	r2, r4
 801d7c2:	a902      	add	r1, sp, #8
 801d7c4:	4628      	mov	r0, r5
 801d7c6:	f7ff f909 	bl	801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d7ca:	e009      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d7cc:	4638      	mov	r0, r7
 801d7ce:	f7fa fed9 	bl	8018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d7d2:	b940      	cbnz	r0, 801d7e6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801d7d4:	4623      	mov	r3, r4
 801d7d6:	aa02      	add	r2, sp, #8
 801d7d8:	4629      	mov	r1, r5
 801d7da:	4650      	mov	r0, sl
 801d7dc:	f7ff f9e4 	bl	801cba8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d7e0:	b009      	add	sp, #36	; 0x24
 801d7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7e6:	f10d 0818 	add.w	r8, sp, #24
 801d7ea:	4639      	mov	r1, r7
 801d7ec:	4640      	mov	r0, r8
 801d7ee:	f7fa fe7d 	bl	80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d7f2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d7f6:	af04      	add	r7, sp, #16
 801d7f8:	e887 0003 	stmia.w	r7, {r0, r1}
 801d7fc:	4638      	mov	r0, r7
 801d7fe:	4621      	mov	r1, r4
 801d800:	f7f1 ffe4 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801d804:	4638      	mov	r0, r7
 801d806:	f7f2 f824 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d80a:	2800      	cmp	r0, #0
 801d80c:	d1d7      	bne.n	801d7be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801d80e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d812:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d816:	4293      	cmp	r3, r2
 801d818:	dd12      	ble.n	801d840 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801d81a:	1a9b      	subs	r3, r3, r2
 801d81c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d820:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d824:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d828:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d82c:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d830:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d834:	4642      	mov	r2, r8
 801d836:	4633      	mov	r3, r6
 801d838:	a902      	add	r1, sp, #8
 801d83a:	4628      	mov	r0, r5
 801d83c:	f7ff f8ce 	bl	801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d840:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d844:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d848:	4293      	cmp	r3, r2
 801d84a:	dd12      	ble.n	801d872 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801d84c:	1a9b      	subs	r3, r3, r2
 801d84e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d852:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d856:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d85a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d85e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d862:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d866:	23ff      	movs	r3, #255	; 0xff
 801d868:	4642      	mov	r2, r8
 801d86a:	a902      	add	r1, sp, #8
 801d86c:	4628      	mov	r0, r5
 801d86e:	f7ff f8b5 	bl	801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d872:	463b      	mov	r3, r7
 801d874:	aa02      	add	r2, sp, #8
 801d876:	4629      	mov	r1, r5
 801d878:	4650      	mov	r0, sl
 801d87a:	f7ff f995 	bl	801cba8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d87e:	88a2      	ldrh	r2, [r4, #4]
 801d880:	8823      	ldrh	r3, [r4, #0]
 801d882:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d886:	4413      	add	r3, r2
 801d888:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d88c:	440a      	add	r2, r1
 801d88e:	b29b      	uxth	r3, r3
 801d890:	b292      	uxth	r2, r2
 801d892:	b211      	sxth	r1, r2
 801d894:	b218      	sxth	r0, r3
 801d896:	4288      	cmp	r0, r1
 801d898:	dd12      	ble.n	801d8c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801d89a:	1a9b      	subs	r3, r3, r2
 801d89c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d8a0:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d8a4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d8a8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d8ac:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d8b0:	23ff      	movs	r3, #255	; 0xff
 801d8b2:	4642      	mov	r2, r8
 801d8b4:	a902      	add	r1, sp, #8
 801d8b6:	4628      	mov	r0, r5
 801d8b8:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d8bc:	f7ff f88e 	bl	801c9dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d8c0:	88e2      	ldrh	r2, [r4, #6]
 801d8c2:	8863      	ldrh	r3, [r4, #2]
 801d8c4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d8c8:	4413      	add	r3, r2
 801d8ca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d8ce:	440a      	add	r2, r1
 801d8d0:	b29b      	uxth	r3, r3
 801d8d2:	b292      	uxth	r2, r2
 801d8d4:	b211      	sxth	r1, r2
 801d8d6:	b218      	sxth	r0, r3
 801d8d8:	4288      	cmp	r0, r1
 801d8da:	dd81      	ble.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d8dc:	1a9b      	subs	r3, r3, r2
 801d8de:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d8e2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d8e6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d8ea:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d8ee:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d8f2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d8f6:	23ff      	movs	r3, #255	; 0xff
 801d8f8:	4642      	mov	r2, r8
 801d8fa:	e762      	b.n	801d7c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801d8fc:	4633      	mov	r3, r6
 801d8fe:	4622      	mov	r2, r4
 801d900:	a902      	add	r1, sp, #8
 801d902:	4628      	mov	r0, r5
 801d904:	f7ff f9c0 	bl	801cc88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d908:	e76a      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d90a:	e9cd 4600 	strd	r4, r6, [sp]
 801d90e:	ab02      	add	r3, sp, #8
 801d910:	464a      	mov	r2, r9
 801d912:	4629      	mov	r1, r5
 801d914:	4650      	mov	r0, sl
 801d916:	f7ff fd97 	bl	801d448 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d91a:	e761      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d91c:	4638      	mov	r0, r7
 801d91e:	f7fa fe31 	bl	8018584 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d922:	b950      	cbnz	r0, 801d93a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801d924:	e9cd 6000 	strd	r6, r0, [sp]
 801d928:	f8da 3000 	ldr.w	r3, [sl]
 801d92c:	aa02      	add	r2, sp, #8
 801d92e:	68de      	ldr	r6, [r3, #12]
 801d930:	4629      	mov	r1, r5
 801d932:	4623      	mov	r3, r4
 801d934:	4650      	mov	r0, sl
 801d936:	47b0      	blx	r6
 801d938:	e752      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d93a:	f10d 0818 	add.w	r8, sp, #24
 801d93e:	4639      	mov	r1, r7
 801d940:	4640      	mov	r0, r8
 801d942:	f7fa fdd3 	bl	80184ec <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d946:	e898 0003 	ldmia.w	r8, {r0, r1}
 801d94a:	af04      	add	r7, sp, #16
 801d94c:	e887 0003 	stmia.w	r7, {r0, r1}
 801d950:	4638      	mov	r0, r7
 801d952:	4621      	mov	r1, r4
 801d954:	f7f1 ff3a 	bl	800f7cc <_ZN8touchgfx4RectaNERKS0_>
 801d958:	4638      	mov	r0, r7
 801d95a:	f7f1 ff7a 	bl	800f852 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d95e:	b138      	cbz	r0, 801d970 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801d960:	9600      	str	r6, [sp, #0]
 801d962:	4623      	mov	r3, r4
 801d964:	aa02      	add	r2, sp, #8
 801d966:	4649      	mov	r1, r9
 801d968:	4628      	mov	r0, r5
 801d96a:	f7ff fdc9 	bl	801d500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d96e:	e737      	b.n	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801d970:	e9cd 6000 	strd	r6, r0, [sp]
 801d974:	f8da 3000 	ldr.w	r3, [sl]
 801d978:	aa02      	add	r2, sp, #8
 801d97a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d97e:	4629      	mov	r1, r5
 801d980:	463b      	mov	r3, r7
 801d982:	4650      	mov	r0, sl
 801d984:	47d8      	blx	fp
 801d986:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d98a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d98e:	4293      	cmp	r3, r2
 801d990:	dd13      	ble.n	801d9ba <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801d992:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d996:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d99a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d99e:	1a9b      	subs	r3, r3, r2
 801d9a0:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d9a4:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d9a8:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d9ac:	9600      	str	r6, [sp, #0]
 801d9ae:	4643      	mov	r3, r8
 801d9b0:	aa02      	add	r2, sp, #8
 801d9b2:	4649      	mov	r1, r9
 801d9b4:	4628      	mov	r0, r5
 801d9b6:	f7ff fda3 	bl	801d500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d9ba:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d9be:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d9c2:	4293      	cmp	r3, r2
 801d9c4:	dd13      	ble.n	801d9ee <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801d9c6:	1a9b      	subs	r3, r3, r2
 801d9c8:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d9cc:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d9d0:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d9d4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d9d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d9dc:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d9e0:	9600      	str	r6, [sp, #0]
 801d9e2:	4643      	mov	r3, r8
 801d9e4:	aa02      	add	r2, sp, #8
 801d9e6:	4649      	mov	r1, r9
 801d9e8:	4628      	mov	r0, r5
 801d9ea:	f7ff fd89 	bl	801d500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d9ee:	88a2      	ldrh	r2, [r4, #4]
 801d9f0:	8823      	ldrh	r3, [r4, #0]
 801d9f2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d9f6:	4413      	add	r3, r2
 801d9f8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d9fc:	440a      	add	r2, r1
 801d9fe:	b29b      	uxth	r3, r3
 801da00:	b292      	uxth	r2, r2
 801da02:	b211      	sxth	r1, r2
 801da04:	b218      	sxth	r0, r3
 801da06:	4288      	cmp	r0, r1
 801da08:	dd13      	ble.n	801da32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801da0a:	1a9b      	subs	r3, r3, r2
 801da0c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801da10:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801da14:	f8ad 1018 	strh.w	r1, [sp, #24]
 801da18:	f8ad 301c 	strh.w	r3, [sp, #28]
 801da1c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801da20:	9600      	str	r6, [sp, #0]
 801da22:	4643      	mov	r3, r8
 801da24:	aa02      	add	r2, sp, #8
 801da26:	4649      	mov	r1, r9
 801da28:	4628      	mov	r0, r5
 801da2a:	f8ad 701a 	strh.w	r7, [sp, #26]
 801da2e:	f7ff fd67 	bl	801d500 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801da32:	88e2      	ldrh	r2, [r4, #6]
 801da34:	8863      	ldrh	r3, [r4, #2]
 801da36:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801da3a:	4413      	add	r3, r2
 801da3c:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801da40:	440a      	add	r2, r1
 801da42:	b29b      	uxth	r3, r3
 801da44:	b292      	uxth	r2, r2
 801da46:	b211      	sxth	r1, r2
 801da48:	b218      	sxth	r0, r3
 801da4a:	4288      	cmp	r0, r1
 801da4c:	f77f aec8 	ble.w	801d7e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da50:	f9b4 7000 	ldrsh.w	r7, [r4]
 801da54:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801da58:	f8ad 7018 	strh.w	r7, [sp, #24]
 801da5c:	1a9b      	subs	r3, r3, r2
 801da5e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801da62:	f8ad 101a 	strh.w	r1, [sp, #26]
 801da66:	f8ad 001c 	strh.w	r0, [sp, #28]
 801da6a:	9600      	str	r6, [sp, #0]
 801da6c:	4643      	mov	r3, r8
 801da6e:	e779      	b.n	801d964 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801da70:	2000ef1c 	.word	0x2000ef1c

0801da74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801da74:	b180      	cbz	r0, 801da98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801da76:	2903      	cmp	r1, #3
 801da78:	d81c      	bhi.n	801dab4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da7a:	e8df f001 	tbb	[pc, r1]
 801da7e:	1d02      	.short	0x1d02
 801da80:	1f08      	.short	0x1f08
 801da82:	4b10      	ldr	r3, [pc, #64]	; (801dac4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da84:	8818      	ldrh	r0, [r3, #0]
 801da86:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da8a:	4240      	negs	r0, r0
 801da8c:	4770      	bx	lr
 801da8e:	4b0d      	ldr	r3, [pc, #52]	; (801dac4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da90:	8818      	ldrh	r0, [r3, #0]
 801da92:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da96:	4770      	bx	lr
 801da98:	2903      	cmp	r1, #3
 801da9a:	d80b      	bhi.n	801dab4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da9c:	a301      	add	r3, pc, #4	; (adr r3, 801daa4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801da9e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801daa2:	bf00      	nop
 801daa4:	0801dab9 	.word	0x0801dab9
 801daa8:	0801da8f 	.word	0x0801da8f
 801daac:	0801dabd 	.word	0x0801dabd
 801dab0:	0801da83 	.word	0x0801da83
 801dab4:	2000      	movs	r0, #0
 801dab6:	4770      	bx	lr
 801dab8:	2001      	movs	r0, #1
 801daba:	4770      	bx	lr
 801dabc:	f04f 30ff 	mov.w	r0, #4294967295
 801dac0:	4770      	bx	lr
 801dac2:	bf00      	nop
 801dac4:	2000ef16 	.word	0x2000ef16

0801dac8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801dac8:	b180      	cbz	r0, 801daec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801daca:	2903      	cmp	r1, #3
 801dacc:	d81c      	bhi.n	801db08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dace:	e8df f001 	tbb	[pc, r1]
 801dad2:	021d      	.short	0x021d
 801dad4:	071f      	.short	0x071f
 801dad6:	4b10      	ldr	r3, [pc, #64]	; (801db18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dad8:	8818      	ldrh	r0, [r3, #0]
 801dada:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dade:	4770      	bx	lr
 801dae0:	4b0d      	ldr	r3, [pc, #52]	; (801db18 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dae2:	8818      	ldrh	r0, [r3, #0]
 801dae4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dae8:	4240      	negs	r0, r0
 801daea:	4770      	bx	lr
 801daec:	2903      	cmp	r1, #3
 801daee:	d80b      	bhi.n	801db08 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801daf0:	a301      	add	r3, pc, #4	; (adr r3, 801daf8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801daf2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801daf6:	bf00      	nop
 801daf8:	0801dad7 	.word	0x0801dad7
 801dafc:	0801db11 	.word	0x0801db11
 801db00:	0801dae1 	.word	0x0801dae1
 801db04:	0801db0d 	.word	0x0801db0d
 801db08:	2000      	movs	r0, #0
 801db0a:	4770      	bx	lr
 801db0c:	2001      	movs	r0, #1
 801db0e:	4770      	bx	lr
 801db10:	f04f 30ff 	mov.w	r0, #4294967295
 801db14:	4770      	bx	lr
 801db16:	bf00      	nop
 801db18:	2000ef16 	.word	0x2000ef16

0801db1c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801db1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801db20:	b099      	sub	sp, #100	; 0x64
 801db22:	910b      	str	r1, [sp, #44]	; 0x2c
 801db24:	a914      	add	r1, sp, #80	; 0x50
 801db26:	e881 000c 	stmia.w	r1, {r2, r3}
 801db2a:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801db2e:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801db32:	f891 900d 	ldrb.w	r9, [r1, #13]
 801db36:	9309      	str	r3, [sp, #36]	; 0x24
 801db38:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801db3c:	9310      	str	r3, [sp, #64]	; 0x40
 801db3e:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801db42:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801db46:	930c      	str	r3, [sp, #48]	; 0x30
 801db48:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801db4c:	798f      	ldrb	r7, [r1, #6]
 801db4e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801db52:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801db56:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801db5a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801db5e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801db62:	431f      	orrs	r7, r3
 801db64:	f000 8195 	beq.w	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db68:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801db6c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801db70:	f891 9007 	ldrb.w	r9, [r1, #7]
 801db74:	ea59 0903 	orrs.w	r9, r9, r3
 801db78:	f000 818b 	beq.w	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db7c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801db80:	b29b      	uxth	r3, r3
 801db82:	2d00      	cmp	r5, #0
 801db84:	f000 812e 	beq.w	801dde4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801db88:	1aed      	subs	r5, r5, r3
 801db8a:	b2ad      	uxth	r5, r5
 801db8c:	042b      	lsls	r3, r5, #16
 801db8e:	d502      	bpl.n	801db96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801db90:	1b64      	subs	r4, r4, r5
 801db92:	b224      	sxth	r4, r4
 801db94:	2500      	movs	r5, #0
 801db96:	f9b2 1000 	ldrsh.w	r1, [r2]
 801db9a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801db9e:	428c      	cmp	r4, r1
 801dba0:	b28b      	uxth	r3, r1
 801dba2:	bfbf      	itttt	lt
 801dba4:	18ed      	addlt	r5, r5, r3
 801dba6:	1b2c      	sublt	r4, r5, r4
 801dba8:	b2a5      	uxthlt	r5, r4
 801dbaa:	460c      	movlt	r4, r1
 801dbac:	8891      	ldrh	r1, [r2, #4]
 801dbae:	440b      	add	r3, r1
 801dbb0:	b21b      	sxth	r3, r3
 801dbb2:	930f      	str	r3, [sp, #60]	; 0x3c
 801dbb4:	88d3      	ldrh	r3, [r2, #6]
 801dbb6:	8852      	ldrh	r2, [r2, #2]
 801dbb8:	4413      	add	r3, r2
 801dbba:	b21b      	sxth	r3, r3
 801dbbc:	930d      	str	r3, [sp, #52]	; 0x34
 801dbbe:	4bbe      	ldr	r3, [pc, #760]	; (801deb8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801dbc0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dbc2:	f893 b000 	ldrb.w	fp, [r3]
 801dbc6:	f10b 3cff 	add.w	ip, fp, #4294967295
 801dbca:	f1dc 0300 	rsbs	r3, ip, #0
 801dbce:	eb43 030c 	adc.w	r3, r3, ip
 801dbd2:	930e      	str	r3, [sp, #56]	; 0x38
 801dbd4:	4621      	mov	r1, r4
 801dbd6:	4653      	mov	r3, sl
 801dbd8:	a814      	add	r0, sp, #80	; 0x50
 801dbda:	f7f6 fcce 	bl	801457a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dbde:	4621      	mov	r1, r4
 801dbe0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801dbe4:	4653      	mov	r3, sl
 801dbe6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dbe8:	a814      	add	r0, sp, #80	; 0x50
 801dbea:	f7f6 fce3 	bl	80145b4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dbee:	a918      	add	r1, sp, #96	; 0x60
 801dbf0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dbf4:	a817      	add	r0, sp, #92	; 0x5c
 801dbf6:	f7f6 fe09 	bl	801480c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dbfa:	f1ba 0f00 	cmp.w	sl, #0
 801dbfe:	f040 80f4 	bne.w	801ddea <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dc02:	f1bb 0f01 	cmp.w	fp, #1
 801dc06:	f040 80f8 	bne.w	801ddfa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801dc0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dc0c:	2b00      	cmp	r3, #0
 801dc0e:	f040 8145 	bne.w	801de9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dc12:	b2ba      	uxth	r2, r7
 801dc14:	b905      	cbnz	r5, 801dc18 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dc16:	b16e      	cbz	r6, 801dc34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dc18:	fb06 5302 	mla	r3, r6, r2, r5
 801dc1c:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dc1e:	fb08 f303 	mul.w	r3, r8, r3
 801dc22:	4631      	mov	r1, r6
 801dc24:	f003 0607 	and.w	r6, r3, #7
 801dc28:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dc2c:	9328      	str	r3, [sp, #160]	; 0xa0
 801dc2e:	eba9 0301 	sub.w	r3, r9, r1
 801dc32:	930a      	str	r3, [sp, #40]	; 0x28
 801dc34:	4651      	mov	r1, sl
 801dc36:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dc38:	f7ff ff1c 	bl	801da74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dc3c:	4681      	mov	r9, r0
 801dc3e:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dc40:	f7ff ff42 	bl	801dac8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dc44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801dc46:	9909      	ldr	r1, [sp, #36]	; 0x24
 801dc48:	eba3 0a01 	sub.w	sl, r3, r1
 801dc4c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dc4e:	459a      	cmp	sl, r3
 801dc50:	bfa8      	it	ge
 801dc52:	469a      	movge	sl, r3
 801dc54:	f1ba 0f00 	cmp.w	sl, #0
 801dc58:	4683      	mov	fp, r0
 801dc5a:	f340 811a 	ble.w	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc5e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dc60:	1b64      	subs	r4, r4, r5
 801dc62:	1b1c      	subs	r4, r3, r4
 801dc64:	42bc      	cmp	r4, r7
 801dc66:	bfd4      	ite	le
 801dc68:	ebc5 0504 	rsble	r5, r5, r4
 801dc6c:	ebc5 0507 	rsbgt	r5, r5, r7
 801dc70:	2d00      	cmp	r5, #0
 801dc72:	f340 810e 	ble.w	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc76:	1b52      	subs	r2, r2, r5
 801dc78:	fb08 f302 	mul.w	r3, r8, r2
 801dc7c:	930f      	str	r3, [sp, #60]	; 0x3c
 801dc7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dc80:	2b00      	cmp	r3, #0
 801dc82:	f040 8116 	bne.w	801deb2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dc86:	4b8d      	ldr	r3, [pc, #564]	; (801debc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dc88:	6818      	ldr	r0, [r3, #0]
 801dc8a:	6803      	ldr	r3, [r0, #0]
 801dc8c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801dc8e:	4798      	blx	r3
 801dc90:	2301      	movs	r3, #1
 801dc92:	fa03 f308 	lsl.w	r3, r3, r8
 801dc96:	4a8a      	ldr	r2, [pc, #552]	; (801dec0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dc98:	3b01      	subs	r3, #1
 801dc9a:	b2db      	uxtb	r3, r3
 801dc9c:	8811      	ldrh	r1, [r2, #0]
 801dc9e:	930e      	str	r3, [sp, #56]	; 0x38
 801dca0:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801dca4:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dca8:	fb01 2303 	mla	r3, r1, r3, r2
 801dcac:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dcb0:	930a      	str	r3, [sp, #40]	; 0x28
 801dcb2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcb4:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dcb8:	9313      	str	r3, [sp, #76]	; 0x4c
 801dcba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcbc:	0a19      	lsrs	r1, r3, #8
 801dcbe:	b2cb      	uxtb	r3, r1
 801dcc0:	9312      	str	r3, [sp, #72]	; 0x48
 801dcc2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcc4:	b2db      	uxtb	r3, r3
 801dcc6:	9311      	str	r3, [sp, #68]	; 0x44
 801dcc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801dcca:	095a      	lsrs	r2, r3, #5
 801dccc:	4b7d      	ldr	r3, [pc, #500]	; (801dec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dcce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dcd2:	400b      	ands	r3, r1
 801dcd4:	4313      	orrs	r3, r2
 801dcd6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801dcd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dcdc:	4313      	orrs	r3, r2
 801dcde:	b29b      	uxth	r3, r3
 801dce0:	9310      	str	r3, [sp, #64]	; 0x40
 801dce2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801dce4:	781a      	ldrb	r2, [r3, #0]
 801dce6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dcea:	4132      	asrs	r2, r6
 801dcec:	fb05 b919 	mls	r9, r5, r9, fp
 801dcf0:	fb03 fb05 	mul.w	fp, r3, r5
 801dcf4:	b2d2      	uxtb	r2, r2
 801dcf6:	930d      	str	r3, [sp, #52]	; 0x34
 801dcf8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dcfc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dd00:	f0c0 80f5 	bcc.w	801deee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dd04:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dd08:	46ae      	mov	lr, r5
 801dd0a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dd0e:	f0c0 80dd 	bcc.w	801decc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dd12:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dd14:	4013      	ands	r3, r2
 801dd16:	d055      	beq.n	801ddc4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dd18:	20ff      	movs	r0, #255	; 0xff
 801dd1a:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dd1c:	fb90 f1f1 	sdiv	r1, r0, r1
 801dd20:	434b      	muls	r3, r1
 801dd22:	2bfe      	cmp	r3, #254	; 0xfe
 801dd24:	dd03      	ble.n	801dd2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dd26:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd28:	4281      	cmp	r1, r0
 801dd2a:	f000 80cd 	beq.w	801dec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dd2e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dd30:	f8bc 4000 	ldrh.w	r4, [ip]
 801dd34:	fb11 f303 	smulbb	r3, r1, r3
 801dd38:	b29b      	uxth	r3, r3
 801dd3a:	1c59      	adds	r1, r3, #1
 801dd3c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dd40:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dd44:	b29f      	uxth	r7, r3
 801dd46:	43db      	mvns	r3, r3
 801dd48:	b2db      	uxtb	r3, r3
 801dd4a:	9309      	str	r3, [sp, #36]	; 0x24
 801dd4c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dd4e:	1220      	asrs	r0, r4, #8
 801dd50:	fb13 f907 	smulbb	r9, r3, r7
 801dd54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd5a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dd5e:	fb00 9003 	mla	r0, r0, r3, r9
 801dd62:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801dd64:	10e1      	asrs	r1, r4, #3
 801dd66:	fb13 f907 	smulbb	r9, r3, r7
 801dd6a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dd6e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd70:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dd74:	fb01 9103 	mla	r1, r1, r3, r9
 801dd78:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801dd7a:	00e4      	lsls	r4, r4, #3
 801dd7c:	fb13 f707 	smulbb	r7, r3, r7
 801dd80:	b2e4      	uxtb	r4, r4
 801dd82:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd84:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dd88:	fb04 7403 	mla	r4, r4, r3, r7
 801dd8c:	b280      	uxth	r0, r0
 801dd8e:	b2a4      	uxth	r4, r4
 801dd90:	1c43      	adds	r3, r0, #1
 801dd92:	f104 0901 	add.w	r9, r4, #1
 801dd96:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dd9a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dd9e:	b289      	uxth	r1, r1
 801dda0:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dda4:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801dda8:	ea49 0000 	orr.w	r0, r9, r0
 801ddac:	f101 0901 	add.w	r9, r1, #1
 801ddb0:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801ddb4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801ddb8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ddbc:	ea40 0009 	orr.w	r0, r0, r9
 801ddc0:	f8ac 0000 	strh.w	r0, [ip]
 801ddc4:	4446      	add	r6, r8
 801ddc6:	b2b6      	uxth	r6, r6
 801ddc8:	2e07      	cmp	r6, #7
 801ddca:	bf81      	itttt	hi
 801ddcc:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801ddce:	785a      	ldrbhi	r2, [r3, #1]
 801ddd0:	3301      	addhi	r3, #1
 801ddd2:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801ddd4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ddd6:	bf9a      	itte	ls
 801ddd8:	fa42 f208 	asrls.w	r2, r2, r8
 801dddc:	b2d2      	uxtbls	r2, r2
 801ddde:	2600      	movhi	r6, #0
 801dde0:	449c      	add	ip, r3
 801dde2:	e792      	b.n	801dd0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801dde4:	441c      	add	r4, r3
 801dde6:	b224      	sxth	r4, r4
 801dde8:	e6d5      	b.n	801db96 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ddea:	f1ba 0f01 	cmp.w	sl, #1
 801ddee:	f47f af0c 	bne.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddf2:	f1bb 0f01 	cmp.w	fp, #1
 801ddf6:	f47f af08 	bne.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddfa:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801debc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ddfe:	f8db 0000 	ldr.w	r0, [fp]
 801de02:	6803      	ldr	r3, [r0, #0]
 801de04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801de06:	4798      	blx	r3
 801de08:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801de0c:	465a      	mov	r2, fp
 801de0e:	d006      	beq.n	801de1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801de10:	f1b8 0f04 	cmp.w	r8, #4
 801de14:	d140      	bne.n	801de98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801de16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801de18:	3300      	adds	r3, #0
 801de1a:	bf18      	it	ne
 801de1c:	2301      	movne	r3, #1
 801de1e:	0580      	lsls	r0, r0, #22
 801de20:	d56e      	bpl.n	801df00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801de22:	f1b8 0f08 	cmp.w	r8, #8
 801de26:	d16b      	bne.n	801df00 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801de28:	2b00      	cmp	r3, #0
 801de2a:	bf0c      	ite	eq
 801de2c:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801de30:	f44f 7180 	movne.w	r1, #256	; 0x100
 801de34:	2d00      	cmp	r5, #0
 801de36:	f47f aee8 	bne.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de3a:	2e00      	cmp	r6, #0
 801de3c:	f47f aee5 	bne.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de40:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801de42:	19e3      	adds	r3, r4, r7
 801de44:	4283      	cmp	r3, r0
 801de46:	f73f aee0 	bgt.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801de4c:	980d      	ldr	r0, [sp, #52]	; 0x34
 801de4e:	444b      	add	r3, r9
 801de50:	4283      	cmp	r3, r0
 801de52:	f73f aeda 	bgt.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de56:	6810      	ldr	r0, [r2, #0]
 801de58:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801de5c:	6804      	ldr	r4, [r0, #0]
 801de5e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801de62:	b2bf      	uxth	r7, r7
 801de64:	f1b8 0f08 	cmp.w	r8, #8
 801de68:	f04f 0500 	mov.w	r5, #0
 801de6c:	bf18      	it	ne
 801de6e:	3701      	addne	r7, #1
 801de70:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801de74:	990c      	ldr	r1, [sp, #48]	; 0x30
 801de76:	9104      	str	r1, [sp, #16]
 801de78:	bf18      	it	ne
 801de7a:	f027 0701 	bicne.w	r7, r7, #1
 801de7e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801de80:	bf18      	it	ne
 801de82:	b2bf      	uxthne	r7, r7
 801de84:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801de88:	e9cd 7900 	strd	r7, r9, [sp]
 801de8c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801de8e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801de90:	47a0      	blx	r4
 801de92:	b019      	add	sp, #100	; 0x64
 801de94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de98:	2300      	movs	r3, #0
 801de9a:	e7c0      	b.n	801de1e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801de9c:	2208      	movs	r2, #8
 801de9e:	fb92 f3f8 	sdiv	r3, r2, r8
 801dea2:	1e5a      	subs	r2, r3, #1
 801dea4:	443a      	add	r2, r7
 801dea6:	fb92 f2f3 	sdiv	r2, r2, r3
 801deaa:	fb12 f203 	smulbb	r2, r2, r3
 801deae:	b292      	uxth	r2, r2
 801deb0:	e6b0      	b.n	801dc14 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801deb2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801deb4:	e6ec      	b.n	801dc90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801deb6:	bf00      	nop
 801deb8:	2000ef14 	.word	0x2000ef14
 801debc:	2000ef1c 	.word	0x2000ef1c
 801dec0:	2000ef16 	.word	0x2000ef16
 801dec4:	00fff800 	.word	0x00fff800
 801dec8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801deca:	e779      	b.n	801ddc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801decc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dece:	b153      	cbz	r3, 801dee6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801ded0:	441e      	add	r6, r3
 801ded2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ded4:	b2b6      	uxth	r6, r6
 801ded6:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801deda:	f006 0607 	and.w	r6, r6, #7
 801dede:	781a      	ldrb	r2, [r3, #0]
 801dee0:	9328      	str	r3, [sp, #160]	; 0xa0
 801dee2:	4132      	asrs	r2, r6
 801dee4:	b2d2      	uxtb	r2, r2
 801dee6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dee8:	445b      	add	r3, fp
 801deea:	930a      	str	r3, [sp, #40]	; 0x28
 801deec:	e706      	b.n	801dcfc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801deee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801def0:	2b00      	cmp	r3, #0
 801def2:	d1ce      	bne.n	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801def4:	4b05      	ldr	r3, [pc, #20]	; (801df0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801def6:	6818      	ldr	r0, [r3, #0]
 801def8:	6803      	ldr	r3, [r0, #0]
 801defa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801defc:	4798      	blx	r3
 801defe:	e7c8      	b.n	801de92 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df00:	2b00      	cmp	r3, #0
 801df02:	f43f ae82 	beq.w	801dc0a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801df06:	f44f 7180 	mov.w	r1, #256	; 0x100
 801df0a:	e793      	b.n	801de34 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801df0c:	2000ef1c 	.word	0x2000ef1c

0801df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801df10:	b538      	push	{r3, r4, r5, lr}
 801df12:	4c15      	ldr	r4, [pc, #84]	; (801df68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801df14:	7823      	ldrb	r3, [r4, #0]
 801df16:	f3bf 8f5b 	dmb	ish
 801df1a:	07da      	lsls	r2, r3, #31
 801df1c:	4605      	mov	r5, r0
 801df1e:	d40b      	bmi.n	801df38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801df20:	4620      	mov	r0, r4
 801df22:	f008 f9ff 	bl	8026324 <__cxa_guard_acquire>
 801df26:	b138      	cbz	r0, 801df38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801df28:	4620      	mov	r0, r4
 801df2a:	f008 fa07 	bl	802633c <__cxa_guard_release>
 801df2e:	4a0f      	ldr	r2, [pc, #60]	; (801df6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df30:	490f      	ldr	r1, [pc, #60]	; (801df70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801df32:	4810      	ldr	r0, [pc, #64]	; (801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df34:	f008 f9ef 	bl	8026316 <__aeabi_atexit>
 801df38:	4c0f      	ldr	r4, [pc, #60]	; (801df78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801df3a:	7823      	ldrb	r3, [r4, #0]
 801df3c:	f3bf 8f5b 	dmb	ish
 801df40:	07db      	lsls	r3, r3, #31
 801df42:	d40b      	bmi.n	801df5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df44:	4620      	mov	r0, r4
 801df46:	f008 f9ed 	bl	8026324 <__cxa_guard_acquire>
 801df4a:	b138      	cbz	r0, 801df5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df4c:	4620      	mov	r0, r4
 801df4e:	f008 f9f5 	bl	802633c <__cxa_guard_release>
 801df52:	4a06      	ldr	r2, [pc, #24]	; (801df6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df54:	4909      	ldr	r1, [pc, #36]	; (801df7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801df56:	480a      	ldr	r0, [pc, #40]	; (801df80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df58:	f008 f9dd 	bl	8026316 <__aeabi_atexit>
 801df5c:	4b05      	ldr	r3, [pc, #20]	; (801df74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df5e:	612b      	str	r3, [r5, #16]
 801df60:	4b07      	ldr	r3, [pc, #28]	; (801df80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df62:	616b      	str	r3, [r5, #20]
 801df64:	bd38      	pop	{r3, r4, r5, pc}
 801df66:	bf00      	nop
 801df68:	2000effc 	.word	0x2000effc
 801df6c:	20000000 	.word	0x20000000
 801df70:	0801ad13 	.word	0x0801ad13
 801df74:	200000ac 	.word	0x200000ac
 801df78:	2000f000 	.word	0x2000f000
 801df7c:	0801ad11 	.word	0x0801ad11
 801df80:	200000b0 	.word	0x200000b0

0801df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801df84:	b538      	push	{r3, r4, r5, lr}
 801df86:	4c15      	ldr	r4, [pc, #84]	; (801dfdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801df88:	7823      	ldrb	r3, [r4, #0]
 801df8a:	f3bf 8f5b 	dmb	ish
 801df8e:	07da      	lsls	r2, r3, #31
 801df90:	4605      	mov	r5, r0
 801df92:	d40b      	bmi.n	801dfac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df94:	4620      	mov	r0, r4
 801df96:	f008 f9c5 	bl	8026324 <__cxa_guard_acquire>
 801df9a:	b138      	cbz	r0, 801dfac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df9c:	4620      	mov	r0, r4
 801df9e:	f008 f9cd 	bl	802633c <__cxa_guard_release>
 801dfa2:	4a0f      	ldr	r2, [pc, #60]	; (801dfe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dfa4:	490f      	ldr	r1, [pc, #60]	; (801dfe4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801dfa6:	4810      	ldr	r0, [pc, #64]	; (801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dfa8:	f008 f9b5 	bl	8026316 <__aeabi_atexit>
 801dfac:	4c0f      	ldr	r4, [pc, #60]	; (801dfec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801dfae:	7823      	ldrb	r3, [r4, #0]
 801dfb0:	f3bf 8f5b 	dmb	ish
 801dfb4:	07db      	lsls	r3, r3, #31
 801dfb6:	d40b      	bmi.n	801dfd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dfb8:	4620      	mov	r0, r4
 801dfba:	f008 f9b3 	bl	8026324 <__cxa_guard_acquire>
 801dfbe:	b138      	cbz	r0, 801dfd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801dfc0:	4620      	mov	r0, r4
 801dfc2:	f008 f9bb 	bl	802633c <__cxa_guard_release>
 801dfc6:	4a06      	ldr	r2, [pc, #24]	; (801dfe0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dfc8:	4909      	ldr	r1, [pc, #36]	; (801dff0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dfca:	480a      	ldr	r0, [pc, #40]	; (801dff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dfcc:	f008 f9a3 	bl	8026316 <__aeabi_atexit>
 801dfd0:	4b05      	ldr	r3, [pc, #20]	; (801dfe8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dfd2:	60ab      	str	r3, [r5, #8]
 801dfd4:	4b07      	ldr	r3, [pc, #28]	; (801dff4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dfd6:	60eb      	str	r3, [r5, #12]
 801dfd8:	bd38      	pop	{r3, r4, r5, pc}
 801dfda:	bf00      	nop
 801dfdc:	2000efd4 	.word	0x2000efd4
 801dfe0:	20000000 	.word	0x20000000
 801dfe4:	0801ad17 	.word	0x0801ad17
 801dfe8:	20000084 	.word	0x20000084
 801dfec:	2000efd8 	.word	0x2000efd8
 801dff0:	0801ad15 	.word	0x0801ad15
 801dff4:	20000088 	.word	0x20000088

0801dff8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dff8:	b510      	push	{r4, lr}
 801dffa:	4604      	mov	r4, r0
 801dffc:	f7ff ff88 	bl	801df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e000:	4620      	mov	r0, r4
 801e002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e006:	f7ff bfbd 	b.w	801df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e00c:	b538      	push	{r3, r4, r5, lr}
 801e00e:	4c15      	ldr	r4, [pc, #84]	; (801e064 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e010:	7823      	ldrb	r3, [r4, #0]
 801e012:	f3bf 8f5b 	dmb	ish
 801e016:	07da      	lsls	r2, r3, #31
 801e018:	4605      	mov	r5, r0
 801e01a:	d40b      	bmi.n	801e034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e01c:	4620      	mov	r0, r4
 801e01e:	f008 f981 	bl	8026324 <__cxa_guard_acquire>
 801e022:	b138      	cbz	r0, 801e034 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e024:	4620      	mov	r0, r4
 801e026:	f008 f989 	bl	802633c <__cxa_guard_release>
 801e02a:	4a0f      	ldr	r2, [pc, #60]	; (801e068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e02c:	490f      	ldr	r1, [pc, #60]	; (801e06c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e02e:	4810      	ldr	r0, [pc, #64]	; (801e070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e030:	f008 f971 	bl	8026316 <__aeabi_atexit>
 801e034:	4c0f      	ldr	r4, [pc, #60]	; (801e074 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e036:	7823      	ldrb	r3, [r4, #0]
 801e038:	f3bf 8f5b 	dmb	ish
 801e03c:	07db      	lsls	r3, r3, #31
 801e03e:	d40b      	bmi.n	801e058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e040:	4620      	mov	r0, r4
 801e042:	f008 f96f 	bl	8026324 <__cxa_guard_acquire>
 801e046:	b138      	cbz	r0, 801e058 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e048:	4620      	mov	r0, r4
 801e04a:	f008 f977 	bl	802633c <__cxa_guard_release>
 801e04e:	4a06      	ldr	r2, [pc, #24]	; (801e068 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e050:	4909      	ldr	r1, [pc, #36]	; (801e078 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e052:	480a      	ldr	r0, [pc, #40]	; (801e07c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e054:	f008 f95f 	bl	8026316 <__aeabi_atexit>
 801e058:	4b05      	ldr	r3, [pc, #20]	; (801e070 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e05a:	622b      	str	r3, [r5, #32]
 801e05c:	4b07      	ldr	r3, [pc, #28]	; (801e07c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e05e:	626b      	str	r3, [r5, #36]	; 0x24
 801e060:	bd38      	pop	{r3, r4, r5, pc}
 801e062:	bf00      	nop
 801e064:	2000f004 	.word	0x2000f004
 801e068:	20000000 	.word	0x20000000
 801e06c:	0801ad0b 	.word	0x0801ad0b
 801e070:	200000b4 	.word	0x200000b4
 801e074:	2000f008 	.word	0x2000f008
 801e078:	0801ad09 	.word	0x0801ad09
 801e07c:	200000b8 	.word	0x200000b8

0801e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e080:	b538      	push	{r3, r4, r5, lr}
 801e082:	4c15      	ldr	r4, [pc, #84]	; (801e0d8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e084:	7823      	ldrb	r3, [r4, #0]
 801e086:	f3bf 8f5b 	dmb	ish
 801e08a:	07da      	lsls	r2, r3, #31
 801e08c:	4605      	mov	r5, r0
 801e08e:	d40b      	bmi.n	801e0a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e090:	4620      	mov	r0, r4
 801e092:	f008 f947 	bl	8026324 <__cxa_guard_acquire>
 801e096:	b138      	cbz	r0, 801e0a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e098:	4620      	mov	r0, r4
 801e09a:	f008 f94f 	bl	802633c <__cxa_guard_release>
 801e09e:	4a0f      	ldr	r2, [pc, #60]	; (801e0dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e0a0:	490f      	ldr	r1, [pc, #60]	; (801e0e0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e0a2:	4810      	ldr	r0, [pc, #64]	; (801e0e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e0a4:	f008 f937 	bl	8026316 <__aeabi_atexit>
 801e0a8:	4c0f      	ldr	r4, [pc, #60]	; (801e0e8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e0aa:	7823      	ldrb	r3, [r4, #0]
 801e0ac:	f3bf 8f5b 	dmb	ish
 801e0b0:	07db      	lsls	r3, r3, #31
 801e0b2:	d40b      	bmi.n	801e0cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e0b4:	4620      	mov	r0, r4
 801e0b6:	f008 f935 	bl	8026324 <__cxa_guard_acquire>
 801e0ba:	b138      	cbz	r0, 801e0cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e0bc:	4620      	mov	r0, r4
 801e0be:	f008 f93d 	bl	802633c <__cxa_guard_release>
 801e0c2:	4a06      	ldr	r2, [pc, #24]	; (801e0dc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e0c4:	4909      	ldr	r1, [pc, #36]	; (801e0ec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e0c6:	480a      	ldr	r0, [pc, #40]	; (801e0f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e0c8:	f008 f925 	bl	8026316 <__aeabi_atexit>
 801e0cc:	4b05      	ldr	r3, [pc, #20]	; (801e0e4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e0ce:	61ab      	str	r3, [r5, #24]
 801e0d0:	4b07      	ldr	r3, [pc, #28]	; (801e0f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e0d2:	61eb      	str	r3, [r5, #28]
 801e0d4:	bd38      	pop	{r3, r4, r5, pc}
 801e0d6:	bf00      	nop
 801e0d8:	2000efdc 	.word	0x2000efdc
 801e0dc:	20000000 	.word	0x20000000
 801e0e0:	0801ad0f 	.word	0x0801ad0f
 801e0e4:	2000008c 	.word	0x2000008c
 801e0e8:	2000efe0 	.word	0x2000efe0
 801e0ec:	0801ad0d 	.word	0x0801ad0d
 801e0f0:	20000090 	.word	0x20000090

0801e0f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e0f4:	b510      	push	{r4, lr}
 801e0f6:	4604      	mov	r4, r0
 801e0f8:	f7ff ff88 	bl	801e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e0fc:	4620      	mov	r0, r4
 801e0fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e102:	f7ff bfbd 	b.w	801e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e108:	b538      	push	{r3, r4, r5, lr}
 801e10a:	4c15      	ldr	r4, [pc, #84]	; (801e160 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e10c:	7823      	ldrb	r3, [r4, #0]
 801e10e:	f3bf 8f5b 	dmb	ish
 801e112:	07da      	lsls	r2, r3, #31
 801e114:	4605      	mov	r5, r0
 801e116:	d40b      	bmi.n	801e130 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e118:	4620      	mov	r0, r4
 801e11a:	f008 f903 	bl	8026324 <__cxa_guard_acquire>
 801e11e:	b138      	cbz	r0, 801e130 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e120:	4620      	mov	r0, r4
 801e122:	f008 f90b 	bl	802633c <__cxa_guard_release>
 801e126:	4a0f      	ldr	r2, [pc, #60]	; (801e164 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e128:	490f      	ldr	r1, [pc, #60]	; (801e168 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e12a:	4810      	ldr	r0, [pc, #64]	; (801e16c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e12c:	f008 f8f3 	bl	8026316 <__aeabi_atexit>
 801e130:	4c0f      	ldr	r4, [pc, #60]	; (801e170 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e132:	7823      	ldrb	r3, [r4, #0]
 801e134:	f3bf 8f5b 	dmb	ish
 801e138:	07db      	lsls	r3, r3, #31
 801e13a:	d40b      	bmi.n	801e154 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e13c:	4620      	mov	r0, r4
 801e13e:	f008 f8f1 	bl	8026324 <__cxa_guard_acquire>
 801e142:	b138      	cbz	r0, 801e154 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e144:	4620      	mov	r0, r4
 801e146:	f008 f8f9 	bl	802633c <__cxa_guard_release>
 801e14a:	4a06      	ldr	r2, [pc, #24]	; (801e164 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e14c:	4909      	ldr	r1, [pc, #36]	; (801e174 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e14e:	480a      	ldr	r0, [pc, #40]	; (801e178 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e150:	f008 f8e1 	bl	8026316 <__aeabi_atexit>
 801e154:	4b05      	ldr	r3, [pc, #20]	; (801e16c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e156:	632b      	str	r3, [r5, #48]	; 0x30
 801e158:	4b07      	ldr	r3, [pc, #28]	; (801e178 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e15a:	636b      	str	r3, [r5, #52]	; 0x34
 801e15c:	bd38      	pop	{r3, r4, r5, pc}
 801e15e:	bf00      	nop
 801e160:	2000f014 	.word	0x2000f014
 801e164:	20000000 	.word	0x20000000
 801e168:	0801ad03 	.word	0x0801ad03
 801e16c:	200000c4 	.word	0x200000c4
 801e170:	2000f018 	.word	0x2000f018
 801e174:	0801ad01 	.word	0x0801ad01
 801e178:	200000c8 	.word	0x200000c8

0801e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e17c:	b538      	push	{r3, r4, r5, lr}
 801e17e:	4c15      	ldr	r4, [pc, #84]	; (801e1d4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e180:	7823      	ldrb	r3, [r4, #0]
 801e182:	f3bf 8f5b 	dmb	ish
 801e186:	07da      	lsls	r2, r3, #31
 801e188:	4605      	mov	r5, r0
 801e18a:	d40b      	bmi.n	801e1a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e18c:	4620      	mov	r0, r4
 801e18e:	f008 f8c9 	bl	8026324 <__cxa_guard_acquire>
 801e192:	b138      	cbz	r0, 801e1a4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e194:	4620      	mov	r0, r4
 801e196:	f008 f8d1 	bl	802633c <__cxa_guard_release>
 801e19a:	4a0f      	ldr	r2, [pc, #60]	; (801e1d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e19c:	490f      	ldr	r1, [pc, #60]	; (801e1dc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e19e:	4810      	ldr	r0, [pc, #64]	; (801e1e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e1a0:	f008 f8b9 	bl	8026316 <__aeabi_atexit>
 801e1a4:	4c0f      	ldr	r4, [pc, #60]	; (801e1e4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e1a6:	7823      	ldrb	r3, [r4, #0]
 801e1a8:	f3bf 8f5b 	dmb	ish
 801e1ac:	07db      	lsls	r3, r3, #31
 801e1ae:	d40b      	bmi.n	801e1c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e1b0:	4620      	mov	r0, r4
 801e1b2:	f008 f8b7 	bl	8026324 <__cxa_guard_acquire>
 801e1b6:	b138      	cbz	r0, 801e1c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e1b8:	4620      	mov	r0, r4
 801e1ba:	f008 f8bf 	bl	802633c <__cxa_guard_release>
 801e1be:	4a06      	ldr	r2, [pc, #24]	; (801e1d8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e1c0:	4909      	ldr	r1, [pc, #36]	; (801e1e8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e1c2:	480a      	ldr	r0, [pc, #40]	; (801e1ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e1c4:	f008 f8a7 	bl	8026316 <__aeabi_atexit>
 801e1c8:	4b05      	ldr	r3, [pc, #20]	; (801e1e0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e1ca:	62ab      	str	r3, [r5, #40]	; 0x28
 801e1cc:	4b07      	ldr	r3, [pc, #28]	; (801e1ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e1ce:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e1d0:	bd38      	pop	{r3, r4, r5, pc}
 801e1d2:	bf00      	nop
 801e1d4:	2000efe4 	.word	0x2000efe4
 801e1d8:	20000000 	.word	0x20000000
 801e1dc:	0801ad07 	.word	0x0801ad07
 801e1e0:	20000094 	.word	0x20000094
 801e1e4:	2000efe8 	.word	0x2000efe8
 801e1e8:	0801ad05 	.word	0x0801ad05
 801e1ec:	20000098 	.word	0x20000098

0801e1f0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e1f0:	b510      	push	{r4, lr}
 801e1f2:	4604      	mov	r4, r0
 801e1f4:	f7ff ff88 	bl	801e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e1f8:	4620      	mov	r0, r4
 801e1fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e1fe:	f7ff bfbd 	b.w	801e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e204:	b538      	push	{r3, r4, r5, lr}
 801e206:	4c15      	ldr	r4, [pc, #84]	; (801e25c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e208:	7823      	ldrb	r3, [r4, #0]
 801e20a:	f3bf 8f5b 	dmb	ish
 801e20e:	07da      	lsls	r2, r3, #31
 801e210:	4605      	mov	r5, r0
 801e212:	d40b      	bmi.n	801e22c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e214:	4620      	mov	r0, r4
 801e216:	f008 f885 	bl	8026324 <__cxa_guard_acquire>
 801e21a:	b138      	cbz	r0, 801e22c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e21c:	4620      	mov	r0, r4
 801e21e:	f008 f88d 	bl	802633c <__cxa_guard_release>
 801e222:	4a0f      	ldr	r2, [pc, #60]	; (801e260 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e224:	490f      	ldr	r1, [pc, #60]	; (801e264 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e226:	4810      	ldr	r0, [pc, #64]	; (801e268 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e228:	f008 f875 	bl	8026316 <__aeabi_atexit>
 801e22c:	4c0f      	ldr	r4, [pc, #60]	; (801e26c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e22e:	7823      	ldrb	r3, [r4, #0]
 801e230:	f3bf 8f5b 	dmb	ish
 801e234:	07db      	lsls	r3, r3, #31
 801e236:	d40b      	bmi.n	801e250 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e238:	4620      	mov	r0, r4
 801e23a:	f008 f873 	bl	8026324 <__cxa_guard_acquire>
 801e23e:	b138      	cbz	r0, 801e250 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e240:	4620      	mov	r0, r4
 801e242:	f008 f87b 	bl	802633c <__cxa_guard_release>
 801e246:	4a06      	ldr	r2, [pc, #24]	; (801e260 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e248:	4909      	ldr	r1, [pc, #36]	; (801e270 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e24a:	480a      	ldr	r0, [pc, #40]	; (801e274 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e24c:	f008 f863 	bl	8026316 <__aeabi_atexit>
 801e250:	4b05      	ldr	r3, [pc, #20]	; (801e268 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e252:	652b      	str	r3, [r5, #80]	; 0x50
 801e254:	4b07      	ldr	r3, [pc, #28]	; (801e274 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e256:	656b      	str	r3, [r5, #84]	; 0x54
 801e258:	bd38      	pop	{r3, r4, r5, pc}
 801e25a:	bf00      	nop
 801e25c:	2000f01c 	.word	0x2000f01c
 801e260:	20000000 	.word	0x20000000
 801e264:	0801acf3 	.word	0x0801acf3
 801e268:	200000cc 	.word	0x200000cc
 801e26c:	2000f020 	.word	0x2000f020
 801e270:	0801acf1 	.word	0x0801acf1
 801e274:	200000d0 	.word	0x200000d0

0801e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e278:	b538      	push	{r3, r4, r5, lr}
 801e27a:	4c15      	ldr	r4, [pc, #84]	; (801e2d0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e27c:	7823      	ldrb	r3, [r4, #0]
 801e27e:	f3bf 8f5b 	dmb	ish
 801e282:	07da      	lsls	r2, r3, #31
 801e284:	4605      	mov	r5, r0
 801e286:	d40b      	bmi.n	801e2a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e288:	4620      	mov	r0, r4
 801e28a:	f008 f84b 	bl	8026324 <__cxa_guard_acquire>
 801e28e:	b138      	cbz	r0, 801e2a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e290:	4620      	mov	r0, r4
 801e292:	f008 f853 	bl	802633c <__cxa_guard_release>
 801e296:	4a0f      	ldr	r2, [pc, #60]	; (801e2d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e298:	490f      	ldr	r1, [pc, #60]	; (801e2d8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e29a:	4810      	ldr	r0, [pc, #64]	; (801e2dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e29c:	f008 f83b 	bl	8026316 <__aeabi_atexit>
 801e2a0:	4c0f      	ldr	r4, [pc, #60]	; (801e2e0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e2a2:	7823      	ldrb	r3, [r4, #0]
 801e2a4:	f3bf 8f5b 	dmb	ish
 801e2a8:	07db      	lsls	r3, r3, #31
 801e2aa:	d40b      	bmi.n	801e2c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e2ac:	4620      	mov	r0, r4
 801e2ae:	f008 f839 	bl	8026324 <__cxa_guard_acquire>
 801e2b2:	b138      	cbz	r0, 801e2c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e2b4:	4620      	mov	r0, r4
 801e2b6:	f008 f841 	bl	802633c <__cxa_guard_release>
 801e2ba:	4a06      	ldr	r2, [pc, #24]	; (801e2d4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e2bc:	4909      	ldr	r1, [pc, #36]	; (801e2e4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e2be:	480a      	ldr	r0, [pc, #40]	; (801e2e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e2c0:	f008 f829 	bl	8026316 <__aeabi_atexit>
 801e2c4:	4b05      	ldr	r3, [pc, #20]	; (801e2dc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e2c6:	64ab      	str	r3, [r5, #72]	; 0x48
 801e2c8:	4b07      	ldr	r3, [pc, #28]	; (801e2e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e2ca:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e2cc:	bd38      	pop	{r3, r4, r5, pc}
 801e2ce:	bf00      	nop
 801e2d0:	2000f024 	.word	0x2000f024
 801e2d4:	20000000 	.word	0x20000000
 801e2d8:	0801acf7 	.word	0x0801acf7
 801e2dc:	200000d4 	.word	0x200000d4
 801e2e0:	2000f028 	.word	0x2000f028
 801e2e4:	0801acf5 	.word	0x0801acf5
 801e2e8:	200000d8 	.word	0x200000d8

0801e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e2ec:	b538      	push	{r3, r4, r5, lr}
 801e2ee:	4c15      	ldr	r4, [pc, #84]	; (801e344 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e2f0:	7823      	ldrb	r3, [r4, #0]
 801e2f2:	f3bf 8f5b 	dmb	ish
 801e2f6:	07da      	lsls	r2, r3, #31
 801e2f8:	4605      	mov	r5, r0
 801e2fa:	d40b      	bmi.n	801e314 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e2fc:	4620      	mov	r0, r4
 801e2fe:	f008 f811 	bl	8026324 <__cxa_guard_acquire>
 801e302:	b138      	cbz	r0, 801e314 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e304:	4620      	mov	r0, r4
 801e306:	f008 f819 	bl	802633c <__cxa_guard_release>
 801e30a:	4a0f      	ldr	r2, [pc, #60]	; (801e348 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e30c:	490f      	ldr	r1, [pc, #60]	; (801e34c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e30e:	4810      	ldr	r0, [pc, #64]	; (801e350 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e310:	f008 f801 	bl	8026316 <__aeabi_atexit>
 801e314:	4c0f      	ldr	r4, [pc, #60]	; (801e354 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e316:	7823      	ldrb	r3, [r4, #0]
 801e318:	f3bf 8f5b 	dmb	ish
 801e31c:	07db      	lsls	r3, r3, #31
 801e31e:	d40b      	bmi.n	801e338 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e320:	4620      	mov	r0, r4
 801e322:	f007 ffff 	bl	8026324 <__cxa_guard_acquire>
 801e326:	b138      	cbz	r0, 801e338 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e328:	4620      	mov	r0, r4
 801e32a:	f008 f807 	bl	802633c <__cxa_guard_release>
 801e32e:	4a06      	ldr	r2, [pc, #24]	; (801e348 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e330:	4909      	ldr	r1, [pc, #36]	; (801e358 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e332:	480a      	ldr	r0, [pc, #40]	; (801e35c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e334:	f007 ffef 	bl	8026316 <__aeabi_atexit>
 801e338:	4b05      	ldr	r3, [pc, #20]	; (801e350 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e33a:	642b      	str	r3, [r5, #64]	; 0x40
 801e33c:	4b07      	ldr	r3, [pc, #28]	; (801e35c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e33e:	646b      	str	r3, [r5, #68]	; 0x44
 801e340:	bd38      	pop	{r3, r4, r5, pc}
 801e342:	bf00      	nop
 801e344:	2000efec 	.word	0x2000efec
 801e348:	20000000 	.word	0x20000000
 801e34c:	0801acfb 	.word	0x0801acfb
 801e350:	2000009c 	.word	0x2000009c
 801e354:	2000eff0 	.word	0x2000eff0
 801e358:	0801acf9 	.word	0x0801acf9
 801e35c:	200000a0 	.word	0x200000a0

0801e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e360:	b538      	push	{r3, r4, r5, lr}
 801e362:	4c15      	ldr	r4, [pc, #84]	; (801e3b8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e364:	7823      	ldrb	r3, [r4, #0]
 801e366:	f3bf 8f5b 	dmb	ish
 801e36a:	07da      	lsls	r2, r3, #31
 801e36c:	4605      	mov	r5, r0
 801e36e:	d40b      	bmi.n	801e388 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e370:	4620      	mov	r0, r4
 801e372:	f007 ffd7 	bl	8026324 <__cxa_guard_acquire>
 801e376:	b138      	cbz	r0, 801e388 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e378:	4620      	mov	r0, r4
 801e37a:	f007 ffdf 	bl	802633c <__cxa_guard_release>
 801e37e:	4a0f      	ldr	r2, [pc, #60]	; (801e3bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e380:	490f      	ldr	r1, [pc, #60]	; (801e3c0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e382:	4810      	ldr	r0, [pc, #64]	; (801e3c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e384:	f007 ffc7 	bl	8026316 <__aeabi_atexit>
 801e388:	4c0f      	ldr	r4, [pc, #60]	; (801e3c8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e38a:	7823      	ldrb	r3, [r4, #0]
 801e38c:	f3bf 8f5b 	dmb	ish
 801e390:	07db      	lsls	r3, r3, #31
 801e392:	d40b      	bmi.n	801e3ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e394:	4620      	mov	r0, r4
 801e396:	f007 ffc5 	bl	8026324 <__cxa_guard_acquire>
 801e39a:	b138      	cbz	r0, 801e3ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e39c:	4620      	mov	r0, r4
 801e39e:	f007 ffcd 	bl	802633c <__cxa_guard_release>
 801e3a2:	4a06      	ldr	r2, [pc, #24]	; (801e3bc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e3a4:	4909      	ldr	r1, [pc, #36]	; (801e3cc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e3a6:	480a      	ldr	r0, [pc, #40]	; (801e3d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e3a8:	f007 ffb5 	bl	8026316 <__aeabi_atexit>
 801e3ac:	4b05      	ldr	r3, [pc, #20]	; (801e3c4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e3ae:	63ab      	str	r3, [r5, #56]	; 0x38
 801e3b0:	4b07      	ldr	r3, [pc, #28]	; (801e3d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e3b2:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e3b4:	bd38      	pop	{r3, r4, r5, pc}
 801e3b6:	bf00      	nop
 801e3b8:	2000f00c 	.word	0x2000f00c
 801e3bc:	20000000 	.word	0x20000000
 801e3c0:	0801acff 	.word	0x0801acff
 801e3c4:	200000bc 	.word	0x200000bc
 801e3c8:	2000f010 	.word	0x2000f010
 801e3cc:	0801acfd 	.word	0x0801acfd
 801e3d0:	200000c0 	.word	0x200000c0

0801e3d4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e3d4:	b510      	push	{r4, lr}
 801e3d6:	4604      	mov	r4, r0
 801e3d8:	f7ff ff14 	bl	801e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f7ff ff85 	bl	801e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e3e2:	4620      	mov	r0, r4
 801e3e4:	f7ff ff48 	bl	801e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e3e8:	4620      	mov	r0, r4
 801e3ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3ee:	f7ff bfb7 	b.w	801e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e3f4:	b538      	push	{r3, r4, r5, lr}
 801e3f6:	4c15      	ldr	r4, [pc, #84]	; (801e44c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e3f8:	7823      	ldrb	r3, [r4, #0]
 801e3fa:	f3bf 8f5b 	dmb	ish
 801e3fe:	07da      	lsls	r2, r3, #31
 801e400:	4605      	mov	r5, r0
 801e402:	d40b      	bmi.n	801e41c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e404:	4620      	mov	r0, r4
 801e406:	f007 ff8d 	bl	8026324 <__cxa_guard_acquire>
 801e40a:	b138      	cbz	r0, 801e41c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e40c:	4620      	mov	r0, r4
 801e40e:	f007 ff95 	bl	802633c <__cxa_guard_release>
 801e412:	4a0f      	ldr	r2, [pc, #60]	; (801e450 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e414:	490f      	ldr	r1, [pc, #60]	; (801e454 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e416:	4810      	ldr	r0, [pc, #64]	; (801e458 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e418:	f007 ff7d 	bl	8026316 <__aeabi_atexit>
 801e41c:	4c0f      	ldr	r4, [pc, #60]	; (801e45c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e41e:	7823      	ldrb	r3, [r4, #0]
 801e420:	f3bf 8f5b 	dmb	ish
 801e424:	07db      	lsls	r3, r3, #31
 801e426:	d40b      	bmi.n	801e440 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e428:	4620      	mov	r0, r4
 801e42a:	f007 ff7b 	bl	8026324 <__cxa_guard_acquire>
 801e42e:	b138      	cbz	r0, 801e440 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e430:	4620      	mov	r0, r4
 801e432:	f007 ff83 	bl	802633c <__cxa_guard_release>
 801e436:	4a06      	ldr	r2, [pc, #24]	; (801e450 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e438:	4909      	ldr	r1, [pc, #36]	; (801e460 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e43a:	480a      	ldr	r0, [pc, #40]	; (801e464 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e43c:	f007 ff6b 	bl	8026316 <__aeabi_atexit>
 801e440:	4b05      	ldr	r3, [pc, #20]	; (801e458 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e442:	662b      	str	r3, [r5, #96]	; 0x60
 801e444:	4b07      	ldr	r3, [pc, #28]	; (801e464 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e446:	666b      	str	r3, [r5, #100]	; 0x64
 801e448:	bd38      	pop	{r3, r4, r5, pc}
 801e44a:	bf00      	nop
 801e44c:	2000eff4 	.word	0x2000eff4
 801e450:	20000000 	.word	0x20000000
 801e454:	0801aceb 	.word	0x0801aceb
 801e458:	200000a4 	.word	0x200000a4
 801e45c:	2000eff8 	.word	0x2000eff8
 801e460:	0801ace9 	.word	0x0801ace9
 801e464:	200000a8 	.word	0x200000a8

0801e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e468:	b538      	push	{r3, r4, r5, lr}
 801e46a:	4c15      	ldr	r4, [pc, #84]	; (801e4c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e46c:	7823      	ldrb	r3, [r4, #0]
 801e46e:	f3bf 8f5b 	dmb	ish
 801e472:	07da      	lsls	r2, r3, #31
 801e474:	4605      	mov	r5, r0
 801e476:	d40b      	bmi.n	801e490 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e478:	4620      	mov	r0, r4
 801e47a:	f007 ff53 	bl	8026324 <__cxa_guard_acquire>
 801e47e:	b138      	cbz	r0, 801e490 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e480:	4620      	mov	r0, r4
 801e482:	f007 ff5b 	bl	802633c <__cxa_guard_release>
 801e486:	4a0f      	ldr	r2, [pc, #60]	; (801e4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e488:	490f      	ldr	r1, [pc, #60]	; (801e4c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e48a:	4810      	ldr	r0, [pc, #64]	; (801e4cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e48c:	f007 ff43 	bl	8026316 <__aeabi_atexit>
 801e490:	4c0f      	ldr	r4, [pc, #60]	; (801e4d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e492:	7823      	ldrb	r3, [r4, #0]
 801e494:	f3bf 8f5b 	dmb	ish
 801e498:	07db      	lsls	r3, r3, #31
 801e49a:	d40b      	bmi.n	801e4b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e49c:	4620      	mov	r0, r4
 801e49e:	f007 ff41 	bl	8026324 <__cxa_guard_acquire>
 801e4a2:	b138      	cbz	r0, 801e4b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e4a4:	4620      	mov	r0, r4
 801e4a6:	f007 ff49 	bl	802633c <__cxa_guard_release>
 801e4aa:	4a06      	ldr	r2, [pc, #24]	; (801e4c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e4ac:	4909      	ldr	r1, [pc, #36]	; (801e4d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e4ae:	480a      	ldr	r0, [pc, #40]	; (801e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e4b0:	f007 ff31 	bl	8026316 <__aeabi_atexit>
 801e4b4:	4b05      	ldr	r3, [pc, #20]	; (801e4cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e4b6:	65ab      	str	r3, [r5, #88]	; 0x58
 801e4b8:	4b07      	ldr	r3, [pc, #28]	; (801e4d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e4ba:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e4bc:	bd38      	pop	{r3, r4, r5, pc}
 801e4be:	bf00      	nop
 801e4c0:	2000efcc 	.word	0x2000efcc
 801e4c4:	20000000 	.word	0x20000000
 801e4c8:	0801acef 	.word	0x0801acef
 801e4cc:	2000007c 	.word	0x2000007c
 801e4d0:	2000efd0 	.word	0x2000efd0
 801e4d4:	0801aced 	.word	0x0801aced
 801e4d8:	20000080 	.word	0x20000080

0801e4dc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e4dc:	b510      	push	{r4, lr}
 801e4de:	4604      	mov	r4, r0
 801e4e0:	f7ff ff88 	bl	801e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e4e4:	4620      	mov	r0, r4
 801e4e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4ea:	f7ff bfbd 	b.w	801e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e4f0:	b538      	push	{r3, r4, r5, lr}
 801e4f2:	4c15      	ldr	r4, [pc, #84]	; (801e548 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e4f4:	7823      	ldrb	r3, [r4, #0]
 801e4f6:	f3bf 8f5b 	dmb	ish
 801e4fa:	07da      	lsls	r2, r3, #31
 801e4fc:	4605      	mov	r5, r0
 801e4fe:	d40b      	bmi.n	801e518 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e500:	4620      	mov	r0, r4
 801e502:	f007 ff0f 	bl	8026324 <__cxa_guard_acquire>
 801e506:	b138      	cbz	r0, 801e518 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e508:	4620      	mov	r0, r4
 801e50a:	f007 ff17 	bl	802633c <__cxa_guard_release>
 801e50e:	4a0f      	ldr	r2, [pc, #60]	; (801e54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e510:	490f      	ldr	r1, [pc, #60]	; (801e550 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e512:	4810      	ldr	r0, [pc, #64]	; (801e554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e514:	f007 feff 	bl	8026316 <__aeabi_atexit>
 801e518:	4c0f      	ldr	r4, [pc, #60]	; (801e558 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e51a:	7823      	ldrb	r3, [r4, #0]
 801e51c:	f3bf 8f5b 	dmb	ish
 801e520:	07db      	lsls	r3, r3, #31
 801e522:	d40b      	bmi.n	801e53c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e524:	4620      	mov	r0, r4
 801e526:	f007 fefd 	bl	8026324 <__cxa_guard_acquire>
 801e52a:	b138      	cbz	r0, 801e53c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e52c:	4620      	mov	r0, r4
 801e52e:	f007 ff05 	bl	802633c <__cxa_guard_release>
 801e532:	4a06      	ldr	r2, [pc, #24]	; (801e54c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e534:	4909      	ldr	r1, [pc, #36]	; (801e55c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e536:	480a      	ldr	r0, [pc, #40]	; (801e560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e538:	f007 feed 	bl	8026316 <__aeabi_atexit>
 801e53c:	4b05      	ldr	r3, [pc, #20]	; (801e554 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e53e:	672b      	str	r3, [r5, #112]	; 0x70
 801e540:	4b07      	ldr	r3, [pc, #28]	; (801e560 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e542:	676b      	str	r3, [r5, #116]	; 0x74
 801e544:	bd38      	pop	{r3, r4, r5, pc}
 801e546:	bf00      	nop
 801e548:	2000efc4 	.word	0x2000efc4
 801e54c:	20000000 	.word	0x20000000
 801e550:	0801ace3 	.word	0x0801ace3
 801e554:	20000074 	.word	0x20000074
 801e558:	2000efc8 	.word	0x2000efc8
 801e55c:	0801ace1 	.word	0x0801ace1
 801e560:	20000078 	.word	0x20000078

0801e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e564:	b538      	push	{r3, r4, r5, lr}
 801e566:	4c15      	ldr	r4, [pc, #84]	; (801e5bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e568:	7823      	ldrb	r3, [r4, #0]
 801e56a:	f3bf 8f5b 	dmb	ish
 801e56e:	07da      	lsls	r2, r3, #31
 801e570:	4605      	mov	r5, r0
 801e572:	d40b      	bmi.n	801e58c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e574:	4620      	mov	r0, r4
 801e576:	f007 fed5 	bl	8026324 <__cxa_guard_acquire>
 801e57a:	b138      	cbz	r0, 801e58c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e57c:	4620      	mov	r0, r4
 801e57e:	f007 fedd 	bl	802633c <__cxa_guard_release>
 801e582:	4a0f      	ldr	r2, [pc, #60]	; (801e5c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e584:	490f      	ldr	r1, [pc, #60]	; (801e5c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e586:	4810      	ldr	r0, [pc, #64]	; (801e5c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e588:	f007 fec5 	bl	8026316 <__aeabi_atexit>
 801e58c:	4c0f      	ldr	r4, [pc, #60]	; (801e5cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e58e:	7823      	ldrb	r3, [r4, #0]
 801e590:	f3bf 8f5b 	dmb	ish
 801e594:	07db      	lsls	r3, r3, #31
 801e596:	d40b      	bmi.n	801e5b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e598:	4620      	mov	r0, r4
 801e59a:	f007 fec3 	bl	8026324 <__cxa_guard_acquire>
 801e59e:	b138      	cbz	r0, 801e5b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e5a0:	4620      	mov	r0, r4
 801e5a2:	f007 fecb 	bl	802633c <__cxa_guard_release>
 801e5a6:	4a06      	ldr	r2, [pc, #24]	; (801e5c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e5a8:	4909      	ldr	r1, [pc, #36]	; (801e5d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e5aa:	480a      	ldr	r0, [pc, #40]	; (801e5d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e5ac:	f007 feb3 	bl	8026316 <__aeabi_atexit>
 801e5b0:	4b05      	ldr	r3, [pc, #20]	; (801e5c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e5b2:	66ab      	str	r3, [r5, #104]	; 0x68
 801e5b4:	4b07      	ldr	r3, [pc, #28]	; (801e5d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e5b6:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e5b8:	bd38      	pop	{r3, r4, r5, pc}
 801e5ba:	bf00      	nop
 801e5bc:	2000efbc 	.word	0x2000efbc
 801e5c0:	20000000 	.word	0x20000000
 801e5c4:	0801ace7 	.word	0x0801ace7
 801e5c8:	2000006c 	.word	0x2000006c
 801e5cc:	2000efc0 	.word	0x2000efc0
 801e5d0:	0801ace5 	.word	0x0801ace5
 801e5d4:	20000070 	.word	0x20000070

0801e5d8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e5d8:	b510      	push	{r4, lr}
 801e5da:	4604      	mov	r4, r0
 801e5dc:	f7ff ff88 	bl	801e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e5e0:	4620      	mov	r0, r4
 801e5e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5e6:	f7ff bfbd 	b.w	801e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e5ea <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e5ea:	b510      	push	{r4, lr}
 801e5ec:	4604      	mov	r4, r0
 801e5ee:	f7ff fff3 	bl	801e5d8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e5f2:	4620      	mov	r0, r4
 801e5f4:	f7ff ff72 	bl	801e4dc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e5f8:	4620      	mov	r0, r4
 801e5fa:	f7ff fdf9 	bl	801e1f0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e5fe:	4620      	mov	r0, r4
 801e600:	f7ff fcfa 	bl	801dff8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e604:	4620      	mov	r0, r4
 801e606:	f7ff fd75 	bl	801e0f4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e60a:	4620      	mov	r0, r4
 801e60c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e610:	f7ff bee0 	b.w	801e3d4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e614 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e614:	b538      	push	{r3, r4, r5, lr}
 801e616:	4c0b      	ldr	r4, [pc, #44]	; (801e644 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e618:	7823      	ldrb	r3, [r4, #0]
 801e61a:	f3bf 8f5b 	dmb	ish
 801e61e:	07db      	lsls	r3, r3, #31
 801e620:	4605      	mov	r5, r0
 801e622:	d40b      	bmi.n	801e63c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e624:	4620      	mov	r0, r4
 801e626:	f007 fe7d 	bl	8026324 <__cxa_guard_acquire>
 801e62a:	b138      	cbz	r0, 801e63c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e62c:	4620      	mov	r0, r4
 801e62e:	f007 fe85 	bl	802633c <__cxa_guard_release>
 801e632:	4a05      	ldr	r2, [pc, #20]	; (801e648 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e634:	4905      	ldr	r1, [pc, #20]	; (801e64c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e636:	4806      	ldr	r0, [pc, #24]	; (801e650 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e638:	f007 fe6d 	bl	8026316 <__aeabi_atexit>
 801e63c:	4b04      	ldr	r3, [pc, #16]	; (801e650 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e63e:	67ab      	str	r3, [r5, #120]	; 0x78
 801e640:	bd38      	pop	{r3, r4, r5, pc}
 801e642:	bf00      	nop
 801e644:	2000efb0 	.word	0x2000efb0
 801e648:	20000000 	.word	0x20000000
 801e64c:	0801acdf 	.word	0x0801acdf
 801e650:	20000064 	.word	0x20000064

0801e654 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e654:	b538      	push	{r3, r4, r5, lr}
 801e656:	4c0b      	ldr	r4, [pc, #44]	; (801e684 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e658:	7823      	ldrb	r3, [r4, #0]
 801e65a:	f3bf 8f5b 	dmb	ish
 801e65e:	07db      	lsls	r3, r3, #31
 801e660:	4605      	mov	r5, r0
 801e662:	d40b      	bmi.n	801e67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e664:	4620      	mov	r0, r4
 801e666:	f007 fe5d 	bl	8026324 <__cxa_guard_acquire>
 801e66a:	b138      	cbz	r0, 801e67c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e66c:	4620      	mov	r0, r4
 801e66e:	f007 fe65 	bl	802633c <__cxa_guard_release>
 801e672:	4a05      	ldr	r2, [pc, #20]	; (801e688 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e674:	4905      	ldr	r1, [pc, #20]	; (801e68c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e676:	4806      	ldr	r0, [pc, #24]	; (801e690 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e678:	f007 fe4d 	bl	8026316 <__aeabi_atexit>
 801e67c:	4b04      	ldr	r3, [pc, #16]	; (801e690 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e67e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e680:	bd38      	pop	{r3, r4, r5, pc}
 801e682:	bf00      	nop
 801e684:	2000efb4 	.word	0x2000efb4
 801e688:	20000000 	.word	0x20000000
 801e68c:	0801acdd 	.word	0x0801acdd
 801e690:	20000068 	.word	0x20000068

0801e694 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e694:	b570      	push	{r4, r5, r6, lr}
 801e696:	4d0d      	ldr	r5, [pc, #52]	; (801e6cc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e698:	4c0d      	ldr	r4, [pc, #52]	; (801e6d0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e69a:	782b      	ldrb	r3, [r5, #0]
 801e69c:	f3bf 8f5b 	dmb	ish
 801e6a0:	f013 0f01 	tst.w	r3, #1
 801e6a4:	4606      	mov	r6, r0
 801e6a6:	d10d      	bne.n	801e6c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e6a8:	4628      	mov	r0, r5
 801e6aa:	f007 fe3b 	bl	8026324 <__cxa_guard_acquire>
 801e6ae:	b148      	cbz	r0, 801e6c4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e6b0:	4b08      	ldr	r3, [pc, #32]	; (801e6d4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e6b2:	6023      	str	r3, [r4, #0]
 801e6b4:	4628      	mov	r0, r5
 801e6b6:	f007 fe41 	bl	802633c <__cxa_guard_release>
 801e6ba:	4a07      	ldr	r2, [pc, #28]	; (801e6d8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e6bc:	4907      	ldr	r1, [pc, #28]	; (801e6dc <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e6be:	4620      	mov	r0, r4
 801e6c0:	f007 fe29 	bl	8026316 <__aeabi_atexit>
 801e6c4:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e6c8:	bd70      	pop	{r4, r5, r6, pc}
 801e6ca:	bf00      	nop
 801e6cc:	2000efb8 	.word	0x2000efb8
 801e6d0:	2000f02c 	.word	0x2000f02c
 801e6d4:	0802a4e0 	.word	0x0802a4e0
 801e6d8:	20000000 	.word	0x20000000
 801e6dc:	0801acdb 	.word	0x0801acdb

0801e6e0 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e6e0:	b510      	push	{r4, lr}
 801e6e2:	4604      	mov	r4, r0
 801e6e4:	f7ff ff96 	bl	801e614 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e6e8:	4620      	mov	r0, r4
 801e6ea:	f7ff ffb3 	bl	801e654 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e6ee:	4620      	mov	r0, r4
 801e6f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e6f4:	f7ff bfce 	b.w	801e694 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e6f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e6f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6fc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e700:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e704:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e708:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e70c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e710:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e714:	8808      	ldrh	r0, [r1, #0]
 801e716:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e71a:	2d00      	cmp	r5, #0
 801e71c:	eb02 0a0c 	add.w	sl, r2, ip
 801e720:	f2c0 80b0 	blt.w	801e884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e724:	45ab      	cmp	fp, r5
 801e726:	f340 80ad 	ble.w	801e884 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e72a:	2c00      	cmp	r4, #0
 801e72c:	f2c0 80a8 	blt.w	801e880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e730:	45a6      	cmp	lr, r4
 801e732:	f340 80a5 	ble.w	801e880 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e736:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e73a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e73e:	1c62      	adds	r2, r4, #1
 801e740:	f100 80a3 	bmi.w	801e88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e744:	4596      	cmp	lr, r2
 801e746:	f340 80a0 	ble.w	801e88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e74a:	f1b9 0f00 	cmp.w	r9, #0
 801e74e:	f000 809c 	beq.w	801e88a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e752:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e756:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e75a:	3501      	adds	r5, #1
 801e75c:	f100 8099 	bmi.w	801e892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e760:	45ab      	cmp	fp, r5
 801e762:	f340 8096 	ble.w	801e892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e766:	2f00      	cmp	r7, #0
 801e768:	f000 8093 	beq.w	801e892 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e76c:	2c00      	cmp	r4, #0
 801e76e:	f2c0 808e 	blt.w	801e88e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e772:	45a6      	cmp	lr, r4
 801e774:	f340 808b 	ble.w	801e88e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e778:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e77c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e780:	3401      	adds	r4, #1
 801e782:	f100 8089 	bmi.w	801e898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e786:	45a6      	cmp	lr, r4
 801e788:	f340 8086 	ble.w	801e898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e78c:	f1b9 0f00 	cmp.w	r9, #0
 801e790:	f000 8082 	beq.w	801e898 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e794:	44d6      	add	lr, sl
 801e796:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e79a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e79e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e7a2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e7a6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801e7aa:	fb19 fe07 	smulbb	lr, r9, r7
 801e7ae:	ea44 0808 	orr.w	r8, r4, r8
 801e7b2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e7b6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e7ba:	f1c7 0210 	rsb	r2, r7, #16
 801e7be:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801e7c2:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e7c6:	ea44 0c0c 	orr.w	ip, r4, ip
 801e7ca:	eba2 0209 	sub.w	r2, r2, r9
 801e7ce:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e7d2:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e7d6:	fb04 f40c 	mul.w	r4, r4, ip
 801e7da:	fb02 4808 	mla	r8, r2, r8, r4
 801e7de:	041a      	lsls	r2, r3, #16
 801e7e0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e7e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e7e8:	4313      	orrs	r3, r2
 801e7ea:	042a      	lsls	r2, r5, #16
 801e7ec:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e7f0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801e7f4:	fb0e 8303 	mla	r3, lr, r3, r8
 801e7f8:	432a      	orrs	r2, r5
 801e7fa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e7fe:	fb07 3202 	mla	r2, r7, r2, r3
 801e802:	0d53      	lsrs	r3, r2, #21
 801e804:	0952      	lsrs	r2, r2, #5
 801e806:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e80a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e80e:	431a      	orrs	r2, r3
 801e810:	b293      	uxth	r3, r2
 801e812:	b2b4      	uxth	r4, r6
 801e814:	1202      	asrs	r2, r0, #8
 801e816:	43f6      	mvns	r6, r6
 801e818:	b2f6      	uxtb	r6, r6
 801e81a:	121d      	asrs	r5, r3, #8
 801e81c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e820:	fb12 f206 	smulbb	r2, r2, r6
 801e824:	10c7      	asrs	r7, r0, #3
 801e826:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e82a:	00c0      	lsls	r0, r0, #3
 801e82c:	fb05 2504 	mla	r5, r5, r4, r2
 801e830:	b2c0      	uxtb	r0, r0
 801e832:	10da      	asrs	r2, r3, #3
 801e834:	00db      	lsls	r3, r3, #3
 801e836:	b2db      	uxtb	r3, r3
 801e838:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801e83c:	fb10 f006 	smulbb	r0, r0, r6
 801e840:	b2ad      	uxth	r5, r5
 801e842:	fb03 0004 	mla	r0, r3, r4, r0
 801e846:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e84a:	fb17 f706 	smulbb	r7, r7, r6
 801e84e:	b280      	uxth	r0, r0
 801e850:	1c6b      	adds	r3, r5, #1
 801e852:	fb02 7204 	mla	r2, r2, r4, r7
 801e856:	b292      	uxth	r2, r2
 801e858:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e85c:	1c43      	adds	r3, r0, #1
 801e85e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e862:	1c50      	adds	r0, r2, #1
 801e864:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e868:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e86c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e870:	0952      	lsrs	r2, r2, #5
 801e872:	432b      	orrs	r3, r5
 801e874:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e878:	4313      	orrs	r3, r2
 801e87a:	800b      	strh	r3, [r1, #0]
 801e87c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e880:	4680      	mov	r8, r0
 801e882:	e75c      	b.n	801e73e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e884:	4684      	mov	ip, r0
 801e886:	4680      	mov	r8, r0
 801e888:	e767      	b.n	801e75a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e88a:	4684      	mov	ip, r0
 801e88c:	e765      	b.n	801e75a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e88e:	4605      	mov	r5, r0
 801e890:	e776      	b.n	801e780 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e892:	4603      	mov	r3, r0
 801e894:	4605      	mov	r5, r0
 801e896:	e782      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e898:	4603      	mov	r3, r0
 801e89a:	e780      	b.n	801e79e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e89c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e89c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8a0:	b099      	sub	sp, #100	; 0x64
 801e8a2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801e8a6:	9215      	str	r2, [sp, #84]	; 0x54
 801e8a8:	9309      	str	r3, [sp, #36]	; 0x24
 801e8aa:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801e8ac:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801e8b0:	930d      	str	r3, [sp, #52]	; 0x34
 801e8b2:	910c      	str	r1, [sp, #48]	; 0x30
 801e8b4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801e8b8:	9016      	str	r0, [sp, #88]	; 0x58
 801e8ba:	6850      	ldr	r0, [r2, #4]
 801e8bc:	6812      	ldr	r2, [r2, #0]
 801e8be:	fb00 1303 	mla	r3, r0, r3, r1
 801e8c2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e8c6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8c8:	681b      	ldr	r3, [r3, #0]
 801e8ca:	930b      	str	r3, [sp, #44]	; 0x2c
 801e8cc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8ce:	685e      	ldr	r6, [r3, #4]
 801e8d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e8d2:	43db      	mvns	r3, r3
 801e8d4:	b2db      	uxtb	r3, r3
 801e8d6:	3604      	adds	r6, #4
 801e8d8:	930a      	str	r3, [sp, #40]	; 0x28
 801e8da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e8dc:	2b00      	cmp	r3, #0
 801e8de:	dc03      	bgt.n	801e8e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e8e0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801e8e2:	2b00      	cmp	r3, #0
 801e8e4:	f340 8225 	ble.w	801ed32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e8e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e8ee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e8f2:	1e48      	subs	r0, r1, #1
 801e8f4:	1e57      	subs	r7, r2, #1
 801e8f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e8f8:	2b00      	cmp	r3, #0
 801e8fa:	f340 80e3 	ble.w	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e8fe:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e902:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e906:	d406      	bmi.n	801e916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e908:	4584      	cmp	ip, r0
 801e90a:	da04      	bge.n	801e916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e90c:	2b00      	cmp	r3, #0
 801e90e:	db02      	blt.n	801e916 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e910:	42bb      	cmp	r3, r7
 801e912:	f2c0 80d8 	blt.w	801eac6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e916:	f11c 0c01 	adds.w	ip, ip, #1
 801e91a:	f100 80c9 	bmi.w	801eab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e91e:	4561      	cmp	r1, ip
 801e920:	f2c0 80c6 	blt.w	801eab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e924:	3301      	adds	r3, #1
 801e926:	f100 80c3 	bmi.w	801eab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e92a:	429a      	cmp	r2, r3
 801e92c:	f2c0 80c0 	blt.w	801eab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e930:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801e934:	4647      	mov	r7, r8
 801e936:	f1bb 0f00 	cmp.w	fp, #0
 801e93a:	f340 80e3 	ble.w	801eb04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e93e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801e940:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e942:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e946:	689b      	ldr	r3, [r3, #8]
 801e948:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e94c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e950:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e954:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e958:	f100 8121 	bmi.w	801eb9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e95c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e960:	454a      	cmp	r2, r9
 801e962:	f280 811c 	bge.w	801eb9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e966:	f1bc 0f00 	cmp.w	ip, #0
 801e96a:	f2c0 8118 	blt.w	801eb9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e96e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e972:	45cc      	cmp	ip, r9
 801e974:	f280 8113 	bge.w	801eb9e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e978:	b21b      	sxth	r3, r3
 801e97a:	fb0c 2203 	mla	r2, ip, r3, r2
 801e97e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801e980:	eb04 0902 	add.w	r9, r4, r2
 801e984:	5ca2      	ldrb	r2, [r4, r2]
 801e986:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e98a:	2800      	cmp	r0, #0
 801e98c:	f000 80fe 	beq.w	801eb8c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e990:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e994:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e998:	9211      	str	r2, [sp, #68]	; 0x44
 801e99a:	b151      	cbz	r1, 801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e99c:	eb09 0203 	add.w	r2, r9, r3
 801e9a0:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e9a4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9a8:	930f      	str	r3, [sp, #60]	; 0x3c
 801e9aa:	7853      	ldrb	r3, [r2, #1]
 801e9ac:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9b0:	9312      	str	r3, [sp, #72]	; 0x48
 801e9b2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e9b4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801e9b6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e9ba:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e9be:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e9c2:	ea4c 0c03 	orr.w	ip, ip, r3
 801e9c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e9c8:	041b      	lsls	r3, r3, #16
 801e9ca:	fb10 f201 	smulbb	r2, r0, r1
 801e9ce:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801e9d2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e9d6:	10d2      	asrs	r2, r2, #3
 801e9d8:	4323      	orrs	r3, r4
 801e9da:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e9de:	4353      	muls	r3, r2
 801e9e0:	fb09 330c 	mla	r3, r9, ip, r3
 801e9e4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e9e8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801e9ec:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e9f0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e9f4:	f1c1 0c10 	rsb	ip, r1, #16
 801e9f8:	ebac 0c00 	sub.w	ip, ip, r0
 801e9fc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea00:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea04:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ea06:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ea08:	0418      	lsls	r0, r3, #16
 801ea0a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ea0e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea12:	4318      	orrs	r0, r3
 801ea14:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea18:	fb02 c200 	mla	r2, r2, r0, ip
 801ea1c:	0d53      	lsrs	r3, r2, #21
 801ea1e:	0952      	lsrs	r2, r2, #5
 801ea20:	8838      	ldrh	r0, [r7, #0]
 801ea22:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ea26:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ea2a:	431a      	orrs	r2, r3
 801ea2c:	b292      	uxth	r2, r2
 801ea2e:	1201      	asrs	r1, r0, #8
 801ea30:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ea34:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ea38:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ea3c:	fb11 f104 	smulbb	r1, r1, r4
 801ea40:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ea44:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ea48:	00c0      	lsls	r0, r0, #3
 801ea4a:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ea4e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ea52:	10d1      	asrs	r1, r2, #3
 801ea54:	b2c0      	uxtb	r0, r0
 801ea56:	00d2      	lsls	r2, r2, #3
 801ea58:	b2d2      	uxtb	r2, r2
 801ea5a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ea5e:	fb1e fe04 	smulbb	lr, lr, r4
 801ea62:	fb10 f004 	smulbb	r0, r0, r4
 801ea66:	fa1f fc8c 	uxth.w	ip, ip
 801ea6a:	fb01 e103 	mla	r1, r1, r3, lr
 801ea6e:	fb02 0303 	mla	r3, r2, r3, r0
 801ea72:	b29a      	uxth	r2, r3
 801ea74:	f10c 0301 	add.w	r3, ip, #1
 801ea78:	b289      	uxth	r1, r1
 801ea7a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ea7e:	1c53      	adds	r3, r2, #1
 801ea80:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ea84:	1c4a      	adds	r2, r1, #1
 801ea86:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ea8a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ea8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea92:	0949      	lsrs	r1, r1, #5
 801ea94:	ea43 030c 	orr.w	r3, r3, ip
 801ea98:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ea9c:	430b      	orrs	r3, r1
 801ea9e:	803b      	strh	r3, [r7, #0]
 801eaa0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801eaa2:	449a      	add	sl, r3
 801eaa4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eaa6:	3702      	adds	r7, #2
 801eaa8:	441d      	add	r5, r3
 801eaaa:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eaae:	e742      	b.n	801e936 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801eab0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801eab2:	449a      	add	sl, r3
 801eab4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eab6:	441d      	add	r5, r3
 801eab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eaba:	3b01      	subs	r3, #1
 801eabc:	9309      	str	r3, [sp, #36]	; 0x24
 801eabe:	f108 0802 	add.w	r8, r8, #2
 801eac2:	e718      	b.n	801e8f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801eac4:	d023      	beq.n	801eb0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801eac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eac8:	9825      	ldr	r0, [sp, #148]	; 0x94
 801eaca:	3b01      	subs	r3, #1
 801eacc:	fb00 a003 	mla	r0, r0, r3, sl
 801ead0:	1400      	asrs	r0, r0, #16
 801ead2:	f53f af2d 	bmi.w	801e930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ead6:	3901      	subs	r1, #1
 801ead8:	4288      	cmp	r0, r1
 801eada:	f6bf af29 	bge.w	801e930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eade:	9926      	ldr	r1, [sp, #152]	; 0x98
 801eae0:	fb01 5303 	mla	r3, r1, r3, r5
 801eae4:	141b      	asrs	r3, r3, #16
 801eae6:	f53f af23 	bmi.w	801e930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eaea:	3a01      	subs	r2, #1
 801eaec:	4293      	cmp	r3, r2
 801eaee:	f6bf af1f 	bge.w	801e930 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eaf2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801eaf6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801eafa:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801eafe:	f1be 0f00 	cmp.w	lr, #0
 801eb02:	dc6c      	bgt.n	801ebde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eb06:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eb0a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801eb0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb10:	2b00      	cmp	r3, #0
 801eb12:	f340 810e 	ble.w	801ed32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb16:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb1a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801eb1e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb22:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb24:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb28:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb2c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb30:	eef0 6a62 	vmov.f32	s13, s5
 801eb34:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb3c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb40:	ee16 aa90 	vmov	sl, s13
 801eb44:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb48:	eef0 6a43 	vmov.f32	s13, s6
 801eb4c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb50:	ee12 2a90 	vmov	r2, s5
 801eb54:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb58:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb5c:	ee13 2a10 	vmov	r2, s6
 801eb60:	9325      	str	r3, [sp, #148]	; 0x94
 801eb62:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb64:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb68:	9326      	str	r3, [sp, #152]	; 0x98
 801eb6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb6c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801eb6e:	3b01      	subs	r3, #1
 801eb70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb74:	930c      	str	r3, [sp, #48]	; 0x30
 801eb76:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801eb78:	bf08      	it	eq
 801eb7a:	4613      	moveq	r3, r2
 801eb7c:	ee16 5a90 	vmov	r5, s13
 801eb80:	9309      	str	r3, [sp, #36]	; 0x24
 801eb82:	eeb0 3a67 	vmov.f32	s6, s15
 801eb86:	eef0 2a47 	vmov.f32	s5, s14
 801eb8a:	e6a6      	b.n	801e8da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801eb8c:	2900      	cmp	r1, #0
 801eb8e:	f43f af10 	beq.w	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eb92:	f819 3003 	ldrb.w	r3, [r9, r3]
 801eb96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eb9a:	930f      	str	r3, [sp, #60]	; 0x3c
 801eb9c:	e709      	b.n	801e9b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801eb9e:	f112 0901 	adds.w	r9, r2, #1
 801eba2:	f53f af7d 	bmi.w	801eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801eba6:	454b      	cmp	r3, r9
 801eba8:	f6ff af7a 	blt.w	801eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebac:	f11c 0901 	adds.w	r9, ip, #1
 801ebb0:	f53f af76 	bmi.w	801eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebb4:	45ce      	cmp	lr, r9
 801ebb6:	f6ff af73 	blt.w	801eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ebbc:	9202      	str	r2, [sp, #8]
 801ebbe:	b21b      	sxth	r3, r3
 801ebc0:	fa0f f28e 	sxth.w	r2, lr
 801ebc4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ebc8:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ebcc:	9201      	str	r2, [sp, #4]
 801ebce:	9300      	str	r3, [sp, #0]
 801ebd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ebd2:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ebd4:	4633      	mov	r3, r6
 801ebd6:	4639      	mov	r1, r7
 801ebd8:	f7ff fd8e 	bl	801e6f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ebdc:	e760      	b.n	801eaa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebe0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ebe2:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ebe6:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ebea:	1429      	asrs	r1, r5, #16
 801ebec:	fb03 2101 	mla	r1, r3, r1, r2
 801ebf0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ebf2:	440a      	add	r2, r1
 801ebf4:	5c61      	ldrb	r1, [r4, r1]
 801ebf6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ebfa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ebfe:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ec02:	f1bc 0f00 	cmp.w	ip, #0
 801ec06:	f000 808c 	beq.w	801ed22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ec0a:	7857      	ldrb	r7, [r2, #1]
 801ec0c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ec10:	9413      	str	r4, [sp, #76]	; 0x4c
 801ec12:	b140      	cbz	r0, 801ec26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec14:	18d7      	adds	r7, r2, r3
 801ec16:	5cd3      	ldrb	r3, [r2, r3]
 801ec18:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec1c:	9310      	str	r3, [sp, #64]	; 0x40
 801ec1e:	787b      	ldrb	r3, [r7, #1]
 801ec20:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec24:	9314      	str	r3, [sp, #80]	; 0x50
 801ec26:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ec28:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801ec2a:	fb1c f200 	smulbb	r2, ip, r0
 801ec2e:	041f      	lsls	r7, r3, #16
 801ec30:	10d2      	asrs	r2, r2, #3
 801ec32:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec36:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801ec3a:	431f      	orrs	r7, r3
 801ec3c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ec40:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec42:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801ec44:	041b      	lsls	r3, r3, #16
 801ec46:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801ec4a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec4e:	ea43 030b 	orr.w	r3, r3, fp
 801ec52:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ec54:	4353      	muls	r3, r2
 801ec56:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec5a:	fb04 3707 	mla	r7, r4, r7, r3
 801ec5e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ec62:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ec66:	ea43 0b01 	orr.w	fp, r3, r1
 801ec6a:	f1c0 0110 	rsb	r1, r0, #16
 801ec6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ec70:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ec72:	eba1 0c0c 	sub.w	ip, r1, ip
 801ec76:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ec7a:	fb0c 770b 	mla	r7, ip, fp, r7
 801ec7e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec82:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ec86:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec8a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ec8e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ec92:	fb02 770c 	mla	r7, r2, ip, r7
 801ec96:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ec98:	0d79      	lsrs	r1, r7, #21
 801ec9a:	097f      	lsrs	r7, r7, #5
 801ec9c:	8812      	ldrh	r2, [r2, #0]
 801ec9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801eca2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801eca6:	430f      	orrs	r7, r1
 801eca8:	b2bb      	uxth	r3, r7
 801ecaa:	1211      	asrs	r1, r2, #8
 801ecac:	1218      	asrs	r0, r3, #8
 801ecae:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ecb2:	fb11 f104 	smulbb	r1, r1, r4
 801ecb6:	10d7      	asrs	r7, r2, #3
 801ecb8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ecbc:	00d2      	lsls	r2, r2, #3
 801ecbe:	fb00 1009 	mla	r0, r0, r9, r1
 801ecc2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ecc6:	10d9      	asrs	r1, r3, #3
 801ecc8:	b2d2      	uxtb	r2, r2
 801ecca:	00db      	lsls	r3, r3, #3
 801eccc:	fb17 f704 	smulbb	r7, r7, r4
 801ecd0:	fb12 f204 	smulbb	r2, r2, r4
 801ecd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ecd8:	b2db      	uxtb	r3, r3
 801ecda:	b280      	uxth	r0, r0
 801ecdc:	fb01 7109 	mla	r1, r1, r9, r7
 801ece0:	fb03 2309 	mla	r3, r3, r9, r2
 801ece4:	b29b      	uxth	r3, r3
 801ece6:	b289      	uxth	r1, r1
 801ece8:	1c42      	adds	r2, r0, #1
 801ecea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ecee:	1c4f      	adds	r7, r1, #1
 801ecf0:	1c5a      	adds	r2, r3, #1
 801ecf2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ecf6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ecfa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801ecfe:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ed02:	0949      	lsrs	r1, r1, #5
 801ed04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ed06:	4310      	orrs	r0, r2
 801ed08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed0c:	4308      	orrs	r0, r1
 801ed0e:	f823 0b02 	strh.w	r0, [r3], #2
 801ed12:	930e      	str	r3, [sp, #56]	; 0x38
 801ed14:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed16:	449a      	add	sl, r3
 801ed18:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed1a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ed1e:	441d      	add	r5, r3
 801ed20:	e6ed      	b.n	801eafe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ed22:	2800      	cmp	r0, #0
 801ed24:	f43f af7f 	beq.w	801ec26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed28:	5cd3      	ldrb	r3, [r2, r3]
 801ed2a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed2e:	9310      	str	r3, [sp, #64]	; 0x40
 801ed30:	e779      	b.n	801ec26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed32:	b019      	add	sp, #100	; 0x64
 801ed34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ed38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ed38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ed3c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801ed40:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ed44:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801ed48:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801ed4c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801ed50:	8808      	ldrh	r0, [r1, #0]
 801ed52:	fb08 470e 	mla	r7, r8, lr, r4
 801ed56:	f1b8 0f00 	cmp.w	r8, #0
 801ed5a:	eb02 0907 	add.w	r9, r2, r7
 801ed5e:	db67      	blt.n	801ee30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed60:	45c2      	cmp	sl, r8
 801ed62:	dd65      	ble.n	801ee30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed64:	2c00      	cmp	r4, #0
 801ed66:	db61      	blt.n	801ee2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed68:	45a6      	cmp	lr, r4
 801ed6a:	dd5f      	ble.n	801ee2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed6c:	5dd2      	ldrb	r2, [r2, r7]
 801ed6e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ed72:	1c62      	adds	r2, r4, #1
 801ed74:	d45f      	bmi.n	801ee36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed76:	4596      	cmp	lr, r2
 801ed78:	dd5d      	ble.n	801ee36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed7a:	2d00      	cmp	r5, #0
 801ed7c:	d05b      	beq.n	801ee36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed7e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ed82:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801ed86:	f118 0801 	adds.w	r8, r8, #1
 801ed8a:	d458      	bmi.n	801ee3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed8c:	45c2      	cmp	sl, r8
 801ed8e:	dd56      	ble.n	801ee3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed90:	2e00      	cmp	r6, #0
 801ed92:	d054      	beq.n	801ee3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801ed94:	2c00      	cmp	r4, #0
 801ed96:	db50      	blt.n	801ee3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ed98:	45a6      	cmp	lr, r4
 801ed9a:	dd4e      	ble.n	801ee3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801ed9c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801eda0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801eda4:	3401      	adds	r4, #1
 801eda6:	d407      	bmi.n	801edb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801eda8:	45a6      	cmp	lr, r4
 801edaa:	dd05      	ble.n	801edb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edac:	b125      	cbz	r5, 801edb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edae:	44ce      	add	lr, r9
 801edb0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801edb4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801edb8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801edbc:	fb15 f406 	smulbb	r4, r5, r6
 801edc0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801edc4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801edc8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801edcc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801edd0:	ea43 0c0c 	orr.w	ip, r3, ip
 801edd4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801edd8:	f1c6 0310 	rsb	r3, r6, #16
 801eddc:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ede0:	1b5b      	subs	r3, r3, r5
 801ede2:	ea4e 0707 	orr.w	r7, lr, r7
 801ede6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801edea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801edee:	437d      	muls	r5, r7
 801edf0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801edf4:	0403      	lsls	r3, r0, #16
 801edf6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801edfa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801edfe:	4318      	orrs	r0, r3
 801ee00:	0413      	lsls	r3, r2, #16
 801ee02:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ee06:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ee0a:	4313      	orrs	r3, r2
 801ee0c:	fb04 c000 	mla	r0, r4, r0, ip
 801ee10:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ee14:	fb06 0003 	mla	r0, r6, r3, r0
 801ee18:	0d43      	lsrs	r3, r0, #21
 801ee1a:	0940      	lsrs	r0, r0, #5
 801ee1c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ee20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ee24:	4318      	orrs	r0, r3
 801ee26:	8008      	strh	r0, [r1, #0]
 801ee28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee2c:	4684      	mov	ip, r0
 801ee2e:	e7a0      	b.n	801ed72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ee30:	4607      	mov	r7, r0
 801ee32:	4684      	mov	ip, r0
 801ee34:	e7a7      	b.n	801ed86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee36:	4607      	mov	r7, r0
 801ee38:	e7a5      	b.n	801ed86 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee3a:	4602      	mov	r2, r0
 801ee3c:	e7b2      	b.n	801eda4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ee3e:	4602      	mov	r2, r0
 801ee40:	e7ba      	b.n	801edb8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ee42 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee42:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee46:	b093      	sub	sp, #76	; 0x4c
 801ee48:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ee4c:	920f      	str	r2, [sp, #60]	; 0x3c
 801ee4e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ee50:	9108      	str	r1, [sp, #32]
 801ee52:	9306      	str	r3, [sp, #24]
 801ee54:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ee58:	9010      	str	r0, [sp, #64]	; 0x40
 801ee5a:	6850      	ldr	r0, [r2, #4]
 801ee5c:	6812      	ldr	r2, [r2, #0]
 801ee5e:	fb00 1303 	mla	r3, r0, r3, r1
 801ee62:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ee66:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee68:	681b      	ldr	r3, [r3, #0]
 801ee6a:	9307      	str	r3, [sp, #28]
 801ee6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee6e:	685f      	ldr	r7, [r3, #4]
 801ee70:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801ee74:	3704      	adds	r7, #4
 801ee76:	9b08      	ldr	r3, [sp, #32]
 801ee78:	2b00      	cmp	r3, #0
 801ee7a:	dc03      	bgt.n	801ee84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ee7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ee7e:	2b00      	cmp	r3, #0
 801ee80:	f340 81b2 	ble.w	801f1e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801ee84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ee8a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ee8e:	1e48      	subs	r0, r1, #1
 801ee90:	f102 3cff 	add.w	ip, r2, #4294967295
 801ee94:	9b06      	ldr	r3, [sp, #24]
 801ee96:	2b00      	cmp	r3, #0
 801ee98:	f340 80a9 	ble.w	801efee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801ee9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eea0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eea4:	d406      	bmi.n	801eeb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eea6:	4586      	cmp	lr, r0
 801eea8:	da04      	bge.n	801eeb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eeaa:	2b00      	cmp	r3, #0
 801eeac:	db02      	blt.n	801eeb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eeae:	4563      	cmp	r3, ip
 801eeb0:	f2c0 809e 	blt.w	801eff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801eeb4:	f11e 0e01 	adds.w	lr, lr, #1
 801eeb8:	f100 808f 	bmi.w	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eebc:	4571      	cmp	r1, lr
 801eebe:	f2c0 808c 	blt.w	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eec2:	3301      	adds	r3, #1
 801eec4:	f100 8089 	bmi.w	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eec8:	429a      	cmp	r2, r3
 801eeca:	f2c0 8086 	blt.w	801efda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eece:	f8dd b018 	ldr.w	fp, [sp, #24]
 801eed2:	46c8      	mov	r8, r9
 801eed4:	f1bb 0f00 	cmp.w	fp, #0
 801eed8:	f340 80a6 	ble.w	801f028 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801eedc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801eede:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801eee0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eee4:	689b      	ldr	r3, [r3, #8]
 801eee6:	1422      	asrs	r2, r4, #16
 801eee8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eeec:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eef0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801eef4:	f100 80e3 	bmi.w	801f0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801eef8:	f103 3aff 	add.w	sl, r3, #4294967295
 801eefc:	4552      	cmp	r2, sl
 801eefe:	f280 80de 	bge.w	801f0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef02:	f1bc 0f00 	cmp.w	ip, #0
 801ef06:	f2c0 80da 	blt.w	801f0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef0a:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ef0e:	45d4      	cmp	ip, sl
 801ef10:	f280 80d5 	bge.w	801f0be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef14:	b21b      	sxth	r3, r3
 801ef16:	fb0c 2203 	mla	r2, ip, r3, r2
 801ef1a:	9d07      	ldr	r5, [sp, #28]
 801ef1c:	eb05 0a02 	add.w	sl, r5, r2
 801ef20:	5caa      	ldrb	r2, [r5, r2]
 801ef22:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ef26:	2800      	cmp	r0, #0
 801ef28:	f000 80c0 	beq.w	801f0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ef2c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ef30:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ef34:	920b      	str	r2, [sp, #44]	; 0x2c
 801ef36:	b151      	cbz	r1, 801ef4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ef38:	eb0a 0203 	add.w	r2, sl, r3
 801ef3c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ef40:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef44:	9309      	str	r3, [sp, #36]	; 0x24
 801ef46:	7853      	ldrb	r3, [r2, #1]
 801ef48:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef4c:	930c      	str	r3, [sp, #48]	; 0x30
 801ef4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ef50:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ef52:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef56:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef5a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ef5e:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef62:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ef64:	041b      	lsls	r3, r3, #16
 801ef66:	fb10 f201 	smulbb	r2, r0, r1
 801ef6a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ef6e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ef72:	10d2      	asrs	r2, r2, #3
 801ef74:	432b      	orrs	r3, r5
 801ef76:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ef7a:	4353      	muls	r3, r2
 801ef7c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ef80:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ef84:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef88:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ef8c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ef90:	f1c1 0c10 	rsb	ip, r1, #16
 801ef94:	ebac 0c00 	sub.w	ip, ip, r0
 801ef98:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef9c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801efa0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801efa2:	0418      	lsls	r0, r3, #16
 801efa4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801efa8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801efac:	4318      	orrs	r0, r3
 801efae:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801efb2:	fb02 c200 	mla	r2, r2, r0, ip
 801efb6:	0d53      	lsrs	r3, r2, #21
 801efb8:	0952      	lsrs	r2, r2, #5
 801efba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801efbe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801efc2:	431a      	orrs	r2, r3
 801efc4:	f8a8 2000 	strh.w	r2, [r8]
 801efc8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801efca:	441c      	add	r4, r3
 801efcc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efce:	f108 0802 	add.w	r8, r8, #2
 801efd2:	441e      	add	r6, r3
 801efd4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801efd8:	e77c      	b.n	801eed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801efda:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801efdc:	441c      	add	r4, r3
 801efde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801efe0:	441e      	add	r6, r3
 801efe2:	9b06      	ldr	r3, [sp, #24]
 801efe4:	3b01      	subs	r3, #1
 801efe6:	9306      	str	r3, [sp, #24]
 801efe8:	f109 0902 	add.w	r9, r9, #2
 801efec:	e752      	b.n	801ee94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801efee:	d020      	beq.n	801f032 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801eff0:	9b06      	ldr	r3, [sp, #24]
 801eff2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801eff4:	3b01      	subs	r3, #1
 801eff6:	fb00 4003 	mla	r0, r0, r3, r4
 801effa:	1400      	asrs	r0, r0, #16
 801effc:	f53f af67 	bmi.w	801eece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f000:	3901      	subs	r1, #1
 801f002:	4288      	cmp	r0, r1
 801f004:	f6bf af63 	bge.w	801eece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f008:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f00a:	fb01 6303 	mla	r3, r1, r3, r6
 801f00e:	141b      	asrs	r3, r3, #16
 801f010:	f53f af5d 	bmi.w	801eece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f014:	3a01      	subs	r2, #1
 801f016:	4293      	cmp	r3, r2
 801f018:	f6bf af59 	bge.w	801eece <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f01c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f020:	46ca      	mov	sl, r9
 801f022:	f1b8 0f00 	cmp.w	r8, #0
 801f026:	dc67      	bgt.n	801f0f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f028:	9b06      	ldr	r3, [sp, #24]
 801f02a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f02e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f032:	9b08      	ldr	r3, [sp, #32]
 801f034:	2b00      	cmp	r3, #0
 801f036:	f340 80d7 	ble.w	801f1e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f03a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f03e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f042:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f046:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f048:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f04c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f050:	eeb0 6a62 	vmov.f32	s12, s5
 801f054:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f058:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f05c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f060:	ee16 4a10 	vmov	r4, s12
 801f064:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f068:	eeb0 6a43 	vmov.f32	s12, s6
 801f06c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f070:	ee12 2a90 	vmov	r2, s5
 801f074:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f078:	fb92 f3f3 	sdiv	r3, r2, r3
 801f07c:	ee13 2a10 	vmov	r2, s6
 801f080:	931f      	str	r3, [sp, #124]	; 0x7c
 801f082:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f084:	fb92 f3f3 	sdiv	r3, r2, r3
 801f088:	9320      	str	r3, [sp, #128]	; 0x80
 801f08a:	9b08      	ldr	r3, [sp, #32]
 801f08c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f08e:	3b01      	subs	r3, #1
 801f090:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f094:	9308      	str	r3, [sp, #32]
 801f096:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f098:	bf08      	it	eq
 801f09a:	4613      	moveq	r3, r2
 801f09c:	ee16 6a10 	vmov	r6, s12
 801f0a0:	9306      	str	r3, [sp, #24]
 801f0a2:	eeb0 3a67 	vmov.f32	s6, s15
 801f0a6:	eef0 2a47 	vmov.f32	s5, s14
 801f0aa:	e6e4      	b.n	801ee76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f0ac:	2900      	cmp	r1, #0
 801f0ae:	f43f af4e 	beq.w	801ef4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0b2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f0b6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0ba:	9309      	str	r3, [sp, #36]	; 0x24
 801f0bc:	e747      	b.n	801ef4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0be:	f112 0a01 	adds.w	sl, r2, #1
 801f0c2:	d481      	bmi.n	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0c4:	4553      	cmp	r3, sl
 801f0c6:	f6ff af7f 	blt.w	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0ca:	f11c 0a01 	adds.w	sl, ip, #1
 801f0ce:	f53f af7b 	bmi.w	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0d2:	45d6      	cmp	lr, sl
 801f0d4:	f6ff af78 	blt.w	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0d8:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f0dc:	b21b      	sxth	r3, r3
 801f0de:	fa0f f28e 	sxth.w	r2, lr
 801f0e2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f0e6:	9201      	str	r2, [sp, #4]
 801f0e8:	9300      	str	r3, [sp, #0]
 801f0ea:	9a07      	ldr	r2, [sp, #28]
 801f0ec:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f0ee:	463b      	mov	r3, r7
 801f0f0:	4641      	mov	r1, r8
 801f0f2:	f7ff fe21 	bl	801ed38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f0f6:	e767      	b.n	801efc8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f0fa:	9d07      	ldr	r5, [sp, #28]
 801f0fc:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f100:	1422      	asrs	r2, r4, #16
 801f102:	1431      	asrs	r1, r6, #16
 801f104:	fb03 2101 	mla	r1, r3, r1, r2
 801f108:	9a07      	ldr	r2, [sp, #28]
 801f10a:	440a      	add	r2, r1
 801f10c:	5c69      	ldrb	r1, [r5, r1]
 801f10e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f112:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f116:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f11a:	f1be 0f00 	cmp.w	lr, #0
 801f11e:	d05c      	beq.n	801f1da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f120:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f124:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f128:	950d      	str	r5, [sp, #52]	; 0x34
 801f12a:	b150      	cbz	r0, 801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f12c:	eb02 0c03 	add.w	ip, r2, r3
 801f130:	5cd3      	ldrb	r3, [r2, r3]
 801f132:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f136:	930a      	str	r3, [sp, #40]	; 0x28
 801f138:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f13c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f140:	930e      	str	r3, [sp, #56]	; 0x38
 801f142:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f144:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f146:	fb1e f200 	smulbb	r2, lr, r0
 801f14a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f14e:	10d2      	asrs	r2, r2, #3
 801f150:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f154:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f158:	ea4c 0c03 	orr.w	ip, ip, r3
 801f15c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f160:	9311      	str	r3, [sp, #68]	; 0x44
 801f162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f164:	041b      	lsls	r3, r3, #16
 801f166:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f16a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f16e:	ea43 030b 	orr.w	r3, r3, fp
 801f172:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f174:	4353      	muls	r3, r2
 801f176:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f17a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f17e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f182:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f186:	ea43 0b01 	orr.w	fp, r3, r1
 801f18a:	f1c0 0110 	rsb	r1, r0, #16
 801f18e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f190:	eba1 0e0e 	sub.w	lr, r1, lr
 801f194:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f198:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f19c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f1a0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f1a4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f1a8:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f1ac:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f1b0:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f1b4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f1b8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f1bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f1c0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f1c4:	ea43 0c0c 	orr.w	ip, r3, ip
 801f1c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f1ca:	f82a cb02 	strh.w	ip, [sl], #2
 801f1ce:	441c      	add	r4, r3
 801f1d0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f1d2:	f108 38ff 	add.w	r8, r8, #4294967295
 801f1d6:	441e      	add	r6, r3
 801f1d8:	e723      	b.n	801f022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f1da:	2800      	cmp	r0, #0
 801f1dc:	d0b1      	beq.n	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f1de:	5cd3      	ldrb	r3, [r2, r3]
 801f1e0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1e4:	930a      	str	r3, [sp, #40]	; 0x28
 801f1e6:	e7ac      	b.n	801f142 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f1e8:	b013      	add	sp, #76	; 0x4c
 801f1ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f1ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1f2:	880d      	ldrh	r5, [r1, #0]
 801f1f4:	b087      	sub	sp, #28
 801f1f6:	10ef      	asrs	r7, r5, #3
 801f1f8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f1fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f200:	00ed      	lsls	r5, r5, #3
 801f202:	9701      	str	r7, [sp, #4]
 801f204:	b2ed      	uxtb	r5, r5
 801f206:	9502      	str	r5, [sp, #8]
 801f208:	9d01      	ldr	r5, [sp, #4]
 801f20a:	9103      	str	r1, [sp, #12]
 801f20c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f210:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f214:	9902      	ldr	r1, [sp, #8]
 801f216:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f21a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f21e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f222:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f226:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f22a:	022d      	lsls	r5, r5, #8
 801f22c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f230:	fb06 0709 	mla	r7, r6, r9, r0
 801f234:	430d      	orrs	r5, r1
 801f236:	2e00      	cmp	r6, #0
 801f238:	eb02 0c07 	add.w	ip, r2, r7
 801f23c:	9505      	str	r5, [sp, #20]
 801f23e:	f2c0 80b6 	blt.w	801f3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f242:	45b3      	cmp	fp, r6
 801f244:	f340 80b3 	ble.w	801f3ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f248:	2800      	cmp	r0, #0
 801f24a:	f2c0 80ae 	blt.w	801f3aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f24e:	4581      	cmp	r9, r0
 801f250:	f340 80ab 	ble.w	801f3aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f254:	5dd7      	ldrb	r7, [r2, r7]
 801f256:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f25a:	441f      	add	r7, r3
 801f25c:	1c42      	adds	r2, r0, #1
 801f25e:	f100 80a9 	bmi.w	801f3b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f262:	4591      	cmp	r9, r2
 801f264:	f340 80a6 	ble.w	801f3b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f268:	2c00      	cmp	r4, #0
 801f26a:	f000 80a3 	beq.w	801f3b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f26e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f272:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f276:	441d      	add	r5, r3
 801f278:	3601      	adds	r6, #1
 801f27a:	f100 809f 	bmi.w	801f3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f27e:	45b3      	cmp	fp, r6
 801f280:	f340 809c 	ble.w	801f3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f284:	f1be 0f00 	cmp.w	lr, #0
 801f288:	f000 8098 	beq.w	801f3bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f28c:	2800      	cmp	r0, #0
 801f28e:	f2c0 8093 	blt.w	801f3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f292:	4581      	cmp	r9, r0
 801f294:	f340 8090 	ble.w	801f3b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f298:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f29c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f2a0:	441e      	add	r6, r3
 801f2a2:	3001      	adds	r0, #1
 801f2a4:	f100 808d 	bmi.w	801f3c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2a8:	4581      	cmp	r9, r0
 801f2aa:	f340 808a 	ble.w	801f3c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2ae:	2c00      	cmp	r4, #0
 801f2b0:	f000 8087 	beq.w	801f3c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2b4:	44e1      	add	r9, ip
 801f2b6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f2ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f2be:	4413      	add	r3, r2
 801f2c0:	b2a4      	uxth	r4, r4
 801f2c2:	fa1f fe8e 	uxth.w	lr, lr
 801f2c6:	fb04 fb0e 	mul.w	fp, r4, lr
 801f2ca:	0124      	lsls	r4, r4, #4
 801f2cc:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f2d0:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f2d4:	eba4 040b 	sub.w	r4, r4, fp
 801f2d8:	fa1f f08e 	uxth.w	r0, lr
 801f2dc:	b2a2      	uxth	r2, r4
 801f2de:	78ac      	ldrb	r4, [r5, #2]
 801f2e0:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f2e4:	9901      	ldr	r1, [sp, #4]
 801f2e6:	eba9 0900 	sub.w	r9, r9, r0
 801f2ea:	fa1f f989 	uxth.w	r9, r9
 801f2ee:	4354      	muls	r4, r2
 801f2f0:	fb09 440c 	mla	r4, r9, ip, r4
 801f2f4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f2f8:	fb00 440c 	mla	r4, r0, ip, r4
 801f2fc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f300:	fa1f fe88 	uxth.w	lr, r8
 801f304:	ea6f 0808 	mvn.w	r8, r8
 801f308:	fa5f f888 	uxtb.w	r8, r8
 801f30c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f310:	fb1a fa08 	smulbb	sl, sl, r8
 801f314:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f318:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f31c:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f320:	787c      	ldrb	r4, [r7, #1]
 801f322:	782d      	ldrb	r5, [r5, #0]
 801f324:	783f      	ldrb	r7, [r7, #0]
 801f326:	fb02 fa0a 	mul.w	sl, r2, sl
 801f32a:	fb09 aa04 	mla	sl, r9, r4, sl
 801f32e:	7874      	ldrb	r4, [r6, #1]
 801f330:	436a      	muls	r2, r5
 801f332:	7835      	ldrb	r5, [r6, #0]
 801f334:	fb00 aa04 	mla	sl, r0, r4, sl
 801f338:	fb09 2207 	mla	r2, r9, r7, r2
 801f33c:	785c      	ldrb	r4, [r3, #1]
 801f33e:	781b      	ldrb	r3, [r3, #0]
 801f340:	fb00 2005 	mla	r0, r0, r5, r2
 801f344:	fb0b a404 	mla	r4, fp, r4, sl
 801f348:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f34c:	9b02      	ldr	r3, [sp, #8]
 801f34e:	fb11 fa08 	smulbb	sl, r1, r8
 801f352:	fa1f fc8c 	uxth.w	ip, ip
 801f356:	fb13 f808 	smulbb	r8, r3, r8
 801f35a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f35e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f362:	fb04 a40e 	mla	r4, r4, lr, sl
 801f366:	f10c 0301 	add.w	r3, ip, #1
 801f36a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f36e:	fa1f fe8e 	uxth.w	lr, lr
 801f372:	b2a4      	uxth	r4, r4
 801f374:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f378:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f37c:	f104 0a01 	add.w	sl, r4, #1
 801f380:	f10e 0c01 	add.w	ip, lr, #1
 801f384:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f388:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f38c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f390:	0964      	lsrs	r4, r4, #5
 801f392:	ea4c 0c03 	orr.w	ip, ip, r3
 801f396:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f39a:	9b03      	ldr	r3, [sp, #12]
 801f39c:	ea4c 0c04 	orr.w	ip, ip, r4
 801f3a0:	f8a3 c000 	strh.w	ip, [r3]
 801f3a4:	b007      	add	sp, #28
 801f3a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3aa:	af05      	add	r7, sp, #20
 801f3ac:	e756      	b.n	801f25c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f3ae:	ad05      	add	r5, sp, #20
 801f3b0:	462f      	mov	r7, r5
 801f3b2:	e761      	b.n	801f278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f3b4:	ad05      	add	r5, sp, #20
 801f3b6:	e75f      	b.n	801f278 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f3b8:	ae05      	add	r6, sp, #20
 801f3ba:	e772      	b.n	801f2a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f3bc:	ab05      	add	r3, sp, #20
 801f3be:	461e      	mov	r6, r3
 801f3c0:	e77e      	b.n	801f2c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f3c2:	ab05      	add	r3, sp, #20
 801f3c4:	e77c      	b.n	801f2c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f3c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f3c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3ca:	b095      	sub	sp, #84	; 0x54
 801f3cc:	9212      	str	r2, [sp, #72]	; 0x48
 801f3ce:	9309      	str	r3, [sp, #36]	; 0x24
 801f3d0:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f3d2:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f3d6:	930f      	str	r3, [sp, #60]	; 0x3c
 801f3d8:	910e      	str	r1, [sp, #56]	; 0x38
 801f3da:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f3de:	9013      	str	r0, [sp, #76]	; 0x4c
 801f3e0:	6850      	ldr	r0, [r2, #4]
 801f3e2:	6812      	ldr	r2, [r2, #0]
 801f3e4:	fb00 1303 	mla	r3, r0, r3, r1
 801f3e8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f3ec:	930a      	str	r3, [sp, #40]	; 0x28
 801f3ee:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3f0:	681b      	ldr	r3, [r3, #0]
 801f3f2:	930d      	str	r3, [sp, #52]	; 0x34
 801f3f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f3f6:	685c      	ldr	r4, [r3, #4]
 801f3f8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f3fa:	43db      	mvns	r3, r3
 801f3fc:	b2db      	uxtb	r3, r3
 801f3fe:	3404      	adds	r4, #4
 801f400:	930b      	str	r3, [sp, #44]	; 0x2c
 801f402:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f404:	2b00      	cmp	r3, #0
 801f406:	dc03      	bgt.n	801f410 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f408:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f40a:	2b00      	cmp	r3, #0
 801f40c:	f340 8255 	ble.w	801f8ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f410:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f416:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f41a:	1e48      	subs	r0, r1, #1
 801f41c:	1e55      	subs	r5, r2, #1
 801f41e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f420:	2b00      	cmp	r3, #0
 801f422:	f340 80f9 	ble.w	801f618 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f426:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f428:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f42a:	1436      	asrs	r6, r6, #16
 801f42c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f430:	d406      	bmi.n	801f440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f432:	4286      	cmp	r6, r0
 801f434:	da04      	bge.n	801f440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f436:	2b00      	cmp	r3, #0
 801f438:	db02      	blt.n	801f440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f43a:	42ab      	cmp	r3, r5
 801f43c:	f2c0 80ed 	blt.w	801f61a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f440:	3601      	adds	r6, #1
 801f442:	f100 80da 	bmi.w	801f5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f446:	42b1      	cmp	r1, r6
 801f448:	f2c0 80d7 	blt.w	801f5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f44c:	3301      	adds	r3, #1
 801f44e:	f100 80d4 	bmi.w	801f5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f452:	429a      	cmp	r2, r3
 801f454:	f2c0 80d1 	blt.w	801f5fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f458:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f45a:	9311      	str	r3, [sp, #68]	; 0x44
 801f45c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f45e:	930c      	str	r3, [sp, #48]	; 0x30
 801f460:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f462:	2b00      	cmp	r3, #0
 801f464:	f340 80fa 	ble.w	801f65c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f468:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f46a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f46c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f46e:	68c6      	ldr	r6, [r0, #12]
 801f470:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f472:	141d      	asrs	r5, r3, #16
 801f474:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f478:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f47a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f47c:	1400      	asrs	r0, r0, #16
 801f47e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f482:	6892      	ldr	r2, [r2, #8]
 801f484:	f100 813e 	bmi.w	801f704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f488:	1e57      	subs	r7, r2, #1
 801f48a:	42b8      	cmp	r0, r7
 801f48c:	f280 813a 	bge.w	801f704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f490:	2d00      	cmp	r5, #0
 801f492:	f2c0 8137 	blt.w	801f704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f496:	1e77      	subs	r7, r6, #1
 801f498:	42bd      	cmp	r5, r7
 801f49a:	f280 8133 	bge.w	801f704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f49e:	b212      	sxth	r2, r2
 801f4a0:	fb05 0002 	mla	r0, r5, r2, r0
 801f4a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f4a6:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f4aa:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f4ae:	182e      	adds	r6, r5, r0
 801f4b0:	eb04 050a 	add.w	r5, r4, sl
 801f4b4:	2b00      	cmp	r3, #0
 801f4b6:	f000 8117 	beq.w	801f6e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f4ba:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f4be:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f4c2:	44a4      	add	ip, r4
 801f4c4:	2900      	cmp	r1, #0
 801f4c6:	f000 8117 	beq.w	801f6f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f4ca:	18b0      	adds	r0, r6, r2
 801f4cc:	5cb2      	ldrb	r2, [r6, r2]
 801f4ce:	7840      	ldrb	r0, [r0, #1]
 801f4d0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f4d4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f4d8:	4422      	add	r2, r4
 801f4da:	4420      	add	r0, r4
 801f4dc:	b29b      	uxth	r3, r3
 801f4de:	b289      	uxth	r1, r1
 801f4e0:	fb03 f901 	mul.w	r9, r3, r1
 801f4e4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f4e8:	011b      	lsls	r3, r3, #4
 801f4ea:	b289      	uxth	r1, r1
 801f4ec:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f4f0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f4f4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f4f6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f4fa:	f8b6 e000 	ldrh.w	lr, [r6]
 801f4fe:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f502:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f506:	eba3 0309 	sub.w	r3, r3, r9
 801f50a:	b29b      	uxth	r3, r3
 801f50c:	eba8 0801 	sub.w	r8, r8, r1
 801f510:	fa1f f888 	uxth.w	r8, r8
 801f514:	435f      	muls	r7, r3
 801f516:	fb08 770b 	mla	r7, r8, fp, r7
 801f51a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f51e:	9310      	str	r3, [sp, #64]	; 0x40
 801f520:	fb01 770b 	mla	r7, r1, fp, r7
 801f524:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f528:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f52a:	fb09 770b 	mla	r7, r9, fp, r7
 801f52e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f532:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f536:	fb1b fb03 	smulbb	fp, fp, r3
 801f53a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f53e:	fb07 b706 	mla	r7, r7, r6, fp
 801f542:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f544:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f548:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f54c:	f89c c000 	ldrb.w	ip, [ip]
 801f550:	435d      	muls	r5, r3
 801f552:	fb08 550b 	mla	r5, r8, fp, r5
 801f556:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f55a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f55c:	fb01 550b 	mla	r5, r1, fp, r5
 801f560:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f564:	fb09 550b 	mla	r5, r9, fp, r5
 801f568:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f56c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f570:	fb1b fb03 	smulbb	fp, fp, r3
 801f574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f576:	fb03 f30c 	mul.w	r3, r3, ip
 801f57a:	f892 c000 	ldrb.w	ip, [r2]
 801f57e:	fb08 330a 	mla	r3, r8, sl, r3
 801f582:	fb01 330c 	mla	r3, r1, ip, r3
 801f586:	f890 c000 	ldrb.w	ip, [r0]
 801f58a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f58e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f592:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f594:	fa5f fe8e 	uxtb.w	lr, lr
 801f598:	b2bf      	uxth	r7, r7
 801f59a:	fb1e fe03 	smulbb	lr, lr, r3
 801f59e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f5a2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5a6:	fb05 b506 	mla	r5, r5, r6, fp
 801f5aa:	1c7b      	adds	r3, r7, #1
 801f5ac:	fb0c e606 	mla	r6, ip, r6, lr
 801f5b0:	b2ad      	uxth	r5, r5
 801f5b2:	b2b6      	uxth	r6, r6
 801f5b4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f5b8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f5bc:	f105 0b01 	add.w	fp, r5, #1
 801f5c0:	1c77      	adds	r7, r6, #1
 801f5c2:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f5c6:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f5ca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f5ce:	096d      	lsrs	r5, r5, #5
 801f5d0:	431f      	orrs	r7, r3
 801f5d2:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f5d6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f5d8:	433d      	orrs	r5, r7
 801f5da:	801d      	strh	r5, [r3, #0]
 801f5dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f5de:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f5e0:	3302      	adds	r3, #2
 801f5e2:	930c      	str	r3, [sp, #48]	; 0x30
 801f5e4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f5e6:	4413      	add	r3, r2
 801f5e8:	931f      	str	r3, [sp, #124]	; 0x7c
 801f5ea:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f5ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5ee:	4413      	add	r3, r2
 801f5f0:	9320      	str	r3, [sp, #128]	; 0x80
 801f5f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f5f4:	3b01      	subs	r3, #1
 801f5f6:	9311      	str	r3, [sp, #68]	; 0x44
 801f5f8:	e732      	b.n	801f460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f5fa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f5fc:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f5fe:	4433      	add	r3, r6
 801f600:	931f      	str	r3, [sp, #124]	; 0x7c
 801f602:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f604:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f606:	4433      	add	r3, r6
 801f608:	9320      	str	r3, [sp, #128]	; 0x80
 801f60a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f60c:	3b01      	subs	r3, #1
 801f60e:	9309      	str	r3, [sp, #36]	; 0x24
 801f610:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f612:	3302      	adds	r3, #2
 801f614:	930a      	str	r3, [sp, #40]	; 0x28
 801f616:	e702      	b.n	801f41e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f618:	d027      	beq.n	801f66a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f61a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f61c:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f61e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f620:	3b01      	subs	r3, #1
 801f622:	fb00 5003 	mla	r0, r0, r3, r5
 801f626:	1400      	asrs	r0, r0, #16
 801f628:	f53f af16 	bmi.w	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f62c:	3901      	subs	r1, #1
 801f62e:	4288      	cmp	r0, r1
 801f630:	f6bf af12 	bge.w	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f634:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f636:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f638:	fb01 0303 	mla	r3, r1, r3, r0
 801f63c:	141b      	asrs	r3, r3, #16
 801f63e:	f53f af0b 	bmi.w	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f642:	3a01      	subs	r2, #1
 801f644:	4293      	cmp	r3, r2
 801f646:	f6bf af07 	bge.w	801f458 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f64a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f64c:	9311      	str	r3, [sp, #68]	; 0x44
 801f64e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f652:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f654:	930c      	str	r3, [sp, #48]	; 0x30
 801f656:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f658:	2b00      	cmp	r3, #0
 801f65a:	dc70      	bgt.n	801f73e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f65c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f65e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f660:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f664:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f668:	930a      	str	r3, [sp, #40]	; 0x28
 801f66a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f66c:	2b00      	cmp	r3, #0
 801f66e:	f340 8124 	ble.w	801f8ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f672:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f676:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f67a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f67e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f680:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f684:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f688:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f68c:	eef0 6a62 	vmov.f32	s13, s5
 801f690:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f694:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f698:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f69c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f6a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6a4:	eef0 6a43 	vmov.f32	s13, s6
 801f6a8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6ac:	ee12 2a90 	vmov	r2, s5
 801f6b0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6b4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6b8:	ee13 2a10 	vmov	r2, s6
 801f6bc:	9321      	str	r3, [sp, #132]	; 0x84
 801f6be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f6c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6c4:	9322      	str	r3, [sp, #136]	; 0x88
 801f6c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6c8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f6ca:	3b01      	subs	r3, #1
 801f6cc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6d0:	930e      	str	r3, [sp, #56]	; 0x38
 801f6d2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f6d4:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f6d8:	bf08      	it	eq
 801f6da:	4613      	moveq	r3, r2
 801f6dc:	9309      	str	r3, [sp, #36]	; 0x24
 801f6de:	eeb0 3a67 	vmov.f32	s6, s15
 801f6e2:	eef0 2a47 	vmov.f32	s5, s14
 801f6e6:	e68c      	b.n	801f402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f6e8:	b149      	cbz	r1, 801f6fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f6ea:	5cb2      	ldrb	r2, [r6, r2]
 801f6ec:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f6f0:	4422      	add	r2, r4
 801f6f2:	4628      	mov	r0, r5
 801f6f4:	46ac      	mov	ip, r5
 801f6f6:	e6f1      	b.n	801f4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f6f8:	4628      	mov	r0, r5
 801f6fa:	462a      	mov	r2, r5
 801f6fc:	e6ee      	b.n	801f4dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f6fe:	4628      	mov	r0, r5
 801f700:	462a      	mov	r2, r5
 801f702:	e7f7      	b.n	801f6f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f704:	1c47      	adds	r7, r0, #1
 801f706:	f53f af69 	bmi.w	801f5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f70a:	42ba      	cmp	r2, r7
 801f70c:	f6ff af66 	blt.w	801f5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f710:	1c6f      	adds	r7, r5, #1
 801f712:	f53f af63 	bmi.w	801f5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f716:	42be      	cmp	r6, r7
 801f718:	f6ff af60 	blt.w	801f5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f71c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f71e:	9002      	str	r0, [sp, #8]
 801f720:	b236      	sxth	r6, r6
 801f722:	b212      	sxth	r2, r2
 801f724:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f728:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f72c:	9200      	str	r2, [sp, #0]
 801f72e:	9601      	str	r6, [sp, #4]
 801f730:	4623      	mov	r3, r4
 801f732:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f736:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f738:	f7ff fd59 	bl	801f1ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f73c:	e74e      	b.n	801f5dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f73e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f740:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f742:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f744:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f746:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f74a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f74c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f750:	142d      	asrs	r5, r5, #16
 801f752:	1400      	asrs	r0, r0, #16
 801f754:	fb02 5000 	mla	r0, r2, r0, r5
 801f758:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f75a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f75e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f762:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f766:	182e      	adds	r6, r5, r0
 801f768:	eb04 0509 	add.w	r5, r4, r9
 801f76c:	2b00      	cmp	r3, #0
 801f76e:	f000 8096 	beq.w	801f89e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f772:	7877      	ldrb	r7, [r6, #1]
 801f774:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f778:	4427      	add	r7, r4
 801f77a:	2900      	cmp	r1, #0
 801f77c:	f000 8097 	beq.w	801f8ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f780:	18b0      	adds	r0, r6, r2
 801f782:	5cb2      	ldrb	r2, [r6, r2]
 801f784:	7840      	ldrb	r0, [r0, #1]
 801f786:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f78a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f78e:	4422      	add	r2, r4
 801f790:	4420      	add	r0, r4
 801f792:	b29b      	uxth	r3, r3
 801f794:	b289      	uxth	r1, r1
 801f796:	fb03 f801 	mul.w	r8, r3, r1
 801f79a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f79c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f7a0:	f8b6 c000 	ldrh.w	ip, [r6]
 801f7a4:	78be      	ldrb	r6, [r7, #2]
 801f7a6:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f7aa:	011b      	lsls	r3, r3, #4
 801f7ac:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f7b0:	b289      	uxth	r1, r1
 801f7b2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801f7b6:	eba3 0308 	sub.w	r3, r3, r8
 801f7ba:	b29b      	uxth	r3, r3
 801f7bc:	ebae 0e01 	sub.w	lr, lr, r1
 801f7c0:	fa1f fe8e 	uxth.w	lr, lr
 801f7c4:	435e      	muls	r6, r3
 801f7c6:	fb0e 660b 	mla	r6, lr, fp, r6
 801f7ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f7ce:	9310      	str	r3, [sp, #64]	; 0x40
 801f7d0:	fb01 660b 	mla	r6, r1, fp, r6
 801f7d4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f7d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7da:	fb08 660b 	mla	r6, r8, fp, r6
 801f7de:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f7e2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f7e6:	fb1b fb03 	smulbb	fp, fp, r3
 801f7ea:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f7ee:	fb06 b60a 	mla	r6, r6, sl, fp
 801f7f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f7f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f7f8:	787d      	ldrb	r5, [r7, #1]
 801f7fa:	783f      	ldrb	r7, [r7, #0]
 801f7fc:	435d      	muls	r5, r3
 801f7fe:	fb0e 550b 	mla	r5, lr, fp, r5
 801f802:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f806:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f808:	fb01 550b 	mla	r5, r1, fp, r5
 801f80c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f810:	fb08 550b 	mla	r5, r8, fp, r5
 801f814:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f818:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f81c:	fb1b fb03 	smulbb	fp, fp, r3
 801f820:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f822:	437b      	muls	r3, r7
 801f824:	7817      	ldrb	r7, [r2, #0]
 801f826:	fb0e 3309 	mla	r3, lr, r9, r3
 801f82a:	fb01 3307 	mla	r3, r1, r7, r3
 801f82e:	7807      	ldrb	r7, [r0, #0]
 801f830:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f834:	fb08 3707 	mla	r7, r8, r7, r3
 801f838:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f83a:	fa5f fc8c 	uxtb.w	ip, ip
 801f83e:	fb1c fc03 	smulbb	ip, ip, r3
 801f842:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f846:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f84a:	fb05 b50a 	mla	r5, r5, sl, fp
 801f84e:	fb07 c70a 	mla	r7, r7, sl, ip
 801f852:	b2b6      	uxth	r6, r6
 801f854:	b2ad      	uxth	r5, r5
 801f856:	b2bf      	uxth	r7, r7
 801f858:	1c73      	adds	r3, r6, #1
 801f85a:	1c7a      	adds	r2, r7, #1
 801f85c:	f105 0b01 	add.w	fp, r5, #1
 801f860:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f864:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f868:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f86c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f870:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801f874:	096d      	lsrs	r5, r5, #5
 801f876:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f878:	4316      	orrs	r6, r2
 801f87a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f87e:	432e      	orrs	r6, r5
 801f880:	f823 6b02 	strh.w	r6, [r3], #2
 801f884:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f886:	930c      	str	r3, [sp, #48]	; 0x30
 801f888:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f88a:	4413      	add	r3, r2
 801f88c:	931f      	str	r3, [sp, #124]	; 0x7c
 801f88e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f890:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f892:	4413      	add	r3, r2
 801f894:	9320      	str	r3, [sp, #128]	; 0x80
 801f896:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f898:	3b01      	subs	r3, #1
 801f89a:	9311      	str	r3, [sp, #68]	; 0x44
 801f89c:	e6db      	b.n	801f656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f89e:	b149      	cbz	r1, 801f8b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f8a0:	5cb2      	ldrb	r2, [r6, r2]
 801f8a2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8a6:	4422      	add	r2, r4
 801f8a8:	4628      	mov	r0, r5
 801f8aa:	462f      	mov	r7, r5
 801f8ac:	e771      	b.n	801f792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8ae:	4628      	mov	r0, r5
 801f8b0:	462a      	mov	r2, r5
 801f8b2:	e76e      	b.n	801f792 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8b4:	4628      	mov	r0, r5
 801f8b6:	462a      	mov	r2, r5
 801f8b8:	e7f7      	b.n	801f8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f8ba:	b015      	add	sp, #84	; 0x54
 801f8bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f8c0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8c4:	880f      	ldrh	r7, [r1, #0]
 801f8c6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801f8ca:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801f8ce:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801f8d2:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f8d6:	023c      	lsls	r4, r7, #8
 801f8d8:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801f8dc:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801f8e0:	017c      	lsls	r4, r7, #5
 801f8e2:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801f8e6:	00ff      	lsls	r7, r7, #3
 801f8e8:	ea4b 0404 	orr.w	r4, fp, r4
 801f8ec:	b2ff      	uxtb	r7, r7
 801f8ee:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f8f2:	4327      	orrs	r7, r4
 801f8f4:	2d00      	cmp	r5, #0
 801f8f6:	eb02 080a 	add.w	r8, r2, sl
 801f8fa:	9701      	str	r7, [sp, #4]
 801f8fc:	db7e      	blt.n	801f9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f8fe:	45a9      	cmp	r9, r5
 801f900:	dd7c      	ble.n	801f9fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f902:	f1bc 0f00 	cmp.w	ip, #0
 801f906:	db77      	blt.n	801f9f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f908:	45e6      	cmp	lr, ip
 801f90a:	dd75      	ble.n	801f9f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f90c:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f910:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f914:	441f      	add	r7, r3
 801f916:	f11c 0201 	adds.w	r2, ip, #1
 801f91a:	d472      	bmi.n	801fa02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f91c:	4596      	cmp	lr, r2
 801f91e:	dd70      	ble.n	801fa02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f920:	2800      	cmp	r0, #0
 801f922:	d06e      	beq.n	801fa02 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f924:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f928:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f92c:	441c      	add	r4, r3
 801f92e:	3501      	adds	r5, #1
 801f930:	d46b      	bmi.n	801fa0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f932:	45a9      	cmp	r9, r5
 801f934:	dd69      	ble.n	801fa0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f936:	2e00      	cmp	r6, #0
 801f938:	d067      	beq.n	801fa0a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f93a:	f1bc 0f00 	cmp.w	ip, #0
 801f93e:	db62      	blt.n	801fa06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f940:	45e6      	cmp	lr, ip
 801f942:	dd60      	ble.n	801fa06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f944:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f948:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f94c:	441d      	add	r5, r3
 801f94e:	f11c 0201 	adds.w	r2, ip, #1
 801f952:	d45d      	bmi.n	801fa10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f954:	4596      	cmp	lr, r2
 801f956:	dd5b      	ble.n	801fa10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f958:	2800      	cmp	r0, #0
 801f95a:	d059      	beq.n	801fa10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f95c:	44c6      	add	lr, r8
 801f95e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f962:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f966:	4413      	add	r3, r2
 801f968:	b280      	uxth	r0, r0
 801f96a:	b2b2      	uxth	r2, r6
 801f96c:	fb00 f602 	mul.w	r6, r0, r2
 801f970:	0100      	lsls	r0, r0, #4
 801f972:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f976:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801f97a:	1b80      	subs	r0, r0, r6
 801f97c:	fa1f fc82 	uxth.w	ip, r2
 801f980:	b282      	uxth	r2, r0
 801f982:	78a0      	ldrb	r0, [r4, #2]
 801f984:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f988:	f897 9000 	ldrb.w	r9, [r7]
 801f98c:	787f      	ldrb	r7, [r7, #1]
 801f98e:	eba8 080c 	sub.w	r8, r8, ip
 801f992:	fa1f f888 	uxth.w	r8, r8
 801f996:	4350      	muls	r0, r2
 801f998:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f99c:	78a8      	ldrb	r0, [r5, #2]
 801f99e:	fb0c e000 	mla	r0, ip, r0, lr
 801f9a2:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f9a6:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f9aa:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801f9ae:	f894 e000 	ldrb.w	lr, [r4]
 801f9b2:	fb02 fe0e 	mul.w	lr, r2, lr
 801f9b6:	fb08 e909 	mla	r9, r8, r9, lr
 801f9ba:	f895 e000 	ldrb.w	lr, [r5]
 801f9be:	fb0c 990e 	mla	r9, ip, lr, r9
 801f9c2:	f893 e000 	ldrb.w	lr, [r3]
 801f9c6:	785b      	ldrb	r3, [r3, #1]
 801f9c8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f9cc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f9d0:	ea4e 0e00 	orr.w	lr, lr, r0
 801f9d4:	7860      	ldrb	r0, [r4, #1]
 801f9d6:	4350      	muls	r0, r2
 801f9d8:	786a      	ldrb	r2, [r5, #1]
 801f9da:	fb08 0007 	mla	r0, r8, r7, r0
 801f9de:	fb0c 0202 	mla	r2, ip, r2, r0
 801f9e2:	fb06 2303 	mla	r3, r6, r3, r2
 801f9e6:	095b      	lsrs	r3, r3, #5
 801f9e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9ec:	ea4e 0303 	orr.w	r3, lr, r3
 801f9f0:	800b      	strh	r3, [r1, #0]
 801f9f2:	b003      	add	sp, #12
 801f9f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f9f8:	af01      	add	r7, sp, #4
 801f9fa:	e78c      	b.n	801f916 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f9fc:	ac01      	add	r4, sp, #4
 801f9fe:	4627      	mov	r7, r4
 801fa00:	e795      	b.n	801f92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa02:	ac01      	add	r4, sp, #4
 801fa04:	e793      	b.n	801f92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa06:	ad01      	add	r5, sp, #4
 801fa08:	e7a1      	b.n	801f94e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fa0a:	ab01      	add	r3, sp, #4
 801fa0c:	461d      	mov	r5, r3
 801fa0e:	e7ab      	b.n	801f968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fa10:	ab01      	add	r3, sp, #4
 801fa12:	e7a9      	b.n	801f968 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fa14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa14:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa18:	b08f      	sub	sp, #60	; 0x3c
 801fa1a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fa1e:	920c      	str	r2, [sp, #48]	; 0x30
 801fa20:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fa22:	910a      	str	r1, [sp, #40]	; 0x28
 801fa24:	9306      	str	r3, [sp, #24]
 801fa26:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fa2a:	900d      	str	r0, [sp, #52]	; 0x34
 801fa2c:	6850      	ldr	r0, [r2, #4]
 801fa2e:	6812      	ldr	r2, [r2, #0]
 801fa30:	fb00 1303 	mla	r3, r0, r3, r1
 801fa34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa38:	9307      	str	r3, [sp, #28]
 801fa3a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa3c:	681b      	ldr	r3, [r3, #0]
 801fa3e:	9308      	str	r3, [sp, #32]
 801fa40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa42:	685c      	ldr	r4, [r3, #4]
 801fa44:	3404      	adds	r4, #4
 801fa46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fa48:	2b00      	cmp	r3, #0
 801fa4a:	dc03      	bgt.n	801fa54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fa4c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fa4e:	2b00      	cmp	r3, #0
 801fa50:	f340 81d6 	ble.w	801fe00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fa54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa56:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa5a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa5e:	1e48      	subs	r0, r1, #1
 801fa60:	1e56      	subs	r6, r2, #1
 801fa62:	9b06      	ldr	r3, [sp, #24]
 801fa64:	2b00      	cmp	r3, #0
 801fa66:	f340 80b7 	ble.w	801fbd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fa6a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fa6e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fa72:	d406      	bmi.n	801fa82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa74:	4287      	cmp	r7, r0
 801fa76:	da04      	bge.n	801fa82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa78:	2b00      	cmp	r3, #0
 801fa7a:	db02      	blt.n	801fa82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa7c:	42b3      	cmp	r3, r6
 801fa7e:	f2c0 80ac 	blt.w	801fbda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fa82:	3701      	adds	r7, #1
 801fa84:	f100 809d 	bmi.w	801fbc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa88:	42b9      	cmp	r1, r7
 801fa8a:	f2c0 809a 	blt.w	801fbc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa8e:	3301      	adds	r3, #1
 801fa90:	f100 8097 	bmi.w	801fbc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa94:	429a      	cmp	r2, r3
 801fa96:	f2c0 8094 	blt.w	801fbc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fa9a:	9b06      	ldr	r3, [sp, #24]
 801fa9c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fa9e:	9b07      	ldr	r3, [sp, #28]
 801faa0:	9309      	str	r3, [sp, #36]	; 0x24
 801faa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faa4:	2b00      	cmp	r3, #0
 801faa6:	f340 80b5 	ble.w	801fc14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801faaa:	9820      	ldr	r0, [sp, #128]	; 0x80
 801faac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801faae:	68c7      	ldr	r7, [r0, #12]
 801fab0:	6892      	ldr	r2, [r2, #8]
 801fab2:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fab6:	ea4f 4625 	mov.w	r6, r5, asr #16
 801faba:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fabe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fac2:	f100 80fb 	bmi.w	801fcbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fac6:	f102 3cff 	add.w	ip, r2, #4294967295
 801faca:	4560      	cmp	r0, ip
 801facc:	f280 80f6 	bge.w	801fcbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fad0:	2e00      	cmp	r6, #0
 801fad2:	f2c0 80f3 	blt.w	801fcbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fad6:	f107 3cff 	add.w	ip, r7, #4294967295
 801fada:	4566      	cmp	r6, ip
 801fadc:	f280 80ee 	bge.w	801fcbc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fae0:	b212      	sxth	r2, r2
 801fae2:	fb06 0002 	mla	r0, r6, r2, r0
 801fae6:	9e08      	ldr	r6, [sp, #32]
 801fae8:	1837      	adds	r7, r6, r0
 801faea:	5c30      	ldrb	r0, [r6, r0]
 801faec:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801faf0:	eb04 0c08 	add.w	ip, r4, r8
 801faf4:	2b00      	cmp	r3, #0
 801faf6:	f000 80d3 	beq.w	801fca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fafa:	787e      	ldrb	r6, [r7, #1]
 801fafc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fb00:	4426      	add	r6, r4
 801fb02:	2900      	cmp	r1, #0
 801fb04:	f000 80d4 	beq.w	801fcb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fb08:	18b8      	adds	r0, r7, r2
 801fb0a:	5cba      	ldrb	r2, [r7, r2]
 801fb0c:	7840      	ldrb	r0, [r0, #1]
 801fb0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb16:	4422      	add	r2, r4
 801fb18:	4420      	add	r0, r4
 801fb1a:	b29b      	uxth	r3, r3
 801fb1c:	b289      	uxth	r1, r1
 801fb1e:	fb03 f901 	mul.w	r9, r3, r1
 801fb22:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb26:	011b      	lsls	r3, r3, #4
 801fb28:	b289      	uxth	r1, r1
 801fb2a:	78b7      	ldrb	r7, [r6, #2]
 801fb2c:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fb30:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fb34:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fb38:	eba3 0309 	sub.w	r3, r3, r9
 801fb3c:	b29b      	uxth	r3, r3
 801fb3e:	ebae 0e01 	sub.w	lr, lr, r1
 801fb42:	fa1f fe8e 	uxth.w	lr, lr
 801fb46:	435f      	muls	r7, r3
 801fb48:	fb0e 770a 	mla	r7, lr, sl, r7
 801fb4c:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fb50:	fb01 770a 	mla	r7, r1, sl, r7
 801fb54:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fb58:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fb5c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fb60:	f896 8000 	ldrb.w	r8, [r6]
 801fb64:	7876      	ldrb	r6, [r6, #1]
 801fb66:	fb03 f808 	mul.w	r8, r3, r8
 801fb6a:	fb0e 8807 	mla	r8, lr, r7, r8
 801fb6e:	7817      	ldrb	r7, [r2, #0]
 801fb70:	fb01 8807 	mla	r8, r1, r7, r8
 801fb74:	7807      	ldrb	r7, [r0, #0]
 801fb76:	fb09 8707 	mla	r7, r9, r7, r8
 801fb7a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fb7e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fb82:	ea47 070a 	orr.w	r7, r7, sl
 801fb86:	4373      	muls	r3, r6
 801fb88:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fb8c:	fb0e 330c 	mla	r3, lr, ip, r3
 801fb90:	fb01 310a 	mla	r1, r1, sl, r3
 801fb94:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fb98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb9a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fb9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fba2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fba6:	ea47 070a 	orr.w	r7, r7, sl
 801fbaa:	801f      	strh	r7, [r3, #0]
 801fbac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fbae:	3302      	adds	r3, #2
 801fbb0:	9309      	str	r3, [sp, #36]	; 0x24
 801fbb2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fbb4:	449b      	add	fp, r3
 801fbb6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbb8:	441d      	add	r5, r3
 801fbba:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fbbc:	3b01      	subs	r3, #1
 801fbbe:	930b      	str	r3, [sp, #44]	; 0x2c
 801fbc0:	e76f      	b.n	801faa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fbc2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fbc4:	449b      	add	fp, r3
 801fbc6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbc8:	441d      	add	r5, r3
 801fbca:	9b06      	ldr	r3, [sp, #24]
 801fbcc:	3b01      	subs	r3, #1
 801fbce:	9306      	str	r3, [sp, #24]
 801fbd0:	9b07      	ldr	r3, [sp, #28]
 801fbd2:	3302      	adds	r3, #2
 801fbd4:	9307      	str	r3, [sp, #28]
 801fbd6:	e744      	b.n	801fa62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fbd8:	d023      	beq.n	801fc22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fbda:	9b06      	ldr	r3, [sp, #24]
 801fbdc:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fbde:	3b01      	subs	r3, #1
 801fbe0:	fb00 b003 	mla	r0, r0, r3, fp
 801fbe4:	1400      	asrs	r0, r0, #16
 801fbe6:	f53f af58 	bmi.w	801fa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fbea:	3901      	subs	r1, #1
 801fbec:	4288      	cmp	r0, r1
 801fbee:	f6bf af54 	bge.w	801fa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fbf2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fbf4:	fb01 5303 	mla	r3, r1, r3, r5
 801fbf8:	141b      	asrs	r3, r3, #16
 801fbfa:	f53f af4e 	bmi.w	801fa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fbfe:	3a01      	subs	r2, #1
 801fc00:	4293      	cmp	r3, r2
 801fc02:	f6bf af4a 	bge.w	801fa9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc06:	9b06      	ldr	r3, [sp, #24]
 801fc08:	9309      	str	r3, [sp, #36]	; 0x24
 801fc0a:	9b07      	ldr	r3, [sp, #28]
 801fc0c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fc0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc10:	2b00      	cmp	r3, #0
 801fc12:	dc70      	bgt.n	801fcf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fc14:	9b06      	ldr	r3, [sp, #24]
 801fc16:	9a07      	ldr	r2, [sp, #28]
 801fc18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fc1c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc20:	9307      	str	r3, [sp, #28]
 801fc22:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc24:	2b00      	cmp	r3, #0
 801fc26:	f340 80eb 	ble.w	801fe00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fc2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc2e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc32:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc40:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc44:	eef0 6a62 	vmov.f32	s13, s5
 801fc48:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc4c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc50:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc54:	ee16 ba90 	vmov	fp, s13
 801fc58:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc5c:	eef0 6a43 	vmov.f32	s13, s6
 801fc60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc64:	ee12 2a90 	vmov	r2, s5
 801fc68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc6c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc70:	ee13 2a10 	vmov	r2, s6
 801fc74:	931b      	str	r3, [sp, #108]	; 0x6c
 801fc76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc78:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc7c:	931c      	str	r3, [sp, #112]	; 0x70
 801fc7e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fc80:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fc82:	3b01      	subs	r3, #1
 801fc84:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc88:	930a      	str	r3, [sp, #40]	; 0x28
 801fc8a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fc8c:	bf08      	it	eq
 801fc8e:	4613      	moveq	r3, r2
 801fc90:	ee16 5a90 	vmov	r5, s13
 801fc94:	9306      	str	r3, [sp, #24]
 801fc96:	eeb0 3a67 	vmov.f32	s6, s15
 801fc9a:	eef0 2a47 	vmov.f32	s5, s14
 801fc9e:	e6d2      	b.n	801fa46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fca0:	b149      	cbz	r1, 801fcb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fca2:	5cba      	ldrb	r2, [r7, r2]
 801fca4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fca8:	4422      	add	r2, r4
 801fcaa:	4660      	mov	r0, ip
 801fcac:	4666      	mov	r6, ip
 801fcae:	e734      	b.n	801fb1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcb0:	4660      	mov	r0, ip
 801fcb2:	4662      	mov	r2, ip
 801fcb4:	e731      	b.n	801fb1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcb6:	4660      	mov	r0, ip
 801fcb8:	4662      	mov	r2, ip
 801fcba:	e7f7      	b.n	801fcac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fcbc:	f110 0c01 	adds.w	ip, r0, #1
 801fcc0:	f53f af74 	bmi.w	801fbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcc4:	4562      	cmp	r2, ip
 801fcc6:	f6ff af71 	blt.w	801fbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcca:	f116 0c01 	adds.w	ip, r6, #1
 801fcce:	f53f af6d 	bmi.w	801fbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcd2:	4567      	cmp	r7, ip
 801fcd4:	f6ff af6a 	blt.w	801fbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcd8:	b23f      	sxth	r7, r7
 801fcda:	b212      	sxth	r2, r2
 801fcdc:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fce0:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fce4:	9200      	str	r2, [sp, #0]
 801fce6:	9701      	str	r7, [sp, #4]
 801fce8:	4623      	mov	r3, r4
 801fcea:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fcee:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fcf0:	f7ff fde6 	bl	801f8c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fcf4:	e75a      	b.n	801fbac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcf6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fcf8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fcfc:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fd00:	1428      	asrs	r0, r5, #16
 801fd02:	fb02 6000 	mla	r0, r2, r0, r6
 801fd06:	9e08      	ldr	r6, [sp, #32]
 801fd08:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fd0c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd10:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fd14:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd18:	1837      	adds	r7, r6, r0
 801fd1a:	eb04 0c08 	add.w	ip, r4, r8
 801fd1e:	2b00      	cmp	r3, #0
 801fd20:	d060      	beq.n	801fde4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fd22:	787e      	ldrb	r6, [r7, #1]
 801fd24:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fd28:	4426      	add	r6, r4
 801fd2a:	2900      	cmp	r1, #0
 801fd2c:	d062      	beq.n	801fdf4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fd2e:	18b8      	adds	r0, r7, r2
 801fd30:	5cba      	ldrb	r2, [r7, r2]
 801fd32:	7840      	ldrb	r0, [r0, #1]
 801fd34:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd38:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd3c:	4422      	add	r2, r4
 801fd3e:	4420      	add	r0, r4
 801fd40:	b29b      	uxth	r3, r3
 801fd42:	b289      	uxth	r1, r1
 801fd44:	fb03 f901 	mul.w	r9, r3, r1
 801fd48:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fd4c:	011b      	lsls	r3, r3, #4
 801fd4e:	b289      	uxth	r1, r1
 801fd50:	78b7      	ldrb	r7, [r6, #2]
 801fd52:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fd56:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fd5a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fd5e:	eba3 0309 	sub.w	r3, r3, r9
 801fd62:	b29b      	uxth	r3, r3
 801fd64:	ebae 0e01 	sub.w	lr, lr, r1
 801fd68:	fa1f fe8e 	uxth.w	lr, lr
 801fd6c:	435f      	muls	r7, r3
 801fd6e:	fb0e 770a 	mla	r7, lr, sl, r7
 801fd72:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fd76:	fb01 770a 	mla	r7, r1, sl, r7
 801fd7a:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fd7e:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fd82:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fd86:	f896 8000 	ldrb.w	r8, [r6]
 801fd8a:	7876      	ldrb	r6, [r6, #1]
 801fd8c:	fb03 f808 	mul.w	r8, r3, r8
 801fd90:	fb0e 8807 	mla	r8, lr, r7, r8
 801fd94:	7817      	ldrb	r7, [r2, #0]
 801fd96:	fb01 8807 	mla	r8, r1, r7, r8
 801fd9a:	7807      	ldrb	r7, [r0, #0]
 801fd9c:	fb09 8707 	mla	r7, r9, r7, r8
 801fda0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fda4:	4373      	muls	r3, r6
 801fda6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdaa:	7856      	ldrb	r6, [r2, #1]
 801fdac:	ea47 070a 	orr.w	r7, r7, sl
 801fdb0:	fb0e 330c 	mla	r3, lr, ip, r3
 801fdb4:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fdb8:	fb01 3306 	mla	r3, r1, r6, r3
 801fdbc:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fdc0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fdc4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fdc6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fdca:	ea47 070a 	orr.w	r7, r7, sl
 801fdce:	f823 7b02 	strh.w	r7, [r3], #2
 801fdd2:	930b      	str	r3, [sp, #44]	; 0x2c
 801fdd4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fdd6:	449b      	add	fp, r3
 801fdd8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fdda:	441d      	add	r5, r3
 801fddc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fdde:	3b01      	subs	r3, #1
 801fde0:	9309      	str	r3, [sp, #36]	; 0x24
 801fde2:	e714      	b.n	801fc0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fde4:	b149      	cbz	r1, 801fdfa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fde6:	5cba      	ldrb	r2, [r7, r2]
 801fde8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fdec:	4422      	add	r2, r4
 801fdee:	4660      	mov	r0, ip
 801fdf0:	4666      	mov	r6, ip
 801fdf2:	e7a5      	b.n	801fd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fdf4:	4660      	mov	r0, ip
 801fdf6:	4662      	mov	r2, ip
 801fdf8:	e7a2      	b.n	801fd40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fdfa:	4660      	mov	r0, ip
 801fdfc:	4662      	mov	r2, ip
 801fdfe:	e7f7      	b.n	801fdf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fe00:	b00f      	add	sp, #60	; 0x3c
 801fe02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fe06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe0a:	b085      	sub	sp, #20
 801fe0c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801fe10:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801fe14:	9102      	str	r1, [sp, #8]
 801fe16:	2c00      	cmp	r4, #0
 801fe18:	fb04 710c 	mla	r1, r4, ip, r7
 801fe1c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801fe20:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801fe24:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801fe28:	eb02 0e01 	add.w	lr, r2, r1
 801fe2c:	f2c0 8122 	blt.w	8020074 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe30:	45a0      	cmp	r8, r4
 801fe32:	f340 811f 	ble.w	8020074 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe36:	2f00      	cmp	r7, #0
 801fe38:	f2c0 811a 	blt.w	8020070 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe3c:	45bc      	cmp	ip, r7
 801fe3e:	f340 8117 	ble.w	8020070 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe42:	5c52      	ldrb	r2, [r2, r1]
 801fe44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fe48:	1c7a      	adds	r2, r7, #1
 801fe4a:	f100 8116 	bmi.w	802007a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe4e:	4594      	cmp	ip, r2
 801fe50:	f340 8113 	ble.w	802007a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe54:	2e00      	cmp	r6, #0
 801fe56:	f000 8112 	beq.w	802007e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fe5a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fe5e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fe62:	3401      	adds	r4, #1
 801fe64:	f100 810f 	bmi.w	8020086 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe68:	45a0      	cmp	r8, r4
 801fe6a:	f340 810c 	ble.w	8020086 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe6e:	2800      	cmp	r0, #0
 801fe70:	f000 810c 	beq.w	802008c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fe74:	2f00      	cmp	r7, #0
 801fe76:	f2c0 8104 	blt.w	8020082 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fe7a:	45bc      	cmp	ip, r7
 801fe7c:	f340 8101 	ble.w	8020082 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fe80:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fe84:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801fe88:	3701      	adds	r7, #1
 801fe8a:	f100 8102 	bmi.w	8020092 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fe8e:	45bc      	cmp	ip, r7
 801fe90:	f340 80ff 	ble.w	8020092 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801fe94:	2e00      	cmp	r6, #0
 801fe96:	f000 80fe 	beq.w	8020096 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801fe9a:	44f4      	add	ip, lr
 801fe9c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fea0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fea4:	b2b6      	uxth	r6, r6
 801fea6:	b280      	uxth	r0, r0
 801fea8:	fb00 fe06 	mul.w	lr, r0, r6
 801feac:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801feb0:	0136      	lsls	r6, r6, #4
 801feb2:	eba6 070e 	sub.w	r7, r6, lr
 801feb6:	b280      	uxth	r0, r0
 801feb8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801febc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fec0:	b2bf      	uxth	r7, r7
 801fec2:	1a1b      	subs	r3, r3, r0
 801fec4:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801fec8:	b29b      	uxth	r3, r3
 801feca:	fb0a f607 	mul.w	r6, sl, r7
 801fece:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fed2:	fb0b 6603 	mla	r6, fp, r3, r6
 801fed6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801feda:	fb00 6609 	mla	r6, r0, r9, r6
 801fede:	fb0e 6608 	mla	r6, lr, r8, r6
 801fee2:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fee6:	9600      	str	r6, [sp, #0]
 801fee8:	2e00      	cmp	r6, #0
 801feea:	f000 80be 	beq.w	802006a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801feee:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fef2:	fb0b fc0c 	mul.w	ip, fp, ip
 801fef6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801fefa:	fb0b f505 	mul.w	r5, fp, r5
 801fefe:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ff02:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ff06:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ff0a:	44dc      	add	ip, fp
 801ff0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff10:	9501      	str	r5, [sp, #4]
 801ff12:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ff16:	9503      	str	r5, [sp, #12]
 801ff18:	9d01      	ldr	r5, [sp, #4]
 801ff1a:	9e02      	ldr	r6, [sp, #8]
 801ff1c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801ff20:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ff24:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ff28:	fb0a fc0c 	mul.w	ip, sl, ip
 801ff2c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ff30:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ff34:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ff38:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ff3c:	4465      	add	r5, ip
 801ff3e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ff42:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ff46:	fb09 fc0c 	mul.w	ip, r9, ip
 801ff4a:	fb09 f904 	mul.w	r9, r9, r4
 801ff4e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ff52:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ff56:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ff5a:	fb08 f404 	mul.w	r4, r8, r4
 801ff5e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ff62:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ff66:	fb08 f802 	mul.w	r8, r8, r2
 801ff6a:	fb0a fa01 	mul.w	sl, sl, r1
 801ff6e:	0a22      	lsrs	r2, r4, #8
 801ff70:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ff74:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ff78:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ff7c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ff80:	4414      	add	r4, r2
 801ff82:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ff86:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ff8a:	0a2d      	lsrs	r5, r5, #8
 801ff8c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ff90:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ff94:	9a03      	ldr	r2, [sp, #12]
 801ff96:	8836      	ldrh	r6, [r6, #0]
 801ff98:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ff9c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ffa0:	437d      	muls	r5, r7
 801ffa2:	4461      	add	r1, ip
 801ffa4:	0a24      	lsrs	r4, r4, #8
 801ffa6:	fb02 5503 	mla	r5, r2, r3, r5
 801ffaa:	0a09      	lsrs	r1, r1, #8
 801ffac:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ffb0:	fb04 540e 	mla	r4, r4, lr, r5
 801ffb4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ffb8:	fb01 4100 	mla	r1, r1, r0, r4
 801ffbc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ffc0:	0a09      	lsrs	r1, r1, #8
 801ffc2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ffc6:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ffca:	fb07 f70a 	mul.w	r7, r7, sl
 801ffce:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ffd2:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ffd6:	fb03 7101 	mla	r1, r3, r1, r7
 801ffda:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ffde:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ffe2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ffe6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ffea:	fb00 e101 	mla	r1, r0, r1, lr
 801ffee:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801fff2:	9a00      	ldr	r2, [sp, #0]
 801fff4:	b287      	uxth	r7, r0
 801fff6:	437a      	muls	r2, r7
 801fff8:	0a09      	lsrs	r1, r1, #8
 801fffa:	1c53      	adds	r3, r2, #1
 801fffc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020000:	4321      	orrs	r1, r4
 8020002:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020006:	1235      	asrs	r5, r6, #8
 8020008:	0c0a      	lsrs	r2, r1, #16
 802000a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802000e:	b2db      	uxtb	r3, r3
 8020010:	fb12 f207 	smulbb	r2, r2, r7
 8020014:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8020018:	fb05 2503 	mla	r5, r5, r3, r2
 802001c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020020:	10f2      	asrs	r2, r6, #3
 8020022:	b2c8      	uxtb	r0, r1
 8020024:	00f6      	lsls	r6, r6, #3
 8020026:	fb14 f407 	smulbb	r4, r4, r7
 802002a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802002e:	b2f6      	uxtb	r6, r6
 8020030:	fb10 f007 	smulbb	r0, r0, r7
 8020034:	fb02 4203 	mla	r2, r2, r3, r4
 8020038:	b2ad      	uxth	r5, r5
 802003a:	fb06 0303 	mla	r3, r6, r3, r0
 802003e:	b299      	uxth	r1, r3
 8020040:	b294      	uxth	r4, r2
 8020042:	1c6b      	adds	r3, r5, #1
 8020044:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020048:	1c62      	adds	r2, r4, #1
 802004a:	1c4b      	adds	r3, r1, #1
 802004c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020050:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020054:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020058:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802005c:	0952      	lsrs	r2, r2, #5
 802005e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020062:	432b      	orrs	r3, r5
 8020064:	4313      	orrs	r3, r2
 8020066:	9a02      	ldr	r2, [sp, #8]
 8020068:	8013      	strh	r3, [r2, #0]
 802006a:	b005      	add	sp, #20
 802006c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020070:	2500      	movs	r5, #0
 8020072:	e6e9      	b.n	801fe48 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020074:	2100      	movs	r1, #0
 8020076:	460d      	mov	r5, r1
 8020078:	e6f3      	b.n	801fe62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802007a:	2100      	movs	r1, #0
 802007c:	e6f1      	b.n	801fe62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802007e:	4631      	mov	r1, r6
 8020080:	e6ef      	b.n	801fe62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020082:	2400      	movs	r4, #0
 8020084:	e700      	b.n	801fe88 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8020086:	2200      	movs	r2, #0
 8020088:	4614      	mov	r4, r2
 802008a:	e70b      	b.n	801fea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802008c:	4602      	mov	r2, r0
 802008e:	4604      	mov	r4, r0
 8020090:	e708      	b.n	801fea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020092:	2200      	movs	r2, #0
 8020094:	e706      	b.n	801fea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020096:	4632      	mov	r2, r6
 8020098:	e704      	b.n	801fea4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802009a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802009a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802009e:	b09f      	sub	sp, #124	; 0x7c
 80200a0:	921b      	str	r2, [sp, #108]	; 0x6c
 80200a2:	9309      	str	r3, [sp, #36]	; 0x24
 80200a4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80200a6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80200aa:	931c      	str	r3, [sp, #112]	; 0x70
 80200ac:	9119      	str	r1, [sp, #100]	; 0x64
 80200ae:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80200b2:	901d      	str	r0, [sp, #116]	; 0x74
 80200b4:	6850      	ldr	r0, [r2, #4]
 80200b6:	6812      	ldr	r2, [r2, #0]
 80200b8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80200ba:	fb00 1303 	mla	r3, r0, r3, r1
 80200be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80200c2:	930c      	str	r3, [sp, #48]	; 0x30
 80200c4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80200c6:	681b      	ldr	r3, [r3, #0]
 80200c8:	9312      	str	r3, [sp, #72]	; 0x48
 80200ca:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80200cc:	685e      	ldr	r6, [r3, #4]
 80200ce:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 80200d2:	930d      	str	r3, [sp, #52]	; 0x34
 80200d4:	3604      	adds	r6, #4
 80200d6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80200d8:	2b00      	cmp	r3, #0
 80200da:	dc03      	bgt.n	80200e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80200dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80200de:	2b00      	cmp	r3, #0
 80200e0:	f340 8388 	ble.w	80207f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80200e4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80200e6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80200ea:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80200ee:	1e48      	subs	r0, r1, #1
 80200f0:	1e57      	subs	r7, r2, #1
 80200f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200f4:	2b00      	cmp	r3, #0
 80200f6:	f340 8195 	ble.w	8020424 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80200fa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80200fc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020100:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020104:	d406      	bmi.n	8020114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020106:	4584      	cmp	ip, r0
 8020108:	da04      	bge.n	8020114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802010a:	2b00      	cmp	r3, #0
 802010c:	db02      	blt.n	8020114 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802010e:	42bb      	cmp	r3, r7
 8020110:	f2c0 8189 	blt.w	8020426 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8020114:	f11c 0c01 	adds.w	ip, ip, #1
 8020118:	f100 8177 	bmi.w	802040a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802011c:	4561      	cmp	r1, ip
 802011e:	f2c0 8174 	blt.w	802040a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020122:	3301      	adds	r3, #1
 8020124:	f100 8171 	bmi.w	802040a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020128:	429a      	cmp	r2, r3
 802012a:	f2c0 816e 	blt.w	802040a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802012e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020130:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8020132:	931a      	str	r3, [sp, #104]	; 0x68
 8020134:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020136:	2b00      	cmp	r3, #0
 8020138:	f340 8193 	ble.w	8020462 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802013c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802013e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020142:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020144:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8020148:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802014a:	141b      	asrs	r3, r3, #16
 802014c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020150:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020154:	f100 81d6 	bmi.w	8020504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020158:	f100 38ff 	add.w	r8, r0, #4294967295
 802015c:	4543      	cmp	r3, r8
 802015e:	f280 81d1 	bge.w	8020504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020162:	f1bc 0f00 	cmp.w	ip, #0
 8020166:	f2c0 81cd 	blt.w	8020504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802016a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802016e:	45c4      	cmp	ip, r8
 8020170:	f280 81c8 	bge.w	8020504 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020174:	b200      	sxth	r0, r0
 8020176:	fb0c 3300 	mla	r3, ip, r0, r3
 802017a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802017c:	eb04 0803 	add.w	r8, r4, r3
 8020180:	5ce3      	ldrb	r3, [r4, r3]
 8020182:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020186:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802018a:	2a00      	cmp	r2, #0
 802018c:	f000 81af 	beq.w	80204ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020190:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020194:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020198:	940e      	str	r4, [sp, #56]	; 0x38
 802019a:	0e24      	lsrs	r4, r4, #24
 802019c:	9415      	str	r4, [sp, #84]	; 0x54
 802019e:	b179      	cbz	r1, 80201c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80201a0:	eb08 0c00 	add.w	ip, r8, r0
 80201a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80201a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80201ac:	900a      	str	r0, [sp, #40]	; 0x28
 80201ae:	0e00      	lsrs	r0, r0, #24
 80201b0:	9013      	str	r0, [sp, #76]	; 0x4c
 80201b2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80201b6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80201ba:	900f      	str	r0, [sp, #60]	; 0x3c
 80201bc:	0e00      	lsrs	r0, r0, #24
 80201be:	9016      	str	r0, [sp, #88]	; 0x58
 80201c0:	b292      	uxth	r2, r2
 80201c2:	b289      	uxth	r1, r1
 80201c4:	fb02 f901 	mul.w	r9, r2, r1
 80201c8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80201cc:	0112      	lsls	r2, r2, #4
 80201ce:	eba2 0809 	sub.w	r8, r2, r9
 80201d2:	b289      	uxth	r1, r1
 80201d4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80201d8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80201da:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80201dc:	fa1f f888 	uxth.w	r8, r8
 80201e0:	1a52      	subs	r2, r2, r1
 80201e2:	b292      	uxth	r2, r2
 80201e4:	fb08 f000 	mul.w	r0, r8, r0
 80201e8:	fb02 000e 	mla	r0, r2, lr, r0
 80201ec:	fb01 0004 	mla	r0, r1, r4, r0
 80201f0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80201f2:	fb09 0004 	mla	r0, r9, r4, r0
 80201f6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80201fa:	2800      	cmp	r0, #0
 80201fc:	f000 80fa 	beq.w	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020200:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020204:	d01b      	beq.n	802023e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020206:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802020a:	fb0e fa0a 	mul.w	sl, lr, sl
 802020e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020212:	fb0e fe03 	mul.w	lr, lr, r3
 8020216:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802021a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802021e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020222:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020226:	4453      	add	r3, sl
 8020228:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802022c:	0a1b      	lsrs	r3, r3, #8
 802022e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020232:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020236:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802023a:	ea43 030c 	orr.w	r3, r3, ip
 802023e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020240:	2cff      	cmp	r4, #255	; 0xff
 8020242:	d021      	beq.n	8020288 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020244:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020246:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802024a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802024c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020250:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020252:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020256:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020258:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802025c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020260:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020264:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020268:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802026c:	44de      	add	lr, fp
 802026e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020272:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020276:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802027a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802027e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020282:	ea4e 040a 	orr.w	r4, lr, sl
 8020286:	940e      	str	r4, [sp, #56]	; 0x38
 8020288:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802028a:	2cff      	cmp	r4, #255	; 0xff
 802028c:	d021      	beq.n	80202d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802028e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020290:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020294:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020296:	fb04 fb0b 	mul.w	fp, r4, fp
 802029a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802029c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80202a0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80202a2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80202a6:	fb04 fa0a 	mul.w	sl, r4, sl
 80202aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80202b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80202b6:	44de      	add	lr, fp
 80202b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80202bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80202c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80202cc:	ea4e 040a 	orr.w	r4, lr, sl
 80202d0:	940a      	str	r4, [sp, #40]	; 0x28
 80202d2:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80202d4:	2cff      	cmp	r4, #255	; 0xff
 80202d6:	d021      	beq.n	802031c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80202d8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80202da:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80202de:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80202e0:	fb04 fb0b 	mul.w	fp, r4, fp
 80202e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80202e6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80202ea:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80202ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80202f0:	fb04 fa0a 	mul.w	sl, r4, sl
 80202f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80202f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80202fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020300:	44de      	add	lr, fp
 8020302:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020306:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802030a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802030e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020312:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020316:	ea4e 040a 	orr.w	r4, lr, sl
 802031a:	940f      	str	r4, [sp, #60]	; 0x3c
 802031c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802031e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020322:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020324:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020328:	fb08 fc0c 	mul.w	ip, r8, ip
 802032c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020330:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020334:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020336:	fb01 cc0e 	mla	ip, r1, lr, ip
 802033a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802033e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020340:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020344:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020348:	fb08 f80e 	mul.w	r8, r8, lr
 802034c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020350:	fb02 8303 	mla	r3, r2, r3, r8
 8020354:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020356:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020358:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802035c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802035e:	fb01 330a 	mla	r3, r1, sl, r3
 8020362:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020366:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020368:	fb09 3901 	mla	r9, r9, r1, r3
 802036c:	4342      	muls	r2, r0
 802036e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020372:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020376:	883b      	ldrh	r3, [r7, #0]
 8020378:	1c50      	adds	r0, r2, #1
 802037a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802037e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020382:	ea4c 0c09 	orr.w	ip, ip, r9
 8020386:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802038a:	1219      	asrs	r1, r3, #8
 802038c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020390:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020394:	b2c0      	uxtb	r0, r0
 8020396:	fb12 f204 	smulbb	r2, r2, r4
 802039a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802039e:	fb01 2100 	mla	r1, r1, r0, r2
 80203a2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80203a6:	10da      	asrs	r2, r3, #3
 80203a8:	fa5f fc8c 	uxtb.w	ip, ip
 80203ac:	00db      	lsls	r3, r3, #3
 80203ae:	fb1c fc04 	smulbb	ip, ip, r4
 80203b2:	b2db      	uxtb	r3, r3
 80203b4:	b289      	uxth	r1, r1
 80203b6:	fb03 c300 	mla	r3, r3, r0, ip
 80203ba:	fa1f fc83 	uxth.w	ip, r3
 80203be:	1c4b      	adds	r3, r1, #1
 80203c0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80203c4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80203c8:	fb1e fe04 	smulbb	lr, lr, r4
 80203cc:	f10c 0301 	add.w	r3, ip, #1
 80203d0:	fb02 e200 	mla	r2, r2, r0, lr
 80203d4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80203d8:	b292      	uxth	r2, r2
 80203da:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80203de:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80203e2:	430b      	orrs	r3, r1
 80203e4:	1c51      	adds	r1, r2, #1
 80203e6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80203ea:	0952      	lsrs	r2, r2, #5
 80203ec:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80203f0:	4313      	orrs	r3, r2
 80203f2:	803b      	strh	r3, [r7, #0]
 80203f4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80203f6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80203f8:	441a      	add	r2, r3
 80203fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80203fc:	9229      	str	r2, [sp, #164]	; 0xa4
 80203fe:	441d      	add	r5, r3
 8020400:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8020402:	3b01      	subs	r3, #1
 8020404:	3702      	adds	r7, #2
 8020406:	931a      	str	r3, [sp, #104]	; 0x68
 8020408:	e694      	b.n	8020134 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802040a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802040c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802040e:	441c      	add	r4, r3
 8020410:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020412:	9429      	str	r4, [sp, #164]	; 0xa4
 8020414:	441d      	add	r5, r3
 8020416:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020418:	3b01      	subs	r3, #1
 802041a:	9309      	str	r3, [sp, #36]	; 0x24
 802041c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802041e:	3302      	adds	r3, #2
 8020420:	930c      	str	r3, [sp, #48]	; 0x30
 8020422:	e666      	b.n	80200f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020424:	d024      	beq.n	8020470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8020426:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020428:	982b      	ldr	r0, [sp, #172]	; 0xac
 802042a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802042c:	3b01      	subs	r3, #1
 802042e:	fb00 4003 	mla	r0, r0, r3, r4
 8020432:	1400      	asrs	r0, r0, #16
 8020434:	f53f ae7b 	bmi.w	802012e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020438:	3901      	subs	r1, #1
 802043a:	4288      	cmp	r0, r1
 802043c:	f6bf ae77 	bge.w	802012e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020440:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8020442:	fb01 5303 	mla	r3, r1, r3, r5
 8020446:	141b      	asrs	r3, r3, #16
 8020448:	f53f ae71 	bmi.w	802012e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802044c:	3a01      	subs	r2, #1
 802044e:	4293      	cmp	r3, r2
 8020450:	f6bf ae6d 	bge.w	802012e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020454:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020458:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802045c:	f1bb 0f00 	cmp.w	fp, #0
 8020460:	dc70      	bgt.n	8020544 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020462:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020464:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020468:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802046a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802046e:	930c      	str	r3, [sp, #48]	; 0x30
 8020470:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020472:	2b00      	cmp	r3, #0
 8020474:	f340 81be 	ble.w	80207f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020478:	ee30 0a04 	vadd.f32	s0, s0, s8
 802047c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020480:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020484:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020486:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802048a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802048e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020492:	eef0 6a62 	vmov.f32	s13, s5
 8020496:	ee61 7a27 	vmul.f32	s15, s2, s15
 802049a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802049e:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204a2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80204a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204aa:	eef0 6a43 	vmov.f32	s13, s6
 80204ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204b2:	ee12 2a90 	vmov	r2, s5
 80204b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80204ba:	fb92 f3f3 	sdiv	r3, r2, r3
 80204be:	ee13 2a10 	vmov	r2, s6
 80204c2:	932b      	str	r3, [sp, #172]	; 0xac
 80204c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80204c6:	fb92 f3f3 	sdiv	r3, r2, r3
 80204ca:	932c      	str	r3, [sp, #176]	; 0xb0
 80204cc:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80204ce:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80204d0:	3b01      	subs	r3, #1
 80204d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204d6:	9319      	str	r3, [sp, #100]	; 0x64
 80204d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80204da:	bf08      	it	eq
 80204dc:	4613      	moveq	r3, r2
 80204de:	ee16 5a90 	vmov	r5, s13
 80204e2:	9309      	str	r3, [sp, #36]	; 0x24
 80204e4:	eeb0 3a67 	vmov.f32	s6, s15
 80204e8:	eef0 2a47 	vmov.f32	s5, s14
 80204ec:	e5f3      	b.n	80200d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80204ee:	2900      	cmp	r1, #0
 80204f0:	f43f ae66 	beq.w	80201c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80204f4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80204f8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80204fc:	900a      	str	r0, [sp, #40]	; 0x28
 80204fe:	0e00      	lsrs	r0, r0, #24
 8020500:	9013      	str	r0, [sp, #76]	; 0x4c
 8020502:	e65d      	b.n	80201c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020504:	f113 0801 	adds.w	r8, r3, #1
 8020508:	f53f af74 	bmi.w	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802050c:	4540      	cmp	r0, r8
 802050e:	f6ff af71 	blt.w	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020512:	f11c 0801 	adds.w	r8, ip, #1
 8020516:	f53f af6d 	bmi.w	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802051a:	45c6      	cmp	lr, r8
 802051c:	f6ff af6a 	blt.w	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020520:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8020522:	9302      	str	r3, [sp, #8]
 8020524:	b200      	sxth	r0, r0
 8020526:	fa0f f38e 	sxth.w	r3, lr
 802052a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802052e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020532:	9301      	str	r3, [sp, #4]
 8020534:	9000      	str	r0, [sp, #0]
 8020536:	4633      	mov	r3, r6
 8020538:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802053a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802053c:	4639      	mov	r1, r7
 802053e:	f7ff fc62 	bl	801fe06 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020542:	e757      	b.n	80203f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020544:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8020546:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8020548:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802054c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802054e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020552:	1427      	asrs	r7, r4, #16
 8020554:	142b      	asrs	r3, r5, #16
 8020556:	fb01 7303 	mla	r3, r1, r3, r7
 802055a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802055c:	18e7      	adds	r7, r4, r3
 802055e:	5ce3      	ldrb	r3, [r4, r3]
 8020560:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020564:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020568:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802056c:	2a00      	cmp	r2, #0
 802056e:	f000 8137 	beq.w	80207e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020572:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020576:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802057a:	9410      	str	r4, [sp, #64]	; 0x40
 802057c:	0e24      	lsrs	r4, r4, #24
 802057e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020580:	b170      	cbz	r0, 80205a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020582:	eb07 0e01 	add.w	lr, r7, r1
 8020586:	5c79      	ldrb	r1, [r7, r1]
 8020588:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802058c:	910b      	str	r1, [sp, #44]	; 0x2c
 802058e:	0e09      	lsrs	r1, r1, #24
 8020590:	9114      	str	r1, [sp, #80]	; 0x50
 8020592:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020596:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802059a:	9111      	str	r1, [sp, #68]	; 0x44
 802059c:	0e09      	lsrs	r1, r1, #24
 802059e:	9118      	str	r1, [sp, #96]	; 0x60
 80205a0:	b292      	uxth	r2, r2
 80205a2:	b280      	uxth	r0, r0
 80205a4:	fb02 f800 	mul.w	r8, r2, r0
 80205a8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80205ac:	0112      	lsls	r2, r2, #4
 80205ae:	eba2 0e08 	sub.w	lr, r2, r8
 80205b2:	b280      	uxth	r0, r0
 80205b4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80205b8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80205ba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80205bc:	fa1f fe8e 	uxth.w	lr, lr
 80205c0:	1a12      	subs	r2, r2, r0
 80205c2:	b292      	uxth	r2, r2
 80205c4:	fb0e f101 	mul.w	r1, lr, r1
 80205c8:	fb02 110c 	mla	r1, r2, ip, r1
 80205cc:	fb00 1104 	mla	r1, r0, r4, r1
 80205d0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80205d2:	fb08 1104 	mla	r1, r8, r4, r1
 80205d6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80205da:	2900      	cmp	r1, #0
 80205dc:	f000 80f5 	beq.w	80207ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80205e0:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80205e4:	d019      	beq.n	802061a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 80205e6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80205ea:	fb0c fa0a 	mul.w	sl, ip, sl
 80205ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80205f2:	fb0c fc03 	mul.w	ip, ip, r3
 80205f6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80205fa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80205fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020602:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020606:	4453      	add	r3, sl
 8020608:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802060c:	0a1b      	lsrs	r3, r3, #8
 802060e:	0a3f      	lsrs	r7, r7, #8
 8020610:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020614:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020618:	433b      	orrs	r3, r7
 802061a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802061c:	2cff      	cmp	r4, #255	; 0xff
 802061e:	d020      	beq.n	8020662 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020620:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020622:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020626:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020628:	4367      	muls	r7, r4
 802062a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802062c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020630:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8020632:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020636:	fb04 fa0a 	mul.w	sl, r4, sl
 802063a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802063e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020642:	44bc      	add	ip, r7
 8020644:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020648:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802064c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020650:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020654:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020658:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802065c:	ea4c 040a 	orr.w	r4, ip, sl
 8020660:	9410      	str	r4, [sp, #64]	; 0x40
 8020662:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020664:	2cff      	cmp	r4, #255	; 0xff
 8020666:	d020      	beq.n	80206aa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020668:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802066a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802066e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020670:	4367      	muls	r7, r4
 8020672:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020674:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020678:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802067a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802067e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020682:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020686:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802068a:	44bc      	add	ip, r7
 802068c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020690:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020694:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020698:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802069c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206a4:	ea4c 040a 	orr.w	r4, ip, sl
 80206a8:	940b      	str	r4, [sp, #44]	; 0x2c
 80206aa:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80206ac:	2cff      	cmp	r4, #255	; 0xff
 80206ae:	d020      	beq.n	80206f2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80206b0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80206b2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80206b6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80206b8:	4367      	muls	r7, r4
 80206ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80206bc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80206c0:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80206c2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80206c6:	fb04 fa0a 	mul.w	sl, r4, sl
 80206ca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80206ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206d2:	44bc      	add	ip, r7
 80206d4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80206d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80206dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80206e8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80206ec:	ea4c 040a 	orr.w	r4, ip, sl
 80206f0:	9411      	str	r4, [sp, #68]	; 0x44
 80206f2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80206f4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80206f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80206fa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80206fe:	fb0e f707 	mul.w	r7, lr, r7
 8020702:	fb02 770c 	mla	r7, r2, ip, r7
 8020706:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802070a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802070c:	fb00 770c 	mla	r7, r0, ip, r7
 8020710:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020714:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020716:	fb08 770c 	mla	r7, r8, ip, r7
 802071a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802071e:	fb0e fe0c 	mul.w	lr, lr, ip
 8020722:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020726:	fb02 e303 	mla	r3, r2, r3, lr
 802072a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802072c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802072e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020732:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8020734:	fb00 330a 	mla	r3, r0, sl, r3
 8020738:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802073c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020740:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8020742:	f8b9 0000 	ldrh.w	r0, [r9]
 8020746:	434b      	muls	r3, r1
 8020748:	0a3f      	lsrs	r7, r7, #8
 802074a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802074e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020752:	1c59      	adds	r1, r3, #1
 8020754:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020758:	ea47 070c 	orr.w	r7, r7, ip
 802075c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020760:	1202      	asrs	r2, r0, #8
 8020762:	0c3b      	lsrs	r3, r7, #16
 8020764:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020768:	b2c9      	uxtb	r1, r1
 802076a:	fb13 f304 	smulbb	r3, r3, r4
 802076e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020772:	fb02 3201 	mla	r2, r2, r1, r3
 8020776:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802077a:	10c3      	asrs	r3, r0, #3
 802077c:	b2ff      	uxtb	r7, r7
 802077e:	00c0      	lsls	r0, r0, #3
 8020780:	b292      	uxth	r2, r2
 8020782:	fb1c fc04 	smulbb	ip, ip, r4
 8020786:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802078a:	b2c0      	uxtb	r0, r0
 802078c:	fb17 f704 	smulbb	r7, r7, r4
 8020790:	fb03 c301 	mla	r3, r3, r1, ip
 8020794:	fb00 7001 	mla	r0, r0, r1, r7
 8020798:	f102 0c01 	add.w	ip, r2, #1
 802079c:	b280      	uxth	r0, r0
 802079e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80207a2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80207a6:	1c42      	adds	r2, r0, #1
 80207a8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80207ac:	b29b      	uxth	r3, r3
 80207ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80207b2:	ea42 020c 	orr.w	r2, r2, ip
 80207b6:	f103 0c01 	add.w	ip, r3, #1
 80207ba:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80207be:	095b      	lsrs	r3, r3, #5
 80207c0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80207c4:	431a      	orrs	r2, r3
 80207c6:	f8a9 2000 	strh.w	r2, [r9]
 80207ca:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80207cc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80207ce:	441a      	add	r2, r3
 80207d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80207d2:	9229      	str	r2, [sp, #164]	; 0xa4
 80207d4:	f109 0902 	add.w	r9, r9, #2
 80207d8:	441d      	add	r5, r3
 80207da:	f10b 3bff 	add.w	fp, fp, #4294967295
 80207de:	e63d      	b.n	802045c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80207e0:	2800      	cmp	r0, #0
 80207e2:	f43f aedd 	beq.w	80205a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80207e6:	5c79      	ldrb	r1, [r7, r1]
 80207e8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80207ec:	910b      	str	r1, [sp, #44]	; 0x2c
 80207ee:	0e09      	lsrs	r1, r1, #24
 80207f0:	9114      	str	r1, [sp, #80]	; 0x50
 80207f2:	e6d5      	b.n	80205a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80207f4:	b01f      	add	sp, #124	; 0x7c
 80207f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080207fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80207fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80207fe:	b089      	sub	sp, #36	; 0x24
 8020800:	9101      	str	r1, [sp, #4]
 8020802:	9801      	ldr	r0, [sp, #4]
 8020804:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020808:	8800      	ldrh	r0, [r0, #0]
 802080a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 802080e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020812:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020816:	1206      	asrs	r6, r0, #8
 8020818:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 802081c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020820:	9602      	str	r6, [sp, #8]
 8020822:	10c6      	asrs	r6, r0, #3
 8020824:	00c0      	lsls	r0, r0, #3
 8020826:	b2c0      	uxtb	r0, r0
 8020828:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802082c:	9004      	str	r0, [sp, #16]
 802082e:	2f00      	cmp	r7, #0
 8020830:	fb07 100c 	mla	r0, r7, ip, r1
 8020834:	9603      	str	r6, [sp, #12]
 8020836:	eb02 0e00 	add.w	lr, r2, r0
 802083a:	f2c0 810a 	blt.w	8020a52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802083e:	45b8      	cmp	r8, r7
 8020840:	f340 8107 	ble.w	8020a52 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020844:	2900      	cmp	r1, #0
 8020846:	f2c0 8102 	blt.w	8020a4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802084a:	458c      	cmp	ip, r1
 802084c:	f340 80ff 	ble.w	8020a4e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020850:	5c12      	ldrb	r2, [r2, r0]
 8020852:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020856:	1c4a      	adds	r2, r1, #1
 8020858:	f100 80fe 	bmi.w	8020a58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802085c:	4594      	cmp	ip, r2
 802085e:	f340 80fb 	ble.w	8020a58 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020862:	2d00      	cmp	r5, #0
 8020864:	f000 80fa 	beq.w	8020a5c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020868:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802086c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020870:	3701      	adds	r7, #1
 8020872:	f100 80f7 	bmi.w	8020a64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020876:	45b8      	cmp	r8, r7
 8020878:	f340 80f4 	ble.w	8020a64 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802087c:	2c00      	cmp	r4, #0
 802087e:	f000 80f4 	beq.w	8020a6a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020882:	2900      	cmp	r1, #0
 8020884:	eb0e 020c 	add.w	r2, lr, ip
 8020888:	f2c0 80ea 	blt.w	8020a60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802088c:	458c      	cmp	ip, r1
 802088e:	f340 80e7 	ble.w	8020a60 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020892:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020896:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 802089a:	3101      	adds	r1, #1
 802089c:	f100 80e8 	bmi.w	8020a70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208a0:	458c      	cmp	ip, r1
 80208a2:	f340 80e5 	ble.w	8020a70 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208a6:	2d00      	cmp	r5, #0
 80208a8:	f000 80e4 	beq.w	8020a74 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80208ac:	7852      	ldrb	r2, [r2, #1]
 80208ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80208b2:	0e0b      	lsrs	r3, r1, #24
 80208b4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80208b8:	9300      	str	r3, [sp, #0]
 80208ba:	b2a4      	uxth	r4, r4
 80208bc:	b2ab      	uxth	r3, r5
 80208be:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 80208c2:	fb03 f904 	mul.w	r9, r3, r4
 80208c6:	fb0a f505 	mul.w	r5, sl, r5
 80208ca:	011b      	lsls	r3, r3, #4
 80208cc:	eba3 0e09 	sub.w	lr, r3, r9
 80208d0:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 80208d4:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 80208d8:	0a28      	lsrs	r0, r5, #8
 80208da:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80208de:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 80208e2:	4405      	add	r5, r0
 80208e4:	0a2d      	lsrs	r5, r5, #8
 80208e6:	fb0a f303 	mul.w	r3, sl, r3
 80208ea:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 80208ee:	9005      	str	r0, [sp, #20]
 80208f0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 80208f4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80208f8:	0a1b      	lsrs	r3, r3, #8
 80208fa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80208fe:	9306      	str	r3, [sp, #24]
 8020900:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020904:	fb0b f303 	mul.w	r3, fp, r3
 8020908:	0a1d      	lsrs	r5, r3, #8
 802090a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 802090e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020912:	fb0b f606 	mul.w	r6, fp, r6
 8020916:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 802091a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 802091e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020922:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020926:	fb08 f707 	mul.w	r7, r8, r7
 802092a:	441d      	add	r5, r3
 802092c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020930:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020934:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020938:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 802093c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020940:	0a1b      	lsrs	r3, r3, #8
 8020942:	9307      	str	r3, [sp, #28]
 8020944:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020948:	0e0b      	lsrs	r3, r1, #24
 802094a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 802094e:	435f      	muls	r7, r3
 8020950:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020954:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020958:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 802095c:	4460      	add	r0, ip
 802095e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020962:	b2a4      	uxth	r4, r4
 8020964:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020968:	0a2d      	lsrs	r5, r5, #8
 802096a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802096e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020972:	fa1f fe8e 	uxth.w	lr, lr
 8020976:	4359      	muls	r1, r3
 8020978:	1b12      	subs	r2, r2, r4
 802097a:	9b05      	ldr	r3, [sp, #20]
 802097c:	44bc      	add	ip, r7
 802097e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020982:	b292      	uxth	r2, r2
 8020984:	fb05 f50e 	mul.w	r5, r5, lr
 8020988:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802098c:	fb03 5502 	mla	r5, r3, r2, r5
 8020990:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020994:	9b06      	ldr	r3, [sp, #24]
 8020996:	f501 7780 	add.w	r7, r1, #256	; 0x100
 802099a:	0a36      	lsrs	r6, r6, #8
 802099c:	0a00      	lsrs	r0, r0, #8
 802099e:	fb0c 5509 	mla	r5, ip, r9, r5
 80209a2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80209a6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80209aa:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80209ae:	fb00 5504 	mla	r5, r0, r4, r5
 80209b2:	fb0e f606 	mul.w	r6, lr, r6
 80209b6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80209ba:	0a09      	lsrs	r1, r1, #8
 80209bc:	9b07      	ldr	r3, [sp, #28]
 80209be:	fb02 6000 	mla	r0, r2, r0, r6
 80209c2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80209c6:	fb09 0001 	mla	r0, r9, r1, r0
 80209ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209ce:	fb0e fe0b 	mul.w	lr, lr, fp
 80209d2:	fb04 0003 	mla	r0, r4, r3, r0
 80209d6:	fb02 e20a 	mla	r2, r2, sl, lr
 80209da:	9b00      	ldr	r3, [sp, #0]
 80209dc:	fb04 2408 	mla	r4, r4, r8, r2
 80209e0:	fb09 4903 	mla	r9, r9, r3, r4
 80209e4:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80209e8:	9b02      	ldr	r3, [sp, #8]
 80209ea:	9a04      	ldr	r2, [sp, #16]
 80209ec:	fa5f f989 	uxtb.w	r9, r9
 80209f0:	fb03 f109 	mul.w	r1, r3, r9
 80209f4:	9b03      	ldr	r3, [sp, #12]
 80209f6:	0a2d      	lsrs	r5, r5, #8
 80209f8:	0a00      	lsrs	r0, r0, #8
 80209fa:	fb03 f309 	mul.w	r3, r3, r9
 80209fe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020a02:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020a06:	4305      	orrs	r5, r0
 8020a08:	fb02 f909 	mul.w	r9, r2, r9
 8020a0c:	1c58      	adds	r0, r3, #1
 8020a0e:	1c4a      	adds	r2, r1, #1
 8020a10:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020a14:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020a18:	0a2b      	lsrs	r3, r5, #8
 8020a1a:	0c2a      	lsrs	r2, r5, #16
 8020a1c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020a20:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020a24:	00db      	lsls	r3, r3, #3
 8020a26:	0212      	lsls	r2, r2, #8
 8020a28:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020a2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a30:	4313      	orrs	r3, r2
 8020a32:	f109 0201 	add.w	r2, r9, #1
 8020a36:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020a3a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020a3e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020a42:	431d      	orrs	r5, r3
 8020a44:	9b01      	ldr	r3, [sp, #4]
 8020a46:	801d      	strh	r5, [r3, #0]
 8020a48:	b009      	add	sp, #36	; 0x24
 8020a4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a4e:	2000      	movs	r0, #0
 8020a50:	e701      	b.n	8020856 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020a52:	2600      	movs	r6, #0
 8020a54:	4630      	mov	r0, r6
 8020a56:	e70b      	b.n	8020870 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a58:	2600      	movs	r6, #0
 8020a5a:	e709      	b.n	8020870 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a5c:	462e      	mov	r6, r5
 8020a5e:	e707      	b.n	8020870 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a60:	2700      	movs	r7, #0
 8020a62:	e71a      	b.n	802089a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020a64:	2100      	movs	r1, #0
 8020a66:	460f      	mov	r7, r1
 8020a68:	e723      	b.n	80208b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a6a:	4621      	mov	r1, r4
 8020a6c:	4627      	mov	r7, r4
 8020a6e:	e720      	b.n	80208b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a70:	2100      	movs	r1, #0
 8020a72:	e71e      	b.n	80208b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a74:	4629      	mov	r1, r5
 8020a76:	e71c      	b.n	80208b2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020a78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a7c:	b09b      	sub	sp, #108	; 0x6c
 8020a7e:	9218      	str	r2, [sp, #96]	; 0x60
 8020a80:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020a82:	9116      	str	r1, [sp, #88]	; 0x58
 8020a84:	9307      	str	r3, [sp, #28]
 8020a86:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020a8a:	9019      	str	r0, [sp, #100]	; 0x64
 8020a8c:	6850      	ldr	r0, [r2, #4]
 8020a8e:	6812      	ldr	r2, [r2, #0]
 8020a90:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020a92:	fb00 1303 	mla	r3, r0, r3, r1
 8020a96:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020a9a:	930a      	str	r3, [sp, #40]	; 0x28
 8020a9c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a9e:	681b      	ldr	r3, [r3, #0]
 8020aa0:	930f      	str	r3, [sp, #60]	; 0x3c
 8020aa2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020aa4:	685e      	ldr	r6, [r3, #4]
 8020aa6:	3604      	adds	r6, #4
 8020aa8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020aaa:	2b00      	cmp	r3, #0
 8020aac:	dc03      	bgt.n	8020ab6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020aae:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020ab0:	2b00      	cmp	r3, #0
 8020ab2:	f340 8373 	ble.w	802119c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020ab6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020ab8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020abc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ac0:	1e48      	subs	r0, r1, #1
 8020ac2:	1e57      	subs	r7, r2, #1
 8020ac4:	9b07      	ldr	r3, [sp, #28]
 8020ac6:	2b00      	cmp	r3, #0
 8020ac8:	f340 8190 	ble.w	8020dec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020acc:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020ace:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020ad2:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020ad6:	d406      	bmi.n	8020ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020ad8:	4584      	cmp	ip, r0
 8020ada:	da04      	bge.n	8020ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020adc:	2b00      	cmp	r3, #0
 8020ade:	db02      	blt.n	8020ae6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020ae0:	42bb      	cmp	r3, r7
 8020ae2:	f2c0 8184 	blt.w	8020dee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020ae6:	f11c 0c01 	adds.w	ip, ip, #1
 8020aea:	f100 8172 	bmi.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020aee:	4561      	cmp	r1, ip
 8020af0:	f2c0 816f 	blt.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020af4:	3301      	adds	r3, #1
 8020af6:	f100 816c 	bmi.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020afa:	429a      	cmp	r2, r3
 8020afc:	f2c0 8169 	blt.w	8020dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b00:	9b07      	ldr	r3, [sp, #28]
 8020b02:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020b04:	9317      	str	r3, [sp, #92]	; 0x5c
 8020b06:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020b08:	2b00      	cmp	r3, #0
 8020b0a:	f340 818e 	ble.w	8020e2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020b0e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020b10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020b14:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020b16:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020b1a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020b1c:	141b      	asrs	r3, r3, #16
 8020b1e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020b22:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020b26:	f100 81d1 	bmi.w	8020ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b2a:	f101 38ff 	add.w	r8, r1, #4294967295
 8020b2e:	4543      	cmp	r3, r8
 8020b30:	f280 81cc 	bge.w	8020ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b34:	f1bc 0f00 	cmp.w	ip, #0
 8020b38:	f2c0 81c8 	blt.w	8020ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b3c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020b40:	45c4      	cmp	ip, r8
 8020b42:	f280 81c3 	bge.w	8020ecc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b46:	b209      	sxth	r1, r1
 8020b48:	fb0c 3301 	mla	r3, ip, r1, r3
 8020b4c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020b4e:	eb04 0803 	add.w	r8, r4, r3
 8020b52:	5ce3      	ldrb	r3, [r4, r3]
 8020b54:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020b58:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020b5c:	2a00      	cmp	r2, #0
 8020b5e:	f000 81aa 	beq.w	8020eb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020b62:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020b66:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020b6a:	940b      	str	r4, [sp, #44]	; 0x2c
 8020b6c:	0e24      	lsrs	r4, r4, #24
 8020b6e:	9412      	str	r4, [sp, #72]	; 0x48
 8020b70:	b178      	cbz	r0, 8020b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020b72:	eb08 0c01 	add.w	ip, r8, r1
 8020b76:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020b7a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b7e:	9108      	str	r1, [sp, #32]
 8020b80:	0e09      	lsrs	r1, r1, #24
 8020b82:	9110      	str	r1, [sp, #64]	; 0x40
 8020b84:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020b88:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020b8c:	910c      	str	r1, [sp, #48]	; 0x30
 8020b8e:	0e09      	lsrs	r1, r1, #24
 8020b90:	9113      	str	r1, [sp, #76]	; 0x4c
 8020b92:	b292      	uxth	r2, r2
 8020b94:	b280      	uxth	r0, r0
 8020b96:	fb02 f900 	mul.w	r9, r2, r0
 8020b9a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020b9e:	0112      	lsls	r2, r2, #4
 8020ba0:	eba2 0809 	sub.w	r8, r2, r9
 8020ba4:	b280      	uxth	r0, r0
 8020ba6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020baa:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020bac:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020bae:	fa1f f888 	uxth.w	r8, r8
 8020bb2:	1a12      	subs	r2, r2, r0
 8020bb4:	b292      	uxth	r2, r2
 8020bb6:	fb08 f101 	mul.w	r1, r8, r1
 8020bba:	fb02 110e 	mla	r1, r2, lr, r1
 8020bbe:	fb00 1104 	mla	r1, r0, r4, r1
 8020bc2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020bc4:	fb09 1104 	mla	r1, r9, r4, r1
 8020bc8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020bcc:	2900      	cmp	r1, #0
 8020bce:	f000 80f5 	beq.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020bd2:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020bd6:	d01b      	beq.n	8020c10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bd8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020bdc:	fb0e fa0a 	mul.w	sl, lr, sl
 8020be0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020be4:	fb0e fe03 	mul.w	lr, lr, r3
 8020be8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020bec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020bf0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020bf4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020bf8:	4453      	add	r3, sl
 8020bfa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020bfe:	0a1b      	lsrs	r3, r3, #8
 8020c00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020c08:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020c0c:	ea43 030c 	orr.w	r3, r3, ip
 8020c10:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c12:	2cff      	cmp	r4, #255	; 0xff
 8020c14:	d021      	beq.n	8020c5a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020c16:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c18:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c1e:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c22:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020c24:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c28:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020c2a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c2e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c36:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c3a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c3e:	44de      	add	lr, fp
 8020c40:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c44:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c48:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c50:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c54:	ea4e 040a 	orr.w	r4, lr, sl
 8020c58:	940b      	str	r4, [sp, #44]	; 0x2c
 8020c5a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c5c:	2cff      	cmp	r4, #255	; 0xff
 8020c5e:	d021      	beq.n	8020ca4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020c60:	9c08      	ldr	r4, [sp, #32]
 8020c62:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020c66:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c68:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c6c:	9c08      	ldr	r4, [sp, #32]
 8020c6e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020c72:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020c74:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c78:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c80:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020c84:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020c88:	44de      	add	lr, fp
 8020c8a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c8e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c92:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020c9a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020c9e:	ea4e 040a 	orr.w	r4, lr, sl
 8020ca2:	9408      	str	r4, [sp, #32]
 8020ca4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020ca6:	2cff      	cmp	r4, #255	; 0xff
 8020ca8:	d021      	beq.n	8020cee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020caa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020cac:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020cb0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020cb2:	fb04 fb0b 	mul.w	fp, r4, fp
 8020cb6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020cb8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020cbc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020cbe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020cc2:	fb04 fa0a 	mul.w	sl, r4, sl
 8020cc6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020cca:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020cce:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020cd2:	44de      	add	lr, fp
 8020cd4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020cd8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020cdc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020ce0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ce4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020ce8:	ea4e 040a 	orr.w	r4, lr, sl
 8020cec:	940c      	str	r4, [sp, #48]	; 0x30
 8020cee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020cf0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020cf4:	9c08      	ldr	r4, [sp, #32]
 8020cf6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020cfa:	fb08 fc0c 	mul.w	ip, r8, ip
 8020cfe:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020d02:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020d06:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020d08:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020d0c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020d10:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020d12:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020d16:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020d1a:	fb08 f80e 	mul.w	r8, r8, lr
 8020d1e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020d22:	fb02 8303 	mla	r3, r2, r3, r8
 8020d26:	9a08      	ldr	r2, [sp, #32]
 8020d28:	f8b7 8000 	ldrh.w	r8, [r7]
 8020d2c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020d30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020d32:	fb00 330a 	mla	r3, r0, sl, r3
 8020d36:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020d3a:	fb09 3900 	mla	r9, r9, r0, r3
 8020d3e:	43c9      	mvns	r1, r1
 8020d40:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020d44:	fa5f fe81 	uxtb.w	lr, r1
 8020d48:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020d50:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020d54:	fb02 f20e 	mul.w	r2, r2, lr
 8020d58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020d5c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020d60:	ea4c 0c09 	orr.w	ip, ip, r9
 8020d64:	1c53      	adds	r3, r2, #1
 8020d66:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020d6a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020d6e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020d72:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d76:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8020d7a:	4a63      	ldr	r2, [pc, #396]	; (8020f08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020d7c:	fb00 f00e 	mul.w	r0, r0, lr
 8020d80:	b2db      	uxtb	r3, r3
 8020d82:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020d86:	1c43      	adds	r3, r0, #1
 8020d88:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020d8c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020d90:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020d94:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020d98:	b2c9      	uxtb	r1, r1
 8020d9a:	00db      	lsls	r3, r3, #3
 8020d9c:	fb01 f10e 	mul.w	r1, r1, lr
 8020da0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020da4:	4313      	orrs	r3, r2
 8020da6:	1c4a      	adds	r2, r1, #1
 8020da8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020dac:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020db0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020db4:	ea4c 0c03 	orr.w	ip, ip, r3
 8020db8:	f8a7 c000 	strh.w	ip, [r7]
 8020dbc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020dbe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8020dc0:	441a      	add	r2, r3
 8020dc2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020dc4:	9225      	str	r2, [sp, #148]	; 0x94
 8020dc6:	441d      	add	r5, r3
 8020dc8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020dca:	3b01      	subs	r3, #1
 8020dcc:	3702      	adds	r7, #2
 8020dce:	9317      	str	r3, [sp, #92]	; 0x5c
 8020dd0:	e699      	b.n	8020b06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020dd2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8020dd4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020dd6:	441c      	add	r4, r3
 8020dd8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020dda:	9425      	str	r4, [sp, #148]	; 0x94
 8020ddc:	441d      	add	r5, r3
 8020dde:	9b07      	ldr	r3, [sp, #28]
 8020de0:	3b01      	subs	r3, #1
 8020de2:	9307      	str	r3, [sp, #28]
 8020de4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020de6:	3302      	adds	r3, #2
 8020de8:	930a      	str	r3, [sp, #40]	; 0x28
 8020dea:	e66b      	b.n	8020ac4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020dec:	d024      	beq.n	8020e38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020dee:	9b07      	ldr	r3, [sp, #28]
 8020df0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8020df2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020df4:	3b01      	subs	r3, #1
 8020df6:	fb00 4003 	mla	r0, r0, r3, r4
 8020dfa:	1400      	asrs	r0, r0, #16
 8020dfc:	f53f ae80 	bmi.w	8020b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e00:	3901      	subs	r1, #1
 8020e02:	4288      	cmp	r0, r1
 8020e04:	f6bf ae7c 	bge.w	8020b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e08:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8020e0a:	fb01 5303 	mla	r3, r1, r3, r5
 8020e0e:	141b      	asrs	r3, r3, #16
 8020e10:	f53f ae76 	bmi.w	8020b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e14:	3a01      	subs	r2, #1
 8020e16:	4293      	cmp	r3, r2
 8020e18:	f6bf ae72 	bge.w	8020b00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e1c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020e20:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8020e24:	f1bb 0f00 	cmp.w	fp, #0
 8020e28:	dc70      	bgt.n	8020f0c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020e2a:	9b07      	ldr	r3, [sp, #28]
 8020e2c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020e30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8020e32:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020e36:	930a      	str	r3, [sp, #40]	; 0x28
 8020e38:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e3a:	2b00      	cmp	r3, #0
 8020e3c:	f340 81ae 	ble.w	802119c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020e40:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e44:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020e48:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020e4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e52:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e56:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e5a:	eef0 6a62 	vmov.f32	s13, s5
 8020e5e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e66:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e6a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8020e6e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e72:	eef0 6a43 	vmov.f32	s13, s6
 8020e76:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e7a:	ee12 2a90 	vmov	r2, s5
 8020e7e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020e82:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e86:	ee13 2a10 	vmov	r2, s6
 8020e8a:	9327      	str	r3, [sp, #156]	; 0x9c
 8020e8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020e8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8020e92:	9328      	str	r3, [sp, #160]	; 0xa0
 8020e94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020e96:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8020e98:	3b01      	subs	r3, #1
 8020e9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e9e:	9316      	str	r3, [sp, #88]	; 0x58
 8020ea0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020ea2:	bf08      	it	eq
 8020ea4:	4613      	moveq	r3, r2
 8020ea6:	ee16 5a90 	vmov	r5, s13
 8020eaa:	9307      	str	r3, [sp, #28]
 8020eac:	eeb0 3a67 	vmov.f32	s6, s15
 8020eb0:	eef0 2a47 	vmov.f32	s5, s14
 8020eb4:	e5f8      	b.n	8020aa8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020eb6:	2800      	cmp	r0, #0
 8020eb8:	f43f ae6b 	beq.w	8020b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ebc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020ec0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ec4:	9108      	str	r1, [sp, #32]
 8020ec6:	0e09      	lsrs	r1, r1, #24
 8020ec8:	9110      	str	r1, [sp, #64]	; 0x40
 8020eca:	e662      	b.n	8020b92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ecc:	f113 0801 	adds.w	r8, r3, #1
 8020ed0:	f53f af74 	bmi.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ed4:	4541      	cmp	r1, r8
 8020ed6:	f6ff af71 	blt.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020eda:	f11c 0801 	adds.w	r8, ip, #1
 8020ede:	f53f af6d 	bmi.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ee2:	45c6      	cmp	lr, r8
 8020ee4:	f6ff af6a 	blt.w	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ee8:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020eec:	b209      	sxth	r1, r1
 8020eee:	fa0f f38e 	sxth.w	r3, lr
 8020ef2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020ef6:	9301      	str	r3, [sp, #4]
 8020ef8:	9100      	str	r1, [sp, #0]
 8020efa:	4633      	mov	r3, r6
 8020efc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8020efe:	9819      	ldr	r0, [sp, #100]	; 0x64
 8020f00:	4639      	mov	r1, r7
 8020f02:	f7ff fc7a 	bl	80207fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020f06:	e759      	b.n	8020dbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f08:	fffff800 	.word	0xfffff800
 8020f0c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020f0e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020f10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020f14:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020f16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f1a:	1427      	asrs	r7, r4, #16
 8020f1c:	142b      	asrs	r3, r5, #16
 8020f1e:	fb01 7303 	mla	r3, r1, r3, r7
 8020f22:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020f24:	18e7      	adds	r7, r4, r3
 8020f26:	5ce3      	ldrb	r3, [r4, r3]
 8020f28:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020f2c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020f30:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020f34:	2a00      	cmp	r2, #0
 8020f36:	f000 8127 	beq.w	8021188 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020f3a:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020f3e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020f42:	940d      	str	r4, [sp, #52]	; 0x34
 8020f44:	0e24      	lsrs	r4, r4, #24
 8020f46:	9414      	str	r4, [sp, #80]	; 0x50
 8020f48:	b170      	cbz	r0, 8020f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f4a:	eb07 0e01 	add.w	lr, r7, r1
 8020f4e:	5c79      	ldrb	r1, [r7, r1]
 8020f50:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f54:	9109      	str	r1, [sp, #36]	; 0x24
 8020f56:	0e09      	lsrs	r1, r1, #24
 8020f58:	9111      	str	r1, [sp, #68]	; 0x44
 8020f5a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020f5e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f62:	910e      	str	r1, [sp, #56]	; 0x38
 8020f64:	0e09      	lsrs	r1, r1, #24
 8020f66:	9115      	str	r1, [sp, #84]	; 0x54
 8020f68:	b292      	uxth	r2, r2
 8020f6a:	b280      	uxth	r0, r0
 8020f6c:	fb02 f800 	mul.w	r8, r2, r0
 8020f70:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020f74:	0112      	lsls	r2, r2, #4
 8020f76:	eba2 0e08 	sub.w	lr, r2, r8
 8020f7a:	b280      	uxth	r0, r0
 8020f7c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8020f80:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8020f82:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020f84:	fa1f fe8e 	uxth.w	lr, lr
 8020f88:	1a09      	subs	r1, r1, r0
 8020f8a:	b289      	uxth	r1, r1
 8020f8c:	fb0e f202 	mul.w	r2, lr, r2
 8020f90:	fb01 220c 	mla	r2, r1, ip, r2
 8020f94:	fb00 2204 	mla	r2, r0, r4, r2
 8020f98:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020f9a:	fb08 2204 	mla	r2, r8, r4, r2
 8020f9e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020fa2:	2a00      	cmp	r2, #0
 8020fa4:	f000 80e5 	beq.w	8021172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020fa8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020fac:	d019      	beq.n	8020fe2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020fae:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020fb2:	fb0c fa0a 	mul.w	sl, ip, sl
 8020fb6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020fba:	fb0c fc03 	mul.w	ip, ip, r3
 8020fbe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020fc2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020fc6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020fca:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8020fce:	4453      	add	r3, sl
 8020fd0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020fd4:	0a1b      	lsrs	r3, r3, #8
 8020fd6:	0a3f      	lsrs	r7, r7, #8
 8020fd8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020fdc:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020fe0:	433b      	orrs	r3, r7
 8020fe2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020fe4:	2cff      	cmp	r4, #255	; 0xff
 8020fe6:	d020      	beq.n	802102a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020fe8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020fea:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020fee:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ff0:	4367      	muls	r7, r4
 8020ff2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020ff4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ff8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020ffa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ffe:	fb04 fa0a 	mul.w	sl, r4, sl
 8021002:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021006:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802100a:	44bc      	add	ip, r7
 802100c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021010:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021014:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021018:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802101c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021020:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021024:	ea4c 040a 	orr.w	r4, ip, sl
 8021028:	940d      	str	r4, [sp, #52]	; 0x34
 802102a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802102c:	2cff      	cmp	r4, #255	; 0xff
 802102e:	d020      	beq.n	8021072 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021030:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021032:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021036:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021038:	4367      	muls	r7, r4
 802103a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802103c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021040:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021042:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021046:	fb04 fa0a 	mul.w	sl, r4, sl
 802104a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802104e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021052:	44bc      	add	ip, r7
 8021054:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021058:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802105c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021060:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021064:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021068:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802106c:	ea4c 040a 	orr.w	r4, ip, sl
 8021070:	9409      	str	r4, [sp, #36]	; 0x24
 8021072:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021074:	2cff      	cmp	r4, #255	; 0xff
 8021076:	d020      	beq.n	80210ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021078:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802107a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802107e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021080:	4367      	muls	r7, r4
 8021082:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021084:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021088:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802108a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802108e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021092:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021096:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802109a:	44bc      	add	ip, r7
 802109c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80210a0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210a8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80210b0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80210b4:	ea4c 040a 	orr.w	r4, ip, sl
 80210b8:	940e      	str	r4, [sp, #56]	; 0x38
 80210ba:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80210bc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80210c0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80210c2:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80210c6:	fb0e f707 	mul.w	r7, lr, r7
 80210ca:	fb01 770c 	mla	r7, r1, ip, r7
 80210ce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80210d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80210d4:	fb00 770c 	mla	r7, r0, ip, r7
 80210d8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80210dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80210de:	fb08 770c 	mla	r7, r8, ip, r7
 80210e2:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80210e6:	fb0e fe0c 	mul.w	lr, lr, ip
 80210ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80210ee:	fb01 e303 	mla	r3, r1, r3, lr
 80210f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80210f4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80210f8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80210fa:	fb00 330a 	mla	r3, r0, sl, r3
 80210fe:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8021102:	fb08 3c0c 	mla	ip, r8, ip, r3
 8021106:	f8b9 3000 	ldrh.w	r3, [r9]
 802110a:	43d2      	mvns	r2, r2
 802110c:	1218      	asrs	r0, r3, #8
 802110e:	b2d2      	uxtb	r2, r2
 8021110:	10d9      	asrs	r1, r3, #3
 8021112:	0a3f      	lsrs	r7, r7, #8
 8021114:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021118:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802111c:	00db      	lsls	r3, r3, #3
 802111e:	4350      	muls	r0, r2
 8021120:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8021124:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8021128:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802112c:	b2db      	uxtb	r3, r3
 802112e:	ea47 070c 	orr.w	r7, r7, ip
 8021132:	4351      	muls	r1, r2
 8021134:	4353      	muls	r3, r2
 8021136:	1c42      	adds	r2, r0, #1
 8021138:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802113c:	0c3a      	lsrs	r2, r7, #16
 802113e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021142:	4a18      	ldr	r2, [pc, #96]	; (80211a4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8021144:	b2c0      	uxtb	r0, r0
 8021146:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802114a:	1c4a      	adds	r2, r1, #1
 802114c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021150:	0a3a      	lsrs	r2, r7, #8
 8021152:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021156:	00c9      	lsls	r1, r1, #3
 8021158:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802115c:	4301      	orrs	r1, r0
 802115e:	1c58      	adds	r0, r3, #1
 8021160:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021164:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021168:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802116c:	4308      	orrs	r0, r1
 802116e:	f8a9 0000 	strh.w	r0, [r9]
 8021172:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021174:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021176:	441a      	add	r2, r3
 8021178:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802117a:	9225      	str	r2, [sp, #148]	; 0x94
 802117c:	f109 0902 	add.w	r9, r9, #2
 8021180:	441d      	add	r5, r3
 8021182:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021186:	e64d      	b.n	8020e24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021188:	2800      	cmp	r0, #0
 802118a:	f43f aeed 	beq.w	8020f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802118e:	5c79      	ldrb	r1, [r7, r1]
 8021190:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021194:	9109      	str	r1, [sp, #36]	; 0x24
 8021196:	0e09      	lsrs	r1, r1, #24
 8021198:	9111      	str	r1, [sp, #68]	; 0x44
 802119a:	e6e5      	b.n	8020f68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802119c:	b01b      	add	sp, #108	; 0x6c
 802119e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211a2:	bf00      	nop
 80211a4:	fffff800 	.word	0xfffff800

080211a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80211a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211ac:	b085      	sub	sp, #20
 80211ae:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80211b2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80211b6:	9103      	str	r1, [sp, #12]
 80211b8:	fb00 7406 	mla	r4, r0, r6, r7
 80211bc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80211c0:	2800      	cmp	r0, #0
 80211c2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 80211c6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 80211ca:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 80211ce:	9501      	str	r5, [sp, #4]
 80211d0:	eb03 0904 	add.w	r9, r3, r4
 80211d4:	f2c0 8150 	blt.w	8021478 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80211d8:	4583      	cmp	fp, r0
 80211da:	f340 814d 	ble.w	8021478 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80211de:	2f00      	cmp	r7, #0
 80211e0:	f2c0 8146 	blt.w	8021470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80211e4:	42be      	cmp	r6, r7
 80211e6:	f340 8143 	ble.w	8021470 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 80211ea:	f813 c004 	ldrb.w	ip, [r3, r4]
 80211ee:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80211f2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80211f6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80211fa:	4355      	muls	r5, r2
 80211fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021200:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021204:	fb0c f203 	mul.w	r2, ip, r3
 8021208:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802120c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021210:	441d      	add	r5, r3
 8021212:	f102 0320 	add.w	r3, r2, #32
 8021216:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802121a:	0a1b      	lsrs	r3, r3, #8
 802121c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021220:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021224:	431c      	orrs	r4, r3
 8021226:	1c7b      	adds	r3, r7, #1
 8021228:	f100 812b 	bmi.w	8021482 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802122c:	429e      	cmp	r6, r3
 802122e:	f340 8128 	ble.w	8021482 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021232:	2900      	cmp	r1, #0
 8021234:	f000 8128 	beq.w	8021488 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8021238:	9a01      	ldr	r2, [sp, #4]
 802123a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802123e:	8855      	ldrh	r5, [r2, #2]
 8021240:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021244:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021248:	fb08 f802 	mul.w	r8, r8, r2
 802124c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021250:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021254:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021258:	435d      	muls	r5, r3
 802125a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802125e:	44d0      	add	r8, sl
 8021260:	f105 0a20 	add.w	sl, r5, #32
 8021264:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021268:	0a2d      	lsrs	r5, r5, #8
 802126a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802126e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021272:	432a      	orrs	r2, r5
 8021274:	3001      	adds	r0, #1
 8021276:	f100 810d 	bmi.w	8021494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802127a:	4583      	cmp	fp, r0
 802127c:	f340 810a 	ble.w	8021494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021280:	f1be 0f00 	cmp.w	lr, #0
 8021284:	f000 810b 	beq.w	802149e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021288:	2f00      	cmp	r7, #0
 802128a:	f2c0 8100 	blt.w	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802128e:	42be      	cmp	r6, r7
 8021290:	f340 80fd 	ble.w	802148e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021294:	9801      	ldr	r0, [sp, #4]
 8021296:	f819 5006 	ldrb.w	r5, [r9, r6]
 802129a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802129e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80212a2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80212a6:	fb0a fa00 	mul.w	sl, sl, r0
 80212aa:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80212ae:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80212b2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80212b6:	fb05 f808 	mul.w	r8, r5, r8
 80212ba:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80212be:	4482      	add	sl, r0
 80212c0:	f108 0020 	add.w	r0, r8, #32
 80212c4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80212c8:	0a00      	lsrs	r0, r0, #8
 80212ca:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80212ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80212d2:	ea4b 0b00 	orr.w	fp, fp, r0
 80212d6:	3701      	adds	r7, #1
 80212d8:	f100 80e6 	bmi.w	80214a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80212dc:	42be      	cmp	r6, r7
 80212de:	f340 80e3 	ble.w	80214a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 80212e2:	2900      	cmp	r1, #0
 80212e4:	f000 80e3 	beq.w	80214ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 80212e8:	3601      	adds	r6, #1
 80212ea:	9801      	ldr	r0, [sp, #4]
 80212ec:	f819 7006 	ldrb.w	r7, [r9, r6]
 80212f0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80212f4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80212f8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80212fc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021300:	fb09 f906 	mul.w	r9, r9, r6
 8021304:	fb07 f800 	mul.w	r8, r7, r0
 8021308:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802130c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021310:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021314:	44d1      	add	r9, sl
 8021316:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802131a:	f108 0020 	add.w	r0, r8, #32
 802131e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021322:	0a00      	lsrs	r0, r0, #8
 8021324:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021328:	4330      	orrs	r0, r6
 802132a:	b28e      	uxth	r6, r1
 802132c:	fa1f f98e 	uxth.w	r9, lr
 8021330:	fb06 f809 	mul.w	r8, r6, r9
 8021334:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021338:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802133c:	0136      	lsls	r6, r6, #4
 802133e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021342:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021346:	9601      	str	r6, [sp, #4]
 8021348:	ea4a 0404 	orr.w	r4, sl, r4
 802134c:	fa1f f689 	uxth.w	r6, r9
 8021350:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021354:	fb11 f90e 	smulbb	r9, r1, lr
 8021358:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802135c:	9602      	str	r6, [sp, #8]
 802135e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021362:	4626      	mov	r6, r4
 8021364:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021368:	f1ce 0410 	rsb	r4, lr, #16
 802136c:	1a64      	subs	r4, r4, r1
 802136e:	ea4a 0202 	orr.w	r2, sl, r2
 8021372:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021376:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802137a:	434a      	muls	r2, r1
 802137c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021380:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021384:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021388:	fb04 2406 	mla	r4, r4, r6, r2
 802138c:	ea4a 0000 	orr.w	r0, sl, r0
 8021390:	fb09 4200 	mla	r2, r9, r0, r4
 8021394:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021398:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802139c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80213a0:	ea44 0b0b 	orr.w	fp, r4, fp
 80213a4:	9c01      	ldr	r4, [sp, #4]
 80213a6:	9e02      	ldr	r6, [sp, #8]
 80213a8:	9903      	ldr	r1, [sp, #12]
 80213aa:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80213ae:	1ba4      	subs	r4, r4, r6
 80213b0:	9e01      	ldr	r6, [sp, #4]
 80213b2:	8808      	ldrh	r0, [r1, #0]
 80213b4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80213b8:	eba6 0608 	sub.w	r6, r6, r8
 80213bc:	b2b6      	uxth	r6, r6
 80213be:	b2a4      	uxth	r4, r4
 80213c0:	4373      	muls	r3, r6
 80213c2:	fb0c 3304 	mla	r3, ip, r4, r3
 80213c6:	9c02      	ldr	r4, [sp, #8]
 80213c8:	fb04 3505 	mla	r5, r4, r5, r3
 80213cc:	fb08 5707 	mla	r7, r8, r7, r5
 80213d0:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80213d4:	b289      	uxth	r1, r1
 80213d6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80213da:	f3c7 2707 	ubfx	r7, r7, #8, #8
 80213de:	434f      	muls	r7, r1
 80213e0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80213e4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80213e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80213ec:	1c7b      	adds	r3, r7, #1
 80213ee:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80213f2:	ea42 0e0e 	orr.w	lr, r2, lr
 80213f6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80213fa:	fa1f f28e 	uxth.w	r2, lr
 80213fe:	1203      	asrs	r3, r0, #8
 8021400:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021404:	b2ff      	uxtb	r7, r7
 8021406:	1215      	asrs	r5, r2, #8
 8021408:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802140c:	fb13 f307 	smulbb	r3, r3, r7
 8021410:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021414:	fb05 3501 	mla	r5, r5, r1, r3
 8021418:	10c3      	asrs	r3, r0, #3
 802141a:	10d4      	asrs	r4, r2, #3
 802141c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021420:	fb13 f307 	smulbb	r3, r3, r7
 8021424:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8021428:	fb04 3401 	mla	r4, r4, r1, r3
 802142c:	00c3      	lsls	r3, r0, #3
 802142e:	00d2      	lsls	r2, r2, #3
 8021430:	b2db      	uxtb	r3, r3
 8021432:	fb13 f307 	smulbb	r3, r3, r7
 8021436:	b2d2      	uxtb	r2, r2
 8021438:	fb02 3101 	mla	r1, r2, r1, r3
 802143c:	b2ad      	uxth	r5, r5
 802143e:	b289      	uxth	r1, r1
 8021440:	b2a4      	uxth	r4, r4
 8021442:	1c6b      	adds	r3, r5, #1
 8021444:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021448:	1c62      	adds	r2, r4, #1
 802144a:	1c4b      	adds	r3, r1, #1
 802144c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021450:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021454:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021458:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802145c:	0964      	lsrs	r4, r4, #5
 802145e:	432b      	orrs	r3, r5
 8021460:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021464:	9a03      	ldr	r2, [sp, #12]
 8021466:	4323      	orrs	r3, r4
 8021468:	8013      	strh	r3, [r2, #0]
 802146a:	b005      	add	sp, #20
 802146c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021470:	f04f 0c00 	mov.w	ip, #0
 8021474:	4664      	mov	r4, ip
 8021476:	e6d6      	b.n	8021226 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021478:	2300      	movs	r3, #0
 802147a:	469c      	mov	ip, r3
 802147c:	461a      	mov	r2, r3
 802147e:	461c      	mov	r4, r3
 8021480:	e6f8      	b.n	8021274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021482:	2300      	movs	r3, #0
 8021484:	461a      	mov	r2, r3
 8021486:	e6f5      	b.n	8021274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021488:	460b      	mov	r3, r1
 802148a:	460a      	mov	r2, r1
 802148c:	e6f2      	b.n	8021274 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802148e:	2500      	movs	r5, #0
 8021490:	46ab      	mov	fp, r5
 8021492:	e720      	b.n	80212d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021494:	2700      	movs	r7, #0
 8021496:	463d      	mov	r5, r7
 8021498:	4638      	mov	r0, r7
 802149a:	46bb      	mov	fp, r7
 802149c:	e745      	b.n	802132a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802149e:	4677      	mov	r7, lr
 80214a0:	4675      	mov	r5, lr
 80214a2:	4670      	mov	r0, lr
 80214a4:	46f3      	mov	fp, lr
 80214a6:	e740      	b.n	802132a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214a8:	2700      	movs	r7, #0
 80214aa:	4638      	mov	r0, r7
 80214ac:	e73d      	b.n	802132a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214ae:	460f      	mov	r7, r1
 80214b0:	4608      	mov	r0, r1
 80214b2:	e73a      	b.n	802132a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080214b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214b8:	b097      	sub	sp, #92	; 0x5c
 80214ba:	9214      	str	r2, [sp, #80]	; 0x50
 80214bc:	9308      	str	r3, [sp, #32]
 80214be:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80214c0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80214c4:	9312      	str	r3, [sp, #72]	; 0x48
 80214c6:	9111      	str	r1, [sp, #68]	; 0x44
 80214c8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80214cc:	9015      	str	r0, [sp, #84]	; 0x54
 80214ce:	6850      	ldr	r0, [r2, #4]
 80214d0:	6812      	ldr	r2, [r2, #0]
 80214d2:	fb00 1303 	mla	r3, r0, r3, r1
 80214d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214da:	9309      	str	r3, [sp, #36]	; 0x24
 80214dc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214de:	681b      	ldr	r3, [r3, #0]
 80214e0:	930b      	str	r3, [sp, #44]	; 0x2c
 80214e2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214e4:	685b      	ldr	r3, [r3, #4]
 80214e6:	930c      	str	r3, [sp, #48]	; 0x30
 80214e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80214ec:	930a      	str	r3, [sp, #40]	; 0x28
 80214ee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80214f0:	2b00      	cmp	r3, #0
 80214f2:	dc03      	bgt.n	80214fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80214f4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80214f6:	2b00      	cmp	r3, #0
 80214f8:	f340 83cb 	ble.w	8021c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80214fc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80214fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021502:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021506:	1e48      	subs	r0, r1, #1
 8021508:	1e55      	subs	r5, r2, #1
 802150a:	9b08      	ldr	r3, [sp, #32]
 802150c:	2b00      	cmp	r3, #0
 802150e:	f340 81a3 	ble.w	8021858 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021512:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8021514:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021516:	1436      	asrs	r6, r6, #16
 8021518:	ea4f 4323 	mov.w	r3, r3, asr #16
 802151c:	d406      	bmi.n	802152c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802151e:	4286      	cmp	r6, r0
 8021520:	da04      	bge.n	802152c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021522:	2b00      	cmp	r3, #0
 8021524:	db02      	blt.n	802152c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021526:	42ab      	cmp	r3, r5
 8021528:	f2c0 8197 	blt.w	802185a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802152c:	3601      	adds	r6, #1
 802152e:	f100 8184 	bmi.w	802183a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021532:	42b1      	cmp	r1, r6
 8021534:	f2c0 8181 	blt.w	802183a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021538:	3301      	adds	r3, #1
 802153a:	f100 817e 	bmi.w	802183a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802153e:	429a      	cmp	r2, r3
 8021540:	f2c0 817b 	blt.w	802183a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021544:	9b08      	ldr	r3, [sp, #32]
 8021546:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8021548:	9313      	str	r3, [sp, #76]	; 0x4c
 802154a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802154e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021550:	2b00      	cmp	r3, #0
 8021552:	f340 81a4 	ble.w	802189e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021556:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021558:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802155a:	1418      	asrs	r0, r3, #16
 802155c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802155e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021562:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021564:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021568:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802156a:	142d      	asrs	r5, r5, #16
 802156c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021570:	f100 81f8 	bmi.w	8021964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021574:	f102 3eff 	add.w	lr, r2, #4294967295
 8021578:	4575      	cmp	r5, lr
 802157a:	f280 81f3 	bge.w	8021964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802157e:	2800      	cmp	r0, #0
 8021580:	f2c0 81f0 	blt.w	8021964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021584:	f103 3eff 	add.w	lr, r3, #4294967295
 8021588:	4570      	cmp	r0, lr
 802158a:	f280 81eb 	bge.w	8021964 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802158e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021590:	b212      	sxth	r2, r2
 8021592:	fb00 5002 	mla	r0, r0, r2, r5
 8021596:	fa1f fe81 	uxth.w	lr, r1
 802159a:	eb03 0a00 	add.w	sl, r3, r0
 802159e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80215a2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80215a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80215aa:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80215ae:	b29b      	uxth	r3, r3
 80215b0:	f1bc 0f00 	cmp.w	ip, #0
 80215b4:	f000 81b9 	beq.w	802192a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80215b8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80215bc:	940d      	str	r4, [sp, #52]	; 0x34
 80215be:	eb0a 0b02 	add.w	fp, sl, r2
 80215c2:	fa1f fa8c 	uxth.w	sl, ip
 80215c6:	fb0a fe0e 	mul.w	lr, sl, lr
 80215ca:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80215ce:	fa1f fa8a 	uxth.w	sl, sl
 80215d2:	eba5 050e 	sub.w	r5, r5, lr
 80215d6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80215da:	940e      	str	r4, [sp, #56]	; 0x38
 80215dc:	eba3 030a 	sub.w	r3, r3, sl
 80215e0:	b2ad      	uxth	r5, r5
 80215e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80215e4:	b29b      	uxth	r3, r3
 80215e6:	fb08 f505 	mul.w	r5, r8, r5
 80215ea:	fb09 5303 	mla	r3, r9, r3, r5
 80215ee:	fb0a 3304 	mla	r3, sl, r4, r3
 80215f2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80215f4:	fb0e 3304 	mla	r3, lr, r4, r3
 80215f8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80215fc:	2b00      	cmp	r3, #0
 80215fe:	f000 810f 	beq.w	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021602:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021604:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021608:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802160c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021610:	f000 8190 	beq.w	8021934 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021614:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021618:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802161c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021620:	fb09 f000 	mul.w	r0, r9, r0
 8021624:	fb0a fe0e 	mul.w	lr, sl, lr
 8021628:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802162c:	f100 0b20 	add.w	fp, r0, #32
 8021630:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021634:	44ce      	add	lr, r9
 8021636:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802163a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802163e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021642:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021646:	ea4e 0909 	orr.w	r9, lr, r9
 802164a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802164e:	8868      	ldrh	r0, [r5, #2]
 8021650:	d019      	beq.n	8021686 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021652:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021656:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802165a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802165e:	fb08 f800 	mul.w	r8, r8, r0
 8021662:	fb0a fe0e 	mul.w	lr, sl, lr
 8021666:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802166a:	f108 0b20 	add.w	fp, r8, #32
 802166e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021672:	4486      	add	lr, r0
 8021674:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021678:	0a00      	lsrs	r0, r0, #8
 802167a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802167e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021682:	ea4e 0000 	orr.w	r0, lr, r0
 8021686:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802168a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802168e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021692:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021696:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802169a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802169e:	ea4e 0909 	orr.w	r9, lr, r9
 80216a2:	ea4a 0000 	orr.w	r0, sl, r0
 80216a6:	f1bc 0f00 	cmp.w	ip, #0
 80216aa:	f000 8145 	beq.w	8021938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80216ae:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80216b2:	3a01      	subs	r2, #1
 80216b4:	0052      	lsls	r2, r2, #1
 80216b6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80216b8:	3202      	adds	r2, #2
 80216ba:	2cff      	cmp	r4, #255	; 0xff
 80216bc:	eb05 0e02 	add.w	lr, r5, r2
 80216c0:	5aaa      	ldrh	r2, [r5, r2]
 80216c2:	d018      	beq.n	80216f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80216c4:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 80216c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80216cc:	fb04 fa02 	mul.w	sl, r4, r2
 80216d0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80216d4:	fb08 f805 	mul.w	r8, r8, r5
 80216d8:	f10a 0520 	add.w	r5, sl, #32
 80216dc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80216e0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80216e4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80216e8:	4442      	add	r2, r8
 80216ea:	0a2d      	lsrs	r5, r5, #8
 80216ec:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80216f0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80216f4:	432a      	orrs	r2, r5
 80216f6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80216f8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80216fc:	2cff      	cmp	r4, #255	; 0xff
 80216fe:	d01a      	beq.n	8021736 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021700:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8021704:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021708:	fb04 fa05 	mul.w	sl, r4, r5
 802170c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021710:	fb08 f80e 	mul.w	r8, r8, lr
 8021714:	f10a 0e20 	add.w	lr, sl, #32
 8021718:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802171c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021720:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021724:	4445      	add	r5, r8
 8021726:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802172a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802172e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8021732:	ea45 050e 	orr.w	r5, r5, lr
 8021736:	fb1c fe01 	smulbb	lr, ip, r1
 802173a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802173e:	f1cc 0810 	rsb	r8, ip, #16
 8021742:	eba8 0801 	sub.w	r8, r8, r1
 8021746:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802174a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802174e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021752:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021756:	4341      	muls	r1, r0
 8021758:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802175c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021760:	ea4a 0202 	orr.w	r2, sl, r2
 8021764:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021768:	fb09 1108 	mla	r1, r9, r8, r1
 802176c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021770:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021774:	fb0c 1102 	mla	r1, ip, r2, r1
 8021778:	ea4b 0505 	orr.w	r5, fp, r5
 802177c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021780:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021784:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021788:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802178c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021790:	ea42 0e0e 	orr.w	lr, r2, lr
 8021794:	fa1f f28e 	uxth.w	r2, lr
 8021798:	2bff      	cmp	r3, #255	; 0xff
 802179a:	d103      	bne.n	80217a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 802179c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802179e:	29ff      	cmp	r1, #255	; 0xff
 80217a0:	f000 80de 	beq.w	8021960 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80217a4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80217a6:	8838      	ldrh	r0, [r7, #0]
 80217a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80217aa:	434b      	muls	r3, r1
 80217ac:	f103 0c01 	add.w	ip, r3, #1
 80217b0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80217b4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80217b8:	fa5f fc83 	uxtb.w	ip, r3
 80217bc:	1203      	asrs	r3, r0, #8
 80217be:	1215      	asrs	r5, r2, #8
 80217c0:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80217c4:	fb13 f30c 	smulbb	r3, r3, ip
 80217c8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80217cc:	fb05 3501 	mla	r5, r5, r1, r3
 80217d0:	10c3      	asrs	r3, r0, #3
 80217d2:	10d1      	asrs	r1, r2, #3
 80217d4:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80217d8:	fb13 f30c 	smulbb	r3, r3, ip
 80217dc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80217e0:	fb01 3104 	mla	r1, r1, r4, r3
 80217e4:	00c3      	lsls	r3, r0, #3
 80217e6:	00d2      	lsls	r2, r2, #3
 80217e8:	b2db      	uxtb	r3, r3
 80217ea:	b2d2      	uxtb	r2, r2
 80217ec:	fb13 f30c 	smulbb	r3, r3, ip
 80217f0:	b2ad      	uxth	r5, r5
 80217f2:	fb02 3304 	mla	r3, r2, r4, r3
 80217f6:	b29a      	uxth	r2, r3
 80217f8:	1c6b      	adds	r3, r5, #1
 80217fa:	b289      	uxth	r1, r1
 80217fc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021800:	1c53      	adds	r3, r2, #1
 8021802:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021806:	1c4a      	adds	r2, r1, #1
 8021808:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802180c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021810:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021814:	0949      	lsrs	r1, r1, #5
 8021816:	432b      	orrs	r3, r5
 8021818:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802181c:	430b      	orrs	r3, r1
 802181e:	803b      	strh	r3, [r7, #0]
 8021820:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021822:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021824:	4413      	add	r3, r2
 8021826:	9321      	str	r3, [sp, #132]	; 0x84
 8021828:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802182a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802182c:	441a      	add	r2, r3
 802182e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021830:	9222      	str	r2, [sp, #136]	; 0x88
 8021832:	3b01      	subs	r3, #1
 8021834:	3702      	adds	r7, #2
 8021836:	9313      	str	r3, [sp, #76]	; 0x4c
 8021838:	e689      	b.n	802154e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802183a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802183c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 802183e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021840:	4433      	add	r3, r6
 8021842:	9321      	str	r3, [sp, #132]	; 0x84
 8021844:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021846:	441c      	add	r4, r3
 8021848:	9b08      	ldr	r3, [sp, #32]
 802184a:	9422      	str	r4, [sp, #136]	; 0x88
 802184c:	3b01      	subs	r3, #1
 802184e:	9308      	str	r3, [sp, #32]
 8021850:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021852:	3302      	adds	r3, #2
 8021854:	9309      	str	r3, [sp, #36]	; 0x24
 8021856:	e658      	b.n	802150a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021858:	d028      	beq.n	80218ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802185a:	9b08      	ldr	r3, [sp, #32]
 802185c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802185e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021860:	3b01      	subs	r3, #1
 8021862:	fb00 5003 	mla	r0, r0, r3, r5
 8021866:	1400      	asrs	r0, r0, #16
 8021868:	f53f ae6c 	bmi.w	8021544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802186c:	3901      	subs	r1, #1
 802186e:	4288      	cmp	r0, r1
 8021870:	f6bf ae68 	bge.w	8021544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021874:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021876:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021878:	fb01 0303 	mla	r3, r1, r3, r0
 802187c:	141b      	asrs	r3, r3, #16
 802187e:	f53f ae61 	bmi.w	8021544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021882:	3a01      	subs	r2, #1
 8021884:	4293      	cmp	r3, r2
 8021886:	f6bf ae5d 	bge.w	8021544 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802188a:	9b08      	ldr	r3, [sp, #32]
 802188c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021890:	9313      	str	r3, [sp, #76]	; 0x4c
 8021892:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021896:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021898:	2b00      	cmp	r3, #0
 802189a:	f300 8082 	bgt.w	80219a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 802189e:	9b08      	ldr	r3, [sp, #32]
 80218a0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80218a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80218a6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80218aa:	9309      	str	r3, [sp, #36]	; 0x24
 80218ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80218ae:	2b00      	cmp	r3, #0
 80218b0:	f340 81ef 	ble.w	8021c92 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80218b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80218b8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80218bc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80218c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80218c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80218c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80218ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80218ce:	eef0 6a62 	vmov.f32	s13, s5
 80218d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80218d6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80218de:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 80218e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80218e6:	eef0 6a43 	vmov.f32	s13, s6
 80218ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80218ee:	ee12 2a90 	vmov	r2, s5
 80218f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80218f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80218fa:	ee13 2a10 	vmov	r2, s6
 80218fe:	9323      	str	r3, [sp, #140]	; 0x8c
 8021900:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021902:	fb92 f3f3 	sdiv	r3, r2, r3
 8021906:	9324      	str	r3, [sp, #144]	; 0x90
 8021908:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802190a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802190c:	3b01      	subs	r3, #1
 802190e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021912:	9311      	str	r3, [sp, #68]	; 0x44
 8021914:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021916:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 802191a:	bf08      	it	eq
 802191c:	4613      	moveq	r3, r2
 802191e:	9308      	str	r3, [sp, #32]
 8021920:	eeb0 3a67 	vmov.f32	s6, s15
 8021924:	eef0 2a47 	vmov.f32	s5, s14
 8021928:	e5e1      	b.n	80214ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802192a:	fb08 f505 	mul.w	r5, r8, r5
 802192e:	fb09 5303 	mla	r3, r9, r3, r5
 8021932:	e661      	b.n	80215f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021934:	4681      	mov	r9, r0
 8021936:	e688      	b.n	802164a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021938:	f1c1 0210 	rsb	r2, r1, #16
 802193c:	4341      	muls	r1, r0
 802193e:	fb09 1902 	mla	r9, r9, r2, r1
 8021942:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021946:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802194a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802194e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021952:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021956:	ea42 0909 	orr.w	r9, r2, r9
 802195a:	fa1f f289 	uxth.w	r2, r9
 802195e:	e71b      	b.n	8021798 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021960:	803a      	strh	r2, [r7, #0]
 8021962:	e75d      	b.n	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021964:	f115 0e01 	adds.w	lr, r5, #1
 8021968:	f53f af5a 	bmi.w	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802196c:	4572      	cmp	r2, lr
 802196e:	f6ff af57 	blt.w	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021972:	f110 0e01 	adds.w	lr, r0, #1
 8021976:	f53f af53 	bmi.w	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802197a:	4573      	cmp	r3, lr
 802197c:	f6ff af50 	blt.w	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021980:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021982:	9502      	str	r5, [sp, #8]
 8021984:	b21b      	sxth	r3, r3
 8021986:	b212      	sxth	r2, r2
 8021988:	e9cd 0103 	strd	r0, r1, [sp, #12]
 802198c:	9301      	str	r3, [sp, #4]
 802198e:	9200      	str	r2, [sp, #0]
 8021990:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021994:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021998:	4639      	mov	r1, r7
 802199a:	9815      	ldr	r0, [sp, #84]	; 0x54
 802199c:	f7ff fc04 	bl	80211a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80219a0:	e73e      	b.n	8021820 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80219a4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80219a8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80219aa:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80219ae:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80219b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80219b6:	141f      	asrs	r7, r3, #16
 80219b8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80219ba:	141b      	asrs	r3, r3, #16
 80219bc:	fb01 3707 	mla	r7, r1, r7, r3
 80219c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80219c2:	fa1f fc82 	uxth.w	ip, r2
 80219c6:	eb03 0a07 	add.w	sl, r3, r7
 80219ca:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80219ce:	f813 9007 	ldrb.w	r9, [r3, r7]
 80219d2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80219d6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80219da:	b29b      	uxth	r3, r3
 80219dc:	2d00      	cmp	r5, #0
 80219de:	f000 813d 	beq.w	8021c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 80219e2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80219e6:	940f      	str	r4, [sp, #60]	; 0x3c
 80219e8:	eb0a 0b01 	add.w	fp, sl, r1
 80219ec:	fa1f fa85 	uxth.w	sl, r5
 80219f0:	fb0a fc0c 	mul.w	ip, sl, ip
 80219f4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80219f8:	fa1f fa8a 	uxth.w	sl, sl
 80219fc:	eba0 000c 	sub.w	r0, r0, ip
 8021a00:	eba3 030a 	sub.w	r3, r3, sl
 8021a04:	b280      	uxth	r0, r0
 8021a06:	fb08 f000 	mul.w	r0, r8, r0
 8021a0a:	b29b      	uxth	r3, r3
 8021a0c:	fb09 0303 	mla	r3, r9, r3, r0
 8021a10:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021a12:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021a16:	9410      	str	r4, [sp, #64]	; 0x40
 8021a18:	fb0a 3300 	mla	r3, sl, r0, r3
 8021a1c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a20:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021a24:	2b00      	cmp	r3, #0
 8021a26:	f000 810b 	beq.w	8021c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021a2a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021a2c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021a2e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021a32:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021a36:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021a3a:	f000 8114 	beq.w	8021c66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021a3e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a42:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021a46:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a4a:	fb09 f707 	mul.w	r7, r9, r7
 8021a4e:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a52:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021a56:	f107 0b20 	add.w	fp, r7, #32
 8021a5a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a5e:	44cc      	add	ip, r9
 8021a60:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021a64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a68:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a6c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021a70:	ea4c 0909 	orr.w	r9, ip, r9
 8021a74:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021a78:	8847      	ldrh	r7, [r0, #2]
 8021a7a:	d019      	beq.n	8021ab0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021a7c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021a80:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021a84:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021a88:	fb08 f807 	mul.w	r8, r8, r7
 8021a8c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a90:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021a94:	f108 0b20 	add.w	fp, r8, #32
 8021a98:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021a9c:	44bc      	add	ip, r7
 8021a9e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021aa2:	0a3f      	lsrs	r7, r7, #8
 8021aa4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021aa8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021aac:	ea4c 0707 	orr.w	r7, ip, r7
 8021ab0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021ab4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021ab8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021abc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021ac0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021ac4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021ac8:	ea4c 0909 	orr.w	r9, ip, r9
 8021acc:	ea4a 0707 	orr.w	r7, sl, r7
 8021ad0:	2d00      	cmp	r5, #0
 8021ad2:	f000 80ca 	beq.w	8021c6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021ad6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021ada:	3901      	subs	r1, #1
 8021adc:	0049      	lsls	r1, r1, #1
 8021ade:	3102      	adds	r1, #2
 8021ae0:	eb00 0c01 	add.w	ip, r0, r1
 8021ae4:	5a41      	ldrh	r1, [r0, r1]
 8021ae6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021ae8:	28ff      	cmp	r0, #255	; 0xff
 8021aea:	d019      	beq.n	8021b20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021aec:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021aee:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021af2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021af6:	fb04 fa01 	mul.w	sl, r4, r1
 8021afa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021afe:	fb08 f800 	mul.w	r8, r8, r0
 8021b02:	f10a 0020 	add.w	r0, sl, #32
 8021b06:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021b0a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021b0e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b12:	4441      	add	r1, r8
 8021b14:	0a00      	lsrs	r0, r0, #8
 8021b16:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021b1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b1e:	4301      	orrs	r1, r0
 8021b20:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021b22:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021b26:	2cff      	cmp	r4, #255	; 0xff
 8021b28:	d01a      	beq.n	8021b60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021b2a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021b2e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021b32:	fb04 fa00 	mul.w	sl, r4, r0
 8021b36:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b3a:	fb08 f80c 	mul.w	r8, r8, ip
 8021b3e:	f10a 0c20 	add.w	ip, sl, #32
 8021b42:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021b46:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021b4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021b4e:	4440      	add	r0, r8
 8021b50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b54:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021b58:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021b5c:	ea40 000c 	orr.w	r0, r0, ip
 8021b60:	fb15 fc02 	smulbb	ip, r5, r2
 8021b64:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021b68:	f1c5 0810 	rsb	r8, r5, #16
 8021b6c:	eba8 0802 	sub.w	r8, r8, r2
 8021b70:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021b74:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021b78:	437a      	muls	r2, r7
 8021b7a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021b7e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021b82:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021b86:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021b8a:	fb09 2208 	mla	r2, r9, r8, r2
 8021b8e:	ea4a 0101 	orr.w	r1, sl, r1
 8021b92:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021b96:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021b9a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021b9e:	fb05 2201 	mla	r2, r5, r1, r2
 8021ba2:	ea4b 0000 	orr.w	r0, fp, r0
 8021ba6:	fb0c 2200 	mla	r2, ip, r0, r2
 8021baa:	0d57      	lsrs	r7, r2, #21
 8021bac:	0952      	lsrs	r2, r2, #5
 8021bae:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021bb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021bb6:	433a      	orrs	r2, r7
 8021bb8:	2bff      	cmp	r3, #255	; 0xff
 8021bba:	b292      	uxth	r2, r2
 8021bbc:	d102      	bne.n	8021bc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021bbe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021bc0:	29ff      	cmp	r1, #255	; 0xff
 8021bc2:	d063      	beq.n	8021c8c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021bc4:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021bc6:	f8be 1000 	ldrh.w	r1, [lr]
 8021bca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021bcc:	4343      	muls	r3, r0
 8021bce:	1c58      	adds	r0, r3, #1
 8021bd0:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021bd4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021bd8:	1208      	asrs	r0, r1, #8
 8021bda:	b2db      	uxtb	r3, r3
 8021bdc:	1215      	asrs	r5, r2, #8
 8021bde:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021be2:	fb10 f003 	smulbb	r0, r0, r3
 8021be6:	10cf      	asrs	r7, r1, #3
 8021be8:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021bec:	00c9      	lsls	r1, r1, #3
 8021bee:	fb05 0504 	mla	r5, r5, r4, r0
 8021bf2:	b2c9      	uxtb	r1, r1
 8021bf4:	10d0      	asrs	r0, r2, #3
 8021bf6:	00d2      	lsls	r2, r2, #3
 8021bf8:	fb11 f103 	smulbb	r1, r1, r3
 8021bfc:	b2d2      	uxtb	r2, r2
 8021bfe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021c02:	fb02 1204 	mla	r2, r2, r4, r1
 8021c06:	fb17 f703 	smulbb	r7, r7, r3
 8021c0a:	b2ad      	uxth	r5, r5
 8021c0c:	b292      	uxth	r2, r2
 8021c0e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021c12:	fb00 7004 	mla	r0, r0, r4, r7
 8021c16:	1c6b      	adds	r3, r5, #1
 8021c18:	1c57      	adds	r7, r2, #1
 8021c1a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c1e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021c22:	b280      	uxth	r0, r0
 8021c24:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021c28:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021c2c:	433d      	orrs	r5, r7
 8021c2e:	1c47      	adds	r7, r0, #1
 8021c30:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021c34:	097f      	lsrs	r7, r7, #5
 8021c36:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021c3a:	433d      	orrs	r5, r7
 8021c3c:	f8ae 5000 	strh.w	r5, [lr]
 8021c40:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c42:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021c44:	4413      	add	r3, r2
 8021c46:	9321      	str	r3, [sp, #132]	; 0x84
 8021c48:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021c4a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021c4c:	441a      	add	r2, r3
 8021c4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021c50:	9222      	str	r2, [sp, #136]	; 0x88
 8021c52:	3b01      	subs	r3, #1
 8021c54:	f10e 0e02 	add.w	lr, lr, #2
 8021c58:	9313      	str	r3, [sp, #76]	; 0x4c
 8021c5a:	e61c      	b.n	8021896 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021c5c:	fb08 f000 	mul.w	r0, r8, r0
 8021c60:	fb09 0303 	mla	r3, r9, r3, r0
 8021c64:	e6dc      	b.n	8021a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021c66:	46b9      	mov	r9, r7
 8021c68:	e704      	b.n	8021a74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021c6a:	f1c2 0110 	rsb	r1, r2, #16
 8021c6e:	437a      	muls	r2, r7
 8021c70:	fb09 2901 	mla	r9, r9, r1, r2
 8021c74:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c78:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021c7c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021c80:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021c84:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021c88:	4302      	orrs	r2, r0
 8021c8a:	e795      	b.n	8021bb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021c8c:	f8ae 2000 	strh.w	r2, [lr]
 8021c90:	e7d6      	b.n	8021c40 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021c92:	b017      	add	sp, #92	; 0x5c
 8021c94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021c98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021c9c:	b085      	sub	sp, #20
 8021c9e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021ca2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021ca6:	9103      	str	r1, [sp, #12]
 8021ca8:	fb00 7406 	mla	r4, r0, r6, r7
 8021cac:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021cb0:	2800      	cmp	r0, #0
 8021cb2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021cb6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021cba:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021cbe:	9501      	str	r5, [sp, #4]
 8021cc0:	eb02 0904 	add.w	r9, r2, r4
 8021cc4:	f2c0 8141 	blt.w	8021f4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021cc8:	4583      	cmp	fp, r0
 8021cca:	f340 813e 	ble.w	8021f4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021cce:	2f00      	cmp	r7, #0
 8021cd0:	f2c0 8137 	blt.w	8021f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021cd4:	42be      	cmp	r6, r7
 8021cd6:	f340 8134 	ble.w	8021f42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021cda:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021cde:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021ce2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021ce6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021cea:	4355      	muls	r5, r2
 8021cec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021cf0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021cf4:	fb0c f203 	mul.w	r2, ip, r3
 8021cf8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021cfc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021d00:	441d      	add	r5, r3
 8021d02:	f102 0320 	add.w	r3, r2, #32
 8021d06:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d0a:	0a1b      	lsrs	r3, r3, #8
 8021d0c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021d10:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021d14:	431c      	orrs	r4, r3
 8021d16:	1c7b      	adds	r3, r7, #1
 8021d18:	f100 811c 	bmi.w	8021f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d1c:	429e      	cmp	r6, r3
 8021d1e:	f340 8119 	ble.w	8021f54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d22:	2900      	cmp	r1, #0
 8021d24:	f000 8119 	beq.w	8021f5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021d28:	9a01      	ldr	r2, [sp, #4]
 8021d2a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021d2e:	8855      	ldrh	r5, [r2, #2]
 8021d30:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021d34:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021d38:	fb08 f802 	mul.w	r8, r8, r2
 8021d3c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021d40:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021d44:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021d48:	435d      	muls	r5, r3
 8021d4a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021d4e:	44d0      	add	r8, sl
 8021d50:	f105 0a20 	add.w	sl, r5, #32
 8021d54:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021d58:	0a2d      	lsrs	r5, r5, #8
 8021d5a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021d5e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021d62:	432a      	orrs	r2, r5
 8021d64:	3001      	adds	r0, #1
 8021d66:	f100 80fe 	bmi.w	8021f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d6a:	4583      	cmp	fp, r0
 8021d6c:	f340 80fb 	ble.w	8021f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d70:	f1be 0f00 	cmp.w	lr, #0
 8021d74:	f000 80fc 	beq.w	8021f70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021d78:	2f00      	cmp	r7, #0
 8021d7a:	f2c0 80f1 	blt.w	8021f60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021d7e:	42be      	cmp	r6, r7
 8021d80:	f340 80ee 	ble.w	8021f60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021d84:	9801      	ldr	r0, [sp, #4]
 8021d86:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021d8a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021d8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021d92:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021d96:	fb0a fa00 	mul.w	sl, sl, r0
 8021d9a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8021d9e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021da2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021da6:	fb05 f808 	mul.w	r8, r5, r8
 8021daa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8021dae:	4482      	add	sl, r0
 8021db0:	f108 0020 	add.w	r0, r8, #32
 8021db4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021db8:	0a00      	lsrs	r0, r0, #8
 8021dba:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021dbe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dc2:	ea4b 0b00 	orr.w	fp, fp, r0
 8021dc6:	3701      	adds	r7, #1
 8021dc8:	f100 80d7 	bmi.w	8021f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021dcc:	42be      	cmp	r6, r7
 8021dce:	f340 80d4 	ble.w	8021f7a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021dd2:	2900      	cmp	r1, #0
 8021dd4:	f000 80d4 	beq.w	8021f80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021dd8:	3601      	adds	r6, #1
 8021dda:	9801      	ldr	r0, [sp, #4]
 8021ddc:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021de0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021de4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021de8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 8021dec:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021df0:	fb09 f906 	mul.w	r9, r9, r6
 8021df4:	fb07 f800 	mul.w	r8, r7, r0
 8021df8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 8021dfc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021e00:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8021e04:	44d1      	add	r9, sl
 8021e06:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021e0a:	f108 0020 	add.w	r0, r8, #32
 8021e0e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021e12:	0a00      	lsrs	r0, r0, #8
 8021e14:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021e18:	4330      	orrs	r0, r6
 8021e1a:	b28e      	uxth	r6, r1
 8021e1c:	fa1f f98e 	uxth.w	r9, lr
 8021e20:	fb06 f809 	mul.w	r8, r6, r9
 8021e24:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021e28:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021e2c:	0136      	lsls	r6, r6, #4
 8021e2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e32:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8021e36:	9601      	str	r6, [sp, #4]
 8021e38:	ea4a 0404 	orr.w	r4, sl, r4
 8021e3c:	fa1f f689 	uxth.w	r6, r9
 8021e40:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021e44:	fb11 f90e 	smulbb	r9, r1, lr
 8021e48:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021e4c:	9602      	str	r6, [sp, #8]
 8021e4e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e52:	4626      	mov	r6, r4
 8021e54:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e58:	f1ce 0410 	rsb	r4, lr, #16
 8021e5c:	1a64      	subs	r4, r4, r1
 8021e5e:	ea4a 0202 	orr.w	r2, sl, r2
 8021e62:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021e66:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021e6a:	434a      	muls	r2, r1
 8021e6c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021e70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e74:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e78:	fb04 2406 	mla	r4, r4, r6, r2
 8021e7c:	ea4a 0000 	orr.w	r0, sl, r0
 8021e80:	fb09 4200 	mla	r2, r9, r0, r4
 8021e84:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021e88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8021e8c:	9801      	ldr	r0, [sp, #4]
 8021e8e:	9903      	ldr	r1, [sp, #12]
 8021e90:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021e94:	ea44 0b0b 	orr.w	fp, r4, fp
 8021e98:	9c02      	ldr	r4, [sp, #8]
 8021e9a:	8809      	ldrh	r1, [r1, #0]
 8021e9c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8021ea0:	1b00      	subs	r0, r0, r4
 8021ea2:	9c01      	ldr	r4, [sp, #4]
 8021ea4:	eba4 0608 	sub.w	r6, r4, r8
 8021ea8:	b2b6      	uxth	r6, r6
 8021eaa:	b280      	uxth	r0, r0
 8021eac:	4373      	muls	r3, r6
 8021eae:	fb0c 3300 	mla	r3, ip, r0, r3
 8021eb2:	9802      	ldr	r0, [sp, #8]
 8021eb4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021eb8:	fb00 3505 	mla	r5, r0, r5, r3
 8021ebc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021ec0:	fb08 5707 	mla	r7, r8, r7, r5
 8021ec4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021ec8:	120b      	asrs	r3, r1, #8
 8021eca:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021ece:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021ed2:	b2ff      	uxtb	r7, r7
 8021ed4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021ed8:	10c8      	asrs	r0, r1, #3
 8021eda:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021ede:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021ee2:	00c9      	lsls	r1, r1, #3
 8021ee4:	437b      	muls	r3, r7
 8021ee6:	ea42 0e0e 	orr.w	lr, r2, lr
 8021eea:	b2c9      	uxtb	r1, r1
 8021eec:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021ef0:	fa1f f28e 	uxth.w	r2, lr
 8021ef4:	4378      	muls	r0, r7
 8021ef6:	434f      	muls	r7, r1
 8021ef8:	1c59      	adds	r1, r3, #1
 8021efa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021efe:	1213      	asrs	r3, r2, #8
 8021f00:	f023 0307 	bic.w	r3, r3, #7
 8021f04:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021f08:	1c41      	adds	r1, r0, #1
 8021f0a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021f0e:	10d1      	asrs	r1, r2, #3
 8021f10:	f021 0103 	bic.w	r1, r1, #3
 8021f14:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021f18:	021b      	lsls	r3, r3, #8
 8021f1a:	00c9      	lsls	r1, r1, #3
 8021f1c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021f20:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8021f24:	430b      	orrs	r3, r1
 8021f26:	1c79      	adds	r1, r7, #1
 8021f28:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021f2c:	00d2      	lsls	r2, r2, #3
 8021f2e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021f32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f36:	431a      	orrs	r2, r3
 8021f38:	9b03      	ldr	r3, [sp, #12]
 8021f3a:	801a      	strh	r2, [r3, #0]
 8021f3c:	b005      	add	sp, #20
 8021f3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f42:	f04f 0c00 	mov.w	ip, #0
 8021f46:	4664      	mov	r4, ip
 8021f48:	e6e5      	b.n	8021d16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021f4a:	2300      	movs	r3, #0
 8021f4c:	469c      	mov	ip, r3
 8021f4e:	461a      	mov	r2, r3
 8021f50:	461c      	mov	r4, r3
 8021f52:	e707      	b.n	8021d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f54:	2300      	movs	r3, #0
 8021f56:	461a      	mov	r2, r3
 8021f58:	e704      	b.n	8021d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f5a:	460b      	mov	r3, r1
 8021f5c:	460a      	mov	r2, r1
 8021f5e:	e701      	b.n	8021d64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f60:	2500      	movs	r5, #0
 8021f62:	46ab      	mov	fp, r5
 8021f64:	e72f      	b.n	8021dc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021f66:	2700      	movs	r7, #0
 8021f68:	463d      	mov	r5, r7
 8021f6a:	4638      	mov	r0, r7
 8021f6c:	46bb      	mov	fp, r7
 8021f6e:	e754      	b.n	8021e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f70:	4677      	mov	r7, lr
 8021f72:	4675      	mov	r5, lr
 8021f74:	4670      	mov	r0, lr
 8021f76:	46f3      	mov	fp, lr
 8021f78:	e74f      	b.n	8021e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f7a:	2700      	movs	r7, #0
 8021f7c:	4638      	mov	r0, r7
 8021f7e:	e74c      	b.n	8021e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f80:	460f      	mov	r7, r1
 8021f82:	4608      	mov	r0, r1
 8021f84:	e749      	b.n	8021e1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f8c:	b093      	sub	sp, #76	; 0x4c
 8021f8e:	9210      	str	r2, [sp, #64]	; 0x40
 8021f90:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8021f92:	910e      	str	r1, [sp, #56]	; 0x38
 8021f94:	9306      	str	r3, [sp, #24]
 8021f96:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8021f9a:	9011      	str	r0, [sp, #68]	; 0x44
 8021f9c:	6850      	ldr	r0, [r2, #4]
 8021f9e:	6812      	ldr	r2, [r2, #0]
 8021fa0:	fb00 1303 	mla	r3, r0, r3, r1
 8021fa4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021fa8:	9307      	str	r3, [sp, #28]
 8021faa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fac:	681b      	ldr	r3, [r3, #0]
 8021fae:	9308      	str	r3, [sp, #32]
 8021fb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fb2:	685b      	ldr	r3, [r3, #4]
 8021fb4:	9309      	str	r3, [sp, #36]	; 0x24
 8021fb6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8021fb8:	2b00      	cmp	r3, #0
 8021fba:	dc03      	bgt.n	8021fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021fbc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021fbe:	2b00      	cmp	r3, #0
 8021fc0:	f340 83b4 	ble.w	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021fc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021fc6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021fca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021fce:	1e48      	subs	r0, r1, #1
 8021fd0:	1e55      	subs	r5, r2, #1
 8021fd2:	9b06      	ldr	r3, [sp, #24]
 8021fd4:	2b00      	cmp	r3, #0
 8021fd6:	f340 8163 	ble.w	80222a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021fda:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8021fdc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8021fde:	1436      	asrs	r6, r6, #16
 8021fe0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021fe4:	d406      	bmi.n	8021ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021fe6:	4286      	cmp	r6, r0
 8021fe8:	da04      	bge.n	8021ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021fea:	2b00      	cmp	r3, #0
 8021fec:	db02      	blt.n	8021ff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021fee:	42ab      	cmp	r3, r5
 8021ff0:	f2c0 8157 	blt.w	80222a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8021ff4:	3601      	adds	r6, #1
 8021ff6:	f100 8144 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8021ffa:	42b1      	cmp	r1, r6
 8021ffc:	f2c0 8141 	blt.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022000:	3301      	adds	r3, #1
 8022002:	f100 813e 	bmi.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022006:	429a      	cmp	r2, r3
 8022008:	f2c0 813b 	blt.w	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802200c:	9b06      	ldr	r3, [sp, #24]
 802200e:	9f07      	ldr	r7, [sp, #28]
 8022010:	930f      	str	r3, [sp, #60]	; 0x3c
 8022012:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8022016:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022018:	2b00      	cmp	r3, #0
 802201a:	f340 8164 	ble.w	80222e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802201e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022020:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022022:	1418      	asrs	r0, r3, #16
 8022024:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022026:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802202a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802202c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022030:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022032:	142d      	asrs	r5, r5, #16
 8022034:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8022038:	f100 81ee 	bmi.w	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802203c:	f102 3eff 	add.w	lr, r2, #4294967295
 8022040:	4575      	cmp	r5, lr
 8022042:	f280 81e9 	bge.w	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022046:	2800      	cmp	r0, #0
 8022048:	f2c0 81e6 	blt.w	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802204c:	f103 3eff 	add.w	lr, r3, #4294967295
 8022050:	4570      	cmp	r0, lr
 8022052:	f280 81e1 	bge.w	8022418 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022056:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022058:	b212      	sxth	r2, r2
 802205a:	fb00 5002 	mla	r0, r0, r2, r5
 802205e:	fa1f fe81 	uxth.w	lr, r1
 8022062:	eb03 0a00 	add.w	sl, r3, r0
 8022066:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802206a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802206e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022072:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022076:	b29b      	uxth	r3, r3
 8022078:	f1bc 0f00 	cmp.w	ip, #0
 802207c:	f000 8179 	beq.w	8022372 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022080:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022084:	940a      	str	r4, [sp, #40]	; 0x28
 8022086:	eb0a 0b02 	add.w	fp, sl, r2
 802208a:	fa1f fa8c 	uxth.w	sl, ip
 802208e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022092:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022096:	fa1f fa8a 	uxth.w	sl, sl
 802209a:	eba5 050e 	sub.w	r5, r5, lr
 802209e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80220a2:	940b      	str	r4, [sp, #44]	; 0x2c
 80220a4:	eba3 030a 	sub.w	r3, r3, sl
 80220a8:	b2ad      	uxth	r5, r5
 80220aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80220ac:	b29b      	uxth	r3, r3
 80220ae:	fb08 f505 	mul.w	r5, r8, r5
 80220b2:	fb09 5303 	mla	r3, r9, r3, r5
 80220b6:	fb0a 3304 	mla	r3, sl, r4, r3
 80220ba:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80220bc:	fb0e 3304 	mla	r3, lr, r4, r3
 80220c0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80220c4:	2b00      	cmp	r3, #0
 80220c6:	f000 80cf 	beq.w	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80220ca:	9c08      	ldr	r4, [sp, #32]
 80220cc:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80220d0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80220d4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80220d8:	f000 8150 	beq.w	802237c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 80220dc:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80220e0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80220e4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220e8:	fb09 f000 	mul.w	r0, r9, r0
 80220ec:	fb0a fe0e 	mul.w	lr, sl, lr
 80220f0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80220f4:	f100 0b20 	add.w	fp, r0, #32
 80220f8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80220fc:	44ce      	add	lr, r9
 80220fe:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022102:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022106:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802210a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802210e:	ea4e 0909 	orr.w	r9, lr, r9
 8022112:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022116:	8868      	ldrh	r0, [r5, #2]
 8022118:	d019      	beq.n	802214e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802211a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802211e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022122:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022126:	fb08 f800 	mul.w	r8, r8, r0
 802212a:	fb0a fe0e 	mul.w	lr, sl, lr
 802212e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022132:	f108 0b20 	add.w	fp, r8, #32
 8022136:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802213a:	4486      	add	lr, r0
 802213c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022140:	0a00      	lsrs	r0, r0, #8
 8022142:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8022146:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802214a:	ea4e 0000 	orr.w	r0, lr, r0
 802214e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022152:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022156:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802215a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802215e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022162:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022166:	ea4e 0909 	orr.w	r9, lr, r9
 802216a:	ea4a 0000 	orr.w	r0, sl, r0
 802216e:	f1bc 0f00 	cmp.w	ip, #0
 8022172:	f000 8105 	beq.w	8022380 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022176:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802217a:	3a01      	subs	r2, #1
 802217c:	0052      	lsls	r2, r2, #1
 802217e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022180:	3202      	adds	r2, #2
 8022182:	2cff      	cmp	r4, #255	; 0xff
 8022184:	eb05 0e02 	add.w	lr, r5, r2
 8022188:	5aaa      	ldrh	r2, [r5, r2]
 802218a:	d018      	beq.n	80221be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802218c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022190:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022194:	fb04 fa02 	mul.w	sl, r4, r2
 8022198:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802219c:	fb08 f805 	mul.w	r8, r8, r5
 80221a0:	f10a 0520 	add.w	r5, sl, #32
 80221a4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80221a8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80221ac:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80221b0:	4442      	add	r2, r8
 80221b2:	0a2d      	lsrs	r5, r5, #8
 80221b4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80221b8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80221bc:	432a      	orrs	r2, r5
 80221be:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80221c0:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80221c4:	2cff      	cmp	r4, #255	; 0xff
 80221c6:	d01a      	beq.n	80221fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80221c8:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80221cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80221d0:	fb04 fa05 	mul.w	sl, r4, r5
 80221d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221d8:	fb08 f80e 	mul.w	r8, r8, lr
 80221dc:	f10a 0e20 	add.w	lr, sl, #32
 80221e0:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80221e4:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80221e8:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80221ec:	4445      	add	r5, r8
 80221ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80221f2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80221f6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80221fa:	ea45 050e 	orr.w	r5, r5, lr
 80221fe:	fb1c fe01 	smulbb	lr, ip, r1
 8022202:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8022206:	f1cc 0810 	rsb	r8, ip, #16
 802220a:	eba8 0801 	sub.w	r8, r8, r1
 802220e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022212:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8022216:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802221a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802221e:	4341      	muls	r1, r0
 8022220:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022224:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022228:	ea4a 0202 	orr.w	r2, sl, r2
 802222c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022230:	fb09 1108 	mla	r1, r9, r8, r1
 8022234:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022238:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802223c:	fb0c 1102 	mla	r1, ip, r2, r1
 8022240:	ea4b 0505 	orr.w	r5, fp, r5
 8022244:	fb0e 1e05 	mla	lr, lr, r5, r1
 8022248:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802224c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022250:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022254:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022258:	ea42 0e0e 	orr.w	lr, r2, lr
 802225c:	fa1f f28e 	uxth.w	r2, lr
 8022260:	2bff      	cmp	r3, #255	; 0xff
 8022262:	f040 80a1 	bne.w	80223a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022266:	803a      	strh	r2, [r7, #0]
 8022268:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802226a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802226c:	4413      	add	r3, r2
 802226e:	931d      	str	r3, [sp, #116]	; 0x74
 8022270:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022272:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022274:	441a      	add	r2, r3
 8022276:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022278:	921e      	str	r2, [sp, #120]	; 0x78
 802227a:	3b01      	subs	r3, #1
 802227c:	3702      	adds	r7, #2
 802227e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022280:	e6c9      	b.n	8022016 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022282:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022284:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022286:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022288:	4433      	add	r3, r6
 802228a:	931d      	str	r3, [sp, #116]	; 0x74
 802228c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802228e:	441c      	add	r4, r3
 8022290:	9b06      	ldr	r3, [sp, #24]
 8022292:	941e      	str	r4, [sp, #120]	; 0x78
 8022294:	3b01      	subs	r3, #1
 8022296:	9306      	str	r3, [sp, #24]
 8022298:	9b07      	ldr	r3, [sp, #28]
 802229a:	3302      	adds	r3, #2
 802229c:	9307      	str	r3, [sp, #28]
 802229e:	e698      	b.n	8021fd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80222a0:	d028      	beq.n	80222f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80222a2:	9b06      	ldr	r3, [sp, #24]
 80222a4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80222a6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80222a8:	3b01      	subs	r3, #1
 80222aa:	fb00 5003 	mla	r0, r0, r3, r5
 80222ae:	1400      	asrs	r0, r0, #16
 80222b0:	f53f aeac 	bmi.w	802200c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222b4:	3901      	subs	r1, #1
 80222b6:	4288      	cmp	r0, r1
 80222b8:	f6bf aea8 	bge.w	802200c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222bc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80222be:	981e      	ldr	r0, [sp, #120]	; 0x78
 80222c0:	fb01 0303 	mla	r3, r1, r3, r0
 80222c4:	141b      	asrs	r3, r3, #16
 80222c6:	f53f aea1 	bmi.w	802200c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222ca:	3a01      	subs	r2, #1
 80222cc:	4293      	cmp	r3, r2
 80222ce:	f6bf ae9d 	bge.w	802200c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222d2:	9b06      	ldr	r3, [sp, #24]
 80222d4:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80222d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80222da:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80222de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222e0:	2b00      	cmp	r3, #0
 80222e2:	f300 80b6 	bgt.w	8022452 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 80222e6:	9b06      	ldr	r3, [sp, #24]
 80222e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80222ec:	9b07      	ldr	r3, [sp, #28]
 80222ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80222f2:	9307      	str	r3, [sp, #28]
 80222f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80222f6:	2b00      	cmp	r3, #0
 80222f8:	f340 8218 	ble.w	802272c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80222fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022300:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022304:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022308:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802230a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802230e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022312:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022316:	eef0 6a62 	vmov.f32	s13, s5
 802231a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802231e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022322:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022326:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802232a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802232e:	eef0 6a43 	vmov.f32	s13, s6
 8022332:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022336:	ee12 2a90 	vmov	r2, s5
 802233a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802233e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022342:	ee13 2a10 	vmov	r2, s6
 8022346:	931f      	str	r3, [sp, #124]	; 0x7c
 8022348:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802234a:	fb92 f3f3 	sdiv	r3, r2, r3
 802234e:	9320      	str	r3, [sp, #128]	; 0x80
 8022350:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022352:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022354:	3b01      	subs	r3, #1
 8022356:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802235a:	930e      	str	r3, [sp, #56]	; 0x38
 802235c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802235e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022362:	bf08      	it	eq
 8022364:	4613      	moveq	r3, r2
 8022366:	9306      	str	r3, [sp, #24]
 8022368:	eeb0 3a67 	vmov.f32	s6, s15
 802236c:	eef0 2a47 	vmov.f32	s5, s14
 8022370:	e621      	b.n	8021fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022372:	fb08 f505 	mul.w	r5, r8, r5
 8022376:	fb09 5303 	mla	r3, r9, r3, r5
 802237a:	e6a1      	b.n	80220c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802237c:	4681      	mov	r9, r0
 802237e:	e6c8      	b.n	8022112 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022380:	f1c1 0210 	rsb	r2, r1, #16
 8022384:	4341      	muls	r1, r0
 8022386:	fb09 1902 	mla	r9, r9, r2, r1
 802238a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802238e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022392:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022396:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802239a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802239e:	ea42 0909 	orr.w	r9, r2, r9
 80223a2:	fa1f f289 	uxth.w	r2, r9
 80223a6:	e75b      	b.n	8022260 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80223a8:	f8b7 c000 	ldrh.w	ip, [r7]
 80223ac:	43db      	mvns	r3, r3
 80223ae:	ea4f 202c 	mov.w	r0, ip, asr #8
 80223b2:	fa5f fe83 	uxtb.w	lr, r3
 80223b6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80223ba:	fb00 f00e 	mul.w	r0, r0, lr
 80223be:	1c41      	adds	r1, r0, #1
 80223c0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80223c4:	1211      	asrs	r1, r2, #8
 80223c6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80223ca:	f021 0107 	bic.w	r1, r1, #7
 80223ce:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80223d2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80223d6:	48d7      	ldr	r0, [pc, #860]	; (8022734 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80223d8:	fb05 f50e 	mul.w	r5, r5, lr
 80223dc:	b2c9      	uxtb	r1, r1
 80223de:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 80223e2:	1c69      	adds	r1, r5, #1
 80223e4:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80223e8:	10d1      	asrs	r1, r2, #3
 80223ea:	f021 0103 	bic.w	r1, r1, #3
 80223ee:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80223f2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80223f6:	b2db      	uxtb	r3, r3
 80223f8:	00c9      	lsls	r1, r1, #3
 80223fa:	fb03 f30e 	mul.w	r3, r3, lr
 80223fe:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022402:	4301      	orrs	r1, r0
 8022404:	1c58      	adds	r0, r3, #1
 8022406:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802240a:	00d2      	lsls	r2, r2, #3
 802240c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022410:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022414:	430a      	orrs	r2, r1
 8022416:	e726      	b.n	8022266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 8022418:	f115 0e01 	adds.w	lr, r5, #1
 802241c:	f53f af24 	bmi.w	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022420:	4572      	cmp	r2, lr
 8022422:	f6ff af21 	blt.w	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022426:	f110 0e01 	adds.w	lr, r0, #1
 802242a:	f53f af1d 	bmi.w	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802242e:	4573      	cmp	r3, lr
 8022430:	f6ff af1a 	blt.w	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022434:	b21b      	sxth	r3, r3
 8022436:	b212      	sxth	r2, r2
 8022438:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802243c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022440:	9301      	str	r3, [sp, #4]
 8022442:	9200      	str	r2, [sp, #0]
 8022444:	4639      	mov	r1, r7
 8022446:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802244a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802244c:	f7ff fc24 	bl	8021c98 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022450:	e70a      	b.n	8022268 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022452:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022454:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022458:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802245a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802245e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022460:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022464:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022466:	141f      	asrs	r7, r3, #16
 8022468:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802246a:	141b      	asrs	r3, r3, #16
 802246c:	fb01 3707 	mla	r7, r1, r7, r3
 8022470:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022472:	fa1f fc82 	uxth.w	ip, r2
 8022476:	eb03 0a07 	add.w	sl, r3, r7
 802247a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802247e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022482:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022486:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802248a:	b29b      	uxth	r3, r3
 802248c:	2d00      	cmp	r5, #0
 802248e:	f000 80fe 	beq.w	802268e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022492:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022496:	940c      	str	r4, [sp, #48]	; 0x30
 8022498:	eb0a 0b01 	add.w	fp, sl, r1
 802249c:	fa1f fa85 	uxth.w	sl, r5
 80224a0:	fb0a fc0c 	mul.w	ip, sl, ip
 80224a4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80224a8:	fa1f fa8a 	uxth.w	sl, sl
 80224ac:	eba0 000c 	sub.w	r0, r0, ip
 80224b0:	eba3 030a 	sub.w	r3, r3, sl
 80224b4:	b280      	uxth	r0, r0
 80224b6:	fb08 f000 	mul.w	r0, r8, r0
 80224ba:	b29b      	uxth	r3, r3
 80224bc:	fb09 0303 	mla	r3, r9, r3, r0
 80224c0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80224c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80224c6:	940d      	str	r4, [sp, #52]	; 0x34
 80224c8:	fb0a 3300 	mla	r3, sl, r0, r3
 80224cc:	fb0c 3304 	mla	r3, ip, r4, r3
 80224d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80224d4:	2b00      	cmp	r3, #0
 80224d6:	f000 80cc 	beq.w	8022672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80224da:	9808      	ldr	r0, [sp, #32]
 80224dc:	9c08      	ldr	r4, [sp, #32]
 80224de:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80224e2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 80224e6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 80224ea:	f000 80d5 	beq.w	8022698 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80224ee:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80224f2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80224f6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80224fa:	fb09 f707 	mul.w	r7, r9, r7
 80224fe:	fb0a fc0c 	mul.w	ip, sl, ip
 8022502:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8022506:	f107 0b20 	add.w	fp, r7, #32
 802250a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802250e:	44cc      	add	ip, r9
 8022510:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022514:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022518:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802251c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022520:	ea4c 0909 	orr.w	r9, ip, r9
 8022524:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8022528:	8847      	ldrh	r7, [r0, #2]
 802252a:	d019      	beq.n	8022560 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802252c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8022530:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022534:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022538:	fb08 f807 	mul.w	r8, r8, r7
 802253c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022540:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022544:	f108 0b20 	add.w	fp, r8, #32
 8022548:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802254c:	44bc      	add	ip, r7
 802254e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022552:	0a3f      	lsrs	r7, r7, #8
 8022554:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022558:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802255c:	ea4c 0707 	orr.w	r7, ip, r7
 8022560:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022564:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022568:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802256c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022570:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022574:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022578:	ea4c 0909 	orr.w	r9, ip, r9
 802257c:	ea4a 0707 	orr.w	r7, sl, r7
 8022580:	2d00      	cmp	r5, #0
 8022582:	f000 808b 	beq.w	802269c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022586:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802258a:	3901      	subs	r1, #1
 802258c:	0049      	lsls	r1, r1, #1
 802258e:	3102      	adds	r1, #2
 8022590:	eb00 0c01 	add.w	ip, r0, r1
 8022594:	5a41      	ldrh	r1, [r0, r1]
 8022596:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022598:	28ff      	cmp	r0, #255	; 0xff
 802259a:	d019      	beq.n	80225d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802259c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802259e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 80225a2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80225a6:	fb04 fa01 	mul.w	sl, r4, r1
 80225aa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80225ae:	fb08 f800 	mul.w	r8, r8, r0
 80225b2:	f10a 0020 	add.w	r0, sl, #32
 80225b6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80225ba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80225be:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80225c2:	4441      	add	r1, r8
 80225c4:	0a00      	lsrs	r0, r0, #8
 80225c6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80225ca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225ce:	4301      	orrs	r1, r0
 80225d0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80225d2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80225d6:	2cff      	cmp	r4, #255	; 0xff
 80225d8:	d01a      	beq.n	8022610 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80225da:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 80225de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80225e2:	fb04 fa00 	mul.w	sl, r4, r0
 80225e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80225ea:	fb08 f80c 	mul.w	r8, r8, ip
 80225ee:	f10a 0c20 	add.w	ip, sl, #32
 80225f2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80225f6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80225fa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80225fe:	4440      	add	r0, r8
 8022600:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022604:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8022608:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802260c:	ea40 000c 	orr.w	r0, r0, ip
 8022610:	fb15 fc02 	smulbb	ip, r5, r2
 8022614:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022618:	f1c5 0810 	rsb	r8, r5, #16
 802261c:	eba8 0802 	sub.w	r8, r8, r2
 8022620:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022624:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022628:	437a      	muls	r2, r7
 802262a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802262e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022632:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022636:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802263a:	fb09 2208 	mla	r2, r9, r8, r2
 802263e:	ea4a 0101 	orr.w	r1, sl, r1
 8022642:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8022646:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802264a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802264e:	fb05 2201 	mla	r2, r5, r1, r2
 8022652:	ea4b 0000 	orr.w	r0, fp, r0
 8022656:	fb0c 2200 	mla	r2, ip, r0, r2
 802265a:	0d57      	lsrs	r7, r2, #21
 802265c:	0952      	lsrs	r2, r2, #5
 802265e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022662:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022666:	433a      	orrs	r2, r7
 8022668:	2bff      	cmp	r3, #255	; 0xff
 802266a:	b292      	uxth	r2, r2
 802266c:	d127      	bne.n	80226be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802266e:	f8ae 2000 	strh.w	r2, [lr]
 8022672:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022674:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022676:	4413      	add	r3, r2
 8022678:	931d      	str	r3, [sp, #116]	; 0x74
 802267a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802267c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802267e:	441a      	add	r2, r3
 8022680:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022682:	921e      	str	r2, [sp, #120]	; 0x78
 8022684:	3b01      	subs	r3, #1
 8022686:	f10e 0e02 	add.w	lr, lr, #2
 802268a:	930f      	str	r3, [sp, #60]	; 0x3c
 802268c:	e627      	b.n	80222de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802268e:	fb08 f000 	mul.w	r0, r8, r0
 8022692:	fb09 0303 	mla	r3, r9, r3, r0
 8022696:	e71b      	b.n	80224d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022698:	46b9      	mov	r9, r7
 802269a:	e743      	b.n	8022524 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802269c:	f1c2 0110 	rsb	r1, r2, #16
 80226a0:	437a      	muls	r2, r7
 80226a2:	fb09 2901 	mla	r9, r9, r1, r2
 80226a6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80226aa:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80226ae:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80226b2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80226b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80226ba:	4302      	orrs	r2, r0
 80226bc:	e7d4      	b.n	8022668 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80226be:	f8be 7000 	ldrh.w	r7, [lr]
 80226c2:	4c1c      	ldr	r4, [pc, #112]	; (8022734 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80226c4:	43db      	mvns	r3, r3
 80226c6:	1238      	asrs	r0, r7, #8
 80226c8:	fa5f fc83 	uxtb.w	ip, r3
 80226cc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80226d0:	10fd      	asrs	r5, r7, #3
 80226d2:	fb00 f00c 	mul.w	r0, r0, ip
 80226d6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80226da:	fb05 f10c 	mul.w	r1, r5, ip
 80226de:	1c45      	adds	r5, r0, #1
 80226e0:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80226e4:	1215      	asrs	r5, r2, #8
 80226e6:	f025 0507 	bic.w	r5, r5, #7
 80226ea:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80226ee:	1c4d      	adds	r5, r1, #1
 80226f0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80226f4:	10d1      	asrs	r1, r2, #3
 80226f6:	f021 0103 	bic.w	r1, r1, #3
 80226fa:	00fb      	lsls	r3, r7, #3
 80226fc:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022700:	b2db      	uxtb	r3, r3
 8022702:	b2c0      	uxtb	r0, r0
 8022704:	00c9      	lsls	r1, r1, #3
 8022706:	fb03 f30c 	mul.w	r3, r3, ip
 802270a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802270e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022712:	4308      	orrs	r0, r1
 8022714:	1c59      	adds	r1, r3, #1
 8022716:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802271a:	00d2      	lsls	r2, r2, #3
 802271c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022720:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022724:	4318      	orrs	r0, r3
 8022726:	f8ae 0000 	strh.w	r0, [lr]
 802272a:	e7a2      	b.n	8022672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802272c:	b013      	add	sp, #76	; 0x4c
 802272e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022732:	bf00      	nop
 8022734:	fffff800 	.word	0xfffff800

08022738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8022738:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802273c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 8022740:	fb05 4c03 	mla	ip, r5, r3, r4
 8022744:	2d00      	cmp	r5, #0
 8022746:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802274a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802274e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022752:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022756:	8808      	ldrh	r0, [r1, #0]
 8022758:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802275c:	f2c0 80a7 	blt.w	80228ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022760:	45aa      	cmp	sl, r5
 8022762:	f340 80a4 	ble.w	80228ae <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022766:	2c00      	cmp	r4, #0
 8022768:	f2c0 809f 	blt.w	80228aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802276c:	42a3      	cmp	r3, r4
 802276e:	f340 809c 	ble.w	80228aa <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022772:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022776:	1c62      	adds	r2, r4, #1
 8022778:	f100 809c 	bmi.w	80228b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802277c:	4293      	cmp	r3, r2
 802277e:	f340 8099 	ble.w	80228b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022782:	f1b9 0f00 	cmp.w	r9, #0
 8022786:	f000 8095 	beq.w	80228b4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802278a:	f8be c002 	ldrh.w	ip, [lr, #2]
 802278e:	3501      	adds	r5, #1
 8022790:	f100 8094 	bmi.w	80228bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022794:	45aa      	cmp	sl, r5
 8022796:	f340 8091 	ble.w	80228bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802279a:	2f00      	cmp	r7, #0
 802279c:	f000 808e 	beq.w	80228bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227a0:	2c00      	cmp	r4, #0
 80227a2:	f2c0 8089 	blt.w	80228b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227a6:	42a3      	cmp	r3, r4
 80227a8:	f340 8086 	ble.w	80228b8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227ac:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80227b0:	3401      	adds	r4, #1
 80227b2:	f100 8086 	bmi.w	80228c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227b6:	42a3      	cmp	r3, r4
 80227b8:	f340 8083 	ble.w	80228c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227bc:	f1b9 0f00 	cmp.w	r9, #0
 80227c0:	d07f      	beq.n	80228c2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227c2:	3301      	adds	r3, #1
 80227c4:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80227c8:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80227cc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80227d0:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80227d4:	fb19 fe07 	smulbb	lr, r9, r7
 80227d8:	ea44 0808 	orr.w	r8, r4, r8
 80227dc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80227e0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80227e4:	f1c7 0210 	rsb	r2, r7, #16
 80227e8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80227ec:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80227f0:	ea44 0c0c 	orr.w	ip, r4, ip
 80227f4:	eba2 0209 	sub.w	r2, r2, r9
 80227f8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80227fc:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022800:	fb04 f40c 	mul.w	r4, r4, ip
 8022804:	fb02 4808 	mla	r8, r2, r8, r4
 8022808:	041a      	lsls	r2, r3, #16
 802280a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802280e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022812:	4313      	orrs	r3, r2
 8022814:	042a      	lsls	r2, r5, #16
 8022816:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802281a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802281e:	fb0e 8303 	mla	r3, lr, r3, r8
 8022822:	432a      	orrs	r2, r5
 8022824:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022828:	fb07 3202 	mla	r2, r7, r2, r3
 802282c:	0d53      	lsrs	r3, r2, #21
 802282e:	0952      	lsrs	r2, r2, #5
 8022830:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022834:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022838:	431a      	orrs	r2, r3
 802283a:	b293      	uxth	r3, r2
 802283c:	b2b4      	uxth	r4, r6
 802283e:	1202      	asrs	r2, r0, #8
 8022840:	43f6      	mvns	r6, r6
 8022842:	b2f6      	uxtb	r6, r6
 8022844:	121d      	asrs	r5, r3, #8
 8022846:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802284a:	fb12 f206 	smulbb	r2, r2, r6
 802284e:	10c7      	asrs	r7, r0, #3
 8022850:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022854:	00c0      	lsls	r0, r0, #3
 8022856:	fb05 2504 	mla	r5, r5, r4, r2
 802285a:	b2c0      	uxtb	r0, r0
 802285c:	10da      	asrs	r2, r3, #3
 802285e:	00db      	lsls	r3, r3, #3
 8022860:	b2db      	uxtb	r3, r3
 8022862:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022866:	fb10 f006 	smulbb	r0, r0, r6
 802286a:	b2ad      	uxth	r5, r5
 802286c:	fb03 0004 	mla	r0, r3, r4, r0
 8022870:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022874:	fb17 f706 	smulbb	r7, r7, r6
 8022878:	b280      	uxth	r0, r0
 802287a:	1c6b      	adds	r3, r5, #1
 802287c:	fb02 7204 	mla	r2, r2, r4, r7
 8022880:	b292      	uxth	r2, r2
 8022882:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022886:	1c43      	adds	r3, r0, #1
 8022888:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802288c:	1c50      	adds	r0, r2, #1
 802288e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022892:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022896:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802289a:	0952      	lsrs	r2, r2, #5
 802289c:	432b      	orrs	r3, r5
 802289e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80228a2:	4313      	orrs	r3, r2
 80228a4:	800b      	strh	r3, [r1, #0]
 80228a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80228aa:	4680      	mov	r8, r0
 80228ac:	e763      	b.n	8022776 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80228ae:	4684      	mov	ip, r0
 80228b0:	4680      	mov	r8, r0
 80228b2:	e76c      	b.n	802278e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80228b4:	4684      	mov	ip, r0
 80228b6:	e76a      	b.n	802278e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80228b8:	4605      	mov	r5, r0
 80228ba:	e779      	b.n	80227b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80228bc:	4603      	mov	r3, r0
 80228be:	4605      	mov	r5, r0
 80228c0:	e782      	b.n	80227c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80228c2:	4603      	mov	r3, r0
 80228c4:	e780      	b.n	80227c8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080228c6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228ca:	b093      	sub	sp, #76	; 0x4c
 80228cc:	461d      	mov	r5, r3
 80228ce:	9210      	str	r2, [sp, #64]	; 0x40
 80228d0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80228d2:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 80228d6:	920b      	str	r2, [sp, #44]	; 0x2c
 80228d8:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 80228dc:	910a      	str	r1, [sp, #40]	; 0x28
 80228de:	6859      	ldr	r1, [r3, #4]
 80228e0:	681b      	ldr	r3, [r3, #0]
 80228e2:	9011      	str	r0, [sp, #68]	; 0x44
 80228e4:	fb01 2707 	mla	r7, r1, r7, r2
 80228e8:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80228ec:	9307      	str	r3, [sp, #28]
 80228ee:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80228f0:	681b      	ldr	r3, [r3, #0]
 80228f2:	9309      	str	r3, [sp, #36]	; 0x24
 80228f4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80228f6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80228fa:	43db      	mvns	r3, r3
 80228fc:	b2db      	uxtb	r3, r3
 80228fe:	9308      	str	r3, [sp, #32]
 8022900:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022902:	2b00      	cmp	r3, #0
 8022904:	dc03      	bgt.n	802290e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022908:	2b00      	cmp	r3, #0
 802290a:	f340 8203 	ble.w	8022d14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802290e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022910:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022914:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022918:	1e48      	subs	r0, r1, #1
 802291a:	f102 3cff 	add.w	ip, r2, #4294967295
 802291e:	2d00      	cmp	r5, #0
 8022920:	f340 80da 	ble.w	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022924:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022928:	ea4f 4326 	mov.w	r3, r6, asr #16
 802292c:	d406      	bmi.n	802293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802292e:	4586      	cmp	lr, r0
 8022930:	da04      	bge.n	802293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022932:	2b00      	cmp	r3, #0
 8022934:	db02      	blt.n	802293c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022936:	4563      	cmp	r3, ip
 8022938:	f2c0 80cf 	blt.w	8022ada <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802293c:	f11e 0e01 	adds.w	lr, lr, #1
 8022940:	f100 80c1 	bmi.w	8022ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022944:	4571      	cmp	r1, lr
 8022946:	f2c0 80be 	blt.w	8022ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802294a:	3301      	adds	r3, #1
 802294c:	f100 80bb 	bmi.w	8022ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022950:	429a      	cmp	r2, r3
 8022952:	f2c0 80b8 	blt.w	8022ac6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022956:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802295a:	46a9      	mov	r9, r5
 802295c:	f1b9 0f00 	cmp.w	r9, #0
 8022960:	f340 80d8 	ble.w	8022b14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022966:	1421      	asrs	r1, r4, #16
 8022968:	ea4f 4026 	mov.w	r0, r6, asr #16
 802296c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022970:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022974:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022978:	f100 8111 	bmi.w	8022b9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802297c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022980:	4551      	cmp	r1, sl
 8022982:	f280 810c 	bge.w	8022b9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022986:	2800      	cmp	r0, #0
 8022988:	f2c0 8109 	blt.w	8022b9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802298c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022990:	4550      	cmp	r0, sl
 8022992:	f280 8104 	bge.w	8022b9e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022996:	fa0f f38e 	sxth.w	r3, lr
 802299a:	fb00 1103 	mla	r1, r0, r3, r1
 802299e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80229a0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80229a4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80229a8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80229ac:	f1bc 0f00 	cmp.w	ip, #0
 80229b0:	d007      	beq.n	80229c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80229b2:	005b      	lsls	r3, r3, #1
 80229b4:	eb0a 0003 	add.w	r0, sl, r3
 80229b8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80229bc:	930c      	str	r3, [sp, #48]	; 0x30
 80229be:	8843      	ldrh	r3, [r0, #2]
 80229c0:	930d      	str	r3, [sp, #52]	; 0x34
 80229c2:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80229c6:	fb12 f30c 	smulbb	r3, r2, ip
 80229ca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80229ce:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80229d2:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80229d6:	10db      	asrs	r3, r3, #3
 80229d8:	ea40 000e 	orr.w	r0, r0, lr
 80229dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80229e0:	f1cc 0e10 	rsb	lr, ip, #16
 80229e4:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80229e8:	ebae 0e02 	sub.w	lr, lr, r2
 80229ec:	ea4a 0101 	orr.w	r1, sl, r1
 80229f0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80229f4:	4351      	muls	r1, r2
 80229f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80229f8:	9f08      	ldr	r7, [sp, #32]
 80229fa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80229fe:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022a02:	0410      	lsls	r0, r2, #16
 8022a04:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022a08:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022a0c:	4310      	orrs	r0, r2
 8022a0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022a10:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022a12:	0412      	lsls	r2, r2, #16
 8022a14:	fb03 e000 	mla	r0, r3, r0, lr
 8022a18:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022a1c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022a20:	ea42 020e 	orr.w	r2, r2, lr
 8022a24:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a28:	fb03 0302 	mla	r3, r3, r2, r0
 8022a2c:	0d5a      	lsrs	r2, r3, #21
 8022a2e:	095b      	lsrs	r3, r3, #5
 8022a30:	f8b8 0000 	ldrh.w	r0, [r8]
 8022a34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022a38:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022a3c:	4313      	orrs	r3, r2
 8022a3e:	b29b      	uxth	r3, r3
 8022a40:	1201      	asrs	r1, r0, #8
 8022a42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022a46:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022a4a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022a4e:	fb11 f107 	smulbb	r1, r1, r7
 8022a52:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022a56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022a5a:	00c0      	lsls	r0, r0, #3
 8022a5c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022a60:	b2c0      	uxtb	r0, r0
 8022a62:	10d9      	asrs	r1, r3, #3
 8022a64:	00db      	lsls	r3, r3, #3
 8022a66:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022a6a:	b2db      	uxtb	r3, r3
 8022a6c:	fb10 f007 	smulbb	r0, r0, r7
 8022a70:	fa1f fc8c 	uxth.w	ip, ip
 8022a74:	fb03 0302 	mla	r3, r3, r2, r0
 8022a78:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022a7c:	fb1e fe07 	smulbb	lr, lr, r7
 8022a80:	fb01 e102 	mla	r1, r1, r2, lr
 8022a84:	b29a      	uxth	r2, r3
 8022a86:	f10c 0301 	add.w	r3, ip, #1
 8022a8a:	b289      	uxth	r1, r1
 8022a8c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022a90:	1c53      	adds	r3, r2, #1
 8022a92:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022a96:	1c4a      	adds	r2, r1, #1
 8022a98:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022a9c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022aa0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022aa4:	0949      	lsrs	r1, r1, #5
 8022aa6:	ea43 030c 	orr.w	r3, r3, ip
 8022aaa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022aae:	430b      	orrs	r3, r1
 8022ab0:	f8a8 3000 	strh.w	r3, [r8]
 8022ab4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ab6:	441c      	add	r4, r3
 8022ab8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022aba:	f108 0802 	add.w	r8, r8, #2
 8022abe:	441e      	add	r6, r3
 8022ac0:	f109 39ff 	add.w	r9, r9, #4294967295
 8022ac4:	e74a      	b.n	802295c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022ac6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022ac8:	441c      	add	r4, r3
 8022aca:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022acc:	441e      	add	r6, r3
 8022ace:	9b07      	ldr	r3, [sp, #28]
 8022ad0:	3302      	adds	r3, #2
 8022ad2:	3d01      	subs	r5, #1
 8022ad4:	9307      	str	r3, [sp, #28]
 8022ad6:	e722      	b.n	802291e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022ad8:	d022      	beq.n	8022b20 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022ada:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022adc:	1e6b      	subs	r3, r5, #1
 8022ade:	fb00 4003 	mla	r0, r0, r3, r4
 8022ae2:	1400      	asrs	r0, r0, #16
 8022ae4:	f53f af37 	bmi.w	8022956 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022ae8:	3901      	subs	r1, #1
 8022aea:	4288      	cmp	r0, r1
 8022aec:	f6bf af33 	bge.w	8022956 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022af0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022af2:	fb01 6303 	mla	r3, r1, r3, r6
 8022af6:	141b      	asrs	r3, r3, #16
 8022af8:	f53f af2d 	bmi.w	8022956 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022afc:	3a01      	subs	r2, #1
 8022afe:	4293      	cmp	r3, r2
 8022b00:	f6bf af29 	bge.w	8022956 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b04:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022b08:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022b0c:	46a8      	mov	r8, r5
 8022b0e:	f1b8 0f00 	cmp.w	r8, #0
 8022b12:	dc5e      	bgt.n	8022bd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022b14:	9b07      	ldr	r3, [sp, #28]
 8022b16:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022b1a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022b1e:	9307      	str	r3, [sp, #28]
 8022b20:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b22:	2b00      	cmp	r3, #0
 8022b24:	f340 80f6 	ble.w	8022d14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022b28:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b2c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022b30:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b36:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b3a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b3e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b42:	eef0 6a62 	vmov.f32	s13, s5
 8022b46:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b4e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b52:	ee16 4a90 	vmov	r4, s13
 8022b56:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b5a:	eef0 6a43 	vmov.f32	s13, s6
 8022b5e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b62:	ee12 2a90 	vmov	r2, s5
 8022b66:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b6a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b6e:	ee13 2a10 	vmov	r2, s6
 8022b72:	931f      	str	r3, [sp, #124]	; 0x7c
 8022b74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b76:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b7a:	9320      	str	r3, [sp, #128]	; 0x80
 8022b7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022b7e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022b80:	3b01      	subs	r3, #1
 8022b82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b86:	930a      	str	r3, [sp, #40]	; 0x28
 8022b88:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022b8a:	ee16 6a90 	vmov	r6, s13
 8022b8e:	bf14      	ite	ne
 8022b90:	461d      	movne	r5, r3
 8022b92:	4615      	moveq	r5, r2
 8022b94:	eeb0 3a67 	vmov.f32	s6, s15
 8022b98:	eef0 2a47 	vmov.f32	s5, s14
 8022b9c:	e6b0      	b.n	8022900 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022b9e:	f111 0a01 	adds.w	sl, r1, #1
 8022ba2:	d487      	bmi.n	8022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022ba4:	45d6      	cmp	lr, sl
 8022ba6:	db85      	blt.n	8022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022ba8:	f110 0a01 	adds.w	sl, r0, #1
 8022bac:	d482      	bmi.n	8022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bae:	4553      	cmp	r3, sl
 8022bb0:	db80      	blt.n	8022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bb2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022bb4:	9101      	str	r1, [sp, #4]
 8022bb6:	b21b      	sxth	r3, r3
 8022bb8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022bbc:	9300      	str	r3, [sp, #0]
 8022bbe:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022bc2:	fa0f f38e 	sxth.w	r3, lr
 8022bc6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022bc8:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022bca:	4641      	mov	r1, r8
 8022bcc:	f7ff fdb4 	bl	8022738 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022bd0:	e770      	b.n	8022ab4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bd2:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bd4:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022bd6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bda:	1430      	asrs	r0, r6, #16
 8022bdc:	1423      	asrs	r3, r4, #16
 8022bde:	fb01 3000 	mla	r0, r1, r0, r3
 8022be2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022be4:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022be8:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022bec:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022bf0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022bf4:	8858      	ldrh	r0, [r3, #2]
 8022bf6:	f1be 0f00 	cmp.w	lr, #0
 8022bfa:	d00b      	beq.n	8022c14 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022bfc:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022c00:	3901      	subs	r1, #1
 8022c02:	0049      	lsls	r1, r1, #1
 8022c04:	3102      	adds	r1, #2
 8022c06:	eb03 0b01 	add.w	fp, r3, r1
 8022c0a:	5a5b      	ldrh	r3, [r3, r1]
 8022c0c:	930e      	str	r3, [sp, #56]	; 0x38
 8022c0e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022c12:	930f      	str	r3, [sp, #60]	; 0x3c
 8022c14:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022c18:	fb12 f30e 	smulbb	r3, r2, lr
 8022c1c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022c20:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c24:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022c28:	10db      	asrs	r3, r3, #3
 8022c2a:	ea41 010c 	orr.w	r1, r1, ip
 8022c2e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022c32:	f1ce 0c10 	rsb	ip, lr, #16
 8022c36:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c3a:	ebac 0c02 	sub.w	ip, ip, r2
 8022c3e:	ea4b 0000 	orr.w	r0, fp, r0
 8022c42:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c46:	4350      	muls	r0, r2
 8022c48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022c4a:	9f08      	ldr	r7, [sp, #32]
 8022c4c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022c50:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022c54:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022c58:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022c5c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022c5e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022c60:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022c64:	0412      	lsls	r2, r2, #16
 8022c66:	ea4b 0101 	orr.w	r1, fp, r1
 8022c6a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022c6e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022c72:	fb03 c101 	mla	r1, r3, r1, ip
 8022c76:	4302      	orrs	r2, r0
 8022c78:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022c7c:	fb03 1202 	mla	r2, r3, r2, r1
 8022c80:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022c84:	0952      	lsrs	r2, r2, #5
 8022c86:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022c8a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022c8e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022c92:	ea4b 0303 	orr.w	r3, fp, r3
 8022c96:	b29b      	uxth	r3, r3
 8022c98:	1211      	asrs	r1, r2, #8
 8022c9a:	1218      	asrs	r0, r3, #8
 8022c9c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022ca0:	fb11 f107 	smulbb	r1, r1, r7
 8022ca4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022ca8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022cac:	00d2      	lsls	r2, r2, #3
 8022cae:	fb00 100a 	mla	r0, r0, sl, r1
 8022cb2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022cb6:	10d9      	asrs	r1, r3, #3
 8022cb8:	b2d2      	uxtb	r2, r2
 8022cba:	00db      	lsls	r3, r3, #3
 8022cbc:	fb1c fc07 	smulbb	ip, ip, r7
 8022cc0:	fb12 f207 	smulbb	r2, r2, r7
 8022cc4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022cc8:	b2db      	uxtb	r3, r3
 8022cca:	b280      	uxth	r0, r0
 8022ccc:	fb01 c10a 	mla	r1, r1, sl, ip
 8022cd0:	fb03 230a 	mla	r3, r3, sl, r2
 8022cd4:	b29b      	uxth	r3, r3
 8022cd6:	b289      	uxth	r1, r1
 8022cd8:	1c42      	adds	r2, r0, #1
 8022cda:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022cde:	f101 0c01 	add.w	ip, r1, #1
 8022ce2:	1c5a      	adds	r2, r3, #1
 8022ce4:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022ce8:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022cec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022cee:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022cf2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022cf6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022cfa:	4310      	orrs	r0, r2
 8022cfc:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022d00:	441c      	add	r4, r3
 8022d02:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d04:	ea40 000c 	orr.w	r0, r0, ip
 8022d08:	f829 0b02 	strh.w	r0, [r9], #2
 8022d0c:	441e      	add	r6, r3
 8022d0e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022d12:	e6fc      	b.n	8022b0e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022d14:	b013      	add	sp, #76	; 0x4c
 8022d16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022d1a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022d1e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022d22:	fb0e 4703 	mla	r7, lr, r3, r4
 8022d26:	f1be 0f00 	cmp.w	lr, #0
 8022d2a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022d2e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022d32:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022d36:	8808      	ldrh	r0, [r1, #0]
 8022d38:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022d3c:	db60      	blt.n	8022e00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d3e:	45f1      	cmp	r9, lr
 8022d40:	dd5e      	ble.n	8022e00 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d42:	2c00      	cmp	r4, #0
 8022d44:	db5a      	blt.n	8022dfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d46:	42a3      	cmp	r3, r4
 8022d48:	dd58      	ble.n	8022dfc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d4a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022d4e:	1c62      	adds	r2, r4, #1
 8022d50:	d459      	bmi.n	8022e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d52:	4293      	cmp	r3, r2
 8022d54:	dd57      	ble.n	8022e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d56:	2d00      	cmp	r5, #0
 8022d58:	d055      	beq.n	8022e06 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d5a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022d5e:	f11e 0e01 	adds.w	lr, lr, #1
 8022d62:	d454      	bmi.n	8022e0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d64:	45f1      	cmp	r9, lr
 8022d66:	dd52      	ble.n	8022e0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d68:	2e00      	cmp	r6, #0
 8022d6a:	d050      	beq.n	8022e0e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d6c:	2c00      	cmp	r4, #0
 8022d6e:	db4c      	blt.n	8022e0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d70:	42a3      	cmp	r3, r4
 8022d72:	dd4a      	ble.n	8022e0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d74:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022d78:	3401      	adds	r4, #1
 8022d7a:	d405      	bmi.n	8022d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d7c:	42a3      	cmp	r3, r4
 8022d7e:	dd03      	ble.n	8022d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d80:	b115      	cbz	r5, 8022d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022d82:	3301      	adds	r3, #1
 8022d84:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022d88:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022d8c:	fb15 f406 	smulbb	r4, r5, r6
 8022d90:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022d94:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022d98:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022d9c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022da0:	ea43 0c0c 	orr.w	ip, r3, ip
 8022da4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8022da8:	f1c6 0310 	rsb	r3, r6, #16
 8022dac:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022db0:	1b5b      	subs	r3, r3, r5
 8022db2:	ea4e 0707 	orr.w	r7, lr, r7
 8022db6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022dba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022dbe:	437d      	muls	r5, r7
 8022dc0:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022dc4:	0403      	lsls	r3, r0, #16
 8022dc6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022dca:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022dce:	4318      	orrs	r0, r3
 8022dd0:	0413      	lsls	r3, r2, #16
 8022dd2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8022dd6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022dda:	4313      	orrs	r3, r2
 8022ddc:	fb04 c000 	mla	r0, r4, r0, ip
 8022de0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022de4:	fb06 0003 	mla	r0, r6, r3, r0
 8022de8:	0d43      	lsrs	r3, r0, #21
 8022dea:	0940      	lsrs	r0, r0, #5
 8022dec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022df0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022df4:	4318      	orrs	r0, r3
 8022df6:	8008      	strh	r0, [r1, #0]
 8022df8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022dfc:	4684      	mov	ip, r0
 8022dfe:	e7a6      	b.n	8022d4e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022e00:	4607      	mov	r7, r0
 8022e02:	4684      	mov	ip, r0
 8022e04:	e7ab      	b.n	8022d5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e06:	4607      	mov	r7, r0
 8022e08:	e7a9      	b.n	8022d5e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e0a:	4602      	mov	r2, r0
 8022e0c:	e7b4      	b.n	8022d78 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022e0e:	4602      	mov	r2, r0
 8022e10:	e7ba      	b.n	8022d88 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022e12 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e16:	b08f      	sub	sp, #60	; 0x3c
 8022e18:	461d      	mov	r5, r3
 8022e1a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022e1c:	920c      	str	r2, [sp, #48]	; 0x30
 8022e1e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 8022e22:	9107      	str	r1, [sp, #28]
 8022e24:	6859      	ldr	r1, [r3, #4]
 8022e26:	681b      	ldr	r3, [r3, #0]
 8022e28:	900d      	str	r0, [sp, #52]	; 0x34
 8022e2a:	fb01 2707 	mla	r7, r1, r7, r2
 8022e2e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022e32:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e34:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 8022e38:	f8d3 8000 	ldr.w	r8, [r3]
 8022e3c:	9b07      	ldr	r3, [sp, #28]
 8022e3e:	2b00      	cmp	r3, #0
 8022e40:	dc03      	bgt.n	8022e4a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022e42:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8022e44:	2b00      	cmp	r3, #0
 8022e46:	f340 8181 	ble.w	802314c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022e4a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e4c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e50:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022e54:	1e48      	subs	r0, r1, #1
 8022e56:	f102 3cff 	add.w	ip, r2, #4294967295
 8022e5a:	2d00      	cmp	r5, #0
 8022e5c:	f340 809b 	ble.w	8022f96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022e60:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022e64:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022e68:	d406      	bmi.n	8022e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e6a:	4586      	cmp	lr, r0
 8022e6c:	da04      	bge.n	8022e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e6e:	2b00      	cmp	r3, #0
 8022e70:	db02      	blt.n	8022e78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e72:	4563      	cmp	r3, ip
 8022e74:	f2c0 8090 	blt.w	8022f98 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022e78:	f11e 0e01 	adds.w	lr, lr, #1
 8022e7c:	f100 8084 	bmi.w	8022f88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e80:	4571      	cmp	r1, lr
 8022e82:	f2c0 8081 	blt.w	8022f88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e86:	3301      	adds	r3, #1
 8022e88:	d47e      	bmi.n	8022f88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e8a:	429a      	cmp	r2, r3
 8022e8c:	db7c      	blt.n	8022f88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022e8e:	46aa      	mov	sl, r5
 8022e90:	46b9      	mov	r9, r7
 8022e92:	f1ba 0f00 	cmp.w	sl, #0
 8022e96:	f340 8099 	ble.w	8022fcc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022e9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022e9c:	1421      	asrs	r1, r4, #16
 8022e9e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022ea2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022ea6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022eaa:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022eae:	f100 80d0 	bmi.w	8023052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022eb2:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022eb6:	4559      	cmp	r1, fp
 8022eb8:	f280 80cb 	bge.w	8023052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ebc:	2800      	cmp	r0, #0
 8022ebe:	f2c0 80c8 	blt.w	8023052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ec2:	f103 3bff 	add.w	fp, r3, #4294967295
 8022ec6:	4558      	cmp	r0, fp
 8022ec8:	f280 80c3 	bge.w	8023052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ecc:	fa0f fe8e 	sxth.w	lr, lr
 8022ed0:	fb00 110e 	mla	r1, r0, lr, r1
 8022ed4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022ed8:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022edc:	8841      	ldrh	r1, [r0, #2]
 8022ede:	f1bc 0f00 	cmp.w	ip, #0
 8022ee2:	d00b      	beq.n	8022efc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022ee4:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8022ee8:	3b01      	subs	r3, #1
 8022eea:	005b      	lsls	r3, r3, #1
 8022eec:	3302      	adds	r3, #2
 8022eee:	eb00 0e03 	add.w	lr, r0, r3
 8022ef2:	5ac3      	ldrh	r3, [r0, r3]
 8022ef4:	9308      	str	r3, [sp, #32]
 8022ef6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022efa:	9309      	str	r3, [sp, #36]	; 0x24
 8022efc:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022f00:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f04:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022f08:	ea40 000b 	orr.w	r0, r0, fp
 8022f0c:	fb12 f30c 	smulbb	r3, r2, ip
 8022f10:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f14:	10db      	asrs	r3, r3, #3
 8022f16:	f1cc 0e10 	rsb	lr, ip, #16
 8022f1a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f1e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022f22:	ebae 0e02 	sub.w	lr, lr, r2
 8022f26:	ea4b 0101 	orr.w	r1, fp, r1
 8022f2a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f2e:	4351      	muls	r1, r2
 8022f30:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022f32:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022f36:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022f3a:	0410      	lsls	r0, r2, #16
 8022f3c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022f40:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022f44:	4310      	orrs	r0, r2
 8022f46:	9a08      	ldr	r2, [sp, #32]
 8022f48:	9908      	ldr	r1, [sp, #32]
 8022f4a:	0412      	lsls	r2, r2, #16
 8022f4c:	fb03 e000 	mla	r0, r3, r0, lr
 8022f50:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f54:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022f58:	ea42 020e 	orr.w	r2, r2, lr
 8022f5c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022f60:	fb03 0302 	mla	r3, r3, r2, r0
 8022f64:	0d5a      	lsrs	r2, r3, #21
 8022f66:	095b      	lsrs	r3, r3, #5
 8022f68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022f6c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022f70:	4313      	orrs	r3, r2
 8022f72:	f8a9 3000 	strh.w	r3, [r9]
 8022f76:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022f78:	441c      	add	r4, r3
 8022f7a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f7c:	f109 0902 	add.w	r9, r9, #2
 8022f80:	441e      	add	r6, r3
 8022f82:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022f86:	e784      	b.n	8022e92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022f88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8022f8a:	441c      	add	r4, r3
 8022f8c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022f8e:	3d01      	subs	r5, #1
 8022f90:	441e      	add	r6, r3
 8022f92:	3702      	adds	r7, #2
 8022f94:	e761      	b.n	8022e5a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022f96:	d01d      	beq.n	8022fd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022f98:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8022f9a:	1e6b      	subs	r3, r5, #1
 8022f9c:	fb00 4003 	mla	r0, r0, r3, r4
 8022fa0:	1400      	asrs	r0, r0, #16
 8022fa2:	f53f af74 	bmi.w	8022e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fa6:	3901      	subs	r1, #1
 8022fa8:	4288      	cmp	r0, r1
 8022faa:	f6bf af70 	bge.w	8022e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fae:	991c      	ldr	r1, [sp, #112]	; 0x70
 8022fb0:	fb01 6303 	mla	r3, r1, r3, r6
 8022fb4:	141b      	asrs	r3, r3, #16
 8022fb6:	f53f af6a 	bmi.w	8022e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fba:	3a01      	subs	r2, #1
 8022fbc:	4293      	cmp	r3, r2
 8022fbe:	f6bf af66 	bge.w	8022e8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fc2:	46a9      	mov	r9, r5
 8022fc4:	46ba      	mov	sl, r7
 8022fc6:	f1b9 0f00 	cmp.w	r9, #0
 8022fca:	dc5a      	bgt.n	8023082 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022fcc:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022fd0:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022fd4:	9b07      	ldr	r3, [sp, #28]
 8022fd6:	2b00      	cmp	r3, #0
 8022fd8:	f340 80b8 	ble.w	802314c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022fdc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022fe0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022fe4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022fe8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8022fea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022fee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022ff2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022ff6:	eef0 6a62 	vmov.f32	s13, s5
 8022ffa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022ffe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023002:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023006:	ee16 4a90 	vmov	r4, s13
 802300a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802300e:	eef0 6a43 	vmov.f32	s13, s6
 8023012:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023016:	ee12 2a90 	vmov	r2, s5
 802301a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802301e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023022:	ee13 2a10 	vmov	r2, s6
 8023026:	931b      	str	r3, [sp, #108]	; 0x6c
 8023028:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802302a:	fb92 f3f3 	sdiv	r3, r2, r3
 802302e:	931c      	str	r3, [sp, #112]	; 0x70
 8023030:	9b07      	ldr	r3, [sp, #28]
 8023032:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8023034:	3b01      	subs	r3, #1
 8023036:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802303a:	9307      	str	r3, [sp, #28]
 802303c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802303e:	ee16 6a90 	vmov	r6, s13
 8023042:	bf14      	ite	ne
 8023044:	461d      	movne	r5, r3
 8023046:	4615      	moveq	r5, r2
 8023048:	eeb0 3a67 	vmov.f32	s6, s15
 802304c:	eef0 2a47 	vmov.f32	s5, s14
 8023050:	e6f4      	b.n	8022e3c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023052:	f111 0b01 	adds.w	fp, r1, #1
 8023056:	d48e      	bmi.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023058:	45de      	cmp	lr, fp
 802305a:	db8c      	blt.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802305c:	f110 0b01 	adds.w	fp, r0, #1
 8023060:	d489      	bmi.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023062:	455b      	cmp	r3, fp
 8023064:	db87      	blt.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023066:	b21b      	sxth	r3, r3
 8023068:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802306c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023070:	9300      	str	r3, [sp, #0]
 8023072:	4642      	mov	r2, r8
 8023074:	fa0f f38e 	sxth.w	r3, lr
 8023078:	4649      	mov	r1, r9
 802307a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802307c:	f7ff fe4d 	bl	8022d1a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023080:	e779      	b.n	8022f76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023082:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023084:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023088:	1420      	asrs	r0, r4, #16
 802308a:	1431      	asrs	r1, r6, #16
 802308c:	fb03 0101 	mla	r1, r3, r1, r0
 8023090:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023094:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023098:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802309c:	8841      	ldrh	r1, [r0, #2]
 802309e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80230a2:	f1be 0f00 	cmp.w	lr, #0
 80230a6:	d00b      	beq.n	80230c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80230a8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 80230ac:	3b01      	subs	r3, #1
 80230ae:	005b      	lsls	r3, r3, #1
 80230b0:	3302      	adds	r3, #2
 80230b2:	eb00 0b03 	add.w	fp, r0, r3
 80230b6:	5ac3      	ldrh	r3, [r0, r3]
 80230b8:	930a      	str	r3, [sp, #40]	; 0x28
 80230ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80230be:	930b      	str	r3, [sp, #44]	; 0x2c
 80230c0:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80230c4:	fb12 f30e 	smulbb	r3, r2, lr
 80230c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80230cc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80230d0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80230d4:	10db      	asrs	r3, r3, #3
 80230d6:	ea40 000c 	orr.w	r0, r0, ip
 80230da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80230de:	f1ce 0c10 	rsb	ip, lr, #16
 80230e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80230e6:	ebac 0c02 	sub.w	ip, ip, r2
 80230ea:	ea4b 0101 	orr.w	r1, fp, r1
 80230ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80230f2:	4351      	muls	r1, r2
 80230f4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80230f6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80230fa:	fb0c 1c00 	mla	ip, ip, r0, r1
 80230fe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023102:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8023106:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023108:	990a      	ldr	r1, [sp, #40]	; 0x28
 802310a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802310e:	0412      	lsls	r2, r2, #16
 8023110:	ea4b 0000 	orr.w	r0, fp, r0
 8023114:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023118:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802311c:	fb03 c000 	mla	r0, r3, r0, ip
 8023120:	ea42 0b0b 	orr.w	fp, r2, fp
 8023124:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8023128:	fb03 000b 	mla	r0, r3, fp, r0
 802312c:	0d43      	lsrs	r3, r0, #21
 802312e:	0940      	lsrs	r0, r0, #5
 8023130:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023134:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8023138:	4318      	orrs	r0, r3
 802313a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802313c:	f82a 0b02 	strh.w	r0, [sl], #2
 8023140:	441c      	add	r4, r3
 8023142:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8023144:	f109 39ff 	add.w	r9, r9, #4294967295
 8023148:	441e      	add	r6, r3
 802314a:	e73c      	b.n	8022fc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802314c:	b00f      	add	sp, #60	; 0x3c
 802314e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023152 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023152:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023156:	b085      	sub	sp, #20
 8023158:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802315c:	9102      	str	r1, [sp, #8]
 802315e:	2c00      	cmp	r4, #0
 8023160:	fb04 7103 	mla	r1, r4, r3, r7
 8023164:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023168:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802316c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023170:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023174:	f2c0 811b 	blt.w	80233ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023178:	45a6      	cmp	lr, r4
 802317a:	f340 8118 	ble.w	80233ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802317e:	2f00      	cmp	r7, #0
 8023180:	f2c0 8113 	blt.w	80233aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023184:	42bb      	cmp	r3, r7
 8023186:	f340 8110 	ble.w	80233aa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802318a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802318e:	1c7a      	adds	r2, r7, #1
 8023190:	f100 8110 	bmi.w	80233b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023194:	4293      	cmp	r3, r2
 8023196:	f340 810d 	ble.w	80233b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802319a:	2e00      	cmp	r6, #0
 802319c:	f000 810c 	beq.w	80233b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80231a0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80231a4:	3401      	adds	r4, #1
 80231a6:	f100 810b 	bmi.w	80233c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231aa:	45a6      	cmp	lr, r4
 80231ac:	f340 8108 	ble.w	80233c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231b0:	2800      	cmp	r0, #0
 80231b2:	f000 8108 	beq.w	80233c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80231b6:	2f00      	cmp	r7, #0
 80231b8:	f2c0 8100 	blt.w	80233bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80231bc:	42bb      	cmp	r3, r7
 80231be:	f340 80fd 	ble.w	80233bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80231c2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80231c6:	3701      	adds	r7, #1
 80231c8:	f100 8100 	bmi.w	80233cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80231cc:	42bb      	cmp	r3, r7
 80231ce:	f340 80fd 	ble.w	80233cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80231d2:	2e00      	cmp	r6, #0
 80231d4:	f000 80fc 	beq.w	80233d0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80231d8:	3301      	adds	r3, #1
 80231da:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 80231de:	b2b6      	uxth	r6, r6
 80231e0:	b280      	uxth	r0, r0
 80231e2:	fb00 fe06 	mul.w	lr, r0, r6
 80231e6:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80231ea:	0136      	lsls	r6, r6, #4
 80231ec:	eba6 070e 	sub.w	r7, r6, lr
 80231f0:	b280      	uxth	r0, r0
 80231f2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80231f6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80231fa:	b2bf      	uxth	r7, r7
 80231fc:	1a1b      	subs	r3, r3, r0
 80231fe:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023202:	b29b      	uxth	r3, r3
 8023204:	fb0a f607 	mul.w	r6, sl, r7
 8023208:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802320c:	fb0b 6603 	mla	r6, fp, r3, r6
 8023210:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023214:	fb00 6609 	mla	r6, r0, r9, r6
 8023218:	fb0e 6608 	mla	r6, lr, r8, r6
 802321c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023220:	9600      	str	r6, [sp, #0]
 8023222:	2e00      	cmp	r6, #0
 8023224:	f000 80be 	beq.w	80233a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8023228:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802322c:	fb0b fc0c 	mul.w	ip, fp, ip
 8023230:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023234:	fb0b f505 	mul.w	r5, fp, r5
 8023238:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802323c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023240:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023244:	44dc      	add	ip, fp
 8023246:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802324a:	9501      	str	r5, [sp, #4]
 802324c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023250:	9503      	str	r5, [sp, #12]
 8023252:	9d01      	ldr	r5, [sp, #4]
 8023254:	9e02      	ldr	r6, [sp, #8]
 8023256:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802325a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802325e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023262:	fb0a fc0c 	mul.w	ip, sl, ip
 8023266:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802326a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802326e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023272:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023276:	4465      	add	r5, ip
 8023278:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802327c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023280:	fb09 fc0c 	mul.w	ip, r9, ip
 8023284:	fb09 f904 	mul.w	r9, r9, r4
 8023288:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802328c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023290:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023294:	fb08 f404 	mul.w	r4, r8, r4
 8023298:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802329c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80232a0:	fb08 f802 	mul.w	r8, r8, r2
 80232a4:	fb0a fa01 	mul.w	sl, sl, r1
 80232a8:	0a22      	lsrs	r2, r4, #8
 80232aa:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80232ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80232b2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80232b6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80232ba:	4414      	add	r4, r2
 80232bc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80232c0:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80232c4:	0a2d      	lsrs	r5, r5, #8
 80232c6:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80232ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80232ce:	9a03      	ldr	r2, [sp, #12]
 80232d0:	8836      	ldrh	r6, [r6, #0]
 80232d2:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80232d6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80232da:	437d      	muls	r5, r7
 80232dc:	4461      	add	r1, ip
 80232de:	0a24      	lsrs	r4, r4, #8
 80232e0:	fb02 5503 	mla	r5, r2, r3, r5
 80232e4:	0a09      	lsrs	r1, r1, #8
 80232e6:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80232ea:	fb04 540e 	mla	r4, r4, lr, r5
 80232ee:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80232f2:	fb01 4100 	mla	r1, r1, r0, r4
 80232f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80232fa:	0a09      	lsrs	r1, r1, #8
 80232fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023300:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023304:	fb07 f70a 	mul.w	r7, r7, sl
 8023308:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802330c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023310:	fb03 7101 	mla	r1, r3, r1, r7
 8023314:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023318:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802331c:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023320:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023324:	fb00 e101 	mla	r1, r0, r1, lr
 8023328:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802332c:	9a00      	ldr	r2, [sp, #0]
 802332e:	b287      	uxth	r7, r0
 8023330:	437a      	muls	r2, r7
 8023332:	0a09      	lsrs	r1, r1, #8
 8023334:	1c53      	adds	r3, r2, #1
 8023336:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802333a:	4321      	orrs	r1, r4
 802333c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023340:	1235      	asrs	r5, r6, #8
 8023342:	0c0a      	lsrs	r2, r1, #16
 8023344:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8023348:	b2db      	uxtb	r3, r3
 802334a:	fb12 f207 	smulbb	r2, r2, r7
 802334e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023352:	fb05 2503 	mla	r5, r5, r3, r2
 8023356:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802335a:	10f2      	asrs	r2, r6, #3
 802335c:	b2c8      	uxtb	r0, r1
 802335e:	00f6      	lsls	r6, r6, #3
 8023360:	fb14 f407 	smulbb	r4, r4, r7
 8023364:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023368:	b2f6      	uxtb	r6, r6
 802336a:	fb10 f007 	smulbb	r0, r0, r7
 802336e:	fb02 4203 	mla	r2, r2, r3, r4
 8023372:	b2ad      	uxth	r5, r5
 8023374:	fb06 0303 	mla	r3, r6, r3, r0
 8023378:	b299      	uxth	r1, r3
 802337a:	b294      	uxth	r4, r2
 802337c:	1c6b      	adds	r3, r5, #1
 802337e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023382:	1c62      	adds	r2, r4, #1
 8023384:	1c4b      	adds	r3, r1, #1
 8023386:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802338a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802338e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023392:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023396:	0952      	lsrs	r2, r2, #5
 8023398:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802339c:	432b      	orrs	r3, r5
 802339e:	4313      	orrs	r3, r2
 80233a0:	9a02      	ldr	r2, [sp, #8]
 80233a2:	8013      	strh	r3, [r2, #0]
 80233a4:	b005      	add	sp, #20
 80233a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80233aa:	2500      	movs	r5, #0
 80233ac:	e6ef      	b.n	802318e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80233ae:	2100      	movs	r1, #0
 80233b0:	460d      	mov	r5, r1
 80233b2:	e6f7      	b.n	80231a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233b4:	2100      	movs	r1, #0
 80233b6:	e6f5      	b.n	80231a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233b8:	4631      	mov	r1, r6
 80233ba:	e6f3      	b.n	80231a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233bc:	2400      	movs	r4, #0
 80233be:	e702      	b.n	80231c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80233c0:	2200      	movs	r2, #0
 80233c2:	4614      	mov	r4, r2
 80233c4:	e70b      	b.n	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233c6:	4602      	mov	r2, r0
 80233c8:	4604      	mov	r4, r0
 80233ca:	e708      	b.n	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233cc:	2200      	movs	r2, #0
 80233ce:	e706      	b.n	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233d0:	4632      	mov	r2, r6
 80233d2:	e704      	b.n	80231de <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080233d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80233d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233d8:	b09d      	sub	sp, #116	; 0x74
 80233da:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80233de:	9219      	str	r2, [sp, #100]	; 0x64
 80233e0:	9307      	str	r3, [sp, #28]
 80233e2:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80233e4:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 80233e8:	931a      	str	r3, [sp, #104]	; 0x68
 80233ea:	9117      	str	r1, [sp, #92]	; 0x5c
 80233ec:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80233f0:	901b      	str	r0, [sp, #108]	; 0x6c
 80233f2:	6850      	ldr	r0, [r2, #4]
 80233f4:	6812      	ldr	r2, [r2, #0]
 80233f6:	fb00 1303 	mla	r3, r0, r3, r1
 80233fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80233fe:	930a      	str	r3, [sp, #40]	; 0x28
 8023400:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023402:	681b      	ldr	r3, [r3, #0]
 8023404:	9310      	str	r3, [sp, #64]	; 0x40
 8023406:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802340a:	930b      	str	r3, [sp, #44]	; 0x2c
 802340c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802340e:	2b00      	cmp	r3, #0
 8023410:	dc03      	bgt.n	802341a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023412:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8023414:	2b00      	cmp	r3, #0
 8023416:	f340 8375 	ble.w	8023b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802341a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802341c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023420:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023424:	1e48      	subs	r0, r1, #1
 8023426:	1e57      	subs	r7, r2, #1
 8023428:	9b07      	ldr	r3, [sp, #28]
 802342a:	2b00      	cmp	r3, #0
 802342c:	f340 818e 	ble.w	802374c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023430:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023434:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023438:	d406      	bmi.n	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802343a:	4584      	cmp	ip, r0
 802343c:	da04      	bge.n	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802343e:	2b00      	cmp	r3, #0
 8023440:	db02      	blt.n	8023448 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023442:	42bb      	cmp	r3, r7
 8023444:	f2c0 8183 	blt.w	802374e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8023448:	f11c 0c01 	adds.w	ip, ip, #1
 802344c:	f100 8173 	bmi.w	8023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023450:	4561      	cmp	r1, ip
 8023452:	f2c0 8170 	blt.w	8023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023456:	3301      	adds	r3, #1
 8023458:	f100 816d 	bmi.w	8023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802345c:	429a      	cmp	r2, r3
 802345e:	f2c0 816a 	blt.w	8023736 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023462:	9b07      	ldr	r3, [sp, #28]
 8023464:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023466:	9318      	str	r3, [sp, #96]	; 0x60
 8023468:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802346a:	2b00      	cmp	r3, #0
 802346c:	f340 818c 	ble.w	8023788 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023470:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023472:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023474:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023478:	689b      	ldr	r3, [r3, #8]
 802347a:	1422      	asrs	r2, r4, #16
 802347c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023480:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023484:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023488:	f100 81cd 	bmi.w	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802348c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023490:	4542      	cmp	r2, r8
 8023492:	f280 81c8 	bge.w	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023496:	f1bc 0f00 	cmp.w	ip, #0
 802349a:	f2c0 81c4 	blt.w	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802349e:	f10e 38ff 	add.w	r8, lr, #4294967295
 80234a2:	45c4      	cmp	ip, r8
 80234a4:	f280 81bf 	bge.w	8023826 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234a8:	b21b      	sxth	r3, r3
 80234aa:	fb0c 2203 	mla	r2, ip, r3, r2
 80234ae:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80234b0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80234b4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80234b8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80234bc:	2800      	cmp	r0, #0
 80234be:	f000 81a9 	beq.w	8023814 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80234c2:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80234c6:	950c      	str	r5, [sp, #48]	; 0x30
 80234c8:	0e2d      	lsrs	r5, r5, #24
 80234ca:	9513      	str	r5, [sp, #76]	; 0x4c
 80234cc:	b181      	cbz	r1, 80234f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80234ce:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80234d2:	3b01      	subs	r3, #1
 80234d4:	009b      	lsls	r3, r3, #2
 80234d6:	3304      	adds	r3, #4
 80234d8:	eb08 0c03 	add.w	ip, r8, r3
 80234dc:	f858 3003 	ldr.w	r3, [r8, r3]
 80234e0:	9308      	str	r3, [sp, #32]
 80234e2:	0e1b      	lsrs	r3, r3, #24
 80234e4:	9311      	str	r3, [sp, #68]	; 0x44
 80234e6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 80234ea:	930d      	str	r3, [sp, #52]	; 0x34
 80234ec:	0e1b      	lsrs	r3, r3, #24
 80234ee:	9314      	str	r3, [sp, #80]	; 0x50
 80234f0:	b280      	uxth	r0, r0
 80234f2:	b289      	uxth	r1, r1
 80234f4:	fb00 f901 	mul.w	r9, r0, r1
 80234f8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80234fc:	0100      	lsls	r0, r0, #4
 80234fe:	eba0 0809 	sub.w	r8, r0, r9
 8023502:	b289      	uxth	r1, r1
 8023504:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8023508:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802350a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802350c:	fa1f f888 	uxth.w	r8, r8
 8023510:	1a5b      	subs	r3, r3, r1
 8023512:	b29b      	uxth	r3, r3
 8023514:	fb08 f000 	mul.w	r0, r8, r0
 8023518:	fb03 000e 	mla	r0, r3, lr, r0
 802351c:	fb01 0005 	mla	r0, r1, r5, r0
 8023520:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023522:	fb09 0005 	mla	r0, r9, r5, r0
 8023526:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802352a:	2800      	cmp	r0, #0
 802352c:	f000 80fa 	beq.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023530:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023534:	d01b      	beq.n	802356e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023536:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802353a:	fb0e fa0a 	mul.w	sl, lr, sl
 802353e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023542:	fb0e fe02 	mul.w	lr, lr, r2
 8023546:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802354a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802354e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023552:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023556:	4452      	add	r2, sl
 8023558:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802355c:	0a12      	lsrs	r2, r2, #8
 802355e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023562:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023566:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802356a:	ea42 020c 	orr.w	r2, r2, ip
 802356e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023570:	2dff      	cmp	r5, #255	; 0xff
 8023572:	d021      	beq.n	80235b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023574:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023576:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802357a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802357c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023580:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023582:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023586:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023588:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802358c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023590:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023594:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023598:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802359c:	44de      	add	lr, fp
 802359e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80235a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235ae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235b2:	ea4e 050a 	orr.w	r5, lr, sl
 80235b6:	950c      	str	r5, [sp, #48]	; 0x30
 80235b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80235ba:	2dff      	cmp	r5, #255	; 0xff
 80235bc:	d021      	beq.n	8023602 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80235be:	9d08      	ldr	r5, [sp, #32]
 80235c0:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80235c4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80235c6:	fb05 fb0b 	mul.w	fp, r5, fp
 80235ca:	9d08      	ldr	r5, [sp, #32]
 80235cc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80235d0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80235d2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80235d6:	fb05 fa0a 	mul.w	sl, r5, sl
 80235da:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235de:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80235e2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80235e6:	44de      	add	lr, fp
 80235e8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80235ec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235f0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80235f8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235fc:	ea4e 050a 	orr.w	r5, lr, sl
 8023600:	9508      	str	r5, [sp, #32]
 8023602:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023604:	2dff      	cmp	r5, #255	; 0xff
 8023606:	d021      	beq.n	802364c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023608:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802360a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802360e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023610:	fb05 fb0b 	mul.w	fp, r5, fp
 8023614:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023616:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802361a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802361c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023620:	fb05 fa0a 	mul.w	sl, r5, sl
 8023624:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023628:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802362c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023630:	44de      	add	lr, fp
 8023632:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023636:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802363a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802363e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023642:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023646:	ea4e 050a 	orr.w	r5, lr, sl
 802364a:	950d      	str	r5, [sp, #52]	; 0x34
 802364c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802364e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023652:	9d08      	ldr	r5, [sp, #32]
 8023654:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023658:	fb08 fc0c 	mul.w	ip, r8, ip
 802365c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023660:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023664:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023666:	fb01 cc0e 	mla	ip, r1, lr, ip
 802366a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802366e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023670:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023674:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023678:	fb08 f80e 	mul.w	r8, r8, lr
 802367c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023680:	fb03 8202 	mla	r2, r3, r2, r8
 8023684:	9b08      	ldr	r3, [sp, #32]
 8023686:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023688:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802368c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802368e:	fb01 220a 	mla	r2, r1, sl, r2
 8023692:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023696:	fb09 2901 	mla	r9, r9, r1, r2
 802369a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802369c:	883b      	ldrh	r3, [r7, #0]
 802369e:	4342      	muls	r2, r0
 80236a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236a8:	1c50      	adds	r0, r2, #1
 80236aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80236ae:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80236b2:	ea4c 0c09 	orr.w	ip, ip, r9
 80236b6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80236ba:	1219      	asrs	r1, r3, #8
 80236bc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80236c0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80236c4:	b2c0      	uxtb	r0, r0
 80236c6:	fb12 f205 	smulbb	r2, r2, r5
 80236ca:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80236ce:	fb01 2100 	mla	r1, r1, r0, r2
 80236d2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80236d6:	10da      	asrs	r2, r3, #3
 80236d8:	fa5f fc8c 	uxtb.w	ip, ip
 80236dc:	00db      	lsls	r3, r3, #3
 80236de:	fb1c fc05 	smulbb	ip, ip, r5
 80236e2:	b2db      	uxtb	r3, r3
 80236e4:	b289      	uxth	r1, r1
 80236e6:	fb03 c300 	mla	r3, r3, r0, ip
 80236ea:	fa1f fc83 	uxth.w	ip, r3
 80236ee:	1c4b      	adds	r3, r1, #1
 80236f0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80236f4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80236f8:	fb1e fe05 	smulbb	lr, lr, r5
 80236fc:	f10c 0301 	add.w	r3, ip, #1
 8023700:	fb02 e200 	mla	r2, r2, r0, lr
 8023704:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023708:	b292      	uxth	r2, r2
 802370a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802370e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023712:	430b      	orrs	r3, r1
 8023714:	1c51      	adds	r1, r2, #1
 8023716:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802371a:	0952      	lsrs	r2, r2, #5
 802371c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023720:	4313      	orrs	r3, r2
 8023722:	803b      	strh	r3, [r7, #0]
 8023724:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023726:	441c      	add	r4, r3
 8023728:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802372a:	441e      	add	r6, r3
 802372c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802372e:	3b01      	subs	r3, #1
 8023730:	3702      	adds	r7, #2
 8023732:	9318      	str	r3, [sp, #96]	; 0x60
 8023734:	e698      	b.n	8023468 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023736:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023738:	441c      	add	r4, r3
 802373a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802373c:	441e      	add	r6, r3
 802373e:	9b07      	ldr	r3, [sp, #28]
 8023740:	3b01      	subs	r3, #1
 8023742:	9307      	str	r3, [sp, #28]
 8023744:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023746:	3302      	adds	r3, #2
 8023748:	930a      	str	r3, [sp, #40]	; 0x28
 802374a:	e66d      	b.n	8023428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802374c:	d023      	beq.n	8023796 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802374e:	9b07      	ldr	r3, [sp, #28]
 8023750:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023752:	3b01      	subs	r3, #1
 8023754:	fb00 4003 	mla	r0, r0, r3, r4
 8023758:	1400      	asrs	r0, r0, #16
 802375a:	f53f ae82 	bmi.w	8023462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802375e:	3901      	subs	r1, #1
 8023760:	4288      	cmp	r0, r1
 8023762:	f6bf ae7e 	bge.w	8023462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023766:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023768:	fb01 6303 	mla	r3, r1, r3, r6
 802376c:	141b      	asrs	r3, r3, #16
 802376e:	f53f ae78 	bmi.w	8023462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023772:	3a01      	subs	r2, #1
 8023774:	4293      	cmp	r3, r2
 8023776:	f6bf ae74 	bge.w	8023462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802377a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802377e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023782:	f1bb 0f00 	cmp.w	fp, #0
 8023786:	dc6c      	bgt.n	8023862 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023788:	9b07      	ldr	r3, [sp, #28]
 802378a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802378e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023790:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023794:	930a      	str	r3, [sp, #40]	; 0x28
 8023796:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023798:	2b00      	cmp	r3, #0
 802379a:	f340 81b3 	ble.w	8023b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802379e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80237a2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80237a6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80237aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80237ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80237b0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80237b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80237b8:	eef0 6a62 	vmov.f32	s13, s5
 80237bc:	ee61 7a27 	vmul.f32	s15, s2, s15
 80237c0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237c4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80237c8:	ee16 4a90 	vmov	r4, s13
 80237cc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80237d0:	eef0 6a43 	vmov.f32	s13, s6
 80237d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80237d8:	ee12 2a90 	vmov	r2, s5
 80237dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80237e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80237e4:	ee13 2a10 	vmov	r2, s6
 80237e8:	9329      	str	r3, [sp, #164]	; 0xa4
 80237ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80237ec:	fb92 f3f3 	sdiv	r3, r2, r3
 80237f0:	932a      	str	r3, [sp, #168]	; 0xa8
 80237f2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80237f4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80237f6:	3b01      	subs	r3, #1
 80237f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237fc:	9317      	str	r3, [sp, #92]	; 0x5c
 80237fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023800:	bf08      	it	eq
 8023802:	4613      	moveq	r3, r2
 8023804:	ee16 6a90 	vmov	r6, s13
 8023808:	9307      	str	r3, [sp, #28]
 802380a:	eeb0 3a67 	vmov.f32	s6, s15
 802380e:	eef0 2a47 	vmov.f32	s5, s14
 8023812:	e5fb      	b.n	802340c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023814:	2900      	cmp	r1, #0
 8023816:	f43f ae6b 	beq.w	80234f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802381a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802381e:	9308      	str	r3, [sp, #32]
 8023820:	0e1b      	lsrs	r3, r3, #24
 8023822:	9311      	str	r3, [sp, #68]	; 0x44
 8023824:	e664      	b.n	80234f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023826:	f112 0801 	adds.w	r8, r2, #1
 802382a:	f53f af7b 	bmi.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802382e:	4543      	cmp	r3, r8
 8023830:	f6ff af78 	blt.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023834:	f11c 0801 	adds.w	r8, ip, #1
 8023838:	f53f af74 	bmi.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802383c:	45c6      	cmp	lr, r8
 802383e:	f6ff af71 	blt.w	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023842:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023844:	9201      	str	r2, [sp, #4]
 8023846:	fa0f f28e 	sxth.w	r2, lr
 802384a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802384e:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023852:	9200      	str	r2, [sp, #0]
 8023854:	b21b      	sxth	r3, r3
 8023856:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023858:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802385a:	4639      	mov	r1, r7
 802385c:	f7ff fc79 	bl	8023152 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023860:	e760      	b.n	8023724 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023862:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023864:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023866:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802386a:	1427      	asrs	r7, r4, #16
 802386c:	1433      	asrs	r3, r6, #16
 802386e:	fb01 7303 	mla	r3, r1, r3, r7
 8023872:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023876:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802387a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802387e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023882:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023886:	2a00      	cmp	r2, #0
 8023888:	f000 8133 	beq.w	8023af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802388c:	687d      	ldr	r5, [r7, #4]
 802388e:	950e      	str	r5, [sp, #56]	; 0x38
 8023890:	0e2d      	lsrs	r5, r5, #24
 8023892:	9515      	str	r5, [sp, #84]	; 0x54
 8023894:	b178      	cbz	r0, 80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023896:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802389a:	3901      	subs	r1, #1
 802389c:	0089      	lsls	r1, r1, #2
 802389e:	3104      	adds	r1, #4
 80238a0:	eb07 0e01 	add.w	lr, r7, r1
 80238a4:	5879      	ldr	r1, [r7, r1]
 80238a6:	9109      	str	r1, [sp, #36]	; 0x24
 80238a8:	0e09      	lsrs	r1, r1, #24
 80238aa:	9112      	str	r1, [sp, #72]	; 0x48
 80238ac:	f8de 1004 	ldr.w	r1, [lr, #4]
 80238b0:	910f      	str	r1, [sp, #60]	; 0x3c
 80238b2:	0e09      	lsrs	r1, r1, #24
 80238b4:	9116      	str	r1, [sp, #88]	; 0x58
 80238b6:	b292      	uxth	r2, r2
 80238b8:	b280      	uxth	r0, r0
 80238ba:	fb02 f800 	mul.w	r8, r2, r0
 80238be:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80238c2:	0112      	lsls	r2, r2, #4
 80238c4:	eba2 0e08 	sub.w	lr, r2, r8
 80238c8:	b280      	uxth	r0, r0
 80238ca:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80238ce:	9915      	ldr	r1, [sp, #84]	; 0x54
 80238d0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80238d2:	fa1f fe8e 	uxth.w	lr, lr
 80238d6:	1a12      	subs	r2, r2, r0
 80238d8:	b292      	uxth	r2, r2
 80238da:	fb0e f101 	mul.w	r1, lr, r1
 80238de:	fb02 110c 	mla	r1, r2, ip, r1
 80238e2:	fb00 1105 	mla	r1, r0, r5, r1
 80238e6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80238e8:	fb08 1105 	mla	r1, r8, r5, r1
 80238ec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80238f0:	2900      	cmp	r1, #0
 80238f2:	f000 80f5 	beq.w	8023ae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80238f6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80238fa:	d019      	beq.n	8023930 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80238fc:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023900:	fb0c fa0a 	mul.w	sl, ip, sl
 8023904:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023908:	fb0c fc03 	mul.w	ip, ip, r3
 802390c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023910:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023914:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023918:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802391c:	4453      	add	r3, sl
 802391e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023922:	0a1b      	lsrs	r3, r3, #8
 8023924:	0a3f      	lsrs	r7, r7, #8
 8023926:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802392a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802392e:	433b      	orrs	r3, r7
 8023930:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023932:	2dff      	cmp	r5, #255	; 0xff
 8023934:	d020      	beq.n	8023978 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023936:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023938:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802393c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802393e:	436f      	muls	r7, r5
 8023940:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023942:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023946:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023948:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802394c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023950:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023954:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023958:	44bc      	add	ip, r7
 802395a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802395e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023962:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023966:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802396a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802396e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023972:	ea4c 050a 	orr.w	r5, ip, sl
 8023976:	950e      	str	r5, [sp, #56]	; 0x38
 8023978:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802397a:	2dff      	cmp	r5, #255	; 0xff
 802397c:	d020      	beq.n	80239c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802397e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023980:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023984:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023986:	436f      	muls	r7, r5
 8023988:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802398a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802398e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023990:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023994:	fb05 fa0a 	mul.w	sl, r5, sl
 8023998:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802399c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239a0:	44bc      	add	ip, r7
 80239a2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80239a6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80239aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239ae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239b6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80239ba:	ea4c 050a 	orr.w	r5, ip, sl
 80239be:	9509      	str	r5, [sp, #36]	; 0x24
 80239c0:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80239c2:	2dff      	cmp	r5, #255	; 0xff
 80239c4:	d020      	beq.n	8023a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80239c6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80239c8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80239cc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80239ce:	436f      	muls	r7, r5
 80239d0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80239d2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80239d6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80239d8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80239dc:	fb05 fa0a 	mul.w	sl, r5, sl
 80239e0:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80239e4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239e8:	44bc      	add	ip, r7
 80239ea:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80239ee:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80239f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239f6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80239fe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023a02:	ea4c 050a 	orr.w	r5, ip, sl
 8023a06:	950f      	str	r5, [sp, #60]	; 0x3c
 8023a08:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a0a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023a0e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023a10:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023a14:	fb0e f707 	mul.w	r7, lr, r7
 8023a18:	fb02 770c 	mla	r7, r2, ip, r7
 8023a1c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023a20:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023a22:	fb00 770c 	mla	r7, r0, ip, r7
 8023a26:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023a2a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023a2c:	fb08 770c 	mla	r7, r8, ip, r7
 8023a30:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023a34:	fb0e fe0c 	mul.w	lr, lr, ip
 8023a38:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023a3c:	fb02 e303 	mla	r3, r2, r3, lr
 8023a40:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023a42:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023a44:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023a48:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023a4a:	fb00 330a 	mla	r3, r0, sl, r3
 8023a4e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023a52:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023a56:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023a58:	f8b9 0000 	ldrh.w	r0, [r9]
 8023a5c:	4359      	muls	r1, r3
 8023a5e:	0a3f      	lsrs	r7, r7, #8
 8023a60:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a64:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023a68:	1c4b      	adds	r3, r1, #1
 8023a6a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023a6e:	ea47 070c 	orr.w	r7, r7, ip
 8023a72:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023a76:	1202      	asrs	r2, r0, #8
 8023a78:	0c3b      	lsrs	r3, r7, #16
 8023a7a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023a7e:	b2c9      	uxtb	r1, r1
 8023a80:	fb13 f305 	smulbb	r3, r3, r5
 8023a84:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023a88:	fb02 3201 	mla	r2, r2, r1, r3
 8023a8c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023a90:	10c3      	asrs	r3, r0, #3
 8023a92:	b2ff      	uxtb	r7, r7
 8023a94:	00c0      	lsls	r0, r0, #3
 8023a96:	b2c0      	uxtb	r0, r0
 8023a98:	fb17 f705 	smulbb	r7, r7, r5
 8023a9c:	fb00 7001 	mla	r0, r0, r1, r7
 8023aa0:	b292      	uxth	r2, r2
 8023aa2:	fb1c fc05 	smulbb	ip, ip, r5
 8023aa6:	b280      	uxth	r0, r0
 8023aa8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023aac:	fb03 c301 	mla	r3, r3, r1, ip
 8023ab0:	1c51      	adds	r1, r2, #1
 8023ab2:	f100 0c01 	add.w	ip, r0, #1
 8023ab6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023aba:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023abe:	b29b      	uxth	r3, r3
 8023ac0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023ac4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023ac8:	ea4c 0202 	orr.w	r2, ip, r2
 8023acc:	f103 0c01 	add.w	ip, r3, #1
 8023ad0:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023ad4:	095b      	lsrs	r3, r3, #5
 8023ad6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023ada:	431a      	orrs	r2, r3
 8023adc:	f8a9 2000 	strh.w	r2, [r9]
 8023ae0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023ae2:	441c      	add	r4, r3
 8023ae4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023ae6:	f109 0902 	add.w	r9, r9, #2
 8023aea:	441e      	add	r6, r3
 8023aec:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023af0:	e647      	b.n	8023782 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023af2:	2800      	cmp	r0, #0
 8023af4:	f43f aedf 	beq.w	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023af8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023afc:	9109      	str	r1, [sp, #36]	; 0x24
 8023afe:	0e09      	lsrs	r1, r1, #24
 8023b00:	9112      	str	r1, [sp, #72]	; 0x48
 8023b02:	e6d8      	b.n	80238b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b04:	b01d      	add	sp, #116	; 0x74
 8023b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023b0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023b0a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b0e:	b085      	sub	sp, #20
 8023b10:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023b14:	9102      	str	r1, [sp, #8]
 8023b16:	2c00      	cmp	r4, #0
 8023b18:	fb04 7103 	mla	r1, r4, r3, r7
 8023b1c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023b20:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023b24:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023b28:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023b2c:	f2c0 810c 	blt.w	8023d48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b30:	45a6      	cmp	lr, r4
 8023b32:	f340 8109 	ble.w	8023d48 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b36:	2f00      	cmp	r7, #0
 8023b38:	f2c0 8104 	blt.w	8023d44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b3c:	42bb      	cmp	r3, r7
 8023b3e:	f340 8101 	ble.w	8023d44 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b42:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023b46:	1c7a      	adds	r2, r7, #1
 8023b48:	f100 8101 	bmi.w	8023d4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b4c:	4293      	cmp	r3, r2
 8023b4e:	f340 80fe 	ble.w	8023d4e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b52:	2e00      	cmp	r6, #0
 8023b54:	f000 80fd 	beq.w	8023d52 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023b58:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023b5c:	3401      	adds	r4, #1
 8023b5e:	f100 80fc 	bmi.w	8023d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b62:	45a6      	cmp	lr, r4
 8023b64:	f340 80f9 	ble.w	8023d5a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b68:	2800      	cmp	r0, #0
 8023b6a:	f000 80f9 	beq.w	8023d60 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023b6e:	2f00      	cmp	r7, #0
 8023b70:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023b74:	f2c0 80ef 	blt.w	8023d56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023b78:	42bb      	cmp	r3, r7
 8023b7a:	f340 80ec 	ble.w	8023d56 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023b7e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023b82:	3701      	adds	r7, #1
 8023b84:	f100 80ef 	bmi.w	8023d66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023b88:	42bb      	cmp	r3, r7
 8023b8a:	f340 80ec 	ble.w	8023d66 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023b8e:	2e00      	cmp	r6, #0
 8023b90:	f000 80eb 	beq.w	8023d6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023b94:	6852      	ldr	r2, [r2, #4]
 8023b96:	b2b6      	uxth	r6, r6
 8023b98:	b280      	uxth	r0, r0
 8023b9a:	fb00 fe06 	mul.w	lr, r0, r6
 8023b9e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023ba2:	0136      	lsls	r6, r6, #4
 8023ba4:	eba6 070e 	sub.w	r7, r6, lr
 8023ba8:	b280      	uxth	r0, r0
 8023baa:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023bae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023bb2:	b2bf      	uxth	r7, r7
 8023bb4:	1a1b      	subs	r3, r3, r0
 8023bb6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023bba:	b29b      	uxth	r3, r3
 8023bbc:	fb07 f60a 	mul.w	r6, r7, sl
 8023bc0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023bc4:	fb0b 6603 	mla	r6, fp, r3, r6
 8023bc8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023bcc:	fb00 6609 	mla	r6, r0, r9, r6
 8023bd0:	fb0e 6608 	mla	r6, lr, r8, r6
 8023bd4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023bd8:	9600      	str	r6, [sp, #0]
 8023bda:	2e00      	cmp	r6, #0
 8023bdc:	f000 80af 	beq.w	8023d3e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023be0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023be4:	fb0b fc0c 	mul.w	ip, fp, ip
 8023be8:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023bec:	fb0b f505 	mul.w	r5, fp, r5
 8023bf0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023bf4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023bf8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023bfc:	44dc      	add	ip, fp
 8023bfe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c02:	9501      	str	r5, [sp, #4]
 8023c04:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023c08:	9503      	str	r5, [sp, #12]
 8023c0a:	9d01      	ldr	r5, [sp, #4]
 8023c0c:	9e02      	ldr	r6, [sp, #8]
 8023c0e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023c12:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023c16:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023c1a:	fb0a fc0c 	mul.w	ip, sl, ip
 8023c1e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023c22:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023c26:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023c2a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c2e:	4465      	add	r5, ip
 8023c30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023c34:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023c38:	fb09 fc0c 	mul.w	ip, r9, ip
 8023c3c:	fb09 f904 	mul.w	r9, r9, r4
 8023c40:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023c44:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023c48:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023c4c:	fb08 f404 	mul.w	r4, r8, r4
 8023c50:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023c54:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023c58:	fb08 f802 	mul.w	r8, r8, r2
 8023c5c:	fb0a fa01 	mul.w	sl, sl, r1
 8023c60:	0a22      	lsrs	r2, r4, #8
 8023c62:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023c66:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023c6a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023c6e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023c72:	4414      	add	r4, r2
 8023c74:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023c78:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023c7c:	0a2d      	lsrs	r5, r5, #8
 8023c7e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023c82:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023c86:	9a03      	ldr	r2, [sp, #12]
 8023c88:	8836      	ldrh	r6, [r6, #0]
 8023c8a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023c8e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023c92:	437d      	muls	r5, r7
 8023c94:	4461      	add	r1, ip
 8023c96:	0a24      	lsrs	r4, r4, #8
 8023c98:	fb02 5503 	mla	r5, r2, r3, r5
 8023c9c:	0a09      	lsrs	r1, r1, #8
 8023c9e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023ca2:	fb04 540e 	mla	r4, r4, lr, r5
 8023ca6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023caa:	fb01 4100 	mla	r1, r1, r0, r4
 8023cae:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cb2:	0a09      	lsrs	r1, r1, #8
 8023cb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023cb8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023cbc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023cc0:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023cc4:	fb07 f70a 	mul.w	r7, r7, sl
 8023cc8:	fb03 7101 	mla	r1, r3, r1, r7
 8023ccc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023cd0:	9b00      	ldr	r3, [sp, #0]
 8023cd2:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023cd6:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023cda:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023cde:	fb00 e101 	mla	r1, r0, r1, lr
 8023ce2:	43da      	mvns	r2, r3
 8023ce4:	1233      	asrs	r3, r6, #8
 8023ce6:	b2d2      	uxtb	r2, r2
 8023ce8:	10f0      	asrs	r0, r6, #3
 8023cea:	0a09      	lsrs	r1, r1, #8
 8023cec:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023cf0:	00f6      	lsls	r6, r6, #3
 8023cf2:	4353      	muls	r3, r2
 8023cf4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023cf8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023cfc:	b2f6      	uxtb	r6, r6
 8023cfe:	4321      	orrs	r1, r4
 8023d00:	4350      	muls	r0, r2
 8023d02:	4356      	muls	r6, r2
 8023d04:	1c5a      	adds	r2, r3, #1
 8023d06:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023d0a:	0c0b      	lsrs	r3, r1, #16
 8023d0c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023d10:	1c42      	adds	r2, r0, #1
 8023d12:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023d16:	0a0a      	lsrs	r2, r1, #8
 8023d18:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023d1c:	021b      	lsls	r3, r3, #8
 8023d1e:	00d2      	lsls	r2, r2, #3
 8023d20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023d24:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023d28:	4313      	orrs	r3, r2
 8023d2a:	1c72      	adds	r2, r6, #1
 8023d2c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023d30:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023d34:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023d38:	4319      	orrs	r1, r3
 8023d3a:	9b02      	ldr	r3, [sp, #8]
 8023d3c:	8019      	strh	r1, [r3, #0]
 8023d3e:	b005      	add	sp, #20
 8023d40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023d44:	2500      	movs	r5, #0
 8023d46:	e6fe      	b.n	8023b46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023d48:	2100      	movs	r1, #0
 8023d4a:	460d      	mov	r5, r1
 8023d4c:	e706      	b.n	8023b5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d4e:	2100      	movs	r1, #0
 8023d50:	e704      	b.n	8023b5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d52:	4631      	mov	r1, r6
 8023d54:	e702      	b.n	8023b5c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d56:	2400      	movs	r4, #0
 8023d58:	e713      	b.n	8023b82 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023d5a:	2200      	movs	r2, #0
 8023d5c:	4614      	mov	r4, r2
 8023d5e:	e71a      	b.n	8023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d60:	4602      	mov	r2, r0
 8023d62:	4604      	mov	r4, r0
 8023d64:	e717      	b.n	8023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d66:	2200      	movs	r2, #0
 8023d68:	e715      	b.n	8023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d6a:	4632      	mov	r2, r6
 8023d6c:	e713      	b.n	8023b96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023d70 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d74:	b09b      	sub	sp, #108	; 0x6c
 8023d76:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8023d7a:	9218      	str	r2, [sp, #96]	; 0x60
 8023d7c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8023d7e:	9116      	str	r1, [sp, #88]	; 0x58
 8023d80:	9307      	str	r3, [sp, #28]
 8023d82:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8023d86:	9019      	str	r0, [sp, #100]	; 0x64
 8023d88:	6850      	ldr	r0, [r2, #4]
 8023d8a:	6812      	ldr	r2, [r2, #0]
 8023d8c:	fb00 1303 	mla	r3, r0, r3, r1
 8023d90:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023d94:	930a      	str	r3, [sp, #40]	; 0x28
 8023d96:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023d98:	681b      	ldr	r3, [r3, #0]
 8023d9a:	930f      	str	r3, [sp, #60]	; 0x3c
 8023d9c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8023d9e:	2b00      	cmp	r3, #0
 8023da0:	dc03      	bgt.n	8023daa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023da2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8023da4:	2b00      	cmp	r3, #0
 8023da6:	f340 8386 	ble.w	80244b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023daa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023dac:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023db0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023db4:	1e48      	subs	r0, r1, #1
 8023db6:	1e57      	subs	r7, r2, #1
 8023db8:	9b07      	ldr	r3, [sp, #28]
 8023dba:	2b00      	cmp	r3, #0
 8023dbc:	f340 8166 	ble.w	802408c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023dc0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023dc4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023dc8:	d406      	bmi.n	8023dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023dca:	4584      	cmp	ip, r0
 8023dcc:	da04      	bge.n	8023dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023dce:	2b00      	cmp	r3, #0
 8023dd0:	db02      	blt.n	8023dd8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023dd2:	42bb      	cmp	r3, r7
 8023dd4:	f2c0 815b 	blt.w	802408e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023dd8:	f11c 0c01 	adds.w	ip, ip, #1
 8023ddc:	f100 814b 	bmi.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023de0:	4561      	cmp	r1, ip
 8023de2:	f2c0 8148 	blt.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023de6:	3301      	adds	r3, #1
 8023de8:	f100 8145 	bmi.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023dec:	429a      	cmp	r2, r3
 8023dee:	f2c0 8142 	blt.w	8024076 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023df2:	9b07      	ldr	r3, [sp, #28]
 8023df4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023df6:	9317      	str	r3, [sp, #92]	; 0x5c
 8023df8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023dfa:	2b00      	cmp	r3, #0
 8023dfc:	f340 8165 	ble.w	80240ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023e00:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8023e02:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8023e04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023e08:	689b      	ldr	r3, [r3, #8]
 8023e0a:	1422      	asrs	r2, r4, #16
 8023e0c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023e10:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023e14:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023e18:	f100 81d5 	bmi.w	80241c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e1c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023e20:	4542      	cmp	r2, r8
 8023e22:	f280 81d0 	bge.w	80241c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e26:	f1bc 0f00 	cmp.w	ip, #0
 8023e2a:	f2c0 81cc 	blt.w	80241c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e2e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023e32:	45c4      	cmp	ip, r8
 8023e34:	f280 81c7 	bge.w	80241c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e38:	b21b      	sxth	r3, r3
 8023e3a:	fb0c 2203 	mla	r2, ip, r3, r2
 8023e3e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023e40:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023e44:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023e48:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023e4c:	2900      	cmp	r1, #0
 8023e4e:	f000 8182 	beq.w	8024156 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023e52:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023e56:	950b      	str	r5, [sp, #44]	; 0x2c
 8023e58:	0e2d      	lsrs	r5, r5, #24
 8023e5a:	9512      	str	r5, [sp, #72]	; 0x48
 8023e5c:	b180      	cbz	r0, 8023e80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023e5e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023e62:	3b01      	subs	r3, #1
 8023e64:	009b      	lsls	r3, r3, #2
 8023e66:	3304      	adds	r3, #4
 8023e68:	eb08 0c03 	add.w	ip, r8, r3
 8023e6c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023e70:	9308      	str	r3, [sp, #32]
 8023e72:	0e1b      	lsrs	r3, r3, #24
 8023e74:	9310      	str	r3, [sp, #64]	; 0x40
 8023e76:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023e7a:	930c      	str	r3, [sp, #48]	; 0x30
 8023e7c:	0e1b      	lsrs	r3, r3, #24
 8023e7e:	9313      	str	r3, [sp, #76]	; 0x4c
 8023e80:	b289      	uxth	r1, r1
 8023e82:	b280      	uxth	r0, r0
 8023e84:	fb01 f900 	mul.w	r9, r1, r0
 8023e88:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023e8c:	0109      	lsls	r1, r1, #4
 8023e8e:	eba1 0809 	sub.w	r8, r1, r9
 8023e92:	b280      	uxth	r0, r0
 8023e94:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8023e98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8023e9a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023e9c:	fa1f f888 	uxth.w	r8, r8
 8023ea0:	1a09      	subs	r1, r1, r0
 8023ea2:	b289      	uxth	r1, r1
 8023ea4:	fb08 f303 	mul.w	r3, r8, r3
 8023ea8:	fb01 330e 	mla	r3, r1, lr, r3
 8023eac:	fb00 3305 	mla	r3, r0, r5, r3
 8023eb0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023eb2:	fb09 3305 	mla	r3, r9, r5, r3
 8023eb6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023eba:	2b00      	cmp	r3, #0
 8023ebc:	f000 80d2 	beq.w	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ec0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8023ec4:	d01b      	beq.n	8023efe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023ec6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8023eca:	fb0e fa0a 	mul.w	sl, lr, sl
 8023ece:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023ed2:	fb0e fe02 	mul.w	lr, lr, r2
 8023ed6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023eda:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ede:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023ee2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023ee6:	4452      	add	r2, sl
 8023ee8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023eec:	0a12      	lsrs	r2, r2, #8
 8023eee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ef2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023ef6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023efa:	ea42 020c 	orr.w	r2, r2, ip
 8023efe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f00:	2dff      	cmp	r5, #255	; 0xff
 8023f02:	d021      	beq.n	8023f48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023f04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f06:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f0a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f0c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f10:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023f12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023f16:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023f18:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f1c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f24:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f28:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f2c:	44de      	add	lr, fp
 8023f2e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f32:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f3a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f42:	ea4e 050a 	orr.w	r5, lr, sl
 8023f46:	950b      	str	r5, [sp, #44]	; 0x2c
 8023f48:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f4a:	2dff      	cmp	r5, #255	; 0xff
 8023f4c:	d021      	beq.n	8023f92 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023f4e:	9d08      	ldr	r5, [sp, #32]
 8023f50:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f54:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f56:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f5a:	9d08      	ldr	r5, [sp, #32]
 8023f5c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023f60:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023f62:	fb05 fa0e 	mul.w	sl, r5, lr
 8023f66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f6a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f6e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023f72:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023f76:	44de      	add	lr, fp
 8023f78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f84:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023f88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f8c:	ea4e 050a 	orr.w	r5, lr, sl
 8023f90:	9508      	str	r5, [sp, #32]
 8023f92:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023f94:	2dff      	cmp	r5, #255	; 0xff
 8023f96:	d021      	beq.n	8023fdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023f98:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023f9a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023f9e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023fa0:	fb05 fb0b 	mul.w	fp, r5, fp
 8023fa4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023fa6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023faa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023fac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023fb0:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fb4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023fb8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023fbc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023fc0:	44de      	add	lr, fp
 8023fc2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023fc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023fca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fce:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023fd2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023fd6:	ea4e 050a 	orr.w	r5, lr, sl
 8023fda:	950c      	str	r5, [sp, #48]	; 0x30
 8023fdc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023fde:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023fe2:	9d08      	ldr	r5, [sp, #32]
 8023fe4:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023fe8:	fb08 fc0c 	mul.w	ip, r8, ip
 8023fec:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023ff0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ff4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023ff6:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023ffa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023ffe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8024000:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024004:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024008:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802400c:	fb08 f80e 	mul.w	r8, r8, lr
 8024010:	fb01 8202 	mla	r2, r1, r2, r8
 8024014:	9908      	ldr	r1, [sp, #32]
 8024016:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802401a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802401c:	fb00 220a 	mla	r2, r0, sl, r2
 8024020:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8024024:	fb09 2900 	mla	r9, r9, r0, r2
 8024028:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802402c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024030:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024034:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8024038:	ea4c 0c09 	orr.w	ip, ip, r9
 802403c:	2bff      	cmp	r3, #255	; 0xff
 802403e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024042:	f040 8091 	bne.w	8024168 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8024046:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802404a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802404e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024052:	f022 0207 	bic.w	r2, r2, #7
 8024056:	431a      	orrs	r2, r3
 8024058:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802405c:	ea4c 0c02 	orr.w	ip, ip, r2
 8024060:	f8a7 c000 	strh.w	ip, [r7]
 8024064:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024066:	441c      	add	r4, r3
 8024068:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802406a:	441e      	add	r6, r3
 802406c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802406e:	3b01      	subs	r3, #1
 8024070:	3702      	adds	r7, #2
 8024072:	9317      	str	r3, [sp, #92]	; 0x5c
 8024074:	e6c0      	b.n	8023df8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024076:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024078:	441c      	add	r4, r3
 802407a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802407c:	441e      	add	r6, r3
 802407e:	9b07      	ldr	r3, [sp, #28]
 8024080:	3b01      	subs	r3, #1
 8024082:	9307      	str	r3, [sp, #28]
 8024084:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024086:	3302      	adds	r3, #2
 8024088:	930a      	str	r3, [sp, #40]	; 0x28
 802408a:	e695      	b.n	8023db8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802408c:	d024      	beq.n	80240d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802408e:	9b07      	ldr	r3, [sp, #28]
 8024090:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024092:	3b01      	subs	r3, #1
 8024094:	fb00 4003 	mla	r0, r0, r3, r4
 8024098:	1400      	asrs	r0, r0, #16
 802409a:	f53f aeaa 	bmi.w	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802409e:	3901      	subs	r1, #1
 80240a0:	4288      	cmp	r0, r1
 80240a2:	f6bf aea6 	bge.w	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240a6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80240a8:	fb01 6303 	mla	r3, r1, r3, r6
 80240ac:	141b      	asrs	r3, r3, #16
 80240ae:	f53f aea0 	bmi.w	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240b2:	3a01      	subs	r2, #1
 80240b4:	4293      	cmp	r3, r2
 80240b6:	f6bf ae9c 	bge.w	8023df2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240ba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80240be:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 80240c2:	f1bb 0f00 	cmp.w	fp, #0
 80240c6:	f300 809a 	bgt.w	80241fe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80240ca:	9b07      	ldr	r3, [sp, #28]
 80240cc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80240d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80240d2:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80240d6:	930a      	str	r3, [sp, #40]	; 0x28
 80240d8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80240da:	2b00      	cmp	r3, #0
 80240dc:	f340 81eb 	ble.w	80244b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80240e0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80240e4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80240e8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80240ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80240ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80240f2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80240f6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80240fa:	eef0 6a62 	vmov.f32	s13, s5
 80240fe:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024102:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024106:	ee77 2a62 	vsub.f32	s5, s14, s5
 802410a:	ee16 4a90 	vmov	r4, s13
 802410e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024112:	eef0 6a43 	vmov.f32	s13, s6
 8024116:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802411a:	ee12 2a90 	vmov	r2, s5
 802411e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024122:	fb92 f3f3 	sdiv	r3, r2, r3
 8024126:	ee13 2a10 	vmov	r2, s6
 802412a:	9327      	str	r3, [sp, #156]	; 0x9c
 802412c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802412e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024132:	9328      	str	r3, [sp, #160]	; 0xa0
 8024134:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8024136:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8024138:	3b01      	subs	r3, #1
 802413a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802413e:	9316      	str	r3, [sp, #88]	; 0x58
 8024140:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024142:	bf08      	it	eq
 8024144:	4613      	moveq	r3, r2
 8024146:	ee16 6a90 	vmov	r6, s13
 802414a:	9307      	str	r3, [sp, #28]
 802414c:	eeb0 3a67 	vmov.f32	s6, s15
 8024150:	eef0 2a47 	vmov.f32	s5, s14
 8024154:	e622      	b.n	8023d9c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8024156:	2800      	cmp	r0, #0
 8024158:	f43f ae92 	beq.w	8023e80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802415c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024160:	9308      	str	r3, [sp, #32]
 8024162:	0e1b      	lsrs	r3, r3, #24
 8024164:	9310      	str	r3, [sp, #64]	; 0x40
 8024166:	e68b      	b.n	8023e80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024168:	8839      	ldrh	r1, [r7, #0]
 802416a:	4dd4      	ldr	r5, [pc, #848]	; (80244bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802416c:	43db      	mvns	r3, r3
 802416e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024172:	fa5f f883 	uxtb.w	r8, r3
 8024176:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802417a:	fb0e fe08 	mul.w	lr, lr, r8
 802417e:	10c8      	asrs	r0, r1, #3
 8024180:	00cb      	lsls	r3, r1, #3
 8024182:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024186:	f10e 0101 	add.w	r1, lr, #1
 802418a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802418e:	fb00 f008 	mul.w	r0, r0, r8
 8024192:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024196:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802419a:	f100 0e01 	add.w	lr, r0, #1
 802419e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80241a2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80241a6:	b2db      	uxtb	r3, r3
 80241a8:	b2c9      	uxtb	r1, r1
 80241aa:	00d2      	lsls	r2, r2, #3
 80241ac:	fb03 f308 	mul.w	r3, r3, r8
 80241b0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80241b4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80241b8:	430a      	orrs	r2, r1
 80241ba:	1c59      	adds	r1, r3, #1
 80241bc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80241c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80241c4:	e748      	b.n	8024058 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80241c6:	f112 0801 	adds.w	r8, r2, #1
 80241ca:	f53f af4b 	bmi.w	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241ce:	4543      	cmp	r3, r8
 80241d0:	f6ff af48 	blt.w	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241d4:	f11c 0801 	adds.w	r8, ip, #1
 80241d8:	f53f af44 	bmi.w	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241dc:	45c6      	cmp	lr, r8
 80241de:	f6ff af41 	blt.w	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241e2:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80241e6:	fa0f f28e 	sxth.w	r2, lr
 80241ea:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80241ee:	9200      	str	r2, [sp, #0]
 80241f0:	b21b      	sxth	r3, r3
 80241f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80241f4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80241f6:	4639      	mov	r1, r7
 80241f8:	f7ff fc87 	bl	8023b0a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80241fc:	e732      	b.n	8024064 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241fe:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024200:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024202:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8024206:	1421      	asrs	r1, r4, #16
 8024208:	1433      	asrs	r3, r6, #16
 802420a:	fb07 1303 	mla	r3, r7, r3, r1
 802420e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8024210:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024214:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8024218:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802421c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024220:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024224:	2a00      	cmp	r2, #0
 8024226:	f000 8107 	beq.w	8024438 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802422a:	684d      	ldr	r5, [r1, #4]
 802422c:	950d      	str	r5, [sp, #52]	; 0x34
 802422e:	0e2d      	lsrs	r5, r5, #24
 8024230:	9514      	str	r5, [sp, #80]	; 0x50
 8024232:	b178      	cbz	r0, 8024254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024234:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8024238:	3f01      	subs	r7, #1
 802423a:	00bf      	lsls	r7, r7, #2
 802423c:	3704      	adds	r7, #4
 802423e:	eb01 0e07 	add.w	lr, r1, r7
 8024242:	59c9      	ldr	r1, [r1, r7]
 8024244:	9109      	str	r1, [sp, #36]	; 0x24
 8024246:	0e09      	lsrs	r1, r1, #24
 8024248:	9111      	str	r1, [sp, #68]	; 0x44
 802424a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802424e:	910e      	str	r1, [sp, #56]	; 0x38
 8024250:	0e09      	lsrs	r1, r1, #24
 8024252:	9115      	str	r1, [sp, #84]	; 0x54
 8024254:	b292      	uxth	r2, r2
 8024256:	b280      	uxth	r0, r0
 8024258:	fb02 f900 	mul.w	r9, r2, r0
 802425c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024260:	0112      	lsls	r2, r2, #4
 8024262:	eba2 0e09 	sub.w	lr, r2, r9
 8024266:	b280      	uxth	r0, r0
 8024268:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802426c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802426e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024270:	fa1f fe8e 	uxth.w	lr, lr
 8024274:	1a09      	subs	r1, r1, r0
 8024276:	b289      	uxth	r1, r1
 8024278:	fb0e f202 	mul.w	r2, lr, r2
 802427c:	fb01 220c 	mla	r2, r1, ip, r2
 8024280:	fb00 2205 	mla	r2, r0, r5, r2
 8024284:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024286:	fb09 2205 	mla	r2, r9, r5, r2
 802428a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802428e:	2a00      	cmp	r2, #0
 8024290:	f000 80c9 	beq.w	8024426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024294:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024298:	d019      	beq.n	80242ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802429a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802429e:	fb0c fa0a 	mul.w	sl, ip, sl
 80242a2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80242a6:	fb0c fc03 	mul.w	ip, ip, r3
 80242aa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80242ae:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242b2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80242b6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80242ba:	4453      	add	r3, sl
 80242bc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80242c0:	0a1b      	lsrs	r3, r3, #8
 80242c2:	0a3f      	lsrs	r7, r7, #8
 80242c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80242c8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80242cc:	433b      	orrs	r3, r7
 80242ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80242d0:	2dff      	cmp	r5, #255	; 0xff
 80242d2:	d020      	beq.n	8024316 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80242d4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80242d6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80242da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80242dc:	436f      	muls	r7, r5
 80242de:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80242e0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80242e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80242e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80242ea:	fb05 fa0a 	mul.w	sl, r5, sl
 80242ee:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80242f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242f6:	44bc      	add	ip, r7
 80242f8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80242fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024300:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024308:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802430c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024310:	ea4c 050a 	orr.w	r5, ip, sl
 8024314:	950d      	str	r5, [sp, #52]	; 0x34
 8024316:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024318:	2dff      	cmp	r5, #255	; 0xff
 802431a:	d020      	beq.n	802435e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802431c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802431e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8024322:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024324:	436f      	muls	r7, r5
 8024326:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8024328:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802432c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802432e:	fb05 fa0c 	mul.w	sl, r5, ip
 8024332:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8024336:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802433a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802433e:	44bc      	add	ip, r7
 8024340:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8024344:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024348:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802434c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024350:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024354:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024358:	ea4c 050a 	orr.w	r5, ip, sl
 802435c:	9509      	str	r5, [sp, #36]	; 0x24
 802435e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024360:	2dff      	cmp	r5, #255	; 0xff
 8024362:	d020      	beq.n	80243a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024364:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024366:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802436a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802436c:	436f      	muls	r7, r5
 802436e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024370:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024374:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024376:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802437a:	fb05 fa0a 	mul.w	sl, r5, sl
 802437e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024382:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024386:	44bc      	add	ip, r7
 8024388:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802438c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024390:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024394:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024398:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802439c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80243a0:	ea4c 050a 	orr.w	r5, ip, sl
 80243a4:	950e      	str	r5, [sp, #56]	; 0x38
 80243a6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80243a8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80243ac:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80243ae:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80243b2:	fb0e f707 	mul.w	r7, lr, r7
 80243b6:	fb01 770c 	mla	r7, r1, ip, r7
 80243ba:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80243c0:	fb00 770c 	mla	r7, r0, ip, r7
 80243c4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80243c8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80243ca:	fb09 770c 	mla	r7, r9, ip, r7
 80243ce:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80243d2:	fb0e fe0c 	mul.w	lr, lr, ip
 80243d6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80243da:	fb01 e303 	mla	r3, r1, r3, lr
 80243de:	9909      	ldr	r1, [sp, #36]	; 0x24
 80243e0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80243e4:	990e      	ldr	r1, [sp, #56]	; 0x38
 80243e6:	fb00 330a 	mla	r3, r0, sl, r3
 80243ea:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80243ee:	fb09 3c0c 	mla	ip, r9, ip, r3
 80243f2:	0a3f      	lsrs	r7, r7, #8
 80243f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243f8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80243fc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8024400:	ea47 070c 	orr.w	r7, r7, ip
 8024404:	2aff      	cmp	r2, #255	; 0xff
 8024406:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802440a:	d11e      	bne.n	802444a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802440c:	097a      	lsrs	r2, r7, #5
 802440e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8024412:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024416:	f023 0307 	bic.w	r3, r3, #7
 802441a:	4313      	orrs	r3, r2
 802441c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024420:	431f      	orrs	r7, r3
 8024422:	f8a8 7000 	strh.w	r7, [r8]
 8024426:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024428:	441c      	add	r4, r3
 802442a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802442c:	f108 0802 	add.w	r8, r8, #2
 8024430:	441e      	add	r6, r3
 8024432:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024436:	e644      	b.n	80240c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8024438:	2800      	cmp	r0, #0
 802443a:	f43f af0b 	beq.w	8024254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802443e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024442:	9109      	str	r1, [sp, #36]	; 0x24
 8024444:	0e09      	lsrs	r1, r1, #24
 8024446:	9111      	str	r1, [sp, #68]	; 0x44
 8024448:	e704      	b.n	8024254 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802444a:	f8b8 1000 	ldrh.w	r1, [r8]
 802444e:	43d2      	mvns	r2, r2
 8024450:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024454:	fa5f fe82 	uxtb.w	lr, r2
 8024458:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802445c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024460:	10c8      	asrs	r0, r1, #3
 8024462:	00ca      	lsls	r2, r1, #3
 8024464:	f10c 0101 	add.w	r1, ip, #1
 8024468:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802446c:	0c39      	lsrs	r1, r7, #16
 802446e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024472:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024476:	4911      	ldr	r1, [pc, #68]	; (80244bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024478:	fb00 f00e 	mul.w	r0, r0, lr
 802447c:	fa5f fc8c 	uxtb.w	ip, ip
 8024480:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024484:	b2d2      	uxtb	r2, r2
 8024486:	1c41      	adds	r1, r0, #1
 8024488:	fb02 f20e 	mul.w	r2, r2, lr
 802448c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024490:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024494:	1c51      	adds	r1, r2, #1
 8024496:	00c0      	lsls	r0, r0, #3
 8024498:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802449c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80244a0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80244a4:	ea4c 0c00 	orr.w	ip, ip, r0
 80244a8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80244ac:	ea47 0c0c 	orr.w	ip, r7, ip
 80244b0:	f8a8 c000 	strh.w	ip, [r8]
 80244b4:	e7b7      	b.n	8024426 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80244b6:	b01b      	add	sp, #108	; 0x6c
 80244b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244bc:	fffff800 	.word	0xfffff800

080244c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80244c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80244c4:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80244c8:	2d00      	cmp	r5, #0
 80244ca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80244ce:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80244d2:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80244d6:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80244da:	fb05 0e03 	mla	lr, r5, r3, r0
 80244de:	f2c0 808c 	blt.w	80245fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80244e2:	45a9      	cmp	r9, r5
 80244e4:	f340 8089 	ble.w	80245fa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 80244e8:	2800      	cmp	r0, #0
 80244ea:	f2c0 8084 	blt.w	80245f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80244ee:	4580      	cmp	r8, r0
 80244f0:	f340 8081 	ble.w	80245f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80244f4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80244f8:	f01e 0f01 	tst.w	lr, #1
 80244fc:	5d16      	ldrb	r6, [r2, r4]
 80244fe:	bf0c      	ite	eq
 8024500:	f006 060f 	andeq.w	r6, r6, #15
 8024504:	1136      	asrne	r6, r6, #4
 8024506:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802450a:	b2f6      	uxtb	r6, r6
 802450c:	1c44      	adds	r4, r0, #1
 802450e:	d477      	bmi.n	8024600 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024510:	45a0      	cmp	r8, r4
 8024512:	dd75      	ble.n	8024600 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024514:	2f00      	cmp	r7, #0
 8024516:	d075      	beq.n	8024604 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024518:	f10e 0a01 	add.w	sl, lr, #1
 802451c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024520:	f01a 0f01 	tst.w	sl, #1
 8024524:	5d14      	ldrb	r4, [r2, r4]
 8024526:	bf0c      	ite	eq
 8024528:	f004 040f 	andeq.w	r4, r4, #15
 802452c:	1124      	asrne	r4, r4, #4
 802452e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024532:	b2e4      	uxtb	r4, r4
 8024534:	3501      	adds	r5, #1
 8024536:	d469      	bmi.n	802460c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024538:	45a9      	cmp	r9, r5
 802453a:	dd67      	ble.n	802460c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802453c:	f1bc 0f00 	cmp.w	ip, #0
 8024540:	d067      	beq.n	8024612 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024542:	2800      	cmp	r0, #0
 8024544:	db60      	blt.n	8024608 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024546:	4580      	cmp	r8, r0
 8024548:	dd5e      	ble.n	8024608 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802454a:	eb03 090e 	add.w	r9, r3, lr
 802454e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024552:	f019 0f01 	tst.w	r9, #1
 8024556:	5d55      	ldrb	r5, [r2, r5]
 8024558:	bf0c      	ite	eq
 802455a:	f005 050f 	andeq.w	r5, r5, #15
 802455e:	112d      	asrne	r5, r5, #4
 8024560:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024564:	b2ed      	uxtb	r5, r5
 8024566:	3001      	adds	r0, #1
 8024568:	d456      	bmi.n	8024618 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802456a:	4580      	cmp	r8, r0
 802456c:	dd54      	ble.n	8024618 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802456e:	2f00      	cmp	r7, #0
 8024570:	d054      	beq.n	802461c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024572:	3301      	adds	r3, #1
 8024574:	449e      	add	lr, r3
 8024576:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802457a:	f01e 0f01 	tst.w	lr, #1
 802457e:	5cd0      	ldrb	r0, [r2, r3]
 8024580:	bf0c      	ite	eq
 8024582:	f000 000f 	andeq.w	r0, r0, #15
 8024586:	1100      	asrne	r0, r0, #4
 8024588:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802458c:	b2c3      	uxtb	r3, r0
 802458e:	b2ba      	uxth	r2, r7
 8024590:	fa1f fc8c 	uxth.w	ip, ip
 8024594:	fb02 f00c 	mul.w	r0, r2, ip
 8024598:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802459c:	0112      	lsls	r2, r2, #4
 802459e:	fa1f fc8c 	uxth.w	ip, ip
 80245a2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 80245a6:	1a12      	subs	r2, r2, r0
 80245a8:	eba7 070c 	sub.w	r7, r7, ip
 80245ac:	b292      	uxth	r2, r2
 80245ae:	b2bf      	uxth	r7, r7
 80245b0:	4362      	muls	r2, r4
 80245b2:	fb06 2207 	mla	r2, r6, r7, r2
 80245b6:	fb0c 2505 	mla	r5, ip, r5, r2
 80245ba:	fb00 5303 	mla	r3, r0, r3, r5
 80245be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245c2:	b1b3      	cbz	r3, 80245f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80245c4:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 80245c8:	435a      	muls	r2, r3
 80245ca:	1c53      	adds	r3, r2, #1
 80245cc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80245d0:	4a2d      	ldr	r2, [pc, #180]	; (8024688 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80245d2:	121b      	asrs	r3, r3, #8
 80245d4:	6812      	ldr	r2, [r2, #0]
 80245d6:	2bff      	cmp	r3, #255	; 0xff
 80245d8:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80245dc:	d120      	bne.n	8024620 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80245de:	4b2b      	ldr	r3, [pc, #172]	; (802468c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80245e0:	0950      	lsrs	r0, r2, #5
 80245e2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80245e6:	4033      	ands	r3, r6
 80245e8:	4318      	orrs	r0, r3
 80245ea:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80245ee:	4302      	orrs	r2, r0
 80245f0:	800a      	strh	r2, [r1, #0]
 80245f2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80245f6:	2600      	movs	r6, #0
 80245f8:	e788      	b.n	802450c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80245fa:	2400      	movs	r4, #0
 80245fc:	4626      	mov	r6, r4
 80245fe:	e799      	b.n	8024534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024600:	2400      	movs	r4, #0
 8024602:	e797      	b.n	8024534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024604:	463c      	mov	r4, r7
 8024606:	e795      	b.n	8024534 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024608:	2500      	movs	r5, #0
 802460a:	e7ac      	b.n	8024566 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802460c:	2300      	movs	r3, #0
 802460e:	461d      	mov	r5, r3
 8024610:	e7bd      	b.n	802458e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024612:	4663      	mov	r3, ip
 8024614:	4665      	mov	r5, ip
 8024616:	e7ba      	b.n	802458e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024618:	2300      	movs	r3, #0
 802461a:	e7b8      	b.n	802458e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802461c:	463b      	mov	r3, r7
 802461e:	e7b6      	b.n	802458e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024620:	880d      	ldrh	r5, [r1, #0]
 8024622:	b29f      	uxth	r7, r3
 8024624:	122c      	asrs	r4, r5, #8
 8024626:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802462a:	43db      	mvns	r3, r3
 802462c:	b2db      	uxtb	r3, r3
 802462e:	fb10 f007 	smulbb	r0, r0, r7
 8024632:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024636:	fb04 0403 	mla	r4, r4, r3, r0
 802463a:	b2f6      	uxtb	r6, r6
 802463c:	10e8      	asrs	r0, r5, #3
 802463e:	b2d2      	uxtb	r2, r2
 8024640:	00ed      	lsls	r5, r5, #3
 8024642:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024646:	fb12 f207 	smulbb	r2, r2, r7
 802464a:	fb16 f607 	smulbb	r6, r6, r7
 802464e:	b2ed      	uxtb	r5, r5
 8024650:	b2a4      	uxth	r4, r4
 8024652:	fb00 6603 	mla	r6, r0, r3, r6
 8024656:	fb05 2303 	mla	r3, r5, r3, r2
 802465a:	b29a      	uxth	r2, r3
 802465c:	1c63      	adds	r3, r4, #1
 802465e:	b2b0      	uxth	r0, r6
 8024660:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024664:	1c53      	adds	r3, r2, #1
 8024666:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802466a:	1c42      	adds	r2, r0, #1
 802466c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024670:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024674:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024678:	0940      	lsrs	r0, r0, #5
 802467a:	4323      	orrs	r3, r4
 802467c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024680:	4303      	orrs	r3, r0
 8024682:	800b      	strh	r3, [r1, #0]
 8024684:	e7b5      	b.n	80245f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024686:	bf00      	nop
 8024688:	2000ef2c 	.word	0x2000ef2c
 802468c:	00fff800 	.word	0x00fff800

08024690 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024694:	b097      	sub	sp, #92	; 0x5c
 8024696:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802469a:	9214      	str	r2, [sp, #80]	; 0x50
 802469c:	9309      	str	r3, [sp, #36]	; 0x24
 802469e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80246a0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80246a4:	910d      	str	r1, [sp, #52]	; 0x34
 80246a6:	930f      	str	r3, [sp, #60]	; 0x3c
 80246a8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 80246ac:	9015      	str	r0, [sp, #84]	; 0x54
 80246ae:	6850      	ldr	r0, [r2, #4]
 80246b0:	6812      	ldr	r2, [r2, #0]
 80246b2:	fb00 1303 	mla	r3, r0, r3, r1
 80246b6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80246ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246bc:	689b      	ldr	r3, [r3, #8]
 80246be:	3301      	adds	r3, #1
 80246c0:	f023 0301 	bic.w	r3, r3, #1
 80246c4:	930a      	str	r3, [sp, #40]	; 0x28
 80246c6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246c8:	681f      	ldr	r7, [r3, #0]
 80246ca:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80246cc:	2b00      	cmp	r3, #0
 80246ce:	dc03      	bgt.n	80246d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80246d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80246d2:	2b00      	cmp	r3, #0
 80246d4:	f340 8287 	ble.w	8024be6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80246d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80246de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80246e2:	1e48      	subs	r0, r1, #1
 80246e4:	f102 3cff 	add.w	ip, r2, #4294967295
 80246e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80246ea:	2b00      	cmp	r3, #0
 80246ec:	f340 80c4 	ble.w	8024878 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80246f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80246f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80246f8:	d406      	bmi.n	8024708 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80246fa:	4586      	cmp	lr, r0
 80246fc:	da04      	bge.n	8024708 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80246fe:	2b00      	cmp	r3, #0
 8024700:	db02      	blt.n	8024708 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024702:	4563      	cmp	r3, ip
 8024704:	f2c0 80b9 	blt.w	802487a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8024708:	f11e 0e01 	adds.w	lr, lr, #1
 802470c:	f100 80aa 	bmi.w	8024864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024710:	4571      	cmp	r1, lr
 8024712:	f2c0 80a7 	blt.w	8024864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024716:	3301      	adds	r3, #1
 8024718:	f100 80a4 	bmi.w	8024864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802471c:	429a      	cmp	r2, r3
 802471e:	f2c0 80a1 	blt.w	8024864 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024722:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024724:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 8024728:	930e      	str	r3, [sp, #56]	; 0x38
 802472a:	46c8      	mov	r8, r9
 802472c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802472e:	2b00      	cmp	r3, #0
 8024730:	f340 80c3 	ble.w	80248ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024734:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024736:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802473a:	1423      	asrs	r3, r4, #16
 802473c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024740:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024744:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024748:	f100 814d 	bmi.w	80249e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802474c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024750:	455b      	cmp	r3, fp
 8024752:	f280 8148 	bge.w	80249e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024756:	2800      	cmp	r0, #0
 8024758:	f2c0 8145 	blt.w	80249e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802475c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024760:	4558      	cmp	r0, fp
 8024762:	f280 8140 	bge.w	80249e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024766:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024768:	fb00 3305 	mla	r3, r0, r5, r3
 802476c:	0858      	lsrs	r0, r3, #1
 802476e:	07dd      	lsls	r5, r3, #31
 8024770:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024774:	bf54      	ite	pl
 8024776:	f00c 0c0f 	andpl.w	ip, ip, #15
 802477a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802477e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024782:	fa5f fc8c 	uxtb.w	ip, ip
 8024786:	2a00      	cmp	r2, #0
 8024788:	f000 80db 	beq.w	8024942 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802478c:	1c58      	adds	r0, r3, #1
 802478e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024792:	07c0      	lsls	r0, r0, #31
 8024794:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024798:	bf54      	ite	pl
 802479a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802479e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80247a2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80247a6:	fa5f f08e 	uxtb.w	r0, lr
 80247aa:	9010      	str	r0, [sp, #64]	; 0x40
 80247ac:	b1c9      	cbz	r1, 80247e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80247ae:	4453      	add	r3, sl
 80247b0:	0858      	lsrs	r0, r3, #1
 80247b2:	07dd      	lsls	r5, r3, #31
 80247b4:	5c38      	ldrb	r0, [r7, r0]
 80247b6:	bf54      	ite	pl
 80247b8:	f000 000f 	andpl.w	r0, r0, #15
 80247bc:	1100      	asrmi	r0, r0, #4
 80247be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80247c2:	3301      	adds	r3, #1
 80247c4:	b2c0      	uxtb	r0, r0
 80247c6:	900b      	str	r0, [sp, #44]	; 0x2c
 80247c8:	0858      	lsrs	r0, r3, #1
 80247ca:	07dd      	lsls	r5, r3, #31
 80247cc:	f817 e000 	ldrb.w	lr, [r7, r0]
 80247d0:	bf54      	ite	pl
 80247d2:	f00e 030f 	andpl.w	r3, lr, #15
 80247d6:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80247da:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80247de:	b2db      	uxtb	r3, r3
 80247e0:	9311      	str	r3, [sp, #68]	; 0x44
 80247e2:	b292      	uxth	r2, r2
 80247e4:	b289      	uxth	r1, r1
 80247e6:	fb02 f301 	mul.w	r3, r2, r1
 80247ea:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80247ee:	0112      	lsls	r2, r2, #4
 80247f0:	b289      	uxth	r1, r1
 80247f2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80247f6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80247f8:	1ad2      	subs	r2, r2, r3
 80247fa:	1a40      	subs	r0, r0, r1
 80247fc:	b292      	uxth	r2, r2
 80247fe:	436a      	muls	r2, r5
 8024800:	b280      	uxth	r0, r0
 8024802:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024806:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024808:	fb01 c102 	mla	r1, r1, r2, ip
 802480c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802480e:	fb03 1302 	mla	r3, r3, r2, r1
 8024812:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024816:	b1db      	cbz	r3, 8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024818:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802481a:	4353      	muls	r3, r2
 802481c:	1c5a      	adds	r2, r3, #1
 802481e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024822:	4ac6      	ldr	r2, [pc, #792]	; (8024b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024824:	121b      	asrs	r3, r3, #8
 8024826:	6812      	ldr	r2, [r2, #0]
 8024828:	2bff      	cmp	r3, #255	; 0xff
 802482a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802482e:	f040 8099 	bne.w	8024964 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024832:	0953      	lsrs	r3, r2, #5
 8024834:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024838:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802483c:	f02c 0c07 	bic.w	ip, ip, #7
 8024840:	ea43 0c0c 	orr.w	ip, r3, ip
 8024844:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024848:	ea4c 0202 	orr.w	r2, ip, r2
 802484c:	f8a8 2000 	strh.w	r2, [r8]
 8024850:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024852:	441c      	add	r4, r3
 8024854:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024856:	441e      	add	r6, r3
 8024858:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802485a:	3b01      	subs	r3, #1
 802485c:	f108 0802 	add.w	r8, r8, #2
 8024860:	930e      	str	r3, [sp, #56]	; 0x38
 8024862:	e763      	b.n	802472c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024864:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024866:	441c      	add	r4, r3
 8024868:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802486a:	441e      	add	r6, r3
 802486c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802486e:	3b01      	subs	r3, #1
 8024870:	9309      	str	r3, [sp, #36]	; 0x24
 8024872:	f109 0902 	add.w	r9, r9, #2
 8024876:	e737      	b.n	80246e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024878:	d024      	beq.n	80248c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802487a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802487c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802487e:	3b01      	subs	r3, #1
 8024880:	fb00 4003 	mla	r0, r0, r3, r4
 8024884:	1400      	asrs	r0, r0, #16
 8024886:	f53f af4c 	bmi.w	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802488a:	3901      	subs	r1, #1
 802488c:	4288      	cmp	r0, r1
 802488e:	f6bf af48 	bge.w	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024892:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024894:	fb01 6303 	mla	r3, r1, r3, r6
 8024898:	141b      	asrs	r3, r3, #16
 802489a:	f53f af42 	bmi.w	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802489e:	3a01      	subs	r2, #1
 80248a0:	4293      	cmp	r3, r2
 80248a2:	f6bf af3e 	bge.w	8024722 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248a6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80248aa:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80248ae:	930e      	str	r3, [sp, #56]	; 0x38
 80248b0:	46c8      	mov	r8, r9
 80248b2:	f1bb 0f00 	cmp.w	fp, #0
 80248b6:	f300 80b7 	bgt.w	8024a28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80248ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80248bc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80248c0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80248c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80248c6:	2b00      	cmp	r3, #0
 80248c8:	f340 818d 	ble.w	8024be6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80248cc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80248d4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80248da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80248de:	ee31 1a05 	vadd.f32	s2, s2, s10
 80248e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80248e6:	eef0 6a62 	vmov.f32	s13, s5
 80248ea:	ee61 7a27 	vmul.f32	s15, s2, s15
 80248ee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80248f2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80248f6:	ee16 4a90 	vmov	r4, s13
 80248fa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80248fe:	eef0 6a43 	vmov.f32	s13, s6
 8024902:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024906:	ee12 2a90 	vmov	r2, s5
 802490a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802490e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024912:	ee13 2a10 	vmov	r2, s6
 8024916:	9323      	str	r3, [sp, #140]	; 0x8c
 8024918:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802491a:	fb92 f3f3 	sdiv	r3, r2, r3
 802491e:	9324      	str	r3, [sp, #144]	; 0x90
 8024920:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024922:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024924:	3b01      	subs	r3, #1
 8024926:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802492a:	930d      	str	r3, [sp, #52]	; 0x34
 802492c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802492e:	bf08      	it	eq
 8024930:	4613      	moveq	r3, r2
 8024932:	ee16 6a90 	vmov	r6, s13
 8024936:	9309      	str	r3, [sp, #36]	; 0x24
 8024938:	eeb0 3a67 	vmov.f32	s6, s15
 802493c:	eef0 2a47 	vmov.f32	s5, s14
 8024940:	e6c3      	b.n	80246ca <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024942:	2900      	cmp	r1, #0
 8024944:	f43f af4d 	beq.w	80247e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024948:	eb0a 0003 	add.w	r0, sl, r3
 802494c:	0843      	lsrs	r3, r0, #1
 802494e:	07c0      	lsls	r0, r0, #31
 8024950:	5cfb      	ldrb	r3, [r7, r3]
 8024952:	bf54      	ite	pl
 8024954:	f003 030f 	andpl.w	r3, r3, #15
 8024958:	111b      	asrmi	r3, r3, #4
 802495a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802495e:	b2db      	uxtb	r3, r3
 8024960:	930b      	str	r3, [sp, #44]	; 0x2c
 8024962:	e73e      	b.n	80247e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024964:	f8b8 e000 	ldrh.w	lr, [r8]
 8024968:	fa1f fb83 	uxth.w	fp, r3
 802496c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024970:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024974:	43db      	mvns	r3, r3
 8024976:	b2db      	uxtb	r3, r3
 8024978:	fb11 f10b 	smulbb	r1, r1, fp
 802497c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024980:	fb00 1003 	mla	r0, r0, r3, r1
 8024984:	fa5f fc8c 	uxtb.w	ip, ip
 8024988:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802498c:	b2d2      	uxtb	r2, r2
 802498e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024992:	b280      	uxth	r0, r0
 8024994:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024998:	fb1c fc0b 	smulbb	ip, ip, fp
 802499c:	fa5f fe8e 	uxtb.w	lr, lr
 80249a0:	fb12 fb0b 	smulbb	fp, r2, fp
 80249a4:	fb01 cc03 	mla	ip, r1, r3, ip
 80249a8:	fb0e bb03 	mla	fp, lr, r3, fp
 80249ac:	1c43      	adds	r3, r0, #1
 80249ae:	fa1f fc8c 	uxth.w	ip, ip
 80249b2:	fa1f fb8b 	uxth.w	fp, fp
 80249b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80249ba:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 80249be:	f10c 0101 	add.w	r1, ip, #1
 80249c2:	f10b 0001 	add.w	r0, fp, #1
 80249c6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80249ca:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80249ce:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80249d2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80249d6:	4318      	orrs	r0, r3
 80249d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80249dc:	ea40 000c 	orr.w	r0, r0, ip
 80249e0:	f8a8 0000 	strh.w	r0, [r8]
 80249e4:	e734      	b.n	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249e6:	f113 0b01 	adds.w	fp, r3, #1
 80249ea:	f53f af31 	bmi.w	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249ee:	45dc      	cmp	ip, fp
 80249f0:	f6ff af2e 	blt.w	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249f4:	f110 0b01 	adds.w	fp, r0, #1
 80249f8:	f53f af2a 	bmi.w	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80249fc:	45de      	cmp	lr, fp
 80249fe:	f6ff af27 	blt.w	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a02:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024a04:	9302      	str	r3, [sp, #8]
 8024a06:	fa0f f38e 	sxth.w	r3, lr
 8024a0a:	9301      	str	r3, [sp, #4]
 8024a0c:	fa0f f38c 	sxth.w	r3, ip
 8024a10:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024a14:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024a18:	9300      	str	r3, [sp, #0]
 8024a1a:	463a      	mov	r2, r7
 8024a1c:	4653      	mov	r3, sl
 8024a1e:	4641      	mov	r1, r8
 8024a20:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024a22:	f7ff fd4d 	bl	80244c0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024a26:	e713      	b.n	8024850 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a28:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024a2a:	1422      	asrs	r2, r4, #16
 8024a2c:	1433      	asrs	r3, r6, #16
 8024a2e:	fb05 2303 	mla	r3, r5, r3, r2
 8024a32:	085a      	lsrs	r2, r3, #1
 8024a34:	07dd      	lsls	r5, r3, #31
 8024a36:	5cba      	ldrb	r2, [r7, r2]
 8024a38:	bf54      	ite	pl
 8024a3a:	f002 020f 	andpl.w	r2, r2, #15
 8024a3e:	1112      	asrmi	r2, r2, #4
 8024a40:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024a44:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024a48:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a4c:	b2d2      	uxtb	r2, r2
 8024a4e:	2900      	cmp	r1, #0
 8024a50:	d076      	beq.n	8024b40 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024a52:	f103 0e01 	add.w	lr, r3, #1
 8024a56:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024a5a:	f01e 0f01 	tst.w	lr, #1
 8024a5e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a62:	bf0c      	ite	eq
 8024a64:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024a68:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024a6c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a70:	fa5f f58c 	uxtb.w	r5, ip
 8024a74:	9512      	str	r5, [sp, #72]	; 0x48
 8024a76:	b300      	cbz	r0, 8024aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024a78:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024a7a:	442b      	add	r3, r5
 8024a7c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024a80:	07dd      	lsls	r5, r3, #31
 8024a82:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a86:	bf54      	ite	pl
 8024a88:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a8c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a90:	3301      	adds	r3, #1
 8024a92:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a96:	fa5f f58c 	uxtb.w	r5, ip
 8024a9a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024a9e:	950c      	str	r5, [sp, #48]	; 0x30
 8024aa0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024aa4:	07dd      	lsls	r5, r3, #31
 8024aa6:	bf54      	ite	pl
 8024aa8:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024aac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ab0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ab4:	fa5f f38c 	uxtb.w	r3, ip
 8024ab8:	9313      	str	r3, [sp, #76]	; 0x4c
 8024aba:	b289      	uxth	r1, r1
 8024abc:	b280      	uxth	r0, r0
 8024abe:	fb01 f300 	mul.w	r3, r1, r0
 8024ac2:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024ac6:	0109      	lsls	r1, r1, #4
 8024ac8:	b280      	uxth	r0, r0
 8024aca:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024ace:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024ad0:	1ac9      	subs	r1, r1, r3
 8024ad2:	ebac 0c00 	sub.w	ip, ip, r0
 8024ad6:	b289      	uxth	r1, r1
 8024ad8:	4369      	muls	r1, r5
 8024ada:	fa1f fc8c 	uxth.w	ip, ip
 8024ade:	fb02 120c 	mla	r2, r2, ip, r1
 8024ae2:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024ae4:	fb00 2001 	mla	r0, r0, r1, r2
 8024ae8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024aea:	fb03 0302 	mla	r3, r3, r2, r0
 8024aee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024af2:	b1d3      	cbz	r3, 8024b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024af4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024af6:	4353      	muls	r3, r2
 8024af8:	1c5a      	adds	r2, r3, #1
 8024afa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024afe:	4a0f      	ldr	r2, [pc, #60]	; (8024b3c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024b00:	121b      	asrs	r3, r3, #8
 8024b02:	6812      	ldr	r2, [r2, #0]
 8024b04:	2bff      	cmp	r3, #255	; 0xff
 8024b06:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024b0a:	d12d      	bne.n	8024b68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024b0c:	0953      	lsrs	r3, r2, #5
 8024b0e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024b12:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024b16:	f02c 0c07 	bic.w	ip, ip, #7
 8024b1a:	ea43 0c0c 	orr.w	ip, r3, ip
 8024b1e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024b22:	ea4c 0202 	orr.w	r2, ip, r2
 8024b26:	f8a8 2000 	strh.w	r2, [r8]
 8024b2a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b2c:	441c      	add	r4, r3
 8024b2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b30:	f108 0802 	add.w	r8, r8, #2
 8024b34:	441e      	add	r6, r3
 8024b36:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024b3a:	e6ba      	b.n	80248b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024b3c:	2000ef2c 	.word	0x2000ef2c
 8024b40:	2800      	cmp	r0, #0
 8024b42:	d0ba      	beq.n	8024aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b44:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024b46:	442b      	add	r3, r5
 8024b48:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024b4c:	07db      	lsls	r3, r3, #31
 8024b4e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024b52:	bf54      	ite	pl
 8024b54:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024b58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024b5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024b60:	fa5f f38c 	uxtb.w	r3, ip
 8024b64:	930c      	str	r3, [sp, #48]	; 0x30
 8024b66:	e7a8      	b.n	8024aba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b68:	f8b8 e000 	ldrh.w	lr, [r8]
 8024b6c:	fa1f fa83 	uxth.w	sl, r3
 8024b70:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024b74:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024b78:	43db      	mvns	r3, r3
 8024b7a:	b2db      	uxtb	r3, r3
 8024b7c:	fb11 f10a 	smulbb	r1, r1, sl
 8024b80:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024b84:	fb00 1003 	mla	r0, r0, r3, r1
 8024b88:	b2d2      	uxtb	r2, r2
 8024b8a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024b8e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024b92:	fa5f fe8e 	uxtb.w	lr, lr
 8024b96:	fb12 f20a 	smulbb	r2, r2, sl
 8024b9a:	fb0e 2203 	mla	r2, lr, r3, r2
 8024b9e:	fa5f fc8c 	uxtb.w	ip, ip
 8024ba2:	b280      	uxth	r0, r0
 8024ba4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024ba8:	b292      	uxth	r2, r2
 8024baa:	fb1c fc0a 	smulbb	ip, ip, sl
 8024bae:	fb01 cc03 	mla	ip, r1, r3, ip
 8024bb2:	1c43      	adds	r3, r0, #1
 8024bb4:	1c51      	adds	r1, r2, #1
 8024bb6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bba:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024bbe:	fa1f fc8c 	uxth.w	ip, ip
 8024bc2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024bc6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024bca:	4308      	orrs	r0, r1
 8024bcc:	f10c 0101 	add.w	r1, ip, #1
 8024bd0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024bd4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024bd8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024bdc:	ea40 000c 	orr.w	r0, r0, ip
 8024be0:	f8a8 0000 	strh.w	r0, [r8]
 8024be4:	e7a1      	b.n	8024b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024be6:	b017      	add	sp, #92	; 0x5c
 8024be8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024bec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024bec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024bf0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024bf4:	2d00      	cmp	r5, #0
 8024bf6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024bfa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024bfe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024c02:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024c06:	fb05 0e03 	mla	lr, r5, r3, r0
 8024c0a:	f2c0 80b0 	blt.w	8024d6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c0e:	45a9      	cmp	r9, r5
 8024c10:	f340 80ad 	ble.w	8024d6e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c14:	2800      	cmp	r0, #0
 8024c16:	f2c0 80a8 	blt.w	8024d6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c1a:	4580      	cmp	r8, r0
 8024c1c:	f340 80a5 	ble.w	8024d6a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c20:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024c24:	f01e 0f01 	tst.w	lr, #1
 8024c28:	5d16      	ldrb	r6, [r2, r4]
 8024c2a:	bf0c      	ite	eq
 8024c2c:	f006 060f 	andeq.w	r6, r6, #15
 8024c30:	1136      	asrne	r6, r6, #4
 8024c32:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024c36:	b2f6      	uxtb	r6, r6
 8024c38:	1c44      	adds	r4, r0, #1
 8024c3a:	f100 809b 	bmi.w	8024d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c3e:	45a0      	cmp	r8, r4
 8024c40:	f340 8098 	ble.w	8024d74 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c44:	2f00      	cmp	r7, #0
 8024c46:	f000 8097 	beq.w	8024d78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024c4a:	f10e 0a01 	add.w	sl, lr, #1
 8024c4e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024c52:	f01a 0f01 	tst.w	sl, #1
 8024c56:	5d14      	ldrb	r4, [r2, r4]
 8024c58:	bf0c      	ite	eq
 8024c5a:	f004 040f 	andeq.w	r4, r4, #15
 8024c5e:	1124      	asrne	r4, r4, #4
 8024c60:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024c64:	b2e4      	uxtb	r4, r4
 8024c66:	3501      	adds	r5, #1
 8024c68:	f100 808a 	bmi.w	8024d80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c6c:	45a9      	cmp	r9, r5
 8024c6e:	f340 8087 	ble.w	8024d80 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c72:	f1bc 0f00 	cmp.w	ip, #0
 8024c76:	f000 8086 	beq.w	8024d86 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024c7a:	2800      	cmp	r0, #0
 8024c7c:	db7e      	blt.n	8024d7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024c7e:	4580      	cmp	r8, r0
 8024c80:	dd7c      	ble.n	8024d7c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024c82:	eb03 090e 	add.w	r9, r3, lr
 8024c86:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024c8a:	f019 0f01 	tst.w	r9, #1
 8024c8e:	5d55      	ldrb	r5, [r2, r5]
 8024c90:	bf0c      	ite	eq
 8024c92:	f005 050f 	andeq.w	r5, r5, #15
 8024c96:	112d      	asrne	r5, r5, #4
 8024c98:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024c9c:	b2ed      	uxtb	r5, r5
 8024c9e:	3001      	adds	r0, #1
 8024ca0:	d474      	bmi.n	8024d8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024ca2:	4580      	cmp	r8, r0
 8024ca4:	dd72      	ble.n	8024d8c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024ca6:	2f00      	cmp	r7, #0
 8024ca8:	d072      	beq.n	8024d90 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024caa:	3301      	adds	r3, #1
 8024cac:	449e      	add	lr, r3
 8024cae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024cb2:	f01e 0f01 	tst.w	lr, #1
 8024cb6:	5cd0      	ldrb	r0, [r2, r3]
 8024cb8:	bf0c      	ite	eq
 8024cba:	f000 000f 	andeq.w	r0, r0, #15
 8024cbe:	1100      	asrne	r0, r0, #4
 8024cc0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024cc4:	b2c3      	uxtb	r3, r0
 8024cc6:	b2ba      	uxth	r2, r7
 8024cc8:	fa1f fc8c 	uxth.w	ip, ip
 8024ccc:	fb02 f00c 	mul.w	r0, r2, ip
 8024cd0:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024cd4:	0112      	lsls	r2, r2, #4
 8024cd6:	fa1f fc8c 	uxth.w	ip, ip
 8024cda:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024cde:	1a12      	subs	r2, r2, r0
 8024ce0:	eba7 070c 	sub.w	r7, r7, ip
 8024ce4:	b292      	uxth	r2, r2
 8024ce6:	b2bf      	uxth	r7, r7
 8024ce8:	4362      	muls	r2, r4
 8024cea:	fb06 2207 	mla	r2, r6, r7, r2
 8024cee:	fb0c 2505 	mla	r5, ip, r5, r2
 8024cf2:	fb00 5303 	mla	r3, r0, r3, r5
 8024cf6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024cfa:	b3a3      	cbz	r3, 8024d66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024cfc:	4a25      	ldr	r2, [pc, #148]	; (8024d94 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024cfe:	880e      	ldrh	r6, [r1, #0]
 8024d00:	6815      	ldr	r5, [r2, #0]
 8024d02:	1234      	asrs	r4, r6, #8
 8024d04:	b29a      	uxth	r2, r3
 8024d06:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024d0a:	43db      	mvns	r3, r3
 8024d0c:	b2db      	uxtb	r3, r3
 8024d0e:	fb10 f002 	smulbb	r0, r0, r2
 8024d12:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024d16:	fb04 0403 	mla	r4, r4, r3, r0
 8024d1a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024d1e:	10f0      	asrs	r0, r6, #3
 8024d20:	b2ed      	uxtb	r5, r5
 8024d22:	00f6      	lsls	r6, r6, #3
 8024d24:	fb17 f702 	smulbb	r7, r7, r2
 8024d28:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024d2c:	fb15 f202 	smulbb	r2, r5, r2
 8024d30:	b2f6      	uxtb	r6, r6
 8024d32:	b2a4      	uxth	r4, r4
 8024d34:	fb00 7003 	mla	r0, r0, r3, r7
 8024d38:	fb06 2303 	mla	r3, r6, r3, r2
 8024d3c:	b29a      	uxth	r2, r3
 8024d3e:	1c63      	adds	r3, r4, #1
 8024d40:	b280      	uxth	r0, r0
 8024d42:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024d46:	1c53      	adds	r3, r2, #1
 8024d48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d4c:	1c42      	adds	r2, r0, #1
 8024d4e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d52:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024d56:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d5a:	0940      	lsrs	r0, r0, #5
 8024d5c:	4323      	orrs	r3, r4
 8024d5e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024d62:	4303      	orrs	r3, r0
 8024d64:	800b      	strh	r3, [r1, #0]
 8024d66:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d6a:	2600      	movs	r6, #0
 8024d6c:	e764      	b.n	8024c38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024d6e:	2400      	movs	r4, #0
 8024d70:	4626      	mov	r6, r4
 8024d72:	e778      	b.n	8024c66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d74:	2400      	movs	r4, #0
 8024d76:	e776      	b.n	8024c66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d78:	463c      	mov	r4, r7
 8024d7a:	e774      	b.n	8024c66 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d7c:	2500      	movs	r5, #0
 8024d7e:	e78e      	b.n	8024c9e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024d80:	2300      	movs	r3, #0
 8024d82:	461d      	mov	r5, r3
 8024d84:	e79f      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d86:	4663      	mov	r3, ip
 8024d88:	4665      	mov	r5, ip
 8024d8a:	e79c      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d8c:	2300      	movs	r3, #0
 8024d8e:	e79a      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d90:	463b      	mov	r3, r7
 8024d92:	e798      	b.n	8024cc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024d94:	2000ef2c 	.word	0x2000ef2c

08024d98 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024d98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d9c:	b093      	sub	sp, #76	; 0x4c
 8024d9e:	461d      	mov	r5, r3
 8024da0:	920c      	str	r2, [sp, #48]	; 0x30
 8024da2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8024da4:	9107      	str	r1, [sp, #28]
 8024da6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8024daa:	9011      	str	r0, [sp, #68]	; 0x44
 8024dac:	6850      	ldr	r0, [r2, #4]
 8024dae:	6812      	ldr	r2, [r2, #0]
 8024db0:	fb00 1303 	mla	r3, r0, r3, r1
 8024db4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024db8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dba:	689b      	ldr	r3, [r3, #8]
 8024dbc:	3301      	adds	r3, #1
 8024dbe:	f023 0301 	bic.w	r3, r3, #1
 8024dc2:	9306      	str	r3, [sp, #24]
 8024dc4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024dc6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8024dca:	681f      	ldr	r7, [r3, #0]
 8024dcc:	9b07      	ldr	r3, [sp, #28]
 8024dce:	2b00      	cmp	r3, #0
 8024dd0:	dc03      	bgt.n	8024dda <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024dd2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8024dd4:	2b00      	cmp	r3, #0
 8024dd6:	f340 8267 	ble.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024dda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024ddc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024de0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024de4:	1e48      	subs	r0, r1, #1
 8024de6:	f102 3cff 	add.w	ip, r2, #4294967295
 8024dea:	2d00      	cmp	r5, #0
 8024dec:	f340 80b8 	ble.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024df0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024df4:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024df8:	d406      	bmi.n	8024e08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024dfa:	4586      	cmp	lr, r0
 8024dfc:	da04      	bge.n	8024e08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024dfe:	2b00      	cmp	r3, #0
 8024e00:	db02      	blt.n	8024e08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e02:	4563      	cmp	r3, ip
 8024e04:	f2c0 80ad 	blt.w	8024f62 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024e08:	f11e 0e01 	adds.w	lr, lr, #1
 8024e0c:	f100 80a0 	bmi.w	8024f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e10:	4571      	cmp	r1, lr
 8024e12:	f2c0 809d 	blt.w	8024f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e16:	3301      	adds	r3, #1
 8024e18:	f100 809a 	bmi.w	8024f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e1c:	429a      	cmp	r2, r3
 8024e1e:	f2c0 8097 	blt.w	8024f50 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e22:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024e26:	9509      	str	r5, [sp, #36]	; 0x24
 8024e28:	46c8      	mov	r8, r9
 8024e2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024e2c:	2b00      	cmp	r3, #0
 8024e2e:	f340 80b6 	ble.w	8024f9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024e32:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024e36:	9308      	str	r3, [sp, #32]
 8024e38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024e3a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024e3e:	1423      	asrs	r3, r4, #16
 8024e40:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e44:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024e48:	f100 813e 	bmi.w	80250c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e4c:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024e50:	455b      	cmp	r3, fp
 8024e52:	f280 8139 	bge.w	80250c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e56:	2800      	cmp	r0, #0
 8024e58:	f2c0 8136 	blt.w	80250c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e5c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024e60:	4558      	cmp	r0, fp
 8024e62:	f280 8131 	bge.w	80250c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e66:	9a06      	ldr	r2, [sp, #24]
 8024e68:	fb00 3302 	mla	r3, r0, r2, r3
 8024e6c:	0858      	lsrs	r0, r3, #1
 8024e6e:	07da      	lsls	r2, r3, #31
 8024e70:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024e74:	9a08      	ldr	r2, [sp, #32]
 8024e76:	bf54      	ite	pl
 8024e78:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024e7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024e80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e84:	fa5f fc8c 	uxtb.w	ip, ip
 8024e88:	2a00      	cmp	r2, #0
 8024e8a:	f000 80cb 	beq.w	8025024 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024e8e:	1c58      	adds	r0, r3, #1
 8024e90:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024e94:	07c0      	lsls	r0, r0, #31
 8024e96:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024e9a:	bf54      	ite	pl
 8024e9c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ea0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024ea4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024ea8:	fa5f fe8e 	uxtb.w	lr, lr
 8024eac:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8024eb0:	b1b9      	cbz	r1, 8024ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024eb2:	4453      	add	r3, sl
 8024eb4:	0858      	lsrs	r0, r3, #1
 8024eb6:	07da      	lsls	r2, r3, #31
 8024eb8:	5c38      	ldrb	r0, [r7, r0]
 8024eba:	bf54      	ite	pl
 8024ebc:	f000 000f 	andpl.w	r0, r0, #15
 8024ec0:	1100      	asrmi	r0, r0, #4
 8024ec2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024ec6:	b2c0      	uxtb	r0, r0
 8024ec8:	900a      	str	r0, [sp, #40]	; 0x28
 8024eca:	1c58      	adds	r0, r3, #1
 8024ecc:	0843      	lsrs	r3, r0, #1
 8024ece:	07c2      	lsls	r2, r0, #31
 8024ed0:	5cfb      	ldrb	r3, [r7, r3]
 8024ed2:	bf54      	ite	pl
 8024ed4:	f003 030f 	andpl.w	r3, r3, #15
 8024ed8:	111b      	asrmi	r3, r3, #4
 8024eda:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024ede:	b2db      	uxtb	r3, r3
 8024ee0:	930e      	str	r3, [sp, #56]	; 0x38
 8024ee2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024ee6:	b289      	uxth	r1, r1
 8024ee8:	fb02 f301 	mul.w	r3, r2, r1
 8024eec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024ef0:	0112      	lsls	r2, r2, #4
 8024ef2:	b289      	uxth	r1, r1
 8024ef4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024ef8:	1a40      	subs	r0, r0, r1
 8024efa:	fa1f fe80 	uxth.w	lr, r0
 8024efe:	1ad2      	subs	r2, r2, r3
 8024f00:	980d      	ldr	r0, [sp, #52]	; 0x34
 8024f02:	b292      	uxth	r2, r2
 8024f04:	4342      	muls	r2, r0
 8024f06:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024f0a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8024f0c:	fb01 c102 	mla	r1, r1, r2, ip
 8024f10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8024f12:	fb03 1302 	mla	r3, r3, r2, r1
 8024f16:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f1a:	2bff      	cmp	r3, #255	; 0xff
 8024f1c:	f040 8093 	bne.w	8025046 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024f20:	4bbe      	ldr	r3, [pc, #760]	; (802521c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f22:	681a      	ldr	r2, [r3, #0]
 8024f24:	4bbe      	ldr	r3, [pc, #760]	; (8025220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024f26:	0951      	lsrs	r1, r2, #5
 8024f28:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024f2c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8024f30:	430b      	orrs	r3, r1
 8024f32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f36:	4313      	orrs	r3, r2
 8024f38:	f8a8 3000 	strh.w	r3, [r8]
 8024f3c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024f3e:	441c      	add	r4, r3
 8024f40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f42:	441e      	add	r6, r3
 8024f44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024f46:	3b01      	subs	r3, #1
 8024f48:	f108 0802 	add.w	r8, r8, #2
 8024f4c:	9309      	str	r3, [sp, #36]	; 0x24
 8024f4e:	e76c      	b.n	8024e2a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f50:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8024f52:	441c      	add	r4, r3
 8024f54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024f56:	3d01      	subs	r5, #1
 8024f58:	441e      	add	r6, r3
 8024f5a:	f109 0902 	add.w	r9, r9, #2
 8024f5e:	e744      	b.n	8024dea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024f60:	d021      	beq.n	8024fa6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024f62:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8024f64:	1e6b      	subs	r3, r5, #1
 8024f66:	fb00 4003 	mla	r0, r0, r3, r4
 8024f6a:	1400      	asrs	r0, r0, #16
 8024f6c:	f53f af59 	bmi.w	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f70:	3901      	subs	r1, #1
 8024f72:	4288      	cmp	r0, r1
 8024f74:	f6bf af55 	bge.w	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f78:	9920      	ldr	r1, [sp, #128]	; 0x80
 8024f7a:	fb01 6303 	mla	r3, r1, r3, r6
 8024f7e:	141b      	asrs	r3, r3, #16
 8024f80:	f53f af4f 	bmi.w	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f84:	3a01      	subs	r2, #1
 8024f86:	4293      	cmp	r3, r2
 8024f88:	f6bf af4b 	bge.w	8024e22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f8c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024f90:	9308      	str	r3, [sp, #32]
 8024f92:	46a8      	mov	r8, r5
 8024f94:	46ce      	mov	lr, r9
 8024f96:	f1b8 0f00 	cmp.w	r8, #0
 8024f9a:	f300 80b5 	bgt.w	8025108 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024f9e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024fa2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024fa6:	9b07      	ldr	r3, [sp, #28]
 8024fa8:	2b00      	cmp	r3, #0
 8024faa:	f340 817d 	ble.w	80252a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024fae:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024fb2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024fb6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024fba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024fbc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024fc4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024fc8:	eef0 6a62 	vmov.f32	s13, s5
 8024fcc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024fd4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024fd8:	ee16 4a90 	vmov	r4, s13
 8024fdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024fe0:	eef0 6a43 	vmov.f32	s13, s6
 8024fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024fe8:	ee12 2a90 	vmov	r2, s5
 8024fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024ff0:	fb92 f3f3 	sdiv	r3, r2, r3
 8024ff4:	ee13 2a10 	vmov	r2, s6
 8024ff8:	931f      	str	r3, [sp, #124]	; 0x7c
 8024ffa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8024ffc:	fb92 f3f3 	sdiv	r3, r2, r3
 8025000:	9320      	str	r3, [sp, #128]	; 0x80
 8025002:	9b07      	ldr	r3, [sp, #28]
 8025004:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025006:	3b01      	subs	r3, #1
 8025008:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802500c:	9307      	str	r3, [sp, #28]
 802500e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8025010:	ee16 6a90 	vmov	r6, s13
 8025014:	bf14      	ite	ne
 8025016:	461d      	movne	r5, r3
 8025018:	4615      	moveq	r5, r2
 802501a:	eeb0 3a67 	vmov.f32	s6, s15
 802501e:	eef0 2a47 	vmov.f32	s5, s14
 8025022:	e6d3      	b.n	8024dcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025024:	2900      	cmp	r1, #0
 8025026:	f43f af5c 	beq.w	8024ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802502a:	eb0a 0003 	add.w	r0, sl, r3
 802502e:	0843      	lsrs	r3, r0, #1
 8025030:	07c0      	lsls	r0, r0, #31
 8025032:	5cfb      	ldrb	r3, [r7, r3]
 8025034:	bf54      	ite	pl
 8025036:	f003 030f 	andpl.w	r3, r3, #15
 802503a:	111b      	asrmi	r3, r3, #4
 802503c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025040:	b2db      	uxtb	r3, r3
 8025042:	930a      	str	r3, [sp, #40]	; 0x28
 8025044:	e74d      	b.n	8024ee2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025046:	2b00      	cmp	r3, #0
 8025048:	f43f af78 	beq.w	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802504c:	4a73      	ldr	r2, [pc, #460]	; (802521c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802504e:	f8b8 c000 	ldrh.w	ip, [r8]
 8025052:	6810      	ldr	r0, [r2, #0]
 8025054:	fa1f fe83 	uxth.w	lr, r3
 8025058:	ea4f 212c 	mov.w	r1, ip, asr #8
 802505c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025060:	43db      	mvns	r3, r3
 8025062:	b2db      	uxtb	r3, r3
 8025064:	fb12 f20e 	smulbb	r2, r2, lr
 8025068:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802506c:	fb01 2103 	mla	r1, r1, r3, r2
 8025070:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025074:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025078:	b2c0      	uxtb	r0, r0
 802507a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802507e:	fb1b fb0e 	smulbb	fp, fp, lr
 8025082:	b289      	uxth	r1, r1
 8025084:	fb10 fe0e 	smulbb	lr, r0, lr
 8025088:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802508c:	fa5f fc8c 	uxtb.w	ip, ip
 8025090:	fb02 b203 	mla	r2, r2, r3, fp
 8025094:	1c48      	adds	r0, r1, #1
 8025096:	fb0c e303 	mla	r3, ip, r3, lr
 802509a:	b292      	uxth	r2, r2
 802509c:	b29b      	uxth	r3, r3
 802509e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80250a2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80250a6:	f102 0b01 	add.w	fp, r2, #1
 80250aa:	1c59      	adds	r1, r3, #1
 80250ac:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80250b0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80250b4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80250b8:	0952      	lsrs	r2, r2, #5
 80250ba:	4301      	orrs	r1, r0
 80250bc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80250c0:	4311      	orrs	r1, r2
 80250c2:	f8a8 1000 	strh.w	r1, [r8]
 80250c6:	e739      	b.n	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250c8:	f113 0b01 	adds.w	fp, r3, #1
 80250cc:	f53f af36 	bmi.w	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250d0:	45dc      	cmp	ip, fp
 80250d2:	f6ff af33 	blt.w	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250d6:	f110 0b01 	adds.w	fp, r0, #1
 80250da:	f53f af2f 	bmi.w	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250de:	45de      	cmp	lr, fp
 80250e0:	f6ff af2c 	blt.w	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250e4:	9a08      	ldr	r2, [sp, #32]
 80250e6:	9302      	str	r3, [sp, #8]
 80250e8:	fa0f f38e 	sxth.w	r3, lr
 80250ec:	9301      	str	r3, [sp, #4]
 80250ee:	fa0f f38c 	sxth.w	r3, ip
 80250f2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80250f6:	9105      	str	r1, [sp, #20]
 80250f8:	9300      	str	r3, [sp, #0]
 80250fa:	463a      	mov	r2, r7
 80250fc:	4653      	mov	r3, sl
 80250fe:	4641      	mov	r1, r8
 8025100:	9811      	ldr	r0, [sp, #68]	; 0x44
 8025102:	f7ff fd73 	bl	8024bec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8025106:	e719      	b.n	8024f3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025108:	9906      	ldr	r1, [sp, #24]
 802510a:	1422      	asrs	r2, r4, #16
 802510c:	1433      	asrs	r3, r6, #16
 802510e:	fb01 2303 	mla	r3, r1, r3, r2
 8025112:	085a      	lsrs	r2, r3, #1
 8025114:	07d9      	lsls	r1, r3, #31
 8025116:	5cba      	ldrb	r2, [r7, r2]
 8025118:	bf54      	ite	pl
 802511a:	f002 020f 	andpl.w	r2, r2, #15
 802511e:	1112      	asrmi	r2, r2, #4
 8025120:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025124:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8025128:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802512c:	b2d2      	uxtb	r2, r2
 802512e:	2800      	cmp	r0, #0
 8025130:	d062      	beq.n	80251f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8025132:	f103 0a01 	add.w	sl, r3, #1
 8025136:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802513a:	f01a 0f01 	tst.w	sl, #1
 802513e:	5c79      	ldrb	r1, [r7, r1]
 8025140:	bf0c      	ite	eq
 8025142:	f001 010f 	andeq.w	r1, r1, #15
 8025146:	1109      	asrne	r1, r1, #4
 8025148:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802514c:	b2c9      	uxtb	r1, r1
 802514e:	910f      	str	r1, [sp, #60]	; 0x3c
 8025150:	f1bc 0f00 	cmp.w	ip, #0
 8025154:	d019      	beq.n	802518a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025156:	9908      	ldr	r1, [sp, #32]
 8025158:	440b      	add	r3, r1
 802515a:	0859      	lsrs	r1, r3, #1
 802515c:	f013 0f01 	tst.w	r3, #1
 8025160:	5c79      	ldrb	r1, [r7, r1]
 8025162:	bf0c      	ite	eq
 8025164:	f001 010f 	andeq.w	r1, r1, #15
 8025168:	1109      	asrne	r1, r1, #4
 802516a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802516e:	b2c9      	uxtb	r1, r1
 8025170:	3301      	adds	r3, #1
 8025172:	910b      	str	r1, [sp, #44]	; 0x2c
 8025174:	0859      	lsrs	r1, r3, #1
 8025176:	07db      	lsls	r3, r3, #31
 8025178:	5c79      	ldrb	r1, [r7, r1]
 802517a:	bf54      	ite	pl
 802517c:	f001 010f 	andpl.w	r1, r1, #15
 8025180:	1109      	asrmi	r1, r1, #4
 8025182:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025186:	b2c9      	uxtb	r1, r1
 8025188:	9110      	str	r1, [sp, #64]	; 0x40
 802518a:	b280      	uxth	r0, r0
 802518c:	fa1f fc8c 	uxth.w	ip, ip
 8025190:	fb00 f30c 	mul.w	r3, r0, ip
 8025194:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025198:	0100      	lsls	r0, r0, #4
 802519a:	fa1f fc8c 	uxth.w	ip, ip
 802519e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80251a2:	eba1 010c 	sub.w	r1, r1, ip
 80251a6:	fa1f fa81 	uxth.w	sl, r1
 80251aa:	1ac0      	subs	r0, r0, r3
 80251ac:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80251ae:	b280      	uxth	r0, r0
 80251b0:	4348      	muls	r0, r1
 80251b2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80251b4:	fb02 020a 	mla	r2, r2, sl, r0
 80251b8:	fb0c 2c01 	mla	ip, ip, r1, r2
 80251bc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80251be:	fb03 c302 	mla	r3, r3, r2, ip
 80251c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251c6:	2bff      	cmp	r3, #255	; 0xff
 80251c8:	d12c      	bne.n	8025224 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80251ca:	4b14      	ldr	r3, [pc, #80]	; (802521c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251cc:	681a      	ldr	r2, [r3, #0]
 80251ce:	4b14      	ldr	r3, [pc, #80]	; (8025220 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80251d0:	0951      	lsrs	r1, r2, #5
 80251d2:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80251d6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80251da:	430b      	orrs	r3, r1
 80251dc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80251e0:	4313      	orrs	r3, r2
 80251e2:	f8ae 3000 	strh.w	r3, [lr]
 80251e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251e8:	441c      	add	r4, r3
 80251ea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251ec:	f10e 0e02 	add.w	lr, lr, #2
 80251f0:	441e      	add	r6, r3
 80251f2:	f108 38ff 	add.w	r8, r8, #4294967295
 80251f6:	e6ce      	b.n	8024f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80251f8:	f1bc 0f00 	cmp.w	ip, #0
 80251fc:	d0c5      	beq.n	802518a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80251fe:	9908      	ldr	r1, [sp, #32]
 8025200:	440b      	add	r3, r1
 8025202:	0859      	lsrs	r1, r3, #1
 8025204:	07db      	lsls	r3, r3, #31
 8025206:	5c79      	ldrb	r1, [r7, r1]
 8025208:	bf54      	ite	pl
 802520a:	f001 010f 	andpl.w	r1, r1, #15
 802520e:	1109      	asrmi	r1, r1, #4
 8025210:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025214:	b2c9      	uxtb	r1, r1
 8025216:	910b      	str	r1, [sp, #44]	; 0x2c
 8025218:	e7b7      	b.n	802518a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802521a:	bf00      	nop
 802521c:	2000ef2c 	.word	0x2000ef2c
 8025220:	fffff800 	.word	0xfffff800
 8025224:	2b00      	cmp	r3, #0
 8025226:	d0de      	beq.n	80251e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025228:	4a21      	ldr	r2, [pc, #132]	; (80252b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802522a:	f8be c000 	ldrh.w	ip, [lr]
 802522e:	6810      	ldr	r0, [r2, #0]
 8025230:	fa1f fa83 	uxth.w	sl, r3
 8025234:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025238:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802523c:	43db      	mvns	r3, r3
 802523e:	b2db      	uxtb	r3, r3
 8025240:	fb12 f20a 	smulbb	r2, r2, sl
 8025244:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8025248:	fb01 2103 	mla	r1, r1, r3, r2
 802524c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025250:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025254:	b2c0      	uxtb	r0, r0
 8025256:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802525a:	fa5f fc8c 	uxtb.w	ip, ip
 802525e:	fb10 f00a 	smulbb	r0, r0, sl
 8025262:	fb0c 0003 	mla	r0, ip, r3, r0
 8025266:	b289      	uxth	r1, r1
 8025268:	fb1b fb0a 	smulbb	fp, fp, sl
 802526c:	b280      	uxth	r0, r0
 802526e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025272:	fb02 b203 	mla	r2, r2, r3, fp
 8025276:	1c4b      	adds	r3, r1, #1
 8025278:	f100 0b01 	add.w	fp, r0, #1
 802527c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025280:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025284:	b292      	uxth	r2, r2
 8025286:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802528a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802528e:	ea4b 0101 	orr.w	r1, fp, r1
 8025292:	f102 0b01 	add.w	fp, r2, #1
 8025296:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802529a:	0952      	lsrs	r2, r2, #5
 802529c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80252a0:	4311      	orrs	r1, r2
 80252a2:	f8ae 1000 	strh.w	r1, [lr]
 80252a6:	e79e      	b.n	80251e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80252a8:	b013      	add	sp, #76	; 0x4c
 80252aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252ae:	bf00      	nop
 80252b0:	2000ef2c 	.word	0x2000ef2c

080252b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80252b4:	b570      	push	{r4, r5, r6, lr}
 80252b6:	1208      	asrs	r0, r1, #8
 80252b8:	b29e      	uxth	r6, r3
 80252ba:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80252be:	1213      	asrs	r3, r2, #8
 80252c0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80252c4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80252c8:	fb13 f305 	smulbb	r3, r3, r5
 80252cc:	fb10 f006 	smulbb	r0, r0, r6
 80252d0:	4418      	add	r0, r3
 80252d2:	10cc      	asrs	r4, r1, #3
 80252d4:	10d3      	asrs	r3, r2, #3
 80252d6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80252da:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80252de:	fb13 f305 	smulbb	r3, r3, r5
 80252e2:	fb14 f406 	smulbb	r4, r4, r6
 80252e6:	00c9      	lsls	r1, r1, #3
 80252e8:	00d2      	lsls	r2, r2, #3
 80252ea:	441c      	add	r4, r3
 80252ec:	b2d2      	uxtb	r2, r2
 80252ee:	b2cb      	uxtb	r3, r1
 80252f0:	fb12 f205 	smulbb	r2, r2, r5
 80252f4:	b280      	uxth	r0, r0
 80252f6:	fb13 f306 	smulbb	r3, r3, r6
 80252fa:	4413      	add	r3, r2
 80252fc:	1c42      	adds	r2, r0, #1
 80252fe:	b29b      	uxth	r3, r3
 8025300:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025304:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 8025308:	1c58      	adds	r0, r3, #1
 802530a:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802530e:	b2a4      	uxth	r4, r4
 8025310:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025314:	4310      	orrs	r0, r2
 8025316:	1c62      	adds	r2, r4, #1
 8025318:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 802531c:	0964      	lsrs	r4, r4, #5
 802531e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025322:	4320      	orrs	r0, r4
 8025324:	bd70      	pop	{r4, r5, r6, pc}
	...

08025328 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8025328:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802532c:	b08f      	sub	sp, #60	; 0x3c
 802532e:	461c      	mov	r4, r3
 8025330:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025334:	9004      	str	r0, [sp, #16]
 8025336:	460d      	mov	r5, r1
 8025338:	4616      	mov	r6, r2
 802533a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802533c:	2f00      	cmp	r7, #0
 802533e:	f000 80f6 	beq.w	802552e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025342:	6820      	ldr	r0, [r4, #0]
 8025344:	6861      	ldr	r1, [r4, #4]
 8025346:	aa0a      	add	r2, sp, #40	; 0x28
 8025348:	c203      	stmia	r2!, {r0, r1}
 802534a:	6818      	ldr	r0, [r3, #0]
 802534c:	6859      	ldr	r1, [r3, #4]
 802534e:	aa0c      	add	r2, sp, #48	; 0x30
 8025350:	c203      	stmia	r2!, {r0, r1}
 8025352:	a80a      	add	r0, sp, #40	; 0x28
 8025354:	f7ef fa9c 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025358:	4621      	mov	r1, r4
 802535a:	a80c      	add	r0, sp, #48	; 0x30
 802535c:	f7ef fadc 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025360:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025364:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025368:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802536c:	f002 0301 	and.w	r3, r2, #1
 8025370:	9306      	str	r3, [sp, #24]
 8025372:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025376:	f003 0101 	and.w	r1, r3, #1
 802537a:	9105      	str	r1, [sp, #20]
 802537c:	9805      	ldr	r0, [sp, #20]
 802537e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025382:	4403      	add	r3, r0
 8025384:	fb01 2303 	mla	r3, r1, r3, r2
 8025388:	f04f 0802 	mov.w	r8, #2
 802538c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025390:	441d      	add	r5, r3
 8025392:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025396:	441a      	add	r2, r3
 8025398:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802539c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80253a0:	4419      	add	r1, r3
 80253a2:	4b64      	ldr	r3, [pc, #400]	; (8025534 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80253a4:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 80253a8:	6818      	ldr	r0, [r3, #0]
 80253aa:	6803      	ldr	r3, [r0, #0]
 80253ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80253ae:	4798      	blx	r3
 80253b0:	4a61      	ldr	r2, [pc, #388]	; (8025538 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80253b2:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 80253b6:	8813      	ldrh	r3, [r2, #0]
 80253b8:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 80253bc:	2fff      	cmp	r7, #255	; 0xff
 80253be:	fb03 a404 	mla	r4, r3, r4, sl
 80253c2:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80253c6:	f106 0604 	add.w	r6, r6, #4
 80253ca:	4611      	mov	r1, r2
 80253cc:	fb03 fb0b 	mul.w	fp, r3, fp
 80253d0:	d06b      	beq.n	80254aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80253d2:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 80253d6:	9303      	str	r3, [sp, #12]
 80253d8:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 80253dc:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80253e0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80253e4:	9b07      	ldr	r3, [sp, #28]
 80253e6:	42a3      	cmp	r3, r4
 80253e8:	f240 809c 	bls.w	8025524 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80253ec:	9b06      	ldr	r3, [sp, #24]
 80253ee:	2b00      	cmp	r3, #0
 80253f0:	d039      	beq.n	8025466 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80253f2:	782b      	ldrb	r3, [r5, #0]
 80253f4:	8822      	ldrh	r2, [r4, #0]
 80253f6:	9804      	ldr	r0, [sp, #16]
 80253f8:	f003 030f 	and.w	r3, r3, #15
 80253fc:	f105 0801 	add.w	r8, r5, #1
 8025400:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025404:	9b03      	ldr	r3, [sp, #12]
 8025406:	9300      	str	r3, [sp, #0]
 8025408:	463b      	mov	r3, r7
 802540a:	f7ff ff53 	bl	80252b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 802540e:	f824 0b02 	strh.w	r0, [r4], #2
 8025412:	f109 3bff 	add.w	fp, r9, #4294967295
 8025416:	f1bb 0f01 	cmp.w	fp, #1
 802541a:	46a2      	mov	sl, r4
 802541c:	f104 0404 	add.w	r4, r4, #4
 8025420:	dd24      	ble.n	802546c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025422:	f898 3000 	ldrb.w	r3, [r8]
 8025426:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802542a:	9804      	ldr	r0, [sp, #16]
 802542c:	091b      	lsrs	r3, r3, #4
 802542e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025432:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025436:	9b03      	ldr	r3, [sp, #12]
 8025438:	9300      	str	r3, [sp, #0]
 802543a:	463b      	mov	r3, r7
 802543c:	f7ff ff3a 	bl	80252b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025440:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025444:	f818 3b01 	ldrb.w	r3, [r8], #1
 8025448:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802544c:	9804      	ldr	r0, [sp, #16]
 802544e:	f003 030f 	and.w	r3, r3, #15
 8025452:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025456:	9b03      	ldr	r3, [sp, #12]
 8025458:	9300      	str	r3, [sp, #0]
 802545a:	463b      	mov	r3, r7
 802545c:	f7ff ff2a 	bl	80252b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025460:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025464:	e7d7      	b.n	8025416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025466:	46a8      	mov	r8, r5
 8025468:	46cb      	mov	fp, r9
 802546a:	e7d4      	b.n	8025416 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802546c:	d10e      	bne.n	802548c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802546e:	f898 3000 	ldrb.w	r3, [r8]
 8025472:	f8ba 2000 	ldrh.w	r2, [sl]
 8025476:	9804      	ldr	r0, [sp, #16]
 8025478:	091b      	lsrs	r3, r3, #4
 802547a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802547e:	9b03      	ldr	r3, [sp, #12]
 8025480:	9300      	str	r3, [sp, #0]
 8025482:	463b      	mov	r3, r7
 8025484:	f7ff ff16 	bl	80252b4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025488:	f82a 0b02 	strh.w	r0, [sl], #2
 802548c:	9b08      	ldr	r3, [sp, #32]
 802548e:	9a05      	ldr	r2, [sp, #20]
 8025490:	881c      	ldrh	r4, [r3, #0]
 8025492:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025496:	eba4 0409 	sub.w	r4, r4, r9
 802549a:	4413      	add	r3, r2
 802549c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80254a0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80254a2:	fb93 f3f2 	sdiv	r3, r3, r2
 80254a6:	441d      	add	r5, r3
 80254a8:	e79c      	b.n	80253e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80254aa:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80254ae:	45a3      	cmp	fp, r4
 80254b0:	d938      	bls.n	8025524 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80254b2:	9b06      	ldr	r3, [sp, #24]
 80254b4:	b1f3      	cbz	r3, 80254f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80254b6:	782b      	ldrb	r3, [r5, #0]
 80254b8:	f003 030f 	and.w	r3, r3, #15
 80254bc:	1c6a      	adds	r2, r5, #1
 80254be:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80254c2:	8023      	strh	r3, [r4, #0]
 80254c4:	f109 30ff 	add.w	r0, r9, #4294967295
 80254c8:	3402      	adds	r4, #2
 80254ca:	2801      	cmp	r0, #1
 80254cc:	4623      	mov	r3, r4
 80254ce:	f104 0404 	add.w	r4, r4, #4
 80254d2:	dd12      	ble.n	80254fa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80254d4:	7813      	ldrb	r3, [r2, #0]
 80254d6:	091b      	lsrs	r3, r3, #4
 80254d8:	3802      	subs	r0, #2
 80254da:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80254de:	f824 3c04 	strh.w	r3, [r4, #-4]
 80254e2:	f812 3b01 	ldrb.w	r3, [r2], #1
 80254e6:	f003 030f 	and.w	r3, r3, #15
 80254ea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80254ee:	f824 3c02 	strh.w	r3, [r4, #-2]
 80254f2:	e7ea      	b.n	80254ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80254f4:	462a      	mov	r2, r5
 80254f6:	4648      	mov	r0, r9
 80254f8:	e7e7      	b.n	80254ca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80254fa:	d106      	bne.n	802550a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80254fc:	7812      	ldrb	r2, [r2, #0]
 80254fe:	0912      	lsrs	r2, r2, #4
 8025500:	3302      	adds	r3, #2
 8025502:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025506:	f823 2c02 	strh.w	r2, [r3, #-2]
 802550a:	880c      	ldrh	r4, [r1, #0]
 802550c:	9a05      	ldr	r2, [sp, #20]
 802550e:	eba4 0409 	sub.w	r4, r4, r9
 8025512:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025516:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802551a:	4413      	add	r3, r2
 802551c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025520:	441d      	add	r5, r3
 8025522:	e7c4      	b.n	80254ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025524:	4b03      	ldr	r3, [pc, #12]	; (8025534 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025526:	6818      	ldr	r0, [r3, #0]
 8025528:	6803      	ldr	r3, [r0, #0]
 802552a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802552c:	4798      	blx	r3
 802552e:	b00f      	add	sp, #60	; 0x3c
 8025530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025534:	2000ef1c 	.word	0x2000ef1c
 8025538:	2000ef16 	.word	0x2000ef16

0802553c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802553c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802553e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025542:	2dff      	cmp	r5, #255	; 0xff
 8025544:	ea4f 2711 	mov.w	r7, r1, lsr #8
 8025548:	d10c      	bne.n	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802554a:	2bff      	cmp	r3, #255	; 0xff
 802554c:	d10a      	bne.n	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802554e:	4b25      	ldr	r3, [pc, #148]	; (80255e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025550:	0948      	lsrs	r0, r1, #5
 8025552:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025556:	403b      	ands	r3, r7
 8025558:	4318      	orrs	r0, r3
 802555a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802555e:	4308      	orrs	r0, r1
 8025560:	b280      	uxth	r0, r0
 8025562:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025564:	fb15 f503 	smulbb	r5, r5, r3
 8025568:	b2ab      	uxth	r3, r5
 802556a:	1c5d      	adds	r5, r3, #1
 802556c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025570:	1214      	asrs	r4, r2, #8
 8025572:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025576:	fa1f fc85 	uxth.w	ip, r5
 802557a:	10d6      	asrs	r6, r2, #3
 802557c:	00d0      	lsls	r0, r2, #3
 802557e:	43ed      	mvns	r5, r5
 8025580:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025584:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025588:	b2eb      	uxtb	r3, r5
 802558a:	b2c0      	uxtb	r0, r0
 802558c:	fb12 f20c 	smulbb	r2, r2, ip
 8025590:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025594:	fb04 2403 	mla	r4, r4, r3, r2
 8025598:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802559c:	b2c8      	uxtb	r0, r1
 802559e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80255a2:	b2fd      	uxtb	r5, r7
 80255a4:	fb10 f00c 	smulbb	r0, r0, ip
 80255a8:	b2a4      	uxth	r4, r4
 80255aa:	fb02 0003 	mla	r0, r2, r3, r0
 80255ae:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80255b2:	fb15 f50c 	smulbb	r5, r5, ip
 80255b6:	fb06 5503 	mla	r5, r6, r3, r5
 80255ba:	b283      	uxth	r3, r0
 80255bc:	1c60      	adds	r0, r4, #1
 80255be:	b2ad      	uxth	r5, r5
 80255c0:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80255c4:	1c58      	adds	r0, r3, #1
 80255c6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255ca:	1c6b      	adds	r3, r5, #1
 80255cc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80255d0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80255d4:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80255d8:	096d      	lsrs	r5, r5, #5
 80255da:	4320      	orrs	r0, r4
 80255dc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80255e0:	4328      	orrs	r0, r5
 80255e2:	e7be      	b.n	8025562 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 80255e4:	00fff800 	.word	0x00fff800

080255e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80255e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255ec:	461c      	mov	r4, r3
 80255ee:	b08d      	sub	sp, #52	; 0x34
 80255f0:	460d      	mov	r5, r1
 80255f2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80255f4:	6861      	ldr	r1, [r4, #4]
 80255f6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80255fa:	4680      	mov	r8, r0
 80255fc:	6820      	ldr	r0, [r4, #0]
 80255fe:	4616      	mov	r6, r2
 8025600:	aa08      	add	r2, sp, #32
 8025602:	c203      	stmia	r2!, {r0, r1}
 8025604:	6818      	ldr	r0, [r3, #0]
 8025606:	6859      	ldr	r1, [r3, #4]
 8025608:	aa0a      	add	r2, sp, #40	; 0x28
 802560a:	c203      	stmia	r2!, {r0, r1}
 802560c:	a808      	add	r0, sp, #32
 802560e:	f7ef f93f 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025612:	4621      	mov	r1, r4
 8025614:	a80a      	add	r0, sp, #40	; 0x28
 8025616:	f7ef f97f 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802561a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 802561e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8025622:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8025626:	f002 0301 	and.w	r3, r2, #1
 802562a:	9303      	str	r3, [sp, #12]
 802562c:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8025630:	f003 0101 	and.w	r1, r3, #1
 8025634:	9102      	str	r1, [sp, #8]
 8025636:	9802      	ldr	r0, [sp, #8]
 8025638:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 802563c:	4403      	add	r3, r0
 802563e:	fb01 2303 	mla	r3, r1, r3, r2
 8025642:	f04f 0a02 	mov.w	sl, #2
 8025646:	fb93 f3fa 	sdiv	r3, r3, sl
 802564a:	441d      	add	r5, r3
 802564c:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025650:	441a      	add	r2, r3
 8025652:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025656:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802565a:	4a3f      	ldr	r2, [pc, #252]	; (8025758 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802565c:	9205      	str	r2, [sp, #20]
 802565e:	4419      	add	r1, r3
 8025660:	6810      	ldr	r0, [r2, #0]
 8025662:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025666:	6803      	ldr	r3, [r0, #0]
 8025668:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802566a:	4798      	blx	r3
 802566c:	4b3b      	ldr	r3, [pc, #236]	; (802575c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802566e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025672:	8819      	ldrh	r1, [r3, #0]
 8025674:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025678:	fb01 c404 	mla	r4, r1, r4, ip
 802567c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025680:	434f      	muls	r7, r1
 8025682:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025686:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802568a:	3604      	adds	r6, #4
 802568c:	9204      	str	r2, [sp, #16]
 802568e:	9b04      	ldr	r3, [sp, #16]
 8025690:	429c      	cmp	r4, r3
 8025692:	d258      	bcs.n	8025746 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025694:	9b03      	ldr	r3, [sp, #12]
 8025696:	2b00      	cmp	r3, #0
 8025698:	d034      	beq.n	8025704 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802569a:	782b      	ldrb	r3, [r5, #0]
 802569c:	f003 030f 	and.w	r3, r3, #15
 80256a0:	1c6f      	adds	r7, r5, #1
 80256a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256a6:	0e0b      	lsrs	r3, r1, #24
 80256a8:	d006      	beq.n	80256b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80256aa:	8822      	ldrh	r2, [r4, #0]
 80256ac:	9300      	str	r3, [sp, #0]
 80256ae:	4640      	mov	r0, r8
 80256b0:	464b      	mov	r3, r9
 80256b2:	f7ff ff43 	bl	802553c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256b6:	8020      	strh	r0, [r4, #0]
 80256b8:	3402      	adds	r4, #2
 80256ba:	f10b 3aff 	add.w	sl, fp, #4294967295
 80256be:	f1ba 0f01 	cmp.w	sl, #1
 80256c2:	dd22      	ble.n	802570a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80256c4:	783b      	ldrb	r3, [r7, #0]
 80256c6:	091b      	lsrs	r3, r3, #4
 80256c8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256cc:	0e0b      	lsrs	r3, r1, #24
 80256ce:	d006      	beq.n	80256de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80256d0:	8822      	ldrh	r2, [r4, #0]
 80256d2:	9300      	str	r3, [sp, #0]
 80256d4:	4640      	mov	r0, r8
 80256d6:	464b      	mov	r3, r9
 80256d8:	f7ff ff30 	bl	802553c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256dc:	8020      	strh	r0, [r4, #0]
 80256de:	f817 3b01 	ldrb.w	r3, [r7], #1
 80256e2:	f003 030f 	and.w	r3, r3, #15
 80256e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256ea:	0e0b      	lsrs	r3, r1, #24
 80256ec:	d006      	beq.n	80256fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80256ee:	8862      	ldrh	r2, [r4, #2]
 80256f0:	9300      	str	r3, [sp, #0]
 80256f2:	4640      	mov	r0, r8
 80256f4:	464b      	mov	r3, r9
 80256f6:	f7ff ff21 	bl	802553c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256fa:	8060      	strh	r0, [r4, #2]
 80256fc:	3404      	adds	r4, #4
 80256fe:	f1aa 0a02 	sub.w	sl, sl, #2
 8025702:	e7dc      	b.n	80256be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025704:	462f      	mov	r7, r5
 8025706:	46da      	mov	sl, fp
 8025708:	e7d9      	b.n	80256be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802570a:	d10d      	bne.n	8025728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802570c:	783b      	ldrb	r3, [r7, #0]
 802570e:	091b      	lsrs	r3, r3, #4
 8025710:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025714:	0e0b      	lsrs	r3, r1, #24
 8025716:	d006      	beq.n	8025726 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025718:	8822      	ldrh	r2, [r4, #0]
 802571a:	9300      	str	r3, [sp, #0]
 802571c:	4640      	mov	r0, r8
 802571e:	464b      	mov	r3, r9
 8025720:	f7ff ff0c 	bl	802553c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025724:	8020      	strh	r0, [r4, #0]
 8025726:	3402      	adds	r4, #2
 8025728:	9b06      	ldr	r3, [sp, #24]
 802572a:	9a02      	ldr	r2, [sp, #8]
 802572c:	881b      	ldrh	r3, [r3, #0]
 802572e:	eba3 030b 	sub.w	r3, r3, fp
 8025732:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025736:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 802573a:	4413      	add	r3, r2
 802573c:	9a07      	ldr	r2, [sp, #28]
 802573e:	fb93 f3f2 	sdiv	r3, r3, r2
 8025742:	441d      	add	r5, r3
 8025744:	e7a3      	b.n	802568e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025746:	9b05      	ldr	r3, [sp, #20]
 8025748:	6818      	ldr	r0, [r3, #0]
 802574a:	6803      	ldr	r3, [r0, #0]
 802574c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802574e:	4798      	blx	r3
 8025750:	b00d      	add	sp, #52	; 0x34
 8025752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025756:	bf00      	nop
 8025758:	2000ef1c 	.word	0x2000ef1c
 802575c:	2000ef16 	.word	0x2000ef16

08025760 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025760:	b570      	push	{r4, r5, r6, lr}
 8025762:	1214      	asrs	r4, r2, #8
 8025764:	788d      	ldrb	r5, [r1, #2]
 8025766:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802576a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802576e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025772:	fb15 f503 	smulbb	r5, r5, r3
 8025776:	fb04 5506 	mla	r5, r4, r6, r5
 802577a:	10d0      	asrs	r0, r2, #3
 802577c:	784c      	ldrb	r4, [r1, #1]
 802577e:	7809      	ldrb	r1, [r1, #0]
 8025780:	00d2      	lsls	r2, r2, #3
 8025782:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025786:	b2d2      	uxtb	r2, r2
 8025788:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802578c:	fb14 f403 	smulbb	r4, r4, r3
 8025790:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025794:	fb11 f303 	smulbb	r3, r1, r3
 8025798:	fb00 4406 	mla	r4, r0, r6, r4
 802579c:	fb02 3306 	mla	r3, r2, r6, r3
 80257a0:	b2ad      	uxth	r5, r5
 80257a2:	b29b      	uxth	r3, r3
 80257a4:	b2a4      	uxth	r4, r4
 80257a6:	1c68      	adds	r0, r5, #1
 80257a8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80257ac:	1c62      	adds	r2, r4, #1
 80257ae:	1c58      	adds	r0, r3, #1
 80257b0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80257b4:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80257b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 80257bc:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80257c0:	0964      	lsrs	r4, r4, #5
 80257c2:	4328      	orrs	r0, r5
 80257c4:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80257c8:	4320      	orrs	r0, r4
 80257ca:	bd70      	pop	{r4, r5, r6, pc}

080257cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80257cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257d0:	b08f      	sub	sp, #60	; 0x3c
 80257d2:	461c      	mov	r4, r3
 80257d4:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80257d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80257da:	4682      	mov	sl, r0
 80257dc:	460e      	mov	r6, r1
 80257de:	4615      	mov	r5, r2
 80257e0:	2f00      	cmp	r7, #0
 80257e2:	f000 8142 	beq.w	8025a6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 80257e6:	6820      	ldr	r0, [r4, #0]
 80257e8:	6861      	ldr	r1, [r4, #4]
 80257ea:	aa0a      	add	r2, sp, #40	; 0x28
 80257ec:	c203      	stmia	r2!, {r0, r1}
 80257ee:	6818      	ldr	r0, [r3, #0]
 80257f0:	6859      	ldr	r1, [r3, #4]
 80257f2:	aa0c      	add	r2, sp, #48	; 0x30
 80257f4:	c203      	stmia	r2!, {r0, r1}
 80257f6:	a80a      	add	r0, sp, #40	; 0x28
 80257f8:	f7ef f84a 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80257fc:	4621      	mov	r1, r4
 80257fe:	a80c      	add	r0, sp, #48	; 0x30
 8025800:	f7ef f88a 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025804:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025808:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 802580c:	f002 0301 	and.w	r3, r2, #1
 8025810:	9306      	str	r3, [sp, #24]
 8025812:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025816:	f003 0101 	and.w	r1, r3, #1
 802581a:	9105      	str	r1, [sp, #20]
 802581c:	9805      	ldr	r0, [sp, #20]
 802581e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025822:	4403      	add	r3, r0
 8025824:	fb01 2303 	mla	r3, r1, r3, r2
 8025828:	f04f 0802 	mov.w	r8, #2
 802582c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025830:	441e      	add	r6, r3
 8025832:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025836:	441a      	add	r2, r3
 8025838:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802583c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025840:	4419      	add	r1, r3
 8025842:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025846:	9303      	str	r3, [sp, #12]
 8025848:	4b89      	ldr	r3, [pc, #548]	; (8025a70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802584a:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 802584e:	6818      	ldr	r0, [r3, #0]
 8025850:	6803      	ldr	r3, [r0, #0]
 8025852:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025854:	4798      	blx	r3
 8025856:	4a87      	ldr	r2, [pc, #540]	; (8025a74 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025858:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 802585c:	8813      	ldrh	r3, [r2, #0]
 802585e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025862:	2fff      	cmp	r7, #255	; 0xff
 8025864:	fb03 9404 	mla	r4, r3, r4, r9
 8025868:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802586c:	f105 0504 	add.w	r5, r5, #4
 8025870:	4694      	mov	ip, r2
 8025872:	fb03 f30b 	mul.w	r3, r3, fp
 8025876:	d071      	beq.n	802595c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025878:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802587c:	43f9      	mvns	r1, r7
 802587e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025882:	b2c9      	uxtb	r1, r1
 8025884:	9104      	str	r1, [sp, #16]
 8025886:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 802588a:	9b07      	ldr	r3, [sp, #28]
 802588c:	42a3      	cmp	r3, r4
 802588e:	f240 80e7 	bls.w	8025a60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025892:	9b06      	ldr	r3, [sp, #24]
 8025894:	2b00      	cmp	r3, #0
 8025896:	d03d      	beq.n	8025914 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025898:	7831      	ldrb	r1, [r6, #0]
 802589a:	9b04      	ldr	r3, [sp, #16]
 802589c:	8822      	ldrh	r2, [r4, #0]
 802589e:	9300      	str	r3, [sp, #0]
 80258a0:	f001 010f 	and.w	r1, r1, #15
 80258a4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258a8:	463b      	mov	r3, r7
 80258aa:	4429      	add	r1, r5
 80258ac:	4650      	mov	r0, sl
 80258ae:	f7ff ff57 	bl	8025760 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258b2:	9b03      	ldr	r3, [sp, #12]
 80258b4:	f824 0b02 	strh.w	r0, [r4], #2
 80258b8:	f106 0801 	add.w	r8, r6, #1
 80258bc:	f103 3bff 	add.w	fp, r3, #4294967295
 80258c0:	f1bb 0f01 	cmp.w	fp, #1
 80258c4:	46a1      	mov	r9, r4
 80258c6:	f104 0404 	add.w	r4, r4, #4
 80258ca:	dd27      	ble.n	802591c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80258cc:	f898 1000 	ldrb.w	r1, [r8]
 80258d0:	9b04      	ldr	r3, [sp, #16]
 80258d2:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80258d6:	9300      	str	r3, [sp, #0]
 80258d8:	0909      	lsrs	r1, r1, #4
 80258da:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258de:	463b      	mov	r3, r7
 80258e0:	4429      	add	r1, r5
 80258e2:	4650      	mov	r0, sl
 80258e4:	f7ff ff3c 	bl	8025760 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258e8:	f824 0c04 	strh.w	r0, [r4, #-4]
 80258ec:	f818 1b01 	ldrb.w	r1, [r8], #1
 80258f0:	9b04      	ldr	r3, [sp, #16]
 80258f2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80258f6:	9300      	str	r3, [sp, #0]
 80258f8:	f001 010f 	and.w	r1, r1, #15
 80258fc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025900:	463b      	mov	r3, r7
 8025902:	4429      	add	r1, r5
 8025904:	4650      	mov	r0, sl
 8025906:	f7ff ff2b 	bl	8025760 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802590a:	f1ab 0b02 	sub.w	fp, fp, #2
 802590e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025912:	e7d5      	b.n	80258c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025914:	46b0      	mov	r8, r6
 8025916:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802591a:	e7d1      	b.n	80258c0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 802591c:	d10f      	bne.n	802593e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 802591e:	f898 1000 	ldrb.w	r1, [r8]
 8025922:	9b04      	ldr	r3, [sp, #16]
 8025924:	f8b9 2000 	ldrh.w	r2, [r9]
 8025928:	9300      	str	r3, [sp, #0]
 802592a:	0909      	lsrs	r1, r1, #4
 802592c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025930:	463b      	mov	r3, r7
 8025932:	4429      	add	r1, r5
 8025934:	4650      	mov	r0, sl
 8025936:	f7ff ff13 	bl	8025760 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802593a:	f829 0b02 	strh.w	r0, [r9], #2
 802593e:	9b08      	ldr	r3, [sp, #32]
 8025940:	9a05      	ldr	r2, [sp, #20]
 8025942:	881c      	ldrh	r4, [r3, #0]
 8025944:	9b03      	ldr	r3, [sp, #12]
 8025946:	1ae4      	subs	r4, r4, r3
 8025948:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 802594c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025950:	4413      	add	r3, r2
 8025952:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025954:	fb93 f3f2 	sdiv	r3, r3, r2
 8025958:	441e      	add	r6, r3
 802595a:	e796      	b.n	802588a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 802595c:	4f46      	ldr	r7, [pc, #280]	; (8025a78 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 802595e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025962:	42a3      	cmp	r3, r4
 8025964:	d97c      	bls.n	8025a60 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025966:	9a06      	ldr	r2, [sp, #24]
 8025968:	2a00      	cmp	r2, #0
 802596a:	d054      	beq.n	8025a16 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 802596c:	7830      	ldrb	r0, [r6, #0]
 802596e:	f000 000f 	and.w	r0, r0, #15
 8025972:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025976:	eb05 0e00 	add.w	lr, r5, r0
 802597a:	5c28      	ldrb	r0, [r5, r0]
 802597c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025980:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025984:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025988:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802598c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025990:	ea42 020e 	orr.w	r2, r2, lr
 8025994:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025998:	f824 2b02 	strh.w	r2, [r4], #2
 802599c:	9a03      	ldr	r2, [sp, #12]
 802599e:	1c71      	adds	r1, r6, #1
 80259a0:	f102 3eff 	add.w	lr, r2, #4294967295
 80259a4:	f1be 0f01 	cmp.w	lr, #1
 80259a8:	4620      	mov	r0, r4
 80259aa:	f104 0404 	add.w	r4, r4, #4
 80259ae:	dd36      	ble.n	8025a1e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80259b0:	7808      	ldrb	r0, [r1, #0]
 80259b2:	0900      	lsrs	r0, r0, #4
 80259b4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80259b8:	eb05 0a00 	add.w	sl, r5, r0
 80259bc:	f1ae 0e02 	sub.w	lr, lr, #2
 80259c0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80259c4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80259c8:	00d2      	lsls	r2, r2, #3
 80259ca:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80259ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80259d2:	ea49 0202 	orr.w	r2, r9, r2
 80259d6:	f815 9000 	ldrb.w	r9, [r5, r0]
 80259da:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80259de:	f824 2c04 	strh.w	r2, [r4, #-4]
 80259e2:	f811 0b01 	ldrb.w	r0, [r1], #1
 80259e6:	f000 000f 	and.w	r0, r0, #15
 80259ea:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80259ee:	eb05 0a00 	add.w	sl, r5, r0
 80259f2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80259f6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80259fa:	00d2      	lsls	r2, r2, #3
 80259fc:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025a00:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025a04:	ea49 0202 	orr.w	r2, r9, r2
 8025a08:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025a0c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025a10:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025a14:	e7c6      	b.n	80259a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a16:	4631      	mov	r1, r6
 8025a18:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025a1c:	e7c2      	b.n	80259a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a1e:	d111      	bne.n	8025a44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025a20:	7809      	ldrb	r1, [r1, #0]
 8025a22:	0909      	lsrs	r1, r1, #4
 8025a24:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a28:	186c      	adds	r4, r5, r1
 8025a2a:	5c69      	ldrb	r1, [r5, r1]
 8025a2c:	78a2      	ldrb	r2, [r4, #2]
 8025a2e:	7864      	ldrb	r4, [r4, #1]
 8025a30:	00e4      	lsls	r4, r4, #3
 8025a32:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025a36:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a3a:	4322      	orrs	r2, r4
 8025a3c:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025a40:	f820 2b02 	strh.w	r2, [r0], #2
 8025a44:	9a03      	ldr	r2, [sp, #12]
 8025a46:	f8bc 4000 	ldrh.w	r4, [ip]
 8025a4a:	9905      	ldr	r1, [sp, #20]
 8025a4c:	1aa4      	subs	r4, r4, r2
 8025a4e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025a52:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025a56:	440a      	add	r2, r1
 8025a58:	fb92 f2f8 	sdiv	r2, r2, r8
 8025a5c:	4416      	add	r6, r2
 8025a5e:	e780      	b.n	8025962 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025a60:	4b03      	ldr	r3, [pc, #12]	; (8025a70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025a62:	6818      	ldr	r0, [r3, #0]
 8025a64:	6803      	ldr	r3, [r0, #0]
 8025a66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025a68:	4798      	blx	r3
 8025a6a:	b00f      	add	sp, #60	; 0x3c
 8025a6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a70:	2000ef1c 	.word	0x2000ef1c
 8025a74:	2000ef16 	.word	0x2000ef16
 8025a78:	fffff800 	.word	0xfffff800

08025a7c <CRC_Lock>:
 8025a7c:	b530      	push	{r4, r5, lr}
 8025a7e:	4a20      	ldr	r2, [pc, #128]	; (8025b00 <CRC_Lock+0x84>)
 8025a80:	6813      	ldr	r3, [r2, #0]
 8025a82:	f023 0301 	bic.w	r3, r3, #1
 8025a86:	6013      	str	r3, [r2, #0]
 8025a88:	4b1e      	ldr	r3, [pc, #120]	; (8025b04 <CRC_Lock+0x88>)
 8025a8a:	681a      	ldr	r2, [r3, #0]
 8025a8c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025a90:	4022      	ands	r2, r4
 8025a92:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025a96:	42aa      	cmp	r2, r5
 8025a98:	d005      	beq.n	8025aa6 <CRC_Lock+0x2a>
 8025a9a:	681b      	ldr	r3, [r3, #0]
 8025a9c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025aa0:	4023      	ands	r3, r4
 8025aa2:	4293      	cmp	r3, r2
 8025aa4:	d124      	bne.n	8025af0 <CRC_Lock+0x74>
 8025aa6:	4b18      	ldr	r3, [pc, #96]	; (8025b08 <CRC_Lock+0x8c>)
 8025aa8:	681b      	ldr	r3, [r3, #0]
 8025aaa:	bb0b      	cbnz	r3, 8025af0 <CRC_Lock+0x74>
 8025aac:	4b17      	ldr	r3, [pc, #92]	; (8025b0c <CRC_Lock+0x90>)
 8025aae:	681a      	ldr	r2, [r3, #0]
 8025ab0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025ab4:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025ab8:	d00d      	beq.n	8025ad6 <CRC_Lock+0x5a>
 8025aba:	681a      	ldr	r2, [r3, #0]
 8025abc:	f240 4483 	movw	r4, #1155	; 0x483
 8025ac0:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025ac4:	42a2      	cmp	r2, r4
 8025ac6:	d006      	beq.n	8025ad6 <CRC_Lock+0x5a>
 8025ac8:	681b      	ldr	r3, [r3, #0]
 8025aca:	f240 4285 	movw	r2, #1157	; 0x485
 8025ace:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025ad2:	4293      	cmp	r3, r2
 8025ad4:	d10c      	bne.n	8025af0 <CRC_Lock+0x74>
 8025ad6:	4b0e      	ldr	r3, [pc, #56]	; (8025b10 <CRC_Lock+0x94>)
 8025ad8:	2201      	movs	r2, #1
 8025ada:	601a      	str	r2, [r3, #0]
 8025adc:	681a      	ldr	r2, [r3, #0]
 8025ade:	2a00      	cmp	r2, #0
 8025ae0:	d1fc      	bne.n	8025adc <CRC_Lock+0x60>
 8025ae2:	4b0c      	ldr	r3, [pc, #48]	; (8025b14 <CRC_Lock+0x98>)
 8025ae4:	6018      	str	r0, [r3, #0]
 8025ae6:	6818      	ldr	r0, [r3, #0]
 8025ae8:	1a43      	subs	r3, r0, r1
 8025aea:	4258      	negs	r0, r3
 8025aec:	4158      	adcs	r0, r3
 8025aee:	bd30      	pop	{r4, r5, pc}
 8025af0:	4b09      	ldr	r3, [pc, #36]	; (8025b18 <CRC_Lock+0x9c>)
 8025af2:	2201      	movs	r2, #1
 8025af4:	601a      	str	r2, [r3, #0]
 8025af6:	681a      	ldr	r2, [r3, #0]
 8025af8:	2a00      	cmp	r2, #0
 8025afa:	d1fc      	bne.n	8025af6 <CRC_Lock+0x7a>
 8025afc:	4b07      	ldr	r3, [pc, #28]	; (8025b1c <CRC_Lock+0xa0>)
 8025afe:	e7f1      	b.n	8025ae4 <CRC_Lock+0x68>
 8025b00:	e0002000 	.word	0xe0002000
 8025b04:	e000ed00 	.word	0xe000ed00
 8025b08:	e0042000 	.word	0xe0042000
 8025b0c:	5c001000 	.word	0x5c001000
 8025b10:	58024c08 	.word	0x58024c08
 8025b14:	58024c00 	.word	0x58024c00
 8025b18:	40023008 	.word	0x40023008
 8025b1c:	40023000 	.word	0x40023000

08025b20 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025b20:	6101      	str	r1, [r0, #16]
 8025b22:	4770      	bx	lr

08025b24 <_ZN8touchgfx8Gestures4tickEv>:
 8025b24:	7b83      	ldrb	r3, [r0, #14]
 8025b26:	b14b      	cbz	r3, 8025b3c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025b28:	8903      	ldrh	r3, [r0, #8]
 8025b2a:	3301      	adds	r3, #1
 8025b2c:	b29b      	uxth	r3, r3
 8025b2e:	2b07      	cmp	r3, #7
 8025b30:	8103      	strh	r3, [r0, #8]
 8025b32:	bf81      	itttt	hi
 8025b34:	2300      	movhi	r3, #0
 8025b36:	8143      	strhhi	r3, [r0, #10]
 8025b38:	8183      	strhhi	r3, [r0, #12]
 8025b3a:	7383      	strbhi	r3, [r0, #14]
 8025b3c:	4770      	bx	lr
	...

08025b40 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025b40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025b44:	4698      	mov	r8, r3
 8025b46:	8883      	ldrh	r3, [r0, #4]
 8025b48:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025b4c:	eba8 0303 	sub.w	r3, r8, r3
 8025b50:	b21b      	sxth	r3, r3
 8025b52:	4604      	mov	r4, r0
 8025b54:	2b00      	cmp	r3, #0
 8025b56:	4617      	mov	r7, r2
 8025b58:	4a18      	ldr	r2, [pc, #96]	; (8025bbc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025b5a:	9200      	str	r2, [sp, #0]
 8025b5c:	bfb8      	it	lt
 8025b5e:	425b      	neglt	r3, r3
 8025b60:	8aa2      	ldrh	r2, [r4, #20]
 8025b62:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025b66:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025b6a:	b21b      	sxth	r3, r3
 8025b6c:	460e      	mov	r6, r1
 8025b6e:	4293      	cmp	r3, r2
 8025b70:	88c1      	ldrh	r1, [r0, #6]
 8025b72:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025b76:	f04f 0000 	mov.w	r0, #0
 8025b7a:	f88d 0004 	strb.w	r0, [sp, #4]
 8025b7e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025b82:	dc07      	bgt.n	8025b94 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025b84:	1a69      	subs	r1, r5, r1
 8025b86:	b209      	sxth	r1, r1
 8025b88:	2900      	cmp	r1, #0
 8025b8a:	bfb8      	it	lt
 8025b8c:	4249      	neglt	r1, r1
 8025b8e:	b209      	sxth	r1, r1
 8025b90:	428a      	cmp	r2, r1
 8025b92:	da10      	bge.n	8025bb6 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025b94:	6920      	ldr	r0, [r4, #16]
 8025b96:	6803      	ldr	r3, [r0, #0]
 8025b98:	4669      	mov	r1, sp
 8025b9a:	685b      	ldr	r3, [r3, #4]
 8025b9c:	4798      	blx	r3
 8025b9e:	eba8 0606 	sub.w	r6, r8, r6
 8025ba2:	2300      	movs	r3, #0
 8025ba4:	1bef      	subs	r7, r5, r7
 8025ba6:	2001      	movs	r0, #1
 8025ba8:	8123      	strh	r3, [r4, #8]
 8025baa:	8166      	strh	r6, [r4, #10]
 8025bac:	81a7      	strh	r7, [r4, #12]
 8025bae:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025bb2:	80e5      	strh	r5, [r4, #6]
 8025bb4:	73a0      	strb	r0, [r4, #14]
 8025bb6:	b004      	add	sp, #16
 8025bb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025bbc:	0802a44c 	.word	0x0802a44c

08025bc0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025bc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025bc2:	461e      	mov	r6, r3
 8025bc4:	1e4b      	subs	r3, r1, #1
 8025bc6:	2b01      	cmp	r3, #1
 8025bc8:	b085      	sub	sp, #20
 8025bca:	4604      	mov	r4, r0
 8025bcc:	460d      	mov	r5, r1
 8025bce:	4617      	mov	r7, r2
 8025bd0:	d84b      	bhi.n	8025c6a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025bd2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025bd6:	1cd3      	adds	r3, r2, #3
 8025bd8:	b29b      	uxth	r3, r3
 8025bda:	2b06      	cmp	r3, #6
 8025bdc:	d916      	bls.n	8025c0c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025bde:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025c80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025be2:	f8cd c004 	str.w	ip, [sp, #4]
 8025be6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025bea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025bee:	6900      	ldr	r0, [r0, #16]
 8025bf0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025bf4:	f04f 0c00 	mov.w	ip, #0
 8025bf8:	f88d c008 	strb.w	ip, [sp, #8]
 8025bfc:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c00:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c04:	6803      	ldr	r3, [r0, #0]
 8025c06:	a901      	add	r1, sp, #4
 8025c08:	689b      	ldr	r3, [r3, #8]
 8025c0a:	4798      	blx	r3
 8025c0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025c10:	1cd3      	adds	r3, r2, #3
 8025c12:	b29b      	uxth	r3, r3
 8025c14:	2b06      	cmp	r3, #6
 8025c16:	d916      	bls.n	8025c46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c18:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025c80 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025c1c:	f8cd c004 	str.w	ip, [sp, #4]
 8025c20:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025c24:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025c28:	6920      	ldr	r0, [r4, #16]
 8025c2a:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025c2e:	f04f 0c01 	mov.w	ip, #1
 8025c32:	f88d c008 	strb.w	ip, [sp, #8]
 8025c36:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c3a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c3e:	6803      	ldr	r3, [r0, #0]
 8025c40:	a901      	add	r1, sp, #4
 8025c42:	689b      	ldr	r3, [r3, #8]
 8025c44:	4798      	blx	r3
 8025c46:	4b0d      	ldr	r3, [pc, #52]	; (8025c7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025c48:	9301      	str	r3, [sp, #4]
 8025c4a:	6920      	ldr	r0, [r4, #16]
 8025c4c:	f88d 5008 	strb.w	r5, [sp, #8]
 8025c50:	2300      	movs	r3, #0
 8025c52:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025c56:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025c5a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c5e:	6803      	ldr	r3, [r0, #0]
 8025c60:	a901      	add	r1, sp, #4
 8025c62:	681b      	ldr	r3, [r3, #0]
 8025c64:	4798      	blx	r3
 8025c66:	b005      	add	sp, #20
 8025c68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025c6a:	2900      	cmp	r1, #0
 8025c6c:	d1eb      	bne.n	8025c46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c6e:	80a2      	strh	r2, [r4, #4]
 8025c70:	80c6      	strh	r6, [r0, #6]
 8025c72:	60a1      	str	r1, [r4, #8]
 8025c74:	81a1      	strh	r1, [r4, #12]
 8025c76:	73a1      	strb	r1, [r4, #14]
 8025c78:	e7e5      	b.n	8025c46 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c7a:	bf00      	nop
 8025c7c:	0802a438 	.word	0x0802a438
 8025c80:	0802a460 	.word	0x0802a460

08025c84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025c84:	10c9      	asrs	r1, r1, #3
 8025c86:	2900      	cmp	r1, #0
 8025c88:	bfb8      	it	lt
 8025c8a:	4249      	neglt	r1, r1
 8025c8c:	2801      	cmp	r0, #1
 8025c8e:	d108      	bne.n	8025ca2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025c90:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025c94:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025c98:	4601      	mov	r1, r0
 8025c9a:	dd02      	ble.n	8025ca2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025c9c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025ca0:	4770      	bx	lr
 8025ca2:	29ff      	cmp	r1, #255	; 0xff
 8025ca4:	bfa8      	it	ge
 8025ca6:	21ff      	movge	r1, #255	; 0xff
 8025ca8:	4608      	mov	r0, r1
 8025caa:	4770      	bx	lr

08025cac <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025cac:	b410      	push	{r4}
 8025cae:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025cb2:	429c      	cmp	r4, r3
 8025cb4:	d803      	bhi.n	8025cbe <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025cb6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025cba:	f7ed b8ef 	b.w	8012e9c <_ZN8touchgfx7Outline6lineToEii>
 8025cbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025cc2:	4770      	bx	lr

08025cc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025cc8:	b08b      	sub	sp, #44	; 0x2c
 8025cca:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025cce:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025cd2:	9308      	str	r3, [sp, #32]
 8025cd4:	4606      	mov	r6, r0
 8025cd6:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025cda:	9309      	str	r3, [sp, #36]	; 0x24
 8025cdc:	468a      	mov	sl, r1
 8025cde:	f7ed fa4a 	bl	8013176 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025ce2:	68b5      	ldr	r5, [r6, #8]
 8025ce4:	4604      	mov	r4, r0
 8025ce6:	2d00      	cmp	r5, #0
 8025ce8:	d044      	beq.n	8025d74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025cea:	6873      	ldr	r3, [r6, #4]
 8025cec:	42ab      	cmp	r3, r5
 8025cee:	d33d      	bcc.n	8025d6c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025cf0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025cf4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025cf8:	eb02 0b03 	add.w	fp, r2, r3
 8025cfc:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025d00:	fb02 1203 	mla	r2, r2, r3, r1
 8025d04:	9205      	str	r2, [sp, #20]
 8025d06:	1e6a      	subs	r2, r5, #1
 8025d08:	9204      	str	r2, [sp, #16]
 8025d0a:	f04f 0800 	mov.w	r8, #0
 8025d0e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025d12:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025d16:	454b      	cmp	r3, r9
 8025d18:	463a      	mov	r2, r7
 8025d1a:	d008      	beq.n	8025d2e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025d1c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025d20:	eb03 0b09 	add.w	fp, r3, r9
 8025d24:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025d28:	fb03 1309 	mla	r3, r3, r9, r1
 8025d2c:	9305      	str	r3, [sp, #20]
 8025d2e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025d32:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025d36:	4498      	add	r8, r3
 8025d38:	9b04      	ldr	r3, [sp, #16]
 8025d3a:	3b01      	subs	r3, #1
 8025d3c:	9304      	str	r3, [sp, #16]
 8025d3e:	9b04      	ldr	r3, [sp, #16]
 8025d40:	3301      	adds	r3, #1
 8025d42:	d015      	beq.n	8025d70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025d44:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025d48:	42bb      	cmp	r3, r7
 8025d4a:	d117      	bne.n	8025d7c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025d4c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8025d50:	9b04      	ldr	r3, [sp, #16]
 8025d52:	4548      	cmp	r0, r9
 8025d54:	f103 33ff 	add.w	r3, r3, #4294967295
 8025d58:	d17f      	bne.n	8025e5a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8025d5a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8025d5e:	4401      	add	r1, r0
 8025d60:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025d64:	4480      	add	r8, r0
 8025d66:	e7e9      	b.n	8025d3c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8025d68:	461f      	mov	r7, r3
 8025d6a:	e044      	b.n	8025df6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8025d6c:	2000      	movs	r0, #0
 8025d6e:	e002      	b.n	8025d76 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8025d70:	2900      	cmp	r1, #0
 8025d72:	d16f      	bne.n	8025e54 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8025d74:	2001      	movs	r0, #1
 8025d76:	b00b      	add	sp, #44	; 0x2c
 8025d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d7c:	2900      	cmp	r1, #0
 8025d7e:	d030      	beq.n	8025de2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8025d80:	2f00      	cmp	r7, #0
 8025d82:	db29      	blt.n	8025dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025d84:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025d88:	42bb      	cmp	r3, r7
 8025d8a:	dd25      	ble.n	8025dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025d8c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8025d90:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025d94:	f7ff ff76 	bl	8025c84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025d98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025d9a:	fb10 f003 	smulbb	r0, r0, r3
 8025d9e:	b280      	uxth	r0, r0
 8025da0:	1c41      	adds	r1, r0, #1
 8025da2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025da6:	1209      	asrs	r1, r1, #8
 8025da8:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025dac:	d014      	beq.n	8025dd8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8025dae:	9808      	ldr	r0, [sp, #32]
 8025db0:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025db2:	b2c9      	uxtb	r1, r1
 8025db4:	b2ba      	uxth	r2, r7
 8025db6:	9102      	str	r1, [sp, #8]
 8025db8:	2101      	movs	r1, #1
 8025dba:	4413      	add	r3, r2
 8025dbc:	9101      	str	r1, [sp, #4]
 8025dbe:	4402      	add	r2, r0
 8025dc0:	fa0f f18b 	sxth.w	r1, fp
 8025dc4:	f8da 0000 	ldr.w	r0, [sl]
 8025dc8:	9100      	str	r1, [sp, #0]
 8025dca:	6941      	ldr	r1, [r0, #20]
 8025dcc:	b21b      	sxth	r3, r3
 8025dce:	460d      	mov	r5, r1
 8025dd0:	b212      	sxth	r2, r2
 8025dd2:	9905      	ldr	r1, [sp, #20]
 8025dd4:	4650      	mov	r0, sl
 8025dd6:	47a8      	blx	r5
 8025dd8:	9b04      	ldr	r3, [sp, #16]
 8025dda:	3301      	adds	r3, #1
 8025ddc:	f107 0201 	add.w	r2, r7, #1
 8025de0:	d0c8      	beq.n	8025d74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025de2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025de6:	1abb      	subs	r3, r7, r2
 8025de8:	2b00      	cmp	r3, #0
 8025dea:	dd31      	ble.n	8025e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025dec:	2a00      	cmp	r2, #0
 8025dee:	dabb      	bge.n	8025d68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8025df0:	2f00      	cmp	r7, #0
 8025df2:	dd2d      	ble.n	8025e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025df4:	2200      	movs	r2, #0
 8025df6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8025dfa:	19d1      	adds	r1, r2, r7
 8025dfc:	4299      	cmp	r1, r3
 8025dfe:	db02      	blt.n	8025e06 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8025e00:	1a9f      	subs	r7, r3, r2
 8025e02:	2f00      	cmp	r7, #0
 8025e04:	dd24      	ble.n	8025e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e06:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8025e0a:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8025e0e:	f7ff ff39 	bl	8025c84 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8025e12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025e14:	fb10 f003 	smulbb	r0, r0, r3
 8025e18:	b280      	uxth	r0, r0
 8025e1a:	1c41      	adds	r1, r0, #1
 8025e1c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8025e20:	1209      	asrs	r1, r1, #8
 8025e22:	f011 0fff 	tst.w	r1, #255	; 0xff
 8025e26:	d013      	beq.n	8025e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e28:	9808      	ldr	r0, [sp, #32]
 8025e2a:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8025e2c:	b292      	uxth	r2, r2
 8025e2e:	b2c9      	uxtb	r1, r1
 8025e30:	4413      	add	r3, r2
 8025e32:	9102      	str	r1, [sp, #8]
 8025e34:	4402      	add	r2, r0
 8025e36:	b23f      	sxth	r7, r7
 8025e38:	f8da 0000 	ldr.w	r0, [sl]
 8025e3c:	9701      	str	r7, [sp, #4]
 8025e3e:	fa0f f18b 	sxth.w	r1, fp
 8025e42:	9100      	str	r1, [sp, #0]
 8025e44:	6947      	ldr	r7, [r0, #20]
 8025e46:	9905      	ldr	r1, [sp, #20]
 8025e48:	b21b      	sxth	r3, r3
 8025e4a:	b212      	sxth	r2, r2
 8025e4c:	4650      	mov	r0, sl
 8025e4e:	47b8      	blx	r7
 8025e50:	464b      	mov	r3, r9
 8025e52:	e75c      	b.n	8025d0e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8025e54:	2f00      	cmp	r7, #0
 8025e56:	da95      	bge.n	8025d84 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8025e58:	e78c      	b.n	8025d74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025e5a:	2900      	cmp	r1, #0
 8025e5c:	d0f8      	beq.n	8025e50 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8025e5e:	e78f      	b.n	8025d80 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08025e60 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8025e60:	4b4b      	ldr	r3, [pc, #300]	; (8025f90 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8025e62:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8025e66:	2500      	movs	r5, #0
 8025e68:	f100 0620 	add.w	r6, r0, #32
 8025e6c:	4604      	mov	r4, r0
 8025e6e:	e9c0 3100 	strd	r3, r1, [r0]
 8025e72:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8025e76:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8025e7a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8025e7e:	f100 0718 	add.w	r7, r0, #24
 8025e82:	4630      	mov	r0, r6
 8025e84:	4690      	mov	r8, r2
 8025e86:	f7ec fb41 	bl	801250c <_ZN8touchgfx7OutlineC1Ev>
 8025e8a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8025e8e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8025e92:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8025e96:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8025e9a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8025e9e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8025ea2:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8025ea6:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8025eaa:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8025eae:	f9b8 2000 	ldrsh.w	r2, [r8]
 8025eb2:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8025eb6:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8025eba:	9500      	str	r5, [sp, #0]
 8025ebc:	4410      	add	r0, r2
 8025ebe:	b280      	uxth	r0, r0
 8025ec0:	fa0f fa80 	sxth.w	sl, r0
 8025ec4:	45aa      	cmp	sl, r5
 8025ec6:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8025eca:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8025ece:	dd5c      	ble.n	8025f8a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025ed0:	4591      	cmp	r9, r2
 8025ed2:	dd5a      	ble.n	8025f8a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025ed4:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8025ed8:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8025edc:	440b      	add	r3, r1
 8025ede:	b29b      	uxth	r3, r3
 8025ee0:	b21d      	sxth	r5, r3
 8025ee2:	2d00      	cmp	r5, #0
 8025ee4:	dd51      	ble.n	8025f8a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025ee6:	458e      	cmp	lr, r1
 8025ee8:	dd4f      	ble.n	8025f8a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8025eea:	45d1      	cmp	r9, sl
 8025eec:	bfb8      	it	lt
 8025eee:	fa1f f089 	uxthlt.w	r0, r9
 8025ef2:	45ae      	cmp	lr, r5
 8025ef4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8025ef8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8025efc:	bfb8      	it	lt
 8025efe:	fa1f f38e 	uxthlt.w	r3, lr
 8025f02:	1a80      	subs	r0, r0, r2
 8025f04:	1a5b      	subs	r3, r3, r1
 8025f06:	f8ad 0004 	strh.w	r0, [sp, #4]
 8025f0a:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025f0e:	f8ad 2000 	strh.w	r2, [sp]
 8025f12:	f8ad 1002 	strh.w	r1, [sp, #2]
 8025f16:	466d      	mov	r5, sp
 8025f18:	e895 0003 	ldmia.w	r5, {r0, r1}
 8025f1c:	e887 0003 	stmia.w	r7, {r0, r1}
 8025f20:	f8dc 3000 	ldr.w	r3, [ip]
 8025f24:	4660      	mov	r0, ip
 8025f26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025f28:	4639      	mov	r1, r7
 8025f2a:	4798      	blx	r3
 8025f2c:	6861      	ldr	r1, [r4, #4]
 8025f2e:	4628      	mov	r0, r5
 8025f30:	3104      	adds	r1, #4
 8025f32:	f7ee fcf1 	bl	8014918 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025f36:	4638      	mov	r0, r7
 8025f38:	f7ee fcaa 	bl	8014890 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025f3c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025f40:	f8bd 2000 	ldrh.w	r2, [sp]
 8025f44:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8025f48:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8025f4c:	4630      	mov	r0, r6
 8025f4e:	f7ec fac1 	bl	80124d4 <_ZN8touchgfx7Outline5resetEv>
 8025f52:	f9bd 3000 	ldrsh.w	r3, [sp]
 8025f56:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8025f5a:	015b      	lsls	r3, r3, #5
 8025f5c:	60a3      	str	r3, [r4, #8]
 8025f5e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8025f62:	015b      	lsls	r3, r3, #5
 8025f64:	60e3      	str	r3, [r4, #12]
 8025f66:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8025f6a:	015b      	lsls	r3, r3, #5
 8025f6c:	6123      	str	r3, [r4, #16]
 8025f6e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8025f72:	015b      	lsls	r3, r3, #5
 8025f74:	6163      	str	r3, [r4, #20]
 8025f76:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8025f7a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8025f7e:	4620      	mov	r0, r4
 8025f80:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8025f84:	b002      	add	sp, #8
 8025f86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8025f8a:	2300      	movs	r3, #0
 8025f8c:	9301      	str	r3, [sp, #4]
 8025f8e:	e7c2      	b.n	8025f16 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8025f90:	0802a784 	.word	0x0802a784

08025f94 <_ZN8touchgfx6Canvas5closeEv>:
 8025f94:	b538      	push	{r3, r4, r5, lr}
 8025f96:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8025f9a:	4604      	mov	r4, r0
 8025f9c:	b193      	cbz	r3, 8025fc4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025f9e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8025fa2:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8025fa6:	4213      	tst	r3, r2
 8025fa8:	d10c      	bne.n	8025fc4 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8025faa:	f100 0520 	add.w	r5, r0, #32
 8025fae:	b123      	cbz	r3, 8025fba <_ZN8touchgfx6Canvas5closeEv+0x26>
 8025fb0:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8025fb4:	4628      	mov	r0, r5
 8025fb6:	f7ff fe79 	bl	8025cac <_ZN8touchgfx10Rasterizer6lineToEii>
 8025fba:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8025fbe:	4628      	mov	r0, r5
 8025fc0:	f7ff fe74 	bl	8025cac <_ZN8touchgfx10Rasterizer6lineToEii>
 8025fc4:	2300      	movs	r3, #0
 8025fc6:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8025fca:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8025fce:	4298      	cmp	r0, r3
 8025fd0:	bf34      	ite	cc
 8025fd2:	2000      	movcc	r0, #0
 8025fd4:	2001      	movcs	r0, #1
 8025fd6:	bd38      	pop	{r3, r4, r5, pc}

08025fd8 <_ZN8touchgfx6Canvas6renderEh>:
 8025fd8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8025fdc:	4604      	mov	r4, r0
 8025fde:	6840      	ldr	r0, [r0, #4]
 8025fe0:	6803      	ldr	r3, [r0, #0]
 8025fe2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8025fe4:	460d      	mov	r5, r1
 8025fe6:	4798      	blx	r3
 8025fe8:	fb10 f105 	smulbb	r1, r0, r5
 8025fec:	b289      	uxth	r1, r1
 8025fee:	1c4d      	adds	r5, r1, #1
 8025ff0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8025ff4:	122d      	asrs	r5, r5, #8
 8025ff6:	f000 809d 	beq.w	8026134 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8025ffa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8025ffe:	2b00      	cmp	r3, #0
 8026000:	f000 8098 	beq.w	8026134 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 8026004:	4620      	mov	r0, r4
 8026006:	f7ff ffc5 	bl	8025f94 <_ZN8touchgfx6Canvas5closeEv>
 802600a:	4607      	mov	r7, r0
 802600c:	2800      	cmp	r0, #0
 802600e:	d048      	beq.n	80260a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026010:	6863      	ldr	r3, [r4, #4]
 8026012:	4e49      	ldr	r6, [pc, #292]	; (8026138 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 8026014:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026016:	6837      	ldr	r7, [r6, #0]
 8026018:	6803      	ldr	r3, [r0, #0]
 802601a:	689b      	ldr	r3, [r3, #8]
 802601c:	4798      	blx	r3
 802601e:	4601      	mov	r1, r0
 8026020:	4638      	mov	r0, r7
 8026022:	f7ea fad9 	bl	80105d8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8026026:	4607      	mov	r7, r0
 8026028:	f7de f9f2 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 802602c:	6803      	ldr	r3, [r0, #0]
 802602e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8026030:	4798      	blx	r3
 8026032:	4680      	mov	r8, r0
 8026034:	f7de f9ec 	bl	8004410 <_ZN8touchgfx3HAL3lcdEv>
 8026038:	6803      	ldr	r3, [r0, #0]
 802603a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802603c:	4798      	blx	r3
 802603e:	280b      	cmp	r0, #11
 8026040:	d85d      	bhi.n	80260fe <_ZN8touchgfx6Canvas6renderEh+0x126>
 8026042:	e8df f000 	tbb	[pc, r0]
 8026046:	5e53      	.short	0x5e53
 8026048:	325c066e 	.word	0x325c066e
 802604c:	67676742 	.word	0x67676742
 8026050:	6767      	.short	0x6767
 8026052:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026056:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802605a:	2208      	movs	r2, #8
 802605c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026060:	fb08 2303 	mla	r3, r8, r3, r2
 8026064:	441f      	add	r7, r3
 8026066:	424b      	negs	r3, r1
 8026068:	f003 0307 	and.w	r3, r3, #7
 802606c:	f001 0107 	and.w	r1, r1, #7
 8026070:	bf58      	it	pl
 8026072:	4259      	negpl	r1, r3
 8026074:	b2c9      	uxtb	r1, r1
 8026076:	b2ed      	uxtb	r5, r5
 8026078:	e9cd 1500 	strd	r1, r5, [sp]
 802607c:	6860      	ldr	r0, [r4, #4]
 802607e:	463a      	mov	r2, r7
 8026080:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8026082:	fa0f f388 	sxth.w	r3, r8
 8026086:	f104 0020 	add.w	r0, r4, #32
 802608a:	f7ff fe1b 	bl	8025cc4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802608e:	6863      	ldr	r3, [r4, #4]
 8026090:	4607      	mov	r7, r0
 8026092:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026094:	6803      	ldr	r3, [r0, #0]
 8026096:	691b      	ldr	r3, [r3, #16]
 8026098:	4798      	blx	r3
 802609a:	6830      	ldr	r0, [r6, #0]
 802609c:	6803      	ldr	r3, [r0, #0]
 802609e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80260a0:	4798      	blx	r3
 80260a2:	4638      	mov	r0, r7
 80260a4:	b002      	add	sp, #8
 80260a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80260aa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260ae:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80260b2:	2204      	movs	r2, #4
 80260b4:	fb91 f2f2 	sdiv	r2, r1, r2
 80260b8:	fb08 2303 	mla	r3, r8, r3, r2
 80260bc:	441f      	add	r7, r3
 80260be:	424b      	negs	r3, r1
 80260c0:	f003 0303 	and.w	r3, r3, #3
 80260c4:	f001 0103 	and.w	r1, r1, #3
 80260c8:	e7d2      	b.n	8026070 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80260ca:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80260ce:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260d2:	2900      	cmp	r1, #0
 80260d4:	f04f 0202 	mov.w	r2, #2
 80260d8:	fb91 f2f2 	sdiv	r2, r1, r2
 80260dc:	f001 0101 	and.w	r1, r1, #1
 80260e0:	fb08 2303 	mla	r3, r8, r3, r2
 80260e4:	441f      	add	r7, r3
 80260e6:	bfb8      	it	lt
 80260e8:	4249      	neglt	r1, r1
 80260ea:	e7c3      	b.n	8026074 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80260ec:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80260f0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80260f4:	fb08 f303 	mul.w	r3, r8, r3
 80260f8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80260fc:	441f      	add	r7, r3
 80260fe:	2100      	movs	r1, #0
 8026100:	e7b9      	b.n	8026076 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8026102:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026106:	fb08 f203 	mul.w	r2, r8, r3
 802610a:	8b23      	ldrh	r3, [r4, #24]
 802610c:	2103      	movs	r1, #3
 802610e:	fb13 2301 	smlabb	r3, r3, r1, r2
 8026112:	e7f3      	b.n	80260fc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026114:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026118:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802611c:	fb08 2303 	mla	r3, r8, r3, r2
 8026120:	e7ec      	b.n	80260fc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026122:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026126:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802612a:	fb08 f303 	mul.w	r3, r8, r3
 802612e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8026132:	e7e3      	b.n	80260fc <_ZN8touchgfx6Canvas6renderEh+0x124>
 8026134:	2701      	movs	r7, #1
 8026136:	e7b4      	b.n	80260a2 <_ZN8touchgfx6Canvas6renderEh+0xca>
 8026138:	2000ef1c 	.word	0x2000ef1c

0802613c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802613c:	b510      	push	{r4, lr}
 802613e:	4b07      	ldr	r3, [pc, #28]	; (802615c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8026140:	781b      	ldrb	r3, [r3, #0]
 8026142:	2b01      	cmp	r3, #1
 8026144:	d108      	bne.n	8026158 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8026146:	6843      	ldr	r3, [r0, #4]
 8026148:	6814      	ldr	r4, [r2, #0]
 802614a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802614e:	680b      	ldr	r3, [r1, #0]
 8026150:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8026154:	6013      	str	r3, [r2, #0]
 8026156:	600c      	str	r4, [r1, #0]
 8026158:	bd10      	pop	{r4, pc}
 802615a:	bf00      	nop
 802615c:	2000ef14 	.word	0x2000ef14

08026160 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026160:	b513      	push	{r0, r1, r4, lr}
 8026162:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026166:	4604      	mov	r4, r0
 8026168:	e9cd 2100 	strd	r2, r1, [sp]
 802616c:	b9a3      	cbnz	r3, 8026198 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802616e:	466a      	mov	r2, sp
 8026170:	a901      	add	r1, sp, #4
 8026172:	4620      	mov	r0, r4
 8026174:	f7ff ffe2 	bl	802613c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026178:	68a3      	ldr	r3, [r4, #8]
 802617a:	9901      	ldr	r1, [sp, #4]
 802617c:	9a00      	ldr	r2, [sp, #0]
 802617e:	1ac9      	subs	r1, r1, r3
 8026180:	68e3      	ldr	r3, [r4, #12]
 8026182:	9101      	str	r1, [sp, #4]
 8026184:	1ad2      	subs	r2, r2, r3
 8026186:	2a00      	cmp	r2, #0
 8026188:	9200      	str	r2, [sp, #0]
 802618a:	da0b      	bge.n	80261a4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802618c:	2301      	movs	r3, #1
 802618e:	2900      	cmp	r1, #0
 8026190:	da0e      	bge.n	80261b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026192:	f043 0304 	orr.w	r3, r3, #4
 8026196:	e013      	b.n	80261c0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026198:	f7ff fefc 	bl	8025f94 <_ZN8touchgfx6Canvas5closeEv>
 802619c:	2800      	cmp	r0, #0
 802619e:	d1e6      	bne.n	802616e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 80261a0:	b002      	add	sp, #8
 80261a2:	bd10      	pop	{r4, pc}
 80261a4:	6963      	ldr	r3, [r4, #20]
 80261a6:	429a      	cmp	r2, r3
 80261a8:	bfac      	ite	ge
 80261aa:	2302      	movge	r3, #2
 80261ac:	2300      	movlt	r3, #0
 80261ae:	e7ee      	b.n	802618e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 80261b0:	6920      	ldr	r0, [r4, #16]
 80261b2:	4281      	cmp	r1, r0
 80261b4:	bfac      	ite	ge
 80261b6:	2008      	movge	r0, #8
 80261b8:	2000      	movlt	r0, #0
 80261ba:	4318      	orrs	r0, r3
 80261bc:	b2c3      	uxtb	r3, r0
 80261be:	b158      	cbz	r0, 80261d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80261c0:	2200      	movs	r2, #0
 80261c2:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80261c6:	9901      	ldr	r1, [sp, #4]
 80261c8:	9a00      	ldr	r2, [sp, #0]
 80261ca:	66a1      	str	r1, [r4, #104]	; 0x68
 80261cc:	66e2      	str	r2, [r4, #108]	; 0x6c
 80261ce:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80261d2:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80261d6:	e7e3      	b.n	80261a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80261d8:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80261dc:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80261e0:	4298      	cmp	r0, r3
 80261e2:	d803      	bhi.n	80261ec <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80261e4:	f104 0020 	add.w	r0, r4, #32
 80261e8:	f7ec fe72 	bl	8012ed0 <_ZN8touchgfx7Outline6moveToEii>
 80261ec:	2301      	movs	r3, #1
 80261ee:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80261f2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80261f6:	2300      	movs	r3, #0
 80261f8:	e7e5      	b.n	80261c6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080261fa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80261fa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80261fc:	ab02      	add	r3, sp, #8
 80261fe:	4604      	mov	r4, r0
 8026200:	f843 2d08 	str.w	r2, [r3, #-8]!
 8026204:	9101      	str	r1, [sp, #4]
 8026206:	461a      	mov	r2, r3
 8026208:	a901      	add	r1, sp, #4
 802620a:	f7ff ff97 	bl	802613c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802620e:	68a3      	ldr	r3, [r4, #8]
 8026210:	9901      	ldr	r1, [sp, #4]
 8026212:	9a00      	ldr	r2, [sp, #0]
 8026214:	1ac9      	subs	r1, r1, r3
 8026216:	68e3      	ldr	r3, [r4, #12]
 8026218:	9101      	str	r1, [sp, #4]
 802621a:	1ad2      	subs	r2, r2, r3
 802621c:	2a00      	cmp	r2, #0
 802621e:	9200      	str	r2, [sp, #0]
 8026220:	db1c      	blt.n	802625c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 8026222:	6963      	ldr	r3, [r4, #20]
 8026224:	429a      	cmp	r2, r3
 8026226:	bfac      	ite	ge
 8026228:	2002      	movge	r0, #2
 802622a:	2000      	movlt	r0, #0
 802622c:	2900      	cmp	r1, #0
 802622e:	db17      	blt.n	8026260 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8026230:	6923      	ldr	r3, [r4, #16]
 8026232:	4299      	cmp	r1, r3
 8026234:	bfac      	ite	ge
 8026236:	2308      	movge	r3, #8
 8026238:	2300      	movlt	r3, #0
 802623a:	4303      	orrs	r3, r0
 802623c:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8026240:	b2dd      	uxtb	r5, r3
 8026242:	b978      	cbnz	r0, 8026264 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8026244:	f104 0020 	add.w	r0, r4, #32
 8026248:	f7ff fd30 	bl	8025cac <_ZN8touchgfx10Rasterizer6lineToEii>
 802624c:	9b01      	ldr	r3, [sp, #4]
 802624e:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026250:	9b00      	ldr	r3, [sp, #0]
 8026252:	6623      	str	r3, [r4, #96]	; 0x60
 8026254:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026258:	b002      	add	sp, #8
 802625a:	bd70      	pop	{r4, r5, r6, pc}
 802625c:	2001      	movs	r0, #1
 802625e:	e7e5      	b.n	802622c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026260:	2304      	movs	r3, #4
 8026262:	e7ea      	b.n	802623a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026264:	b113      	cbz	r3, 802626c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026266:	ea10 0305 	ands.w	r3, r0, r5
 802626a:	d11c      	bne.n	80262a6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802626c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026270:	f104 0620 	add.w	r6, r4, #32
 8026274:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026278:	b98b      	cbnz	r3, 802629e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802627a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802627e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026282:	4298      	cmp	r0, r3
 8026284:	d802      	bhi.n	802628c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026286:	4630      	mov	r0, r6
 8026288:	f7ec fe22 	bl	8012ed0 <_ZN8touchgfx7Outline6moveToEii>
 802628c:	2301      	movs	r3, #1
 802628e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026292:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026296:	e9dd 2100 	ldrd	r2, r1, [sp]
 802629a:	4630      	mov	r0, r6
 802629c:	e7d4      	b.n	8026248 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802629e:	4630      	mov	r0, r6
 80262a0:	f7ff fd04 	bl	8025cac <_ZN8touchgfx10Rasterizer6lineToEii>
 80262a4:	e7f7      	b.n	8026296 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 80262a6:	461d      	mov	r5, r3
 80262a8:	e7d0      	b.n	802624c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

080262ac <_ZN8touchgfx6CanvasD1Ev>:
 80262ac:	b510      	push	{r4, lr}
 80262ae:	4b04      	ldr	r3, [pc, #16]	; (80262c0 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 80262b0:	4604      	mov	r4, r0
 80262b2:	f840 3b20 	str.w	r3, [r0], #32
 80262b6:	f7ec f905 	bl	80124c4 <_ZN8touchgfx7OutlineD1Ev>
 80262ba:	4620      	mov	r0, r4
 80262bc:	bd10      	pop	{r4, pc}
 80262be:	bf00      	nop
 80262c0:	0802a784 	.word	0x0802a784

080262c4 <_ZN8touchgfx6CanvasD0Ev>:
 80262c4:	b510      	push	{r4, lr}
 80262c6:	4604      	mov	r4, r0
 80262c8:	f7ff fff0 	bl	80262ac <_ZN8touchgfx6CanvasD1Ev>
 80262cc:	4620      	mov	r0, r4
 80262ce:	2170      	movs	r1, #112	; 0x70
 80262d0:	f000 f826 	bl	8026320 <_ZdlPvj>
 80262d4:	4620      	mov	r0, r4
 80262d6:	bd10      	pop	{r4, pc}

080262d8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80262d8:	b570      	push	{r4, r5, r6, lr}
 80262da:	790b      	ldrb	r3, [r1, #4]
 80262dc:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 80262e0:	2b00      	cmp	r3, #0
 80262e2:	bf0c      	ite	eq
 80262e4:	2301      	moveq	r3, #1
 80262e6:	2300      	movne	r3, #0
 80262e8:	4604      	mov	r4, r0
 80262ea:	460e      	mov	r6, r1
 80262ec:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80262f0:	d109      	bne.n	8026306 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80262f2:	b14d      	cbz	r5, 8026308 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80262f4:	7933      	ldrb	r3, [r6, #4]
 80262f6:	2b01      	cmp	r3, #1
 80262f8:	d10c      	bne.n	8026314 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80262fa:	6823      	ldr	r3, [r4, #0]
 80262fc:	4620      	mov	r0, r4
 80262fe:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8026300:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8026304:	4718      	bx	r3
 8026306:	b12d      	cbz	r5, 8026314 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8026308:	6823      	ldr	r3, [r4, #0]
 802630a:	4620      	mov	r0, r4
 802630c:	695b      	ldr	r3, [r3, #20]
 802630e:	4798      	blx	r3
 8026310:	2d00      	cmp	r5, #0
 8026312:	d1ef      	bne.n	80262f4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8026314:	bd70      	pop	{r4, r5, r6, pc}

08026316 <__aeabi_atexit>:
 8026316:	460b      	mov	r3, r1
 8026318:	4601      	mov	r1, r0
 802631a:	4618      	mov	r0, r3
 802631c:	f000 b852 	b.w	80263c4 <__cxa_atexit>

08026320 <_ZdlPvj>:
 8026320:	f000 b812 	b.w	8026348 <_ZdlPv>

08026324 <__cxa_guard_acquire>:
 8026324:	6803      	ldr	r3, [r0, #0]
 8026326:	07db      	lsls	r3, r3, #31
 8026328:	d406      	bmi.n	8026338 <__cxa_guard_acquire+0x14>
 802632a:	7843      	ldrb	r3, [r0, #1]
 802632c:	b103      	cbz	r3, 8026330 <__cxa_guard_acquire+0xc>
 802632e:	deff      	udf	#255	; 0xff
 8026330:	2301      	movs	r3, #1
 8026332:	7043      	strb	r3, [r0, #1]
 8026334:	4618      	mov	r0, r3
 8026336:	4770      	bx	lr
 8026338:	2000      	movs	r0, #0
 802633a:	4770      	bx	lr

0802633c <__cxa_guard_release>:
 802633c:	2301      	movs	r3, #1
 802633e:	6003      	str	r3, [r0, #0]
 8026340:	4770      	bx	lr

08026342 <__cxa_pure_virtual>:
 8026342:	b508      	push	{r3, lr}
 8026344:	f000 f80e 	bl	8026364 <_ZSt9terminatev>

08026348 <_ZdlPv>:
 8026348:	f000 b88e 	b.w	8026468 <free>

0802634c <_ZN10__cxxabiv111__terminateEPFvvE>:
 802634c:	b508      	push	{r3, lr}
 802634e:	4780      	blx	r0
 8026350:	f000 f80d 	bl	802636e <abort>

08026354 <_ZSt13get_terminatev>:
 8026354:	4b02      	ldr	r3, [pc, #8]	; (8026360 <_ZSt13get_terminatev+0xc>)
 8026356:	6818      	ldr	r0, [r3, #0]
 8026358:	f3bf 8f5b 	dmb	ish
 802635c:	4770      	bx	lr
 802635e:	bf00      	nop
 8026360:	200000dc 	.word	0x200000dc

08026364 <_ZSt9terminatev>:
 8026364:	b508      	push	{r3, lr}
 8026366:	f7ff fff5 	bl	8026354 <_ZSt13get_terminatev>
 802636a:	f7ff ffef 	bl	802634c <_ZN10__cxxabiv111__terminateEPFvvE>

0802636e <abort>:
 802636e:	b508      	push	{r3, lr}
 8026370:	2006      	movs	r0, #6
 8026372:	f000 fc9d 	bl	8026cb0 <raise>
 8026376:	2001      	movs	r0, #1
 8026378:	f7dc f9e2 	bl	8002740 <_exit>

0802637c <__assert_func>:
 802637c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802637e:	4614      	mov	r4, r2
 8026380:	461a      	mov	r2, r3
 8026382:	4b09      	ldr	r3, [pc, #36]	; (80263a8 <__assert_func+0x2c>)
 8026384:	681b      	ldr	r3, [r3, #0]
 8026386:	4605      	mov	r5, r0
 8026388:	68d8      	ldr	r0, [r3, #12]
 802638a:	b14c      	cbz	r4, 80263a0 <__assert_func+0x24>
 802638c:	4b07      	ldr	r3, [pc, #28]	; (80263ac <__assert_func+0x30>)
 802638e:	9100      	str	r1, [sp, #0]
 8026390:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8026394:	4906      	ldr	r1, [pc, #24]	; (80263b0 <__assert_func+0x34>)
 8026396:	462b      	mov	r3, r5
 8026398:	f000 f828 	bl	80263ec <fiprintf>
 802639c:	f7ff ffe7 	bl	802636e <abort>
 80263a0:	4b04      	ldr	r3, [pc, #16]	; (80263b4 <__assert_func+0x38>)
 80263a2:	461c      	mov	r4, r3
 80263a4:	e7f3      	b.n	802638e <__assert_func+0x12>
 80263a6:	bf00      	nop
 80263a8:	200000e0 	.word	0x200000e0
 80263ac:	0802a790 	.word	0x0802a790
 80263b0:	0802a79d 	.word	0x0802a79d
 80263b4:	0802a7cb 	.word	0x0802a7cb

080263b8 <atexit>:
 80263b8:	2300      	movs	r3, #0
 80263ba:	4601      	mov	r1, r0
 80263bc:	461a      	mov	r2, r3
 80263be:	4618      	mov	r0, r3
 80263c0:	f000 bd66 	b.w	8026e90 <__register_exitproc>

080263c4 <__cxa_atexit>:
 80263c4:	b510      	push	{r4, lr}
 80263c6:	4c05      	ldr	r4, [pc, #20]	; (80263dc <__cxa_atexit+0x18>)
 80263c8:	4613      	mov	r3, r2
 80263ca:	b12c      	cbz	r4, 80263d8 <__cxa_atexit+0x14>
 80263cc:	460a      	mov	r2, r1
 80263ce:	4601      	mov	r1, r0
 80263d0:	2002      	movs	r0, #2
 80263d2:	f000 fd5d 	bl	8026e90 <__register_exitproc>
 80263d6:	bd10      	pop	{r4, pc}
 80263d8:	4620      	mov	r0, r4
 80263da:	e7fc      	b.n	80263d6 <__cxa_atexit+0x12>
 80263dc:	08026e91 	.word	0x08026e91

080263e0 <__errno>:
 80263e0:	4b01      	ldr	r3, [pc, #4]	; (80263e8 <__errno+0x8>)
 80263e2:	6818      	ldr	r0, [r3, #0]
 80263e4:	4770      	bx	lr
 80263e6:	bf00      	nop
 80263e8:	200000e0 	.word	0x200000e0

080263ec <fiprintf>:
 80263ec:	b40e      	push	{r1, r2, r3}
 80263ee:	b503      	push	{r0, r1, lr}
 80263f0:	4601      	mov	r1, r0
 80263f2:	ab03      	add	r3, sp, #12
 80263f4:	4805      	ldr	r0, [pc, #20]	; (802640c <fiprintf+0x20>)
 80263f6:	f853 2b04 	ldr.w	r2, [r3], #4
 80263fa:	6800      	ldr	r0, [r0, #0]
 80263fc:	9301      	str	r3, [sp, #4]
 80263fe:	f000 f95b 	bl	80266b8 <_vfiprintf_r>
 8026402:	b002      	add	sp, #8
 8026404:	f85d eb04 	ldr.w	lr, [sp], #4
 8026408:	b003      	add	sp, #12
 802640a:	4770      	bx	lr
 802640c:	200000e0 	.word	0x200000e0

08026410 <__libc_init_array>:
 8026410:	b570      	push	{r4, r5, r6, lr}
 8026412:	4d0d      	ldr	r5, [pc, #52]	; (8026448 <__libc_init_array+0x38>)
 8026414:	4c0d      	ldr	r4, [pc, #52]	; (802644c <__libc_init_array+0x3c>)
 8026416:	1b64      	subs	r4, r4, r5
 8026418:	10a4      	asrs	r4, r4, #2
 802641a:	2600      	movs	r6, #0
 802641c:	42a6      	cmp	r6, r4
 802641e:	d109      	bne.n	8026434 <__libc_init_array+0x24>
 8026420:	4d0b      	ldr	r5, [pc, #44]	; (8026450 <__libc_init_array+0x40>)
 8026422:	4c0c      	ldr	r4, [pc, #48]	; (8026454 <__libc_init_array+0x44>)
 8026424:	f001 f86e 	bl	8027504 <_init>
 8026428:	1b64      	subs	r4, r4, r5
 802642a:	10a4      	asrs	r4, r4, #2
 802642c:	2600      	movs	r6, #0
 802642e:	42a6      	cmp	r6, r4
 8026430:	d105      	bne.n	802643e <__libc_init_array+0x2e>
 8026432:	bd70      	pop	{r4, r5, r6, pc}
 8026434:	f855 3b04 	ldr.w	r3, [r5], #4
 8026438:	4798      	blx	r3
 802643a:	3601      	adds	r6, #1
 802643c:	e7ee      	b.n	802641c <__libc_init_array+0xc>
 802643e:	f855 3b04 	ldr.w	r3, [r5], #4
 8026442:	4798      	blx	r3
 8026444:	3601      	adds	r6, #1
 8026446:	e7f2      	b.n	802642e <__libc_init_array+0x1e>
 8026448:	0802aedc 	.word	0x0802aedc
 802644c:	0802aedc 	.word	0x0802aedc
 8026450:	0802aedc 	.word	0x0802aedc
 8026454:	0802aef4 	.word	0x0802aef4

08026458 <malloc>:
 8026458:	4b02      	ldr	r3, [pc, #8]	; (8026464 <malloc+0xc>)
 802645a:	4601      	mov	r1, r0
 802645c:	6818      	ldr	r0, [r3, #0]
 802645e:	f000 b88d 	b.w	802657c <_malloc_r>
 8026462:	bf00      	nop
 8026464:	200000e0 	.word	0x200000e0

08026468 <free>:
 8026468:	4b02      	ldr	r3, [pc, #8]	; (8026474 <free+0xc>)
 802646a:	4601      	mov	r1, r0
 802646c:	6818      	ldr	r0, [r3, #0]
 802646e:	f000 b819 	b.w	80264a4 <_free_r>
 8026472:	bf00      	nop
 8026474:	200000e0 	.word	0x200000e0

08026478 <memcpy>:
 8026478:	440a      	add	r2, r1
 802647a:	4291      	cmp	r1, r2
 802647c:	f100 33ff 	add.w	r3, r0, #4294967295
 8026480:	d100      	bne.n	8026484 <memcpy+0xc>
 8026482:	4770      	bx	lr
 8026484:	b510      	push	{r4, lr}
 8026486:	f811 4b01 	ldrb.w	r4, [r1], #1
 802648a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802648e:	4291      	cmp	r1, r2
 8026490:	d1f9      	bne.n	8026486 <memcpy+0xe>
 8026492:	bd10      	pop	{r4, pc}

08026494 <memset>:
 8026494:	4402      	add	r2, r0
 8026496:	4603      	mov	r3, r0
 8026498:	4293      	cmp	r3, r2
 802649a:	d100      	bne.n	802649e <memset+0xa>
 802649c:	4770      	bx	lr
 802649e:	f803 1b01 	strb.w	r1, [r3], #1
 80264a2:	e7f9      	b.n	8026498 <memset+0x4>

080264a4 <_free_r>:
 80264a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80264a6:	2900      	cmp	r1, #0
 80264a8:	d044      	beq.n	8026534 <_free_r+0x90>
 80264aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80264ae:	9001      	str	r0, [sp, #4]
 80264b0:	2b00      	cmp	r3, #0
 80264b2:	f1a1 0404 	sub.w	r4, r1, #4
 80264b6:	bfb8      	it	lt
 80264b8:	18e4      	addlt	r4, r4, r3
 80264ba:	f000 ff6b 	bl	8027394 <__malloc_lock>
 80264be:	4a1e      	ldr	r2, [pc, #120]	; (8026538 <_free_r+0x94>)
 80264c0:	9801      	ldr	r0, [sp, #4]
 80264c2:	6813      	ldr	r3, [r2, #0]
 80264c4:	b933      	cbnz	r3, 80264d4 <_free_r+0x30>
 80264c6:	6063      	str	r3, [r4, #4]
 80264c8:	6014      	str	r4, [r2, #0]
 80264ca:	b003      	add	sp, #12
 80264cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80264d0:	f000 bf66 	b.w	80273a0 <__malloc_unlock>
 80264d4:	42a3      	cmp	r3, r4
 80264d6:	d908      	bls.n	80264ea <_free_r+0x46>
 80264d8:	6825      	ldr	r5, [r4, #0]
 80264da:	1961      	adds	r1, r4, r5
 80264dc:	428b      	cmp	r3, r1
 80264de:	bf01      	itttt	eq
 80264e0:	6819      	ldreq	r1, [r3, #0]
 80264e2:	685b      	ldreq	r3, [r3, #4]
 80264e4:	1949      	addeq	r1, r1, r5
 80264e6:	6021      	streq	r1, [r4, #0]
 80264e8:	e7ed      	b.n	80264c6 <_free_r+0x22>
 80264ea:	461a      	mov	r2, r3
 80264ec:	685b      	ldr	r3, [r3, #4]
 80264ee:	b10b      	cbz	r3, 80264f4 <_free_r+0x50>
 80264f0:	42a3      	cmp	r3, r4
 80264f2:	d9fa      	bls.n	80264ea <_free_r+0x46>
 80264f4:	6811      	ldr	r1, [r2, #0]
 80264f6:	1855      	adds	r5, r2, r1
 80264f8:	42a5      	cmp	r5, r4
 80264fa:	d10b      	bne.n	8026514 <_free_r+0x70>
 80264fc:	6824      	ldr	r4, [r4, #0]
 80264fe:	4421      	add	r1, r4
 8026500:	1854      	adds	r4, r2, r1
 8026502:	42a3      	cmp	r3, r4
 8026504:	6011      	str	r1, [r2, #0]
 8026506:	d1e0      	bne.n	80264ca <_free_r+0x26>
 8026508:	681c      	ldr	r4, [r3, #0]
 802650a:	685b      	ldr	r3, [r3, #4]
 802650c:	6053      	str	r3, [r2, #4]
 802650e:	4421      	add	r1, r4
 8026510:	6011      	str	r1, [r2, #0]
 8026512:	e7da      	b.n	80264ca <_free_r+0x26>
 8026514:	d902      	bls.n	802651c <_free_r+0x78>
 8026516:	230c      	movs	r3, #12
 8026518:	6003      	str	r3, [r0, #0]
 802651a:	e7d6      	b.n	80264ca <_free_r+0x26>
 802651c:	6825      	ldr	r5, [r4, #0]
 802651e:	1961      	adds	r1, r4, r5
 8026520:	428b      	cmp	r3, r1
 8026522:	bf04      	itt	eq
 8026524:	6819      	ldreq	r1, [r3, #0]
 8026526:	685b      	ldreq	r3, [r3, #4]
 8026528:	6063      	str	r3, [r4, #4]
 802652a:	bf04      	itt	eq
 802652c:	1949      	addeq	r1, r1, r5
 802652e:	6021      	streq	r1, [r4, #0]
 8026530:	6054      	str	r4, [r2, #4]
 8026532:	e7ca      	b.n	80264ca <_free_r+0x26>
 8026534:	b003      	add	sp, #12
 8026536:	bd30      	pop	{r4, r5, pc}
 8026538:	2000f870 	.word	0x2000f870

0802653c <sbrk_aligned>:
 802653c:	b570      	push	{r4, r5, r6, lr}
 802653e:	4e0e      	ldr	r6, [pc, #56]	; (8026578 <sbrk_aligned+0x3c>)
 8026540:	460c      	mov	r4, r1
 8026542:	6831      	ldr	r1, [r6, #0]
 8026544:	4605      	mov	r5, r0
 8026546:	b911      	cbnz	r1, 802654e <sbrk_aligned+0x12>
 8026548:	f000 fb7a 	bl	8026c40 <_sbrk_r>
 802654c:	6030      	str	r0, [r6, #0]
 802654e:	4621      	mov	r1, r4
 8026550:	4628      	mov	r0, r5
 8026552:	f000 fb75 	bl	8026c40 <_sbrk_r>
 8026556:	1c43      	adds	r3, r0, #1
 8026558:	d00a      	beq.n	8026570 <sbrk_aligned+0x34>
 802655a:	1cc4      	adds	r4, r0, #3
 802655c:	f024 0403 	bic.w	r4, r4, #3
 8026560:	42a0      	cmp	r0, r4
 8026562:	d007      	beq.n	8026574 <sbrk_aligned+0x38>
 8026564:	1a21      	subs	r1, r4, r0
 8026566:	4628      	mov	r0, r5
 8026568:	f000 fb6a 	bl	8026c40 <_sbrk_r>
 802656c:	3001      	adds	r0, #1
 802656e:	d101      	bne.n	8026574 <sbrk_aligned+0x38>
 8026570:	f04f 34ff 	mov.w	r4, #4294967295
 8026574:	4620      	mov	r0, r4
 8026576:	bd70      	pop	{r4, r5, r6, pc}
 8026578:	2000f874 	.word	0x2000f874

0802657c <_malloc_r>:
 802657c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026580:	1ccd      	adds	r5, r1, #3
 8026582:	f025 0503 	bic.w	r5, r5, #3
 8026586:	3508      	adds	r5, #8
 8026588:	2d0c      	cmp	r5, #12
 802658a:	bf38      	it	cc
 802658c:	250c      	movcc	r5, #12
 802658e:	2d00      	cmp	r5, #0
 8026590:	4607      	mov	r7, r0
 8026592:	db01      	blt.n	8026598 <_malloc_r+0x1c>
 8026594:	42a9      	cmp	r1, r5
 8026596:	d905      	bls.n	80265a4 <_malloc_r+0x28>
 8026598:	230c      	movs	r3, #12
 802659a:	603b      	str	r3, [r7, #0]
 802659c:	2600      	movs	r6, #0
 802659e:	4630      	mov	r0, r6
 80265a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80265a4:	4e2e      	ldr	r6, [pc, #184]	; (8026660 <_malloc_r+0xe4>)
 80265a6:	f000 fef5 	bl	8027394 <__malloc_lock>
 80265aa:	6833      	ldr	r3, [r6, #0]
 80265ac:	461c      	mov	r4, r3
 80265ae:	bb34      	cbnz	r4, 80265fe <_malloc_r+0x82>
 80265b0:	4629      	mov	r1, r5
 80265b2:	4638      	mov	r0, r7
 80265b4:	f7ff ffc2 	bl	802653c <sbrk_aligned>
 80265b8:	1c43      	adds	r3, r0, #1
 80265ba:	4604      	mov	r4, r0
 80265bc:	d14d      	bne.n	802665a <_malloc_r+0xde>
 80265be:	6834      	ldr	r4, [r6, #0]
 80265c0:	4626      	mov	r6, r4
 80265c2:	2e00      	cmp	r6, #0
 80265c4:	d140      	bne.n	8026648 <_malloc_r+0xcc>
 80265c6:	6823      	ldr	r3, [r4, #0]
 80265c8:	4631      	mov	r1, r6
 80265ca:	4638      	mov	r0, r7
 80265cc:	eb04 0803 	add.w	r8, r4, r3
 80265d0:	f000 fb36 	bl	8026c40 <_sbrk_r>
 80265d4:	4580      	cmp	r8, r0
 80265d6:	d13a      	bne.n	802664e <_malloc_r+0xd2>
 80265d8:	6821      	ldr	r1, [r4, #0]
 80265da:	3503      	adds	r5, #3
 80265dc:	1a6d      	subs	r5, r5, r1
 80265de:	f025 0503 	bic.w	r5, r5, #3
 80265e2:	3508      	adds	r5, #8
 80265e4:	2d0c      	cmp	r5, #12
 80265e6:	bf38      	it	cc
 80265e8:	250c      	movcc	r5, #12
 80265ea:	4629      	mov	r1, r5
 80265ec:	4638      	mov	r0, r7
 80265ee:	f7ff ffa5 	bl	802653c <sbrk_aligned>
 80265f2:	3001      	adds	r0, #1
 80265f4:	d02b      	beq.n	802664e <_malloc_r+0xd2>
 80265f6:	6823      	ldr	r3, [r4, #0]
 80265f8:	442b      	add	r3, r5
 80265fa:	6023      	str	r3, [r4, #0]
 80265fc:	e00e      	b.n	802661c <_malloc_r+0xa0>
 80265fe:	6822      	ldr	r2, [r4, #0]
 8026600:	1b52      	subs	r2, r2, r5
 8026602:	d41e      	bmi.n	8026642 <_malloc_r+0xc6>
 8026604:	2a0b      	cmp	r2, #11
 8026606:	d916      	bls.n	8026636 <_malloc_r+0xba>
 8026608:	1961      	adds	r1, r4, r5
 802660a:	42a3      	cmp	r3, r4
 802660c:	6025      	str	r5, [r4, #0]
 802660e:	bf18      	it	ne
 8026610:	6059      	strne	r1, [r3, #4]
 8026612:	6863      	ldr	r3, [r4, #4]
 8026614:	bf08      	it	eq
 8026616:	6031      	streq	r1, [r6, #0]
 8026618:	5162      	str	r2, [r4, r5]
 802661a:	604b      	str	r3, [r1, #4]
 802661c:	4638      	mov	r0, r7
 802661e:	f104 060b 	add.w	r6, r4, #11
 8026622:	f000 febd 	bl	80273a0 <__malloc_unlock>
 8026626:	f026 0607 	bic.w	r6, r6, #7
 802662a:	1d23      	adds	r3, r4, #4
 802662c:	1af2      	subs	r2, r6, r3
 802662e:	d0b6      	beq.n	802659e <_malloc_r+0x22>
 8026630:	1b9b      	subs	r3, r3, r6
 8026632:	50a3      	str	r3, [r4, r2]
 8026634:	e7b3      	b.n	802659e <_malloc_r+0x22>
 8026636:	6862      	ldr	r2, [r4, #4]
 8026638:	42a3      	cmp	r3, r4
 802663a:	bf0c      	ite	eq
 802663c:	6032      	streq	r2, [r6, #0]
 802663e:	605a      	strne	r2, [r3, #4]
 8026640:	e7ec      	b.n	802661c <_malloc_r+0xa0>
 8026642:	4623      	mov	r3, r4
 8026644:	6864      	ldr	r4, [r4, #4]
 8026646:	e7b2      	b.n	80265ae <_malloc_r+0x32>
 8026648:	4634      	mov	r4, r6
 802664a:	6876      	ldr	r6, [r6, #4]
 802664c:	e7b9      	b.n	80265c2 <_malloc_r+0x46>
 802664e:	230c      	movs	r3, #12
 8026650:	603b      	str	r3, [r7, #0]
 8026652:	4638      	mov	r0, r7
 8026654:	f000 fea4 	bl	80273a0 <__malloc_unlock>
 8026658:	e7a1      	b.n	802659e <_malloc_r+0x22>
 802665a:	6025      	str	r5, [r4, #0]
 802665c:	e7de      	b.n	802661c <_malloc_r+0xa0>
 802665e:	bf00      	nop
 8026660:	2000f870 	.word	0x2000f870

08026664 <__sfputc_r>:
 8026664:	6893      	ldr	r3, [r2, #8]
 8026666:	3b01      	subs	r3, #1
 8026668:	2b00      	cmp	r3, #0
 802666a:	b410      	push	{r4}
 802666c:	6093      	str	r3, [r2, #8]
 802666e:	da08      	bge.n	8026682 <__sfputc_r+0x1e>
 8026670:	6994      	ldr	r4, [r2, #24]
 8026672:	42a3      	cmp	r3, r4
 8026674:	db01      	blt.n	802667a <__sfputc_r+0x16>
 8026676:	290a      	cmp	r1, #10
 8026678:	d103      	bne.n	8026682 <__sfputc_r+0x1e>
 802667a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802667e:	f000 bb47 	b.w	8026d10 <__swbuf_r>
 8026682:	6813      	ldr	r3, [r2, #0]
 8026684:	1c58      	adds	r0, r3, #1
 8026686:	6010      	str	r0, [r2, #0]
 8026688:	7019      	strb	r1, [r3, #0]
 802668a:	4608      	mov	r0, r1
 802668c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026690:	4770      	bx	lr

08026692 <__sfputs_r>:
 8026692:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026694:	4606      	mov	r6, r0
 8026696:	460f      	mov	r7, r1
 8026698:	4614      	mov	r4, r2
 802669a:	18d5      	adds	r5, r2, r3
 802669c:	42ac      	cmp	r4, r5
 802669e:	d101      	bne.n	80266a4 <__sfputs_r+0x12>
 80266a0:	2000      	movs	r0, #0
 80266a2:	e007      	b.n	80266b4 <__sfputs_r+0x22>
 80266a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80266a8:	463a      	mov	r2, r7
 80266aa:	4630      	mov	r0, r6
 80266ac:	f7ff ffda 	bl	8026664 <__sfputc_r>
 80266b0:	1c43      	adds	r3, r0, #1
 80266b2:	d1f3      	bne.n	802669c <__sfputs_r+0xa>
 80266b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080266b8 <_vfiprintf_r>:
 80266b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80266bc:	460d      	mov	r5, r1
 80266be:	b09d      	sub	sp, #116	; 0x74
 80266c0:	4614      	mov	r4, r2
 80266c2:	4698      	mov	r8, r3
 80266c4:	4606      	mov	r6, r0
 80266c6:	b118      	cbz	r0, 80266d0 <_vfiprintf_r+0x18>
 80266c8:	6983      	ldr	r3, [r0, #24]
 80266ca:	b90b      	cbnz	r3, 80266d0 <_vfiprintf_r+0x18>
 80266cc:	f000 fd5c 	bl	8027188 <__sinit>
 80266d0:	4b89      	ldr	r3, [pc, #548]	; (80268f8 <_vfiprintf_r+0x240>)
 80266d2:	429d      	cmp	r5, r3
 80266d4:	d11b      	bne.n	802670e <_vfiprintf_r+0x56>
 80266d6:	6875      	ldr	r5, [r6, #4]
 80266d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80266da:	07d9      	lsls	r1, r3, #31
 80266dc:	d405      	bmi.n	80266ea <_vfiprintf_r+0x32>
 80266de:	89ab      	ldrh	r3, [r5, #12]
 80266e0:	059a      	lsls	r2, r3, #22
 80266e2:	d402      	bmi.n	80266ea <_vfiprintf_r+0x32>
 80266e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80266e6:	f000 fded 	bl	80272c4 <__retarget_lock_acquire_recursive>
 80266ea:	89ab      	ldrh	r3, [r5, #12]
 80266ec:	071b      	lsls	r3, r3, #28
 80266ee:	d501      	bpl.n	80266f4 <_vfiprintf_r+0x3c>
 80266f0:	692b      	ldr	r3, [r5, #16]
 80266f2:	b9eb      	cbnz	r3, 8026730 <_vfiprintf_r+0x78>
 80266f4:	4629      	mov	r1, r5
 80266f6:	4630      	mov	r0, r6
 80266f8:	f000 fb5c 	bl	8026db4 <__swsetup_r>
 80266fc:	b1c0      	cbz	r0, 8026730 <_vfiprintf_r+0x78>
 80266fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026700:	07dc      	lsls	r4, r3, #31
 8026702:	d50e      	bpl.n	8026722 <_vfiprintf_r+0x6a>
 8026704:	f04f 30ff 	mov.w	r0, #4294967295
 8026708:	b01d      	add	sp, #116	; 0x74
 802670a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802670e:	4b7b      	ldr	r3, [pc, #492]	; (80268fc <_vfiprintf_r+0x244>)
 8026710:	429d      	cmp	r5, r3
 8026712:	d101      	bne.n	8026718 <_vfiprintf_r+0x60>
 8026714:	68b5      	ldr	r5, [r6, #8]
 8026716:	e7df      	b.n	80266d8 <_vfiprintf_r+0x20>
 8026718:	4b79      	ldr	r3, [pc, #484]	; (8026900 <_vfiprintf_r+0x248>)
 802671a:	429d      	cmp	r5, r3
 802671c:	bf08      	it	eq
 802671e:	68f5      	ldreq	r5, [r6, #12]
 8026720:	e7da      	b.n	80266d8 <_vfiprintf_r+0x20>
 8026722:	89ab      	ldrh	r3, [r5, #12]
 8026724:	0598      	lsls	r0, r3, #22
 8026726:	d4ed      	bmi.n	8026704 <_vfiprintf_r+0x4c>
 8026728:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802672a:	f000 fdcd 	bl	80272c8 <__retarget_lock_release_recursive>
 802672e:	e7e9      	b.n	8026704 <_vfiprintf_r+0x4c>
 8026730:	2300      	movs	r3, #0
 8026732:	9309      	str	r3, [sp, #36]	; 0x24
 8026734:	2320      	movs	r3, #32
 8026736:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802673a:	f8cd 800c 	str.w	r8, [sp, #12]
 802673e:	2330      	movs	r3, #48	; 0x30
 8026740:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8026904 <_vfiprintf_r+0x24c>
 8026744:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8026748:	f04f 0901 	mov.w	r9, #1
 802674c:	4623      	mov	r3, r4
 802674e:	469a      	mov	sl, r3
 8026750:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026754:	b10a      	cbz	r2, 802675a <_vfiprintf_r+0xa2>
 8026756:	2a25      	cmp	r2, #37	; 0x25
 8026758:	d1f9      	bne.n	802674e <_vfiprintf_r+0x96>
 802675a:	ebba 0b04 	subs.w	fp, sl, r4
 802675e:	d00b      	beq.n	8026778 <_vfiprintf_r+0xc0>
 8026760:	465b      	mov	r3, fp
 8026762:	4622      	mov	r2, r4
 8026764:	4629      	mov	r1, r5
 8026766:	4630      	mov	r0, r6
 8026768:	f7ff ff93 	bl	8026692 <__sfputs_r>
 802676c:	3001      	adds	r0, #1
 802676e:	f000 80aa 	beq.w	80268c6 <_vfiprintf_r+0x20e>
 8026772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026774:	445a      	add	r2, fp
 8026776:	9209      	str	r2, [sp, #36]	; 0x24
 8026778:	f89a 3000 	ldrb.w	r3, [sl]
 802677c:	2b00      	cmp	r3, #0
 802677e:	f000 80a2 	beq.w	80268c6 <_vfiprintf_r+0x20e>
 8026782:	2300      	movs	r3, #0
 8026784:	f04f 32ff 	mov.w	r2, #4294967295
 8026788:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802678c:	f10a 0a01 	add.w	sl, sl, #1
 8026790:	9304      	str	r3, [sp, #16]
 8026792:	9307      	str	r3, [sp, #28]
 8026794:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026798:	931a      	str	r3, [sp, #104]	; 0x68
 802679a:	4654      	mov	r4, sl
 802679c:	2205      	movs	r2, #5
 802679e:	f814 1b01 	ldrb.w	r1, [r4], #1
 80267a2:	4858      	ldr	r0, [pc, #352]	; (8026904 <_vfiprintf_r+0x24c>)
 80267a4:	f7d9 fd2c 	bl	8000200 <memchr>
 80267a8:	9a04      	ldr	r2, [sp, #16]
 80267aa:	b9d8      	cbnz	r0, 80267e4 <_vfiprintf_r+0x12c>
 80267ac:	06d1      	lsls	r1, r2, #27
 80267ae:	bf44      	itt	mi
 80267b0:	2320      	movmi	r3, #32
 80267b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80267b6:	0713      	lsls	r3, r2, #28
 80267b8:	bf44      	itt	mi
 80267ba:	232b      	movmi	r3, #43	; 0x2b
 80267bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80267c0:	f89a 3000 	ldrb.w	r3, [sl]
 80267c4:	2b2a      	cmp	r3, #42	; 0x2a
 80267c6:	d015      	beq.n	80267f4 <_vfiprintf_r+0x13c>
 80267c8:	9a07      	ldr	r2, [sp, #28]
 80267ca:	4654      	mov	r4, sl
 80267cc:	2000      	movs	r0, #0
 80267ce:	f04f 0c0a 	mov.w	ip, #10
 80267d2:	4621      	mov	r1, r4
 80267d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80267d8:	3b30      	subs	r3, #48	; 0x30
 80267da:	2b09      	cmp	r3, #9
 80267dc:	d94e      	bls.n	802687c <_vfiprintf_r+0x1c4>
 80267de:	b1b0      	cbz	r0, 802680e <_vfiprintf_r+0x156>
 80267e0:	9207      	str	r2, [sp, #28]
 80267e2:	e014      	b.n	802680e <_vfiprintf_r+0x156>
 80267e4:	eba0 0308 	sub.w	r3, r0, r8
 80267e8:	fa09 f303 	lsl.w	r3, r9, r3
 80267ec:	4313      	orrs	r3, r2
 80267ee:	9304      	str	r3, [sp, #16]
 80267f0:	46a2      	mov	sl, r4
 80267f2:	e7d2      	b.n	802679a <_vfiprintf_r+0xe2>
 80267f4:	9b03      	ldr	r3, [sp, #12]
 80267f6:	1d19      	adds	r1, r3, #4
 80267f8:	681b      	ldr	r3, [r3, #0]
 80267fa:	9103      	str	r1, [sp, #12]
 80267fc:	2b00      	cmp	r3, #0
 80267fe:	bfbb      	ittet	lt
 8026800:	425b      	neglt	r3, r3
 8026802:	f042 0202 	orrlt.w	r2, r2, #2
 8026806:	9307      	strge	r3, [sp, #28]
 8026808:	9307      	strlt	r3, [sp, #28]
 802680a:	bfb8      	it	lt
 802680c:	9204      	strlt	r2, [sp, #16]
 802680e:	7823      	ldrb	r3, [r4, #0]
 8026810:	2b2e      	cmp	r3, #46	; 0x2e
 8026812:	d10c      	bne.n	802682e <_vfiprintf_r+0x176>
 8026814:	7863      	ldrb	r3, [r4, #1]
 8026816:	2b2a      	cmp	r3, #42	; 0x2a
 8026818:	d135      	bne.n	8026886 <_vfiprintf_r+0x1ce>
 802681a:	9b03      	ldr	r3, [sp, #12]
 802681c:	1d1a      	adds	r2, r3, #4
 802681e:	681b      	ldr	r3, [r3, #0]
 8026820:	9203      	str	r2, [sp, #12]
 8026822:	2b00      	cmp	r3, #0
 8026824:	bfb8      	it	lt
 8026826:	f04f 33ff 	movlt.w	r3, #4294967295
 802682a:	3402      	adds	r4, #2
 802682c:	9305      	str	r3, [sp, #20]
 802682e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8026914 <_vfiprintf_r+0x25c>
 8026832:	7821      	ldrb	r1, [r4, #0]
 8026834:	2203      	movs	r2, #3
 8026836:	4650      	mov	r0, sl
 8026838:	f7d9 fce2 	bl	8000200 <memchr>
 802683c:	b140      	cbz	r0, 8026850 <_vfiprintf_r+0x198>
 802683e:	2340      	movs	r3, #64	; 0x40
 8026840:	eba0 000a 	sub.w	r0, r0, sl
 8026844:	fa03 f000 	lsl.w	r0, r3, r0
 8026848:	9b04      	ldr	r3, [sp, #16]
 802684a:	4303      	orrs	r3, r0
 802684c:	3401      	adds	r4, #1
 802684e:	9304      	str	r3, [sp, #16]
 8026850:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026854:	482c      	ldr	r0, [pc, #176]	; (8026908 <_vfiprintf_r+0x250>)
 8026856:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802685a:	2206      	movs	r2, #6
 802685c:	f7d9 fcd0 	bl	8000200 <memchr>
 8026860:	2800      	cmp	r0, #0
 8026862:	d03f      	beq.n	80268e4 <_vfiprintf_r+0x22c>
 8026864:	4b29      	ldr	r3, [pc, #164]	; (802690c <_vfiprintf_r+0x254>)
 8026866:	bb1b      	cbnz	r3, 80268b0 <_vfiprintf_r+0x1f8>
 8026868:	9b03      	ldr	r3, [sp, #12]
 802686a:	3307      	adds	r3, #7
 802686c:	f023 0307 	bic.w	r3, r3, #7
 8026870:	3308      	adds	r3, #8
 8026872:	9303      	str	r3, [sp, #12]
 8026874:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026876:	443b      	add	r3, r7
 8026878:	9309      	str	r3, [sp, #36]	; 0x24
 802687a:	e767      	b.n	802674c <_vfiprintf_r+0x94>
 802687c:	fb0c 3202 	mla	r2, ip, r2, r3
 8026880:	460c      	mov	r4, r1
 8026882:	2001      	movs	r0, #1
 8026884:	e7a5      	b.n	80267d2 <_vfiprintf_r+0x11a>
 8026886:	2300      	movs	r3, #0
 8026888:	3401      	adds	r4, #1
 802688a:	9305      	str	r3, [sp, #20]
 802688c:	4619      	mov	r1, r3
 802688e:	f04f 0c0a 	mov.w	ip, #10
 8026892:	4620      	mov	r0, r4
 8026894:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026898:	3a30      	subs	r2, #48	; 0x30
 802689a:	2a09      	cmp	r2, #9
 802689c:	d903      	bls.n	80268a6 <_vfiprintf_r+0x1ee>
 802689e:	2b00      	cmp	r3, #0
 80268a0:	d0c5      	beq.n	802682e <_vfiprintf_r+0x176>
 80268a2:	9105      	str	r1, [sp, #20]
 80268a4:	e7c3      	b.n	802682e <_vfiprintf_r+0x176>
 80268a6:	fb0c 2101 	mla	r1, ip, r1, r2
 80268aa:	4604      	mov	r4, r0
 80268ac:	2301      	movs	r3, #1
 80268ae:	e7f0      	b.n	8026892 <_vfiprintf_r+0x1da>
 80268b0:	ab03      	add	r3, sp, #12
 80268b2:	9300      	str	r3, [sp, #0]
 80268b4:	462a      	mov	r2, r5
 80268b6:	4b16      	ldr	r3, [pc, #88]	; (8026910 <_vfiprintf_r+0x258>)
 80268b8:	a904      	add	r1, sp, #16
 80268ba:	4630      	mov	r0, r6
 80268bc:	f3af 8000 	nop.w
 80268c0:	4607      	mov	r7, r0
 80268c2:	1c78      	adds	r0, r7, #1
 80268c4:	d1d6      	bne.n	8026874 <_vfiprintf_r+0x1bc>
 80268c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80268c8:	07d9      	lsls	r1, r3, #31
 80268ca:	d405      	bmi.n	80268d8 <_vfiprintf_r+0x220>
 80268cc:	89ab      	ldrh	r3, [r5, #12]
 80268ce:	059a      	lsls	r2, r3, #22
 80268d0:	d402      	bmi.n	80268d8 <_vfiprintf_r+0x220>
 80268d2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80268d4:	f000 fcf8 	bl	80272c8 <__retarget_lock_release_recursive>
 80268d8:	89ab      	ldrh	r3, [r5, #12]
 80268da:	065b      	lsls	r3, r3, #25
 80268dc:	f53f af12 	bmi.w	8026704 <_vfiprintf_r+0x4c>
 80268e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 80268e2:	e711      	b.n	8026708 <_vfiprintf_r+0x50>
 80268e4:	ab03      	add	r3, sp, #12
 80268e6:	9300      	str	r3, [sp, #0]
 80268e8:	462a      	mov	r2, r5
 80268ea:	4b09      	ldr	r3, [pc, #36]	; (8026910 <_vfiprintf_r+0x258>)
 80268ec:	a904      	add	r1, sp, #16
 80268ee:	4630      	mov	r0, r6
 80268f0:	f000 f880 	bl	80269f4 <_printf_i>
 80268f4:	e7e4      	b.n	80268c0 <_vfiprintf_r+0x208>
 80268f6:	bf00      	nop
 80268f8:	0802a828 	.word	0x0802a828
 80268fc:	0802a848 	.word	0x0802a848
 8026900:	0802a808 	.word	0x0802a808
 8026904:	0802a7d0 	.word	0x0802a7d0
 8026908:	0802a7da 	.word	0x0802a7da
 802690c:	00000000 	.word	0x00000000
 8026910:	08026693 	.word	0x08026693
 8026914:	0802a7d6 	.word	0x0802a7d6

08026918 <_printf_common>:
 8026918:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802691c:	4616      	mov	r6, r2
 802691e:	4699      	mov	r9, r3
 8026920:	688a      	ldr	r2, [r1, #8]
 8026922:	690b      	ldr	r3, [r1, #16]
 8026924:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8026928:	4293      	cmp	r3, r2
 802692a:	bfb8      	it	lt
 802692c:	4613      	movlt	r3, r2
 802692e:	6033      	str	r3, [r6, #0]
 8026930:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8026934:	4607      	mov	r7, r0
 8026936:	460c      	mov	r4, r1
 8026938:	b10a      	cbz	r2, 802693e <_printf_common+0x26>
 802693a:	3301      	adds	r3, #1
 802693c:	6033      	str	r3, [r6, #0]
 802693e:	6823      	ldr	r3, [r4, #0]
 8026940:	0699      	lsls	r1, r3, #26
 8026942:	bf42      	ittt	mi
 8026944:	6833      	ldrmi	r3, [r6, #0]
 8026946:	3302      	addmi	r3, #2
 8026948:	6033      	strmi	r3, [r6, #0]
 802694a:	6825      	ldr	r5, [r4, #0]
 802694c:	f015 0506 	ands.w	r5, r5, #6
 8026950:	d106      	bne.n	8026960 <_printf_common+0x48>
 8026952:	f104 0a19 	add.w	sl, r4, #25
 8026956:	68e3      	ldr	r3, [r4, #12]
 8026958:	6832      	ldr	r2, [r6, #0]
 802695a:	1a9b      	subs	r3, r3, r2
 802695c:	42ab      	cmp	r3, r5
 802695e:	dc26      	bgt.n	80269ae <_printf_common+0x96>
 8026960:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026964:	1e13      	subs	r3, r2, #0
 8026966:	6822      	ldr	r2, [r4, #0]
 8026968:	bf18      	it	ne
 802696a:	2301      	movne	r3, #1
 802696c:	0692      	lsls	r2, r2, #26
 802696e:	d42b      	bmi.n	80269c8 <_printf_common+0xb0>
 8026970:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026974:	4649      	mov	r1, r9
 8026976:	4638      	mov	r0, r7
 8026978:	47c0      	blx	r8
 802697a:	3001      	adds	r0, #1
 802697c:	d01e      	beq.n	80269bc <_printf_common+0xa4>
 802697e:	6823      	ldr	r3, [r4, #0]
 8026980:	68e5      	ldr	r5, [r4, #12]
 8026982:	6832      	ldr	r2, [r6, #0]
 8026984:	f003 0306 	and.w	r3, r3, #6
 8026988:	2b04      	cmp	r3, #4
 802698a:	bf08      	it	eq
 802698c:	1aad      	subeq	r5, r5, r2
 802698e:	68a3      	ldr	r3, [r4, #8]
 8026990:	6922      	ldr	r2, [r4, #16]
 8026992:	bf0c      	ite	eq
 8026994:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026998:	2500      	movne	r5, #0
 802699a:	4293      	cmp	r3, r2
 802699c:	bfc4      	itt	gt
 802699e:	1a9b      	subgt	r3, r3, r2
 80269a0:	18ed      	addgt	r5, r5, r3
 80269a2:	2600      	movs	r6, #0
 80269a4:	341a      	adds	r4, #26
 80269a6:	42b5      	cmp	r5, r6
 80269a8:	d11a      	bne.n	80269e0 <_printf_common+0xc8>
 80269aa:	2000      	movs	r0, #0
 80269ac:	e008      	b.n	80269c0 <_printf_common+0xa8>
 80269ae:	2301      	movs	r3, #1
 80269b0:	4652      	mov	r2, sl
 80269b2:	4649      	mov	r1, r9
 80269b4:	4638      	mov	r0, r7
 80269b6:	47c0      	blx	r8
 80269b8:	3001      	adds	r0, #1
 80269ba:	d103      	bne.n	80269c4 <_printf_common+0xac>
 80269bc:	f04f 30ff 	mov.w	r0, #4294967295
 80269c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80269c4:	3501      	adds	r5, #1
 80269c6:	e7c6      	b.n	8026956 <_printf_common+0x3e>
 80269c8:	18e1      	adds	r1, r4, r3
 80269ca:	1c5a      	adds	r2, r3, #1
 80269cc:	2030      	movs	r0, #48	; 0x30
 80269ce:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80269d2:	4422      	add	r2, r4
 80269d4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80269d8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80269dc:	3302      	adds	r3, #2
 80269de:	e7c7      	b.n	8026970 <_printf_common+0x58>
 80269e0:	2301      	movs	r3, #1
 80269e2:	4622      	mov	r2, r4
 80269e4:	4649      	mov	r1, r9
 80269e6:	4638      	mov	r0, r7
 80269e8:	47c0      	blx	r8
 80269ea:	3001      	adds	r0, #1
 80269ec:	d0e6      	beq.n	80269bc <_printf_common+0xa4>
 80269ee:	3601      	adds	r6, #1
 80269f0:	e7d9      	b.n	80269a6 <_printf_common+0x8e>
	...

080269f4 <_printf_i>:
 80269f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80269f8:	7e0f      	ldrb	r7, [r1, #24]
 80269fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80269fc:	2f78      	cmp	r7, #120	; 0x78
 80269fe:	4691      	mov	r9, r2
 8026a00:	4680      	mov	r8, r0
 8026a02:	460c      	mov	r4, r1
 8026a04:	469a      	mov	sl, r3
 8026a06:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8026a0a:	d807      	bhi.n	8026a1c <_printf_i+0x28>
 8026a0c:	2f62      	cmp	r7, #98	; 0x62
 8026a0e:	d80a      	bhi.n	8026a26 <_printf_i+0x32>
 8026a10:	2f00      	cmp	r7, #0
 8026a12:	f000 80d8 	beq.w	8026bc6 <_printf_i+0x1d2>
 8026a16:	2f58      	cmp	r7, #88	; 0x58
 8026a18:	f000 80a3 	beq.w	8026b62 <_printf_i+0x16e>
 8026a1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026a20:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026a24:	e03a      	b.n	8026a9c <_printf_i+0xa8>
 8026a26:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8026a2a:	2b15      	cmp	r3, #21
 8026a2c:	d8f6      	bhi.n	8026a1c <_printf_i+0x28>
 8026a2e:	a101      	add	r1, pc, #4	; (adr r1, 8026a34 <_printf_i+0x40>)
 8026a30:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026a34:	08026a8d 	.word	0x08026a8d
 8026a38:	08026aa1 	.word	0x08026aa1
 8026a3c:	08026a1d 	.word	0x08026a1d
 8026a40:	08026a1d 	.word	0x08026a1d
 8026a44:	08026a1d 	.word	0x08026a1d
 8026a48:	08026a1d 	.word	0x08026a1d
 8026a4c:	08026aa1 	.word	0x08026aa1
 8026a50:	08026a1d 	.word	0x08026a1d
 8026a54:	08026a1d 	.word	0x08026a1d
 8026a58:	08026a1d 	.word	0x08026a1d
 8026a5c:	08026a1d 	.word	0x08026a1d
 8026a60:	08026bad 	.word	0x08026bad
 8026a64:	08026ad1 	.word	0x08026ad1
 8026a68:	08026b8f 	.word	0x08026b8f
 8026a6c:	08026a1d 	.word	0x08026a1d
 8026a70:	08026a1d 	.word	0x08026a1d
 8026a74:	08026bcf 	.word	0x08026bcf
 8026a78:	08026a1d 	.word	0x08026a1d
 8026a7c:	08026ad1 	.word	0x08026ad1
 8026a80:	08026a1d 	.word	0x08026a1d
 8026a84:	08026a1d 	.word	0x08026a1d
 8026a88:	08026b97 	.word	0x08026b97
 8026a8c:	682b      	ldr	r3, [r5, #0]
 8026a8e:	1d1a      	adds	r2, r3, #4
 8026a90:	681b      	ldr	r3, [r3, #0]
 8026a92:	602a      	str	r2, [r5, #0]
 8026a94:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026a98:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8026a9c:	2301      	movs	r3, #1
 8026a9e:	e0a3      	b.n	8026be8 <_printf_i+0x1f4>
 8026aa0:	6820      	ldr	r0, [r4, #0]
 8026aa2:	6829      	ldr	r1, [r5, #0]
 8026aa4:	0606      	lsls	r6, r0, #24
 8026aa6:	f101 0304 	add.w	r3, r1, #4
 8026aaa:	d50a      	bpl.n	8026ac2 <_printf_i+0xce>
 8026aac:	680e      	ldr	r6, [r1, #0]
 8026aae:	602b      	str	r3, [r5, #0]
 8026ab0:	2e00      	cmp	r6, #0
 8026ab2:	da03      	bge.n	8026abc <_printf_i+0xc8>
 8026ab4:	232d      	movs	r3, #45	; 0x2d
 8026ab6:	4276      	negs	r6, r6
 8026ab8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026abc:	485e      	ldr	r0, [pc, #376]	; (8026c38 <_printf_i+0x244>)
 8026abe:	230a      	movs	r3, #10
 8026ac0:	e019      	b.n	8026af6 <_printf_i+0x102>
 8026ac2:	680e      	ldr	r6, [r1, #0]
 8026ac4:	602b      	str	r3, [r5, #0]
 8026ac6:	f010 0f40 	tst.w	r0, #64	; 0x40
 8026aca:	bf18      	it	ne
 8026acc:	b236      	sxthne	r6, r6
 8026ace:	e7ef      	b.n	8026ab0 <_printf_i+0xbc>
 8026ad0:	682b      	ldr	r3, [r5, #0]
 8026ad2:	6820      	ldr	r0, [r4, #0]
 8026ad4:	1d19      	adds	r1, r3, #4
 8026ad6:	6029      	str	r1, [r5, #0]
 8026ad8:	0601      	lsls	r1, r0, #24
 8026ada:	d501      	bpl.n	8026ae0 <_printf_i+0xec>
 8026adc:	681e      	ldr	r6, [r3, #0]
 8026ade:	e002      	b.n	8026ae6 <_printf_i+0xf2>
 8026ae0:	0646      	lsls	r6, r0, #25
 8026ae2:	d5fb      	bpl.n	8026adc <_printf_i+0xe8>
 8026ae4:	881e      	ldrh	r6, [r3, #0]
 8026ae6:	4854      	ldr	r0, [pc, #336]	; (8026c38 <_printf_i+0x244>)
 8026ae8:	2f6f      	cmp	r7, #111	; 0x6f
 8026aea:	bf0c      	ite	eq
 8026aec:	2308      	moveq	r3, #8
 8026aee:	230a      	movne	r3, #10
 8026af0:	2100      	movs	r1, #0
 8026af2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026af6:	6865      	ldr	r5, [r4, #4]
 8026af8:	60a5      	str	r5, [r4, #8]
 8026afa:	2d00      	cmp	r5, #0
 8026afc:	bfa2      	ittt	ge
 8026afe:	6821      	ldrge	r1, [r4, #0]
 8026b00:	f021 0104 	bicge.w	r1, r1, #4
 8026b04:	6021      	strge	r1, [r4, #0]
 8026b06:	b90e      	cbnz	r6, 8026b0c <_printf_i+0x118>
 8026b08:	2d00      	cmp	r5, #0
 8026b0a:	d04d      	beq.n	8026ba8 <_printf_i+0x1b4>
 8026b0c:	4615      	mov	r5, r2
 8026b0e:	fbb6 f1f3 	udiv	r1, r6, r3
 8026b12:	fb03 6711 	mls	r7, r3, r1, r6
 8026b16:	5dc7      	ldrb	r7, [r0, r7]
 8026b18:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8026b1c:	4637      	mov	r7, r6
 8026b1e:	42bb      	cmp	r3, r7
 8026b20:	460e      	mov	r6, r1
 8026b22:	d9f4      	bls.n	8026b0e <_printf_i+0x11a>
 8026b24:	2b08      	cmp	r3, #8
 8026b26:	d10b      	bne.n	8026b40 <_printf_i+0x14c>
 8026b28:	6823      	ldr	r3, [r4, #0]
 8026b2a:	07de      	lsls	r6, r3, #31
 8026b2c:	d508      	bpl.n	8026b40 <_printf_i+0x14c>
 8026b2e:	6923      	ldr	r3, [r4, #16]
 8026b30:	6861      	ldr	r1, [r4, #4]
 8026b32:	4299      	cmp	r1, r3
 8026b34:	bfde      	ittt	le
 8026b36:	2330      	movle	r3, #48	; 0x30
 8026b38:	f805 3c01 	strble.w	r3, [r5, #-1]
 8026b3c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8026b40:	1b52      	subs	r2, r2, r5
 8026b42:	6122      	str	r2, [r4, #16]
 8026b44:	f8cd a000 	str.w	sl, [sp]
 8026b48:	464b      	mov	r3, r9
 8026b4a:	aa03      	add	r2, sp, #12
 8026b4c:	4621      	mov	r1, r4
 8026b4e:	4640      	mov	r0, r8
 8026b50:	f7ff fee2 	bl	8026918 <_printf_common>
 8026b54:	3001      	adds	r0, #1
 8026b56:	d14c      	bne.n	8026bf2 <_printf_i+0x1fe>
 8026b58:	f04f 30ff 	mov.w	r0, #4294967295
 8026b5c:	b004      	add	sp, #16
 8026b5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026b62:	4835      	ldr	r0, [pc, #212]	; (8026c38 <_printf_i+0x244>)
 8026b64:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8026b68:	6829      	ldr	r1, [r5, #0]
 8026b6a:	6823      	ldr	r3, [r4, #0]
 8026b6c:	f851 6b04 	ldr.w	r6, [r1], #4
 8026b70:	6029      	str	r1, [r5, #0]
 8026b72:	061d      	lsls	r5, r3, #24
 8026b74:	d514      	bpl.n	8026ba0 <_printf_i+0x1ac>
 8026b76:	07df      	lsls	r7, r3, #31
 8026b78:	bf44      	itt	mi
 8026b7a:	f043 0320 	orrmi.w	r3, r3, #32
 8026b7e:	6023      	strmi	r3, [r4, #0]
 8026b80:	b91e      	cbnz	r6, 8026b8a <_printf_i+0x196>
 8026b82:	6823      	ldr	r3, [r4, #0]
 8026b84:	f023 0320 	bic.w	r3, r3, #32
 8026b88:	6023      	str	r3, [r4, #0]
 8026b8a:	2310      	movs	r3, #16
 8026b8c:	e7b0      	b.n	8026af0 <_printf_i+0xfc>
 8026b8e:	6823      	ldr	r3, [r4, #0]
 8026b90:	f043 0320 	orr.w	r3, r3, #32
 8026b94:	6023      	str	r3, [r4, #0]
 8026b96:	2378      	movs	r3, #120	; 0x78
 8026b98:	4828      	ldr	r0, [pc, #160]	; (8026c3c <_printf_i+0x248>)
 8026b9a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8026b9e:	e7e3      	b.n	8026b68 <_printf_i+0x174>
 8026ba0:	0659      	lsls	r1, r3, #25
 8026ba2:	bf48      	it	mi
 8026ba4:	b2b6      	uxthmi	r6, r6
 8026ba6:	e7e6      	b.n	8026b76 <_printf_i+0x182>
 8026ba8:	4615      	mov	r5, r2
 8026baa:	e7bb      	b.n	8026b24 <_printf_i+0x130>
 8026bac:	682b      	ldr	r3, [r5, #0]
 8026bae:	6826      	ldr	r6, [r4, #0]
 8026bb0:	6961      	ldr	r1, [r4, #20]
 8026bb2:	1d18      	adds	r0, r3, #4
 8026bb4:	6028      	str	r0, [r5, #0]
 8026bb6:	0635      	lsls	r5, r6, #24
 8026bb8:	681b      	ldr	r3, [r3, #0]
 8026bba:	d501      	bpl.n	8026bc0 <_printf_i+0x1cc>
 8026bbc:	6019      	str	r1, [r3, #0]
 8026bbe:	e002      	b.n	8026bc6 <_printf_i+0x1d2>
 8026bc0:	0670      	lsls	r0, r6, #25
 8026bc2:	d5fb      	bpl.n	8026bbc <_printf_i+0x1c8>
 8026bc4:	8019      	strh	r1, [r3, #0]
 8026bc6:	2300      	movs	r3, #0
 8026bc8:	6123      	str	r3, [r4, #16]
 8026bca:	4615      	mov	r5, r2
 8026bcc:	e7ba      	b.n	8026b44 <_printf_i+0x150>
 8026bce:	682b      	ldr	r3, [r5, #0]
 8026bd0:	1d1a      	adds	r2, r3, #4
 8026bd2:	602a      	str	r2, [r5, #0]
 8026bd4:	681d      	ldr	r5, [r3, #0]
 8026bd6:	6862      	ldr	r2, [r4, #4]
 8026bd8:	2100      	movs	r1, #0
 8026bda:	4628      	mov	r0, r5
 8026bdc:	f7d9 fb10 	bl	8000200 <memchr>
 8026be0:	b108      	cbz	r0, 8026be6 <_printf_i+0x1f2>
 8026be2:	1b40      	subs	r0, r0, r5
 8026be4:	6060      	str	r0, [r4, #4]
 8026be6:	6863      	ldr	r3, [r4, #4]
 8026be8:	6123      	str	r3, [r4, #16]
 8026bea:	2300      	movs	r3, #0
 8026bec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026bf0:	e7a8      	b.n	8026b44 <_printf_i+0x150>
 8026bf2:	6923      	ldr	r3, [r4, #16]
 8026bf4:	462a      	mov	r2, r5
 8026bf6:	4649      	mov	r1, r9
 8026bf8:	4640      	mov	r0, r8
 8026bfa:	47d0      	blx	sl
 8026bfc:	3001      	adds	r0, #1
 8026bfe:	d0ab      	beq.n	8026b58 <_printf_i+0x164>
 8026c00:	6823      	ldr	r3, [r4, #0]
 8026c02:	079b      	lsls	r3, r3, #30
 8026c04:	d413      	bmi.n	8026c2e <_printf_i+0x23a>
 8026c06:	68e0      	ldr	r0, [r4, #12]
 8026c08:	9b03      	ldr	r3, [sp, #12]
 8026c0a:	4298      	cmp	r0, r3
 8026c0c:	bfb8      	it	lt
 8026c0e:	4618      	movlt	r0, r3
 8026c10:	e7a4      	b.n	8026b5c <_printf_i+0x168>
 8026c12:	2301      	movs	r3, #1
 8026c14:	4632      	mov	r2, r6
 8026c16:	4649      	mov	r1, r9
 8026c18:	4640      	mov	r0, r8
 8026c1a:	47d0      	blx	sl
 8026c1c:	3001      	adds	r0, #1
 8026c1e:	d09b      	beq.n	8026b58 <_printf_i+0x164>
 8026c20:	3501      	adds	r5, #1
 8026c22:	68e3      	ldr	r3, [r4, #12]
 8026c24:	9903      	ldr	r1, [sp, #12]
 8026c26:	1a5b      	subs	r3, r3, r1
 8026c28:	42ab      	cmp	r3, r5
 8026c2a:	dcf2      	bgt.n	8026c12 <_printf_i+0x21e>
 8026c2c:	e7eb      	b.n	8026c06 <_printf_i+0x212>
 8026c2e:	2500      	movs	r5, #0
 8026c30:	f104 0619 	add.w	r6, r4, #25
 8026c34:	e7f5      	b.n	8026c22 <_printf_i+0x22e>
 8026c36:	bf00      	nop
 8026c38:	0802a7e1 	.word	0x0802a7e1
 8026c3c:	0802a7f2 	.word	0x0802a7f2

08026c40 <_sbrk_r>:
 8026c40:	b538      	push	{r3, r4, r5, lr}
 8026c42:	4d06      	ldr	r5, [pc, #24]	; (8026c5c <_sbrk_r+0x1c>)
 8026c44:	2300      	movs	r3, #0
 8026c46:	4604      	mov	r4, r0
 8026c48:	4608      	mov	r0, r1
 8026c4a:	602b      	str	r3, [r5, #0]
 8026c4c:	f7db fda6 	bl	800279c <_sbrk>
 8026c50:	1c43      	adds	r3, r0, #1
 8026c52:	d102      	bne.n	8026c5a <_sbrk_r+0x1a>
 8026c54:	682b      	ldr	r3, [r5, #0]
 8026c56:	b103      	cbz	r3, 8026c5a <_sbrk_r+0x1a>
 8026c58:	6023      	str	r3, [r4, #0]
 8026c5a:	bd38      	pop	{r3, r4, r5, pc}
 8026c5c:	2000fa14 	.word	0x2000fa14

08026c60 <_raise_r>:
 8026c60:	291f      	cmp	r1, #31
 8026c62:	b538      	push	{r3, r4, r5, lr}
 8026c64:	4604      	mov	r4, r0
 8026c66:	460d      	mov	r5, r1
 8026c68:	d904      	bls.n	8026c74 <_raise_r+0x14>
 8026c6a:	2316      	movs	r3, #22
 8026c6c:	6003      	str	r3, [r0, #0]
 8026c6e:	f04f 30ff 	mov.w	r0, #4294967295
 8026c72:	bd38      	pop	{r3, r4, r5, pc}
 8026c74:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8026c76:	b112      	cbz	r2, 8026c7e <_raise_r+0x1e>
 8026c78:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8026c7c:	b94b      	cbnz	r3, 8026c92 <_raise_r+0x32>
 8026c7e:	4620      	mov	r0, r4
 8026c80:	f000 f830 	bl	8026ce4 <_getpid_r>
 8026c84:	462a      	mov	r2, r5
 8026c86:	4601      	mov	r1, r0
 8026c88:	4620      	mov	r0, r4
 8026c8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026c8e:	f000 b817 	b.w	8026cc0 <_kill_r>
 8026c92:	2b01      	cmp	r3, #1
 8026c94:	d00a      	beq.n	8026cac <_raise_r+0x4c>
 8026c96:	1c59      	adds	r1, r3, #1
 8026c98:	d103      	bne.n	8026ca2 <_raise_r+0x42>
 8026c9a:	2316      	movs	r3, #22
 8026c9c:	6003      	str	r3, [r0, #0]
 8026c9e:	2001      	movs	r0, #1
 8026ca0:	e7e7      	b.n	8026c72 <_raise_r+0x12>
 8026ca2:	2400      	movs	r4, #0
 8026ca4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8026ca8:	4628      	mov	r0, r5
 8026caa:	4798      	blx	r3
 8026cac:	2000      	movs	r0, #0
 8026cae:	e7e0      	b.n	8026c72 <_raise_r+0x12>

08026cb0 <raise>:
 8026cb0:	4b02      	ldr	r3, [pc, #8]	; (8026cbc <raise+0xc>)
 8026cb2:	4601      	mov	r1, r0
 8026cb4:	6818      	ldr	r0, [r3, #0]
 8026cb6:	f7ff bfd3 	b.w	8026c60 <_raise_r>
 8026cba:	bf00      	nop
 8026cbc:	200000e0 	.word	0x200000e0

08026cc0 <_kill_r>:
 8026cc0:	b538      	push	{r3, r4, r5, lr}
 8026cc2:	4d07      	ldr	r5, [pc, #28]	; (8026ce0 <_kill_r+0x20>)
 8026cc4:	2300      	movs	r3, #0
 8026cc6:	4604      	mov	r4, r0
 8026cc8:	4608      	mov	r0, r1
 8026cca:	4611      	mov	r1, r2
 8026ccc:	602b      	str	r3, [r5, #0]
 8026cce:	f7db fd2f 	bl	8002730 <_kill>
 8026cd2:	1c43      	adds	r3, r0, #1
 8026cd4:	d102      	bne.n	8026cdc <_kill_r+0x1c>
 8026cd6:	682b      	ldr	r3, [r5, #0]
 8026cd8:	b103      	cbz	r3, 8026cdc <_kill_r+0x1c>
 8026cda:	6023      	str	r3, [r4, #0]
 8026cdc:	bd38      	pop	{r3, r4, r5, pc}
 8026cde:	bf00      	nop
 8026ce0:	2000fa14 	.word	0x2000fa14

08026ce4 <_getpid_r>:
 8026ce4:	f7db bd22 	b.w	800272c <_getpid>

08026ce8 <strncpy>:
 8026ce8:	b510      	push	{r4, lr}
 8026cea:	3901      	subs	r1, #1
 8026cec:	4603      	mov	r3, r0
 8026cee:	b132      	cbz	r2, 8026cfe <strncpy+0x16>
 8026cf0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8026cf4:	f803 4b01 	strb.w	r4, [r3], #1
 8026cf8:	3a01      	subs	r2, #1
 8026cfa:	2c00      	cmp	r4, #0
 8026cfc:	d1f7      	bne.n	8026cee <strncpy+0x6>
 8026cfe:	441a      	add	r2, r3
 8026d00:	2100      	movs	r1, #0
 8026d02:	4293      	cmp	r3, r2
 8026d04:	d100      	bne.n	8026d08 <strncpy+0x20>
 8026d06:	bd10      	pop	{r4, pc}
 8026d08:	f803 1b01 	strb.w	r1, [r3], #1
 8026d0c:	e7f9      	b.n	8026d02 <strncpy+0x1a>
	...

08026d10 <__swbuf_r>:
 8026d10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026d12:	460e      	mov	r6, r1
 8026d14:	4614      	mov	r4, r2
 8026d16:	4605      	mov	r5, r0
 8026d18:	b118      	cbz	r0, 8026d22 <__swbuf_r+0x12>
 8026d1a:	6983      	ldr	r3, [r0, #24]
 8026d1c:	b90b      	cbnz	r3, 8026d22 <__swbuf_r+0x12>
 8026d1e:	f000 fa33 	bl	8027188 <__sinit>
 8026d22:	4b21      	ldr	r3, [pc, #132]	; (8026da8 <__swbuf_r+0x98>)
 8026d24:	429c      	cmp	r4, r3
 8026d26:	d12b      	bne.n	8026d80 <__swbuf_r+0x70>
 8026d28:	686c      	ldr	r4, [r5, #4]
 8026d2a:	69a3      	ldr	r3, [r4, #24]
 8026d2c:	60a3      	str	r3, [r4, #8]
 8026d2e:	89a3      	ldrh	r3, [r4, #12]
 8026d30:	071a      	lsls	r2, r3, #28
 8026d32:	d52f      	bpl.n	8026d94 <__swbuf_r+0x84>
 8026d34:	6923      	ldr	r3, [r4, #16]
 8026d36:	b36b      	cbz	r3, 8026d94 <__swbuf_r+0x84>
 8026d38:	6923      	ldr	r3, [r4, #16]
 8026d3a:	6820      	ldr	r0, [r4, #0]
 8026d3c:	1ac0      	subs	r0, r0, r3
 8026d3e:	6963      	ldr	r3, [r4, #20]
 8026d40:	b2f6      	uxtb	r6, r6
 8026d42:	4283      	cmp	r3, r0
 8026d44:	4637      	mov	r7, r6
 8026d46:	dc04      	bgt.n	8026d52 <__swbuf_r+0x42>
 8026d48:	4621      	mov	r1, r4
 8026d4a:	4628      	mov	r0, r5
 8026d4c:	f000 f988 	bl	8027060 <_fflush_r>
 8026d50:	bb30      	cbnz	r0, 8026da0 <__swbuf_r+0x90>
 8026d52:	68a3      	ldr	r3, [r4, #8]
 8026d54:	3b01      	subs	r3, #1
 8026d56:	60a3      	str	r3, [r4, #8]
 8026d58:	6823      	ldr	r3, [r4, #0]
 8026d5a:	1c5a      	adds	r2, r3, #1
 8026d5c:	6022      	str	r2, [r4, #0]
 8026d5e:	701e      	strb	r6, [r3, #0]
 8026d60:	6963      	ldr	r3, [r4, #20]
 8026d62:	3001      	adds	r0, #1
 8026d64:	4283      	cmp	r3, r0
 8026d66:	d004      	beq.n	8026d72 <__swbuf_r+0x62>
 8026d68:	89a3      	ldrh	r3, [r4, #12]
 8026d6a:	07db      	lsls	r3, r3, #31
 8026d6c:	d506      	bpl.n	8026d7c <__swbuf_r+0x6c>
 8026d6e:	2e0a      	cmp	r6, #10
 8026d70:	d104      	bne.n	8026d7c <__swbuf_r+0x6c>
 8026d72:	4621      	mov	r1, r4
 8026d74:	4628      	mov	r0, r5
 8026d76:	f000 f973 	bl	8027060 <_fflush_r>
 8026d7a:	b988      	cbnz	r0, 8026da0 <__swbuf_r+0x90>
 8026d7c:	4638      	mov	r0, r7
 8026d7e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026d80:	4b0a      	ldr	r3, [pc, #40]	; (8026dac <__swbuf_r+0x9c>)
 8026d82:	429c      	cmp	r4, r3
 8026d84:	d101      	bne.n	8026d8a <__swbuf_r+0x7a>
 8026d86:	68ac      	ldr	r4, [r5, #8]
 8026d88:	e7cf      	b.n	8026d2a <__swbuf_r+0x1a>
 8026d8a:	4b09      	ldr	r3, [pc, #36]	; (8026db0 <__swbuf_r+0xa0>)
 8026d8c:	429c      	cmp	r4, r3
 8026d8e:	bf08      	it	eq
 8026d90:	68ec      	ldreq	r4, [r5, #12]
 8026d92:	e7ca      	b.n	8026d2a <__swbuf_r+0x1a>
 8026d94:	4621      	mov	r1, r4
 8026d96:	4628      	mov	r0, r5
 8026d98:	f000 f80c 	bl	8026db4 <__swsetup_r>
 8026d9c:	2800      	cmp	r0, #0
 8026d9e:	d0cb      	beq.n	8026d38 <__swbuf_r+0x28>
 8026da0:	f04f 37ff 	mov.w	r7, #4294967295
 8026da4:	e7ea      	b.n	8026d7c <__swbuf_r+0x6c>
 8026da6:	bf00      	nop
 8026da8:	0802a828 	.word	0x0802a828
 8026dac:	0802a848 	.word	0x0802a848
 8026db0:	0802a808 	.word	0x0802a808

08026db4 <__swsetup_r>:
 8026db4:	4b32      	ldr	r3, [pc, #200]	; (8026e80 <__swsetup_r+0xcc>)
 8026db6:	b570      	push	{r4, r5, r6, lr}
 8026db8:	681d      	ldr	r5, [r3, #0]
 8026dba:	4606      	mov	r6, r0
 8026dbc:	460c      	mov	r4, r1
 8026dbe:	b125      	cbz	r5, 8026dca <__swsetup_r+0x16>
 8026dc0:	69ab      	ldr	r3, [r5, #24]
 8026dc2:	b913      	cbnz	r3, 8026dca <__swsetup_r+0x16>
 8026dc4:	4628      	mov	r0, r5
 8026dc6:	f000 f9df 	bl	8027188 <__sinit>
 8026dca:	4b2e      	ldr	r3, [pc, #184]	; (8026e84 <__swsetup_r+0xd0>)
 8026dcc:	429c      	cmp	r4, r3
 8026dce:	d10f      	bne.n	8026df0 <__swsetup_r+0x3c>
 8026dd0:	686c      	ldr	r4, [r5, #4]
 8026dd2:	89a3      	ldrh	r3, [r4, #12]
 8026dd4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026dd8:	0719      	lsls	r1, r3, #28
 8026dda:	d42c      	bmi.n	8026e36 <__swsetup_r+0x82>
 8026ddc:	06dd      	lsls	r5, r3, #27
 8026dde:	d411      	bmi.n	8026e04 <__swsetup_r+0x50>
 8026de0:	2309      	movs	r3, #9
 8026de2:	6033      	str	r3, [r6, #0]
 8026de4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8026de8:	81a3      	strh	r3, [r4, #12]
 8026dea:	f04f 30ff 	mov.w	r0, #4294967295
 8026dee:	e03e      	b.n	8026e6e <__swsetup_r+0xba>
 8026df0:	4b25      	ldr	r3, [pc, #148]	; (8026e88 <__swsetup_r+0xd4>)
 8026df2:	429c      	cmp	r4, r3
 8026df4:	d101      	bne.n	8026dfa <__swsetup_r+0x46>
 8026df6:	68ac      	ldr	r4, [r5, #8]
 8026df8:	e7eb      	b.n	8026dd2 <__swsetup_r+0x1e>
 8026dfa:	4b24      	ldr	r3, [pc, #144]	; (8026e8c <__swsetup_r+0xd8>)
 8026dfc:	429c      	cmp	r4, r3
 8026dfe:	bf08      	it	eq
 8026e00:	68ec      	ldreq	r4, [r5, #12]
 8026e02:	e7e6      	b.n	8026dd2 <__swsetup_r+0x1e>
 8026e04:	0758      	lsls	r0, r3, #29
 8026e06:	d512      	bpl.n	8026e2e <__swsetup_r+0x7a>
 8026e08:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026e0a:	b141      	cbz	r1, 8026e1e <__swsetup_r+0x6a>
 8026e0c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026e10:	4299      	cmp	r1, r3
 8026e12:	d002      	beq.n	8026e1a <__swsetup_r+0x66>
 8026e14:	4630      	mov	r0, r6
 8026e16:	f7ff fb45 	bl	80264a4 <_free_r>
 8026e1a:	2300      	movs	r3, #0
 8026e1c:	6363      	str	r3, [r4, #52]	; 0x34
 8026e1e:	89a3      	ldrh	r3, [r4, #12]
 8026e20:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8026e24:	81a3      	strh	r3, [r4, #12]
 8026e26:	2300      	movs	r3, #0
 8026e28:	6063      	str	r3, [r4, #4]
 8026e2a:	6923      	ldr	r3, [r4, #16]
 8026e2c:	6023      	str	r3, [r4, #0]
 8026e2e:	89a3      	ldrh	r3, [r4, #12]
 8026e30:	f043 0308 	orr.w	r3, r3, #8
 8026e34:	81a3      	strh	r3, [r4, #12]
 8026e36:	6923      	ldr	r3, [r4, #16]
 8026e38:	b94b      	cbnz	r3, 8026e4e <__swsetup_r+0x9a>
 8026e3a:	89a3      	ldrh	r3, [r4, #12]
 8026e3c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8026e40:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8026e44:	d003      	beq.n	8026e4e <__swsetup_r+0x9a>
 8026e46:	4621      	mov	r1, r4
 8026e48:	4630      	mov	r0, r6
 8026e4a:	f000 fa63 	bl	8027314 <__smakebuf_r>
 8026e4e:	89a0      	ldrh	r0, [r4, #12]
 8026e50:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8026e54:	f010 0301 	ands.w	r3, r0, #1
 8026e58:	d00a      	beq.n	8026e70 <__swsetup_r+0xbc>
 8026e5a:	2300      	movs	r3, #0
 8026e5c:	60a3      	str	r3, [r4, #8]
 8026e5e:	6963      	ldr	r3, [r4, #20]
 8026e60:	425b      	negs	r3, r3
 8026e62:	61a3      	str	r3, [r4, #24]
 8026e64:	6923      	ldr	r3, [r4, #16]
 8026e66:	b943      	cbnz	r3, 8026e7a <__swsetup_r+0xc6>
 8026e68:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8026e6c:	d1ba      	bne.n	8026de4 <__swsetup_r+0x30>
 8026e6e:	bd70      	pop	{r4, r5, r6, pc}
 8026e70:	0781      	lsls	r1, r0, #30
 8026e72:	bf58      	it	pl
 8026e74:	6963      	ldrpl	r3, [r4, #20]
 8026e76:	60a3      	str	r3, [r4, #8]
 8026e78:	e7f4      	b.n	8026e64 <__swsetup_r+0xb0>
 8026e7a:	2000      	movs	r0, #0
 8026e7c:	e7f7      	b.n	8026e6e <__swsetup_r+0xba>
 8026e7e:	bf00      	nop
 8026e80:	200000e0 	.word	0x200000e0
 8026e84:	0802a828 	.word	0x0802a828
 8026e88:	0802a848 	.word	0x0802a848
 8026e8c:	0802a808 	.word	0x0802a808

08026e90 <__register_exitproc>:
 8026e90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026e94:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8026f50 <__register_exitproc+0xc0>
 8026e98:	4606      	mov	r6, r0
 8026e9a:	f8d8 0000 	ldr.w	r0, [r8]
 8026e9e:	461f      	mov	r7, r3
 8026ea0:	460d      	mov	r5, r1
 8026ea2:	4691      	mov	r9, r2
 8026ea4:	f000 fa0e 	bl	80272c4 <__retarget_lock_acquire_recursive>
 8026ea8:	4b25      	ldr	r3, [pc, #148]	; (8026f40 <__register_exitproc+0xb0>)
 8026eaa:	681c      	ldr	r4, [r3, #0]
 8026eac:	b934      	cbnz	r4, 8026ebc <__register_exitproc+0x2c>
 8026eae:	4c25      	ldr	r4, [pc, #148]	; (8026f44 <__register_exitproc+0xb4>)
 8026eb0:	601c      	str	r4, [r3, #0]
 8026eb2:	4b25      	ldr	r3, [pc, #148]	; (8026f48 <__register_exitproc+0xb8>)
 8026eb4:	b113      	cbz	r3, 8026ebc <__register_exitproc+0x2c>
 8026eb6:	681b      	ldr	r3, [r3, #0]
 8026eb8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8026ebc:	6863      	ldr	r3, [r4, #4]
 8026ebe:	2b1f      	cmp	r3, #31
 8026ec0:	dd07      	ble.n	8026ed2 <__register_exitproc+0x42>
 8026ec2:	f8d8 0000 	ldr.w	r0, [r8]
 8026ec6:	f000 f9ff 	bl	80272c8 <__retarget_lock_release_recursive>
 8026eca:	f04f 30ff 	mov.w	r0, #4294967295
 8026ece:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026ed2:	b34e      	cbz	r6, 8026f28 <__register_exitproc+0x98>
 8026ed4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8026ed8:	b988      	cbnz	r0, 8026efe <__register_exitproc+0x6e>
 8026eda:	4b1c      	ldr	r3, [pc, #112]	; (8026f4c <__register_exitproc+0xbc>)
 8026edc:	b923      	cbnz	r3, 8026ee8 <__register_exitproc+0x58>
 8026ede:	f8d8 0000 	ldr.w	r0, [r8]
 8026ee2:	f000 f9f0 	bl	80272c6 <__retarget_lock_release>
 8026ee6:	e7f0      	b.n	8026eca <__register_exitproc+0x3a>
 8026ee8:	f44f 7084 	mov.w	r0, #264	; 0x108
 8026eec:	f7ff fab4 	bl	8026458 <malloc>
 8026ef0:	2800      	cmp	r0, #0
 8026ef2:	d0f4      	beq.n	8026ede <__register_exitproc+0x4e>
 8026ef4:	2300      	movs	r3, #0
 8026ef6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8026efa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8026efe:	6863      	ldr	r3, [r4, #4]
 8026f00:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026f04:	2201      	movs	r2, #1
 8026f06:	409a      	lsls	r2, r3
 8026f08:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8026f0c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8026f10:	4313      	orrs	r3, r2
 8026f12:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8026f16:	2e02      	cmp	r6, #2
 8026f18:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8026f1c:	bf02      	ittt	eq
 8026f1e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8026f22:	4313      	orreq	r3, r2
 8026f24:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8026f28:	6863      	ldr	r3, [r4, #4]
 8026f2a:	f8d8 0000 	ldr.w	r0, [r8]
 8026f2e:	1c5a      	adds	r2, r3, #1
 8026f30:	3302      	adds	r3, #2
 8026f32:	6062      	str	r2, [r4, #4]
 8026f34:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8026f38:	f000 f9c6 	bl	80272c8 <__retarget_lock_release_recursive>
 8026f3c:	2000      	movs	r0, #0
 8026f3e:	e7c6      	b.n	8026ece <__register_exitproc+0x3e>
 8026f40:	2000fa0c 	.word	0x2000fa0c
 8026f44:	2000f980 	.word	0x2000f980
 8026f48:	0802a804 	.word	0x0802a804
 8026f4c:	08026459 	.word	0x08026459
 8026f50:	20000144 	.word	0x20000144

08026f54 <__sflush_r>:
 8026f54:	898a      	ldrh	r2, [r1, #12]
 8026f56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026f5a:	4605      	mov	r5, r0
 8026f5c:	0710      	lsls	r0, r2, #28
 8026f5e:	460c      	mov	r4, r1
 8026f60:	d458      	bmi.n	8027014 <__sflush_r+0xc0>
 8026f62:	684b      	ldr	r3, [r1, #4]
 8026f64:	2b00      	cmp	r3, #0
 8026f66:	dc05      	bgt.n	8026f74 <__sflush_r+0x20>
 8026f68:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8026f6a:	2b00      	cmp	r3, #0
 8026f6c:	dc02      	bgt.n	8026f74 <__sflush_r+0x20>
 8026f6e:	2000      	movs	r0, #0
 8026f70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026f74:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026f76:	2e00      	cmp	r6, #0
 8026f78:	d0f9      	beq.n	8026f6e <__sflush_r+0x1a>
 8026f7a:	2300      	movs	r3, #0
 8026f7c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8026f80:	682f      	ldr	r7, [r5, #0]
 8026f82:	602b      	str	r3, [r5, #0]
 8026f84:	d032      	beq.n	8026fec <__sflush_r+0x98>
 8026f86:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8026f88:	89a3      	ldrh	r3, [r4, #12]
 8026f8a:	075a      	lsls	r2, r3, #29
 8026f8c:	d505      	bpl.n	8026f9a <__sflush_r+0x46>
 8026f8e:	6863      	ldr	r3, [r4, #4]
 8026f90:	1ac0      	subs	r0, r0, r3
 8026f92:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8026f94:	b10b      	cbz	r3, 8026f9a <__sflush_r+0x46>
 8026f96:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8026f98:	1ac0      	subs	r0, r0, r3
 8026f9a:	2300      	movs	r3, #0
 8026f9c:	4602      	mov	r2, r0
 8026f9e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8026fa0:	6a21      	ldr	r1, [r4, #32]
 8026fa2:	4628      	mov	r0, r5
 8026fa4:	47b0      	blx	r6
 8026fa6:	1c43      	adds	r3, r0, #1
 8026fa8:	89a3      	ldrh	r3, [r4, #12]
 8026faa:	d106      	bne.n	8026fba <__sflush_r+0x66>
 8026fac:	6829      	ldr	r1, [r5, #0]
 8026fae:	291d      	cmp	r1, #29
 8026fb0:	d82c      	bhi.n	802700c <__sflush_r+0xb8>
 8026fb2:	4a2a      	ldr	r2, [pc, #168]	; (802705c <__sflush_r+0x108>)
 8026fb4:	40ca      	lsrs	r2, r1
 8026fb6:	07d6      	lsls	r6, r2, #31
 8026fb8:	d528      	bpl.n	802700c <__sflush_r+0xb8>
 8026fba:	2200      	movs	r2, #0
 8026fbc:	6062      	str	r2, [r4, #4]
 8026fbe:	04d9      	lsls	r1, r3, #19
 8026fc0:	6922      	ldr	r2, [r4, #16]
 8026fc2:	6022      	str	r2, [r4, #0]
 8026fc4:	d504      	bpl.n	8026fd0 <__sflush_r+0x7c>
 8026fc6:	1c42      	adds	r2, r0, #1
 8026fc8:	d101      	bne.n	8026fce <__sflush_r+0x7a>
 8026fca:	682b      	ldr	r3, [r5, #0]
 8026fcc:	b903      	cbnz	r3, 8026fd0 <__sflush_r+0x7c>
 8026fce:	6560      	str	r0, [r4, #84]	; 0x54
 8026fd0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8026fd2:	602f      	str	r7, [r5, #0]
 8026fd4:	2900      	cmp	r1, #0
 8026fd6:	d0ca      	beq.n	8026f6e <__sflush_r+0x1a>
 8026fd8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8026fdc:	4299      	cmp	r1, r3
 8026fde:	d002      	beq.n	8026fe6 <__sflush_r+0x92>
 8026fe0:	4628      	mov	r0, r5
 8026fe2:	f7ff fa5f 	bl	80264a4 <_free_r>
 8026fe6:	2000      	movs	r0, #0
 8026fe8:	6360      	str	r0, [r4, #52]	; 0x34
 8026fea:	e7c1      	b.n	8026f70 <__sflush_r+0x1c>
 8026fec:	6a21      	ldr	r1, [r4, #32]
 8026fee:	2301      	movs	r3, #1
 8026ff0:	4628      	mov	r0, r5
 8026ff2:	47b0      	blx	r6
 8026ff4:	1c41      	adds	r1, r0, #1
 8026ff6:	d1c7      	bne.n	8026f88 <__sflush_r+0x34>
 8026ff8:	682b      	ldr	r3, [r5, #0]
 8026ffa:	2b00      	cmp	r3, #0
 8026ffc:	d0c4      	beq.n	8026f88 <__sflush_r+0x34>
 8026ffe:	2b1d      	cmp	r3, #29
 8027000:	d001      	beq.n	8027006 <__sflush_r+0xb2>
 8027002:	2b16      	cmp	r3, #22
 8027004:	d101      	bne.n	802700a <__sflush_r+0xb6>
 8027006:	602f      	str	r7, [r5, #0]
 8027008:	e7b1      	b.n	8026f6e <__sflush_r+0x1a>
 802700a:	89a3      	ldrh	r3, [r4, #12]
 802700c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8027010:	81a3      	strh	r3, [r4, #12]
 8027012:	e7ad      	b.n	8026f70 <__sflush_r+0x1c>
 8027014:	690f      	ldr	r7, [r1, #16]
 8027016:	2f00      	cmp	r7, #0
 8027018:	d0a9      	beq.n	8026f6e <__sflush_r+0x1a>
 802701a:	0793      	lsls	r3, r2, #30
 802701c:	680e      	ldr	r6, [r1, #0]
 802701e:	bf08      	it	eq
 8027020:	694b      	ldreq	r3, [r1, #20]
 8027022:	600f      	str	r7, [r1, #0]
 8027024:	bf18      	it	ne
 8027026:	2300      	movne	r3, #0
 8027028:	eba6 0807 	sub.w	r8, r6, r7
 802702c:	608b      	str	r3, [r1, #8]
 802702e:	f1b8 0f00 	cmp.w	r8, #0
 8027032:	dd9c      	ble.n	8026f6e <__sflush_r+0x1a>
 8027034:	6a21      	ldr	r1, [r4, #32]
 8027036:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8027038:	4643      	mov	r3, r8
 802703a:	463a      	mov	r2, r7
 802703c:	4628      	mov	r0, r5
 802703e:	47b0      	blx	r6
 8027040:	2800      	cmp	r0, #0
 8027042:	dc06      	bgt.n	8027052 <__sflush_r+0xfe>
 8027044:	89a3      	ldrh	r3, [r4, #12]
 8027046:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802704a:	81a3      	strh	r3, [r4, #12]
 802704c:	f04f 30ff 	mov.w	r0, #4294967295
 8027050:	e78e      	b.n	8026f70 <__sflush_r+0x1c>
 8027052:	4407      	add	r7, r0
 8027054:	eba8 0800 	sub.w	r8, r8, r0
 8027058:	e7e9      	b.n	802702e <__sflush_r+0xda>
 802705a:	bf00      	nop
 802705c:	20400001 	.word	0x20400001

08027060 <_fflush_r>:
 8027060:	b538      	push	{r3, r4, r5, lr}
 8027062:	690b      	ldr	r3, [r1, #16]
 8027064:	4605      	mov	r5, r0
 8027066:	460c      	mov	r4, r1
 8027068:	b913      	cbnz	r3, 8027070 <_fflush_r+0x10>
 802706a:	2500      	movs	r5, #0
 802706c:	4628      	mov	r0, r5
 802706e:	bd38      	pop	{r3, r4, r5, pc}
 8027070:	b118      	cbz	r0, 802707a <_fflush_r+0x1a>
 8027072:	6983      	ldr	r3, [r0, #24]
 8027074:	b90b      	cbnz	r3, 802707a <_fflush_r+0x1a>
 8027076:	f000 f887 	bl	8027188 <__sinit>
 802707a:	4b14      	ldr	r3, [pc, #80]	; (80270cc <_fflush_r+0x6c>)
 802707c:	429c      	cmp	r4, r3
 802707e:	d11b      	bne.n	80270b8 <_fflush_r+0x58>
 8027080:	686c      	ldr	r4, [r5, #4]
 8027082:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027086:	2b00      	cmp	r3, #0
 8027088:	d0ef      	beq.n	802706a <_fflush_r+0xa>
 802708a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802708c:	07d0      	lsls	r0, r2, #31
 802708e:	d404      	bmi.n	802709a <_fflush_r+0x3a>
 8027090:	0599      	lsls	r1, r3, #22
 8027092:	d402      	bmi.n	802709a <_fflush_r+0x3a>
 8027094:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027096:	f000 f915 	bl	80272c4 <__retarget_lock_acquire_recursive>
 802709a:	4628      	mov	r0, r5
 802709c:	4621      	mov	r1, r4
 802709e:	f7ff ff59 	bl	8026f54 <__sflush_r>
 80270a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80270a4:	07da      	lsls	r2, r3, #31
 80270a6:	4605      	mov	r5, r0
 80270a8:	d4e0      	bmi.n	802706c <_fflush_r+0xc>
 80270aa:	89a3      	ldrh	r3, [r4, #12]
 80270ac:	059b      	lsls	r3, r3, #22
 80270ae:	d4dd      	bmi.n	802706c <_fflush_r+0xc>
 80270b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80270b2:	f000 f909 	bl	80272c8 <__retarget_lock_release_recursive>
 80270b6:	e7d9      	b.n	802706c <_fflush_r+0xc>
 80270b8:	4b05      	ldr	r3, [pc, #20]	; (80270d0 <_fflush_r+0x70>)
 80270ba:	429c      	cmp	r4, r3
 80270bc:	d101      	bne.n	80270c2 <_fflush_r+0x62>
 80270be:	68ac      	ldr	r4, [r5, #8]
 80270c0:	e7df      	b.n	8027082 <_fflush_r+0x22>
 80270c2:	4b04      	ldr	r3, [pc, #16]	; (80270d4 <_fflush_r+0x74>)
 80270c4:	429c      	cmp	r4, r3
 80270c6:	bf08      	it	eq
 80270c8:	68ec      	ldreq	r4, [r5, #12]
 80270ca:	e7da      	b.n	8027082 <_fflush_r+0x22>
 80270cc:	0802a828 	.word	0x0802a828
 80270d0:	0802a848 	.word	0x0802a848
 80270d4:	0802a808 	.word	0x0802a808

080270d8 <std>:
 80270d8:	2300      	movs	r3, #0
 80270da:	b510      	push	{r4, lr}
 80270dc:	4604      	mov	r4, r0
 80270de:	e9c0 3300 	strd	r3, r3, [r0]
 80270e2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80270e6:	6083      	str	r3, [r0, #8]
 80270e8:	8181      	strh	r1, [r0, #12]
 80270ea:	6643      	str	r3, [r0, #100]	; 0x64
 80270ec:	81c2      	strh	r2, [r0, #14]
 80270ee:	6183      	str	r3, [r0, #24]
 80270f0:	4619      	mov	r1, r3
 80270f2:	2208      	movs	r2, #8
 80270f4:	305c      	adds	r0, #92	; 0x5c
 80270f6:	f7ff f9cd 	bl	8026494 <memset>
 80270fa:	4b05      	ldr	r3, [pc, #20]	; (8027110 <std+0x38>)
 80270fc:	6263      	str	r3, [r4, #36]	; 0x24
 80270fe:	4b05      	ldr	r3, [pc, #20]	; (8027114 <std+0x3c>)
 8027100:	62a3      	str	r3, [r4, #40]	; 0x28
 8027102:	4b05      	ldr	r3, [pc, #20]	; (8027118 <std+0x40>)
 8027104:	62e3      	str	r3, [r4, #44]	; 0x2c
 8027106:	4b05      	ldr	r3, [pc, #20]	; (802711c <std+0x44>)
 8027108:	6224      	str	r4, [r4, #32]
 802710a:	6323      	str	r3, [r4, #48]	; 0x30
 802710c:	bd10      	pop	{r4, pc}
 802710e:	bf00      	nop
 8027110:	080273ad 	.word	0x080273ad
 8027114:	080273cf 	.word	0x080273cf
 8027118:	08027407 	.word	0x08027407
 802711c:	0802742b 	.word	0x0802742b

08027120 <_cleanup_r>:
 8027120:	4901      	ldr	r1, [pc, #4]	; (8027128 <_cleanup_r+0x8>)
 8027122:	f000 b8af 	b.w	8027284 <_fwalk_reent>
 8027126:	bf00      	nop
 8027128:	08027061 	.word	0x08027061

0802712c <__sfmoreglue>:
 802712c:	b570      	push	{r4, r5, r6, lr}
 802712e:	2268      	movs	r2, #104	; 0x68
 8027130:	1e4d      	subs	r5, r1, #1
 8027132:	4355      	muls	r5, r2
 8027134:	460e      	mov	r6, r1
 8027136:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802713a:	f7ff fa1f 	bl	802657c <_malloc_r>
 802713e:	4604      	mov	r4, r0
 8027140:	b140      	cbz	r0, 8027154 <__sfmoreglue+0x28>
 8027142:	2100      	movs	r1, #0
 8027144:	e9c0 1600 	strd	r1, r6, [r0]
 8027148:	300c      	adds	r0, #12
 802714a:	60a0      	str	r0, [r4, #8]
 802714c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8027150:	f7ff f9a0 	bl	8026494 <memset>
 8027154:	4620      	mov	r0, r4
 8027156:	bd70      	pop	{r4, r5, r6, pc}

08027158 <__sfp_lock_acquire>:
 8027158:	4801      	ldr	r0, [pc, #4]	; (8027160 <__sfp_lock_acquire+0x8>)
 802715a:	f000 b8b3 	b.w	80272c4 <__retarget_lock_acquire_recursive>
 802715e:	bf00      	nop
 8027160:	2000fa12 	.word	0x2000fa12

08027164 <__sfp_lock_release>:
 8027164:	4801      	ldr	r0, [pc, #4]	; (802716c <__sfp_lock_release+0x8>)
 8027166:	f000 b8af 	b.w	80272c8 <__retarget_lock_release_recursive>
 802716a:	bf00      	nop
 802716c:	2000fa12 	.word	0x2000fa12

08027170 <__sinit_lock_acquire>:
 8027170:	4801      	ldr	r0, [pc, #4]	; (8027178 <__sinit_lock_acquire+0x8>)
 8027172:	f000 b8a7 	b.w	80272c4 <__retarget_lock_acquire_recursive>
 8027176:	bf00      	nop
 8027178:	2000fa13 	.word	0x2000fa13

0802717c <__sinit_lock_release>:
 802717c:	4801      	ldr	r0, [pc, #4]	; (8027184 <__sinit_lock_release+0x8>)
 802717e:	f000 b8a3 	b.w	80272c8 <__retarget_lock_release_recursive>
 8027182:	bf00      	nop
 8027184:	2000fa13 	.word	0x2000fa13

08027188 <__sinit>:
 8027188:	b510      	push	{r4, lr}
 802718a:	4604      	mov	r4, r0
 802718c:	f7ff fff0 	bl	8027170 <__sinit_lock_acquire>
 8027190:	69a3      	ldr	r3, [r4, #24]
 8027192:	b11b      	cbz	r3, 802719c <__sinit+0x14>
 8027194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027198:	f7ff bff0 	b.w	802717c <__sinit_lock_release>
 802719c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80271a0:	6523      	str	r3, [r4, #80]	; 0x50
 80271a2:	4b13      	ldr	r3, [pc, #76]	; (80271f0 <__sinit+0x68>)
 80271a4:	4a13      	ldr	r2, [pc, #76]	; (80271f4 <__sinit+0x6c>)
 80271a6:	681b      	ldr	r3, [r3, #0]
 80271a8:	62a2      	str	r2, [r4, #40]	; 0x28
 80271aa:	42a3      	cmp	r3, r4
 80271ac:	bf04      	itt	eq
 80271ae:	2301      	moveq	r3, #1
 80271b0:	61a3      	streq	r3, [r4, #24]
 80271b2:	4620      	mov	r0, r4
 80271b4:	f000 f820 	bl	80271f8 <__sfp>
 80271b8:	6060      	str	r0, [r4, #4]
 80271ba:	4620      	mov	r0, r4
 80271bc:	f000 f81c 	bl	80271f8 <__sfp>
 80271c0:	60a0      	str	r0, [r4, #8]
 80271c2:	4620      	mov	r0, r4
 80271c4:	f000 f818 	bl	80271f8 <__sfp>
 80271c8:	2200      	movs	r2, #0
 80271ca:	60e0      	str	r0, [r4, #12]
 80271cc:	2104      	movs	r1, #4
 80271ce:	6860      	ldr	r0, [r4, #4]
 80271d0:	f7ff ff82 	bl	80270d8 <std>
 80271d4:	68a0      	ldr	r0, [r4, #8]
 80271d6:	2201      	movs	r2, #1
 80271d8:	2109      	movs	r1, #9
 80271da:	f7ff ff7d 	bl	80270d8 <std>
 80271de:	68e0      	ldr	r0, [r4, #12]
 80271e0:	2202      	movs	r2, #2
 80271e2:	2112      	movs	r1, #18
 80271e4:	f7ff ff78 	bl	80270d8 <std>
 80271e8:	2301      	movs	r3, #1
 80271ea:	61a3      	str	r3, [r4, #24]
 80271ec:	e7d2      	b.n	8027194 <__sinit+0xc>
 80271ee:	bf00      	nop
 80271f0:	0802a7cc 	.word	0x0802a7cc
 80271f4:	08027121 	.word	0x08027121

080271f8 <__sfp>:
 80271f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80271fa:	4607      	mov	r7, r0
 80271fc:	f7ff ffac 	bl	8027158 <__sfp_lock_acquire>
 8027200:	4b1e      	ldr	r3, [pc, #120]	; (802727c <__sfp+0x84>)
 8027202:	681e      	ldr	r6, [r3, #0]
 8027204:	69b3      	ldr	r3, [r6, #24]
 8027206:	b913      	cbnz	r3, 802720e <__sfp+0x16>
 8027208:	4630      	mov	r0, r6
 802720a:	f7ff ffbd 	bl	8027188 <__sinit>
 802720e:	3648      	adds	r6, #72	; 0x48
 8027210:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8027214:	3b01      	subs	r3, #1
 8027216:	d503      	bpl.n	8027220 <__sfp+0x28>
 8027218:	6833      	ldr	r3, [r6, #0]
 802721a:	b30b      	cbz	r3, 8027260 <__sfp+0x68>
 802721c:	6836      	ldr	r6, [r6, #0]
 802721e:	e7f7      	b.n	8027210 <__sfp+0x18>
 8027220:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8027224:	b9d5      	cbnz	r5, 802725c <__sfp+0x64>
 8027226:	4b16      	ldr	r3, [pc, #88]	; (8027280 <__sfp+0x88>)
 8027228:	60e3      	str	r3, [r4, #12]
 802722a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802722e:	6665      	str	r5, [r4, #100]	; 0x64
 8027230:	f000 f847 	bl	80272c2 <__retarget_lock_init_recursive>
 8027234:	f7ff ff96 	bl	8027164 <__sfp_lock_release>
 8027238:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802723c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8027240:	6025      	str	r5, [r4, #0]
 8027242:	61a5      	str	r5, [r4, #24]
 8027244:	2208      	movs	r2, #8
 8027246:	4629      	mov	r1, r5
 8027248:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802724c:	f7ff f922 	bl	8026494 <memset>
 8027250:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8027254:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8027258:	4620      	mov	r0, r4
 802725a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802725c:	3468      	adds	r4, #104	; 0x68
 802725e:	e7d9      	b.n	8027214 <__sfp+0x1c>
 8027260:	2104      	movs	r1, #4
 8027262:	4638      	mov	r0, r7
 8027264:	f7ff ff62 	bl	802712c <__sfmoreglue>
 8027268:	4604      	mov	r4, r0
 802726a:	6030      	str	r0, [r6, #0]
 802726c:	2800      	cmp	r0, #0
 802726e:	d1d5      	bne.n	802721c <__sfp+0x24>
 8027270:	f7ff ff78 	bl	8027164 <__sfp_lock_release>
 8027274:	230c      	movs	r3, #12
 8027276:	603b      	str	r3, [r7, #0]
 8027278:	e7ee      	b.n	8027258 <__sfp+0x60>
 802727a:	bf00      	nop
 802727c:	0802a7cc 	.word	0x0802a7cc
 8027280:	ffff0001 	.word	0xffff0001

08027284 <_fwalk_reent>:
 8027284:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027288:	4606      	mov	r6, r0
 802728a:	4688      	mov	r8, r1
 802728c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8027290:	2700      	movs	r7, #0
 8027292:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027296:	f1b9 0901 	subs.w	r9, r9, #1
 802729a:	d505      	bpl.n	80272a8 <_fwalk_reent+0x24>
 802729c:	6824      	ldr	r4, [r4, #0]
 802729e:	2c00      	cmp	r4, #0
 80272a0:	d1f7      	bne.n	8027292 <_fwalk_reent+0xe>
 80272a2:	4638      	mov	r0, r7
 80272a4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80272a8:	89ab      	ldrh	r3, [r5, #12]
 80272aa:	2b01      	cmp	r3, #1
 80272ac:	d907      	bls.n	80272be <_fwalk_reent+0x3a>
 80272ae:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80272b2:	3301      	adds	r3, #1
 80272b4:	d003      	beq.n	80272be <_fwalk_reent+0x3a>
 80272b6:	4629      	mov	r1, r5
 80272b8:	4630      	mov	r0, r6
 80272ba:	47c0      	blx	r8
 80272bc:	4307      	orrs	r7, r0
 80272be:	3568      	adds	r5, #104	; 0x68
 80272c0:	e7e9      	b.n	8027296 <_fwalk_reent+0x12>

080272c2 <__retarget_lock_init_recursive>:
 80272c2:	4770      	bx	lr

080272c4 <__retarget_lock_acquire_recursive>:
 80272c4:	4770      	bx	lr

080272c6 <__retarget_lock_release>:
 80272c6:	4770      	bx	lr

080272c8 <__retarget_lock_release_recursive>:
 80272c8:	4770      	bx	lr

080272ca <__swhatbuf_r>:
 80272ca:	b570      	push	{r4, r5, r6, lr}
 80272cc:	460e      	mov	r6, r1
 80272ce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80272d2:	2900      	cmp	r1, #0
 80272d4:	b096      	sub	sp, #88	; 0x58
 80272d6:	4614      	mov	r4, r2
 80272d8:	461d      	mov	r5, r3
 80272da:	da08      	bge.n	80272ee <__swhatbuf_r+0x24>
 80272dc:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80272e0:	2200      	movs	r2, #0
 80272e2:	602a      	str	r2, [r5, #0]
 80272e4:	061a      	lsls	r2, r3, #24
 80272e6:	d410      	bmi.n	802730a <__swhatbuf_r+0x40>
 80272e8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80272ec:	e00e      	b.n	802730c <__swhatbuf_r+0x42>
 80272ee:	466a      	mov	r2, sp
 80272f0:	f000 f8c2 	bl	8027478 <_fstat_r>
 80272f4:	2800      	cmp	r0, #0
 80272f6:	dbf1      	blt.n	80272dc <__swhatbuf_r+0x12>
 80272f8:	9a01      	ldr	r2, [sp, #4]
 80272fa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80272fe:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8027302:	425a      	negs	r2, r3
 8027304:	415a      	adcs	r2, r3
 8027306:	602a      	str	r2, [r5, #0]
 8027308:	e7ee      	b.n	80272e8 <__swhatbuf_r+0x1e>
 802730a:	2340      	movs	r3, #64	; 0x40
 802730c:	2000      	movs	r0, #0
 802730e:	6023      	str	r3, [r4, #0]
 8027310:	b016      	add	sp, #88	; 0x58
 8027312:	bd70      	pop	{r4, r5, r6, pc}

08027314 <__smakebuf_r>:
 8027314:	898b      	ldrh	r3, [r1, #12]
 8027316:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8027318:	079d      	lsls	r5, r3, #30
 802731a:	4606      	mov	r6, r0
 802731c:	460c      	mov	r4, r1
 802731e:	d507      	bpl.n	8027330 <__smakebuf_r+0x1c>
 8027320:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8027324:	6023      	str	r3, [r4, #0]
 8027326:	6123      	str	r3, [r4, #16]
 8027328:	2301      	movs	r3, #1
 802732a:	6163      	str	r3, [r4, #20]
 802732c:	b002      	add	sp, #8
 802732e:	bd70      	pop	{r4, r5, r6, pc}
 8027330:	ab01      	add	r3, sp, #4
 8027332:	466a      	mov	r2, sp
 8027334:	f7ff ffc9 	bl	80272ca <__swhatbuf_r>
 8027338:	9900      	ldr	r1, [sp, #0]
 802733a:	4605      	mov	r5, r0
 802733c:	4630      	mov	r0, r6
 802733e:	f7ff f91d 	bl	802657c <_malloc_r>
 8027342:	b948      	cbnz	r0, 8027358 <__smakebuf_r+0x44>
 8027344:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027348:	059a      	lsls	r2, r3, #22
 802734a:	d4ef      	bmi.n	802732c <__smakebuf_r+0x18>
 802734c:	f023 0303 	bic.w	r3, r3, #3
 8027350:	f043 0302 	orr.w	r3, r3, #2
 8027354:	81a3      	strh	r3, [r4, #12]
 8027356:	e7e3      	b.n	8027320 <__smakebuf_r+0xc>
 8027358:	4b0d      	ldr	r3, [pc, #52]	; (8027390 <__smakebuf_r+0x7c>)
 802735a:	62b3      	str	r3, [r6, #40]	; 0x28
 802735c:	89a3      	ldrh	r3, [r4, #12]
 802735e:	6020      	str	r0, [r4, #0]
 8027360:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027364:	81a3      	strh	r3, [r4, #12]
 8027366:	9b00      	ldr	r3, [sp, #0]
 8027368:	6163      	str	r3, [r4, #20]
 802736a:	9b01      	ldr	r3, [sp, #4]
 802736c:	6120      	str	r0, [r4, #16]
 802736e:	b15b      	cbz	r3, 8027388 <__smakebuf_r+0x74>
 8027370:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027374:	4630      	mov	r0, r6
 8027376:	f000 f891 	bl	802749c <_isatty_r>
 802737a:	b128      	cbz	r0, 8027388 <__smakebuf_r+0x74>
 802737c:	89a3      	ldrh	r3, [r4, #12]
 802737e:	f023 0303 	bic.w	r3, r3, #3
 8027382:	f043 0301 	orr.w	r3, r3, #1
 8027386:	81a3      	strh	r3, [r4, #12]
 8027388:	89a0      	ldrh	r0, [r4, #12]
 802738a:	4305      	orrs	r5, r0
 802738c:	81a5      	strh	r5, [r4, #12]
 802738e:	e7cd      	b.n	802732c <__smakebuf_r+0x18>
 8027390:	08027121 	.word	0x08027121

08027394 <__malloc_lock>:
 8027394:	4801      	ldr	r0, [pc, #4]	; (802739c <__malloc_lock+0x8>)
 8027396:	f7ff bf95 	b.w	80272c4 <__retarget_lock_acquire_recursive>
 802739a:	bf00      	nop
 802739c:	2000fa11 	.word	0x2000fa11

080273a0 <__malloc_unlock>:
 80273a0:	4801      	ldr	r0, [pc, #4]	; (80273a8 <__malloc_unlock+0x8>)
 80273a2:	f7ff bf91 	b.w	80272c8 <__retarget_lock_release_recursive>
 80273a6:	bf00      	nop
 80273a8:	2000fa11 	.word	0x2000fa11

080273ac <__sread>:
 80273ac:	b510      	push	{r4, lr}
 80273ae:	460c      	mov	r4, r1
 80273b0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273b4:	f000 f894 	bl	80274e0 <_read_r>
 80273b8:	2800      	cmp	r0, #0
 80273ba:	bfab      	itete	ge
 80273bc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80273be:	89a3      	ldrhlt	r3, [r4, #12]
 80273c0:	181b      	addge	r3, r3, r0
 80273c2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80273c6:	bfac      	ite	ge
 80273c8:	6563      	strge	r3, [r4, #84]	; 0x54
 80273ca:	81a3      	strhlt	r3, [r4, #12]
 80273cc:	bd10      	pop	{r4, pc}

080273ce <__swrite>:
 80273ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80273d2:	461f      	mov	r7, r3
 80273d4:	898b      	ldrh	r3, [r1, #12]
 80273d6:	05db      	lsls	r3, r3, #23
 80273d8:	4605      	mov	r5, r0
 80273da:	460c      	mov	r4, r1
 80273dc:	4616      	mov	r6, r2
 80273de:	d505      	bpl.n	80273ec <__swrite+0x1e>
 80273e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80273e4:	2302      	movs	r3, #2
 80273e6:	2200      	movs	r2, #0
 80273e8:	f000 f868 	bl	80274bc <_lseek_r>
 80273ec:	89a3      	ldrh	r3, [r4, #12]
 80273ee:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80273f2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80273f6:	81a3      	strh	r3, [r4, #12]
 80273f8:	4632      	mov	r2, r6
 80273fa:	463b      	mov	r3, r7
 80273fc:	4628      	mov	r0, r5
 80273fe:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027402:	f000 b817 	b.w	8027434 <_write_r>

08027406 <__sseek>:
 8027406:	b510      	push	{r4, lr}
 8027408:	460c      	mov	r4, r1
 802740a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802740e:	f000 f855 	bl	80274bc <_lseek_r>
 8027412:	1c43      	adds	r3, r0, #1
 8027414:	89a3      	ldrh	r3, [r4, #12]
 8027416:	bf15      	itete	ne
 8027418:	6560      	strne	r0, [r4, #84]	; 0x54
 802741a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802741e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8027422:	81a3      	strheq	r3, [r4, #12]
 8027424:	bf18      	it	ne
 8027426:	81a3      	strhne	r3, [r4, #12]
 8027428:	bd10      	pop	{r4, pc}

0802742a <__sclose>:
 802742a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802742e:	f000 b813 	b.w	8027458 <_close_r>
	...

08027434 <_write_r>:
 8027434:	b538      	push	{r3, r4, r5, lr}
 8027436:	4d07      	ldr	r5, [pc, #28]	; (8027454 <_write_r+0x20>)
 8027438:	4604      	mov	r4, r0
 802743a:	4608      	mov	r0, r1
 802743c:	4611      	mov	r1, r2
 802743e:	2200      	movs	r2, #0
 8027440:	602a      	str	r2, [r5, #0]
 8027442:	461a      	mov	r2, r3
 8027444:	f7db f990 	bl	8002768 <_write>
 8027448:	1c43      	adds	r3, r0, #1
 802744a:	d102      	bne.n	8027452 <_write_r+0x1e>
 802744c:	682b      	ldr	r3, [r5, #0]
 802744e:	b103      	cbz	r3, 8027452 <_write_r+0x1e>
 8027450:	6023      	str	r3, [r4, #0]
 8027452:	bd38      	pop	{r3, r4, r5, pc}
 8027454:	2000fa14 	.word	0x2000fa14

08027458 <_close_r>:
 8027458:	b538      	push	{r3, r4, r5, lr}
 802745a:	4d06      	ldr	r5, [pc, #24]	; (8027474 <_close_r+0x1c>)
 802745c:	2300      	movs	r3, #0
 802745e:	4604      	mov	r4, r0
 8027460:	4608      	mov	r0, r1
 8027462:	602b      	str	r3, [r5, #0]
 8027464:	f7db f98e 	bl	8002784 <_close>
 8027468:	1c43      	adds	r3, r0, #1
 802746a:	d102      	bne.n	8027472 <_close_r+0x1a>
 802746c:	682b      	ldr	r3, [r5, #0]
 802746e:	b103      	cbz	r3, 8027472 <_close_r+0x1a>
 8027470:	6023      	str	r3, [r4, #0]
 8027472:	bd38      	pop	{r3, r4, r5, pc}
 8027474:	2000fa14 	.word	0x2000fa14

08027478 <_fstat_r>:
 8027478:	b538      	push	{r3, r4, r5, lr}
 802747a:	4d07      	ldr	r5, [pc, #28]	; (8027498 <_fstat_r+0x20>)
 802747c:	2300      	movs	r3, #0
 802747e:	4604      	mov	r4, r0
 8027480:	4608      	mov	r0, r1
 8027482:	4611      	mov	r1, r2
 8027484:	602b      	str	r3, [r5, #0]
 8027486:	f7db f980 	bl	800278a <_fstat>
 802748a:	1c43      	adds	r3, r0, #1
 802748c:	d102      	bne.n	8027494 <_fstat_r+0x1c>
 802748e:	682b      	ldr	r3, [r5, #0]
 8027490:	b103      	cbz	r3, 8027494 <_fstat_r+0x1c>
 8027492:	6023      	str	r3, [r4, #0]
 8027494:	bd38      	pop	{r3, r4, r5, pc}
 8027496:	bf00      	nop
 8027498:	2000fa14 	.word	0x2000fa14

0802749c <_isatty_r>:
 802749c:	b538      	push	{r3, r4, r5, lr}
 802749e:	4d06      	ldr	r5, [pc, #24]	; (80274b8 <_isatty_r+0x1c>)
 80274a0:	2300      	movs	r3, #0
 80274a2:	4604      	mov	r4, r0
 80274a4:	4608      	mov	r0, r1
 80274a6:	602b      	str	r3, [r5, #0]
 80274a8:	f7db f974 	bl	8002794 <_isatty>
 80274ac:	1c43      	adds	r3, r0, #1
 80274ae:	d102      	bne.n	80274b6 <_isatty_r+0x1a>
 80274b0:	682b      	ldr	r3, [r5, #0]
 80274b2:	b103      	cbz	r3, 80274b6 <_isatty_r+0x1a>
 80274b4:	6023      	str	r3, [r4, #0]
 80274b6:	bd38      	pop	{r3, r4, r5, pc}
 80274b8:	2000fa14 	.word	0x2000fa14

080274bc <_lseek_r>:
 80274bc:	b538      	push	{r3, r4, r5, lr}
 80274be:	4d07      	ldr	r5, [pc, #28]	; (80274dc <_lseek_r+0x20>)
 80274c0:	4604      	mov	r4, r0
 80274c2:	4608      	mov	r0, r1
 80274c4:	4611      	mov	r1, r2
 80274c6:	2200      	movs	r2, #0
 80274c8:	602a      	str	r2, [r5, #0]
 80274ca:	461a      	mov	r2, r3
 80274cc:	f7db f964 	bl	8002798 <_lseek>
 80274d0:	1c43      	adds	r3, r0, #1
 80274d2:	d102      	bne.n	80274da <_lseek_r+0x1e>
 80274d4:	682b      	ldr	r3, [r5, #0]
 80274d6:	b103      	cbz	r3, 80274da <_lseek_r+0x1e>
 80274d8:	6023      	str	r3, [r4, #0]
 80274da:	bd38      	pop	{r3, r4, r5, pc}
 80274dc:	2000fa14 	.word	0x2000fa14

080274e0 <_read_r>:
 80274e0:	b538      	push	{r3, r4, r5, lr}
 80274e2:	4d07      	ldr	r5, [pc, #28]	; (8027500 <_read_r+0x20>)
 80274e4:	4604      	mov	r4, r0
 80274e6:	4608      	mov	r0, r1
 80274e8:	4611      	mov	r1, r2
 80274ea:	2200      	movs	r2, #0
 80274ec:	602a      	str	r2, [r5, #0]
 80274ee:	461a      	mov	r2, r3
 80274f0:	f7db f92c 	bl	800274c <_read>
 80274f4:	1c43      	adds	r3, r0, #1
 80274f6:	d102      	bne.n	80274fe <_read_r+0x1e>
 80274f8:	682b      	ldr	r3, [r5, #0]
 80274fa:	b103      	cbz	r3, 80274fe <_read_r+0x1e>
 80274fc:	6023      	str	r3, [r4, #0]
 80274fe:	bd38      	pop	{r3, r4, r5, pc}
 8027500:	2000fa14 	.word	0x2000fa14

08027504 <_init>:
 8027504:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027506:	bf00      	nop
 8027508:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802750a:	bc08      	pop	{r3}
 802750c:	469e      	mov	lr, r3
 802750e:	4770      	bx	lr

08027510 <_fini>:
 8027510:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8027512:	bf00      	nop
 8027514:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8027516:	bc08      	pop	{r3}
 8027518:	469e      	mov	lr, r3
 802751a:	4770      	bx	lr
