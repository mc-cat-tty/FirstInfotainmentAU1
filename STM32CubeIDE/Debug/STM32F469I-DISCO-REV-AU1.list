
STM32F469I-DISCO-REV-AU1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002760c  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000334c  080277cc  080277cc  000377cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000066c  0802ab18  0802ab18  0003ab18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0802b184  0802b184  002871f8  2**0
                  CONTENTS
  5 .ARM          00000008  0802b184  0802b184  0003b184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0802b18c  0802b18c  002871f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0802b18c  0802b18c  0003b18c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0802b1a4  0802b1a4  0003b1a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000148  20000000  0802b1ac  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000f8d0  20000148  0802b2f4  00040148  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000fa18  0802b2f4  0004fa18  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  002871f8  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 001f6274  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 0004090c  901f6274  901f6274  00246274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000678  90236b80  90236b80  00286b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00077941  00000000  00000000  00287228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   00155d8b  00000000  00000000  002feb69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 00020c98  00000000  00000000  004548f4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003f28  00000000  00000000  00475590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013ee34  00000000  00000000  004794b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 0000a680  00000000  00000000  005b82f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00043ff4  00000000  00000000  005c2970  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003e2e0  00000000  00000000  00606964  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  00644c44  2**0
                  CONTENTS, READONLY
 25 .debug_frame  0000afe0  00000000  00000000  00644d14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000148 	.word	0x20000148
 80001dc:	00000000 	.word	0x00000000
 80001e0:	080277b4 	.word	0x080277b4

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	2000014c 	.word	0x2000014c
 80001fc:	080277b4 	.word	0x080277b4

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_dmul>:
 80002a0:	b570      	push	{r4, r5, r6, lr}
 80002a2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80002a6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80002aa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80002ae:	bf1d      	ittte	ne
 80002b0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80002b4:	ea94 0f0c 	teqne	r4, ip
 80002b8:	ea95 0f0c 	teqne	r5, ip
 80002bc:	f000 f8de 	bleq	800047c <__aeabi_dmul+0x1dc>
 80002c0:	442c      	add	r4, r5
 80002c2:	ea81 0603 	eor.w	r6, r1, r3
 80002c6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80002ca:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80002ce:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80002d2:	bf18      	it	ne
 80002d4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80002d8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80002dc:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80002e0:	d038      	beq.n	8000354 <__aeabi_dmul+0xb4>
 80002e2:	fba0 ce02 	umull	ip, lr, r0, r2
 80002e6:	f04f 0500 	mov.w	r5, #0
 80002ea:	fbe1 e502 	umlal	lr, r5, r1, r2
 80002ee:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80002f2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80002f6:	f04f 0600 	mov.w	r6, #0
 80002fa:	fbe1 5603 	umlal	r5, r6, r1, r3
 80002fe:	f09c 0f00 	teq	ip, #0
 8000302:	bf18      	it	ne
 8000304:	f04e 0e01 	orrne.w	lr, lr, #1
 8000308:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800030c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000310:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000314:	d204      	bcs.n	8000320 <__aeabi_dmul+0x80>
 8000316:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800031a:	416d      	adcs	r5, r5
 800031c:	eb46 0606 	adc.w	r6, r6, r6
 8000320:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000324:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000328:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800032c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000330:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000334:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000338:	bf88      	it	hi
 800033a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800033e:	d81e      	bhi.n	800037e <__aeabi_dmul+0xde>
 8000340:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000344:	bf08      	it	eq
 8000346:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800034a:	f150 0000 	adcs.w	r0, r0, #0
 800034e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000352:	bd70      	pop	{r4, r5, r6, pc}
 8000354:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000358:	ea46 0101 	orr.w	r1, r6, r1
 800035c:	ea40 0002 	orr.w	r0, r0, r2
 8000360:	ea81 0103 	eor.w	r1, r1, r3
 8000364:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000368:	bfc2      	ittt	gt
 800036a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800036e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000372:	bd70      	popgt	{r4, r5, r6, pc}
 8000374:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000378:	f04f 0e00 	mov.w	lr, #0
 800037c:	3c01      	subs	r4, #1
 800037e:	f300 80ab 	bgt.w	80004d8 <__aeabi_dmul+0x238>
 8000382:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000386:	bfde      	ittt	le
 8000388:	2000      	movle	r0, #0
 800038a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800038e:	bd70      	pople	{r4, r5, r6, pc}
 8000390:	f1c4 0400 	rsb	r4, r4, #0
 8000394:	3c20      	subs	r4, #32
 8000396:	da35      	bge.n	8000404 <__aeabi_dmul+0x164>
 8000398:	340c      	adds	r4, #12
 800039a:	dc1b      	bgt.n	80003d4 <__aeabi_dmul+0x134>
 800039c:	f104 0414 	add.w	r4, r4, #20
 80003a0:	f1c4 0520 	rsb	r5, r4, #32
 80003a4:	fa00 f305 	lsl.w	r3, r0, r5
 80003a8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ac:	fa01 f205 	lsl.w	r2, r1, r5
 80003b0:	ea40 0002 	orr.w	r0, r0, r2
 80003b4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80003b8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80003bc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003c0:	fa21 f604 	lsr.w	r6, r1, r4
 80003c4:	eb42 0106 	adc.w	r1, r2, r6
 80003c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003cc:	bf08      	it	eq
 80003ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80003d2:	bd70      	pop	{r4, r5, r6, pc}
 80003d4:	f1c4 040c 	rsb	r4, r4, #12
 80003d8:	f1c4 0520 	rsb	r5, r4, #32
 80003dc:	fa00 f304 	lsl.w	r3, r0, r4
 80003e0:	fa20 f005 	lsr.w	r0, r0, r5
 80003e4:	fa01 f204 	lsl.w	r2, r1, r4
 80003e8:	ea40 0002 	orr.w	r0, r0, r2
 80003ec:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80003f0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80003f4:	f141 0100 	adc.w	r1, r1, #0
 80003f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80003fc:	bf08      	it	eq
 80003fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000402:	bd70      	pop	{r4, r5, r6, pc}
 8000404:	f1c4 0520 	rsb	r5, r4, #32
 8000408:	fa00 f205 	lsl.w	r2, r0, r5
 800040c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000410:	fa20 f304 	lsr.w	r3, r0, r4
 8000414:	fa01 f205 	lsl.w	r2, r1, r5
 8000418:	ea43 0302 	orr.w	r3, r3, r2
 800041c:	fa21 f004 	lsr.w	r0, r1, r4
 8000420:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000424:	fa21 f204 	lsr.w	r2, r1, r4
 8000428:	ea20 0002 	bic.w	r0, r0, r2
 800042c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000430:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000434:	bf08      	it	eq
 8000436:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800043a:	bd70      	pop	{r4, r5, r6, pc}
 800043c:	f094 0f00 	teq	r4, #0
 8000440:	d10f      	bne.n	8000462 <__aeabi_dmul+0x1c2>
 8000442:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000446:	0040      	lsls	r0, r0, #1
 8000448:	eb41 0101 	adc.w	r1, r1, r1
 800044c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000450:	bf08      	it	eq
 8000452:	3c01      	subeq	r4, #1
 8000454:	d0f7      	beq.n	8000446 <__aeabi_dmul+0x1a6>
 8000456:	ea41 0106 	orr.w	r1, r1, r6
 800045a:	f095 0f00 	teq	r5, #0
 800045e:	bf18      	it	ne
 8000460:	4770      	bxne	lr
 8000462:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000466:	0052      	lsls	r2, r2, #1
 8000468:	eb43 0303 	adc.w	r3, r3, r3
 800046c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000470:	bf08      	it	eq
 8000472:	3d01      	subeq	r5, #1
 8000474:	d0f7      	beq.n	8000466 <__aeabi_dmul+0x1c6>
 8000476:	ea43 0306 	orr.w	r3, r3, r6
 800047a:	4770      	bx	lr
 800047c:	ea94 0f0c 	teq	r4, ip
 8000480:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000484:	bf18      	it	ne
 8000486:	ea95 0f0c 	teqne	r5, ip
 800048a:	d00c      	beq.n	80004a6 <__aeabi_dmul+0x206>
 800048c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000490:	bf18      	it	ne
 8000492:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000496:	d1d1      	bne.n	800043c <__aeabi_dmul+0x19c>
 8000498:	ea81 0103 	eor.w	r1, r1, r3
 800049c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004a0:	f04f 0000 	mov.w	r0, #0
 80004a4:	bd70      	pop	{r4, r5, r6, pc}
 80004a6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80004aa:	bf06      	itte	eq
 80004ac:	4610      	moveq	r0, r2
 80004ae:	4619      	moveq	r1, r3
 80004b0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80004b4:	d019      	beq.n	80004ea <__aeabi_dmul+0x24a>
 80004b6:	ea94 0f0c 	teq	r4, ip
 80004ba:	d102      	bne.n	80004c2 <__aeabi_dmul+0x222>
 80004bc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80004c0:	d113      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004c2:	ea95 0f0c 	teq	r5, ip
 80004c6:	d105      	bne.n	80004d4 <__aeabi_dmul+0x234>
 80004c8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80004cc:	bf1c      	itt	ne
 80004ce:	4610      	movne	r0, r2
 80004d0:	4619      	movne	r1, r3
 80004d2:	d10a      	bne.n	80004ea <__aeabi_dmul+0x24a>
 80004d4:	ea81 0103 	eor.w	r1, r1, r3
 80004d8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80004dc:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd70      	pop	{r4, r5, r6, pc}
 80004ea:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80004ee:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80004f2:	bd70      	pop	{r4, r5, r6, pc}

080004f4 <__aeabi_drsub>:
 80004f4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80004f8:	e002      	b.n	8000500 <__adddf3>
 80004fa:	bf00      	nop

080004fc <__aeabi_dsub>:
 80004fc:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000500 <__adddf3>:
 8000500:	b530      	push	{r4, r5, lr}
 8000502:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000506:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800050a:	ea94 0f05 	teq	r4, r5
 800050e:	bf08      	it	eq
 8000510:	ea90 0f02 	teqeq	r0, r2
 8000514:	bf1f      	itttt	ne
 8000516:	ea54 0c00 	orrsne.w	ip, r4, r0
 800051a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800051e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000522:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000526:	f000 80e2 	beq.w	80006ee <__adddf3+0x1ee>
 800052a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800052e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000532:	bfb8      	it	lt
 8000534:	426d      	neglt	r5, r5
 8000536:	dd0c      	ble.n	8000552 <__adddf3+0x52>
 8000538:	442c      	add	r4, r5
 800053a:	ea80 0202 	eor.w	r2, r0, r2
 800053e:	ea81 0303 	eor.w	r3, r1, r3
 8000542:	ea82 0000 	eor.w	r0, r2, r0
 8000546:	ea83 0101 	eor.w	r1, r3, r1
 800054a:	ea80 0202 	eor.w	r2, r0, r2
 800054e:	ea81 0303 	eor.w	r3, r1, r3
 8000552:	2d36      	cmp	r5, #54	; 0x36
 8000554:	bf88      	it	hi
 8000556:	bd30      	pophi	{r4, r5, pc}
 8000558:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800055c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000560:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000564:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000568:	d002      	beq.n	8000570 <__adddf3+0x70>
 800056a:	4240      	negs	r0, r0
 800056c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000570:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000574:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000578:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 800057c:	d002      	beq.n	8000584 <__adddf3+0x84>
 800057e:	4252      	negs	r2, r2
 8000580:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000584:	ea94 0f05 	teq	r4, r5
 8000588:	f000 80a7 	beq.w	80006da <__adddf3+0x1da>
 800058c:	f1a4 0401 	sub.w	r4, r4, #1
 8000590:	f1d5 0e20 	rsbs	lr, r5, #32
 8000594:	db0d      	blt.n	80005b2 <__adddf3+0xb2>
 8000596:	fa02 fc0e 	lsl.w	ip, r2, lr
 800059a:	fa22 f205 	lsr.w	r2, r2, r5
 800059e:	1880      	adds	r0, r0, r2
 80005a0:	f141 0100 	adc.w	r1, r1, #0
 80005a4:	fa03 f20e 	lsl.w	r2, r3, lr
 80005a8:	1880      	adds	r0, r0, r2
 80005aa:	fa43 f305 	asr.w	r3, r3, r5
 80005ae:	4159      	adcs	r1, r3
 80005b0:	e00e      	b.n	80005d0 <__adddf3+0xd0>
 80005b2:	f1a5 0520 	sub.w	r5, r5, #32
 80005b6:	f10e 0e20 	add.w	lr, lr, #32
 80005ba:	2a01      	cmp	r2, #1
 80005bc:	fa03 fc0e 	lsl.w	ip, r3, lr
 80005c0:	bf28      	it	cs
 80005c2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80005c6:	fa43 f305 	asr.w	r3, r3, r5
 80005ca:	18c0      	adds	r0, r0, r3
 80005cc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80005d0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005d4:	d507      	bpl.n	80005e6 <__adddf3+0xe6>
 80005d6:	f04f 0e00 	mov.w	lr, #0
 80005da:	f1dc 0c00 	rsbs	ip, ip, #0
 80005de:	eb7e 0000 	sbcs.w	r0, lr, r0
 80005e2:	eb6e 0101 	sbc.w	r1, lr, r1
 80005e6:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80005ea:	d31b      	bcc.n	8000624 <__adddf3+0x124>
 80005ec:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80005f0:	d30c      	bcc.n	800060c <__adddf3+0x10c>
 80005f2:	0849      	lsrs	r1, r1, #1
 80005f4:	ea5f 0030 	movs.w	r0, r0, rrx
 80005f8:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80005fc:	f104 0401 	add.w	r4, r4, #1
 8000600:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000604:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000608:	f080 809a 	bcs.w	8000740 <__adddf3+0x240>
 800060c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000610:	bf08      	it	eq
 8000612:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000616:	f150 0000 	adcs.w	r0, r0, #0
 800061a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800061e:	ea41 0105 	orr.w	r1, r1, r5
 8000622:	bd30      	pop	{r4, r5, pc}
 8000624:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000628:	4140      	adcs	r0, r0
 800062a:	eb41 0101 	adc.w	r1, r1, r1
 800062e:	3c01      	subs	r4, #1
 8000630:	bf28      	it	cs
 8000632:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 8000636:	d2e9      	bcs.n	800060c <__adddf3+0x10c>
 8000638:	f091 0f00 	teq	r1, #0
 800063c:	bf04      	itt	eq
 800063e:	4601      	moveq	r1, r0
 8000640:	2000      	moveq	r0, #0
 8000642:	fab1 f381 	clz	r3, r1
 8000646:	bf08      	it	eq
 8000648:	3320      	addeq	r3, #32
 800064a:	f1a3 030b 	sub.w	r3, r3, #11
 800064e:	f1b3 0220 	subs.w	r2, r3, #32
 8000652:	da0c      	bge.n	800066e <__adddf3+0x16e>
 8000654:	320c      	adds	r2, #12
 8000656:	dd08      	ble.n	800066a <__adddf3+0x16a>
 8000658:	f102 0c14 	add.w	ip, r2, #20
 800065c:	f1c2 020c 	rsb	r2, r2, #12
 8000660:	fa01 f00c 	lsl.w	r0, r1, ip
 8000664:	fa21 f102 	lsr.w	r1, r1, r2
 8000668:	e00c      	b.n	8000684 <__adddf3+0x184>
 800066a:	f102 0214 	add.w	r2, r2, #20
 800066e:	bfd8      	it	le
 8000670:	f1c2 0c20 	rsble	ip, r2, #32
 8000674:	fa01 f102 	lsl.w	r1, r1, r2
 8000678:	fa20 fc0c 	lsr.w	ip, r0, ip
 800067c:	bfdc      	itt	le
 800067e:	ea41 010c 	orrle.w	r1, r1, ip
 8000682:	4090      	lslle	r0, r2
 8000684:	1ae4      	subs	r4, r4, r3
 8000686:	bfa2      	ittt	ge
 8000688:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 800068c:	4329      	orrge	r1, r5
 800068e:	bd30      	popge	{r4, r5, pc}
 8000690:	ea6f 0404 	mvn.w	r4, r4
 8000694:	3c1f      	subs	r4, #31
 8000696:	da1c      	bge.n	80006d2 <__adddf3+0x1d2>
 8000698:	340c      	adds	r4, #12
 800069a:	dc0e      	bgt.n	80006ba <__adddf3+0x1ba>
 800069c:	f104 0414 	add.w	r4, r4, #20
 80006a0:	f1c4 0220 	rsb	r2, r4, #32
 80006a4:	fa20 f004 	lsr.w	r0, r0, r4
 80006a8:	fa01 f302 	lsl.w	r3, r1, r2
 80006ac:	ea40 0003 	orr.w	r0, r0, r3
 80006b0:	fa21 f304 	lsr.w	r3, r1, r4
 80006b4:	ea45 0103 	orr.w	r1, r5, r3
 80006b8:	bd30      	pop	{r4, r5, pc}
 80006ba:	f1c4 040c 	rsb	r4, r4, #12
 80006be:	f1c4 0220 	rsb	r2, r4, #32
 80006c2:	fa20 f002 	lsr.w	r0, r0, r2
 80006c6:	fa01 f304 	lsl.w	r3, r1, r4
 80006ca:	ea40 0003 	orr.w	r0, r0, r3
 80006ce:	4629      	mov	r1, r5
 80006d0:	bd30      	pop	{r4, r5, pc}
 80006d2:	fa21 f004 	lsr.w	r0, r1, r4
 80006d6:	4629      	mov	r1, r5
 80006d8:	bd30      	pop	{r4, r5, pc}
 80006da:	f094 0f00 	teq	r4, #0
 80006de:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80006e2:	bf06      	itte	eq
 80006e4:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80006e8:	3401      	addeq	r4, #1
 80006ea:	3d01      	subne	r5, #1
 80006ec:	e74e      	b.n	800058c <__adddf3+0x8c>
 80006ee:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80006f2:	bf18      	it	ne
 80006f4:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006f8:	d029      	beq.n	800074e <__adddf3+0x24e>
 80006fa:	ea94 0f05 	teq	r4, r5
 80006fe:	bf08      	it	eq
 8000700:	ea90 0f02 	teqeq	r0, r2
 8000704:	d005      	beq.n	8000712 <__adddf3+0x212>
 8000706:	ea54 0c00 	orrs.w	ip, r4, r0
 800070a:	bf04      	itt	eq
 800070c:	4619      	moveq	r1, r3
 800070e:	4610      	moveq	r0, r2
 8000710:	bd30      	pop	{r4, r5, pc}
 8000712:	ea91 0f03 	teq	r1, r3
 8000716:	bf1e      	ittt	ne
 8000718:	2100      	movne	r1, #0
 800071a:	2000      	movne	r0, #0
 800071c:	bd30      	popne	{r4, r5, pc}
 800071e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000722:	d105      	bne.n	8000730 <__adddf3+0x230>
 8000724:	0040      	lsls	r0, r0, #1
 8000726:	4149      	adcs	r1, r1
 8000728:	bf28      	it	cs
 800072a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800072e:	bd30      	pop	{r4, r5, pc}
 8000730:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000734:	bf3c      	itt	cc
 8000736:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800073a:	bd30      	popcc	{r4, r5, pc}
 800073c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000740:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000744:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000748:	f04f 0000 	mov.w	r0, #0
 800074c:	bd30      	pop	{r4, r5, pc}
 800074e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000752:	bf1a      	itte	ne
 8000754:	4619      	movne	r1, r3
 8000756:	4610      	movne	r0, r2
 8000758:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800075c:	bf1c      	itt	ne
 800075e:	460b      	movne	r3, r1
 8000760:	4602      	movne	r2, r0
 8000762:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000766:	bf06      	itte	eq
 8000768:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800076c:	ea91 0f03 	teqeq	r1, r3
 8000770:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000774:	bd30      	pop	{r4, r5, pc}
 8000776:	bf00      	nop

08000778 <__aeabi_ui2d>:
 8000778:	f090 0f00 	teq	r0, #0
 800077c:	bf04      	itt	eq
 800077e:	2100      	moveq	r1, #0
 8000780:	4770      	bxeq	lr
 8000782:	b530      	push	{r4, r5, lr}
 8000784:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000788:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800078c:	f04f 0500 	mov.w	r5, #0
 8000790:	f04f 0100 	mov.w	r1, #0
 8000794:	e750      	b.n	8000638 <__adddf3+0x138>
 8000796:	bf00      	nop

08000798 <__aeabi_i2d>:
 8000798:	f090 0f00 	teq	r0, #0
 800079c:	bf04      	itt	eq
 800079e:	2100      	moveq	r1, #0
 80007a0:	4770      	bxeq	lr
 80007a2:	b530      	push	{r4, r5, lr}
 80007a4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80007a8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80007ac:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80007b0:	bf48      	it	mi
 80007b2:	4240      	negmi	r0, r0
 80007b4:	f04f 0100 	mov.w	r1, #0
 80007b8:	e73e      	b.n	8000638 <__adddf3+0x138>
 80007ba:	bf00      	nop

080007bc <__aeabi_f2d>:
 80007bc:	0042      	lsls	r2, r0, #1
 80007be:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80007c2:	ea4f 0131 	mov.w	r1, r1, rrx
 80007c6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80007ca:	bf1f      	itttt	ne
 80007cc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80007d0:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80007d4:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80007d8:	4770      	bxne	lr
 80007da:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 80007de:	bf08      	it	eq
 80007e0:	4770      	bxeq	lr
 80007e2:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 80007e6:	bf04      	itt	eq
 80007e8:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 80007ec:	4770      	bxeq	lr
 80007ee:	b530      	push	{r4, r5, lr}
 80007f0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80007f4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007f8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80007fc:	e71c      	b.n	8000638 <__adddf3+0x138>
 80007fe:	bf00      	nop

08000800 <__aeabi_ul2d>:
 8000800:	ea50 0201 	orrs.w	r2, r0, r1
 8000804:	bf08      	it	eq
 8000806:	4770      	bxeq	lr
 8000808:	b530      	push	{r4, r5, lr}
 800080a:	f04f 0500 	mov.w	r5, #0
 800080e:	e00a      	b.n	8000826 <__aeabi_l2d+0x16>

08000810 <__aeabi_l2d>:
 8000810:	ea50 0201 	orrs.w	r2, r0, r1
 8000814:	bf08      	it	eq
 8000816:	4770      	bxeq	lr
 8000818:	b530      	push	{r4, r5, lr}
 800081a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800081e:	d502      	bpl.n	8000826 <__aeabi_l2d+0x16>
 8000820:	4240      	negs	r0, r0
 8000822:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000826:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800082a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800082e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000832:	f43f aed8 	beq.w	80005e6 <__adddf3+0xe6>
 8000836:	f04f 0203 	mov.w	r2, #3
 800083a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800083e:	bf18      	it	ne
 8000840:	3203      	addne	r2, #3
 8000842:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000846:	bf18      	it	ne
 8000848:	3203      	addne	r2, #3
 800084a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800084e:	f1c2 0320 	rsb	r3, r2, #32
 8000852:	fa00 fc03 	lsl.w	ip, r0, r3
 8000856:	fa20 f002 	lsr.w	r0, r0, r2
 800085a:	fa01 fe03 	lsl.w	lr, r1, r3
 800085e:	ea40 000e 	orr.w	r0, r0, lr
 8000862:	fa21 f102 	lsr.w	r1, r1, r2
 8000866:	4414      	add	r4, r2
 8000868:	e6bd      	b.n	80005e6 <__adddf3+0xe6>
 800086a:	bf00      	nop

0800086c <__gedf2>:
 800086c:	f04f 3cff 	mov.w	ip, #4294967295
 8000870:	e006      	b.n	8000880 <__cmpdf2+0x4>
 8000872:	bf00      	nop

08000874 <__ledf2>:
 8000874:	f04f 0c01 	mov.w	ip, #1
 8000878:	e002      	b.n	8000880 <__cmpdf2+0x4>
 800087a:	bf00      	nop

0800087c <__cmpdf2>:
 800087c:	f04f 0c01 	mov.w	ip, #1
 8000880:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000884:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000888:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800088c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000890:	bf18      	it	ne
 8000892:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000896:	d01b      	beq.n	80008d0 <__cmpdf2+0x54>
 8000898:	b001      	add	sp, #4
 800089a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800089e:	bf0c      	ite	eq
 80008a0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80008a4:	ea91 0f03 	teqne	r1, r3
 80008a8:	bf02      	ittt	eq
 80008aa:	ea90 0f02 	teqeq	r0, r2
 80008ae:	2000      	moveq	r0, #0
 80008b0:	4770      	bxeq	lr
 80008b2:	f110 0f00 	cmn.w	r0, #0
 80008b6:	ea91 0f03 	teq	r1, r3
 80008ba:	bf58      	it	pl
 80008bc:	4299      	cmppl	r1, r3
 80008be:	bf08      	it	eq
 80008c0:	4290      	cmpeq	r0, r2
 80008c2:	bf2c      	ite	cs
 80008c4:	17d8      	asrcs	r0, r3, #31
 80008c6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 80008ca:	f040 0001 	orr.w	r0, r0, #1
 80008ce:	4770      	bx	lr
 80008d0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80008d4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80008d8:	d102      	bne.n	80008e0 <__cmpdf2+0x64>
 80008da:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 80008de:	d107      	bne.n	80008f0 <__cmpdf2+0x74>
 80008e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80008e4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80008e8:	d1d6      	bne.n	8000898 <__cmpdf2+0x1c>
 80008ea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 80008ee:	d0d3      	beq.n	8000898 <__cmpdf2+0x1c>
 80008f0:	f85d 0b04 	ldr.w	r0, [sp], #4
 80008f4:	4770      	bx	lr
 80008f6:	bf00      	nop

080008f8 <__aeabi_cdrcmple>:
 80008f8:	4684      	mov	ip, r0
 80008fa:	4610      	mov	r0, r2
 80008fc:	4662      	mov	r2, ip
 80008fe:	468c      	mov	ip, r1
 8000900:	4619      	mov	r1, r3
 8000902:	4663      	mov	r3, ip
 8000904:	e000      	b.n	8000908 <__aeabi_cdcmpeq>
 8000906:	bf00      	nop

08000908 <__aeabi_cdcmpeq>:
 8000908:	b501      	push	{r0, lr}
 800090a:	f7ff ffb7 	bl	800087c <__cmpdf2>
 800090e:	2800      	cmp	r0, #0
 8000910:	bf48      	it	mi
 8000912:	f110 0f00 	cmnmi.w	r0, #0
 8000916:	bd01      	pop	{r0, pc}

08000918 <__aeabi_dcmpeq>:
 8000918:	f84d ed08 	str.w	lr, [sp, #-8]!
 800091c:	f7ff fff4 	bl	8000908 <__aeabi_cdcmpeq>
 8000920:	bf0c      	ite	eq
 8000922:	2001      	moveq	r0, #1
 8000924:	2000      	movne	r0, #0
 8000926:	f85d fb08 	ldr.w	pc, [sp], #8
 800092a:	bf00      	nop

0800092c <__aeabi_dcmplt>:
 800092c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000930:	f7ff ffea 	bl	8000908 <__aeabi_cdcmpeq>
 8000934:	bf34      	ite	cc
 8000936:	2001      	movcc	r0, #1
 8000938:	2000      	movcs	r0, #0
 800093a:	f85d fb08 	ldr.w	pc, [sp], #8
 800093e:	bf00      	nop

08000940 <__aeabi_dcmple>:
 8000940:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000944:	f7ff ffe0 	bl	8000908 <__aeabi_cdcmpeq>
 8000948:	bf94      	ite	ls
 800094a:	2001      	movls	r0, #1
 800094c:	2000      	movhi	r0, #0
 800094e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000952:	bf00      	nop

08000954 <__aeabi_dcmpge>:
 8000954:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000958:	f7ff ffce 	bl	80008f8 <__aeabi_cdrcmple>
 800095c:	bf94      	ite	ls
 800095e:	2001      	movls	r0, #1
 8000960:	2000      	movhi	r0, #0
 8000962:	f85d fb08 	ldr.w	pc, [sp], #8
 8000966:	bf00      	nop

08000968 <__aeabi_dcmpgt>:
 8000968:	f84d ed08 	str.w	lr, [sp, #-8]!
 800096c:	f7ff ffc4 	bl	80008f8 <__aeabi_cdrcmple>
 8000970:	bf34      	ite	cc
 8000972:	2001      	movcc	r0, #1
 8000974:	2000      	movcs	r0, #0
 8000976:	f85d fb08 	ldr.w	pc, [sp], #8
 800097a:	bf00      	nop

0800097c <__aeabi_d2iz>:
 800097c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000980:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000984:	d215      	bcs.n	80009b2 <__aeabi_d2iz+0x36>
 8000986:	d511      	bpl.n	80009ac <__aeabi_d2iz+0x30>
 8000988:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800098c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000990:	d912      	bls.n	80009b8 <__aeabi_d2iz+0x3c>
 8000992:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000996:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800099a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800099e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80009a2:	fa23 f002 	lsr.w	r0, r3, r2
 80009a6:	bf18      	it	ne
 80009a8:	4240      	negne	r0, r0
 80009aa:	4770      	bx	lr
 80009ac:	f04f 0000 	mov.w	r0, #0
 80009b0:	4770      	bx	lr
 80009b2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80009b6:	d105      	bne.n	80009c4 <__aeabi_d2iz+0x48>
 80009b8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 80009bc:	bf08      	it	eq
 80009be:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 80009c2:	4770      	bx	lr
 80009c4:	f04f 0000 	mov.w	r0, #0
 80009c8:	4770      	bx	lr
 80009ca:	bf00      	nop

080009cc <__aeabi_uldivmod>:
 80009cc:	b953      	cbnz	r3, 80009e4 <__aeabi_uldivmod+0x18>
 80009ce:	b94a      	cbnz	r2, 80009e4 <__aeabi_uldivmod+0x18>
 80009d0:	2900      	cmp	r1, #0
 80009d2:	bf08      	it	eq
 80009d4:	2800      	cmpeq	r0, #0
 80009d6:	bf1c      	itt	ne
 80009d8:	f04f 31ff 	movne.w	r1, #4294967295
 80009dc:	f04f 30ff 	movne.w	r0, #4294967295
 80009e0:	f000 b974 	b.w	8000ccc <__aeabi_idiv0>
 80009e4:	f1ad 0c08 	sub.w	ip, sp, #8
 80009e8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80009ec:	f000 f806 	bl	80009fc <__udivmoddi4>
 80009f0:	f8dd e004 	ldr.w	lr, [sp, #4]
 80009f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80009f8:	b004      	add	sp, #16
 80009fa:	4770      	bx	lr

080009fc <__udivmoddi4>:
 80009fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a00:	9d08      	ldr	r5, [sp, #32]
 8000a02:	4604      	mov	r4, r0
 8000a04:	468e      	mov	lr, r1
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	d14d      	bne.n	8000aa6 <__udivmoddi4+0xaa>
 8000a0a:	428a      	cmp	r2, r1
 8000a0c:	4694      	mov	ip, r2
 8000a0e:	d969      	bls.n	8000ae4 <__udivmoddi4+0xe8>
 8000a10:	fab2 f282 	clz	r2, r2
 8000a14:	b152      	cbz	r2, 8000a2c <__udivmoddi4+0x30>
 8000a16:	fa01 f302 	lsl.w	r3, r1, r2
 8000a1a:	f1c2 0120 	rsb	r1, r2, #32
 8000a1e:	fa20 f101 	lsr.w	r1, r0, r1
 8000a22:	fa0c fc02 	lsl.w	ip, ip, r2
 8000a26:	ea41 0e03 	orr.w	lr, r1, r3
 8000a2a:	4094      	lsls	r4, r2
 8000a2c:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000a30:	0c21      	lsrs	r1, r4, #16
 8000a32:	fbbe f6f8 	udiv	r6, lr, r8
 8000a36:	fa1f f78c 	uxth.w	r7, ip
 8000a3a:	fb08 e316 	mls	r3, r8, r6, lr
 8000a3e:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000a42:	fb06 f107 	mul.w	r1, r6, r7
 8000a46:	4299      	cmp	r1, r3
 8000a48:	d90a      	bls.n	8000a60 <__udivmoddi4+0x64>
 8000a4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000a4e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000a52:	f080 811f 	bcs.w	8000c94 <__udivmoddi4+0x298>
 8000a56:	4299      	cmp	r1, r3
 8000a58:	f240 811c 	bls.w	8000c94 <__udivmoddi4+0x298>
 8000a5c:	3e02      	subs	r6, #2
 8000a5e:	4463      	add	r3, ip
 8000a60:	1a5b      	subs	r3, r3, r1
 8000a62:	b2a4      	uxth	r4, r4
 8000a64:	fbb3 f0f8 	udiv	r0, r3, r8
 8000a68:	fb08 3310 	mls	r3, r8, r0, r3
 8000a6c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000a70:	fb00 f707 	mul.w	r7, r0, r7
 8000a74:	42a7      	cmp	r7, r4
 8000a76:	d90a      	bls.n	8000a8e <__udivmoddi4+0x92>
 8000a78:	eb1c 0404 	adds.w	r4, ip, r4
 8000a7c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000a80:	f080 810a 	bcs.w	8000c98 <__udivmoddi4+0x29c>
 8000a84:	42a7      	cmp	r7, r4
 8000a86:	f240 8107 	bls.w	8000c98 <__udivmoddi4+0x29c>
 8000a8a:	4464      	add	r4, ip
 8000a8c:	3802      	subs	r0, #2
 8000a8e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000a92:	1be4      	subs	r4, r4, r7
 8000a94:	2600      	movs	r6, #0
 8000a96:	b11d      	cbz	r5, 8000aa0 <__udivmoddi4+0xa4>
 8000a98:	40d4      	lsrs	r4, r2
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	e9c5 4300 	strd	r4, r3, [r5]
 8000aa0:	4631      	mov	r1, r6
 8000aa2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000aa6:	428b      	cmp	r3, r1
 8000aa8:	d909      	bls.n	8000abe <__udivmoddi4+0xc2>
 8000aaa:	2d00      	cmp	r5, #0
 8000aac:	f000 80ef 	beq.w	8000c8e <__udivmoddi4+0x292>
 8000ab0:	2600      	movs	r6, #0
 8000ab2:	e9c5 0100 	strd	r0, r1, [r5]
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	4631      	mov	r1, r6
 8000aba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000abe:	fab3 f683 	clz	r6, r3
 8000ac2:	2e00      	cmp	r6, #0
 8000ac4:	d14a      	bne.n	8000b5c <__udivmoddi4+0x160>
 8000ac6:	428b      	cmp	r3, r1
 8000ac8:	d302      	bcc.n	8000ad0 <__udivmoddi4+0xd4>
 8000aca:	4282      	cmp	r2, r0
 8000acc:	f200 80f9 	bhi.w	8000cc2 <__udivmoddi4+0x2c6>
 8000ad0:	1a84      	subs	r4, r0, r2
 8000ad2:	eb61 0303 	sbc.w	r3, r1, r3
 8000ad6:	2001      	movs	r0, #1
 8000ad8:	469e      	mov	lr, r3
 8000ada:	2d00      	cmp	r5, #0
 8000adc:	d0e0      	beq.n	8000aa0 <__udivmoddi4+0xa4>
 8000ade:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ae2:	e7dd      	b.n	8000aa0 <__udivmoddi4+0xa4>
 8000ae4:	b902      	cbnz	r2, 8000ae8 <__udivmoddi4+0xec>
 8000ae6:	deff      	udf	#255	; 0xff
 8000ae8:	fab2 f282 	clz	r2, r2
 8000aec:	2a00      	cmp	r2, #0
 8000aee:	f040 8092 	bne.w	8000c16 <__udivmoddi4+0x21a>
 8000af2:	eba1 010c 	sub.w	r1, r1, ip
 8000af6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000afa:	fa1f fe8c 	uxth.w	lr, ip
 8000afe:	2601      	movs	r6, #1
 8000b00:	0c20      	lsrs	r0, r4, #16
 8000b02:	fbb1 f3f7 	udiv	r3, r1, r7
 8000b06:	fb07 1113 	mls	r1, r7, r3, r1
 8000b0a:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000b0e:	fb0e f003 	mul.w	r0, lr, r3
 8000b12:	4288      	cmp	r0, r1
 8000b14:	d908      	bls.n	8000b28 <__udivmoddi4+0x12c>
 8000b16:	eb1c 0101 	adds.w	r1, ip, r1
 8000b1a:	f103 38ff 	add.w	r8, r3, #4294967295
 8000b1e:	d202      	bcs.n	8000b26 <__udivmoddi4+0x12a>
 8000b20:	4288      	cmp	r0, r1
 8000b22:	f200 80cb 	bhi.w	8000cbc <__udivmoddi4+0x2c0>
 8000b26:	4643      	mov	r3, r8
 8000b28:	1a09      	subs	r1, r1, r0
 8000b2a:	b2a4      	uxth	r4, r4
 8000b2c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000b30:	fb07 1110 	mls	r1, r7, r0, r1
 8000b34:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000b38:	fb0e fe00 	mul.w	lr, lr, r0
 8000b3c:	45a6      	cmp	lr, r4
 8000b3e:	d908      	bls.n	8000b52 <__udivmoddi4+0x156>
 8000b40:	eb1c 0404 	adds.w	r4, ip, r4
 8000b44:	f100 31ff 	add.w	r1, r0, #4294967295
 8000b48:	d202      	bcs.n	8000b50 <__udivmoddi4+0x154>
 8000b4a:	45a6      	cmp	lr, r4
 8000b4c:	f200 80bb 	bhi.w	8000cc6 <__udivmoddi4+0x2ca>
 8000b50:	4608      	mov	r0, r1
 8000b52:	eba4 040e 	sub.w	r4, r4, lr
 8000b56:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000b5a:	e79c      	b.n	8000a96 <__udivmoddi4+0x9a>
 8000b5c:	f1c6 0720 	rsb	r7, r6, #32
 8000b60:	40b3      	lsls	r3, r6
 8000b62:	fa22 fc07 	lsr.w	ip, r2, r7
 8000b66:	ea4c 0c03 	orr.w	ip, ip, r3
 8000b6a:	fa20 f407 	lsr.w	r4, r0, r7
 8000b6e:	fa01 f306 	lsl.w	r3, r1, r6
 8000b72:	431c      	orrs	r4, r3
 8000b74:	40f9      	lsrs	r1, r7
 8000b76:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000b7a:	fa00 f306 	lsl.w	r3, r0, r6
 8000b7e:	fbb1 f8f9 	udiv	r8, r1, r9
 8000b82:	0c20      	lsrs	r0, r4, #16
 8000b84:	fa1f fe8c 	uxth.w	lr, ip
 8000b88:	fb09 1118 	mls	r1, r9, r8, r1
 8000b8c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000b90:	fb08 f00e 	mul.w	r0, r8, lr
 8000b94:	4288      	cmp	r0, r1
 8000b96:	fa02 f206 	lsl.w	r2, r2, r6
 8000b9a:	d90b      	bls.n	8000bb4 <__udivmoddi4+0x1b8>
 8000b9c:	eb1c 0101 	adds.w	r1, ip, r1
 8000ba0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ba4:	f080 8088 	bcs.w	8000cb8 <__udivmoddi4+0x2bc>
 8000ba8:	4288      	cmp	r0, r1
 8000baa:	f240 8085 	bls.w	8000cb8 <__udivmoddi4+0x2bc>
 8000bae:	f1a8 0802 	sub.w	r8, r8, #2
 8000bb2:	4461      	add	r1, ip
 8000bb4:	1a09      	subs	r1, r1, r0
 8000bb6:	b2a4      	uxth	r4, r4
 8000bb8:	fbb1 f0f9 	udiv	r0, r1, r9
 8000bbc:	fb09 1110 	mls	r1, r9, r0, r1
 8000bc0:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000bc4:	fb00 fe0e 	mul.w	lr, r0, lr
 8000bc8:	458e      	cmp	lr, r1
 8000bca:	d908      	bls.n	8000bde <__udivmoddi4+0x1e2>
 8000bcc:	eb1c 0101 	adds.w	r1, ip, r1
 8000bd0:	f100 34ff 	add.w	r4, r0, #4294967295
 8000bd4:	d26c      	bcs.n	8000cb0 <__udivmoddi4+0x2b4>
 8000bd6:	458e      	cmp	lr, r1
 8000bd8:	d96a      	bls.n	8000cb0 <__udivmoddi4+0x2b4>
 8000bda:	3802      	subs	r0, #2
 8000bdc:	4461      	add	r1, ip
 8000bde:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000be2:	fba0 9402 	umull	r9, r4, r0, r2
 8000be6:	eba1 010e 	sub.w	r1, r1, lr
 8000bea:	42a1      	cmp	r1, r4
 8000bec:	46c8      	mov	r8, r9
 8000bee:	46a6      	mov	lr, r4
 8000bf0:	d356      	bcc.n	8000ca0 <__udivmoddi4+0x2a4>
 8000bf2:	d053      	beq.n	8000c9c <__udivmoddi4+0x2a0>
 8000bf4:	b15d      	cbz	r5, 8000c0e <__udivmoddi4+0x212>
 8000bf6:	ebb3 0208 	subs.w	r2, r3, r8
 8000bfa:	eb61 010e 	sbc.w	r1, r1, lr
 8000bfe:	fa01 f707 	lsl.w	r7, r1, r7
 8000c02:	fa22 f306 	lsr.w	r3, r2, r6
 8000c06:	40f1      	lsrs	r1, r6
 8000c08:	431f      	orrs	r7, r3
 8000c0a:	e9c5 7100 	strd	r7, r1, [r5]
 8000c0e:	2600      	movs	r6, #0
 8000c10:	4631      	mov	r1, r6
 8000c12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c16:	f1c2 0320 	rsb	r3, r2, #32
 8000c1a:	40d8      	lsrs	r0, r3
 8000c1c:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c20:	fa21 f303 	lsr.w	r3, r1, r3
 8000c24:	4091      	lsls	r1, r2
 8000c26:	4301      	orrs	r1, r0
 8000c28:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c2c:	fa1f fe8c 	uxth.w	lr, ip
 8000c30:	fbb3 f0f7 	udiv	r0, r3, r7
 8000c34:	fb07 3610 	mls	r6, r7, r0, r3
 8000c38:	0c0b      	lsrs	r3, r1, #16
 8000c3a:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000c3e:	fb00 f60e 	mul.w	r6, r0, lr
 8000c42:	429e      	cmp	r6, r3
 8000c44:	fa04 f402 	lsl.w	r4, r4, r2
 8000c48:	d908      	bls.n	8000c5c <__udivmoddi4+0x260>
 8000c4a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c4e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000c52:	d22f      	bcs.n	8000cb4 <__udivmoddi4+0x2b8>
 8000c54:	429e      	cmp	r6, r3
 8000c56:	d92d      	bls.n	8000cb4 <__udivmoddi4+0x2b8>
 8000c58:	3802      	subs	r0, #2
 8000c5a:	4463      	add	r3, ip
 8000c5c:	1b9b      	subs	r3, r3, r6
 8000c5e:	b289      	uxth	r1, r1
 8000c60:	fbb3 f6f7 	udiv	r6, r3, r7
 8000c64:	fb07 3316 	mls	r3, r7, r6, r3
 8000c68:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000c6c:	fb06 f30e 	mul.w	r3, r6, lr
 8000c70:	428b      	cmp	r3, r1
 8000c72:	d908      	bls.n	8000c86 <__udivmoddi4+0x28a>
 8000c74:	eb1c 0101 	adds.w	r1, ip, r1
 8000c78:	f106 38ff 	add.w	r8, r6, #4294967295
 8000c7c:	d216      	bcs.n	8000cac <__udivmoddi4+0x2b0>
 8000c7e:	428b      	cmp	r3, r1
 8000c80:	d914      	bls.n	8000cac <__udivmoddi4+0x2b0>
 8000c82:	3e02      	subs	r6, #2
 8000c84:	4461      	add	r1, ip
 8000c86:	1ac9      	subs	r1, r1, r3
 8000c88:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000c8c:	e738      	b.n	8000b00 <__udivmoddi4+0x104>
 8000c8e:	462e      	mov	r6, r5
 8000c90:	4628      	mov	r0, r5
 8000c92:	e705      	b.n	8000aa0 <__udivmoddi4+0xa4>
 8000c94:	4606      	mov	r6, r0
 8000c96:	e6e3      	b.n	8000a60 <__udivmoddi4+0x64>
 8000c98:	4618      	mov	r0, r3
 8000c9a:	e6f8      	b.n	8000a8e <__udivmoddi4+0x92>
 8000c9c:	454b      	cmp	r3, r9
 8000c9e:	d2a9      	bcs.n	8000bf4 <__udivmoddi4+0x1f8>
 8000ca0:	ebb9 0802 	subs.w	r8, r9, r2
 8000ca4:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ca8:	3801      	subs	r0, #1
 8000caa:	e7a3      	b.n	8000bf4 <__udivmoddi4+0x1f8>
 8000cac:	4646      	mov	r6, r8
 8000cae:	e7ea      	b.n	8000c86 <__udivmoddi4+0x28a>
 8000cb0:	4620      	mov	r0, r4
 8000cb2:	e794      	b.n	8000bde <__udivmoddi4+0x1e2>
 8000cb4:	4640      	mov	r0, r8
 8000cb6:	e7d1      	b.n	8000c5c <__udivmoddi4+0x260>
 8000cb8:	46d0      	mov	r8, sl
 8000cba:	e77b      	b.n	8000bb4 <__udivmoddi4+0x1b8>
 8000cbc:	3b02      	subs	r3, #2
 8000cbe:	4461      	add	r1, ip
 8000cc0:	e732      	b.n	8000b28 <__udivmoddi4+0x12c>
 8000cc2:	4630      	mov	r0, r6
 8000cc4:	e709      	b.n	8000ada <__udivmoddi4+0xde>
 8000cc6:	4464      	add	r4, ip
 8000cc8:	3802      	subs	r0, #2
 8000cca:	e742      	b.n	8000b52 <__udivmoddi4+0x156>

08000ccc <__aeabi_idiv0>:
 8000ccc:	4770      	bx	lr
 8000cce:	bf00      	nop

08000cd0 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000cd0:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000d08 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000cd4:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000cd6:	e003      	b.n	8000ce0 <LoopCopyDataInit>

08000cd8 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000cd8:	4b0c      	ldr	r3, [pc, #48]	; (8000d0c <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000cda:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000cdc:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000cde:	3104      	adds	r1, #4

08000ce0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ce0:	480b      	ldr	r0, [pc, #44]	; (8000d10 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ce2:	4b0c      	ldr	r3, [pc, #48]	; (8000d14 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ce4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000ce6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ce8:	d3f6      	bcc.n	8000cd8 <CopyDataInit>
  ldr  r2, =_sbss
 8000cea:	4a0b      	ldr	r2, [pc, #44]	; (8000d18 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000cec:	e002      	b.n	8000cf4 <LoopFillZerobss>

08000cee <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000cee:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000cf0:	f842 3b04 	str.w	r3, [r2], #4

08000cf4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000cf4:	4b09      	ldr	r3, [pc, #36]	; (8000d1c <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000cf6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000cf8:	d3f9      	bcc.n	8000cee <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000cfa:	f009 f89f 	bl	8009e3c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000cfe:	f025 fcdf 	bl	80266c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000d02:	f001 f857 	bl	8001db4 <main>
  bx  lr    
 8000d06:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000d08:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000d0c:	0802b1ac 	.word	0x0802b1ac
  ldr  r0, =_sdata
 8000d10:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000d14:	20000148 	.word	0x20000148
  ldr  r2, =_sbss
 8000d18:	20000148 	.word	0x20000148
  ldr  r3, = _ebss
 8000d1c:	2000fa18 	.word	0x2000fa18

08000d20 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000d20:	e7fe      	b.n	8000d20 <ADC_IRQHandler>

08000d22 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000d22:	4770      	bx	lr

08000d24 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000d24:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000d26:	f000 febb 	bl	8001aa0 <touchgfx_components_init>
  touchgfx_init();
}
 8000d2a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000d2e:	f000 be43 	b.w	80019b8 <touchgfx_init>

08000d32 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000d32:	f000 beb7 	b.w	8001aa4 <touchgfx_taskEntry>

08000d36 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000d36:	2100      	movs	r1, #0
 8000d38:	4608      	mov	r0, r1
 8000d3a:	f008 bbe7 	b.w	800950c <BSP_PB_Init>

08000d3e <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000d3e:	2000      	movs	r0, #0
 8000d40:	f008 bc1e 	b.w	8009580 <BSP_PB_GetState>

08000d44 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000d44:	6840      	ldr	r0, [r0, #4]
    }
 8000d46:	4770      	bx	lr

08000d48 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000d48:	6041      	str	r1, [r0, #4]
    }
 8000d4a:	4770      	bx	lr

08000d4c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000d4c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000d50:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000d54:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000d58:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000d5c:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000d60:	6813      	ldr	r3, [r2, #0]
 8000d62:	f043 0301 	orr.w	r3, r3, #1
 8000d66:	6013      	str	r3, [r2, #0]
}
 8000d68:	4770      	bx	lr

08000d6a <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000d6a:	1a51      	subs	r1, r2, r1
 8000d6c:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000d70:	fbb1 f0f3 	udiv	r0, r1, r3
 8000d74:	4770      	bx	lr
	...

08000d78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000d78:	4b01      	ldr	r3, [pc, #4]	; (8000d80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000d7a:	6858      	ldr	r0, [r3, #4]
}
 8000d7c:	4770      	bx	lr
 8000d7e:	bf00      	nop
 8000d80:	e0001000 	.word	0xe0001000

08000d84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000d84:	4770      	bx	lr

08000d86 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000d86:	b510      	push	{r4, lr}
 8000d88:	210c      	movs	r1, #12
 8000d8a:	4604      	mov	r4, r0
 8000d8c:	f025 fc20 	bl	80265d0 <_ZdlPvj>
 8000d90:	4620      	mov	r0, r4
 8000d92:	bd10      	pop	{r4, pc}

08000d94 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d94:	6803      	ldr	r3, [r0, #0]
{
 8000d96:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d98:	691b      	ldr	r3, [r3, #16]
{
 8000d9a:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000d9c:	b131      	cbz	r1, 8000dac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000d9e:	4798      	blx	r3
 8000da0:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000da2:	6863      	ldr	r3, [r4, #4]
 8000da4:	1a9b      	subs	r3, r3, r2
 8000da6:	4418      	add	r0, r3
 8000da8:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000daa:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000dac:	4798      	blx	r3
 8000dae:	60a0      	str	r0, [r4, #8]
}
 8000db0:	e7fb      	b.n	8000daa <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000db2 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000db2:	4770      	bx	lr

08000db4 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000db4:	4770      	bx	lr
	...

08000db8 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000db8:	b508      	push	{r3, lr}
    Buttons::init();
 8000dba:	f7ff ffbc 	bl	8000d36 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000dbe:	4b02      	ldr	r3, [pc, #8]	; (8000dc8 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	601a      	str	r2, [r3, #0]
}
 8000dc4:	bd08      	pop	{r3, pc}
 8000dc6:	bf00      	nop
 8000dc8:	20000164 	.word	0x20000164

08000dcc <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000dcc:	b570      	push	{r4, r5, r6, lr}
 8000dce:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000dd0:	f7ff ffb5 	bl	8000d3e <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000dd4:	4a0b      	ldr	r2, [pc, #44]	; (8000e04 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000dd6:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000dd8:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000dda:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000ddc:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000dde:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000de0:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000de4:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000de6:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000de8:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000dea:	d00a      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000dec:	f016 0001 	ands.w	r0, r6, #1
 8000df0:	d007      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000df2:	f011 0001 	ands.w	r0, r1, #1
 8000df6:	d004      	beq.n	8000e02 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000df8:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000dfa:	bf5a      	itte	pl
 8000dfc:	2001      	movpl	r0, #1
 8000dfe:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000e00:	2000      	movmi	r0, #0
}
 8000e02:	bd70      	pop	{r4, r5, r6, pc}
 8000e04:	20000164 	.word	0x20000164

08000e08 <_ZN8touchgfx10KeySamplerD0Ev>:
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	2104      	movs	r1, #4
 8000e0c:	4604      	mov	r4, r0
 8000e0e:	f025 fbdf 	bl	80265d0 <_ZdlPvj>
 8000e12:	4620      	mov	r0, r4
 8000e14:	bd10      	pop	{r4, pc}

08000e16 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000e16:	4770      	bx	lr

08000e18 <_ZN20STM32TouchControllerD0Ev>:
 8000e18:	b510      	push	{r4, lr}
 8000e1a:	2104      	movs	r1, #4
 8000e1c:	4604      	mov	r4, r0
 8000e1e:	f025 fbd7 	bl	80265d0 <_ZdlPvj>
 8000e22:	4620      	mov	r0, r4
 8000e24:	bd10      	pop	{r4, pc}
	...

08000e28 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000e28:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000e2a:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000e2e:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000e32:	f008 ff55 	bl	8009ce0 <BSP_TS_Init>
 8000e36:	4b07      	ldr	r3, [pc, #28]	; (8000e54 <_ZN20STM32TouchController4initEv+0x2c>)
 8000e38:	b910      	cbnz	r0, 8000e40 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000e3a:	2201      	movs	r2, #1
 8000e3c:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000e3e:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8000e40:	781b      	ldrb	r3, [r3, #0]
 8000e42:	2b00      	cmp	r3, #0
 8000e44:	d1fb      	bne.n	8000e3e <_ZN20STM32TouchController4initEv+0x16>
 8000e46:	4b04      	ldr	r3, [pc, #16]	; (8000e58 <_ZN20STM32TouchController4initEv+0x30>)
 8000e48:	4a04      	ldr	r2, [pc, #16]	; (8000e5c <_ZN20STM32TouchController4initEv+0x34>)
 8000e4a:	4805      	ldr	r0, [pc, #20]	; (8000e60 <_ZN20STM32TouchController4initEv+0x38>)
 8000e4c:	2127      	movs	r1, #39	; 0x27
 8000e4e:	f025 fbed 	bl	802662c <__assert_func>
 8000e52:	bf00      	nop
 8000e54:	20000168 	.word	0x20000168
 8000e58:	080278fc 	.word	0x080278fc
 8000e5c:	0802790f 	.word	0x0802790f
 8000e60:	08027939 	.word	0x08027939

08000e64 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000e64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000e66:	4b0b      	ldr	r3, [pc, #44]	; (8000e94 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000e68:	781c      	ldrb	r4, [r3, #0]
{
 8000e6a:	460e      	mov	r6, r1
 8000e6c:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 8000e6e:	b15c      	cbz	r4, 8000e88 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8000e70:	a801      	add	r0, sp, #4
 8000e72:	f008 ff6d 	bl	8009d50 <BSP_TS_GetState>
        if (state.touchDetected)
 8000e76:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000e7a:	b143      	cbz	r3, 8000e8e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000e7c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8000e80:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8000e82:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000e86:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000e88:	4620      	mov	r0, r4
 8000e8a:	b004      	add	sp, #16
 8000e8c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 8000e8e:	461c      	mov	r4, r3
 8000e90:	e7fa      	b.n	8000e88 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8000e92:	bf00      	nop
 8000e94:	20000168 	.word	0x20000168

08000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000e98:	2803      	cmp	r0, #3
 8000e9a:	d823      	bhi.n	8000ee4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 8000e9c:	e8df f000 	tbb	[pc, r0]
 8000ea0:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8000ea4:	4b10      	ldr	r3, [pc, #64]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ea6:	681a      	ldr	r2, [r3, #0]
 8000ea8:	fab2 f282 	clz	r2, r2
 8000eac:	0952      	lsrs	r2, r2, #5
 8000eae:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000eb0:	480e      	ldr	r0, [pc, #56]	; (8000eec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000eb2:	f009 bfe7 	b.w	800ae84 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8000eb6:	4b0c      	ldr	r3, [pc, #48]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000eb8:	685a      	ldr	r2, [r3, #4]
 8000eba:	fab2 f282 	clz	r2, r2
 8000ebe:	0952      	lsrs	r2, r2, #5
 8000ec0:	2140      	movs	r1, #64	; 0x40
 8000ec2:	e7f5      	b.n	8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8000ec4:	4b08      	ldr	r3, [pc, #32]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ec6:	689a      	ldr	r2, [r3, #8]
 8000ec8:	fab2 f282 	clz	r2, r2
 8000ecc:	0952      	lsrs	r2, r2, #5
 8000ece:	2102      	movs	r1, #2
 8000ed0:	e7ee      	b.n	8000eb0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8000ed2:	4b05      	ldr	r3, [pc, #20]	; (8000ee8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8000ed4:	4806      	ldr	r0, [pc, #24]	; (8000ef0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8000ed6:	68da      	ldr	r2, [r3, #12]
 8000ed8:	fab2 f282 	clz	r2, r2
 8000edc:	0952      	lsrs	r2, r2, #5
 8000ede:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000ee2:	e7e6      	b.n	8000eb2 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop
 8000ee8:	2000016c 	.word	0x2000016c
 8000eec:	40020000 	.word	0x40020000
 8000ef0:	40021800 	.word	0x40021800

08000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8000ef4:	2803      	cmp	r0, #3
 8000ef6:	d823      	bhi.n	8000f40 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 8000ef8:	e8df f000 	tbb	[pc, r0]
 8000efc:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000f00:	4b10      	ldr	r3, [pc, #64]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f02:	681a      	ldr	r2, [r3, #0]
 8000f04:	3a00      	subs	r2, #0
 8000f06:	bf18      	it	ne
 8000f08:	2201      	movne	r2, #1
 8000f0a:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000f0c:	480e      	ldr	r0, [pc, #56]	; (8000f48 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000f0e:	f009 bfb9 	b.w	800ae84 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8000f12:	4b0c      	ldr	r3, [pc, #48]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f14:	685a      	ldr	r2, [r3, #4]
 8000f16:	3a00      	subs	r2, #0
 8000f18:	bf18      	it	ne
 8000f1a:	2201      	movne	r2, #1
 8000f1c:	2140      	movs	r1, #64	; 0x40
 8000f1e:	e7f5      	b.n	8000f0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8000f20:	4b08      	ldr	r3, [pc, #32]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f22:	689a      	ldr	r2, [r3, #8]
 8000f24:	3a00      	subs	r2, #0
 8000f26:	bf18      	it	ne
 8000f28:	2201      	movne	r2, #1
 8000f2a:	2102      	movs	r1, #2
 8000f2c:	e7ee      	b.n	8000f0c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 8000f2e:	4b05      	ldr	r3, [pc, #20]	; (8000f44 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 8000f30:	4806      	ldr	r0, [pc, #24]	; (8000f4c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 8000f32:	68da      	ldr	r2, [r3, #12]
 8000f34:	3a00      	subs	r2, #0
 8000f36:	bf18      	it	ne
 8000f38:	2201      	movne	r2, #1
 8000f3a:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f3e:	e7e6      	b.n	8000f0e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8000f40:	4770      	bx	lr
 8000f42:	bf00      	nop
 8000f44:	2000016c 	.word	0x2000016c
 8000f48:	40020000 	.word	0x40020000
 8000f4c:	40021800 	.word	0x40021800

08000f50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8000f50:	2803      	cmp	r0, #3
 8000f52:	d80f      	bhi.n	8000f74 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8000f54:	e8df f000 	tbb	[pc, r0]
 8000f58:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f5c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f5e:	4806      	ldr	r0, [pc, #24]	; (8000f78 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f60:	f009 bf95 	b.w	800ae8e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f64:	2140      	movs	r1, #64	; 0x40
 8000f66:	e7fa      	b.n	8000f5e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f68:	2102      	movs	r1, #2
 8000f6a:	e7f8      	b.n	8000f5e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f6c:	4803      	ldr	r0, [pc, #12]	; (8000f7c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 8000f6e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000f72:	e7f5      	b.n	8000f60 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop
 8000f78:	40020000 	.word	0x40020000
 8000f7c:	40021800 	.word	0x40021800

08000f80 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8000f80:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8000f82:	2803      	cmp	r0, #3
 8000f84:	d813      	bhi.n	8000fae <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8000f86:	e8df f000 	tbb	[pc, r0]
 8000f8a:	0a02      	.short	0x0a02
 8000f8c:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8000f8e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000f90:	4808      	ldr	r0, [pc, #32]	; (8000fb4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000f92:	f009 ff71 	bl	800ae78 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8000f96:	1e43      	subs	r3, r0, #1
 8000f98:	4258      	negs	r0, r3
 8000f9a:	4158      	adcs	r0, r3
 8000f9c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000f9e:	2140      	movs	r1, #64	; 0x40
 8000fa0:	e7f6      	b.n	8000f90 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8000fa2:	2102      	movs	r1, #2
 8000fa4:	e7f4      	b.n	8000f90 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8000fa6:	4804      	ldr	r0, [pc, #16]	; (8000fb8 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8000fa8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000fac:	e7f1      	b.n	8000f92 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 8000fae:	2000      	movs	r0, #0
 8000fb0:	e7f1      	b.n	8000f96 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000fb2:	bf00      	nop
 8000fb4:	40020000 	.word	0x40020000
 8000fb8:	40021800 	.word	0x40021800

08000fbc <_ZN8touchgfx4GPIO4initEv>:
{
 8000fbc:	b570      	push	{r4, r5, r6, lr}
 8000fbe:	4d08      	ldr	r5, [pc, #32]	; (8000fe0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000fc0:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000fc2:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000fc4:	b2e0      	uxtb	r0, r4
 8000fc6:	f7ff ffdb 	bl	8000f80 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 8000fca:	b118      	cbz	r0, 8000fd4 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000fcc:	682b      	ldr	r3, [r5, #0]
 8000fce:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000fd0:	bf18      	it	ne
 8000fd2:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000fd4:	3401      	adds	r4, #1
 8000fd6:	2c05      	cmp	r4, #5
 8000fd8:	f105 0504 	add.w	r5, r5, #4
 8000fdc:	d1f2      	bne.n	8000fc4 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000fde:	bd70      	pop	{r4, r5, r6, pc}
 8000fe0:	2000016c 	.word	0x2000016c

08000fe4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000fe4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000fe6:	f880 1078 	strb.w	r1, [r0, #120]	; 0x78
        displayOrientationChangeRequested = true;
 8000fea:	f880 3079 	strb.w	r3, [r0, #121]	; 0x79
    }
 8000fee:	4770      	bx	lr

08000ff0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000ff0:	2000      	movs	r0, #0
 8000ff2:	4770      	bx	lr

08000ff4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000ff4:	4b03      	ldr	r3, [pc, #12]	; (8001004 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 8000ff6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000ff8:	3900      	subs	r1, #0
 8000ffa:	bf18      	it	ne
 8000ffc:	2101      	movne	r1, #1
 8000ffe:	7019      	strb	r1, [r3, #0]
    }
 8001000:	4770      	bx	lr
 8001002:	bf00      	nop
 8001004:	2000ef1b 	.word	0x2000ef1b

08001008 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001008:	2000      	movs	r0, #0
 800100a:	4770      	bx	lr

0800100c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800100c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800100e:	b10b      	cbz	r3, 8001014 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001010:	4608      	mov	r0, r1
 8001012:	4718      	bx	r3
        }
    }
 8001014:	4770      	bx	lr

08001016 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8001016:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800101a:	4770      	bx	lr

0800101c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800101c:	6840      	ldr	r0, [r0, #4]
 800101e:	6803      	ldr	r3, [r0, #0]
 8001020:	699b      	ldr	r3, [r3, #24]
 8001022:	4718      	bx	r3

08001024 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8001024:	4770      	bx	lr

08001026 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8001026:	4770      	bx	lr

08001028 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8001028:	4b01      	ldr	r3, [pc, #4]	; (8001030 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800102a:	6818      	ldr	r0, [r3, #0]
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	2000017c 	.word	0x2000017c

08001034 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001034:	4770      	bx	lr
	...

08001038 <_ZN11TouchGFXHAL10initializeEv>:
{
 8001038:	b538      	push	{r3, r4, r5, lr}
 800103a:	4604      	mov	r4, r0
    mcuInstr.init();
 800103c:	4d09      	ldr	r5, [pc, #36]	; (8001064 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800103e:	f7ff ffbd 	bl	8000fbc <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8001042:	4620      	mov	r0, r4
 8001044:	f000 fdfa 	bl	8001c3c <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8001048:	2300      	movs	r3, #0
 800104a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800104e:	4628      	mov	r0, r5
 8001050:	f7ff fe7c 	bl	8000d4c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001054:	2301      	movs	r3, #1
 8001056:	f884 3070 	strb.w	r3, [r4, #112]	; 0x70
        buttonController = btnCtrl;
 800105a:	4b03      	ldr	r3, [pc, #12]	; (8001068 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800105c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800105e:	6163      	str	r3, [r4, #20]
}
 8001060:	bd38      	pop	{r3, r4, r5, pc}
 8001062:	bf00      	nop
 8001064:	20000188 	.word	0x20000188
 8001068:	20000184 	.word	0x20000184

0800106c <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 800106c:	6803      	ldr	r3, [r0, #0]
{
 800106e:	4604      	mov	r4, r0
 8001070:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8001072:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001076:	4798      	blx	r3
    enableInterrupts();
 8001078:	6823      	ldr	r3, [r4, #0]
 800107a:	4620      	mov	r0, r4
 800107c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800107e:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001080:	f000 fa2e 	bl	80014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001084:	6823      	ldr	r3, [r4, #0]
 8001086:	4620      	mov	r0, r4
 8001088:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800108a:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
 800108c:	2100      	movs	r1, #0
 800108e:	4806      	ldr	r0, [pc, #24]	; (80010a8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8001090:	9100      	str	r1, [sp, #0]
 8001092:	2329      	movs	r3, #41	; 0x29
 8001094:	2215      	movs	r2, #21
 8001096:	f009 fcde 	bl	800aa56 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800109a:	f000 fa21 	bl	80014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800109e:	6823      	ldr	r3, [r4, #0]
 80010a0:	4620      	mov	r0, r4
 80010a2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80010a4:	4798      	blx	r3
    for (;;)
 80010a6:	e7f8      	b.n	800109a <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 80010a8:	20005b78 	.word	0x20005b78

080010ac <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80010ac:	b510      	push	{r4, lr}
 80010ae:	4604      	mov	r4, r0
        swapFrameBuffers();
 80010b0:	f00f fb88 	bl	80107c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	4620      	mov	r0, r4
 80010b8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80010bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80010c0:	4718      	bx	r3

080010c2 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80010c2:	f000 bdba 	b.w	8001c3a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080010c6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80010c6:	f000 bdd0 	b.w	8001c6a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080010ca <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 80010ca:	f000 bdd0 	b.w	8001c6e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

080010ce <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80010ce:	f000 bda3 	b.w	8001c18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080010d2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80010d2:	f000 bda9 	b.w	8001c28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080010d6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80010d6:	f000 bdd3 	b.w	8001c80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

080010dc <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 80010dc:	4b02      	ldr	r3, [pc, #8]	; (80010e8 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 80010de:	2200      	movs	r2, #0
 80010e0:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80010e2:	f00e be17 	b.w	800fd14 <_ZN8touchgfx3HAL10beginFrameEv>
 80010e6:	bf00      	nop
 80010e8:	20000014 	.word	0x20000014

080010ec <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80010ec:	b510      	push	{r4, lr}
 80010ee:	4604      	mov	r4, r0
    HAL::endFrame();
 80010f0:	f00e fe1c 	bl	800fd2c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 80010f4:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80010f8:	b113      	cbz	r3, 8001100 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80010fa:	4b02      	ldr	r3, [pc, #8]	; (8001104 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80010fc:	2201      	movs	r2, #1
 80010fe:	701a      	strb	r2, [r3, #0]
    }
}
 8001100:	bd10      	pop	{r4, pc}
 8001102:	bf00      	nop
 8001104:	20000014 	.word	0x20000014

08001108 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8001108:	f00e bdc8 	b.w	800fc9c <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800110c <_ZN11TouchGFXHALD0Ev>:
 800110c:	b510      	push	{r4, lr}
 800110e:	217c      	movs	r1, #124	; 0x7c
 8001110:	4604      	mov	r4, r0
 8001112:	f025 fa5d 	bl	80265d0 <_ZdlPvj>
 8001116:	4620      	mov	r0, r4
 8001118:	bd10      	pop	{r4, pc}

0800111a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800111a:	f890 307a 	ldrb.w	r3, [r0, #122]	; 0x7a
 800111e:	b11b      	cbz	r3, 8001128 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8001120:	6840      	ldr	r0, [r0, #4]
 8001122:	6803      	ldr	r3, [r0, #0]
 8001124:	681b      	ldr	r3, [r3, #0]
 8001126:	4718      	bx	r3
    }
 8001128:	4618      	mov	r0, r3
 800112a:	4770      	bx	lr

0800112c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800112c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800112e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8001132:	f890 4078 	ldrb.w	r4, [r0, #120]	; 0x78
            if (DISPLAY_ROTATION == rotate0)
 8001136:	4b0c      	ldr	r3, [pc, #48]	; (8001168 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001138:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800113a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800113c:	d009      	beq.n	8001152 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800113e:	b93a      	cbnz	r2, 8001150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001140:	4a0a      	ldr	r2, [pc, #40]	; (800116c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001142:	490b      	ldr	r1, [pc, #44]	; (8001170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001144:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001146:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001148:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800114a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800114c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800114e:	701a      	strb	r2, [r3, #0]
    }
 8001150:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001152:	2a00      	cmp	r2, #0
 8001154:	d0fc      	beq.n	8001150 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001156:	4a05      	ldr	r2, [pc, #20]	; (800116c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001158:	4905      	ldr	r1, [pc, #20]	; (8001170 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800115a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800115c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800115e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001160:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001162:	2200      	movs	r2, #0
 8001164:	e7f3      	b.n	800114e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001166:	bf00      	nop
 8001168:	2000ef14 	.word	0x2000ef14
 800116c:	2000ef10 	.word	0x2000ef10
 8001170:	2000ef12 	.word	0x2000ef12

08001174 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001174:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001176:	4b09      	ldr	r3, [pc, #36]	; (800119c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001178:	881b      	ldrh	r3, [r3, #0]
 800117a:	428b      	cmp	r3, r1
 800117c:	d803      	bhi.n	8001186 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800117e:	4b08      	ldr	r3, [pc, #32]	; (80011a0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001180:	881b      	ldrh	r3, [r3, #0]
 8001182:	4293      	cmp	r3, r2
 8001184:	d905      	bls.n	8001192 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001186:	4b07      	ldr	r3, [pc, #28]	; (80011a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001188:	4a07      	ldr	r2, [pc, #28]	; (80011a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800118a:	4808      	ldr	r0, [pc, #32]	; (80011ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800118c:	219e      	movs	r1, #158	; 0x9e
 800118e:	f025 fa4d 	bl	802662c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001192:	4b07      	ldr	r3, [pc, #28]	; (80011b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001194:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001196:	4b07      	ldr	r3, [pc, #28]	; (80011b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001198:	801a      	strh	r2, [r3, #0]
    }
 800119a:	bd08      	pop	{r3, pc}
 800119c:	2000ef10 	.word	0x2000ef10
 80011a0:	2000ef12 	.word	0x2000ef12
 80011a4:	080279a4 	.word	0x080279a4
 80011a8:	08027a07 	.word	0x08027a07
 80011ac:	08027a4a 	.word	0x08027a4a
 80011b0:	2000ef16 	.word	0x2000ef16
 80011b4:	2000ef18 	.word	0x2000ef18

080011b8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80011b8:	b570      	push	{r4, r5, r6, lr}
 80011ba:	460d      	mov	r5, r1
 80011bc:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 80011be:	4b0b      	ldr	r3, [pc, #44]	; (80011ec <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80011c0:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80011c2:	b935      	cbnz	r5, 80011d2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 80011c4:	4b0a      	ldr	r3, [pc, #40]	; (80011f0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80011c6:	4a0b      	ldr	r2, [pc, #44]	; (80011f4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80011c8:	480b      	ldr	r0, [pc, #44]	; (80011f8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80011ca:	f240 21d2 	movw	r1, #722	; 0x2d2
 80011ce:	f025 fa2d 	bl	802662c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80011d2:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80011d6:	4b09      	ldr	r3, [pc, #36]	; (80011fc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 80011d8:	3a00      	subs	r2, #0
 80011da:	bf18      	it	ne
 80011dc:	2201      	movne	r2, #1
 80011de:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80011e0:	6803      	ldr	r3, [r0, #0]
}
 80011e2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80011e6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80011ea:	4718      	bx	r3
 80011ec:	2000017c 	.word	0x2000017c
 80011f0:	08027a8f 	.word	0x08027a8f
 80011f4:	08027ac7 	.word	0x08027ac7
 80011f8:	08027a4a 	.word	0x08027a4a
 80011fc:	2000ef1a 	.word	0x2000ef1a

08001200 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8001200:	2801      	cmp	r0, #1
    {
 8001202:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8001204:	d80a      	bhi.n	800121c <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8001206:	784b      	ldrb	r3, [r1, #1]
 8001208:	9300      	str	r3, [sp, #0]
 800120a:	780b      	ldrb	r3, [r1, #0]
 800120c:	4808      	ldr	r0, [pc, #32]	; (8001230 <DSI_IO_WriteCmd+0x30>)
 800120e:	2215      	movs	r2, #21
 8001210:	2100      	movs	r1, #0
 8001212:	f009 fc20 	bl	800aa56 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8001216:	b003      	add	sp, #12
 8001218:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 800121c:	9101      	str	r1, [sp, #4]
 800121e:	5c0b      	ldrb	r3, [r1, r0]
 8001220:	9300      	str	r3, [sp, #0]
 8001222:	2239      	movs	r2, #57	; 0x39
 8001224:	4603      	mov	r3, r0
 8001226:	2100      	movs	r1, #0
 8001228:	4801      	ldr	r0, [pc, #4]	; (8001230 <DSI_IO_WriteCmd+0x30>)
 800122a:	f009 fc25 	bl	800aa78 <HAL_DSI_LongWrite>
    }
 800122e:	e7f2      	b.n	8001216 <DSI_IO_WriteCmd+0x16>
 8001230:	20005b78 	.word	0x20005b78

08001234 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8001234:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8001236:	4a0b      	ldr	r2, [pc, #44]	; (8001264 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001238:	4c0b      	ldr	r4, [pc, #44]	; (8001268 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 800123a:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 800123c:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 800123e:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8001240:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001242:	9201      	str	r2, [sp, #4]
 8001244:	2244      	movs	r2, #68	; 0x44
 8001246:	9200      	str	r2, [sp, #0]
 8001248:	2100      	movs	r1, #0
 800124a:	2239      	movs	r2, #57	; 0x39
 800124c:	4620      	mov	r0, r4
 800124e:	f009 fc13 	bl	800aa78 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8001252:	2100      	movs	r1, #0
 8001254:	9100      	str	r1, [sp, #0]
 8001256:	2335      	movs	r3, #53	; 0x35
 8001258:	462a      	mov	r2, r5
 800125a:	4620      	mov	r0, r4
 800125c:	f009 fbfb 	bl	800aa56 <HAL_DSI_ShortWrite>
    }
 8001260:	b003      	add	sp, #12
 8001262:	bd30      	pop	{r4, r5, pc}
 8001264:	20000194 	.word	0x20000194
 8001268:	20005b78 	.word	0x20005b78

0800126c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 800126c:	b507      	push	{r0, r1, r2, lr}
 800126e:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8001270:	f7ff ffe0 	bl	8001234 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001274:	9801      	ldr	r0, [sp, #4]
}
 8001276:	b003      	add	sp, #12
 8001278:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800127c:	f000 bcdc 	b.w	8001c38 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001280 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8001280:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pCols[idx]);
 8001282:	4b07      	ldr	r3, [pc, #28]	; (80012a0 <LCD_SetUpdateRegion+0x20>)
 8001284:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8001288:	232a      	movs	r3, #42	; 0x2a
 800128a:	9001      	str	r0, [sp, #4]
 800128c:	9300      	str	r3, [sp, #0]
 800128e:	2239      	movs	r2, #57	; 0x39
 8001290:	2304      	movs	r3, #4
 8001292:	2100      	movs	r1, #0
 8001294:	4803      	ldr	r0, [pc, #12]	; (80012a4 <LCD_SetUpdateRegion+0x24>)
 8001296:	f009 fbef 	bl	800aa78 <HAL_DSI_LongWrite>
    }
 800129a:	b003      	add	sp, #12
 800129c:	f85d fb04 	ldr.w	pc, [sp], #4
 80012a0:	20000004 	.word	0x20000004
 80012a4:	20005b78 	.word	0x20005b78

080012a8 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 80012a8:	b570      	push	{r4, r5, r6, lr}
        return instance;
 80012aa:	4d15      	ldr	r5, [pc, #84]	; (8001300 <HAL_DSI_TearingEffectCallback+0x58>)
 80012ac:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 80012ae:	2000      	movs	r0, #0
 80012b0:	f7ff fdf2 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80012b4:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 80012b6:	f892 306a 	ldrb.w	r3, [r2, #106]	; 0x6a
 80012ba:	3301      	adds	r3, #1
 80012bc:	f882 306a 	strb.w	r3, [r2, #106]	; 0x6a
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 80012c0:	f000 f902 	bl	80014c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 80012c4:	4b0f      	ldr	r3, [pc, #60]	; (8001304 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 80012c6:	6828      	ldr	r0, [r5, #0]
 80012c8:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 80012ca:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 80012cc:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 80012d0:	b123      	cbz	r3, 80012dc <HAL_DSI_TearingEffectCallback+0x34>
 80012d2:	4d0d      	ldr	r5, [pc, #52]	; (8001308 <HAL_DSI_TearingEffectCallback+0x60>)
 80012d4:	782b      	ldrb	r3, [r5, #0]
 80012d6:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 80012da:	b123      	cbz	r3, 80012e6 <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 80012dc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80012e0:	2000      	movs	r0, #0
 80012e2:	f7ff be07 	b.w	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 80012e6:	f00f fa6d 	bl	80107c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 80012ea:	4b08      	ldr	r3, [pc, #32]	; (800130c <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 80012ec:	4630      	mov	r0, r6
            updateRegion = 0;
 80012ee:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 80012f0:	f7ff ffc6 	bl	8001280 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 80012f4:	4620      	mov	r0, r4
 80012f6:	f009 fb9e 	bl	800aa36 <HAL_DSI_Refresh>
            displayRefreshing = true;
 80012fa:	2301      	movs	r3, #1
 80012fc:	702b      	strb	r3, [r5, #0]
    }
 80012fe:	bd70      	pop	{r4, r5, r6, pc}
 8001300:	2000ef1c 	.word	0x2000ef1c
 8001304:	20000014 	.word	0x20000014
 8001308:	20000196 	.word	0x20000196
 800130c:	20000180 	.word	0x20000180

08001310 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8001310:	4b33      	ldr	r3, [pc, #204]	; (80013e0 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8001312:	681a      	ldr	r2, [r3, #0]
 8001314:	3201      	adds	r2, #1
    {
 8001316:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 8001318:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 800131a:	4b32      	ldr	r3, [pc, #200]	; (80013e4 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 800131c:	4c32      	ldr	r4, [pc, #200]	; (80013e8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 800131e:	6819      	ldr	r1, [r3, #0]
 8001320:	4b32      	ldr	r3, [pc, #200]	; (80013ec <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 8001322:	2a03      	cmp	r2, #3
    {
 8001324:	4605      	mov	r5, r0
        if (updateRegion < 4)
 8001326:	dc2e      	bgt.n	8001386 <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001328:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 800132c:	f020 0008 	bic.w	r0, r0, #8
 8001330:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8001334:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8001338:	fb00 1102 	mla	r1, r0, r2, r1
 800133c:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8001340:	bf0c      	ite	eq
 8001342:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8001344:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8001346:	3302      	adds	r3, #2
 8001348:	4928      	ldr	r1, [pc, #160]	; (80013ec <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800134a:	041b      	lsls	r3, r3, #16
 800134c:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8001350:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8001352:	4b27      	ldr	r3, [pc, #156]	; (80013f0 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8001354:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8001356:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 800135a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 800135e:	4b25      	ldr	r3, [pc, #148]	; (80013f4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001360:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001364:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8001366:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001368:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 800136a:	f7ff ff89 	bl	8001280 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 800136e:	4a1e      	ldr	r2, [pc, #120]	; (80013e8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8001370:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8001374:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8001378:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 800137a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 800137e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8001382:	f009 bb58 	b.w	800aa36 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001386:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 800138a:	f022 0208 	bic.w	r2, r2, #8
 800138e:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001392:	4a19      	ldr	r2, [pc, #100]	; (80013f8 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8001394:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001398:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 800139a:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 800139e:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 80013a0:	4a16      	ldr	r2, [pc, #88]	; (80013fc <HAL_DSI_EndOfRefreshCallback+0xec>)
 80013a2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 80013a6:	4a13      	ldr	r2, [pc, #76]	; (80013f4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 80013a8:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 80013ac:	2201      	movs	r2, #1
 80013ae:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 80013b0:	2000      	movs	r0, #0
 80013b2:	f7ff ff65 	bl	8001280 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 80013b6:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 80013ba:	f043 0308 	orr.w	r3, r3, #8
 80013be:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 80013c2:	2000      	movs	r0, #0
 80013c4:	f7ff fd96 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 80013c8:	4b0d      	ldr	r3, [pc, #52]	; (8001400 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 80013ca:	2200      	movs	r2, #0
 80013cc:	701a      	strb	r2, [r3, #0]
        return instance;
 80013ce:	4b0d      	ldr	r3, [pc, #52]	; (8001404 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 80013d0:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 80013d2:	b120      	cbz	r0, 80013de <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 80013d4:	6803      	ldr	r3, [r0, #0]
    }
 80013d6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013da:	6a1b      	ldr	r3, [r3, #32]
 80013dc:	4718      	bx	r3
 80013de:	bd70      	pop	{r4, r5, r6, pc}
 80013e0:	20000180 	.word	0x20000180
 80013e4:	2000017c 	.word	0x2000017c
 80013e8:	40016c00 	.word	0x40016c00
 80013ec:	40016800 	.word	0x40016800
 80013f0:	00ca01e3 	.word	0x00ca01e3
 80013f4:	06800193 	.word	0x06800193
 80013f8:	00ca01e2 	.word	0x00ca01e2
 80013fc:	00ca0003 	.word	0x00ca0003
 8001400:	20000196 	.word	0x20000196
 8001404:	2000ef1c 	.word	0x2000ef1c

08001408 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8001408:	b508      	push	{r3, lr}
        return instance;
 800140a:	4b04      	ldr	r3, [pc, #16]	; (800141c <IdleTaskHook+0x14>)
 800140c:	4601      	mov	r1, r0
 800140e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8001410:	b101      	cbz	r1, 8001414 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8001412:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8001414:	f00f f9f0 	bl	80107f8 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8001418:	2001      	movs	r0, #1
 800141a:	bd08      	pop	{r3, pc}
 800141c:	2000ef1c 	.word	0x2000ef1c

08001420 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8001420:	4b05      	ldr	r3, [pc, #20]	; (8001438 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8001422:	4806      	ldr	r0, [pc, #24]	; (800143c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8001424:	2200      	movs	r2, #0
 8001426:	605a      	str	r2, [r3, #4]
 8001428:	609a      	str	r2, [r3, #8]
 800142a:	4a05      	ldr	r2, [pc, #20]	; (8001440 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 800142c:	601a      	str	r2, [r3, #0]
 800142e:	4b05      	ldr	r3, [pc, #20]	; (8001444 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8001430:	6003      	str	r3, [r0, #0]
        init();
 8001432:	f7ff bcc1 	b.w	8000db8 <_ZN8touchgfx10KeySampler4initEv>
 8001436:	bf00      	nop
 8001438:	20000188 	.word	0x20000188
 800143c:	20000184 	.word	0x20000184
 8001440:	080278c0 	.word	0x080278c0
 8001444:	080278e8 	.word	0x080278e8

08001448 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001448:	2101      	movs	r1, #1
{
 800144a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800144c:	2200      	movs	r2, #0
 800144e:	4608      	mov	r0, r1
 8001450:	f00b fdf5 	bl	800d03e <osSemaphoreNew>
 8001454:	4b0a      	ldr	r3, [pc, #40]	; (8001480 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001456:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001458:	b928      	cbnz	r0, 8001466 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800145a:	4b0a      	ldr	r3, [pc, #40]	; (8001484 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800145c:	4a0a      	ldr	r2, [pc, #40]	; (8001488 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800145e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001460:	480a      	ldr	r0, [pc, #40]	; (800148c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001462:	f025 f8e3 	bl	802662c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001466:	2200      	movs	r2, #0
 8001468:	2104      	movs	r1, #4
 800146a:	2001      	movs	r0, #1
 800146c:	f00b fe84 	bl	800d178 <osMessageQueueNew>
 8001470:	4b07      	ldr	r3, [pc, #28]	; (8001490 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001472:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001474:	b918      	cbnz	r0, 800147e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001476:	4b07      	ldr	r3, [pc, #28]	; (8001494 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001478:	4a03      	ldr	r2, [pc, #12]	; (8001488 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800147a:	212c      	movs	r1, #44	; 0x2c
 800147c:	e7f0      	b.n	8001460 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800147e:	bd08      	pop	{r3, pc}
 8001480:	2000019c 	.word	0x2000019c
 8001484:	08027bf0 	.word	0x08027bf0
 8001488:	08027c39 	.word	0x08027c39
 800148c:	08027c68 	.word	0x08027c68
 8001490:	20000198 	.word	0x20000198
 8001494:	08027cbb 	.word	0x08027cbb

08001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001498:	4b02      	ldr	r3, [pc, #8]	; (80014a4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800149a:	f04f 31ff 	mov.w	r1, #4294967295
 800149e:	6818      	ldr	r0, [r3, #0]
 80014a0:	f00b be17 	b.w	800d0d2 <osSemaphoreAcquire>
 80014a4:	2000019c 	.word	0x2000019c

080014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 80014a8:	4b01      	ldr	r3, [pc, #4]	; (80014b0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 80014aa:	6818      	ldr	r0, [r3, #0]
 80014ac:	f00b be3c 	b.w	800d128 <osSemaphoreRelease>
 80014b0:	2000019c 	.word	0x2000019c

080014b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 80014b4:	4b02      	ldr	r3, [pc, #8]	; (80014c0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 80014b6:	2100      	movs	r1, #0
 80014b8:	6818      	ldr	r0, [r3, #0]
 80014ba:	f00b be0a 	b.w	800d0d2 <osSemaphoreAcquire>
 80014be:	bf00      	nop
 80014c0:	2000019c 	.word	0x2000019c

080014c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 80014c4:	f7ff bff0 	b.w	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

080014c8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 80014c8:	4803      	ldr	r0, [pc, #12]	; (80014d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 80014ca:	4904      	ldr	r1, [pc, #16]	; (80014dc <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 80014cc:	6800      	ldr	r0, [r0, #0]
 80014ce:	2300      	movs	r3, #0
 80014d0:	461a      	mov	r2, r3
 80014d2:	f00b be8c 	b.w	800d1ee <osMessageQueuePut>
 80014d6:	bf00      	nop
 80014d8:	20000198 	.word	0x20000198
 80014dc:	20000018 	.word	0x20000018

080014e0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80014e0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80014e2:	4c08      	ldr	r4, [pc, #32]	; (8001504 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80014e4:	2300      	movs	r3, #0
 80014e6:	461a      	mov	r2, r3
 80014e8:	a901      	add	r1, sp, #4
 80014ea:	6820      	ldr	r0, [r4, #0]
 80014ec:	f00b feaf 	bl	800d24e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80014f0:	6820      	ldr	r0, [r4, #0]
 80014f2:	f04f 33ff 	mov.w	r3, #4294967295
 80014f6:	2200      	movs	r2, #0
 80014f8:	a901      	add	r1, sp, #4
 80014fa:	f00b fea8 	bl	800d24e <osMessageQueueGet>
}
 80014fe:	b002      	add	sp, #8
 8001500:	bd10      	pop	{r4, pc}
 8001502:	bf00      	nop
 8001504:	20000198 	.word	0x20000198

08001508 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001508:	6803      	ldr	r3, [r0, #0]
 800150a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800150c:	4718      	bx	r3

0800150e <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 800150e:	2001      	movs	r0, #1
 8001510:	4770      	bx	lr

08001512 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8001512:	6803      	ldr	r3, [r0, #0]
 8001514:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001516:	4718      	bx	r3

08001518 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001518:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800151a:	2300      	movs	r3, #0
 800151c:	9301      	str	r3, [sp, #4]
 800151e:	4b0d      	ldr	r3, [pc, #52]	; (8001554 <_ZN8STM32DMA10initializeEv+0x3c>)
 8001520:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001522:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001526:	631a      	str	r2, [r3, #48]	; 0x30
 8001528:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800152a:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 800152e:	9201      	str	r2, [sp, #4]
 8001530:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8001532:	691a      	ldr	r2, [r3, #16]
 8001534:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8001538:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800153a:	691a      	ldr	r2, [r3, #16]
 800153c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001540:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001542:	4b05      	ldr	r3, [pc, #20]	; (8001558 <_ZN8STM32DMA10initializeEv+0x40>)
 8001544:	4a05      	ldr	r2, [pc, #20]	; (800155c <_ZN8STM32DMA10initializeEv+0x44>)
 8001546:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001548:	4b05      	ldr	r3, [pc, #20]	; (8001560 <_ZN8STM32DMA10initializeEv+0x48>)
 800154a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800154e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001550:	b002      	add	sp, #8
 8001552:	4770      	bx	lr
 8001554:	40023800 	.word	0x40023800
 8001558:	20005b38 	.word	0x20005b38
 800155c:	080015a5 	.word	0x080015a5
 8001560:	e000e100 	.word	0xe000e100

08001564 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001564:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001568:	4770      	bx	lr
	...

0800156c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800156c:	4b05      	ldr	r3, [pc, #20]	; (8001584 <_ZN8STM32DMAD1Ev+0x18>)
 800156e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001570:	4b05      	ldr	r3, [pc, #20]	; (8001588 <_ZN8STM32DMAD1Ev+0x1c>)
 8001572:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001576:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800157a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800157e:	f3bf 8f6f 	isb	sy
}
 8001582:	4770      	bx	lr
 8001584:	08027e60 	.word	0x08027e60
 8001588:	e000e100 	.word	0xe000e100

0800158c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800158c:	b510      	push	{r4, lr}
 800158e:	4604      	mov	r4, r0
}
 8001590:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001594:	f7ff ffea 	bl	800156c <_ZN8STM32DMAD1Ev>
 8001598:	4620      	mov	r0, r4
 800159a:	f025 f819 	bl	80265d0 <_ZdlPvj>
 800159e:	4620      	mov	r0, r4
 80015a0:	bd10      	pop	{r4, pc}
	...

080015a4 <DMA2D_XferCpltCallback>:
 80015a4:	4b02      	ldr	r3, [pc, #8]	; (80015b0 <DMA2D_XferCpltCallback+0xc>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 80015aa:	6803      	ldr	r3, [r0, #0]
 80015ac:	695b      	ldr	r3, [r3, #20]
 80015ae:	4718      	bx	r3
 80015b0:	2000ef1c 	.word	0x2000ef1c

080015b4 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 80015b4:	b570      	push	{r4, r5, r6, lr}
 80015b6:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 80015b8:	4625      	mov	r5, r4
 80015ba:	4b0a      	ldr	r3, [pc, #40]	; (80015e4 <_ZN8STM32DMAC1Ev+0x30>)
 80015bc:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 80015be:	2600      	movs	r6, #0
 80015c0:	6060      	str	r0, [r4, #4]
 80015c2:	7226      	strb	r6, [r4, #8]
 80015c4:	7266      	strb	r6, [r4, #9]
 80015c6:	f845 3b20 	str.w	r3, [r5], #32
 80015ca:	2260      	movs	r2, #96	; 0x60
 80015cc:	4629      	mov	r1, r5
 80015ce:	f00f fa69 	bl	8010aa4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 80015d2:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 80015d6:	60ee      	str	r6, [r5, #12]
 80015d8:	3524      	adds	r5, #36	; 0x24
 80015da:	42ab      	cmp	r3, r5
 80015dc:	d1fb      	bne.n	80015d6 <_ZN8STM32DMAC1Ev+0x22>
}
 80015de:	4620      	mov	r0, r4
 80015e0:	bd70      	pop	{r4, r5, r6, pc}
 80015e2:	bf00      	nop
 80015e4:	08027e60 	.word	0x08027e60

080015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80015e8:	b508      	push	{r3, lr}
    switch (format)
 80015ea:	290b      	cmp	r1, #11
 80015ec:	d80b      	bhi.n	8001606 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80015ee:	e8df f001 	tbb	[pc, r1]
 80015f2:	0612      	.short	0x0612
 80015f4:	0a0a0a10 	.word	0x0a0a0a10
 80015f8:	0808080a 	.word	0x0808080a
 80015fc:	0808      	.short	0x0808
 80015fe:	2001      	movs	r0, #1
}
 8001600:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8001602:	2005      	movs	r0, #5
        break;
 8001604:	e7fc      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8001606:	4b05      	ldr	r3, [pc, #20]	; (800161c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001608:	4a05      	ldr	r2, [pc, #20]	; (8001620 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 800160a:	4806      	ldr	r0, [pc, #24]	; (8001624 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 800160c:	2165      	movs	r1, #101	; 0x65
 800160e:	f025 f80d 	bl	802662c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8001612:	2000      	movs	r0, #0
 8001614:	e7f4      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8001616:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001618:	e7f2      	b.n	8001600 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 800161a:	bf00      	nop
 800161c:	08027cfd 	.word	0x08027cfd
 8001620:	08027d18 	.word	0x08027d18
 8001624:	08027d62 	.word	0x08027d62

08001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001628:	b508      	push	{r3, lr}
    switch (format)
 800162a:	290a      	cmp	r1, #10
 800162c:	d809      	bhi.n	8001642 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 800162e:	e8df f001 	tbb	[pc, r1]
 8001632:	0610      	.short	0x0610
 8001634:	0808080e 	.word	0x0808080e
 8001638:	06060608 	.word	0x06060608
 800163c:	06          	.byte	0x06
 800163d:	00          	.byte	0x00
 800163e:	2001      	movs	r0, #1
}
 8001640:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001642:	4b05      	ldr	r3, [pc, #20]	; (8001658 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001644:	4a05      	ldr	r2, [pc, #20]	; (800165c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001646:	4806      	ldr	r0, [pc, #24]	; (8001660 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001648:	2186      	movs	r1, #134	; 0x86
 800164a:	f024 ffef 	bl	802662c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800164e:	2000      	movs	r0, #0
 8001650:	e7f6      	b.n	8001640 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001652:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001654:	e7f4      	b.n	8001640 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001656:	bf00      	nop
 8001658:	08027cfd 	.word	0x08027cfd
 800165c:	08027db3 	.word	0x08027db3
 8001660:	08027d62 	.word	0x08027d62

08001664 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001664:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001668:	7f4f      	ldrb	r7, [r1, #29]
{
 800166a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800166c:	4639      	mov	r1, r7
{
 800166e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001670:	f7ff ffba 	bl	80015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001674:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001678:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800167a:	4641      	mov	r1, r8
 800167c:	4648      	mov	r0, r9
 800167e:	f7ff ffb3 	bl	80015e8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001682:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001684:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001686:	4648      	mov	r0, r9
 8001688:	f7ff ffce 	bl	8001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800168c:	8aa1      	ldrh	r1, [r4, #20]
 800168e:	8b62      	ldrh	r2, [r4, #26]
 8001690:	4b42      	ldr	r3, [pc, #264]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001692:	1a52      	subs	r2, r2, r1
 8001694:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001696:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001698:	8b22      	ldrh	r2, [r4, #24]
 800169a:	1a52      	subs	r2, r2, r1
 800169c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800169e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80016a0:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80016a2:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 80016a6:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016a8:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80016aa:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80016ac:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 80016ae:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 80016b0:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016b2:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 80016b6:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016b8:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 80016bc:	d026      	beq.n	800170c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 80016be:	d810      	bhi.n	80016e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 80016c0:	2920      	cmp	r1, #32
 80016c2:	ea45 0402 	orr.w	r4, r5, r2
 80016c6:	d061      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80016c8:	2940      	cmp	r1, #64	; 0x40
 80016ca:	d05f      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 80016cc:	2904      	cmp	r1, #4
 80016ce:	d05d      	beq.n	800178c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016d0:	4b32      	ldr	r3, [pc, #200]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80016d2:	432a      	orrs	r2, r5
 80016d4:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80016d8:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016da:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 80016dc:	d05a      	beq.n	8001794 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 80016de:	4a30      	ldr	r2, [pc, #192]	; (80017a0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80016e0:	e040      	b.n	8001764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 80016e2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80016e6:	d007      	beq.n	80016f8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 80016e8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80016ec:	d1f0      	bne.n	80016d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016ee:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80016f2:	f042 0209 	orr.w	r2, r2, #9
 80016f6:	e003      	b.n	8001700 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80016f8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80016fc:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001700:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8001702:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001704:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001706:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001708:	6158      	str	r0, [r3, #20]
 800170a:	e02a      	b.n	8001762 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 800170c:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800170e:	432a      	orrs	r2, r5
 8001710:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8001714:	1d21      	adds	r1, r4, #4
 8001716:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001718:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 800171a:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800171c:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800171e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001720:	b142      	cbz	r2, 8001734 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8001722:	2a01      	cmp	r2, #1
 8001724:	d021      	beq.n	800176a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8001726:	4b1f      	ldr	r3, [pc, #124]	; (80017a4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8001728:	4a1f      	ldr	r2, [pc, #124]	; (80017a8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 800172a:	4820      	ldr	r0, [pc, #128]	; (80017ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 800172c:	f44f 7188 	mov.w	r1, #272	; 0x110
 8001730:	f024 ff7c 	bl	802662c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001734:	69da      	ldr	r2, [r3, #28]
 8001736:	8861      	ldrh	r1, [r4, #2]
 8001738:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800173c:	3901      	subs	r1, #1
 800173e:	f022 0210 	bic.w	r2, r2, #16
 8001742:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001746:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001748:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800174a:	4b14      	ldr	r3, [pc, #80]	; (800179c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800174c:	69da      	ldr	r2, [r3, #28]
 800174e:	f042 0220 	orr.w	r2, r2, #32
 8001752:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001754:	69da      	ldr	r2, [r3, #28]
 8001756:	0692      	lsls	r2, r2, #26
 8001758:	d4fc      	bmi.n	8001754 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800175a:	2210      	movs	r2, #16
 800175c:	609a      	str	r2, [r3, #8]
            if (blend)
 800175e:	2800      	cmp	r0, #0
 8001760:	d0bd      	beq.n	80016de <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001762:	4a13      	ldr	r2, [pc, #76]	; (80017b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001764:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8001766:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800176a:	8862      	ldrh	r2, [r4, #2]
 800176c:	69d9      	ldr	r1, [r3, #28]
 800176e:	1e54      	subs	r4, r2, #1
 8001770:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8001774:	f022 0210 	bic.w	r2, r2, #16
 8001778:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if (blitOp.alpha == 255)
 800177c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001780:	f042 0210 	orr.w	r2, r2, #16
                if (blitOp.alpha == 255)
 8001784:	bf18      	it	ne
 8001786:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001788:	61da      	str	r2, [r3, #28]
                break;
 800178a:	e7de      	b.n	800174a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800178c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001790:	61dc      	str	r4, [r3, #28]
 8001792:	e7b8      	b.n	8001706 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001794:	f240 2201 	movw	r2, #513	; 0x201
 8001798:	e7e4      	b.n	8001764 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 800179a:	bf00      	nop
 800179c:	4002b000 	.word	0x4002b000
 80017a0:	00010201 	.word	0x00010201
 80017a4:	08027dfe 	.word	0x08027dfe
 80017a8:	08027e18 	.word	0x08027e18
 80017ac:	08027d62 	.word	0x08027d62
 80017b0:	00020201 	.word	0x00020201

080017b4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80017b4:	b570      	push	{r4, r5, r6, lr}
 80017b6:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80017b8:	7f89      	ldrb	r1, [r1, #30]
 80017ba:	f7ff ff35 	bl	8001628 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017be:	8aa6      	ldrh	r6, [r4, #20]
 80017c0:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017c2:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80017c4:	4b15      	ldr	r3, [pc, #84]	; (800181c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017c6:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 80017c8:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017ca:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017ce:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 80017d0:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017d2:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017d4:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 80017d6:	6826      	ldr	r6, [r4, #0]
 80017d8:	68e1      	ldr	r1, [r4, #12]
 80017da:	2e08      	cmp	r6, #8
 80017dc:	d10d      	bne.n	80017fa <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017de:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80017e0:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80017e2:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80017e4:	7f20      	ldrb	r0, [r4, #28]
 80017e6:	4a0e      	ldr	r2, [pc, #56]	; (8001820 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80017e8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80017ec:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80017ee:	4a0d      	ldr	r2, [pc, #52]	; (8001824 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80017f0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017f2:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80017f4:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80017f6:	601a      	str	r2, [r3, #0]
    }
}
 80017f8:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80017fa:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80017fc:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80017fe:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001800:	0948      	lsrs	r0, r1, #5
 8001802:	0a0a      	lsrs	r2, r1, #8
 8001804:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001808:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 800180c:	4302      	orrs	r2, r0
 800180e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8001812:	430a      	orrs	r2, r1
 8001814:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001816:	4a04      	ldr	r2, [pc, #16]	; (8001828 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001818:	e7ed      	b.n	80017f6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 800181a:	bf00      	nop
 800181c:	4002b000 	.word	0x4002b000
 8001820:	00010009 	.word	0x00010009
 8001824:	00020201 	.word	0x00020201
 8001828:	00030201 	.word	0x00030201

0800182c <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 800182c:	4b03      	ldr	r3, [pc, #12]	; (800183c <_ZN8touchgfx5paint8tearDownEv+0x10>)
 800182e:	681a      	ldr	r2, [r3, #0]
 8001830:	07d2      	lsls	r2, r2, #31
 8001832:	d4fc      	bmi.n	800182e <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001834:	2223      	movs	r2, #35	; 0x23
 8001836:	609a      	str	r2, [r3, #8]
}
 8001838:	4770      	bx	lr
 800183a:	bf00      	nop
 800183c:	4002b000 	.word	0x4002b000

08001840 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
*
* @brief Renders Canvas Widget chunks using DMA.
* This functions will not generate an interrupt, and will not affect the DMA queue.
*/
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
 8001840:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001842:	4c0f      	ldr	r4, [pc, #60]	; (8001880 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8001844:	6825      	ldr	r5, [r4, #0]
 8001846:	07ed      	lsls	r5, r5, #31
 8001848:	d4fc      	bmi.n	8001844 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800184a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800184c:	0409      	lsls	r1, r1, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800184e:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001850:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001854:	2502      	movs	r5, #2

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
 8001856:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001858:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800185a:	6461      	str	r1, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 800185c:	63e0      	str	r0, [r4, #60]	; 0x3c
    if (alpha < 0xFF)
 800185e:	d00a      	beq.n	8001876 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001860:	4908      	ldr	r1, [pc, #32]	; (8001884 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001862:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8001864:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8001868:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 800186a:	4b07      	ldr	r3, [pc, #28]	; (8001888 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
        WRITE_REG(DMA2D->FGCOLR, color);
 800186c:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 800186e:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8001870:	60e0      	str	r0, [r4, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8001872:	6023      	str	r3, [r4, #0]
    }
}
 8001874:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001876:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
 8001878:	9b03      	ldr	r3, [sp, #12]
 800187a:	63a3      	str	r3, [r4, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 800187c:	4b03      	ldr	r3, [pc, #12]	; (800188c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 800187e:	e7f8      	b.n	8001872 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8001880:	4002b000 	.word	0x4002b000
 8001884:	00010009 	.word	0x00010009
 8001888:	00020001 	.word	0x00020001
 800188c:	00030001 	.word	0x00030001

08001890 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001890:	2001      	movs	r0, #1
 8001892:	4770      	bx	lr

08001894 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8001894:	2040      	movs	r0, #64	; 0x40
 8001896:	4770      	bx	lr

08001898 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001898:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 800189c:	3008      	adds	r0, #8
 800189e:	4770      	bx	lr

080018a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80018a0:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 80018a4:	3008      	adds	r0, #8
 80018a6:	4770      	bx	lr

080018a8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80018a8:	2001      	movs	r0, #1
 80018aa:	4770      	bx	lr

080018ac <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80018ac:	f244 7098 	movw	r0, #18328	; 0x4798
 80018b0:	4770      	bx	lr

080018b2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018b2:	f244 7398 	movw	r3, #18328	; 0x4798
 80018b6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80018ba:	3008      	adds	r0, #8
 80018bc:	4770      	bx	lr

080018be <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018be:	f244 7398 	movw	r3, #18328	; 0x4798
 80018c2:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80018c6:	3008      	adds	r0, #8
 80018c8:	4770      	bx	lr

080018ca <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80018ca:	2001      	movs	r0, #1
 80018cc:	4770      	bx	lr

080018ce <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80018ce:	2010      	movs	r0, #16
 80018d0:	4770      	bx	lr

080018d2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018d2:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80018d6:	3008      	adds	r0, #8
 80018d8:	4770      	bx	lr

080018da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80018da:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80018de:	3008      	adds	r0, #8
 80018e0:	4770      	bx	lr

080018e2 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartupScreenNoTransition();
 80018e2:	4608      	mov	r0, r1
 80018e4:	f002 bf22 	b.w	800472c <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>

080018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80018e8:	b510      	push	{r4, lr}
 80018ea:	4b03      	ldr	r3, [pc, #12]	; (80018f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 80018ec:	6003      	str	r3, [r0, #0]
 80018ee:	4604      	mov	r4, r0
 80018f0:	f00d fc5b 	bl	800f1aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 80018f4:	4620      	mov	r0, r4
 80018f6:	bd10      	pop	{r4, pc}
 80018f8:	08027f18 	.word	0x08027f18

080018fc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80018fc:	b510      	push	{r4, lr}
 80018fe:	4604      	mov	r4, r0
 8001900:	f7ff fff2 	bl	80018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001904:	4620      	mov	r0, r4
 8001906:	2148      	movs	r1, #72	; 0x48
 8001908:	f024 fe62 	bl	80265d0 <_ZdlPvj>
 800190c:	4620      	mov	r0, r4
 800190e:	bd10      	pop	{r4, pc}

08001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001910:	b510      	push	{r4, lr}
 8001912:	4b03      	ldr	r3, [pc, #12]	; (8001920 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001914:	6003      	str	r3, [r0, #0]
 8001916:	4604      	mov	r4, r0
 8001918:	f00d fc47 	bl	800f1aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 800191c:	4620      	mov	r0, r4
 800191e:	bd10      	pop	{r4, pc}
 8001920:	08027ee4 	.word	0x08027ee4

08001924 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001924:	b510      	push	{r4, lr}
 8001926:	4604      	mov	r4, r0
 8001928:	f7ff fff2 	bl	8001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800192c:	4620      	mov	r0, r4
 800192e:	f244 71a0 	movw	r1, #18336	; 0x47a0
 8001932:	f024 fe4d 	bl	80265d0 <_ZdlPvj>
 8001936:	4620      	mov	r0, r4
 8001938:	bd10      	pop	{r4, pc}
	...

0800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800193c:	b510      	push	{r4, lr}
 800193e:	4b03      	ldr	r3, [pc, #12]	; (800194c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001940:	6003      	str	r3, [r0, #0]
 8001942:	4604      	mov	r4, r0
 8001944:	f00d fc31 	bl	800f1aa <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001948:	4620      	mov	r0, r4
 800194a:	bd10      	pop	{r4, pc}
 800194c:	08027eb0 	.word	0x08027eb0

08001950 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001950:	b510      	push	{r4, lr}
 8001952:	4604      	mov	r4, r0
 8001954:	f7ff fff2 	bl	800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001958:	4620      	mov	r0, r4
 800195a:	2118      	movs	r1, #24
 800195c:	f024 fe38 	bl	80265d0 <_ZdlPvj>
 8001960:	4620      	mov	r0, r4
 8001962:	bd10      	pop	{r4, pc}

08001964 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001964:	b510      	push	{r4, lr}
 8001966:	4b09      	ldr	r3, [pc, #36]	; (800198c <_ZN12FrontendHeapD1Ev+0x28>)
 8001968:	6003      	str	r3, [r0, #0]
 800196a:	4604      	mov	r4, r0
 800196c:	f500 408f 	add.w	r0, r0, #18304	; 0x4780
 8001970:	304c      	adds	r0, #76	; 0x4c
 8001972:	f7ff ffb9 	bl	80018e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001976:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 800197a:	f7ff ffc9 	bl	8001910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19MainInfotaimentViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800197e:	f104 0014 	add.w	r0, r4, #20
 8001982:	f7ff ffdb 	bl	800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListI21DriverScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001986:	4620      	mov	r0, r4
 8001988:	bd10      	pop	{r4, pc}
 800198a:	bf00      	nop
 800198c:	08027f4c 	.word	0x08027f4c

08001990 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001990:	b508      	push	{r3, lr}
 8001992:	4802      	ldr	r0, [pc, #8]	; (800199c <__tcf_0+0xc>)
 8001994:	f7ff ffe6 	bl	8001964 <_ZN12FrontendHeapD1Ev>
 8001998:	bd08      	pop	{r3, pc}
 800199a:	bf00      	nop
 800199c:	200001a4 	.word	0x200001a4

080019a0 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80019a0:	b510      	push	{r4, lr}
 80019a2:	4604      	mov	r4, r0
 80019a4:	f7ff ffde 	bl	8001964 <_ZN12FrontendHeapD1Ev>
 80019a8:	4620      	mov	r0, r4
 80019aa:	f644 21d4 	movw	r1, #19156	; 0x4ad4
 80019ae:	f024 fe0f 	bl	80265d0 <_ZdlPvj>
 80019b2:	4620      	mov	r0, r4
 80019b4:	bd10      	pop	{r4, pc}
	...

080019b8 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80019b8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80019bc:	f001 f892 	bl	8002ae4 <_ZN14BitmapDatabase11getInstanceEv>
 80019c0:	4605      	mov	r5, r0
 80019c2:	f001 f893 	bl	8002aec <_ZN14BitmapDatabase15getInstanceSizeEv>
 80019c6:	2400      	movs	r4, #0
 80019c8:	4601      	mov	r1, r0
 80019ca:	4623      	mov	r3, r4
 80019cc:	4628      	mov	r0, r5
 80019ce:	4622      	mov	r2, r4
 80019d0:	9400      	str	r4, [sp, #0]
 80019d2:	f016 fe67 	bl	80186a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80019d6:	4b26      	ldr	r3, [pc, #152]	; (8001a70 <touchgfx_init+0xb8>)
 80019d8:	4a26      	ldr	r2, [pc, #152]	; (8001a74 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 80019da:	4d27      	ldr	r5, [pc, #156]	; (8001a78 <touchgfx_init+0xc0>)
 80019dc:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80019de:	4620      	mov	r0, r4
 80019e0:	f006 fb84 	bl	80080ec <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80019e4:	4825      	ldr	r0, [pc, #148]	; (8001a7c <touchgfx_init+0xc4>)
 80019e6:	f016 fdc5 	bl	8018574 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80019ea:	782b      	ldrb	r3, [r5, #0]
 80019ec:	f3bf 8f5b 	dmb	ish
 80019f0:	07db      	lsls	r3, r3, #31
 80019f2:	d436      	bmi.n	8001a62 <touchgfx_init+0xaa>
 80019f4:	4628      	mov	r0, r5
 80019f6:	f024 fded 	bl	80265d4 <__cxa_guard_acquire>
 80019fa:	b390      	cbz	r0, 8001a62 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 80019fc:	4c20      	ldr	r4, [pc, #128]	; (8001a80 <touchgfx_init+0xc8>)
 80019fe:	4f21      	ldr	r7, [pc, #132]	; (8001a84 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001a00:	4b21      	ldr	r3, [pc, #132]	; (8001a88 <touchgfx_init+0xd0>)
 8001a02:	6023      	str	r3, [r4, #0]
 8001a04:	f507 76d6 	add.w	r6, r7, #428	; 0x1ac
 8001a08:	f104 0014 	add.w	r0, r4, #20
 8001a0c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001a10:	6060      	str	r0, [r4, #4]
 8001a12:	f8c4 8008 	str.w	r8, [r4, #8]
 8001a16:	60e7      	str	r7, [r4, #12]
 8001a18:	6126      	str	r6, [r4, #16]
 8001a1a:	f00d fbc7 	bl	800f1ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a1e:	4b1b      	ldr	r3, [pc, #108]	; (8001a8c <touchgfx_init+0xd4>)
 8001a20:	6163      	str	r3, [r4, #20]
 8001a22:	4640      	mov	r0, r8
 8001a24:	f00d fbc2 	bl	800f1ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a28:	4b19      	ldr	r3, [pc, #100]	; (8001a90 <touchgfx_init+0xd8>)
 8001a2a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001a2c:	4638      	mov	r0, r7
 8001a2e:	f00d fbbd 	bl	800f1ac <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001a32:	f504 4380 	add.w	r3, r4, #16384	; 0x4000
 8001a36:	4a17      	ldr	r2, [pc, #92]	; (8001a94 <touchgfx_init+0xdc>)
 8001a38:	f8c3 27cc 	str.w	r2, [r3, #1996]	; 0x7cc
 8001a3c:	f603 0014 	addw	r0, r3, #2068	; 0x814
 8001a40:	f007 fa18 	bl	8008e74 <_ZN5ModelC1Ev>
 8001a44:	4622      	mov	r2, r4
 8001a46:	f107 0148 	add.w	r1, r7, #72	; 0x48
 8001a4a:	4630      	mov	r0, r6
 8001a4c:	f006 fe54 	bl	80086f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001a50:	4630      	mov	r0, r6
 8001a52:	f002 fe6b 	bl	800472c <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>
        static FrontendHeap instance;
 8001a56:	4810      	ldr	r0, [pc, #64]	; (8001a98 <touchgfx_init+0xe0>)
 8001a58:	f024 fe06 	bl	8026668 <atexit>
 8001a5c:	4628      	mov	r0, r5
 8001a5e:	f024 fdc5 	bl	80265ec <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001a62:	480e      	ldr	r0, [pc, #56]	; (8001a9c <touchgfx_init+0xe4>)
}
 8001a64:	b002      	add	sp, #8
 8001a66:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001a6a:	f7ff bae5 	b.w	8001038 <_ZN11TouchGFXHAL10initializeEv>
 8001a6e:	bf00      	nop
 8001a70:	2000ef80 	.word	0x2000ef80
 8001a74:	20005a98 	.word	0x20005a98
 8001a78:	200001a0 	.word	0x200001a0
 8001a7c:	2000001c 	.word	0x2000001c
 8001a80:	200001a4 	.word	0x200001a4
 8001a84:	20004970 	.word	0x20004970
 8001a88:	08027f4c 	.word	0x08027f4c
 8001a8c:	08027eb0 	.word	0x08027eb0
 8001a90:	08027ee4 	.word	0x08027ee4
 8001a94:	08027f18 	.word	0x08027f18
 8001a98:	08001991 	.word	0x08001991
 8001a9c:	20005a1c 	.word	0x20005a1c

08001aa0 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001aa0:	4770      	bx	lr
	...

08001aa4 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001aa4:	4801      	ldr	r0, [pc, #4]	; (8001aac <touchgfx_taskEntry+0x8>)
 8001aa6:	f7ff bae1 	b.w	800106c <_ZN11TouchGFXHAL9taskEntryEv>
 8001aaa:	bf00      	nop
 8001aac:	20005a1c 	.word	0x20005a1c

08001ab0 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001ab0:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001ab2:	4e22      	ldr	r6, [pc, #136]	; (8001b3c <_GLOBAL__sub_I_touchgfx_init+0x8c>)
{
public:

    STM32TouchController() {}
 8001ab4:	4c22      	ldr	r4, [pc, #136]	; (8001b40 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static LCD16bpp display;
 8001ab6:	4d23      	ldr	r5, [pc, #140]	; (8001b44 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001ab8:	4b23      	ldr	r3, [pc, #140]	; (8001b48 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001aba:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001abc:	4630      	mov	r0, r6
 8001abe:	f7ff fd79 	bl	80015b4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001ac2:	4628      	mov	r0, r5
 8001ac4:	f01b f8ba 	bl	801cc3c <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001ac8:	4b20      	ldr	r3, [pc, #128]	; (8001b4c <_GLOBAL__sub_I_touchgfx_init+0x9c>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001aca:	4821      	ldr	r0, [pc, #132]	; (8001b50 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
          lastRenderMethod(HARDWARE)
 8001acc:	60dc      	str	r4, [r3, #12]
 8001ace:	2200      	movs	r2, #0
 8001ad0:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001ad4:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001ad8:	491e      	ldr	r1, [pc, #120]	; (8001b54 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001ada:	861a      	strh	r2, [r3, #48]	; 0x30
 8001adc:	e9c3 121a 	strd	r1, r2, [r3, #104]	; 0x68
 8001ae0:	491d      	ldr	r1, [pc, #116]	; (8001b58 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 8001ae2:	6799      	str	r1, [r3, #120]	; 0x78
        instance = this;
 8001ae4:	491d      	ldr	r1, [pc, #116]	; (8001b5c <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001ae6:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
        instance = this;
 8001aea:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001aec:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001af0:	8001      	strh	r1, [r0, #0]
 8001af2:	481b      	ldr	r0, [pc, #108]	; (8001b60 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001af4:	665a      	str	r2, [r3, #100]	; 0x64
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001af6:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001af8:	481a      	ldr	r0, [pc, #104]	; (8001b64 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001afa:	f883 2070 	strb.w	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001afe:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001b02:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001b06:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001b0a:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001b0e:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001b12:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001b16:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001b1a:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001b1e:	e9c3 2217 	strd	r2, r2, [r3, #92]	; 0x5c
 8001b22:	675a      	str	r2, [r3, #116]	; 0x74
 8001b24:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b28:	8001      	strh	r1, [r0, #0]
 8001b2a:	480f      	ldr	r0, [pc, #60]	; (8001b68 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001b2c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b30:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001b32:	490e      	ldr	r1, [pc, #56]	; (8001b6c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001b34:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001b36:	4a0e      	ldr	r2, [pc, #56]	; (8001b70 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001b38:	601a      	str	r2, [r3, #0]
}
 8001b3a:	bd70      	pop	{r4, r5, r6, pc}
 8001b3c:	20004c7c 	.word	0x20004c7c
 8001b40:	20004c78 	.word	0x20004c78
 8001b44:	20005a9c 	.word	0x20005a9c
 8001b48:	08027994 	.word	0x08027994
 8001b4c:	20005a1c 	.word	0x20005a1c
 8001b50:	2000ef10 	.word	0x2000ef10
 8001b54:	01000001 	.word	0x01000001
 8001b58:	01010000 	.word	0x01010000
 8001b5c:	2000ef1c 	.word	0x2000ef1c
 8001b60:	2000ef16 	.word	0x2000ef16
 8001b64:	2000ef12 	.word	0x2000ef12
 8001b68:	2000ef18 	.word	0x2000ef18
 8001b6c:	2000ef14 	.word	0x2000ef14
 8001b70:	08027b20 	.word	0x08027b20

08001b74 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001b74:	4801      	ldr	r0, [pc, #4]	; (8001b7c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001b76:	f7ff bcf9 	b.w	800156c <_ZN8STM32DMAD1Ev>
 8001b7a:	bf00      	nop
 8001b7c:	20004c7c 	.word	0x20004c7c

08001b80 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001b80:	2000      	movs	r0, #0
 8001b82:	4770      	bx	lr

08001b84 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001b84:	8081      	strh	r1, [r0, #4]
    }
 8001b86:	4770      	bx	lr

08001b88 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001b88:	80c1      	strh	r1, [r0, #6]
    }
 8001b8a:	4770      	bx	lr

08001b8c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001b8c:	8101      	strh	r1, [r0, #8]
    }
 8001b8e:	4770      	bx	lr

08001b90 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001b90:	8141      	strh	r1, [r0, #10]
    }
 8001b92:	4770      	bx	lr

08001b94 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001b94:	4770      	bx	lr

08001b96 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b96:	4770      	bx	lr

08001b98 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b98:	4770      	bx	lr

08001b9a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001b9a:	4770      	bx	lr

08001b9c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001b9c:	4770      	bx	lr

08001b9e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001b9e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001ba0:	88c4      	ldrh	r4, [r0, #6]
 8001ba2:	6803      	ldr	r3, [r0, #0]
 8001ba4:	1b12      	subs	r2, r2, r4
 8001ba6:	8884      	ldrh	r4, [r0, #4]
 8001ba8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001baa:	1b09      	subs	r1, r1, r4
 8001bac:	b212      	sxth	r2, r2
    }
 8001bae:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001bb2:	b209      	sxth	r1, r1
 8001bb4:	4718      	bx	r3

08001bb6 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001bb6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001bba:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001bbc:	f04f 33ff 	mov.w	r3, #4294967295
 8001bc0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001bc2:	6813      	ldr	r3, [r2, #0]
 8001bc4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001bc6:	6010      	str	r0, [r2, #0]
    }
 8001bc8:	4770      	bx	lr

08001bca <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001bca:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001bce:	b11a      	cbz	r2, 8001bd8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001bd0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001bd4:	b102      	cbz	r2, 8001bd8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001bd6:	6018      	str	r0, [r3, #0]
        }
    }
 8001bd8:	4770      	bx	lr

08001bda <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001bda:	2000      	movs	r0, #0
 8001bdc:	4770      	bx	lr

08001bde <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001bde:	888b      	ldrh	r3, [r1, #4]
 8001be0:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001be2:	2001      	movs	r0, #1
 8001be4:	4770      	bx	lr

08001be6 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001be6:	4770      	bx	lr

08001be8 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001be8:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001bec:	4770      	bx	lr

08001bee <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001bee:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8001bf2:	4770      	bx	lr

08001bf4 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001bf4:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001bf6:	2200      	movs	r2, #0
        return rect.width;
 8001bf8:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001bfc:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001c00:	8002      	strh	r2, [r0, #0]
 8001c02:	8042      	strh	r2, [r0, #2]
 8001c04:	8084      	strh	r4, [r0, #4]
 8001c06:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001c08:	bd10      	pop	{r4, pc}

08001c0a <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001c0a:	2200      	movs	r2, #0
 8001c0c:	8002      	strh	r2, [r0, #0]
 8001c0e:	8042      	strh	r2, [r0, #2]
 8001c10:	8082      	strh	r2, [r0, #4]
 8001c12:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001c14:	4770      	bx	lr
	...

08001c18 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001c18:	4b02      	ldr	r3, [pc, #8]	; (8001c24 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001c1a:	2290      	movs	r2, #144	; 0x90
 8001c1c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001c20:	4770      	bx	lr
 8001c22:	bf00      	nop
 8001c24:	e000e100 	.word	0xe000e100

08001c28 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c28:	4b02      	ldr	r3, [pc, #8]	; (8001c34 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001c2a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001c2e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001c30:	4770      	bx	lr
 8001c32:	bf00      	nop
 8001c34:	e000e100 	.word	0xe000e100

08001c38 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001c38:	4770      	bx	lr

08001c3a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001c3a:	4770      	bx	lr

08001c3c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001c3c:	b570      	push	{r4, r5, r6, lr}
 8001c3e:	4604      	mov	r4, r0
    HAL::initialize();
 8001c40:	f00e f881 	bl	800fd46 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001c44:	6823      	ldr	r3, [r4, #0]
 8001c46:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001c48:	f013 f92e 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 8001c4c:	4601      	mov	r1, r0
 8001c4e:	4620      	mov	r0, r4
 8001c50:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c52:	6823      	ldr	r3, [r4, #0]
 8001c54:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001c58:	2300      	movs	r3, #0
 8001c5a:	4620      	mov	r0, r4
 8001c5c:	46ac      	mov	ip, r5
 8001c5e:	461a      	mov	r2, r3
}
 8001c60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001c64:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001c68:	4760      	bx	ip

08001c6a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001c6a:	f00e b81d 	b.w	800fca8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001c6e <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001c6e:	f00e b97e 	b.w	800ff6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001c72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001c76:	b112      	cbz	r2, 8001c7e <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001c78:	6803      	ldr	r3, [r0, #0]
 8001c7a:	695b      	ldr	r3, [r3, #20]
 8001c7c:	4718      	bx	r3
    }
 8001c7e:	4770      	bx	lr

08001c80 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001c80:	4b04      	ldr	r3, [pc, #16]	; (8001c94 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001c82:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001c86:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001c8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001c8e:	f3bf 8f6f 	isb	sy
}
 8001c92:	4770      	bx	lr
 8001c94:	e000e100 	.word	0xe000e100

08001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001c98:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001c9a:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001c9c:	4e12      	ldr	r6, [pc, #72]	; (8001ce8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001c9e:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001ca0:	4b12      	ldr	r3, [pc, #72]	; (8001cec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001ca2:	6003      	str	r3, [r0, #0]
 8001ca4:	6833      	ldr	r3, [r6, #0]
 8001ca6:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
    AbstractPainterRGB565()
 8001caa:	4605      	mov	r5, r0
 8001cac:	b10a      	cbz	r2, 8001cb2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001cae:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001cb0:	b900      	cbnz	r0, 8001cb4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001cb2:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001cb4:	6803      	ldr	r3, [r0, #0]
 8001cb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001cb8:	4798      	blx	r3
        return auxiliaryLCD;
 8001cba:	6833      	ldr	r3, [r6, #0]
 8001cbc:	fab0 f480 	clz	r4, r0
 8001cc0:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001cc2:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001cc4:	b130      	cbz	r0, 8001cd4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001cc6:	6803      	ldr	r3, [r0, #0]
 8001cc8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001cca:	4798      	blx	r3
 8001ccc:	2800      	cmp	r0, #0
 8001cce:	bf08      	it	eq
 8001cd0:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001cd4:	b92c      	cbnz	r4, 8001ce2 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001cd6:	4b06      	ldr	r3, [pc, #24]	; (8001cf0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001cd8:	4a06      	ldr	r2, [pc, #24]	; (8001cf4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001cda:	4807      	ldr	r0, [pc, #28]	; (8001cf8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001cdc:	212c      	movs	r1, #44	; 0x2c
 8001cde:	f024 fca5 	bl	802662c <__assert_func>
    }
 8001ce2:	4628      	mov	r0, r5
 8001ce4:	bd70      	pop	{r4, r5, r6, pc}
 8001ce6:	bf00      	nop
 8001ce8:	2000ef1c 	.word	0x2000ef1c
 8001cec:	0802805c 	.word	0x0802805c
 8001cf0:	08027f58 	.word	0x08027f58
 8001cf4:	08027fb6 	.word	0x08027fb6
 8001cf8:	08027fef 	.word	0x08027fef

08001cfc <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001cfc:	4901      	ldr	r1, [pc, #4]	; (8001d04 <vApplicationIdleHook+0x8>)
 8001cfe:	2000      	movs	r0, #0
 8001d00:	f00c bdd8 	b.w	800e8b4 <vTaskSetApplicationTaskTag>
 8001d04:	08001409 	.word	0x08001409

08001d08 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001d08:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001d0a:	2064      	movs	r0, #100	; 0x64
 8001d0c:	f00b f98b 	bl	800d026 <osDelay>
  for(;;)
 8001d10:	e7fb      	b.n	8001d0a <StartDefaultTask+0x2>
	...

08001d14 <SystemClock_Config>:
{
 8001d14:	b530      	push	{r4, r5, lr}
 8001d16:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001d18:	2210      	movs	r2, #16
 8001d1a:	2100      	movs	r1, #0
 8001d1c:	a809      	add	r0, sp, #36	; 0x24
 8001d1e:	f024 fd11 	bl	8026744 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001d22:	2214      	movs	r2, #20
 8001d24:	2100      	movs	r1, #0
 8001d26:	a802      	add	r0, sp, #8
 8001d28:	f024 fd0c 	bl	8026744 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001d2c:	2400      	movs	r4, #0
 8001d2e:	4b1f      	ldr	r3, [pc, #124]	; (8001dac <SystemClock_Config+0x98>)
 8001d30:	9400      	str	r4, [sp, #0]
 8001d32:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d34:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001d38:	641a      	str	r2, [r3, #64]	; 0x40
 8001d3a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d3c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001d40:	9300      	str	r3, [sp, #0]
 8001d42:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d44:	4b1a      	ldr	r3, [pc, #104]	; (8001db0 <SystemClock_Config+0x9c>)
 8001d46:	9401      	str	r4, [sp, #4]
 8001d48:	681a      	ldr	r2, [r3, #0]
 8001d4a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001d4e:	601a      	str	r2, [r3, #0]
 8001d50:	681b      	ldr	r3, [r3, #0]
 8001d52:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001d56:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d58:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001d5a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001d5c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001d60:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d64:	2502      	movs	r5, #2
 8001d66:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d6a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001d6c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001d70:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001d74:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001d78:	2004      	movs	r0, #4
 8001d7a:	2306      	movs	r3, #6
 8001d7c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d80:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001d82:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001d84:	f00a fc2c 	bl	800c5e0 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001d88:	f009 fe80 	bl	800ba8c <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001d8c:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001d8e:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001d92:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d94:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001d98:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001d9c:	2105      	movs	r1, #5
 8001d9e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001da0:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001da4:	f00a f9f0 	bl	800c188 <HAL_RCC_ClockConfig>
}
 8001da8:	b015      	add	sp, #84	; 0x54
 8001daa:	bd30      	pop	{r4, r5, pc}
 8001dac:	40023800 	.word	0x40023800
 8001db0:	40007000 	.word	0x40007000

08001db4 <main>:
{
 8001db4:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001db8:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 8001dba:	f008 f84d 	bl	8009e58 <HAL_Init>
  SystemClock_Config();
 8001dbe:	f7ff ffa9 	bl	8001d14 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dc2:	2214      	movs	r2, #20
 8001dc4:	2100      	movs	r1, #0
 8001dc6:	a82d      	add	r0, sp, #180	; 0xb4
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dc8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dca:	f024 fcbb 	bl	8026744 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dce:	4bc1      	ldr	r3, [pc, #772]	; (80020d4 <main+0x320>)
 8001dd0:	9403      	str	r4, [sp, #12]
 8001dd2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001dd4:	48c0      	ldr	r0, [pc, #768]	; (80020d8 <main+0x324>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001dd6:	f042 0210 	orr.w	r2, r2, #16
 8001dda:	631a      	str	r2, [r3, #48]	; 0x30
 8001ddc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dde:	f002 0210 	and.w	r2, r2, #16
 8001de2:	9203      	str	r2, [sp, #12]
 8001de4:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001de6:	9404      	str	r4, [sp, #16]
 8001de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dea:	f042 0202 	orr.w	r2, r2, #2
 8001dee:	631a      	str	r2, [r3, #48]	; 0x30
 8001df0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001df2:	f002 0202 	and.w	r2, r2, #2
 8001df6:	9204      	str	r2, [sp, #16]
 8001df8:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dfa:	9405      	str	r4, [sp, #20]
 8001dfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dfe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001e02:	631a      	str	r2, [r3, #48]	; 0x30
 8001e04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e06:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001e0a:	9205      	str	r2, [sp, #20]
 8001e0c:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001e0e:	9406      	str	r4, [sp, #24]
 8001e10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e12:	f042 0208 	orr.w	r2, r2, #8
 8001e16:	631a      	str	r2, [r3, #48]	; 0x30
 8001e18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e1a:	f002 0208 	and.w	r2, r2, #8
 8001e1e:	9206      	str	r2, [sp, #24]
 8001e20:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001e22:	9407      	str	r4, [sp, #28]
 8001e24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e26:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001e2a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e2e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001e32:	9207      	str	r2, [sp, #28]
 8001e34:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e36:	9408      	str	r4, [sp, #32]
 8001e38:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e3a:	f042 0204 	orr.w	r2, r2, #4
 8001e3e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e40:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e42:	f002 0204 	and.w	r2, r2, #4
 8001e46:	9208      	str	r2, [sp, #32]
 8001e48:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001e4a:	9409      	str	r4, [sp, #36]	; 0x24
 8001e4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e4e:	f042 0220 	orr.w	r2, r2, #32
 8001e52:	631a      	str	r2, [r3, #48]	; 0x30
 8001e54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e56:	f002 0220 	and.w	r2, r2, #32
 8001e5a:	9209      	str	r2, [sp, #36]	; 0x24
 8001e5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001e5e:	940a      	str	r4, [sp, #40]	; 0x28
 8001e60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e62:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001e66:	631a      	str	r2, [r3, #48]	; 0x30
 8001e68:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e6a:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001e6e:	920a      	str	r2, [sp, #40]	; 0x28
 8001e70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e72:	940b      	str	r4, [sp, #44]	; 0x2c
 8001e74:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e76:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001e7a:	631a      	str	r2, [r3, #48]	; 0x30
 8001e7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e7e:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001e82:	920b      	str	r2, [sp, #44]	; 0x2c
 8001e84:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e86:	940c      	str	r4, [sp, #48]	; 0x30
 8001e88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e8a:	f042 0201 	orr.w	r2, r2, #1
 8001e8e:	631a      	str	r2, [r3, #48]	; 0x30
 8001e90:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e92:	f002 0201 	and.w	r2, r2, #1
 8001e96:	920c      	str	r2, [sp, #48]	; 0x30
 8001e98:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001e9a:	940d      	str	r4, [sp, #52]	; 0x34
 8001e9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e9e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001ea2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ea4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ea6:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001eaa:	4622      	mov	r2, r4
 8001eac:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001eb0:	930d      	str	r3, [sp, #52]	; 0x34
 8001eb2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8001eb4:	f008 ffe6 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(SDC_CTRL_GPIO_Port, SDC_CTRL_Pin, GPIO_PIN_SET);
 8001eb8:	4887      	ldr	r0, [pc, #540]	; (80020d8 <main+0x324>)
 8001eba:	2201      	movs	r2, #1
 8001ebc:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8001ec0:	f008 ffe0 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LAP_COUNTER_TRIGGER_GPIO_Port, LAP_COUNTER_TRIGGER_Pin, GPIO_PIN_SET);
 8001ec4:	4885      	ldr	r0, [pc, #532]	; (80020dc <main+0x328>)
 8001ec6:	2201      	movs	r2, #1
 8001ec8:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001ecc:	f008 ffda 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001ed0:	4883      	ldr	r0, [pc, #524]	; (80020e0 <main+0x32c>)
 8001ed2:	2201      	movs	r2, #1
 8001ed4:	2108      	movs	r1, #8
 8001ed6:	f008 ffd5 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001eda:	4882      	ldr	r0, [pc, #520]	; (80020e4 <main+0x330>)
 8001edc:	4622      	mov	r2, r4
 8001ede:	2146      	movs	r1, #70	; 0x46
 8001ee0:	f008 ffd0 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(DASHBOARD_NEUTRAL_LED_GPIO_Port, DASHBOARD_NEUTRAL_LED_Pin, GPIO_PIN_RESET);
 8001ee4:	487d      	ldr	r0, [pc, #500]	; (80020dc <main+0x328>)
 8001ee6:	4622      	mov	r2, r4
 8001ee8:	2110      	movs	r1, #16
 8001eea:	f008 ffcb 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7|MCP2515_CS_Pin, GPIO_PIN_RESET);
 8001eee:	4622      	mov	r2, r4
 8001ef0:	487d      	ldr	r0, [pc, #500]	; (80020e8 <main+0x334>)
 8001ef2:	21c0      	movs	r1, #192	; 0xc0
 8001ef4:	f008 ffc6 	bl	800ae84 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = STEERING_RIGHT_RED_BUTTON_Pin;
 8001ef8:	f44f 5a00 	mov.w	sl, #8192	; 0x2000
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001efc:	4876      	ldr	r0, [pc, #472]	; (80020d8 <main+0x324>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001efe:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f00:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f02:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f04:	2503      	movs	r5, #3
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f06:	e9cd a42d 	strd	sl, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_RIGHT_RED_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001f0a:	f008 fe2d 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f0e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f12:	4871      	ldr	r0, [pc, #452]	; (80020d8 <main+0x324>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f14:	9530      	str	r5, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f16:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f18:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = SDC_CTRL_Pin;
 8001f1c:	f44f 6980 	mov.w	r9, #1024	; 0x400
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f20:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8001f22:	f008 fe21 	bl	800ab68 <HAL_GPIO_Init>
  HAL_GPIO_Init(SDC_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001f26:	486c      	ldr	r0, [pc, #432]	; (80020d8 <main+0x324>)
 8001f28:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001f2a:	2711      	movs	r7, #17
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f2c:	e9cd 962d 	strd	r9, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f30:	e9cd 642f 	strd	r6, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(SDC_CTRL_GPIO_Port, &GPIO_InitStruct);
 8001f34:	f008 fe18 	bl	800ab68 <HAL_GPIO_Init>
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f38:	4868      	ldr	r0, [pc, #416]	; (80020dc <main+0x328>)
  GPIO_InitStruct.Pin = LAP_COUNTER_TRIGGER_Pin;
 8001f3a:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f3e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f40:	e9cd 742e 	strd	r7, r4, [sp, #184]	; 0xb8
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f44:	9430      	str	r4, [sp, #192]	; 0xc0
  HAL_GPIO_Init(LAP_COUNTER_TRIGGER_GPIO_Port, &GPIO_InitStruct);
 8001f46:	f008 fe0f 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001f4a:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001f4c:	4864      	ldr	r0, [pc, #400]	; (80020e0 <main+0x32c>)
 8001f4e:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001f50:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f54:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8001f58:	f008 fe06 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8001f5c:	2346      	movs	r3, #70	; 0x46
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f5e:	4861      	ldr	r0, [pc, #388]	; (80020e4 <main+0x330>)
  hdma2d.Instance = DMA2D;
 8001f60:	4f62      	ldr	r7, [pc, #392]	; (80020ec <main+0x338>)
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f62:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f64:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f68:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f6c:	f008 fdfc 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_LEFT_RED_BUTTON_Pin|STEERING_RIGHT_PADDLE_BUTTON_Pin;
 8001f70:	2390      	movs	r3, #144	; 0x90
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f72:	485c      	ldr	r0, [pc, #368]	; (80020e4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f74:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f76:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f78:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f7c:	f008 fdf4 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = DASHBOARD_NEUTRAL_LED_Pin;
 8001f80:	2310      	movs	r3, #16
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001f82:	4856      	ldr	r0, [pc, #344]	; (80020dc <main+0x328>)
 8001f84:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001f86:	f04f 0b80 	mov.w	fp, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f8a:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f8e:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(DASHBOARD_NEUTRAL_LED_GPIO_Port, &GPIO_InitStruct);
 8001f92:	f008 fde9 	bl	800ab68 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001f96:	4854      	ldr	r0, [pc, #336]	; (80020e8 <main+0x334>)
 8001f98:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001f9a:	e9cd b62d 	strd	fp, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001f9e:	e9cd 452f 	strd	r4, r5, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001fa2:	f008 fde1 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = STEERING_GREEN_BUTTON_Pin;
 8001fa6:	2320      	movs	r3, #32
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fa8:	484c      	ldr	r0, [pc, #304]	; (80020dc <main+0x328>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001faa:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fac:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fae:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_GREEN_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fb2:	f008 fdd9 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCP2515_CS_Pin;
 8001fb6:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001fb8:	484b      	ldr	r0, [pc, #300]	; (80020e8 <main+0x334>)
 8001fba:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001fbc:	e9cd 362d 	strd	r3, r6, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pin = STEERING_LEFT_PADDLE_BUTTON_Pin;
 8001fc0:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001fc4:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCP2515_CS_GPIO_Port, &GPIO_InitStruct);
 8001fc8:	f008 fdce 	bl	800ab68 <HAL_GPIO_Init>
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fcc:	a92d      	add	r1, sp, #180	; 0xb4
 8001fce:	4848      	ldr	r0, [pc, #288]	; (80020f0 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd0:	942f      	str	r4, [sp, #188]	; 0xbc
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fd2:	e9cd 842d 	strd	r8, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(STEERING_LEFT_PADDLE_BUTTON_GPIO_Port, &GPIO_InitStruct);
 8001fd6:	f008 fdc7 	bl	800ab68 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001fda:	4846      	ldr	r0, [pc, #280]	; (80020f4 <main+0x340>)
 8001fdc:	4a46      	ldr	r2, [pc, #280]	; (80020f8 <main+0x344>)
 8001fde:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001fe0:	f007 ffe0 	bl	8009fa4 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8001fe4:	4a45      	ldr	r2, [pc, #276]	; (80020fc <main+0x348>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 8001fe6:	e9c7 440a 	strd	r4, r4, [r7, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001fea:	e9c7 440c 	strd	r4, r4, [r7, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001fee:	4638      	mov	r0, r7
  hdma2d.Init.Mode = DMA2D_M2M;
 8001ff0:	e9c7 2400 	strd	r2, r4, [r7]
  hdma2d.Init.OutputOffset = 0;
 8001ff4:	e9c7 4402 	strd	r4, r4, [r7, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001ff8:	f008 f8e8 	bl	800a1cc <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001ffc:	4631      	mov	r1, r6
 8001ffe:	4638      	mov	r0, r7
 8002000:	f008 f99c 	bl	800a33c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8002004:	4622      	mov	r2, r4
 8002006:	4659      	mov	r1, fp
 8002008:	4837      	ldr	r0, [pc, #220]	; (80020e8 <main+0x334>)
  hdsi.Instance = DSI;
 800200a:	4f3d      	ldr	r7, [pc, #244]	; (8002100 <main+0x34c>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800200c:	f008 ff3a 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8002010:	2014      	movs	r0, #20
 8002012:	f007 ff4d 	bl	8009eb0 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 8002016:	4632      	mov	r2, r6
 8002018:	4659      	mov	r1, fp
 800201a:	4833      	ldr	r0, [pc, #204]	; (80020e8 <main+0x334>)
 800201c:	f008 ff32 	bl	800ae84 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8002020:	200a      	movs	r0, #10
 8002022:	f007 ff45 	bl	8009eb0 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 8002026:	2224      	movs	r2, #36	; 0x24
 8002028:	4621      	mov	r1, r4
 800202a:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 800202c:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800202e:	f024 fb89 	bl	8026744 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8002032:	2218      	movs	r2, #24
 8002034:	4621      	mov	r1, r4
 8002036:	a811      	add	r0, sp, #68	; 0x44
 8002038:	f024 fb84 	bl	8026744 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 800203c:	2234      	movs	r2, #52	; 0x34
 800203e:	4621      	mov	r1, r4
 8002040:	a82d      	add	r0, sp, #180	; 0xb4
 8002042:	f024 fb7f 	bl	8026744 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 8002046:	222c      	movs	r2, #44	; 0x2c
 8002048:	4621      	mov	r1, r4
 800204a:	eb0d 000b 	add.w	r0, sp, fp
 800204e:	f024 fb79 	bl	8026744 <memset>
  hdsi.Instance = DSI;
 8002052:	4a2c      	ldr	r2, [pc, #176]	; (8002104 <main+0x350>)
  PLLInit.PLLNDIV = 125;
 8002054:	217d      	movs	r1, #125	; 0x7d
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 8002056:	e9c7 2400 	strd	r2, r4, [r7]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 800205a:	e9cd 180e 	strd	r1, r8, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 800205e:	2204      	movs	r2, #4
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8002060:	a90e      	add	r1, sp, #56	; 0x38
 8002062:	4638      	mov	r0, r7
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8002064:	e9c7 2602 	strd	r2, r6, [r7, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8002068:	f008 fa30 	bl	800a4cc <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800206c:	a917      	add	r1, sp, #92	; 0x5c
 800206e:	4638      	mov	r0, r7
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 8002070:	e9cd 6417 	strd	r6, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 8002074:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8002078:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 800207c:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 8002080:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8002082:	f008 fc4f 	bl	800a924 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8002086:	231c      	movs	r3, #28
 8002088:	2121      	movs	r1, #33	; 0x21
 800208a:	e9cd 3111 	strd	r3, r1, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 800208e:	220f      	movs	r2, #15
 8002090:	2119      	movs	r1, #25
 8002092:	e9cd 2113 	strd	r2, r1, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8002096:	4638      	mov	r0, r7
 8002098:	a911      	add	r1, sp, #68	; 0x44
  PhyTimings.StopWaitTime = 0;
 800209a:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800209e:	f008 fc04 	bl	800a8aa <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80020a2:	2204      	movs	r2, #4
 80020a4:	4611      	mov	r1, r2
 80020a6:	4638      	mov	r0, r7
 80020a8:	f008 fbee 	bl	800a888 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80020ac:	f242 7110 	movw	r1, #10000	; 0x2710
 80020b0:	4638      	mov	r0, r7
 80020b2:	f008 fd42 	bl	800ab3a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80020b6:	4621      	mov	r1, r4
 80020b8:	4638      	mov	r0, r7
 80020ba:	f008 f9a4 	bl	800a406 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80020be:	f44f 7180 	mov.w	r1, #256	; 0x100
 80020c2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80020c6:	e9cd 132d 	strd	r1, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadOneP = DSI_LP_GSR1P_ENABLE;
 80020ca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80020ce:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80020d2:	e019      	b.n	8002108 <main+0x354>
 80020d4:	40023800 	.word	0x40023800
 80020d8:	40021800 	.word	0x40021800
 80020dc:	40020800 	.word	0x40020800
 80020e0:	40022800 	.word	0x40022800
 80020e4:	40020000 	.word	0x40020000
 80020e8:	40021c00 	.word	0x40021c00
 80020ec:	20005b38 	.word	0x20005b38
 80020f0:	40020400 	.word	0x40020400
 80020f4:	20005b30 	.word	0x20005b30
 80020f8:	40023000 	.word	0x40023000
 80020fc:	4002b000 	.word	0x4002b000
 8002100:	20005b78 	.word	0x20005b78
 8002104:	40016c00 	.word	0x40016c00
 8002108:	e9cd 1330 	strd	r1, r3, [sp, #192]	; 0xc0
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 800210c:	f8cd a0c8 	str.w	sl, [sp, #200]	; 0xc8
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8002110:	f44f 3180 	mov.w	r1, #65536	; 0x10000
 8002114:	f44f 4a80 	mov.w	sl, #16384	; 0x4000
 8002118:	e9cd a133 	strd	sl, r1, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800211c:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8002120:	f44f 2180 	mov.w	r1, #262144	; 0x40000
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8002124:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8002128:	e9cd 0135 	strd	r0, r1, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800212c:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8002130:	e9cd c137 	strd	ip, r1, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8002134:	4638      	mov	r0, r7
 8002136:	a92d      	add	r1, sp, #180	; 0xb4
  LPCmd.LPGenShortWriteTwoP = DSI_LP_GSW2P_ENABLE;
 8002138:	f8cd 90bc 	str.w	r9, [sp, #188]	; 0xbc
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800213c:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8002140:	f008 fb6e 	bl	800a820 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8002144:	f04f 0ec8 	mov.w	lr, #200	; 0xc8
 8002148:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 800214a:	eb0d 010b 	add.w	r1, sp, fp
 800214e:	4638      	mov	r0, r7
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8002150:	e9cd e322 	strd	lr, r3, [sp, #136]	; 0x88
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 8002154:	962a      	str	r6, [sp, #168]	; 0xa8
  CmdCfg.ColorCoding = DSI_RGB565;
 8002156:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 800215a:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800215e:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 8002162:	e9cd b428 	strd	fp, r4, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8002166:	f008 fae9 	bl	800a73c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 800216a:	4621      	mov	r1, r4
 800216c:	4638      	mov	r0, r7
 800216e:	f008 fad4 	bl	800a71a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8002172:	4875      	ldr	r0, [pc, #468]	; (8002348 <main+0x594>)
 8002174:	4b75      	ldr	r3, [pc, #468]	; (800234c <main+0x598>)
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8002176:	6084      	str	r4, [r0, #8]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 8002178:	2204      	movs	r2, #4
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 800217a:	e9c0 3400 	strd	r3, r4, [r0]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 800217e:	2320      	movs	r3, #32
 8002180:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8002184:	2140      	movs	r1, #64	; 0x40
 8002186:	f44f 73c0 	mov.w	r3, #384	; 0x180
 800218a:	e9c0 1305 	strd	r1, r3, [r0, #20]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800218e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002192:	a92d      	add	r1, sp, #180	; 0xb4
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8002194:	e9c0 3a09 	strd	r3, sl, [r0, #36]	; 0x24
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002198:	2307      	movs	r3, #7
  SdramTiming.SelfRefreshTime = 4;
 800219a:	e9cd 322e 	strd	r3, r2, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 800219e:	e9cd 3530 	strd	r3, r5, [sp, #192]	; 0xc0
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 80021a2:	e9c0 4407 	strd	r4, r4, [r0, #28]
  SdramTiming.RCDDelay = 2;
 80021a6:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 80021aa:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80021ae:	f00a fbd1 	bl	800c954 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80021b2:	f007 fd7f 	bl	8009cb4 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80021b6:	f007 fd2f 	bl	8009c18 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80021ba:	2234      	movs	r2, #52	; 0x34
 80021bc:	4621      	mov	r1, r4
 80021be:	eb0d 000b 	add.w	r0, sp, fp
 80021c2:	f024 fabf 	bl	8026744 <memset>
  hltdc.Instance = LTDC;
 80021c6:	4d62      	ldr	r5, [pc, #392]	; (8002350 <main+0x59c>)
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80021c8:	4862      	ldr	r0, [pc, #392]	; (8002354 <main+0x5a0>)
  hltdc.Init.Backcolor.Blue = 0;
 80021ca:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 80021cc:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80021d0:	e9c5 0300 	strd	r0, r3, [r5]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 80021d4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  hltdc.Init.AccumulatedActiveH = 482;
 80021d8:	f04f 0cca 	mov.w	ip, #202	; 0xca
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80021dc:	e9c5 3402 	strd	r3, r4, [r5, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 80021e0:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 80021e4:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80021e8:	f04f 0ecb 	mov.w	lr, #203	; 0xcb
 80021ec:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80021f0:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80021f2:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.HorizontalSync = 1;
 80021f6:	e9c5 4604 	strd	r4, r6, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80021fa:	e9c5 6806 	strd	r6, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80021fe:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8002202:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8002206:	f009 fb0b 	bl	800b820 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 800220a:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 800220c:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.WindowX1 = 200;
 8002210:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.FBStartAdress = 0xC0000000;
 8002212:	2105      	movs	r1, #5
 8002214:	f04f 4240 	mov.w	r2, #3221225472	; 0xc0000000
 8002218:	e9cd 1228 	strd	r1, r2, [sp, #160]	; 0xa0
  pLayerCfg.WindowY0 = 0;
 800221c:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  pLayerCfg.ImageWidth = 200;
 8002220:	22c8      	movs	r2, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 8002222:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  pLayerCfg.ImageHeight = 480;
 8002226:	e9cd 232a 	strd	r2, r3, [sp, #168]	; 0xa8
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800222a:	eb0d 010b 	add.w	r1, sp, fp
 800222e:	4622      	mov	r2, r4
 8002230:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8002232:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.WindowX0 = 0;
 8002236:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8002238:	f8cd 909c 	str.w	r9, [sp, #156]	; 0x9c
  pLayerCfg.Backcolor.Blue = 0;
 800223c:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 8002240:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8002244:	f009 fbb8 	bl	800b9b8 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8002248:	682a      	ldr	r2, [r5, #0]
 800224a:	6993      	ldr	r3, [r2, #24]
 800224c:	f023 0301 	bic.w	r3, r3, #1
 8002250:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 8002252:	4638      	mov	r0, r7
 8002254:	f008 fbcc 	bl	800a9f0 <HAL_DSI_Start>
  NT35510_Init(NT35510_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8002258:	4631      	mov	r1, r6
 800225a:	4640      	mov	r0, r8
 800225c:	f006 ff80 	bl	8009160 <NT35510_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPOFF, 0x00);
 8002260:	2328      	movs	r3, #40	; 0x28
 8002262:	2215      	movs	r2, #21
 8002264:	4621      	mov	r1, r4
 8002266:	4638      	mov	r0, r7
 8002268:	9400      	str	r4, [sp, #0]
 800226a:	f008 fbf4 	bl	800aa56 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 800226e:	a92d      	add	r1, sp, #180	; 0xb4
 8002270:	4638      	mov	r0, r7
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 8002272:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8002276:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 800227a:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 800227e:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 8002282:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8002286:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002288:	f008 faca 	bl	800a820 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 800228c:	f44f 7148 	mov.w	r1, #800	; 0x320
 8002290:	4622      	mov	r2, r4
 8002292:	4628      	mov	r0, r5
 8002294:	f009 fbbe 	bl	800ba14 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8002298:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 800229a:	482f      	ldr	r0, [pc, #188]	; (8002358 <main+0x5a4>)
  __HAL_LTDC_ENABLE(&hltdc);
 800229c:	6993      	ldr	r3, [r2, #24]
  hqspi.Init.FifoThreshold = 1;
 800229e:	6086      	str	r6, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 80022a0:	4333      	orrs	r3, r6
 80022a2:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80022a4:	4b2d      	ldr	r3, [pc, #180]	; (800235c <main+0x5a8>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80022a6:	4f2e      	ldr	r7, [pc, #184]	; (8002360 <main+0x5ac>)
  hqspi.Init.ClockPrescaler = 1;
 80022a8:	e9c0 3600 	strd	r3, r6, [r0]
  hqspi.Init.FlashSize = 27;
 80022ac:	2510      	movs	r5, #16
 80022ae:	231b      	movs	r3, #27
 80022b0:	e9c0 5303 	strd	r5, r3, [r0, #12]
  hi2c1.Instance = I2C1;
 80022b4:	4d2b      	ldr	r5, [pc, #172]	; (8002364 <main+0x5b0>)
  hi2c1.Init.ClockSpeed = 400000;
 80022b6:	4e2c      	ldr	r6, [pc, #176]	; (8002368 <main+0x5b4>)
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 80022b8:	e9c0 9405 	strd	r9, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80022bc:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80022c0:	f009 fcf2 	bl	800bca8 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80022c4:	f007 fb6e 	bl	80099a4 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80022c8:	f007 faa2 	bl	8009810 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80022cc:	f007 fa18 	bl	8009700 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80022d0:	4b26      	ldr	r3, [pc, #152]	; (800236c <main+0x5b8>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80022d2:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80022d4:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80022d6:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 80022da:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80022de:	e9c5 a404 	strd	sl, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80022e2:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80022e6:	f008 ffb7 	bl	800b258 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 80022ea:	4628      	mov	r0, r5
 80022ec:	f009 f85c 	bl	800b3a8 <HAL_I2C_DeInit>
  hspi2.Instance = SPI2;
 80022f0:	481f      	ldr	r0, [pc, #124]	; (8002370 <main+0x5bc>)
  hspi2.Init.Mode = SPI_MODE_MASTER;
 80022f2:	f44f 7382 	mov.w	r3, #260	; 0x104
 80022f6:	e9c0 7300 	strd	r7, r3, [r0]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 80022fa:	f44f 7300 	mov.w	r3, #512	; 0x200
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80022fe:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hspi2.Init.CRCPolynomial = 10;
 8002302:	230a      	movs	r3, #10
 8002304:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8002306:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 800230a:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800230e:	e9c0 4408 	strd	r4, r4, [r0, #32]
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8002312:	6284      	str	r4, [r0, #40]	; 0x28
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8002314:	f00a fb82 	bl	800ca1c <HAL_SPI_Init>
  MX_TouchGFX_Init();
 8002318:	f7fe fd04 	bl	8000d24 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 800231c:	f7fe fd01 	bl	8000d22 <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
 8002320:	f00a fe0c 	bl	800cf3c <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002324:	4a13      	ldr	r2, [pc, #76]	; (8002374 <main+0x5c0>)
 8002326:	4814      	ldr	r0, [pc, #80]	; (8002378 <main+0x5c4>)
 8002328:	4621      	mov	r1, r4
 800232a:	f00a fe33 	bl	800cf94 <osThreadNew>
 800232e:	4b13      	ldr	r3, [pc, #76]	; (800237c <main+0x5c8>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002330:	4a13      	ldr	r2, [pc, #76]	; (8002380 <main+0x5cc>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002332:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002334:	4621      	mov	r1, r4
 8002336:	4813      	ldr	r0, [pc, #76]	; (8002384 <main+0x5d0>)
 8002338:	f00a fe2c 	bl	800cf94 <osThreadNew>
 800233c:	4b12      	ldr	r3, [pc, #72]	; (8002388 <main+0x5d4>)
 800233e:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002340:	f00a fe0e 	bl	800cf60 <osKernelStart>
  while (1)
 8002344:	e7fe      	b.n	8002344 <main+0x590>
 8002346:	bf00      	nop
 8002348:	20005cdc 	.word	0x20005cdc
 800234c:	a0000140 	.word	0xa0000140
 8002350:	20005be8 	.word	0x20005be8
 8002354:	40016800 	.word	0x40016800
 8002358:	20005c90 	.word	0x20005c90
 800235c:	a0001000 	.word	0xa0001000
 8002360:	40003800 	.word	0x40003800
 8002364:	20005b94 	.word	0x20005b94
 8002368:	40005400 	.word	0x40005400
 800236c:	00061a80 	.word	0x00061a80
 8002370:	20005d10 	.word	0x20005d10
 8002374:	080280b4 	.word	0x080280b4
 8002378:	08001d09 	.word	0x08001d09
 800237c:	20005b28 	.word	0x20005b28
 8002380:	08028090 	.word	0x08028090
 8002384:	08000d33 	.word	0x08000d33
 8002388:	20005b20 	.word	0x20005b20

0800238c <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 800238c:	6802      	ldr	r2, [r0, #0]
 800238e:	4b03      	ldr	r3, [pc, #12]	; (800239c <HAL_TIM_PeriodElapsedCallback+0x10>)
 8002390:	429a      	cmp	r2, r3
 8002392:	d101      	bne.n	8002398 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002394:	f007 bd7a 	b.w	8009e8c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop
 800239c:	40001000 	.word	0x40001000

080023a0 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80023a0:	4770      	bx	lr
	...

080023a4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80023a4:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80023a6:	4b0e      	ldr	r3, [pc, #56]	; (80023e0 <HAL_MspInit+0x3c>)
 80023a8:	2200      	movs	r2, #0
 80023aa:	9200      	str	r2, [sp, #0]
 80023ac:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80023ae:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80023b2:	6459      	str	r1, [r3, #68]	; 0x44
 80023b4:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80023b6:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80023ba:	9100      	str	r1, [sp, #0]
 80023bc:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80023be:	9201      	str	r2, [sp, #4]
 80023c0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80023c2:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80023c6:	6419      	str	r1, [r3, #64]	; 0x40
 80023c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023ce:	9301      	str	r3, [sp, #4]
 80023d0:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80023d2:	210f      	movs	r1, #15
 80023d4:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80023d8:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80023da:	f007 bd8f 	b.w	8009efc <HAL_NVIC_SetPriority>
 80023de:	bf00      	nop
 80023e0:	40023800 	.word	0x40023800

080023e4 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80023e4:	6802      	ldr	r2, [r0, #0]
 80023e6:	4b09      	ldr	r3, [pc, #36]	; (800240c <HAL_CRC_MspInit+0x28>)
 80023e8:	429a      	cmp	r2, r3
{
 80023ea:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80023ec:	d10b      	bne.n	8002406 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80023ee:	2300      	movs	r3, #0
 80023f0:	9301      	str	r3, [sp, #4]
 80023f2:	4b07      	ldr	r3, [pc, #28]	; (8002410 <HAL_CRC_MspInit+0x2c>)
 80023f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80023f6:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80023fa:	631a      	str	r2, [r3, #48]	; 0x30
 80023fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80023fe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002402:	9301      	str	r3, [sp, #4]
 8002404:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002406:	b002      	add	sp, #8
 8002408:	4770      	bx	lr
 800240a:	bf00      	nop
 800240c:	40023000 	.word	0x40023000
 8002410:	40023800 	.word	0x40023800

08002414 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002414:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002416:	4b0f      	ldr	r3, [pc, #60]	; (8002454 <HAL_DMA2D_MspInit+0x40>)
 8002418:	6802      	ldr	r2, [r0, #0]
 800241a:	429a      	cmp	r2, r3
 800241c:	d116      	bne.n	800244c <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800241e:	2200      	movs	r2, #0
 8002420:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002424:	9201      	str	r2, [sp, #4]
 8002426:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002428:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 800242c:	6319      	str	r1, [r3, #48]	; 0x30
 800242e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002430:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002434:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002436:	2105      	movs	r1, #5
 8002438:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800243a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800243c:	f007 fd5e 	bl	8009efc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002440:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002442:	b003      	add	sp, #12
 8002444:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002448:	f007 bd8a 	b.w	8009f60 <HAL_NVIC_EnableIRQ>
}
 800244c:	b003      	add	sp, #12
 800244e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002452:	bf00      	nop
 8002454:	4002b000 	.word	0x4002b000

08002458 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8002458:	b510      	push	{r4, lr}
 800245a:	4604      	mov	r4, r0
 800245c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800245e:	2214      	movs	r2, #20
 8002460:	2100      	movs	r1, #0
 8002462:	a803      	add	r0, sp, #12
 8002464:	f024 f96e 	bl	8026744 <memset>
  if(hdsi->Instance==DSI)
 8002468:	6822      	ldr	r2, [r4, #0]
 800246a:	4b17      	ldr	r3, [pc, #92]	; (80024c8 <HAL_DSI_MspInit+0x70>)
 800246c:	429a      	cmp	r2, r3
 800246e:	d128      	bne.n	80024c2 <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8002470:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8002474:	2400      	movs	r4, #0
 8002476:	9401      	str	r4, [sp, #4]
 8002478:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 800247a:	4814      	ldr	r0, [pc, #80]	; (80024cc <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 800247c:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002480:	645a      	str	r2, [r3, #68]	; 0x44
 8002482:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002484:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8002488:	9201      	str	r2, [sp, #4]
 800248a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 800248c:	9402      	str	r4, [sp, #8]
 800248e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002490:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002494:	631a      	str	r2, [r3, #48]	; 0x30
 8002496:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002498:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800249c:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800249e:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 80024a0:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80024a2:	2302      	movs	r3, #2
 80024a4:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80024a8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 80024aa:	230d      	movs	r3, #13
 80024ac:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 80024ae:	f008 fb5b 	bl	800ab68 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 80024b2:	205c      	movs	r0, #92	; 0x5c
 80024b4:	4622      	mov	r2, r4
 80024b6:	2105      	movs	r1, #5
 80024b8:	f007 fd20 	bl	8009efc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 80024bc:	205c      	movs	r0, #92	; 0x5c
 80024be:	f007 fd4f 	bl	8009f60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 80024c2:	b008      	add	sp, #32
 80024c4:	bd10      	pop	{r4, pc}
 80024c6:	bf00      	nop
 80024c8:	40016c00 	.word	0x40016c00
 80024cc:	40022400 	.word	0x40022400

080024d0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80024d0:	b530      	push	{r4, r5, lr}
 80024d2:	4604      	mov	r4, r0
 80024d4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80024d6:	2214      	movs	r2, #20
 80024d8:	2100      	movs	r1, #0
 80024da:	a803      	add	r0, sp, #12
 80024dc:	f024 f932 	bl	8026744 <memset>
  if(hi2c->Instance==I2C1)
 80024e0:	6822      	ldr	r2, [r4, #0]
 80024e2:	4b1a      	ldr	r3, [pc, #104]	; (800254c <HAL_I2C_MspInit+0x7c>)
 80024e4:	429a      	cmp	r2, r3
 80024e6:	d12f      	bne.n	8002548 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024e8:	4c19      	ldr	r4, [pc, #100]	; (8002550 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80024ea:	481a      	ldr	r0, [pc, #104]	; (8002554 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 80024ec:	2500      	movs	r5, #0
 80024ee:	9501      	str	r5, [sp, #4]
 80024f0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80024f2:	f043 0302 	orr.w	r3, r3, #2
 80024f6:	6323      	str	r3, [r4, #48]	; 0x30
 80024f8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80024fa:	f003 0302 	and.w	r3, r3, #2
 80024fe:	9301      	str	r3, [sp, #4]
 8002500:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002502:	f44f 7240 	mov.w	r2, #768	; 0x300
 8002506:	2312      	movs	r3, #18
 8002508:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800250c:	2101      	movs	r1, #1
 800250e:	2303      	movs	r3, #3
 8002510:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002514:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002516:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002518:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800251a:	f008 fb25 	bl	800ab68 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 800251e:	9502      	str	r5, [sp, #8]
 8002520:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002522:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002526:	6423      	str	r3, [r4, #64]	; 0x40
 8002528:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800252a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800252e:	9302      	str	r3, [sp, #8]
 8002530:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8002532:	6a23      	ldr	r3, [r4, #32]
 8002534:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002538:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 800253a:	6a23      	ldr	r3, [r4, #32]
 800253c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002540:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8002542:	2064      	movs	r0, #100	; 0x64
 8002544:	f007 fcb4 	bl	8009eb0 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002548:	b009      	add	sp, #36	; 0x24
 800254a:	bd30      	pop	{r4, r5, pc}
 800254c:	40005400 	.word	0x40005400
 8002550:	40023800 	.word	0x40023800
 8002554:	40020400 	.word	0x40020400

08002558 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8002558:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 800255a:	6802      	ldr	r2, [r0, #0]
 800255c:	4b0a      	ldr	r3, [pc, #40]	; (8002588 <HAL_I2C_MspDeInit+0x30>)
 800255e:	429a      	cmp	r2, r3
 8002560:	d110      	bne.n	8002584 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8002562:	4a0a      	ldr	r2, [pc, #40]	; (800258c <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8002564:	480a      	ldr	r0, [pc, #40]	; (8002590 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8002566:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002568:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800256c:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 800256e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002572:	f008 fbdf 	bl	800ad34 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8002576:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 800257a:	4805      	ldr	r0, [pc, #20]	; (8002590 <HAL_I2C_MspDeInit+0x38>)
 800257c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002580:	f008 bbd8 	b.w	800ad34 <HAL_GPIO_DeInit>
}
 8002584:	bd08      	pop	{r3, pc}
 8002586:	bf00      	nop
 8002588:	40005400 	.word	0x40005400
 800258c:	40023800 	.word	0x40023800
 8002590:	40020400 	.word	0x40020400

08002594 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002594:	b510      	push	{r4, lr}
 8002596:	4604      	mov	r4, r0
 8002598:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 800259a:	223c      	movs	r2, #60	; 0x3c
 800259c:	2100      	movs	r1, #0
 800259e:	a801      	add	r0, sp, #4
 80025a0:	f024 f8d0 	bl	8026744 <memset>
  if(hltdc->Instance==LTDC)
 80025a4:	6822      	ldr	r2, [r4, #0]
 80025a6:	4b12      	ldr	r3, [pc, #72]	; (80025f0 <HAL_LTDC_MspInit+0x5c>)
 80025a8:	429a      	cmp	r2, r3
 80025aa:	d11f      	bne.n	80025ec <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80025ac:	2308      	movs	r3, #8
 80025ae:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 80025b0:	f44f 73b4 	mov.w	r3, #360	; 0x168
 80025b4:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80025b6:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 80025b8:	2306      	movs	r3, #6
 80025ba:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80025bc:	f009 feae 	bl	800c31c <HAL_RCCEx_PeriphCLKConfig>
 80025c0:	b108      	cbz	r0, 80025c6 <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 80025c2:	f7ff feed 	bl	80023a0 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025c6:	4b0b      	ldr	r3, [pc, #44]	; (80025f4 <HAL_LTDC_MspInit+0x60>)
 80025c8:	2200      	movs	r2, #0
 80025ca:	9200      	str	r2, [sp, #0]
 80025cc:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80025ce:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80025d2:	6459      	str	r1, [r3, #68]	; 0x44
 80025d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80025d6:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80025da:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025dc:	2058      	movs	r0, #88	; 0x58
 80025de:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 80025e0:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 80025e2:	f007 fc8b 	bl	8009efc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 80025e6:	2058      	movs	r0, #88	; 0x58
 80025e8:	f007 fcba 	bl	8009f60 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 80025ec:	b010      	add	sp, #64	; 0x40
 80025ee:	bd10      	pop	{r4, pc}
 80025f0:	40016800 	.word	0x40016800
 80025f4:	40023800 	.word	0x40023800

080025f8 <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 80025f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80025fa:	4604      	mov	r4, r0
 80025fc:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80025fe:	2214      	movs	r2, #20
 8002600:	2100      	movs	r1, #0
 8002602:	a803      	add	r0, sp, #12
 8002604:	f024 f89e 	bl	8026744 <memset>
  if(hqspi->Instance==QUADSPI)
 8002608:	6822      	ldr	r2, [r4, #0]
 800260a:	4b24      	ldr	r3, [pc, #144]	; (800269c <HAL_QSPI_MspInit+0xa4>)
 800260c:	429a      	cmp	r2, r3
 800260e:	d142      	bne.n	8002696 <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002610:	4b23      	ldr	r3, [pc, #140]	; (80026a0 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002612:	4824      	ldr	r0, [pc, #144]	; (80026a4 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002614:	2400      	movs	r4, #0
 8002616:	9400      	str	r4, [sp, #0]
 8002618:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800261a:	f042 0202 	orr.w	r2, r2, #2
 800261e:	639a      	str	r2, [r3, #56]	; 0x38
 8002620:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002622:	f002 0202 	and.w	r2, r2, #2
 8002626:	9200      	str	r2, [sp, #0]
 8002628:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800262a:	9401      	str	r4, [sp, #4]
 800262c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800262e:	f042 0202 	orr.w	r2, r2, #2
 8002632:	631a      	str	r2, [r3, #48]	; 0x30
 8002634:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002636:	f002 0202 	and.w	r2, r2, #2
 800263a:	9201      	str	r2, [sp, #4]
 800263c:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800263e:	9402      	str	r4, [sp, #8]
 8002640:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002642:	f042 0220 	orr.w	r2, r2, #32
 8002646:	631a      	str	r2, [r3, #48]	; 0x30
 8002648:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800264a:	f003 0320 	and.w	r3, r3, #32
 800264e:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002650:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002652:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002654:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002656:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002658:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800265a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800265c:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002660:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002664:	f008 fa80 	bl	800ab68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8002668:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800266c:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002670:	480d      	ldr	r0, [pc, #52]	; (80026a8 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8002672:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002674:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8002676:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002678:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800267c:	f008 fa74 	bl	800ab68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8002680:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002684:	4808      	ldr	r0, [pc, #32]	; (80026a8 <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002686:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002688:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800268a:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800268e:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002692:	f008 fa69 	bl	800ab68 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8002696:	b009      	add	sp, #36	; 0x24
 8002698:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800269a:	bf00      	nop
 800269c:	a0001000 	.word	0xa0001000
 80026a0:	40023800 	.word	0x40023800
 80026a4:	40020400 	.word	0x40020400
 80026a8:	40021400 	.word	0x40021400

080026ac <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 80026ac:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 80026ae:	6802      	ldr	r2, [r0, #0]
 80026b0:	4b09      	ldr	r3, [pc, #36]	; (80026d8 <HAL_QSPI_MspDeInit+0x2c>)
 80026b2:	429a      	cmp	r2, r3
 80026b4:	d10f      	bne.n	80026d6 <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 80026b6:	4a09      	ldr	r2, [pc, #36]	; (80026dc <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80026b8:	4809      	ldr	r0, [pc, #36]	; (80026e0 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 80026ba:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80026bc:	f023 0302 	bic.w	r3, r3, #2
 80026c0:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 80026c2:	2140      	movs	r1, #64	; 0x40
 80026c4:	f008 fb36 	bl	800ad34 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 80026c8:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 80026cc:	4805      	ldr	r0, [pc, #20]	; (80026e4 <HAL_QSPI_MspDeInit+0x38>)
 80026ce:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 80026d2:	f008 bb2f 	b.w	800ad34 <HAL_GPIO_DeInit>
}
 80026d6:	bd08      	pop	{r3, pc}
 80026d8:	a0001000 	.word	0xa0001000
 80026dc:	40023800 	.word	0x40023800
 80026e0:	40020400 	.word	0x40020400
 80026e4:	40021400 	.word	0x40021400

080026e8 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 80026e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026ea:	4604      	mov	r4, r0
 80026ec:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80026ee:	2214      	movs	r2, #20
 80026f0:	2100      	movs	r1, #0
 80026f2:	a803      	add	r0, sp, #12
 80026f4:	f024 f826 	bl	8026744 <memset>
  if(hspi->Instance==SPI2)
 80026f8:	6822      	ldr	r2, [r4, #0]
 80026fa:	4b1e      	ldr	r3, [pc, #120]	; (8002774 <HAL_SPI_MspInit+0x8c>)
 80026fc:	429a      	cmp	r2, r3
 80026fe:	d137      	bne.n	8002770 <HAL_SPI_MspInit+0x88>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8002700:	f503 3300 	add.w	r3, r3, #131072	; 0x20000
 8002704:	2400      	movs	r4, #0
 8002706:	9400      	str	r4, [sp, #0]
 8002708:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    GPIO_InitStruct.Pin = GPIO_PIN_3;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800270a:	481b      	ldr	r0, [pc, #108]	; (8002778 <HAL_SPI_MspInit+0x90>)
    __HAL_RCC_SPI2_CLK_ENABLE();
 800270c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8002710:	641a      	str	r2, [r3, #64]	; 0x40
 8002712:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002714:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 8002718:	9200      	str	r2, [sp, #0]
 800271a:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800271c:	9401      	str	r4, [sp, #4]
 800271e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002720:	f042 0208 	orr.w	r2, r2, #8
 8002724:	631a      	str	r2, [r3, #48]	; 0x30
 8002726:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002728:	f002 0208 	and.w	r2, r2, #8
 800272c:	9201      	str	r2, [sp, #4]
 800272e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002730:	9402      	str	r4, [sp, #8]
 8002732:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002734:	f042 0202 	orr.w	r2, r2, #2
 8002738:	631a      	str	r2, [r3, #48]	; 0x30
 800273a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800273c:	f003 0302 	and.w	r3, r3, #2
 8002740:	9302      	str	r3, [sp, #8]
 8002742:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002744:	2702      	movs	r7, #2
 8002746:	2308      	movs	r3, #8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002748:	2603      	movs	r6, #3
 800274a:	2505      	movs	r5, #5
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800274c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800274e:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002752:	e9cd 6506 	strd	r6, r5, [sp, #24]
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002756:	f008 fa07 	bl	800ab68 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 800275a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800275e:	4807      	ldr	r0, [pc, #28]	; (800277c <HAL_SPI_MspInit+0x94>)
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8002760:	9507      	str	r5, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002762:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002764:	e9cd 3703 	strd	r3, r7, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002768:	e9cd 4605 	strd	r4, r6, [sp, #20]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800276c:	f008 f9fc 	bl	800ab68 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI2_MspInit 1 */

  /* USER CODE END SPI2_MspInit 1 */
  }

}
 8002770:	b009      	add	sp, #36	; 0x24
 8002772:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002774:	40003800 	.word	0x40003800
 8002778:	40020c00 	.word	0x40020c00
 800277c:	40020400 	.word	0x40020400

08002780 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002782:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002784:	2300      	movs	r3, #0
 8002786:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002788:	4b30      	ldr	r3, [pc, #192]	; (800284c <HAL_SDRAM_MspInit+0xcc>)
 800278a:	681c      	ldr	r4, [r3, #0]
 800278c:	2c00      	cmp	r4, #0
 800278e:	d15a      	bne.n	8002846 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8002790:	2201      	movs	r2, #1
 8002792:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002794:	4b2e      	ldr	r3, [pc, #184]	; (8002850 <HAL_SDRAM_MspInit+0xd0>)
 8002796:	9400      	str	r4, [sp, #0]
 8002798:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800279a:	482e      	ldr	r0, [pc, #184]	; (8002854 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 800279c:	f042 0201 	orr.w	r2, r2, #1
 80027a0:	639a      	str	r2, [r3, #56]	; 0x38
 80027a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80027a4:	f003 0301 	and.w	r3, r3, #1
 80027a8:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027aa:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027ac:	2603      	movs	r6, #3
 80027ae:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80027b0:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80027b2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027b4:	f64f 7383 	movw	r3, #65411	; 0xff83
 80027b8:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027bc:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80027c0:	f008 f9d2 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 80027c4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027c8:	4823      	ldr	r0, [pc, #140]	; (8002858 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027ca:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027cc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027ce:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027d2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80027d6:	f008 f9c7 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 80027da:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027de:	481f      	ldr	r0, [pc, #124]	; (800285c <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027e0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027e2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027e4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027e8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80027ec:	f008 f9bc 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 80027f0:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80027f4:	481a      	ldr	r0, [pc, #104]	; (8002860 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80027f6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80027f8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80027fa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80027fe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002802:	f008 f9b1 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002806:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800280a:	4816      	ldr	r0, [pc, #88]	; (8002864 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800280c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800280e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002810:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002814:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002818:	f008 f9a6 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 800281c:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002820:	4811      	ldr	r0, [pc, #68]	; (8002868 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002822:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002824:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002826:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800282a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800282e:	f008 f99b 	bl	800ab68 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8002832:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002834:	480d      	ldr	r0, [pc, #52]	; (800286c <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002836:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002838:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800283a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800283e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002842:	f008 f991 	bl	800ab68 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002846:	b007      	add	sp, #28
 8002848:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800284a:	bf00      	nop
 800284c:	20005d70 	.word	0x20005d70
 8002850:	40023800 	.word	0x40023800
 8002854:	40021000 	.word	0x40021000
 8002858:	40021800 	.word	0x40021800
 800285c:	40020c00 	.word	0x40020c00
 8002860:	40022000 	.word	0x40022000
 8002864:	40021400 	.word	0x40021400
 8002868:	40021c00 	.word	0x40021c00
 800286c:	40020800 	.word	0x40020800

08002870 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8002870:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8002872:	4b17      	ldr	r3, [pc, #92]	; (80028d0 <HAL_SDRAM_MspDeInit+0x60>)
 8002874:	681a      	ldr	r2, [r3, #0]
 8002876:	bb52      	cbnz	r2, 80028ce <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8002878:	2201      	movs	r2, #1
 800287a:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 800287c:	4a15      	ldr	r2, [pc, #84]	; (80028d4 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 800287e:	4816      	ldr	r0, [pc, #88]	; (80028d8 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8002880:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002882:	f023 0301 	bic.w	r3, r3, #1
 8002886:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002888:	f64f 7183 	movw	r1, #65411	; 0xff83
 800288c:	f008 fa52 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002890:	4812      	ldr	r0, [pc, #72]	; (80028dc <HAL_SDRAM_MspDeInit+0x6c>)
 8002892:	f248 1133 	movw	r1, #33075	; 0x8133
 8002896:	f008 fa4d 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 800289a:	4811      	ldr	r0, [pc, #68]	; (80028e0 <HAL_SDRAM_MspDeInit+0x70>)
 800289c:	f24c 7103 	movw	r1, #50947	; 0xc703
 80028a0:	f008 fa48 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 80028a4:	480f      	ldr	r0, [pc, #60]	; (80028e4 <HAL_SDRAM_MspDeInit+0x74>)
 80028a6:	f240 61ff 	movw	r1, #1791	; 0x6ff
 80028aa:	f008 fa43 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80028ae:	480e      	ldr	r0, [pc, #56]	; (80028e8 <HAL_SDRAM_MspDeInit+0x78>)
 80028b0:	f64f 013f 	movw	r1, #63551	; 0xf83f
 80028b4:	f008 fa3e 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 80028b8:	480c      	ldr	r0, [pc, #48]	; (80028ec <HAL_SDRAM_MspDeInit+0x7c>)
 80028ba:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 80028be:	f008 fa39 	bl	800ad34 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 80028c2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 80028c6:	480a      	ldr	r0, [pc, #40]	; (80028f0 <HAL_SDRAM_MspDeInit+0x80>)
 80028c8:	210d      	movs	r1, #13
 80028ca:	f008 ba33 	b.w	800ad34 <HAL_GPIO_DeInit>
}
 80028ce:	bd08      	pop	{r3, pc}
 80028d0:	20005d6c 	.word	0x20005d6c
 80028d4:	40023800 	.word	0x40023800
 80028d8:	40021000 	.word	0x40021000
 80028dc:	40021800 	.word	0x40021800
 80028e0:	40020c00 	.word	0x40020c00
 80028e4:	40022000 	.word	0x40022000
 80028e8:	40021400 	.word	0x40021400
 80028ec:	40021c00 	.word	0x40021c00
 80028f0:	40020800 	.word	0x40020800

080028f4 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80028f4:	b570      	push	{r4, r5, r6, lr}
 80028f6:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 80028f8:	2300      	movs	r3, #0
 80028fa:	9302      	str	r3, [sp, #8]
 80028fc:	4b20      	ldr	r3, [pc, #128]	; (8002980 <HAL_InitTick+0x8c>)
 80028fe:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002900:	f042 0210 	orr.w	r2, r2, #16
 8002904:	641a      	str	r2, [r3, #64]	; 0x40
 8002906:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002908:	f003 0310 	and.w	r3, r3, #16
 800290c:	9302      	str	r3, [sp, #8]
{
 800290e:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002910:	a901      	add	r1, sp, #4
 8002912:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002914:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002916:	f009 fce3 	bl	800c2e0 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 800291a:	9b06      	ldr	r3, [sp, #24]
 800291c:	bb4b      	cbnz	r3, 8002972 <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800291e:	f009 fccf 	bl	800c2c0 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002922:	4e18      	ldr	r6, [pc, #96]	; (8002984 <HAL_InitTick+0x90>)
 8002924:	4b18      	ldr	r3, [pc, #96]	; (8002988 <HAL_InitTick+0x94>)
 8002926:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002928:	f240 33e7 	movw	r3, #999	; 0x3e7
 800292c:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800292e:	4b17      	ldr	r3, [pc, #92]	; (800298c <HAL_InitTick+0x98>)
 8002930:	fbb0 f3f3 	udiv	r3, r0, r3
 8002934:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002936:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002938:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 800293a:	2300      	movs	r3, #0
 800293c:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800293e:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002940:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002942:	f00a fa0f 	bl	800cd64 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002946:	4604      	mov	r4, r0
 8002948:	b980      	cbnz	r0, 800296c <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 800294a:	4630      	mov	r0, r6
 800294c:	f00a f8c4 	bl	800cad8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002950:	4604      	mov	r4, r0
 8002952:	b958      	cbnz	r0, 800296c <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002954:	2036      	movs	r0, #54	; 0x36
 8002956:	f007 fb03 	bl	8009f60 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800295a:	2d0f      	cmp	r5, #15
 800295c:	d80d      	bhi.n	800297a <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 800295e:	4622      	mov	r2, r4
 8002960:	4629      	mov	r1, r5
 8002962:	2036      	movs	r0, #54	; 0x36
 8002964:	f007 faca 	bl	8009efc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002968:	4b09      	ldr	r3, [pc, #36]	; (8002990 <HAL_InitTick+0x9c>)
 800296a:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 800296c:	4620      	mov	r0, r4
 800296e:	b008      	add	sp, #32
 8002970:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002972:	f009 fca5 	bl	800c2c0 <HAL_RCC_GetPCLK1Freq>
 8002976:	0040      	lsls	r0, r0, #1
 8002978:	e7d3      	b.n	8002922 <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 800297a:	2401      	movs	r4, #1
 800297c:	e7f6      	b.n	800296c <HAL_InitTick+0x78>
 800297e:	bf00      	nop
 8002980:	40023800 	.word	0x40023800
 8002984:	20005d74 	.word	0x20005d74
 8002988:	40001000 	.word	0x40001000
 800298c:	000f4240 	.word	0x000f4240
 8002990:	20000058 	.word	0x20000058

08002994 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002994:	4770      	bx	lr

08002996 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002996:	e7fe      	b.n	8002996 <HardFault_Handler>

08002998 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002998:	e7fe      	b.n	8002998 <MemManage_Handler>

0800299a <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800299a:	e7fe      	b.n	800299a <BusFault_Handler>

0800299c <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800299c:	e7fe      	b.n	800299c <UsageFault_Handler>

0800299e <DebugMon_Handler>:
 800299e:	4770      	bx	lr

080029a0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80029a0:	4801      	ldr	r0, [pc, #4]	; (80029a8 <TIM6_DAC_IRQHandler+0x8>)
 80029a2:	f00a b8d7 	b.w	800cb54 <HAL_TIM_IRQHandler>
 80029a6:	bf00      	nop
 80029a8:	20005d74 	.word	0x20005d74

080029ac <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80029ac:	4801      	ldr	r0, [pc, #4]	; (80029b4 <LTDC_IRQHandler+0x8>)
 80029ae:	f008 bfa6 	b.w	800b8fe <HAL_LTDC_IRQHandler>
 80029b2:	bf00      	nop
 80029b4:	20005be8 	.word	0x20005be8

080029b8 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80029b8:	4801      	ldr	r0, [pc, #4]	; (80029c0 <DMA2D_IRQHandler+0x8>)
 80029ba:	f007 bc35 	b.w	800a228 <HAL_DMA2D_IRQHandler>
 80029be:	bf00      	nop
 80029c0:	20005b38 	.word	0x20005b38

080029c4 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 80029c4:	4801      	ldr	r0, [pc, #4]	; (80029cc <DSI_IRQHandler+0x8>)
 80029c6:	f007 be36 	b.w	800a636 <HAL_DSI_IRQHandler>
 80029ca:	bf00      	nop
 80029cc:	20005b78 	.word	0x20005b78

080029d0 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 80029d0:	2001      	movs	r0, #1
 80029d2:	4770      	bx	lr

080029d4 <_kill>:

int _kill(int pid, int sig)
{
 80029d4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029d6:	f023 fe5b 	bl	8026690 <__errno>
 80029da:	2316      	movs	r3, #22
 80029dc:	6003      	str	r3, [r0, #0]
	return -1;
}
 80029de:	f04f 30ff 	mov.w	r0, #4294967295
 80029e2:	bd08      	pop	{r3, pc}

080029e4 <_exit>:

void _exit (int status)
{
 80029e4:	b508      	push	{r3, lr}
	errno = EINVAL;
 80029e6:	f023 fe53 	bl	8026690 <__errno>
 80029ea:	2316      	movs	r3, #22
 80029ec:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 80029ee:	e7fe      	b.n	80029ee <_exit+0xa>

080029f0 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80029f0:	b570      	push	{r4, r5, r6, lr}
 80029f2:	460d      	mov	r5, r1
 80029f4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80029f6:	460e      	mov	r6, r1
 80029f8:	1b73      	subs	r3, r6, r5
 80029fa:	429c      	cmp	r4, r3
 80029fc:	dc01      	bgt.n	8002a02 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 80029fe:	4620      	mov	r0, r4
 8002a00:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002a02:	f3af 8000 	nop.w
 8002a06:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a0a:	e7f5      	b.n	80029f8 <_read+0x8>

08002a0c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002a0c:	b570      	push	{r4, r5, r6, lr}
 8002a0e:	460d      	mov	r5, r1
 8002a10:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a12:	460e      	mov	r6, r1
 8002a14:	1b73      	subs	r3, r6, r5
 8002a16:	429c      	cmp	r4, r3
 8002a18:	dc01      	bgt.n	8002a1e <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002a1a:	4620      	mov	r0, r4
 8002a1c:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002a1e:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002a22:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002a26:	e7f5      	b.n	8002a14 <_write+0x8>

08002a28 <_close>:

int _close(int file)
{
	return -1;
}
 8002a28:	f04f 30ff 	mov.w	r0, #4294967295
 8002a2c:	4770      	bx	lr

08002a2e <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002a2e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002a32:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002a34:	2000      	movs	r0, #0
 8002a36:	4770      	bx	lr

08002a38 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002a38:	2001      	movs	r0, #1
 8002a3a:	4770      	bx	lr

08002a3c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002a3c:	2000      	movs	r0, #0
 8002a3e:	4770      	bx	lr

08002a40 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002a40:	4a0a      	ldr	r2, [pc, #40]	; (8002a6c <_sbrk+0x2c>)
 8002a42:	6811      	ldr	r1, [r2, #0]
{
 8002a44:	b508      	push	{r3, lr}
 8002a46:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002a48:	b909      	cbnz	r1, 8002a4e <_sbrk+0xe>
		heap_end = &end;
 8002a4a:	4909      	ldr	r1, [pc, #36]	; (8002a70 <_sbrk+0x30>)
 8002a4c:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002a4e:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002a50:	4669      	mov	r1, sp
 8002a52:	4403      	add	r3, r0
 8002a54:	428b      	cmp	r3, r1
 8002a56:	d906      	bls.n	8002a66 <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002a58:	f023 fe1a 	bl	8026690 <__errno>
 8002a5c:	230c      	movs	r3, #12
 8002a5e:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002a60:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8002a64:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8002a66:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002a68:	e7fc      	b.n	8002a64 <_sbrk+0x24>
 8002a6a:	bf00      	nop
 8002a6c:	20005dbc 	.word	0x20005dbc
 8002a70:	2000fa18 	.word	0x2000fa18

08002a74 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId PRIMARYDRIVERINFO = 7;   // verdana_180_4bpp
    static const touchgfx::FontId SECONDARYDRIVERINFO = 8; // verdana_57_4bpp
    static const uint16_t NUMBER_OF_FONTS = 9;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8002a74:	4770      	bx	lr

08002a76 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 8002a76:	b508      	push	{r3, lr}
    switch (typography)
 8002a78:	2909      	cmp	r1, #9
 8002a7a:	d82a      	bhi.n	8002ad2 <_ZN23ApplicationFontProvider7getFontEt+0x5c>
 8002a7c:	e8df f001 	tbb	[pc, r1]
 8002a80:	0d090519 	.word	0x0d090519
 8002a84:	1d191511 	.word	0x1d191511
 8002a88:	2521      	.short	0x2521
    case Typography::LARGE:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002a8a:	f005 fb7b 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002a8e:	6840      	ldr	r0, [r0, #4]
        // verdana_57_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
    default:
        return 0;
    }
}
 8002a90:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002a92:	f005 fb77 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002a96:	6880      	ldr	r0, [r0, #8]
 8002a98:	e7fa      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 8002a9a:	f005 fb73 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002a9e:	68c0      	ldr	r0, [r0, #12]
 8002aa0:	e7f6      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
 8002aa2:	f005 fb6f 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002aa6:	6900      	ldr	r0, [r0, #16]
 8002aa8:	e7f2      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[5]);
 8002aaa:	f005 fb6b 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002aae:	6940      	ldr	r0, [r0, #20]
 8002ab0:	e7ee      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002ab2:	f005 fb67 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002ab6:	6800      	ldr	r0, [r0, #0]
 8002ab8:	e7ea      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[6]);
 8002aba:	f005 fb63 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002abe:	6980      	ldr	r0, [r0, #24]
 8002ac0:	e7e6      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[7]);
 8002ac2:	f005 fb5f 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002ac6:	69c0      	ldr	r0, [r0, #28]
 8002ac8:	e7e2      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[8]);
 8002aca:	f005 fb5b 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8002ace:	6a00      	ldr	r0, [r0, #32]
 8002ad0:	e7de      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>
    switch (typography)
 8002ad2:	2000      	movs	r0, #0
 8002ad4:	e7dc      	b.n	8002a90 <_ZN23ApplicationFontProvider7getFontEt+0x1a>

08002ad6 <_ZN23ApplicationFontProviderD0Ev>:
 8002ad6:	b510      	push	{r4, lr}
 8002ad8:	2104      	movs	r1, #4
 8002ada:	4604      	mov	r4, r0
 8002adc:	f023 fd78 	bl	80265d0 <_ZdlPvj>
 8002ae0:	4620      	mov	r0, r4
 8002ae2:	bd10      	pop	{r4, pc}

08002ae4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002ae4:	4800      	ldr	r0, [pc, #0]	; (8002ae8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002ae6:	4770      	bx	lr
 8002ae8:	080280ec 	.word	0x080280ec

08002aec <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8002aec:	201b      	movs	r0, #27
 8002aee:	4770      	bx	lr

08002af0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002af0:	b513      	push	{r0, r1, r4, lr}
 8002af2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002af4:	b151      	cbz	r1, 8002b0c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002af6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002af8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002afa:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002afe:	aa01      	add	r2, sp, #4
 8002b00:	689c      	ldr	r4, [r3, #8]
 8002b02:	f10d 0303 	add.w	r3, sp, #3
 8002b06:	47a0      	blx	r4
        return glyph;
    }
 8002b08:	b002      	add	sp, #8
 8002b0a:	bd10      	pop	{r4, pc}
            return 0;
 8002b0c:	4608      	mov	r0, r1
 8002b0e:	e7fb      	b.n	8002b08 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002b10 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002b10:	89c0      	ldrh	r0, [r0, #14]
 8002b12:	4770      	bx	lr

08002b14 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002b14:	8a00      	ldrh	r0, [r0, #16]
 8002b16:	4770      	bx	lr

08002b18 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8002b18:	88c0      	ldrh	r0, [r0, #6]
 8002b1a:	4770      	bx	lr

08002b1c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8002b1c:	8880      	ldrh	r0, [r0, #4]
 8002b1e:	4770      	bx	lr

08002b20 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002b20:	7a80      	ldrb	r0, [r0, #10]
    }
 8002b22:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002b26:	4770      	bx	lr

08002b28 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8002b28:	7a80      	ldrb	r0, [r0, #10]
    }
 8002b2a:	09c0      	lsrs	r0, r0, #7
 8002b2c:	4770      	bx	lr

08002b2e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002b2e:	4770      	bx	lr

08002b30 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002b30:	4770      	bx	lr

08002b32 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002b32:	4770      	bx	lr

08002b34 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002b34:	4770      	bx	lr

08002b36 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002b36:	4770      	bx	lr

08002b38 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002b38:	4770      	bx	lr

08002b3a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002b3a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002b3c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8002b3e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002b40:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b42:	466d      	mov	r5, sp
 8002b44:	4601      	mov	r1, r0
 8002b46:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002b4a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002b4c:	4628      	mov	r0, r5
 8002b4e:	4798      	blx	r3
 8002b50:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b54:	343c      	adds	r4, #60	; 0x3c
 8002b56:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002b5a:	b005      	add	sp, #20
 8002b5c:	bd30      	pop	{r4, r5, pc}

08002b5e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002b5e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002b60:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002b62:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002b64:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002b66:	466d      	mov	r5, sp
 8002b68:	4601      	mov	r1, r0
 8002b6a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002b6e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002b70:	4628      	mov	r0, r5
 8002b72:	4798      	blx	r3
 8002b74:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002b78:	343c      	adds	r4, #60	; 0x3c
 8002b7a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002b7e:	b005      	add	sp, #20
 8002b80:	bd30      	pop	{r4, r5, pc}

08002b82 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002b82:	2200      	movs	r2, #0
 8002b84:	8002      	strh	r2, [r0, #0]
 8002b86:	8042      	strh	r2, [r0, #2]
 8002b88:	8082      	strh	r2, [r0, #4]
 8002b8a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002b8c:	4770      	bx	lr

08002b8e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b8e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002b92:	4770      	bx	lr

08002b94 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b94:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002b96:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b98:	4604      	mov	r4, r0
        setX(x);
 8002b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002b9c:	4615      	mov	r5, r2
        setX(x);
 8002b9e:	4798      	blx	r3
        setBaselineY(baselineY);
 8002ba0:	6823      	ldr	r3, [r4, #0]
 8002ba2:	4629      	mov	r1, r5
 8002ba4:	4620      	mov	r0, r4
 8002ba6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002ba8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002bac:	4718      	bx	r3

08002bae <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002bae:	2000      	movs	r0, #0
 8002bb0:	4770      	bx	lr

08002bb2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002bb2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002bb4:	4770      	bx	lr

08002bb6 <_ZN25CompetitionScreenViewBaseD1Ev>:
}

CompetitionScreenViewBase::~CompetitionScreenViewBase()
{

}
 8002bb6:	4770      	bx	lr

08002bb8 <_ZN25CompetitionScreenViewBase11setupScreenEv>:

void CompetitionScreenViewBase::setupScreen()
{

}
 8002bb8:	4770      	bx	lr

08002bba <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type, typename T1>
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002bba:	4770      	bx	lr

08002bbc <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002bbc:	4770      	bx	lr

08002bbe <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
     *
     * @param  t1 This value will be passed as the first argument in the function call.
     *
     * @see isValid
     */
    virtual void execute(T1 t1)
 8002bbe:	b430      	push	{r4, r5}
    {
        (pobject->*pmemfun)(t1);
 8002bc0:	68c2      	ldr	r2, [r0, #12]
 8002bc2:	6844      	ldr	r4, [r0, #4]
 8002bc4:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002bc6:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002bc8:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002bcc:	07d2      	lsls	r2, r2, #31
 8002bce:	bf48      	it	mi
 8002bd0:	5962      	ldrmi	r2, [r4, r5]
 8002bd2:	689b      	ldr	r3, [r3, #8]
    }
 8002bd4:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002bd6:	bf48      	it	mi
 8002bd8:	58d3      	ldrmi	r3, [r2, r3]
 8002bda:	4718      	bx	r3

08002bdc <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
     *
     * @return true if valid, false if not.
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002bdc:	6843      	ldr	r3, [r0, #4]
 8002bde:	b12b      	cbz	r3, 8002bec <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002be0:	6883      	ldr	r3, [r0, #8]
 8002be2:	b92b      	cbnz	r3, 8002bf0 <_ZNK8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002be4:	68c0      	ldr	r0, [r0, #12]
 8002be6:	f000 0001 	and.w	r0, r0, #1
 8002bea:	4770      	bx	lr
 8002bec:	4618      	mov	r0, r3
 8002bee:	4770      	bx	lr
 8002bf0:	2001      	movs	r0, #1
    }
 8002bf2:	4770      	bx	lr

08002bf4 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002bf4:	b510      	push	{r4, lr}
    }
 8002bf6:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002bf8:	4604      	mov	r4, r0
    }
 8002bfa:	f023 fce9 	bl	80265d0 <_ZdlPvj>
 8002bfe:	4620      	mov	r0, r4
 8002c00:	bd10      	pop	{r4, pc}

08002c02 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002c02:	b510      	push	{r4, lr}
 8002c04:	214c      	movs	r1, #76	; 0x4c
 8002c06:	4604      	mov	r4, r0
 8002c08:	f023 fce2 	bl	80265d0 <_ZdlPvj>
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	bd10      	pop	{r4, pc}

08002c10 <_ZN8touchgfx8CallbackI25CompetitionScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002c10:	b510      	push	{r4, lr}
 8002c12:	2110      	movs	r1, #16
 8002c14:	4604      	mov	r4, r0
 8002c16:	f023 fcdb 	bl	80265d0 <_ZdlPvj>
 8002c1a:	4620      	mov	r0, r4
 8002c1c:	bd10      	pop	{r4, pc}

08002c1e <_ZN25CompetitionScreenViewBaseD0Ev>:
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 8002c1e:	b510      	push	{r4, lr}
}
 8002c20:	f44f 71a8 	mov.w	r1, #336	; 0x150
CompetitionScreenViewBase::~CompetitionScreenViewBase()
 8002c24:	4604      	mov	r4, r0
}
 8002c26:	f023 fcd3 	bl	80265d0 <_ZdlPvj>
 8002c2a:	4620      	mov	r0, r4
 8002c2c:	bd10      	pop	{r4, pc}

08002c2e <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8002c2e:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8002c30:	f7ff f81f 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8002c34:	bd08      	pop	{r3, pc}
	...

08002c38 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c38:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c3a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c3c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002c3e:	4b12      	ldr	r3, [pc, #72]	; (8002c88 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002c40:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002c42:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c44:	b28d      	uxth	r5, r1
 8002c46:	b92b      	cbnz	r3, 8002c54 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002c48:	4b10      	ldr	r3, [pc, #64]	; (8002c8c <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002c4a:	4a11      	ldr	r2, [pc, #68]	; (8002c90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c4c:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c4e:	4811      	ldr	r0, [pc, #68]	; (8002c94 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002c50:	f023 fcec 	bl	802662c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002c54:	4910      	ldr	r1, [pc, #64]	; (8002c98 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002c56:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002c58:	8809      	ldrh	r1, [r1, #0]
 8002c5a:	4291      	cmp	r1, r2
 8002c5c:	d803      	bhi.n	8002c66 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002c5e:	4b0f      	ldr	r3, [pc, #60]	; (8002c9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002c60:	4a0b      	ldr	r2, [pc, #44]	; (8002c90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002c62:	216d      	movs	r1, #109	; 0x6d
 8002c64:	e7f3      	b.n	8002c4e <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002c66:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002c6a:	4b0d      	ldr	r3, [pc, #52]	; (8002ca0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002c72:	6803      	ldr	r3, [r0, #0]
 8002c74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c76:	4798      	blx	r3
 8002c78:	1a28      	subs	r0, r5, r0
 8002c7a:	b201      	sxth	r1, r0
 8002c7c:	4633      	mov	r3, r6
 8002c7e:	4620      	mov	r0, r4
    }
 8002c80:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8002c84:	4718      	bx	r3
 8002c86:	bf00      	nop
 8002c88:	2000ef74 	.word	0x2000ef74
 8002c8c:	08028308 	.word	0x08028308
 8002c90:	0802834a 	.word	0x0802834a
 8002c94:	08028385 	.word	0x08028385
 8002c98:	2000ef78 	.word	0x2000ef78
 8002c9c:	080283cc 	.word	0x080283cc
 8002ca0:	2000ef7c 	.word	0x2000ef7c

08002ca4 <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void CompetitionScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002ca4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002ca6:	f100 03a0 	add.w	r3, r0, #160	; 0xa0
 8002caa:	4299      	cmp	r1, r3
{
 8002cac:	4604      	mov	r4, r0
 8002cae:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002cb0:	d103      	bne.n	8002cba <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~CompetitionScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002cb2:	f012 f8f9 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromCompetitionViewToDriverView
        //When btnNextPage clicked change screen to DriverScreen
        //Go to DriverScreen with screen transition towards East
        application().gotoDriverScreenScreenSlideTransitionEast();
 8002cb6:	f001 fdc9 	bl	800484c <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002cba:	346c      	adds	r4, #108	; 0x6c
 8002cbc:	42a5      	cmp	r5, r4
 8002cbe:	d105      	bne.n	8002ccc <_ZN25CompetitionScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002cc0:	f012 f8f2 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromCompetitionScreenToMissionSelect
        //When btnPrevPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards West
        application().gotoMissionSelectScreenSlideTransitionWest();
    }
}
 8002cc4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMissionSelectScreenSlideTransitionWest();
 8002cc8:	f001 bd80 	b.w	80047cc <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>
}
 8002ccc:	bd38      	pop	{r3, r4, r5, pc}

08002cce <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002cce:	2200      	movs	r2, #0
 8002cd0:	f04f 31ff 	mov.w	r1, #4294967295
 8002cd4:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002cd8:	6082      	str	r2, [r0, #8]
    }
 8002cda:	4770      	bx	lr

08002cdc <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002cdc:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002cde:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002ce0:	4604      	mov	r4, r0
        setX(x);
 8002ce2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002ce4:	4615      	mov	r5, r2
        setX(x);
 8002ce6:	4798      	blx	r3
        setY(y);
 8002ce8:	6823      	ldr	r3, [r4, #0]
 8002cea:	4629      	mov	r1, r5
 8002cec:	4620      	mov	r0, r4
 8002cee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002cf0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002cf4:	4718      	bx	r3

08002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002cf6:	b570      	push	{r4, r5, r6, lr}
 8002cf8:	4604      	mov	r4, r0
 8002cfa:	461d      	mov	r5, r3
 8002cfc:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002d00:	f7ff ffec 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002d04:	6823      	ldr	r3, [r4, #0]
 8002d06:	4629      	mov	r1, r5
 8002d08:	4620      	mov	r0, r4
 8002d0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d0c:	4798      	blx	r3
        setHeight(height);
 8002d0e:	6823      	ldr	r3, [r4, #0]
 8002d10:	4631      	mov	r1, r6
 8002d12:	4620      	mov	r0, r4
 8002d14:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002d16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002d1a:	4718      	bx	r3

08002d1c <_ZN8touchgfx6WidgetC1Ev>:
 8002d1c:	2200      	movs	r2, #0
 8002d1e:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002d22:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002d26:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002d2a:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002d2e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002d32:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002d34:	4a01      	ldr	r2, [pc, #4]	; (8002d3c <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002d36:	6002      	str	r2, [r0, #0]
 8002d38:	4770      	bx	lr
 8002d3a:	bf00      	nop
 8002d3c:	08028450 	.word	0x08028450

08002d40 <_ZN8touchgfx6ButtonC1Ev>:
 * pressed state.
 */
class Button : public AbstractButton
{
public:
    Button()
 8002d40:	b510      	push	{r4, lr}
class AbstractButton : public Widget
{
public:
    /** Sets this Widget touchable so the user can interact with buttons. */
    AbstractButton()
        : Widget(), action(), pressed(false)
 8002d42:	2226      	movs	r2, #38	; 0x26
 8002d44:	4604      	mov	r4, r0
 8002d46:	2100      	movs	r1, #0
 8002d48:	f023 fcfc 	bl	8026744 <memset>
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	f7ff ffe5 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8002d52:	2300      	movs	r3, #0
 8002d54:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8002d5a:	2301      	movs	r3, #1
 8002d5c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        : AbstractButton(), up(), down(), alpha(255)
 8002d60:	4b04      	ldr	r3, [pc, #16]	; (8002d74 <_ZN8touchgfx6ButtonC1Ev+0x34>)
 8002d62:	6023      	str	r3, [r4, #0]
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002d64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d68:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8002d6a:	8623      	strh	r3, [r4, #48]	; 0x30
 8002d6c:	f884 3032 	strb.w	r3, [r4, #50]	; 0x32
    {
    }
 8002d70:	4620      	mov	r0, r4
 8002d72:	bd10      	pop	{r4, pc}
 8002d74:	0802a400 	.word	0x0802a400

08002d78 <_ZN25CompetitionScreenViewBaseC1Ev>:
CompetitionScreenViewBase::CompetitionScreenViewBase() :
 8002d78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d7c:	4604      	mov	r4, r0
 8002d7e:	b08b      	sub	sp, #44	; 0x2c
    buttonCallback(this, &CompetitionScreenViewBase::buttonCallbackHandler)
 8002d80:	4627      	mov	r7, r4
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
 8002d82:	2500      	movs	r5, #0
 8002d84:	f013 fd10 	bl	80167a8 <_ZN8touchgfx6ScreenC1Ev>
 8002d88:	4b69      	ldr	r3, [pc, #420]	; (8002f30 <_ZN25CompetitionScreenViewBaseC1Ev+0x1b8>)
 8002d8a:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002d8c:	f847 3b40 	str.w	r3, [r7], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8002d90:	4629      	mov	r1, r5
 8002d92:	2226      	movs	r2, #38	; 0x26
 8002d94:	4638      	mov	r0, r7
 8002d96:	f023 fcd5 	bl	8026744 <memset>
 8002d9a:	4638      	mov	r0, r7
 8002d9c:	f7ff ffbe 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8002da0:	4b64      	ldr	r3, [pc, #400]	; (8002f34 <_ZN25CompetitionScreenViewBaseC1Ev+0x1bc>)
 8002da2:	6423      	str	r3, [r4, #64]	; 0x40
 8002da4:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8002da8:	23ff      	movs	r3, #255	; 0xff
 8002daa:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8002dae:	f104 09a0 	add.w	r9, r4, #160	; 0xa0
        : color(col)
 8002db2:	66a5      	str	r5, [r4, #104]	; 0x68
 8002db4:	4650      	mov	r0, sl
 8002db6:	f7ff ffc3 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 8002dba:	f104 06d4 	add.w	r6, r4, #212	; 0xd4
 8002dbe:	4648      	mov	r0, r9
 8002dc0:	f7ff ffbe 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002dc4:	4629      	mov	r1, r5
 8002dc6:	2226      	movs	r2, #38	; 0x26
 8002dc8:	4630      	mov	r0, r6
 8002dca:	f023 fcbb 	bl	8026744 <memset>
 8002dce:	4630      	mov	r0, r6
 8002dd0:	f7ff ffa4 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
        : typedTextId(id)
 8002dd4:	4b58      	ldr	r3, [pc, #352]	; (8002f38 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002dd6:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 8002dda:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002dde:	f8a4 3100 	strh.w	r3, [r4, #256]	; 0x100
 8002de2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8002de6:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
        : TextAreaWithWildcardBase(), wc1(0)
 8002dea:	4b54      	ldr	r3, [pc, #336]	; (8002f3c <_ZN25CompetitionScreenViewBaseC1Ev+0x1c4>)
 8002dec:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
        : pobject(pObject), pmemfun(pmemfun_1)
 8002df0:	4b53      	ldr	r3, [pc, #332]	; (8002f40 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c8>)
 8002df2:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8002df6:	e9c4 3450 	strd	r3, r4, [r4, #320]	; 0x140
 8002dfa:	4b52      	ldr	r3, [pc, #328]	; (8002f44 <_ZN25CompetitionScreenViewBaseC1Ev+0x1cc>)
 8002dfc:	f8a4 510c 	strh.w	r5, [r4, #268]	; 0x10c
 8002e00:	e9c4 3552 	strd	r3, r5, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002e04:	f04f 3bff 	mov.w	fp, #4294967295
    __background.setPosition(0, 0, 800, 480);
 8002e08:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8002e0c:	462a      	mov	r2, r5
 8002e0e:	4629      	mov	r1, r5
 8002e10:	4638      	mov	r0, r7
              text(0)
 8002e12:	e9c4 b545 	strd	fp, r5, [r4, #276]	; 0x114
 8002e16:	f8c4 5110 	str.w	r5, [r4, #272]	; 0x110
 8002e1a:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002e1e:	9300      	str	r3, [sp, #0]
 8002e20:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002e24:	f7ff ff67 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8002e28:	f104 0804 	add.w	r8, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002e2c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002e30:	66a3      	str	r3, [r4, #104]	; 0x68
 8002e32:	4639      	mov	r1, r7
 8002e34:	4640      	mov	r0, r8
 8002e36:	f00c fc9b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8002e3a:	f240 129f 	movw	r2, #415	; 0x19f
 8002e3e:	2111      	movs	r1, #17
 8002e40:	4650      	mov	r0, sl
 8002e42:	f7ff ff4b 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 8002e46:	f504 77a0 	add.w	r7, r4, #320	; 0x140
 8002e4a:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 8002e4c:	aa08      	add	r2, sp, #32
 8002e4e:	a907      	add	r1, sp, #28
 8002e50:	4650      	mov	r0, sl
 8002e52:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002e56:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002e5a:	f00f f957 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e5e:	4651      	mov	r1, sl
 8002e60:	4640      	mov	r0, r8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8002e62:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8002e66:	f00c fc83 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 8002e6a:	f240 129f 	movw	r2, #415	; 0x19f
 8002e6e:	f240 21df 	movw	r1, #735	; 0x2df
 8002e72:	4648      	mov	r0, r9
 8002e74:	f7ff ff32 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8002e78:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8002e7a:	aa08      	add	r2, sp, #32
 8002e7c:	a907      	add	r1, sp, #28
 8002e7e:	4648      	mov	r0, r9
 8002e80:	f8ad 301c 	strh.w	r3, [sp, #28]
 8002e84:	f8ad 3020 	strh.w	r3, [sp, #32]
 8002e88:	f00f f940 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8002e8c:	4649      	mov	r1, r9
 8002e8e:	4640      	mov	r0, r8
 8002e90:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
 8002e94:	f00c fc6c 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtMission.setPosition(0, 158, 800, 165);
 8002e98:	23a5      	movs	r3, #165	; 0xa5
 8002e9a:	229e      	movs	r2, #158	; 0x9e
 8002e9c:	4629      	mov	r1, r5
 8002e9e:	9300      	str	r3, [sp, #0]
 8002ea0:	4630      	mov	r0, r6
 8002ea2:	f44f 7348 	mov.w	r3, #800	; 0x320
 8002ea6:	f7ff ff26 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8002eaa:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
        linespace = space;
 8002eae:	f8a4 5108 	strh.w	r5, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 8002eb2:	ad02      	add	r5, sp, #8
 8002eb4:	4628      	mov	r0, r5
 8002eb6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8002eba:	f8c4 b104 	str.w	fp, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 8002ebe:	4631      	mov	r1, r6
 8002ec0:	4798      	blx	r3
 8002ec2:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002ec6:	f504 7388 	add.w	r3, r4, #272	; 0x110
 8002eca:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ece:	4b1e      	ldr	r3, [pc, #120]	; (8002f48 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d0>)
 8002ed0:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtMissionBuffer, TXTMISSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FAAC).getText());
 8002ed2:	f504 7590 	add.w	r5, r4, #288	; 0x120
 8002ed6:	b92b      	cbnz	r3, 8002ee4 <_ZN25CompetitionScreenViewBaseC1Ev+0x16c>
 8002ed8:	4b1c      	ldr	r3, [pc, #112]	; (8002f4c <_ZN25CompetitionScreenViewBaseC1Ev+0x1d4>)
 8002eda:	4a1d      	ldr	r2, [pc, #116]	; (8002f50 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002edc:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ede:	481d      	ldr	r0, [pc, #116]	; (8002f54 <_ZN25CompetitionScreenViewBaseC1Ev+0x1dc>)
 8002ee0:	f023 fba4 	bl	802662c <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002ee4:	4b1c      	ldr	r3, [pc, #112]	; (8002f58 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ee6:	881b      	ldrh	r3, [r3, #0]
 8002ee8:	2b40      	cmp	r3, #64	; 0x40
 8002eea:	d803      	bhi.n	8002ef4 <_ZN25CompetitionScreenViewBaseC1Ev+0x17c>
 8002eec:	4b1b      	ldr	r3, [pc, #108]	; (8002f5c <_ZN25CompetitionScreenViewBaseC1Ev+0x1e4>)
 8002eee:	4a18      	ldr	r2, [pc, #96]	; (8002f50 <_ZN25CompetitionScreenViewBaseC1Ev+0x1d8>)
 8002ef0:	2161      	movs	r1, #97	; 0x61
 8002ef2:	e7f4      	b.n	8002ede <_ZN25CompetitionScreenViewBaseC1Ev+0x166>
        return texts->getText(typedTextId);
 8002ef4:	4b1a      	ldr	r3, [pc, #104]	; (8002f60 <_ZN25CompetitionScreenViewBaseC1Ev+0x1e8>)
 8002ef6:	2140      	movs	r1, #64	; 0x40
 8002ef8:	6818      	ldr	r0, [r3, #0]
 8002efa:	f005 f933 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8002efe:	4a19      	ldr	r2, [pc, #100]	; (8002f64 <_ZN25CompetitionScreenViewBaseC1Ev+0x1ec>)
 8002f00:	4603      	mov	r3, r0
 8002f02:	210f      	movs	r1, #15
 8002f04:	4628      	mov	r0, r5
 8002f06:	f015 f93f 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8002f0a:	4b0b      	ldr	r3, [pc, #44]	; (8002f38 <_ZN25CompetitionScreenViewBaseC1Ev+0x1c0>)
 8002f0c:	9308      	str	r3, [sp, #32]
    txtMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ZY1));
 8002f0e:	a908      	add	r1, sp, #32
 8002f10:	2341      	movs	r3, #65	; 0x41
 8002f12:	4630      	mov	r0, r6
        wc1 = value;
 8002f14:	f8c4 511c 	str.w	r5, [r4, #284]	; 0x11c
 8002f18:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8002f1c:	f00f f898 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8002f20:	4640      	mov	r0, r8
 8002f22:	4631      	mov	r1, r6
 8002f24:	f00c fc24 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002f28:	4620      	mov	r0, r4
 8002f2a:	b00b      	add	sp, #44	; 0x2c
 8002f2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002f30:	08028570 	.word	0x08028570
 8002f34:	0802a398 	.word	0x0802a398
 8002f38:	080284b8 	.word	0x080284b8
 8002f3c:	080284c8 	.word	0x080284c8
 8002f40:	08028558 	.word	0x08028558
 8002f44:	08002ca5 	.word	0x08002ca5
 8002f48:	2000ef74 	.word	0x2000ef74
 8002f4c:	08028308 	.word	0x08028308
 8002f50:	0802840a 	.word	0x0802840a
 8002f54:	08028385 	.word	0x08028385
 8002f58:	2000ef78 	.word	0x2000ef78
 8002f5c:	080283cc 	.word	0x080283cc
 8002f60:	2000ef80 	.word	0x2000ef80
 8002f64:	08028442 	.word	0x08028442

08002f68 <_ZN20DriverScreenViewBaseD1Ev>:
}

DriverScreenViewBase::~DriverScreenViewBase()
{

}
 8002f68:	4770      	bx	lr

08002f6a <_ZN20DriverScreenViewBase11setupScreenEv>:

void DriverScreenViewBase::setupScreen()
{

}
 8002f6a:	4770      	bx	lr

08002f6c <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002f6c:	4770      	bx	lr

08002f6e <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002f6e:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f70:	68c2      	ldr	r2, [r0, #12]
 8002f72:	6844      	ldr	r4, [r0, #4]
 8002f74:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002f76:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002f78:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002f7c:	07d2      	lsls	r2, r2, #31
 8002f7e:	bf48      	it	mi
 8002f80:	5962      	ldrmi	r2, [r4, r5]
 8002f82:	689b      	ldr	r3, [r3, #8]
    }
 8002f84:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002f86:	bf48      	it	mi
 8002f88:	58d3      	ldrmi	r3, [r2, r3]
 8002f8a:	4718      	bx	r3

08002f8c <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002f8c:	6843      	ldr	r3, [r0, #4]
 8002f8e:	b12b      	cbz	r3, 8002f9c <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002f90:	6883      	ldr	r3, [r0, #8]
 8002f92:	b92b      	cbnz	r3, 8002fa0 <_ZNK8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002f94:	68c0      	ldr	r0, [r0, #12]
 8002f96:	f000 0001 	and.w	r0, r0, #1
 8002f9a:	4770      	bx	lr
 8002f9c:	4618      	mov	r0, r3
 8002f9e:	4770      	bx	lr
 8002fa0:	2001      	movs	r0, #1
    }
 8002fa2:	4770      	bx	lr

08002fa4 <_ZN8touchgfx8CallbackI20DriverScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002fa4:	b510      	push	{r4, lr}
 8002fa6:	2110      	movs	r1, #16
 8002fa8:	4604      	mov	r4, r0
 8002faa:	f023 fb11 	bl	80265d0 <_ZdlPvj>
 8002fae:	4620      	mov	r0, r4
 8002fb0:	bd10      	pop	{r4, pc}

08002fb2 <_ZN20DriverScreenViewBaseD0Ev>:
DriverScreenViewBase::~DriverScreenViewBase()
 8002fb2:	b510      	push	{r4, lr}
}
 8002fb4:	f640 411c 	movw	r1, #3100	; 0xc1c
DriverScreenViewBase::~DriverScreenViewBase()
 8002fb8:	4604      	mov	r4, r0
}
 8002fba:	f023 fb09 	bl	80265d0 <_ZdlPvj>
 8002fbe:	4620      	mov	r0, r4
 8002fc0:	bd10      	pop	{r4, pc}

08002fc2 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void DriverScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8002fc2:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 8002fc4:	f100 03e8 	add.w	r3, r0, #232	; 0xe8
 8002fc8:	4299      	cmp	r1, r3
{
 8002fca:	4604      	mov	r4, r0
 8002fcc:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8002fce:	d103      	bne.n	8002fd8 <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~DriverScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002fd0:	f011 ff6a 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromDriverScreenToMainInfotaiment
        //When btnNextPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards East
        application().gotoMainInfotaimentScreenSlideTransitionEast();
 8002fd4:	f001 fbda 	bl	800478c <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>
    }
    if (&src == &btnPrevPage)
 8002fd8:	34b4      	adds	r4, #180	; 0xb4
 8002fda:	42a5      	cmp	r5, r4
 8002fdc:	d105      	bne.n	8002fea <_ZN20DriverScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8002fde:	f011 ff63 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromDriverScreenToCompetitionScreen
        //When btnPrevPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards West
        application().gotoCompetitionScreenScreenSlideTransitionWest();
    }
}
 8002fe2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoCompetitionScreenScreenSlideTransitionWest();
 8002fe6:	f001 bc11 	b.w	800480c <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>
}
 8002fea:	bd38      	pop	{r3, r4, r5, pc}

08002fec <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002fec:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002fee:	2226      	movs	r2, #38	; 0x26
    Box()
 8002ff0:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002ff2:	2100      	movs	r1, #0
 8002ff4:	f023 fba6 	bl	8026744 <memset>
 8002ff8:	4620      	mov	r0, r4
 8002ffa:	f7ff fe8f 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8002ffe:	4b04      	ldr	r3, [pc, #16]	; (8003010 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8003000:	6023      	str	r3, [r4, #0]
 8003002:	23ff      	movs	r3, #255	; 0xff
 8003004:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8003008:	2300      	movs	r3, #0
 800300a:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 800300c:	4620      	mov	r0, r4
 800300e:	bd10      	pop	{r4, pc}
 8003010:	0802a398 	.word	0x0802a398

08003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003014:	2200      	movs	r2, #0
 8003016:	f04f 31ff 	mov.w	r1, #4294967295
 800301a:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 800301e:	6082      	str	r2, [r0, #8]
        {
        }
 8003020:	4770      	bx	lr
	...

08003024 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8003024:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8003026:	2100      	movs	r1, #0
    TextArea()
 8003028:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800302a:	2226      	movs	r2, #38	; 0x26
 800302c:	f023 fb8a 	bl	8026744 <memset>
 8003030:	4620      	mov	r0, r4
 8003032:	f7ff fe73 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8003036:	4b09      	ldr	r3, [pc, #36]	; (800305c <_ZN8touchgfx8TextAreaC1Ev+0x38>)
 8003038:	6023      	str	r3, [r4, #0]
 800303a:	4b09      	ldr	r3, [pc, #36]	; (8003060 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 800303c:	62a3      	str	r3, [r4, #40]	; 0x28
 800303e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8003042:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8003044:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8003048:	2300      	movs	r3, #0
 800304a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
 800304e:	8723      	strh	r3, [r4, #56]	; 0x38
 8003050:	f104 003c 	add.w	r0, r4, #60	; 0x3c
 8003054:	f7ff ffde 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 8003058:	4620      	mov	r0, r4
 800305a:	bd10      	pop	{r4, pc}
 800305c:	0802a308 	.word	0x0802a308
 8003060:	080284b8 	.word	0x080284b8

08003064 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 8003064:	b510      	push	{r4, lr}
 8003066:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8003068:	f7ff ffc0 	bl	8002fec <_ZN8touchgfx3BoxC1Ev>
 800306c:	4b03      	ldr	r3, [pc, #12]	; (800307c <_ZN8touchgfx13BoxWithBorderC1Ev+0x18>)
 800306e:	6023      	str	r3, [r4, #0]
        : color(col)
 8003070:	2300      	movs	r3, #0
 8003072:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003074:	8623      	strh	r3, [r4, #48]	; 0x30
    {
    }
 8003076:	4620      	mov	r0, r4
 8003078:	bd10      	pop	{r4, pc}
 800307a:	bf00      	nop
 800307c:	0802a474 	.word	0x0802a474

08003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8003080:	b510      	push	{r4, lr}
 8003082:	4604      	mov	r4, r0
        : TextArea()
 8003084:	f7ff ffce 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8003088:	4b02      	ldr	r3, [pc, #8]	; (8003094 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800308a:	6023      	str	r3, [r4, #0]
 800308c:	2300      	movs	r3, #0
 800308e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 8003090:	4620      	mov	r0, r4
 8003092:	bd10      	pop	{r4, pc}
 8003094:	080284c8 	.word	0x080284c8

08003098 <_ZN20DriverScreenViewBaseC1Ev>:
DriverScreenViewBase::DriverScreenViewBase() :
 8003098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800309c:	ed2d 8b10 	vpush	{d8-d15}
 80030a0:	4683      	mov	fp, r0
 80030a2:	b0a5      	sub	sp, #148	; 0x94
    buttonCallback(this, &DriverScreenViewBase::buttonCallbackHandler)
 80030a4:	465c      	mov	r4, fp
 80030a6:	f04f 0800 	mov.w	r8, #0
 80030aa:	f013 fb7d 	bl	80167a8 <_ZN8touchgfx6ScreenC1Ev>
 80030ae:	4be7      	ldr	r3, [pc, #924]	; (800344c <_ZN20DriverScreenViewBaseC1Ev+0x3b4>)
 80030b0:	f8cb 803c 	str.w	r8, [fp, #60]	; 0x3c
 80030b4:	f844 3b40 	str.w	r3, [r4], #64
 80030b8:	f10b 066c 	add.w	r6, fp, #108	; 0x6c
 80030bc:	4620      	mov	r0, r4
 80030be:	f7ff ff95 	bl	8002fec <_ZN8touchgfx3BoxC1Ev>
 80030c2:	4630      	mov	r0, r6
 80030c4:	f7ff ffae 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80030c8:	f10b 03b4 	add.w	r3, fp, #180	; 0xb4
 80030cc:	f10b 07e8 	add.w	r7, fp, #232	; 0xe8
 80030d0:	4618      	mov	r0, r3
 80030d2:	ee0e 3a90 	vmov	s29, r3
 80030d6:	f7ff fe33 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 80030da:	4638      	mov	r0, r7
 80030dc:	f7ff fe30 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 80030e0:	f50b 738e 	add.w	r3, fp, #284	; 0x11c
 80030e4:	4618      	mov	r0, r3
 80030e6:	930c      	str	r3, [sp, #48]	; 0x30
 80030e8:	f7ff ffbc 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030ec:	f50b 73a8 	add.w	r3, fp, #336	; 0x150
 80030f0:	4618      	mov	r0, r3
 80030f2:	930d      	str	r3, [sp, #52]	; 0x34
 80030f4:	f7ff ffb6 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80030f8:	f50b 73c2 	add.w	r3, fp, #388	; 0x184
 80030fc:	4618      	mov	r0, r3
 80030fe:	930e      	str	r3, [sp, #56]	; 0x38
 8003100:	f7ff ffb0 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003104:	f50b 73dc 	add.w	r3, fp, #440	; 0x1b8
 8003108:	4618      	mov	r0, r3
 800310a:	930f      	str	r3, [sp, #60]	; 0x3c
 800310c:	f7ff ffaa 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003110:	f50b 73f6 	add.w	r3, fp, #492	; 0x1ec
 8003114:	4618      	mov	r0, r3
 8003116:	9310      	str	r3, [sp, #64]	; 0x40
 8003118:	f7ff ffa4 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800311c:	f50b 7308 	add.w	r3, fp, #544	; 0x220
 8003120:	4618      	mov	r0, r3
 8003122:	9311      	str	r3, [sp, #68]	; 0x44
 8003124:	f7ff ff9e 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003128:	f50b 7315 	add.w	r3, fp, #596	; 0x254
 800312c:	4618      	mov	r0, r3
 800312e:	9312      	str	r3, [sp, #72]	; 0x48
 8003130:	f7ff ff98 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003134:	f50b 7322 	add.w	r3, fp, #648	; 0x288
 8003138:	4618      	mov	r0, r3
 800313a:	9313      	str	r3, [sp, #76]	; 0x4c
 800313c:	f7ff ff92 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003140:	f50b 732f 	add.w	r3, fp, #700	; 0x2bc
 8003144:	4618      	mov	r0, r3
 8003146:	9314      	str	r3, [sp, #80]	; 0x50
 8003148:	f7ff ff8c 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800314c:	f50b 733c 	add.w	r3, fp, #752	; 0x2f0
 8003150:	4618      	mov	r0, r3
 8003152:	9315      	str	r3, [sp, #84]	; 0x54
 8003154:	f7ff ff86 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003158:	f50b 7349 	add.w	r3, fp, #804	; 0x324
 800315c:	4618      	mov	r0, r3
 800315e:	9316      	str	r3, [sp, #88]	; 0x58
 8003160:	f7ff ff80 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003164:	f50b 7356 	add.w	r3, fp, #856	; 0x358
 8003168:	4618      	mov	r0, r3
 800316a:	9317      	str	r3, [sp, #92]	; 0x5c
 800316c:	f7ff ff7a 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003170:	f50b 7363 	add.w	r3, fp, #908	; 0x38c
 8003174:	4618      	mov	r0, r3
 8003176:	9318      	str	r3, [sp, #96]	; 0x60
 8003178:	f7ff ff74 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800317c:	f50b 7370 	add.w	r3, fp, #960	; 0x3c0
 8003180:	4618      	mov	r0, r3
 8003182:	9319      	str	r3, [sp, #100]	; 0x64
 8003184:	f7ff ff6e 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003188:	f50b 737d 	add.w	r3, fp, #1012	; 0x3f4
 800318c:	4618      	mov	r0, r3
 800318e:	931a      	str	r3, [sp, #104]	; 0x68
 8003190:	f7ff ff68 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8003194:	f50b 6385 	add.w	r3, fp, #1064	; 0x428
 8003198:	4618      	mov	r0, r3
 800319a:	931b      	str	r3, [sp, #108]	; 0x6c
 800319c:	f7ff ff62 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80031a0:	f20b 435c 	addw	r3, fp, #1116	; 0x45c
 80031a4:	4618      	mov	r0, r3
 80031a6:	ee08 3a10 	vmov	s16, r3
 80031aa:	f7ff ff69 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031ae:	f50b 6395 	add.w	r3, fp, #1192	; 0x4a8
 80031b2:	4618      	mov	r0, r3
 80031b4:	ee0f 3a10 	vmov	s30, r3
 80031b8:	f7ff ff62 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031bc:	f20b 43f4 	addw	r3, fp, #1268	; 0x4f4
 80031c0:	4618      	mov	r0, r3
 80031c2:	ee0f 3a90 	vmov	s31, r3
 80031c6:	f7ff ff5b 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80031ca:	f50b 63a8 	add.w	r3, fp, #1344	; 0x540
 80031ce:	4618      	mov	r0, r3
 80031d0:	ee08 3a90 	vmov	s17, r3
 80031d4:	f7ff ff26 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80031d8:	f50b 63b1 	add.w	r3, fp, #1416	; 0x588
 80031dc:	4618      	mov	r0, r3
 80031de:	ee09 3a10 	vmov	s18, r3
 80031e2:	f7ff ff1f 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80031e6:	f50b 63ba 	add.w	r3, fp, #1488	; 0x5d0
 80031ea:	4618      	mov	r0, r3
 80031ec:	ee09 3a90 	vmov	s19, r3
 80031f0:	f7ff ff18 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80031f4:	f50b 63c3 	add.w	r3, fp, #1560	; 0x618
 80031f8:	4618      	mov	r0, r3
 80031fa:	ee0a 3a10 	vmov	s20, r3
 80031fe:	f7ff ff11 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003202:	f50b 63cc 	add.w	r3, fp, #1632	; 0x660
 8003206:	4618      	mov	r0, r3
 8003208:	ee0a 3a90 	vmov	s21, r3
 800320c:	f7ff ff0a 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003210:	f50b 63d5 	add.w	r3, fp, #1704	; 0x6a8
 8003214:	4618      	mov	r0, r3
 8003216:	ee0b 3a10 	vmov	s22, r3
 800321a:	f7ff ff03 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 800321e:	f50b 63de 	add.w	r3, fp, #1776	; 0x6f0
 8003222:	4618      	mov	r0, r3
 8003224:	ee0b 3a90 	vmov	s23, r3
 8003228:	f7ff fefc 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 800322c:	f50b 63e7 	add.w	r3, fp, #1848	; 0x738
 8003230:	4618      	mov	r0, r3
 8003232:	ee0c 3a10 	vmov	s24, r3
 8003236:	f7ff fef5 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 800323a:	f50b 63f0 	add.w	r3, fp, #1920	; 0x780
 800323e:	4618      	mov	r0, r3
 8003240:	ee0c 3a90 	vmov	s25, r3
 8003244:	f7ff feee 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003248:	f50b 63f9 	add.w	r3, fp, #1992	; 0x7c8
 800324c:	4618      	mov	r0, r3
 800324e:	ee0d 3a10 	vmov	s26, r3
 8003252:	f7ff fee7 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003256:	f50b 6301 	add.w	r3, fp, #2064	; 0x810
 800325a:	4618      	mov	r0, r3
 800325c:	ee0d 3a90 	vmov	s27, r3
 8003260:	f7ff fee0 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003264:	f60b 0358 	addw	r3, fp, #2136	; 0x858
 8003268:	4618      	mov	r0, r3
 800326a:	ee0e 3a10 	vmov	s28, r3
 800326e:	f7ff fed9 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8003272:	f50b 630a 	add.w	r3, fp, #2208	; 0x8a0
 8003276:	4618      	mov	r0, r3
 8003278:	9302      	str	r3, [sp, #8]
 800327a:	f7ff ff01 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800327e:	f60b 03ec 	addw	r3, fp, #2284	; 0x8ec
 8003282:	4618      	mov	r0, r3
 8003284:	9303      	str	r3, [sp, #12]
 8003286:	f7ff fefb 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800328a:	f60b 1338 	addw	r3, fp, #2360	; 0x938
 800328e:	4618      	mov	r0, r3
 8003290:	9304      	str	r3, [sp, #16]
 8003292:	f7ff fef5 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8003296:	f60b 1384 	addw	r3, fp, #2436	; 0x984
 800329a:	4618      	mov	r0, r3
 800329c:	9305      	str	r3, [sp, #20]
 800329e:	f7ff feef 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032a2:	f50b 631d 	add.w	r3, fp, #2512	; 0x9d0
 80032a6:	4618      	mov	r0, r3
 80032a8:	9306      	str	r3, [sp, #24]
 80032aa:	f7ff fee9 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032ae:	f60b 231c 	addw	r3, fp, #2588	; 0xa1c
 80032b2:	4618      	mov	r0, r3
 80032b4:	9307      	str	r3, [sp, #28]
 80032b6:	f7ff fee3 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032ba:	f60b 2368 	addw	r3, fp, #2664	; 0xa68
 80032be:	4618      	mov	r0, r3
 80032c0:	9308      	str	r3, [sp, #32]
 80032c2:	f7ff fedd 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032c6:	f60b 23b4 	addw	r3, fp, #2740	; 0xab4
 80032ca:	4618      	mov	r0, r3
 80032cc:	9309      	str	r3, [sp, #36]	; 0x24
 80032ce:	f7ff fed7 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032d2:	f50b 6330 	add.w	r3, fp, #2816	; 0xb00
 80032d6:	4618      	mov	r0, r3
 80032d8:	930a      	str	r3, [sp, #40]	; 0x28
 80032da:	f7ff fed1 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80032de:	f60b 334c 	addw	r3, fp, #2892	; 0xb4c
 80032e2:	4618      	mov	r0, r3
 80032e4:	930b      	str	r3, [sp, #44]	; 0x2c
 80032e6:	f7ff fecb 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80032ea:	4b59      	ldr	r3, [pc, #356]	; (8003450 <_ZN20DriverScreenViewBaseC1Ev+0x3b8>)
 80032ec:	f8cb 3c0c 	str.w	r3, [fp, #3084]	; 0xc0c
 80032f0:	4b58      	ldr	r3, [pc, #352]	; (8003454 <_ZN20DriverScreenViewBaseC1Ev+0x3bc>)
 80032f2:	f8cb 3c14 	str.w	r3, [fp, #3092]	; 0xc14
    __background.setPosition(0, 0, 800, 480);
 80032f6:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80032fa:	4642      	mov	r2, r8
 80032fc:	4620      	mov	r0, r4
 80032fe:	9300      	str	r3, [sp, #0]
 8003300:	4641      	mov	r1, r8
 8003302:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003306:	f8cb bc10 	str.w	fp, [fp, #3088]	; 0xc10
 800330a:	f8cb 8c18 	str.w	r8, [fp, #3096]	; 0xc18
 800330e:	f10b 0904 	add.w	r9, fp, #4
 8003312:	f7ff fcf0 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003316:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800331a:	4621      	mov	r1, r4
 800331c:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 8003320:	4648      	mov	r0, r9
 8003322:	f00c fa25 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot_1.setPosition(531, 384, 133, 73);
 8003326:	2349      	movs	r3, #73	; 0x49
        color = newColor;
 8003328:	f04f 3aff 	mov.w	sl, #4294967295
        boundingArea = calculateBoundingArea();
 800332c:	ac1c      	add	r4, sp, #112	; 0x70
 800332e:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8003332:	4630      	mov	r0, r6
 8003334:	9300      	str	r3, [sp, #0]
 8003336:	f240 2113 	movw	r1, #531	; 0x213
 800333a:	2385      	movs	r3, #133	; 0x85
 800333c:	f7ff fcdb 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003340:	4631      	mov	r1, r6
 8003342:	4620      	mov	r0, r4
        color = newColor;
 8003344:	f8cb a09c 	str.w	sl, [fp, #156]	; 0x9c
        linespace = space;
 8003348:	f8ab 80a0 	strh.w	r8, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 800334c:	f00e fbe6 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003350:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003354:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8003358:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtTmot_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DCFN));
 800335c:	ad21      	add	r5, sp, #132	; 0x84
 800335e:	4b3e      	ldr	r3, [pc, #248]	; (8003458 <_ZN20DriverScreenViewBaseC1Ev+0x3c0>)
 8003360:	9321      	str	r3, [sp, #132]	; 0x84
 8003362:	4630      	mov	r0, r6
 8003364:	2313      	movs	r3, #19
 8003366:	4629      	mov	r1, r5
 8003368:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800336c:	f00e fe70 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003370:	4631      	mov	r1, r6
 8003372:	4648      	mov	r0, r9
 8003374:	f00c f9fc 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8003378:	ee1e 0a90 	vmov	r0, s29
 800337c:	f240 129f 	movw	r2, #415	; 0x19f
 8003380:	2111      	movs	r1, #17
 8003382:	f7ff fcab 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    btnPrevPage.setAction(buttonCallback);
 8003386:	f60b 460c 	addw	r6, fp, #3084	; 0xc0c
 800338a:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 800338c:	462a      	mov	r2, r5
 800338e:	ee1e 0a90 	vmov	r0, s29
 8003392:	a920      	add	r1, sp, #128	; 0x80
 8003394:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 8003398:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 800339c:	f00e feb6 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80033a0:	ee1e 1a90 	vmov	r1, s29
 80033a4:	f8cb 60dc 	str.w	r6, [fp, #220]	; 0xdc
 80033a8:	4648      	mov	r0, r9
 80033aa:	f00c f9e1 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 80033ae:	4638      	mov	r0, r7
 80033b0:	f240 129f 	movw	r2, #415	; 0x19f
 80033b4:	f240 21df 	movw	r1, #735	; 0x2df
 80033b8:	f7ff fc90 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80033bc:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 80033be:	462a      	mov	r2, r5
 80033c0:	4638      	mov	r0, r7
 80033c2:	a920      	add	r1, sp, #128	; 0x80
 80033c4:	f8ad 3080 	strh.w	r3, [sp, #128]	; 0x80
 80033c8:	f8ad 3084 	strh.w	r3, [sp, #132]	; 0x84
 80033cc:	f00e fe9e 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80033d0:	4639      	mov	r1, r7
 80033d2:	f8cb 6110 	str.w	r6, [fp, #272]	; 0x110
 80033d6:	4648      	mov	r0, r9
    boxRpm.setPosition(1, 0, 266, 120);
 80033d8:	2678      	movs	r6, #120	; 0x78
 80033da:	f00c f9c9 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80033de:	4642      	mov	r2, r8
 80033e0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80033e2:	9600      	str	r6, [sp, #0]
 80033e4:	f44f 7385 	mov.w	r3, #266	; 0x10a
 80033e8:	2101      	movs	r1, #1
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 80033ea:	2702      	movs	r7, #2
 80033ec:	f7ff fc83 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80033f0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80033f4:	e9cb 3a51 	strd	r3, sl, [fp, #324]	; 0x144
 80033f8:	990c      	ldr	r1, [sp, #48]	; 0x30
        borderSize = size;
 80033fa:	f8ab 714c 	strh.w	r7, [fp, #332]	; 0x14c
 80033fe:	4648      	mov	r0, r9
 8003400:	f00c f9b6 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(531, 360, 133, 120);
 8003404:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003408:	980d      	ldr	r0, [sp, #52]	; 0x34
 800340a:	9600      	str	r6, [sp, #0]
 800340c:	2385      	movs	r3, #133	; 0x85
 800340e:	f240 2113 	movw	r1, #531	; 0x213
 8003412:	f7ff fc70 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003416:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800341a:	e9cb 3a5e 	strd	r3, sl, [fp, #376]	; 0x178
 800341e:	990d      	ldr	r1, [sp, #52]	; 0x34
        borderSize = size;
 8003420:	f8ab 7180 	strh.w	r7, [fp, #384]	; 0x180
 8003424:	4648      	mov	r0, r9
 8003426:	f00c f9a3 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTmot.setPosition(134, 120, 133, 120);
 800342a:	4632      	mov	r2, r6
 800342c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800342e:	9600      	str	r6, [sp, #0]
 8003430:	2385      	movs	r3, #133	; 0x85
 8003432:	2186      	movs	r1, #134	; 0x86
 8003434:	f7ff fc5f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003438:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800343c:	e9cb 3a6b 	strd	r3, sl, [fp, #428]	; 0x1ac
 8003440:	990e      	ldr	r1, [sp, #56]	; 0x38
        borderSize = size;
 8003442:	f8ab 71b4 	strh.w	r7, [fp, #436]	; 0x1b4
 8003446:	4648      	mov	r0, r9
 8003448:	e008      	b.n	800345c <_ZN20DriverScreenViewBaseC1Ev+0x3c4>
 800344a:	bf00      	nop
 800344c:	080285bc 	.word	0x080285bc
 8003450:	080285a4 	.word	0x080285a4
 8003454:	08002fc3 	.word	0x08002fc3
 8003458:	080284b8 	.word	0x080284b8
 800345c:	f00c f988 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxCLT.setPosition(1, 240, 133, 120);
 8003460:	22f0      	movs	r2, #240	; 0xf0
 8003462:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8003464:	9600      	str	r6, [sp, #0]
 8003466:	2385      	movs	r3, #133	; 0x85
 8003468:	2101      	movs	r1, #1
 800346a:	f7ff fc44 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800346e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003472:	e9cb 3a78 	strd	r3, sl, [fp, #480]	; 0x1e0
 8003476:	990f      	ldr	r1, [sp, #60]	; 0x3c
        borderSize = size;
 8003478:	f8ab 71e8 	strh.w	r7, [fp, #488]	; 0x1e8
 800347c:	4648      	mov	r0, r9
 800347e:	f00c f977 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxToil.setPosition(134, 240, 133, 120);
 8003482:	22f0      	movs	r2, #240	; 0xf0
 8003484:	9810      	ldr	r0, [sp, #64]	; 0x40
 8003486:	9600      	str	r6, [sp, #0]
 8003488:	2385      	movs	r3, #133	; 0x85
 800348a:	2186      	movs	r1, #134	; 0x86
 800348c:	f7ff fc33 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003490:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003494:	e9cb 3a85 	strd	r3, sl, [fp, #532]	; 0x214
 8003498:	9910      	ldr	r1, [sp, #64]	; 0x40
        borderSize = size;
 800349a:	f8ab 721c 	strh.w	r7, [fp, #540]	; 0x21c
 800349e:	4648      	mov	r0, r9
 80034a0:	f00c f966 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(1, 120, 133, 120);
 80034a4:	4632      	mov	r2, r6
 80034a6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80034a8:	9600      	str	r6, [sp, #0]
 80034aa:	2385      	movs	r3, #133	; 0x85
 80034ac:	2101      	movs	r1, #1
 80034ae:	f7ff fc22 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80034b6:	e9cb 3a92 	strd	r3, sl, [fp, #584]	; 0x248
 80034ba:	9911      	ldr	r1, [sp, #68]	; 0x44
        borderSize = size;
 80034bc:	f8ab 7250 	strh.w	r7, [fp, #592]	; 0x250
 80034c0:	4648      	mov	r0, r9
 80034c2:	f00c f955 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTorin.setPosition(134, 360, 133, 120);
 80034c6:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80034ca:	9812      	ldr	r0, [sp, #72]	; 0x48
 80034cc:	9600      	str	r6, [sp, #0]
 80034ce:	2385      	movs	r3, #133	; 0x85
 80034d0:	2186      	movs	r1, #134	; 0x86
 80034d2:	f7ff fc10 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034d6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80034da:	e9cb 3a9f 	strd	r3, sl, [fp, #636]	; 0x27c
 80034de:	9912      	ldr	r1, [sp, #72]	; 0x48
        borderSize = size;
 80034e0:	f8ab 7284 	strh.w	r7, [fp, #644]	; 0x284
 80034e4:	4648      	mov	r0, r9
 80034e6:	f00c f943 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat24.setPosition(398, 360, 133, 120);
 80034ea:	f44f 72b4 	mov.w	r2, #360	; 0x168
 80034ee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80034f0:	9600      	str	r6, [sp, #0]
 80034f2:	2385      	movs	r3, #133	; 0x85
 80034f4:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 80034f8:	f7ff fbfd 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80034fc:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003500:	e9cb 3aac 	strd	r3, sl, [fp, #688]	; 0x2b0
 8003504:	9913      	ldr	r1, [sp, #76]	; 0x4c
        borderSize = size;
 8003506:	f8ab 72b8 	strh.w	r7, [fp, #696]	; 0x2b8
 800350a:	4648      	mov	r0, r9
 800350c:	f00c f930 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBat12.setPosition(267, 360, 131, 120);
 8003510:	f44f 72b4 	mov.w	r2, #360	; 0x168
 8003514:	9814      	ldr	r0, [sp, #80]	; 0x50
 8003516:	9600      	str	r6, [sp, #0]
 8003518:	2383      	movs	r3, #131	; 0x83
 800351a:	f240 110b 	movw	r1, #267	; 0x10b
 800351e:	f7ff fbea 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003522:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003526:	e9cb 3ab9 	strd	r3, sl, [fp, #740]	; 0x2e4
 800352a:	9914      	ldr	r1, [sp, #80]	; 0x50
        borderSize = size;
 800352c:	f8ab 72ec 	strh.w	r7, [fp, #748]	; 0x2ec
 8003530:	4648      	mov	r0, r9
 8003532:	f00c f91d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPoil.setPosition(531, 120, 133, 120);
 8003536:	4632      	mov	r2, r6
 8003538:	9815      	ldr	r0, [sp, #84]	; 0x54
 800353a:	9600      	str	r6, [sp, #0]
 800353c:	2385      	movs	r3, #133	; 0x85
 800353e:	f240 2113 	movw	r1, #531	; 0x213
 8003542:	f7ff fbd8 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003546:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800354a:	e9cb 3ac6 	strd	r3, sl, [fp, #792]	; 0x318
 800354e:	9915      	ldr	r1, [sp, #84]	; 0x54
        borderSize = size;
 8003550:	f8ab 7320 	strh.w	r7, [fp, #800]	; 0x320
 8003554:	4648      	mov	r0, r9
 8003556:	f00c f90b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPfuel.setPosition(531, 240, 133, 120);
 800355a:	22f0      	movs	r2, #240	; 0xf0
 800355c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800355e:	9600      	str	r6, [sp, #0]
 8003560:	2385      	movs	r3, #133	; 0x85
 8003562:	f240 2113 	movw	r1, #531	; 0x213
 8003566:	f7ff fbc6 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800356a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800356e:	e9cb 3ad3 	strd	r3, sl, [fp, #844]	; 0x34c
 8003572:	9916      	ldr	r1, [sp, #88]	; 0x58
        borderSize = size;
 8003574:	f8ab 7354 	strh.w	r7, [fp, #852]	; 0x354
 8003578:	4648      	mov	r0, r9
 800357a:	f00c f8f9 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTPS.setPosition(663, 120, 137, 120);
 800357e:	4632      	mov	r2, r6
 8003580:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8003582:	9600      	str	r6, [sp, #0]
 8003584:	2389      	movs	r3, #137	; 0x89
 8003586:	f240 2197 	movw	r1, #663	; 0x297
 800358a:	f7ff fbb4 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800358e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8003592:	e9cb 3ae0 	strd	r3, sl, [fp, #896]	; 0x380
 8003596:	9917      	ldr	r1, [sp, #92]	; 0x5c
        borderSize = size;
 8003598:	f8ab 7388 	strh.w	r7, [fp, #904]	; 0x388
 800359c:	4648      	mov	r0, r9
 800359e:	f00c f8e7 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPbrake.setPosition(664, 240, 136, 120);
 80035a2:	22f0      	movs	r2, #240	; 0xf0
 80035a4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80035a6:	9600      	str	r6, [sp, #0]
 80035a8:	2388      	movs	r3, #136	; 0x88
 80035aa:	f44f 7126 	mov.w	r1, #664	; 0x298
 80035ae:	f7ff fba2 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035b2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80035b6:	e9cb 3aed 	strd	r3, sl, [fp, #948]	; 0x3b4
 80035ba:	9918      	ldr	r1, [sp, #96]	; 0x60
        borderSize = size;
 80035bc:	f8ab 73bc 	strh.w	r7, [fp, #956]	; 0x3bc
 80035c0:	4648      	mov	r0, r9
 80035c2:	f00c f8d5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLap.setPosition(267, 0, 265, 120);
 80035c6:	4642      	mov	r2, r8
 80035c8:	9819      	ldr	r0, [sp, #100]	; 0x64
 80035ca:	9600      	str	r6, [sp, #0]
 80035cc:	f240 1309 	movw	r3, #265	; 0x109
 80035d0:	f240 110b 	movw	r1, #267	; 0x10b
 80035d4:	f7ff fb8f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035d8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80035dc:	e9cb 3afa 	strd	r3, sl, [fp, #1000]	; 0x3e8
 80035e0:	9919      	ldr	r1, [sp, #100]	; 0x64
        borderSize = size;
 80035e2:	f8ab 73f0 	strh.w	r7, [fp, #1008]	; 0x3f0
 80035e6:	4648      	mov	r0, r9
 80035e8:	f00c f8c2 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxSpeed.setPosition(531, 0, 269, 120);
 80035ec:	4642      	mov	r2, r8
 80035ee:	981a      	ldr	r0, [sp, #104]	; 0x68
 80035f0:	9600      	str	r6, [sp, #0]
 80035f2:	f240 130d 	movw	r3, #269	; 0x10d
 80035f6:	f240 2113 	movw	r1, #531	; 0x213
 80035fa:	f7ff fb7c 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80035fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8003602:	991a      	ldr	r1, [sp, #104]	; 0x68
 8003604:	f8cb 341c 	str.w	r3, [fp, #1052]	; 0x41c
 8003608:	4648      	mov	r0, r9
        borderColor = colorBorder;
 800360a:	f8cb a420 	str.w	sl, [fp, #1056]	; 0x420
        borderSize = size;
 800360e:	f8ab 7424 	strh.w	r7, [fp, #1060]	; 0x424
 8003612:	f00c f8ad 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxGear.setPosition(267, 120, 265, 240);
 8003616:	23f0      	movs	r3, #240	; 0xf0
 8003618:	4632      	mov	r2, r6
 800361a:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800361c:	9300      	str	r3, [sp, #0]
 800361e:	f240 110b 	movw	r1, #267	; 0x10b
 8003622:	f240 1309 	movw	r3, #265	; 0x109
 8003626:	f7ff fb66 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800362a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800362e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8003630:	f8cb 3450 	str.w	r3, [fp, #1104]	; 0x450
 8003634:	4648      	mov	r0, r9
        borderColor = colorBorder;
 8003636:	f8cb a454 	str.w	sl, [fp, #1108]	; 0x454
        borderSize = size;
 800363a:	f8ab 7458 	strh.w	r7, [fp, #1112]	; 0x458
 800363e:	f00c f897 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setPosition(267, 120, 265, 240);
 8003642:	23f0      	movs	r3, #240	; 0xf0
 8003644:	4632      	mov	r2, r6
 8003646:	ee18 0a10 	vmov	r0, s16
 800364a:	9300      	str	r3, [sp, #0]
 800364c:	f240 110b 	movw	r1, #267	; 0x10b
 8003650:	f240 1309 	movw	r3, #265	; 0x109
 8003654:	f7ff fb4f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003658:	f8db 345c 	ldr.w	r3, [fp, #1116]	; 0x45c
        color = newColor;
 800365c:	f8cb a48c 	str.w	sl, [fp, #1164]	; 0x48c
        boundingArea = calculateBoundingArea();
 8003660:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        linespace = space;
 8003664:	f8ab 8490 	strh.w	r8, [fp, #1168]	; 0x490
        boundingArea = calculateBoundingArea();
 8003668:	ee18 1a10 	vmov	r1, s16
 800366c:	4620      	mov	r0, r4
 800366e:	4798      	blx	r3
 8003670:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003674:	f50b 6393 	add.w	r3, fp, #1176	; 0x498
 8003678:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800367c:	4b09      	ldr	r3, [pc, #36]	; (80036a4 <_ZN20DriverScreenViewBaseC1Ev+0x60c>)
 800367e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_BNQX).getText());
 8003680:	f60b 3698 	addw	r6, fp, #2968	; 0xb98
 8003684:	b92b      	cbnz	r3, 8003692 <_ZN20DriverScreenViewBaseC1Ev+0x5fa>
 8003686:	4b08      	ldr	r3, [pc, #32]	; (80036a8 <_ZN20DriverScreenViewBaseC1Ev+0x610>)
 8003688:	4a08      	ldr	r2, [pc, #32]	; (80036ac <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 800368a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800368c:	4808      	ldr	r0, [pc, #32]	; (80036b0 <_ZN20DriverScreenViewBaseC1Ev+0x618>)
 800368e:	f022 ffcd 	bl	802662c <__assert_func>
 8003692:	4b08      	ldr	r3, [pc, #32]	; (80036b4 <_ZN20DriverScreenViewBaseC1Ev+0x61c>)
 8003694:	881b      	ldrh	r3, [r3, #0]
 8003696:	2b3d      	cmp	r3, #61	; 0x3d
 8003698:	d810      	bhi.n	80036bc <_ZN20DriverScreenViewBaseC1Ev+0x624>
 800369a:	4b07      	ldr	r3, [pc, #28]	; (80036b8 <_ZN20DriverScreenViewBaseC1Ev+0x620>)
 800369c:	4a03      	ldr	r2, [pc, #12]	; (80036ac <_ZN20DriverScreenViewBaseC1Ev+0x614>)
 800369e:	2161      	movs	r1, #97	; 0x61
 80036a0:	e7f4      	b.n	800368c <_ZN20DriverScreenViewBaseC1Ev+0x5f4>
 80036a2:	bf00      	nop
 80036a4:	2000ef74 	.word	0x2000ef74
 80036a8:	08028308 	.word	0x08028308
 80036ac:	0802840a 	.word	0x0802840a
 80036b0:	08028385 	.word	0x08028385
 80036b4:	2000ef78 	.word	0x2000ef78
 80036b8:	080283cc 	.word	0x080283cc
        return texts->getText(typedTextId);
 80036bc:	4be7      	ldr	r3, [pc, #924]	; (8003a5c <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 80036be:	213d      	movs	r1, #61	; 0x3d
 80036c0:	6818      	ldr	r0, [r3, #0]
 80036c2:	f004 fd4f 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80036c6:	4ae6      	ldr	r2, [pc, #920]	; (8003a60 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 80036c8:	4603      	mov	r3, r0
 80036ca:	4639      	mov	r1, r7
 80036cc:	4630      	mov	r0, r6
 80036ce:	f014 fd5b 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80036d2:	4fe4      	ldr	r7, [pc, #912]	; (8003a64 <_ZN20DriverScreenViewBaseC1Ev+0x9cc>)
        wc1 = value;
 80036d4:	f8cb 64a4 	str.w	r6, [fp, #1188]	; 0x4a4
 80036d8:	233e      	movs	r3, #62	; 0x3e
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0O7B));
 80036da:	ee18 0a10 	vmov	r0, s16
 80036de:	4629      	mov	r1, r5
 80036e0:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80036e4:	9721      	str	r7, [sp, #132]	; 0x84
 80036e6:	f00e fcb3 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80036ea:	ee18 1a10 	vmov	r1, s16
 80036ee:	4648      	mov	r0, r9
 80036f0:	f00c f83e 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(1, 24, 266, 72);
 80036f4:	2348      	movs	r3, #72	; 0x48
 80036f6:	2218      	movs	r2, #24
 80036f8:	2101      	movs	r1, #1
 80036fa:	ee1f 0a10 	vmov	r0, s30
 80036fe:	9300      	str	r3, [sp, #0]
 8003700:	f44f 7385 	mov.w	r3, #266	; 0x10a
 8003704:	f7ff faf7 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003708:	f8cb a4d8 	str.w	sl, [fp, #1240]	; 0x4d8
        linespace = space;
 800370c:	f8ab 84dc 	strh.w	r8, [fp, #1244]	; 0x4dc
        return TextArea::BoundingArea();
 8003710:	4628      	mov	r0, r5
 8003712:	f7ff fc7f 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003716:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800371a:	f20b 43e4 	addw	r3, fp, #1252	; 0x4e4
 800371e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003722:	4ad1      	ldr	r2, [pc, #836]	; (8003a68 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 8003724:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2FOI).getText());
 8003726:	f60b 369c 	addw	r6, fp, #2972	; 0xb9c
 800372a:	2b00      	cmp	r3, #0
 800372c:	d0ab      	beq.n	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800372e:	4acf      	ldr	r2, [pc, #828]	; (8003a6c <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 8003730:	8813      	ldrh	r3, [r2, #0]
 8003732:	2b34      	cmp	r3, #52	; 0x34
 8003734:	d9b1      	bls.n	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003736:	4bc9      	ldr	r3, [pc, #804]	; (8003a5c <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 8003738:	2134      	movs	r1, #52	; 0x34
 800373a:	6818      	ldr	r0, [r3, #0]
 800373c:	f004 fd12 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003740:	4ac7      	ldr	r2, [pc, #796]	; (8003a60 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 8003742:	4603      	mov	r3, r0
 8003744:	2106      	movs	r1, #6
 8003746:	4630      	mov	r0, r6
 8003748:	f014 fd1e 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800374c:	2336      	movs	r3, #54	; 0x36
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YH8M));
 800374e:	ee1f 0a10 	vmov	r0, s30
        wc1 = value;
 8003752:	f8cb 64f0 	str.w	r6, [fp, #1264]	; 0x4f0
 8003756:	4629      	mov	r1, r5
 8003758:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800375c:	9721      	str	r7, [sp, #132]	; 0x84
 800375e:	f00e fc77 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003762:	ee1f 1a10 	vmov	r1, s30
 8003766:	4648      	mov	r0, r9
 8003768:	f00c f802 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTmot.setPosition(134, 167, 133, 73);
 800376c:	2049      	movs	r0, #73	; 0x49
 800376e:	2385      	movs	r3, #133	; 0x85
 8003770:	22a7      	movs	r2, #167	; 0xa7
 8003772:	2186      	movs	r1, #134	; 0x86
 8003774:	9000      	str	r0, [sp, #0]
 8003776:	ee1f 0a90 	vmov	r0, s31
 800377a:	f7ff fabc 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800377e:	f8cb a524 	str.w	sl, [fp, #1316]	; 0x524
        linespace = space;
 8003782:	f8ab 8528 	strh.w	r8, [fp, #1320]	; 0x528
        return TextArea::BoundingArea();
 8003786:	4628      	mov	r0, r5
 8003788:	f7ff fc44 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800378c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003790:	f50b 63a6 	add.w	r3, fp, #1328	; 0x530
 8003794:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003798:	49b3      	ldr	r1, [pc, #716]	; (8003a68 <_ZN20DriverScreenViewBaseC1Ev+0x9d0>)
 800379a:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HO5R).getText());
 800379c:	f60b 36a8 	addw	r6, fp, #2984	; 0xba8
 80037a0:	2b00      	cmp	r3, #0
 80037a2:	f43f af70 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80037a6:	4ab1      	ldr	r2, [pc, #708]	; (8003a6c <_ZN20DriverScreenViewBaseC1Ev+0x9d4>)
 80037a8:	8813      	ldrh	r3, [r2, #0]
 80037aa:	2b2f      	cmp	r3, #47	; 0x2f
 80037ac:	f67f af75 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 80037b0:	4baa      	ldr	r3, [pc, #680]	; (8003a5c <_ZN20DriverScreenViewBaseC1Ev+0x9c4>)
 80037b2:	212f      	movs	r1, #47	; 0x2f
 80037b4:	6818      	ldr	r0, [r3, #0]
 80037b6:	f004 fcd5 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80037ba:	4aa9      	ldr	r2, [pc, #676]	; (8003a60 <_ZN20DriverScreenViewBaseC1Ev+0x9c8>)
 80037bc:	4603      	mov	r3, r0
 80037be:	2104      	movs	r1, #4
 80037c0:	4630      	mov	r0, r6
 80037c2:	f014 fce1 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80037c6:	2330      	movs	r3, #48	; 0x30
    txtTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_73JB));
 80037c8:	ee1f 0a90 	vmov	r0, s31
        wc1 = value;
 80037cc:	f8cb 653c 	str.w	r6, [fp, #1340]	; 0x53c
 80037d0:	4629      	mov	r1, r5
 80037d2:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80037d6:	9721      	str	r7, [sp, #132]	; 0x84
 80037d8:	f00e fc3a 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80037dc:	ee1f 1a90 	vmov	r1, s31
 80037e0:	4648      	mov	r0, r9
 80037e2:	f00b ffc5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setPosition(531, 384, 133, 73);
 80037e6:	2049      	movs	r0, #73	; 0x49
 80037e8:	2385      	movs	r3, #133	; 0x85
 80037ea:	f44f 72c0 	mov.w	r2, #384	; 0x180
 80037ee:	9000      	str	r0, [sp, #0]
 80037f0:	f240 2113 	movw	r1, #531	; 0x213
 80037f4:	ee18 0a90 	vmov	r0, s17
 80037f8:	f7ff fa7d 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80037fc:	4620      	mov	r0, r4
 80037fe:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8003802:	f8cb a570 	str.w	sl, [fp, #1392]	; 0x570
        linespace = space;
 8003806:	f8ab 8574 	strh.w	r8, [fp, #1396]	; 0x574
        boundingArea = calculateBoundingArea();
 800380a:	f00e f987 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800380e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003812:	f20b 537c 	addw	r3, fp, #1404	; 0x57c
 8003816:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800381a:	2315      	movs	r3, #21
    labelLC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_43VM));
 800381c:	ee18 0a90 	vmov	r0, s17
 8003820:	4629      	mov	r1, r5
 8003822:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003826:	9721      	str	r7, [sp, #132]	; 0x84
 8003828:	f00e fc12 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800382c:	ee18 1a90 	vmov	r1, s17
 8003830:	4648      	mov	r0, r9
 8003832:	f00b ff9d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setPosition(1, 146, 131, 69);
 8003836:	2345      	movs	r3, #69	; 0x45
 8003838:	2292      	movs	r2, #146	; 0x92
 800383a:	ee19 0a10 	vmov	r0, s18
 800383e:	9300      	str	r3, [sp, #0]
 8003840:	2101      	movs	r1, #1
 8003842:	2383      	movs	r3, #131	; 0x83
 8003844:	f7ff fa57 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003848:	4620      	mov	r0, r4
 800384a:	ee19 1a10 	vmov	r1, s18
        color = newColor;
 800384e:	f8cb a5b8 	str.w	sl, [fp, #1464]	; 0x5b8
        linespace = space;
 8003852:	f8ab 85bc 	strh.w	r8, [fp, #1468]	; 0x5bc
        boundingArea = calculateBoundingArea();
 8003856:	f00e f961 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800385a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800385e:	f20b 53c4 	addw	r3, fp, #1476	; 0x5c4
 8003862:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003866:	2311      	movs	r3, #17
    labelRES.setTypedText(touchgfx::TypedText(T___SINGLEUSE_A8DL));
 8003868:	ee19 0a10 	vmov	r0, s18
 800386c:	4629      	mov	r1, r5
 800386e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003872:	9721      	str	r7, [sp, #132]	; 0x84
 8003874:	f00e fbec 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003878:	ee19 1a10 	vmov	r1, s18
 800387c:	4648      	mov	r0, r9
 800387e:	f00b ff77 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelCLT.setPosition(1, 264, 132, 73);
 8003882:	2049      	movs	r0, #73	; 0x49
 8003884:	2384      	movs	r3, #132	; 0x84
 8003886:	f44f 7284 	mov.w	r2, #264	; 0x108
 800388a:	9000      	str	r0, [sp, #0]
 800388c:	2101      	movs	r1, #1
 800388e:	ee19 0a90 	vmov	r0, s19
 8003892:	f7ff fa30 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003896:	4620      	mov	r0, r4
 8003898:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800389c:	f8cb a600 	str.w	sl, [fp, #1536]	; 0x600
        linespace = space;
 80038a0:	f8ab 8604 	strh.w	r8, [fp, #1540]	; 0x604
        boundingArea = calculateBoundingArea();
 80038a4:	f00e f93a 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038a8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80038ac:	f20b 630c 	addw	r3, fp, #1548	; 0x60c
 80038b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80038b4:	2314      	movs	r3, #20
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 80038b6:	ee19 0a90 	vmov	r0, s19
 80038ba:	4629      	mov	r1, r5
    labelTmot.setPosition(134, 130, 133, 37);
 80038bc:	2625      	movs	r6, #37	; 0x25
 80038be:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80038c2:	9721      	str	r7, [sp, #132]	; 0x84
    labelCLT.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1TQ));
 80038c4:	f00e fbc4 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80038c8:	ee19 1a90 	vmov	r1, s19
 80038cc:	4648      	mov	r0, r9
 80038ce:	f00b ff4f 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTmot.setPosition(134, 130, 133, 37);
 80038d2:	2385      	movs	r3, #133	; 0x85
 80038d4:	2282      	movs	r2, #130	; 0x82
 80038d6:	ee1a 0a10 	vmov	r0, s20
 80038da:	9600      	str	r6, [sp, #0]
 80038dc:	2186      	movs	r1, #134	; 0x86
 80038de:	f7ff fa0a 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80038e2:	4620      	mov	r0, r4
 80038e4:	ee1a 1a10 	vmov	r1, s20
        color = newColor;
 80038e8:	f8cb a648 	str.w	sl, [fp, #1608]	; 0x648
        linespace = space;
 80038ec:	f8ab 864c 	strh.w	r8, [fp, #1612]	; 0x64c
        boundingArea = calculateBoundingArea();
 80038f0:	f00e f914 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80038f4:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80038f8:	f20b 6354 	addw	r3, fp, #1620	; 0x654
 80038fc:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003900:	231e      	movs	r3, #30
    labelTmot.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S2KY));
 8003902:	ee1a 0a10 	vmov	r0, s20
 8003906:	4629      	mov	r1, r5
 8003908:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 800390c:	9721      	str	r7, [sp, #132]	; 0x84
 800390e:	f00e fb9f 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003912:	ee1a 1a10 	vmov	r1, s20
 8003916:	4648      	mov	r0, r9
 8003918:	f00b ff2a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelToil.setPosition(134, 250, 133, 37);
 800391c:	2385      	movs	r3, #133	; 0x85
 800391e:	22fa      	movs	r2, #250	; 0xfa
 8003920:	ee1a 0a90 	vmov	r0, s21
 8003924:	9600      	str	r6, [sp, #0]
 8003926:	2186      	movs	r1, #134	; 0x86
 8003928:	f7ff f9e5 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800392c:	4620      	mov	r0, r4
 800392e:	ee1a 1a90 	vmov	r1, s21
        color = newColor;
 8003932:	f8cb a690 	str.w	sl, [fp, #1680]	; 0x690
        linespace = space;
 8003936:	f8ab 8694 	strh.w	r8, [fp, #1684]	; 0x694
        boundingArea = calculateBoundingArea();
 800393a:	f00e f8ef 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800393e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003942:	f20b 639c 	addw	r3, fp, #1692	; 0x69c
 8003946:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800394a:	231d      	movs	r3, #29
    labelToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2Q01));
 800394c:	ee1a 0a90 	vmov	r0, s21
 8003950:	4629      	mov	r1, r5
 8003952:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003956:	9721      	str	r7, [sp, #132]	; 0x84
 8003958:	f00e fb7a 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800395c:	ee1a 1a90 	vmov	r1, s21
 8003960:	4648      	mov	r0, r9
 8003962:	f00b ff05 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin.setPosition(134, 367, 133, 37);
 8003966:	2385      	movs	r3, #133	; 0x85
 8003968:	f240 126f 	movw	r2, #367	; 0x16f
 800396c:	ee1b 0a10 	vmov	r0, s22
 8003970:	9600      	str	r6, [sp, #0]
 8003972:	2186      	movs	r1, #134	; 0x86
 8003974:	f7ff f9bf 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003978:	4620      	mov	r0, r4
 800397a:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800397e:	f8cb a6d8 	str.w	sl, [fp, #1752]	; 0x6d8
        linespace = space;
 8003982:	f8ab 86dc 	strh.w	r8, [fp, #1756]	; 0x6dc
        boundingArea = calculateBoundingArea();
 8003986:	f00e f8c9 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800398a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 800398e:	f20b 63e4 	addw	r3, fp, #1764	; 0x6e4
 8003992:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003996:	231c      	movs	r3, #28
    labelTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VFR));
 8003998:	ee1b 0a10 	vmov	r0, s22
 800399c:	4629      	mov	r1, r5
 800399e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80039a2:	9721      	str	r7, [sp, #132]	; 0x84
 80039a4:	f00e fb54 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039a8:	ee1b 1a10 	vmov	r1, s22
 80039ac:	4648      	mov	r0, r9
 80039ae:	f00b fedf 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelBat12.setPosition(268, 370, 130, 37);
 80039b2:	2382      	movs	r3, #130	; 0x82
 80039b4:	f44f 72b9 	mov.w	r2, #370	; 0x172
 80039b8:	ee1b 0a90 	vmov	r0, s23
 80039bc:	9600      	str	r6, [sp, #0]
 80039be:	f44f 7186 	mov.w	r1, #268	; 0x10c
 80039c2:	f7ff f998 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80039c6:	4620      	mov	r0, r4
 80039c8:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 80039cc:	f8cb a720 	str.w	sl, [fp, #1824]	; 0x720
        linespace = space;
 80039d0:	f8ab 8724 	strh.w	r8, [fp, #1828]	; 0x724
        boundingArea = calculateBoundingArea();
 80039d4:	f00e f8a2 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80039d8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 80039dc:	f20b 732c 	addw	r3, fp, #1836	; 0x72c
 80039e0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80039e4:	231b      	movs	r3, #27
    labelBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DE5T));
 80039e6:	ee1b 0a90 	vmov	r0, s23
 80039ea:	4629      	mov	r1, r5
 80039ec:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 80039f0:	9721      	str	r7, [sp, #132]	; 0x84
 80039f2:	f00e fb2d 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80039f6:	ee1b 1a90 	vmov	r1, s23
 80039fa:	4648      	mov	r0, r9
 80039fc:	f00b feb8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTorin_1_1.setPosition(399, 370, 130, 37);
 8003a00:	2382      	movs	r3, #130	; 0x82
 8003a02:	f44f 72b9 	mov.w	r2, #370	; 0x172
 8003a06:	ee1c 0a10 	vmov	r0, s24
 8003a0a:	9600      	str	r6, [sp, #0]
 8003a0c:	f240 118f 	movw	r1, #399	; 0x18f
 8003a10:	f7ff f971 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a14:	4620      	mov	r0, r4
 8003a16:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8003a1a:	f8cb a768 	str.w	sl, [fp, #1896]	; 0x768
        linespace = space;
 8003a1e:	f8ab 876c 	strh.w	r8, [fp, #1900]	; 0x76c
        boundingArea = calculateBoundingArea();
 8003a22:	f00e f87b 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a26:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a2a:	f20b 7374 	addw	r3, fp, #1908	; 0x774
 8003a2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a32:	231a      	movs	r3, #26
    labelTorin_1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6T5M));
 8003a34:	ee1c 0a10 	vmov	r0, s24
 8003a38:	4629      	mov	r1, r5
 8003a3a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003a3e:	9721      	str	r7, [sp, #132]	; 0x84
 8003a40:	f00e fb06 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003a44:	ee1c 1a10 	vmov	r1, s24
 8003a48:	4648      	mov	r0, r9
 8003a4a:	f00b fe91 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPoil.setPosition(532, 130, 132, 37);
 8003a4e:	2384      	movs	r3, #132	; 0x84
 8003a50:	2282      	movs	r2, #130	; 0x82
 8003a52:	ee1c 0a90 	vmov	r0, s25
 8003a56:	9600      	str	r6, [sp, #0]
 8003a58:	e00a      	b.n	8003a70 <_ZN20DriverScreenViewBaseC1Ev+0x9d8>
 8003a5a:	bf00      	nop
 8003a5c:	2000ef80 	.word	0x2000ef80
 8003a60:	08028442 	.word	0x08028442
 8003a64:	080284b8 	.word	0x080284b8
 8003a68:	2000ef74 	.word	0x2000ef74
 8003a6c:	2000ef78 	.word	0x2000ef78
 8003a70:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003a74:	f7ff f93f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003a78:	4620      	mov	r0, r4
 8003a7a:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 8003a7e:	f8cb a7b0 	str.w	sl, [fp, #1968]	; 0x7b0
        linespace = space;
 8003a82:	f8ab 87b4 	strh.w	r8, [fp, #1972]	; 0x7b4
        boundingArea = calculateBoundingArea();
 8003a86:	f00e f849 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003a8a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003a8e:	f20b 73bc 	addw	r3, fp, #1980	; 0x7bc
 8003a92:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003a96:	2319      	movs	r3, #25
    labelPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8R8S));
 8003a98:	ee1c 0a90 	vmov	r0, s25
 8003a9c:	4629      	mov	r1, r5
 8003a9e:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003aa2:	9721      	str	r7, [sp, #132]	; 0x84
 8003aa4:	f00e fad4 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003aa8:	ee1c 1a90 	vmov	r1, s25
 8003aac:	4648      	mov	r0, r9
 8003aae:	f00b fe5f 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelTPS.setPosition(664, 130, 136, 37);
 8003ab2:	2388      	movs	r3, #136	; 0x88
 8003ab4:	2282      	movs	r2, #130	; 0x82
 8003ab6:	ee1d 0a10 	vmov	r0, s26
 8003aba:	9600      	str	r6, [sp, #0]
 8003abc:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003ac0:	f7ff f919 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ac4:	4620      	mov	r0, r4
 8003ac6:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 8003aca:	f8cb a7f8 	str.w	sl, [fp, #2040]	; 0x7f8
        linespace = space;
 8003ace:	f8ab 87fc 	strh.w	r8, [fp, #2044]	; 0x7fc
        boundingArea = calculateBoundingArea();
 8003ad2:	f00e f823 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003ad6:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003ada:	f60b 0304 	addw	r3, fp, #2052	; 0x804
 8003ade:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003ae2:	2317      	movs	r3, #23
    labelTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OXBY));
 8003ae4:	ee1d 0a10 	vmov	r0, s26
 8003ae8:	4629      	mov	r1, r5
 8003aea:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003aee:	9721      	str	r7, [sp, #132]	; 0x84
 8003af0:	f00e faae 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003af4:	ee1d 1a10 	vmov	r1, s26
 8003af8:	4648      	mov	r0, r9
 8003afa:	f00b fe39 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPbrake.setPosition(665, 250, 131, 37);
 8003afe:	2383      	movs	r3, #131	; 0x83
 8003b00:	22fa      	movs	r2, #250	; 0xfa
 8003b02:	ee1d 0a90 	vmov	r0, s27
 8003b06:	9600      	str	r6, [sp, #0]
 8003b08:	f240 2199 	movw	r1, #665	; 0x299
 8003b0c:	f7ff f8f3 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b10:	4620      	mov	r0, r4
 8003b12:	ee1d 1a90 	vmov	r1, s27
        color = newColor;
 8003b16:	f8cb a840 	str.w	sl, [fp, #2112]	; 0x840
        linespace = space;
 8003b1a:	f8ab 8844 	strh.w	r8, [fp, #2116]	; 0x844
        boundingArea = calculateBoundingArea();
 8003b1e:	f00d fffd 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b22:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b26:	f60b 034c 	addw	r3, fp, #2124	; 0x84c
 8003b2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b2e:	2316      	movs	r3, #22
    labelPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7E8Q));
 8003b30:	ee1d 0a90 	vmov	r0, s27
 8003b34:	4629      	mov	r1, r5
 8003b36:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003b3a:	9721      	str	r7, [sp, #132]	; 0x84
 8003b3c:	f00e fa88 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b40:	ee1d 1a90 	vmov	r1, s27
 8003b44:	4648      	mov	r0, r9
 8003b46:	f00b fe13 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelPfuel.setPosition(532, 250, 131, 37);
 8003b4a:	2383      	movs	r3, #131	; 0x83
 8003b4c:	22fa      	movs	r2, #250	; 0xfa
 8003b4e:	ee1e 0a10 	vmov	r0, s28
 8003b52:	9600      	str	r6, [sp, #0]
 8003b54:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003b58:	f7ff f8cd 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003b5c:	4620      	mov	r0, r4
 8003b5e:	ee1e 1a10 	vmov	r1, s28
        color = newColor;
 8003b62:	f8cb a888 	str.w	sl, [fp, #2184]	; 0x888
        linespace = space;
 8003b66:	f8ab 888c 	strh.w	r8, [fp, #2188]	; 0x88c
        boundingArea = calculateBoundingArea();
 8003b6a:	f00d ffd7 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003b6e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003b72:	f60b 0394 	addw	r3, fp, #2196	; 0x894
 8003b76:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003b7a:	2318      	movs	r3, #24
    labelPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z9U2));
 8003b7c:	ee1e 0a10 	vmov	r0, s28
 8003b80:	4629      	mov	r1, r5
 8003b82:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003b86:	9721      	str	r7, [sp, #132]	; 0x84
 8003b88:	f00e fa62 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003b8c:	ee1e 1a10 	vmov	r1, s28
 8003b90:	4648      	mov	r0, r9
 8003b92:	f00b fded 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPoil.setPosition(532, 167, 131, 73);
 8003b96:	2049      	movs	r0, #73	; 0x49
 8003b98:	2383      	movs	r3, #131	; 0x83
 8003b9a:	22a7      	movs	r2, #167	; 0xa7
 8003b9c:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003ba0:	9000      	str	r0, [sp, #0]
 8003ba2:	9802      	ldr	r0, [sp, #8]
 8003ba4:	f7ff f8a7 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003ba8:	f8cb a8d0 	str.w	sl, [fp, #2256]	; 0x8d0
        linespace = space;
 8003bac:	f8ab 88d4 	strh.w	r8, [fp, #2260]	; 0x8d4
        return TextArea::BoundingArea();
 8003bb0:	4628      	mov	r0, r5
 8003bb2:	f7ff fa2f 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003bb6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003bba:	f60b 03dc 	addw	r3, fp, #2268	; 0x8dc
 8003bbe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bc2:	49cc      	ldr	r1, [pc, #816]	; (8003ef4 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003bc4:	680b      	ldr	r3, [r1, #0]
        : typedTextId(id)
 8003bc6:	463e      	mov	r6, r7
    Unicode::snprintf(txtPoilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TP9G).getText());
 8003bc8:	f50b 643b 	add.w	r4, fp, #2992	; 0xbb0
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	f43f ad5a 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003bd2:	4ac9      	ldr	r2, [pc, #804]	; (8003ef8 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 8003bd4:	8813      	ldrh	r3, [r2, #0]
 8003bd6:	2b29      	cmp	r3, #41	; 0x29
 8003bd8:	f67f ad5f 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003bdc:	4fc7      	ldr	r7, [pc, #796]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003bde:	2129      	movs	r1, #41	; 0x29
 8003be0:	6838      	ldr	r0, [r7, #0]
 8003be2:	f004 fabf 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003be6:	4ac6      	ldr	r2, [pc, #792]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003be8:	4603      	mov	r3, r0
 8003bea:	2105      	movs	r1, #5
 8003bec:	4620      	mov	r0, r4
 8003bee:	f014 facb 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003bf2:	232a      	movs	r3, #42	; 0x2a
    txtPoil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E4IL));
 8003bf4:	9802      	ldr	r0, [sp, #8]
        wc1 = value;
 8003bf6:	f8cb 48e8 	str.w	r4, [fp, #2280]	; 0x8e8
 8003bfa:	4629      	mov	r1, r5
 8003bfc:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003c00:	9621      	str	r6, [sp, #132]	; 0x84
 8003c02:	f00e fa25 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c06:	9902      	ldr	r1, [sp, #8]
 8003c08:	4648      	mov	r0, r9
 8003c0a:	f00b fdb1 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTPS.setPosition(664, 167, 137, 73);
 8003c0e:	2349      	movs	r3, #73	; 0x49
 8003c10:	22a7      	movs	r2, #167	; 0xa7
 8003c12:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003c16:	9803      	ldr	r0, [sp, #12]
 8003c18:	9300      	str	r3, [sp, #0]
 8003c1a:	2389      	movs	r3, #137	; 0x89
 8003c1c:	f7ff f86b 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003c20:	f8cb a91c 	str.w	sl, [fp, #2332]	; 0x91c
        linespace = space;
 8003c24:	f8ab 8920 	strh.w	r8, [fp, #2336]	; 0x920
        return TextArea::BoundingArea();
 8003c28:	4628      	mov	r0, r5
 8003c2a:	f7ff f9f3 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003c2e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8003c32:	f60b 1328 	addw	r3, fp, #2344	; 0x928
 8003c36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c3a:	49ae      	ldr	r1, [pc, #696]	; (8003ef4 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003c3c:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2VKQ).getText());
 8003c3e:	f60b 34ba 	addw	r4, fp, #3002	; 0xbba
 8003c42:	2b00      	cmp	r3, #0
 8003c44:	f43f ad1f 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003c48:	4aab      	ldr	r2, [pc, #684]	; (8003ef8 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
 8003c4a:	8813      	ldrh	r3, [r2, #0]
 8003c4c:	2b23      	cmp	r3, #35	; 0x23
 8003c4e:	f67f ad24 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003c52:	6838      	ldr	r0, [r7, #0]
 8003c54:	2123      	movs	r1, #35	; 0x23
 8003c56:	f004 fa85 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003c5a:	4aa9      	ldr	r2, [pc, #676]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003c5c:	4603      	mov	r3, r0
 8003c5e:	2103      	movs	r1, #3
 8003c60:	4620      	mov	r0, r4
 8003c62:	f014 fa91 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003c66:	f8cb 4934 	str.w	r4, [fp, #2356]	; 0x934
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 8003c6a:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 8003c6c:	2324      	movs	r3, #36	; 0x24
 8003c6e:	9803      	ldr	r0, [sp, #12]
 8003c70:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003c74:	4621      	mov	r1, r4
 8003c76:	9621      	str	r6, [sp, #132]	; 0x84
    txtPbrake.setPosition(664, 287, 136, 73);
 8003c78:	f04f 0a49 	mov.w	sl, #73	; 0x49
    txtTPS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QBHD));
 8003c7c:	f00e f9e8 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003c80:	9903      	ldr	r1, [sp, #12]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003c82:	4e9c      	ldr	r6, [pc, #624]	; (8003ef4 <_ZN20DriverScreenViewBaseC1Ev+0xe5c>)
 8003c84:	4648      	mov	r0, r9
 8003c86:	f00b fd73 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8003c8a:	f04f 38ff 	mov.w	r8, #4294967295
    txtPbrake.setPosition(664, 287, 136, 73);
 8003c8e:	2388      	movs	r3, #136	; 0x88
 8003c90:	f240 121f 	movw	r2, #287	; 0x11f
 8003c94:	f44f 7126 	mov.w	r1, #664	; 0x298
 8003c98:	9804      	ldr	r0, [sp, #16]
 8003c9a:	f8cd a000 	str.w	sl, [sp]
        linespace = space;
 8003c9e:	2700      	movs	r7, #0
 8003ca0:	f7ff f829 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003ca4:	f8cb 8968 	str.w	r8, [fp, #2408]	; 0x968
        linespace = space;
 8003ca8:	f8ab 796c 	strh.w	r7, [fp, #2412]	; 0x96c
        return TextArea::BoundingArea();
 8003cac:	4620      	mov	r0, r4
 8003cae:	f7ff f9b1 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003cb2:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003cb6:	f60b 1374 	addw	r3, fp, #2420	; 0x974
 8003cba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003cbe:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5Z8O).getText());
 8003cc0:	f50b 613c 	add.w	r1, fp, #3008	; 0xbc0
 8003cc4:	9102      	str	r1, [sp, #8]
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	f43f acdd 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        return typedTextId < numberOfTypedTexts;
 8003ccc:	4d8a      	ldr	r5, [pc, #552]	; (8003ef8 <_ZN20DriverScreenViewBaseC1Ev+0xe60>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003cce:	882b      	ldrh	r3, [r5, #0]
 8003cd0:	2b21      	cmp	r3, #33	; 0x21
 8003cd2:	f67f ace2 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003cd6:	4a89      	ldr	r2, [pc, #548]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003cd8:	2121      	movs	r1, #33	; 0x21
 8003cda:	6810      	ldr	r0, [r2, #0]
 8003cdc:	f004 fa42 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003ce0:	4a87      	ldr	r2, [pc, #540]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003ce2:	4603      	mov	r3, r0
 8003ce4:	2104      	movs	r1, #4
 8003ce6:	9802      	ldr	r0, [sp, #8]
 8003ce8:	f014 fa4e 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003cec:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003cee:	4b85      	ldr	r3, [pc, #532]	; (8003f04 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPbrake.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IEE9));
 8003cf0:	9804      	ldr	r0, [sp, #16]
 8003cf2:	f8cb 1980 	str.w	r1, [fp, #2432]	; 0x980
 8003cf6:	9321      	str	r3, [sp, #132]	; 0x84
 8003cf8:	4621      	mov	r1, r4
 8003cfa:	2322      	movs	r3, #34	; 0x22
 8003cfc:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003d00:	f00e f9a6 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d04:	9904      	ldr	r1, [sp, #16]
 8003d06:	4648      	mov	r0, r9
 8003d08:	f00b fd32 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat24.setPosition(399, 407, 130, 73);
 8003d0c:	2382      	movs	r3, #130	; 0x82
 8003d0e:	f240 1297 	movw	r2, #407	; 0x197
 8003d12:	f240 118f 	movw	r1, #399	; 0x18f
 8003d16:	9805      	ldr	r0, [sp, #20]
 8003d18:	f8cd a000 	str.w	sl, [sp]
 8003d1c:	f7fe ffeb 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d20:	f8cb 89b4 	str.w	r8, [fp, #2484]	; 0x9b4
        linespace = space;
 8003d24:	f8ab 79b8 	strh.w	r7, [fp, #2488]	; 0x9b8
        return TextArea::BoundingArea();
 8003d28:	4620      	mov	r0, r4
 8003d2a:	f7ff f973 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003d2e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003d32:	f50b 631c 	add.w	r3, fp, #2496	; 0x9c0
 8003d36:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003d3a:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat24Buffer, TXTBAT24_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1E1Q).getText());
 8003d3c:	f60b 31c8 	addw	r1, fp, #3016	; 0xbc8
 8003d40:	9102      	str	r1, [sp, #8]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	f43f ac9f 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003d48:	882b      	ldrh	r3, [r5, #0]
 8003d4a:	2b1f      	cmp	r3, #31
 8003d4c:	f67f aca5 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003d50:	4a6a      	ldr	r2, [pc, #424]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003d52:	211f      	movs	r1, #31
 8003d54:	6810      	ldr	r0, [r2, #0]
 8003d56:	f004 fa05 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003d5a:	4a69      	ldr	r2, [pc, #420]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003d5c:	4603      	mov	r3, r0
 8003d5e:	2105      	movs	r1, #5
 8003d60:	9802      	ldr	r0, [sp, #8]
 8003d62:	f014 fa11 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003d66:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003d68:	4b66      	ldr	r3, [pc, #408]	; (8003f04 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat24.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BB62));
 8003d6a:	9805      	ldr	r0, [sp, #20]
 8003d6c:	f8cb 19cc 	str.w	r1, [fp, #2508]	; 0x9cc
 8003d70:	9321      	str	r3, [sp, #132]	; 0x84
 8003d72:	4621      	mov	r1, r4
 8003d74:	2320      	movs	r3, #32
 8003d76:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003d7a:	f00e f969 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003d7e:	9905      	ldr	r1, [sp, #20]
 8003d80:	4648      	mov	r0, r9
 8003d82:	f00b fcf5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPfuel.setPosition(533, 287, 131, 73);
 8003d86:	2383      	movs	r3, #131	; 0x83
 8003d88:	f240 121f 	movw	r2, #287	; 0x11f
 8003d8c:	f240 2115 	movw	r1, #533	; 0x215
 8003d90:	9806      	ldr	r0, [sp, #24]
 8003d92:	f8cd a000 	str.w	sl, [sp]
 8003d96:	f7fe ffae 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003d9a:	f8cb 8a00 	str.w	r8, [fp, #2560]	; 0xa00
        linespace = space;
 8003d9e:	f8ab 7a04 	strh.w	r7, [fp, #2564]	; 0xa04
        return TextArea::BoundingArea();
 8003da2:	4620      	mov	r0, r4
 8003da4:	f7ff f936 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003da8:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003dac:	f60b 230c 	addw	r3, fp, #2572	; 0xa0c
 8003db0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003db4:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtPfuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AJ0J).getText());
 8003db6:	f60b 31d2 	addw	r1, fp, #3026	; 0xbd2
 8003dba:	9102      	str	r1, [sp, #8]
 8003dbc:	2b00      	cmp	r3, #0
 8003dbe:	f43f ac62 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003dc2:	882b      	ldrh	r3, [r5, #0]
 8003dc4:	2b27      	cmp	r3, #39	; 0x27
 8003dc6:	f67f ac68 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003dca:	4a4c      	ldr	r2, [pc, #304]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003dcc:	2127      	movs	r1, #39	; 0x27
 8003dce:	6810      	ldr	r0, [r2, #0]
 8003dd0:	f004 f9c8 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003dd4:	4a4a      	ldr	r2, [pc, #296]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003dd6:	4603      	mov	r3, r0
 8003dd8:	2104      	movs	r1, #4
 8003dda:	9802      	ldr	r0, [sp, #8]
 8003ddc:	f014 f9d4 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003de0:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003de2:	4b48      	ldr	r3, [pc, #288]	; (8003f04 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtPfuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Q9H4));
 8003de4:	9806      	ldr	r0, [sp, #24]
 8003de6:	f8cb 1a18 	str.w	r1, [fp, #2584]	; 0xa18
 8003dea:	9321      	str	r3, [sp, #132]	; 0x84
 8003dec:	4621      	mov	r1, r4
 8003dee:	2328      	movs	r3, #40	; 0x28
 8003df0:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003df4:	f00e f92c 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003df8:	9906      	ldr	r1, [sp, #24]
 8003dfa:	4648      	mov	r0, r9
 8003dfc:	f00b fcb8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBat12.setPosition(267, 407, 131, 73);
 8003e00:	2383      	movs	r3, #131	; 0x83
 8003e02:	f240 1297 	movw	r2, #407	; 0x197
 8003e06:	f240 110b 	movw	r1, #267	; 0x10b
 8003e0a:	9807      	ldr	r0, [sp, #28]
 8003e0c:	f8cd a000 	str.w	sl, [sp]
 8003e10:	f7fe ff71 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003e14:	f8cb 8a4c 	str.w	r8, [fp, #2636]	; 0xa4c
        linespace = space;
 8003e18:	f8ab 7a50 	strh.w	r7, [fp, #2640]	; 0xa50
        return TextArea::BoundingArea();
 8003e1c:	4620      	mov	r0, r4
 8003e1e:	f7ff f8f9 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e22:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003e26:	f60b 2358 	addw	r3, fp, #2648	; 0xa58
 8003e2a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003e2e:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtBat12Buffer, TXTBAT12_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KOX0).getText());
 8003e30:	f60b 31da 	addw	r1, fp, #3034	; 0xbda
 8003e34:	9102      	str	r1, [sp, #8]
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	f43f ac25 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003e3c:	882b      	ldrh	r3, [r5, #0]
 8003e3e:	2b25      	cmp	r3, #37	; 0x25
 8003e40:	f67f ac2b 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003e44:	4a2d      	ldr	r2, [pc, #180]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
 8003e46:	2125      	movs	r1, #37	; 0x25
 8003e48:	6810      	ldr	r0, [r2, #0]
 8003e4a:	f004 f98b 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003e4e:	4a2c      	ldr	r2, [pc, #176]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003e50:	4603      	mov	r3, r0
 8003e52:	2105      	movs	r1, #5
 8003e54:	9802      	ldr	r0, [sp, #8]
 8003e56:	f014 f997 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003e5a:	9902      	ldr	r1, [sp, #8]
        : typedTextId(id)
 8003e5c:	4b29      	ldr	r3, [pc, #164]	; (8003f04 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
    txtBat12.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1UNR));
 8003e5e:	9807      	ldr	r0, [sp, #28]
 8003e60:	f8cb 1a64 	str.w	r1, [fp, #2660]	; 0xa64
 8003e64:	9321      	str	r3, [sp, #132]	; 0x84
 8003e66:	4621      	mov	r1, r4
 8003e68:	2326      	movs	r3, #38	; 0x26
 8003e6a:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003e6e:	f00e f8ef 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003e72:	9907      	ldr	r1, [sp, #28]
 8003e74:	4648      	mov	r0, r9
 8003e76:	f00b fc7b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtToil.setPosition(134, 287, 133, 73);
 8003e7a:	2385      	movs	r3, #133	; 0x85
 8003e7c:	f240 121f 	movw	r2, #287	; 0x11f
 8003e80:	2186      	movs	r1, #134	; 0x86
 8003e82:	9808      	ldr	r0, [sp, #32]
 8003e84:	f8cd a000 	str.w	sl, [sp]
 8003e88:	f7fe ff35 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        return TextArea::BoundingArea();
 8003e8c:	4620      	mov	r0, r4
        color = newColor;
 8003e8e:	f8cb 8a98 	str.w	r8, [fp, #2712]	; 0xa98
        linespace = space;
 8003e92:	f8ab 7a9c 	strh.w	r7, [fp, #2716]	; 0xa9c
 8003e96:	f7ff f8bd 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003e9a:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003e9e:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 8003ea2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003ea6:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CUPH).getText());
 8003ea8:	f60b 34e4 	addw	r4, fp, #3044	; 0xbe4
 8003eac:	2b00      	cmp	r3, #0
 8003eae:	f43f abea 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003eb2:	882b      	ldrh	r3, [r5, #0]
 8003eb4:	2b2d      	cmp	r3, #45	; 0x2d
 8003eb6:	f67f abf0 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003eba:	4e10      	ldr	r6, [pc, #64]	; (8003efc <_ZN20DriverScreenViewBaseC1Ev+0xe64>)
        : typedTextId(id)
 8003ebc:	4d11      	ldr	r5, [pc, #68]	; (8003f04 <_ZN20DriverScreenViewBaseC1Ev+0xe6c>)
        return texts->getText(typedTextId);
 8003ebe:	6830      	ldr	r0, [r6, #0]
 8003ec0:	212d      	movs	r1, #45	; 0x2d
 8003ec2:	f004 f94f 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003ec6:	4a0e      	ldr	r2, [pc, #56]	; (8003f00 <_ZN20DriverScreenViewBaseC1Ev+0xe68>)
 8003ec8:	4603      	mov	r3, r0
 8003eca:	2104      	movs	r1, #4
 8003ecc:	4620      	mov	r0, r4
 8003ece:	f014 f95b 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
 8003ed2:	f8cb 4ab0 	str.w	r4, [fp, #2736]	; 0xab0
    txtToil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BID7));
 8003ed6:	ac21      	add	r4, sp, #132	; 0x84
        : typedTextId(id)
 8003ed8:	232e      	movs	r3, #46	; 0x2e
 8003eda:	9808      	ldr	r0, [sp, #32]
 8003edc:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003ee0:	4621      	mov	r1, r4
 8003ee2:	9521      	str	r5, [sp, #132]	; 0x84
 8003ee4:	f00e f8b4 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003ee8:	9908      	ldr	r1, [sp, #32]
 8003eea:	4648      	mov	r0, r9
 8003eec:	f00b fc40 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003ef0:	e00a      	b.n	8003f08 <_ZN20DriverScreenViewBaseC1Ev+0xe70>
 8003ef2:	bf00      	nop
 8003ef4:	2000ef74 	.word	0x2000ef74
 8003ef8:	2000ef78 	.word	0x2000ef78
 8003efc:	2000ef80 	.word	0x2000ef80
 8003f00:	08028442 	.word	0x08028442
 8003f04:	080284b8 	.word	0x080284b8
    txtTorin.setPosition(134, 404, 133, 76);
 8003f08:	234c      	movs	r3, #76	; 0x4c
 8003f0a:	f44f 72ca 	mov.w	r2, #404	; 0x194
 8003f0e:	2186      	movs	r1, #134	; 0x86
 8003f10:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f12:	9300      	str	r3, [sp, #0]
 8003f14:	2385      	movs	r3, #133	; 0x85
 8003f16:	f7fe feee 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003f1a:	f8cb 8ae4 	str.w	r8, [fp, #2788]	; 0xae4
        linespace = space;
 8003f1e:	f8ab 7ae8 	strh.w	r7, [fp, #2792]	; 0xae8
        return TextArea::BoundingArea();
 8003f22:	4620      	mov	r0, r4
 8003f24:	f7ff f876 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003f28:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
        linespace = space;
 8003f2c:	46b8      	mov	r8, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003f2e:	4f53      	ldr	r7, [pc, #332]	; (800407c <_ZN20DriverScreenViewBaseC1Ev+0xfe4>)
        boundingArea = calculateBoundingArea();
 8003f30:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 8003f34:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8003f38:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IM6N).getText());
 8003f3a:	f60b 3aec 	addw	sl, fp, #3052	; 0xbec
 8003f3e:	2b00      	cmp	r3, #0
 8003f40:	f43f aba1 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003f44:	4a4e      	ldr	r2, [pc, #312]	; (8004080 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003f46:	8813      	ldrh	r3, [r2, #0]
 8003f48:	2b2b      	cmp	r3, #43	; 0x2b
 8003f4a:	f67f aba6 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003f4e:	212b      	movs	r1, #43	; 0x2b
 8003f50:	6830      	ldr	r0, [r6, #0]
 8003f52:	f004 f907 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003f56:	4a4b      	ldr	r2, [pc, #300]	; (8004084 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003f58:	4603      	mov	r3, r0
 8003f5a:	2104      	movs	r1, #4
 8003f5c:	4650      	mov	r0, sl
 8003f5e:	f014 f913 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003f62:	232c      	movs	r3, #44	; 0x2c
    txtTorin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_T9US));
 8003f64:	9809      	ldr	r0, [sp, #36]	; 0x24
        wc1 = value;
 8003f66:	f8cb aafc 	str.w	sl, [fp, #2812]	; 0xafc
 8003f6a:	4621      	mov	r1, r4
 8003f6c:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003f70:	9521      	str	r5, [sp, #132]	; 0x84
 8003f72:	f00e f86d 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003f76:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003f78:	4648      	mov	r0, r9
 8003f7a:	f00b fbf9 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(267, 24, 264, 72);
 8003f7e:	2348      	movs	r3, #72	; 0x48
 8003f80:	2218      	movs	r2, #24
 8003f82:	f240 110b 	movw	r1, #267	; 0x10b
 8003f86:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003f88:	9300      	str	r3, [sp, #0]
 8003f8a:	f44f 7384 	mov.w	r3, #264	; 0x108
 8003f8e:	f7fe feb2 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003f92:	f04f 33ff 	mov.w	r3, #4294967295
 8003f96:	f8cb 3b30 	str.w	r3, [fp, #2864]	; 0xb30
        linespace = space;
 8003f9a:	f8ab 8b34 	strh.w	r8, [fp, #2868]	; 0xb34
        return TextArea::BoundingArea();
 8003f9e:	4620      	mov	r0, r4
 8003fa0:	f7ff f838 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8003fa4:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003fa8:	f60b 333c 	addw	r3, fp, #2876	; 0xb3c
 8003fac:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003fb0:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1QOJ).getText());
 8003fb2:	f60b 3af4 	addw	sl, fp, #3060	; 0xbf4
 8003fb6:	2b00      	cmp	r3, #0
 8003fb8:	f43f ab65 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003fbc:	4a30      	ldr	r2, [pc, #192]	; (8004080 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8003fbe:	8813      	ldrh	r3, [r2, #0]
 8003fc0:	2b33      	cmp	r3, #51	; 0x33
 8003fc2:	f67f ab6a 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 8003fc6:	2133      	movs	r1, #51	; 0x33
 8003fc8:	6830      	ldr	r0, [r6, #0]
 8003fca:	f004 f8cb 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8003fce:	4a2d      	ldr	r2, [pc, #180]	; (8004084 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	2103      	movs	r1, #3
 8003fd4:	4650      	mov	r0, sl
 8003fd6:	f014 f8d7 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003fda:	2335      	movs	r3, #53	; 0x35
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QZ30));
 8003fdc:	980a      	ldr	r0, [sp, #40]	; 0x28
        wc1 = value;
 8003fde:	f8cb ab48 	str.w	sl, [fp, #2888]	; 0xb48
 8003fe2:	4621      	mov	r1, r4
 8003fe4:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8003fe8:	9521      	str	r5, [sp, #132]	; 0x84
 8003fea:	f00e f831 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003fee:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003ff0:	4648      	mov	r0, r9
 8003ff2:	f00b fbbd 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setPosition(532, 24, 268, 72);
 8003ff6:	2348      	movs	r3, #72	; 0x48
 8003ff8:	2218      	movs	r2, #24
 8003ffa:	f44f 7105 	mov.w	r1, #532	; 0x214
 8003ffe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8004000:	9300      	str	r3, [sp, #0]
 8004002:	f44f 7386 	mov.w	r3, #268	; 0x10c
 8004006:	f7fe fe76 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800400a:	f04f 33ff 	mov.w	r3, #4294967295
 800400e:	f8cb 3b7c 	str.w	r3, [fp, #2940]	; 0xb7c
        linespace = space;
 8004012:	f8ab 8b80 	strh.w	r8, [fp, #2944]	; 0xb80
        return TextArea::BoundingArea();
 8004016:	4620      	mov	r0, r4
 8004018:	f7fe fffc 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800401c:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8004020:	f60b 3388 	addw	r3, fp, #2952	; 0xb88
 8004024:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004028:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AHJH).getText());
 800402a:	f60b 38fa 	addw	r8, fp, #3066	; 0xbfa
 800402e:	2b00      	cmp	r3, #0
 8004030:	f43f ab29 	beq.w	8003686 <_ZN20DriverScreenViewBaseC1Ev+0x5ee>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004034:	4a12      	ldr	r2, [pc, #72]	; (8004080 <_ZN20DriverScreenViewBaseC1Ev+0xfe8>)
 8004036:	8813      	ldrh	r3, [r2, #0]
 8004038:	2b31      	cmp	r3, #49	; 0x31
 800403a:	f67f ab2e 	bls.w	800369a <_ZN20DriverScreenViewBaseC1Ev+0x602>
        return texts->getText(typedTextId);
 800403e:	6830      	ldr	r0, [r6, #0]
 8004040:	2131      	movs	r1, #49	; 0x31
 8004042:	f004 f88f 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8004046:	4a0f      	ldr	r2, [pc, #60]	; (8004084 <_ZN20DriverScreenViewBaseC1Ev+0xfec>)
 8004048:	4603      	mov	r3, r0
 800404a:	2108      	movs	r1, #8
 800404c:	4640      	mov	r0, r8
 800404e:	f014 f89b 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004052:	2332      	movs	r3, #50	; 0x32
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0URK));
 8004054:	980b      	ldr	r0, [sp, #44]	; 0x2c
        wc1 = value;
 8004056:	f8cb 8b94 	str.w	r8, [fp, #2964]	; 0xb94
 800405a:	4621      	mov	r1, r4
 800405c:	f8ad 3088 	strh.w	r3, [sp, #136]	; 0x88
 8004060:	9521      	str	r5, [sp, #132]	; 0x84
 8004062:	f00d fff5 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004066:	4648      	mov	r0, r9
 8004068:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800406a:	f00b fb81 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800406e:	4658      	mov	r0, fp
 8004070:	b025      	add	sp, #148	; 0x94
 8004072:	ecbd 8b10 	vpop	{d8-d15}
 8004076:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800407a:	bf00      	nop
 800407c:	2000ef74 	.word	0x2000ef74
 8004080:	2000ef78 	.word	0x2000ef78
 8004084:	08028442 	.word	0x08028442

08004088 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8004088:	4770      	bx	lr

0800408a <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800408a:	4770      	bx	lr

0800408c <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800408c:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8004090:	6808      	ldr	r0, [r1, #0]
 8004092:	6849      	ldr	r1, [r1, #4]
 8004094:	c303      	stmia	r3!, {r0, r1}
    }
 8004096:	4770      	bx	lr

08004098 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8004098:	4770      	bx	lr

0800409a <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800409a:	4770      	bx	lr

0800409c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800409c:	6041      	str	r1, [r0, #4]
    }
 800409e:	4770      	bx	lr

080040a0 <_ZNK8touchgfx10Transition13FullSolidRect12getSolidRectEv>:
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
    {
    public:
        virtual Rect getSolidRect() const
 80040a0:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80040a2:	2200      	movs	r2, #0
        {
            return Rect(0, 0, rect.width, rect.height);
 80040a4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80040a8:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80040ac:	8002      	strh	r2, [r0, #0]
 80040ae:	8042      	strh	r2, [r0, #2]
 80040b0:	8084      	strh	r4, [r0, #4]
 80040b2:	80c1      	strh	r1, [r0, #6]
        }
 80040b4:	bd10      	pop	{r4, pc}

080040b6 <_ZNK8touchgfx10Transition13FullSolidRect4drawERKNS_4RectE>:

        virtual void draw(const Rect& area) const
        {
        }
 80040b6:	4770      	bx	lr

080040b8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80040b8:	4770      	bx	lr
	...

080040bc <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80040bc:	4b06      	ldr	r3, [pc, #24]	; (80040d8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80040be:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80040c2:	2300      	movs	r3, #0
 80040c4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Startup

void FrontendApplicationBase::gotoStartupScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartupScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80040c8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80040cc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80040d0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoStartupScreenNoTransition();
    }
 80040d4:	4770      	bx	lr
 80040d6:	bf00      	nop
 80040d8:	08004565 	.word	0x08004565

080040dc <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80040dc:	2301      	movs	r3, #1
 80040de:	7203      	strb	r3, [r0, #8]
    }
 80040e0:	4770      	bx	lr

080040e2 <_ZN8touchgfx10Transition13FullSolidRectD1Ev>:
    class FullSolidRect : public Widget
 80040e2:	4770      	bx	lr

080040e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
 * the given direction.  This transition only draws the pixels in the
 * framebuffer once, and never moves any pixels. It is therefore very
 * useful on MCUs with limited performance.
 */
template <Direction templateDirection>
class WipeTransition : public Transition
 80040e4:	4770      	bx	lr

080040e6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 80040e6:	4770      	bx	lr

080040e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 80040e8:	4770      	bx	lr

080040ea <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80040ea:	4770      	bx	lr

080040ec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80040ec:	4770      	bx	lr

080040ee <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Synchronize framebuffers
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
        }
    }

    virtual void tearDown()
 80040ee:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80040f0:	6840      	ldr	r0, [r0, #4]
 80040f2:	6803      	ldr	r3, [r0, #0]
 80040f4:	3110      	adds	r1, #16
 80040f6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040f8:	4718      	bx	r3

080040fa <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80040fa:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80040fc:	6840      	ldr	r0, [r0, #4]
 80040fe:	6803      	ldr	r3, [r0, #0]
 8004100:	3110      	adds	r1, #16
 8004102:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8004104:	4718      	bx	r3

08004106 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 8004106:	4770      	bx	lr

08004108 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8004108:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800410a:	68c2      	ldr	r2, [r0, #12]
 800410c:	6841      	ldr	r1, [r0, #4]
 800410e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8004110:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8004112:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8004116:	07d2      	lsls	r2, r2, #31
 8004118:	bf48      	it	mi
 800411a:	590a      	ldrmi	r2, [r1, r4]
 800411c:	689b      	ldr	r3, [r3, #8]
    }
 800411e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8004122:	bf48      	it	mi
 8004124:	58d3      	ldrmi	r3, [r2, r3]
 8004126:	4718      	bx	r3

08004128 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8004128:	6843      	ldr	r3, [r0, #4]
 800412a:	b12b      	cbz	r3, 8004138 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800412c:	6883      	ldr	r3, [r0, #8]
 800412e:	b92b      	cbnz	r3, 800413c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8004130:	68c0      	ldr	r0, [r0, #12]
 8004132:	f000 0001 	and.w	r0, r0, #1
 8004136:	4770      	bx	lr
 8004138:	4618      	mov	r0, r3
 800413a:	4770      	bx	lr
 800413c:	2001      	movs	r0, #1
    }
 800413e:	4770      	bx	lr

08004140 <_ZN8touchgfx12NoTransitionD0Ev>:
 8004140:	b510      	push	{r4, lr}
 8004142:	210c      	movs	r1, #12
 8004144:	4604      	mov	r4, r0
 8004146:	f022 fa43 	bl	80265d0 <_ZdlPvj>
 800414a:	4620      	mov	r0, r4
 800414c:	bd10      	pop	{r4, pc}

0800414e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800414e:	b510      	push	{r4, lr}
 8004150:	2110      	movs	r1, #16
 8004152:	4604      	mov	r4, r0
 8004154:	f022 fa3c 	bl	80265d0 <_ZdlPvj>
 8004158:	4620      	mov	r0, r4
 800415a:	bd10      	pop	{r4, pc}

0800415c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800415c:	b510      	push	{r4, lr}
 800415e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8004162:	4604      	mov	r4, r0
 8004164:	f022 fa34 	bl	80265d0 <_ZdlPvj>
 8004168:	4620      	mov	r0, r4
 800416a:	bd10      	pop	{r4, pc}

0800416c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 800416c:	b510      	push	{r4, lr}
 800416e:	2138      	movs	r1, #56	; 0x38
 8004170:	4604      	mov	r4, r0
 8004172:	f022 fa2d 	bl	80265d0 <_ZdlPvj>
 8004176:	4620      	mov	r0, r4
 8004178:	bd10      	pop	{r4, pc}

0800417a <_ZN8touchgfx10Transition13FullSolidRectD0Ev>:
 800417a:	b510      	push	{r4, lr}
 800417c:	2128      	movs	r1, #40	; 0x28
 800417e:	4604      	mov	r4, r0
 8004180:	f022 fa26 	bl	80265d0 <_ZdlPvj>
 8004184:	4620      	mov	r0, r4
 8004186:	bd10      	pop	{r4, pc}

08004188 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 8004188:	b510      	push	{r4, lr}
 800418a:	2140      	movs	r1, #64	; 0x40
 800418c:	4604      	mov	r4, r0
 800418e:	f022 fa1f 	bl	80265d0 <_ZdlPvj>
 8004192:	4620      	mov	r0, r4
 8004194:	bd10      	pop	{r4, pc}

08004196 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 8004196:	b510      	push	{r4, lr}
 8004198:	2140      	movs	r1, #64	; 0x40
 800419a:	4604      	mov	r4, r0
 800419c:	f022 fa18 	bl	80265d0 <_ZdlPvj>
 80041a0:	4620      	mov	r0, r4
 80041a2:	bd10      	pop	{r4, pc}

080041a4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80041a4:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
 80041a6:	f010 fe7f 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 80041aa:	6803      	ldr	r3, [r0, #0]
    }
 80041ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
 80041b0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80041b2:	4718      	bx	r3

080041b4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041b4:	4b05      	ldr	r3, [pc, #20]	; (80041cc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 80041b6:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80041b8:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041ba:	b12b      	cbz	r3, 80041c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 80041bc:	6840      	ldr	r0, [r0, #4]
 80041be:	b118      	cbz	r0, 80041c8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 80041c0:	6803      	ldr	r3, [r0, #0]
 80041c2:	310c      	adds	r1, #12
 80041c4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041c6:	4718      	bx	r3
        }
    }
 80041c8:	4770      	bx	lr
 80041ca:	bf00      	nop
 80041cc:	2000ef1b 	.word	0x2000ef1b

080041d0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041d0:	4b05      	ldr	r3, [pc, #20]	; (80041e8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80041d2:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80041d4:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80041d6:	b12b      	cbz	r3, 80041e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 80041d8:	6840      	ldr	r0, [r0, #4]
 80041da:	b118      	cbz	r0, 80041e4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 80041dc:	6803      	ldr	r3, [r0, #0]
 80041de:	310c      	adds	r1, #12
 80041e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80041e2:	4718      	bx	r3
    }
 80041e4:	4770      	bx	lr
 80041e6:	bf00      	nop
 80041e8:	2000ef1b 	.word	0x2000ef1b

080041ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 80041ec:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 80041ee:	b570      	push	{r4, r5, r6, lr}
 80041f0:	4605      	mov	r5, r0
        if (done)
 80041f2:	b9bb      	cbnz	r3, 8004224 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 80041f4:	6840      	ldr	r0, [r0, #4]
 80041f6:	6803      	ldr	r3, [r0, #0]
 80041f8:	69db      	ldr	r3, [r3, #28]
 80041fa:	4798      	blx	r3
 80041fc:	4604      	mov	r4, r0
        while (d)
 80041fe:	b14c      	cbz	r4, 8004214 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 8004200:	88a1      	ldrh	r1, [r4, #4]
 8004202:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 8004204:	1ac9      	subs	r1, r1, r3
 8004206:	6823      	ldr	r3, [r4, #0]
 8004208:	4620      	mov	r0, r4
 800420a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800420c:	b209      	sxth	r1, r1
 800420e:	4798      	blx	r3
        return nextSibling;
 8004210:	69a4      	ldr	r4, [r4, #24]
        while (d)
 8004212:	e7f4      	b.n	80041fe <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 8004214:	6868      	ldr	r0, [r5, #4]
 8004216:	6803      	ldr	r3, [r0, #0]
 8004218:	f105 010c 	add.w	r1, r5, #12
 800421c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 800421e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 8004222:	4718      	bx	r3
    }
 8004224:	bd70      	pop	{r4, r5, r6, pc}

08004226 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8004226:	b570      	push	{r4, r5, r6, lr}
 8004228:	4604      	mov	r4, r0
        animationCounter++;
 800422a:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 800422e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 8004232:	3001      	adds	r0, #1
 8004234:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004236:	4298      	cmp	r0, r3
        animationCounter++;
 8004238:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 800423c:	d905      	bls.n	800424a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
 800423e:	2301      	movs	r3, #1
 8004240:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004242:	2300      	movs	r3, #0
 8004244:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8004248:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800424a:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 800424e:	2100      	movs	r1, #0
 8004250:	f012 fc5c 	bl	8016b0c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004254:	f010 0201 	ands.w	r2, r0, #1
 8004258:	b283      	uxth	r3, r0
 800425a:	d006      	beq.n	800426a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800425c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004260:	2800      	cmp	r0, #0
 8004262:	bfd8      	it	le
 8004264:	460a      	movle	r2, r1
 8004266:	1898      	adds	r0, r3, r2
 8004268:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 800426a:	8a23      	ldrh	r3, [r4, #16]
 800426c:	1ac0      	subs	r0, r0, r3
 800426e:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8004270:	6860      	ldr	r0, [r4, #4]
 8004272:	6803      	ldr	r3, [r0, #0]
 8004274:	69db      	ldr	r3, [r3, #28]
 8004276:	4798      	blx	r3
 8004278:	4605      	mov	r5, r0
        while (d)
 800427a:	b14d      	cbz	r5, 8004290 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 800427c:	88a9      	ldrh	r1, [r5, #4]
 800427e:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8004280:	4419      	add	r1, r3
 8004282:	682b      	ldr	r3, [r5, #0]
 8004284:	4628      	mov	r0, r5
 8004286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004288:	b209      	sxth	r1, r1
 800428a:	4798      	blx	r3
 800428c:	69ad      	ldr	r5, [r5, #24]
        while (d)
 800428e:	e7f4      	b.n	800427a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8004290:	6860      	ldr	r0, [r4, #4]
 8004292:	6803      	ldr	r3, [r0, #0]
    }
 8004294:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8004298:	695b      	ldr	r3, [r3, #20]
 800429a:	4718      	bx	r3

0800429c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
        if (done)
 800429c:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 800429e:	b570      	push	{r4, r5, r6, lr}
 80042a0:	4605      	mov	r5, r0
        if (done)
 80042a2:	b9bb      	cbnz	r3, 80042d4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        Drawable* d = screenContainer->getFirstChild();
 80042a4:	6840      	ldr	r0, [r0, #4]
 80042a6:	6803      	ldr	r3, [r0, #0]
 80042a8:	69db      	ldr	r3, [r3, #28]
 80042aa:	4798      	blx	r3
 80042ac:	4604      	mov	r4, r0
        while (d)
 80042ae:	b14c      	cbz	r4, 80042c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
                d->setX(d->getX() - targetValue);
 80042b0:	88a1      	ldrh	r1, [r4, #4]
 80042b2:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 80042b4:	1ac9      	subs	r1, r1, r3
 80042b6:	6823      	ldr	r3, [r4, #0]
 80042b8:	4620      	mov	r0, r4
 80042ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80042bc:	b209      	sxth	r1, r1
 80042be:	4798      	blx	r3
 80042c0:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80042c2:	e7f4      	b.n	80042ae <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
        screenContainer->add(snapshot);
 80042c4:	6868      	ldr	r0, [r5, #4]
 80042c6:	6803      	ldr	r3, [r0, #0]
 80042c8:	f105 010c 	add.w	r1, r5, #12
 80042cc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 80042ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80042d2:	4718      	bx	r3
    }
 80042d4:	bd70      	pop	{r4, r5, r6, pc}

080042d6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80042d6:	b570      	push	{r4, r5, r6, lr}
 80042d8:	4604      	mov	r4, r0
        animationCounter++;
 80042da:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 80042de:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 80042e2:	3001      	adds	r0, #1
 80042e4:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 80042e6:	4298      	cmp	r0, r3
        animationCounter++;
 80042e8:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 80042ec:	d905      	bls.n	80042fa <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 80042ee:	2301      	movs	r3, #1
 80042f0:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80042f2:	2300      	movs	r3, #0
 80042f4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 80042f8:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80042fa:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 80042fe:	2100      	movs	r1, #0
 8004300:	f012 fc04 	bl	8016b0c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004304:	f010 0201 	ands.w	r2, r0, #1
 8004308:	b283      	uxth	r3, r0
 800430a:	d006      	beq.n	800431a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800430c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004310:	2800      	cmp	r0, #0
 8004312:	bfd8      	it	le
 8004314:	460a      	movle	r2, r1
 8004316:	1898      	adds	r0, r3, r2
 8004318:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 800431a:	8a23      	ldrh	r3, [r4, #16]
 800431c:	1ac0      	subs	r0, r0, r3
 800431e:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8004320:	6860      	ldr	r0, [r4, #4]
 8004322:	6803      	ldr	r3, [r0, #0]
 8004324:	69db      	ldr	r3, [r3, #28]
 8004326:	4798      	blx	r3
 8004328:	4605      	mov	r5, r0
        while (d)
 800432a:	b14d      	cbz	r5, 8004340 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 800432c:	88a9      	ldrh	r1, [r5, #4]
 800432e:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8004330:	4419      	add	r1, r3
 8004332:	682b      	ldr	r3, [r5, #0]
 8004334:	4628      	mov	r0, r5
 8004336:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004338:	b209      	sxth	r1, r1
 800433a:	4798      	blx	r3
 800433c:	69ad      	ldr	r5, [r5, #24]
        while (d)
 800433e:	e7f4      	b.n	800432a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8004340:	6860      	ldr	r0, [r4, #4]
 8004342:	6803      	ldr	r3, [r0, #0]
    }
 8004344:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8004348:	695b      	ldr	r3, [r3, #20]
 800434a:	4718      	bx	r3

0800434c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800434c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800434e:	4604      	mov	r4, r0
        animationCounter++;
 8004350:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter > animationSteps)
 8004352:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8004354:	3001      	adds	r0, #1
 8004356:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 8004358:	4298      	cmp	r0, r3
        animationCounter++;
 800435a:	72a0      	strb	r0, [r4, #10]
        if (animationCounter > animationSteps)
 800435c:	d905      	bls.n	800436a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1e>
            done = true;
 800435e:	2301      	movs	r3, #1
 8004360:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 8004362:	2300      	movs	r3, #0
 8004364:	72a3      	strb	r3, [r4, #10]
    }
 8004366:	b003      	add	sp, #12
 8004368:	bd30      	pop	{r4, r5, pc}
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800436a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800436e:	2100      	movs	r1, #0
 8004370:	f012 fbcc 	bl	8016b0c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 8004374:	f010 0201 	ands.w	r2, r0, #1
 8004378:	b283      	uxth	r3, r0
 800437a:	d128      	bne.n	80043ce <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x82>
        calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 800437c:	81e0      	strh	r0, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800437e:	4b18      	ldr	r3, [pc, #96]	; (80043e0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x94>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004380:	4818      	ldr	r0, [pc, #96]	; (80043e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x98>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004382:	8819      	ldrh	r1, [r3, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 8004384:	8b25      	ldrh	r5, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004386:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8004388:	f9b0 0000 	ldrsh.w	r0, [r0]
 800438c:	f8ad 0006 	strh.w	r0, [sp, #6]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004390:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 8004392:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8004394:	442b      	add	r3, r5
 8004396:	1a5b      	subs	r3, r3, r1
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8004398:	b212      	sxth	r2, r2
 800439a:	f8ad 3004 	strh.w	r3, [sp, #4]
                screenContainer->invalidateRect(r);
 800439e:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 80043a0:	8322      	strh	r2, [r4, #24]
 80043a2:	f8ad 2000 	strh.w	r2, [sp]
 80043a6:	2200      	movs	r2, #0
 80043a8:	691b      	ldr	r3, [r3, #16]
 80043aa:	f8ad 2002 	strh.w	r2, [sp, #2]
 80043ae:	4669      	mov	r1, sp
 80043b0:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 80043b2:	7aa3      	ldrb	r3, [r4, #10]
 80043b4:	2b01      	cmp	r3, #1
 80043b6:	d1d6      	bne.n	8004366 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
 80043b8:	4b0b      	ldr	r3, [pc, #44]	; (80043e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x9c>)
 80043ba:	781b      	ldrb	r3, [r3, #0]
 80043bc:	2b00      	cmp	r3, #0
 80043be:	d0d2      	beq.n	8004366 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x1a>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043c0:	f010 fd72 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80043c4:	b003      	add	sp, #12
 80043c6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80043ca:	f010 bd73 	b.w	8014eb4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 80043ce:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80043d2:	2800      	cmp	r0, #0
 80043d4:	bfd8      	it	le
 80043d6:	460a      	movle	r2, r1
 80043d8:	4413      	add	r3, r2
 80043da:	81e3      	strh	r3, [r4, #14]
 80043dc:	e7cf      	b.n	800437e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x32>
 80043de:	bf00      	nop
 80043e0:	2000ef10 	.word	0x2000ef10
 80043e4:	2000ef12 	.word	0x2000ef12
 80043e8:	2000ef1a 	.word	0x2000ef1a

080043ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80043ec:	b510      	push	{r4, lr}
 80043ee:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80043f0:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 80043f4:	b158      	cbz	r0, 800440e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80043f6:	6803      	ldr	r3, [r0, #0]
 80043f8:	68db      	ldr	r3, [r3, #12]
 80043fa:	4798      	blx	r3
 80043fc:	b138      	cbz	r0, 800440e <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80043fe:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8004402:	6803      	ldr	r3, [r0, #0]
 8004404:	689b      	ldr	r3, [r3, #8]
 8004406:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8004408:	2300      	movs	r3, #0
 800440a:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800440e:	bd10      	pop	{r4, pc}

08004410 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDriverScreenScreenNoTransitionImpl()
{
 8004410:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004414:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8004418:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800441a:	68a8      	ldr	r0, [r5, #8]
 800441c:	6803      	ldr	r3, [r0, #0]
 800441e:	6a1b      	ldr	r3, [r3, #32]
 8004420:	4798      	blx	r3
 8004422:	f640 431b 	movw	r3, #3099	; 0xc1b
 8004426:	4298      	cmp	r0, r3
 8004428:	d805      	bhi.n	8004436 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x26>
 800442a:	4b46      	ldr	r3, [pc, #280]	; (8004544 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x134>)
 800442c:	4a46      	ldr	r2, [pc, #280]	; (8004548 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 800442e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004430:	4846      	ldr	r0, [pc, #280]	; (800454c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x13c>)
 8004432:	f022 f8fb 	bl	802662c <__assert_func>
 8004436:	6868      	ldr	r0, [r5, #4]
 8004438:	6803      	ldr	r3, [r0, #0]
 800443a:	6a1b      	ldr	r3, [r3, #32]
 800443c:	4798      	blx	r3
 800443e:	280f      	cmp	r0, #15
 8004440:	d803      	bhi.n	800444a <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x3a>
 8004442:	4b43      	ldr	r3, [pc, #268]	; (8004550 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x140>)
 8004444:	4a40      	ldr	r2, [pc, #256]	; (8004548 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 8004446:	21a4      	movs	r1, #164	; 0xa4
 8004448:	e7f2      	b.n	8004430 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800444a:	68e8      	ldr	r0, [r5, #12]
 800444c:	6803      	ldr	r3, [r0, #0]
 800444e:	6a1b      	ldr	r3, [r3, #32]
 8004450:	4798      	blx	r3
 8004452:	280b      	cmp	r0, #11
 8004454:	d803      	bhi.n	800445e <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x4e>
 8004456:	4b3f      	ldr	r3, [pc, #252]	; (8004554 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x144>)
 8004458:	4a3b      	ldr	r2, [pc, #236]	; (8004548 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x138>)
 800445a:	21a5      	movs	r1, #165	; 0xa5
 800445c:	e7e8      	b.n	8004430 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800445e:	f010 fd23 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004462:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800455c <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x14c>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 8004466:	3004      	adds	r0, #4
 8004468:	f010 fd84 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800446c:	f8d9 0000 	ldr.w	r0, [r9]
 8004470:	b110      	cbz	r0, 8004478 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 8004472:	6803      	ldr	r3, [r0, #0]
 8004474:	68db      	ldr	r3, [r3, #12]
 8004476:	4798      	blx	r3
    if (*currentTrans)
 8004478:	f8d9 0000 	ldr.w	r0, [r9]
 800447c:	b110      	cbz	r0, 8004484 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800447e:	6803      	ldr	r3, [r0, #0]
 8004480:	681b      	ldr	r3, [r3, #0]
 8004482:	4798      	blx	r3
    if (*currentScreen)
 8004484:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8004560 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x150>
 8004488:	f8d8 0000 	ldr.w	r0, [r8]
 800448c:	b110      	cbz	r0, 8004494 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 800448e:	6803      	ldr	r3, [r0, #0]
 8004490:	695b      	ldr	r3, [r3, #20]
 8004492:	4798      	blx	r3
    if (*currentPresenter)
 8004494:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004498:	b110      	cbz	r0, 80044a0 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 800449a:	6803      	ldr	r3, [r0, #0]
 800449c:	685b      	ldr	r3, [r3, #4]
 800449e:	4798      	blx	r3
    if (*currentScreen)
 80044a0:	f8d8 0000 	ldr.w	r0, [r8]
 80044a4:	b110      	cbz	r0, 80044ac <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80044a6:	6803      	ldr	r3, [r0, #0]
 80044a8:	681b      	ldr	r3, [r3, #0]
 80044aa:	4798      	blx	r3
    if (*currentPresenter)
 80044ac:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80044b0:	b110      	cbz	r0, 80044b8 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80044b2:	6803      	ldr	r3, [r0, #0]
 80044b4:	689b      	ldr	r3, [r3, #8]
 80044b6:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80044b8:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80044ba:	6803      	ldr	r3, [r0, #0]
 80044bc:	2100      	movs	r1, #0
 80044be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044c0:	4798      	blx	r3
        : screenContainer(0), done(false)
 80044c2:	f04f 0b00 	mov.w	fp, #0
 80044c6:	4b24      	ldr	r3, [pc, #144]	; (8004558 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x148>)
 80044c8:	6003      	str	r3, [r0, #0]
 80044ca:	4604      	mov	r4, r0
 80044cc:	f8c0 b004 	str.w	fp, [r0, #4]
 80044d0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80044d4:	68a8      	ldr	r0, [r5, #8]
 80044d6:	6803      	ldr	r3, [r0, #0]
 80044d8:	4659      	mov	r1, fp
 80044da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044dc:	4798      	blx	r3
 80044de:	4606      	mov	r6, r0
 80044e0:	f003 ff9a 	bl	8008418 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80044e4:	6868      	ldr	r0, [r5, #4]
 80044e6:	6803      	ldr	r3, [r0, #0]
 80044e8:	4659      	mov	r1, fp
 80044ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80044ec:	4798      	blx	r3
 80044ee:	4631      	mov	r1, r6
 80044f0:	4605      	mov	r5, r0
 80044f2:	f003 ff6b 	bl	80083cc <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 80044f6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80044fa:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80044fe:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004502:	b1e5      	cbz	r5, 800453e <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0x12e>
 8004504:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8004506:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800450a:	6833      	ldr	r3, [r6, #0]
    virtual void debugMessageChanged() {};
    virtual void missionChanged() {};

    void bind(Model* m)
    {
        model = m;
 800450c:	f8c5 a008 	str.w	sl, [r5, #8]
 8004510:	4630      	mov	r0, r6
 8004512:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8004514:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004516:	4798      	blx	r3
    newPresenter->activate();
 8004518:	682b      	ldr	r3, [r5, #0]
 800451a:	4628      	mov	r0, r5
 800451c:	681b      	ldr	r3, [r3, #0]
 800451e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004520:	4621      	mov	r1, r4
 8004522:	4630      	mov	r0, r6
 8004524:	f012 faec 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004528:	6823      	ldr	r3, [r4, #0]
 800452a:	4620      	mov	r0, r4
 800452c:	691b      	ldr	r3, [r3, #16]
 800452e:	4798      	blx	r3
    newTransition->invalidate();
 8004530:	6823      	ldr	r3, [r4, #0]
 8004532:	695b      	ldr	r3, [r3, #20]
 8004534:	4620      	mov	r0, r4
}
 8004536:	b001      	add	sp, #4
 8004538:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800453c:	4718      	bx	r3
    model->bind(newPresenter);
 800453e:	462b      	mov	r3, r5
 8004540:	e7e1      	b.n	8004506 <_ZN23FrontendApplicationBase38gotoDriverScreenScreenNoTransitionImplEv+0xf6>
 8004542:	bf00      	nop
 8004544:	080285e8 	.word	0x080285e8
 8004548:	08028676 	.word	0x08028676
 800454c:	08028784 	.word	0x08028784
 8004550:	080287cb 	.word	0x080287cb
 8004554:	0802886e 	.word	0x0802886e
 8004558:	08029424 	.word	0x08029424
 800455c:	2000ef64 	.word	0x2000ef64
 8004560:	2000ef60 	.word	0x2000ef60

08004564 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv>:
{
 8004564:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartupView, StartupPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004568:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 800456c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800456e:	68a8      	ldr	r0, [r5, #8]
 8004570:	6803      	ldr	r3, [r0, #0]
 8004572:	6a1b      	ldr	r3, [r3, #32]
 8004574:	4798      	blx	r3
 8004576:	28e3      	cmp	r0, #227	; 0xe3
 8004578:	d805      	bhi.n	8004586 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x22>
 800457a:	4b46      	ldr	r3, [pc, #280]	; (8004694 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 800457c:	4a46      	ldr	r2, [pc, #280]	; (8004698 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 800457e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004580:	4846      	ldr	r0, [pc, #280]	; (800469c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x138>)
 8004582:	f022 f853 	bl	802662c <__assert_func>
 8004586:	6868      	ldr	r0, [r5, #4]
 8004588:	6803      	ldr	r3, [r0, #0]
 800458a:	6a1b      	ldr	r3, [r3, #32]
 800458c:	4798      	blx	r3
 800458e:	280f      	cmp	r0, #15
 8004590:	d803      	bhi.n	800459a <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x36>
 8004592:	4b43      	ldr	r3, [pc, #268]	; (80046a0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x13c>)
 8004594:	4a40      	ldr	r2, [pc, #256]	; (8004698 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 8004596:	21a4      	movs	r1, #164	; 0xa4
 8004598:	e7f2      	b.n	8004580 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800459a:	68e8      	ldr	r0, [r5, #12]
 800459c:	6803      	ldr	r3, [r0, #0]
 800459e:	6a1b      	ldr	r3, [r3, #32]
 80045a0:	4798      	blx	r3
 80045a2:	280b      	cmp	r0, #11
 80045a4:	d803      	bhi.n	80045ae <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x4a>
 80045a6:	4b3f      	ldr	r3, [pc, #252]	; (80046a4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x140>)
 80045a8:	4a3b      	ldr	r2, [pc, #236]	; (8004698 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 80045aa:	21a5      	movs	r1, #165	; 0xa5
 80045ac:	e7e8      	b.n	8004580 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80045ae:	f010 fc7b 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80045b2:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80046ac <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x148>
 80045b6:	3004      	adds	r0, #4
 80045b8:	f010 fcdc 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80045bc:	f8d9 0000 	ldr.w	r0, [r9]
 80045c0:	b110      	cbz	r0, 80045c8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80045c2:	6803      	ldr	r3, [r0, #0]
 80045c4:	68db      	ldr	r3, [r3, #12]
 80045c6:	4798      	blx	r3
    if (*currentTrans)
 80045c8:	f8d9 0000 	ldr.w	r0, [r9]
 80045cc:	b110      	cbz	r0, 80045d4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 80045ce:	6803      	ldr	r3, [r0, #0]
 80045d0:	681b      	ldr	r3, [r3, #0]
 80045d2:	4798      	blx	r3
    if (*currentScreen)
 80045d4:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80046b0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x14c>
 80045d8:	f8d8 0000 	ldr.w	r0, [r8]
 80045dc:	b110      	cbz	r0, 80045e4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80045de:	6803      	ldr	r3, [r0, #0]
 80045e0:	695b      	ldr	r3, [r3, #20]
 80045e2:	4798      	blx	r3
    if (*currentPresenter)
 80045e4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80045e8:	b110      	cbz	r0, 80045f0 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80045ea:	6803      	ldr	r3, [r0, #0]
 80045ec:	685b      	ldr	r3, [r3, #4]
 80045ee:	4798      	blx	r3
    if (*currentScreen)
 80045f0:	f8d8 0000 	ldr.w	r0, [r8]
 80045f4:	b110      	cbz	r0, 80045fc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80045f6:	6803      	ldr	r3, [r0, #0]
 80045f8:	681b      	ldr	r3, [r3, #0]
 80045fa:	4798      	blx	r3
    if (*currentPresenter)
 80045fc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004600:	b110      	cbz	r0, 8004608 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8004602:	6803      	ldr	r3, [r0, #0]
 8004604:	689b      	ldr	r3, [r3, #8]
 8004606:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004608:	68e8      	ldr	r0, [r5, #12]
 800460a:	6803      	ldr	r3, [r0, #0]
 800460c:	2100      	movs	r1, #0
 800460e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004610:	4798      	blx	r3
 8004612:	f04f 0b00 	mov.w	fp, #0
 8004616:	4b24      	ldr	r3, [pc, #144]	; (80046a8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x144>)
 8004618:	6003      	str	r3, [r0, #0]
 800461a:	4604      	mov	r4, r0
 800461c:	f8c0 b004 	str.w	fp, [r0, #4]
 8004620:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004624:	68a8      	ldr	r0, [r5, #8]
 8004626:	6803      	ldr	r3, [r0, #0]
 8004628:	4659      	mov	r1, fp
 800462a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800462c:	4798      	blx	r3
 800462e:	4606      	mov	r6, r0
 8004630:	f004 fd08 	bl	8009044 <_ZN11StartupViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004634:	6868      	ldr	r0, [r5, #4]
 8004636:	6803      	ldr	r3, [r0, #0]
 8004638:	4659      	mov	r1, fp
 800463a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800463c:	4798      	blx	r3
 800463e:	4631      	mov	r1, r6
 8004640:	4605      	mov	r5, r0
 8004642:	f004 fcdb 	bl	8008ffc <_ZN16StartupPresenterC1ER11StartupView>
    *currentTrans = newTransition;
 8004646:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800464a:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800464e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004652:	b1e5      	cbz	r5, 800468e <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x12a>
 8004654:	1d2b      	adds	r3, r5, #4
 8004656:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800465a:	6833      	ldr	r3, [r6, #0]
 800465c:	f8c5 a008 	str.w	sl, [r5, #8]
 8004660:	4630      	mov	r0, r6
 8004662:	68db      	ldr	r3, [r3, #12]
 8004664:	63f5      	str	r5, [r6, #60]	; 0x3c
 8004666:	4798      	blx	r3
    newPresenter->activate();
 8004668:	682b      	ldr	r3, [r5, #0]
 800466a:	4628      	mov	r0, r5
 800466c:	681b      	ldr	r3, [r3, #0]
 800466e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004670:	4621      	mov	r1, r4
 8004672:	4630      	mov	r0, r6
 8004674:	f012 fa44 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004678:	6823      	ldr	r3, [r4, #0]
 800467a:	4620      	mov	r0, r4
 800467c:	691b      	ldr	r3, [r3, #16]
 800467e:	4798      	blx	r3
    newTransition->invalidate();
 8004680:	6823      	ldr	r3, [r4, #0]
 8004682:	695b      	ldr	r3, [r3, #20]
 8004684:	4620      	mov	r0, r4
}
 8004686:	b001      	add	sp, #4
 8004688:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800468c:	4718      	bx	r3
    model->bind(newPresenter);
 800468e:	462b      	mov	r3, r5
 8004690:	e7e1      	b.n	8004656 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xf2>
 8004692:	bf00      	nop
 8004694:	080285e8 	.word	0x080285e8
 8004698:	08028911 	.word	0x08028911
 800469c:	08028784 	.word	0x08028784
 80046a0:	080287cb 	.word	0x080287cb
 80046a4:	0802886e 	.word	0x0802886e
 80046a8:	08029424 	.word	0x08029424
 80046ac:	2000ef64 	.word	0x2000ef64
 80046b0:	2000ef60 	.word	0x2000ef60

080046b4 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80046b4:	4b04      	ldr	r3, [pc, #16]	; (80046c8 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80046bc:	b10a      	cbz	r2, 80046c2 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80046be:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80046c0:	b900      	cbnz	r0, 80046c4 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80046c2:	6898      	ldr	r0, [r3, #8]
    }
 80046c4:	4770      	bx	lr
 80046c6:	bf00      	nop
 80046c8:	2000ef1c 	.word	0x2000ef1c

080046cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80046cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046ce:	4604      	mov	r4, r0
 80046d0:	4617      	mov	r7, r2
 80046d2:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80046d4:	f010 fd1c 	bl	8015110 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80046d8:	4b10      	ldr	r3, [pc, #64]	; (800471c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80046da:	601c      	str	r4, [r3, #0]
      model(m)
 80046dc:	4b10      	ldr	r3, [pc, #64]	; (8004720 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80046de:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80046e0:	4b10      	ldr	r3, [pc, #64]	; (8004724 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
          pendingScreenTransitionCallback(0)
 80046e2:	2500      	movs	r5, #0
 80046e4:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
        return instance;
 80046e8:	4b0f      	ldr	r3, [pc, #60]	; (8004728 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80046ea:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80046ee:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80046f0:	6803      	ldr	r3, [r0, #0]
 80046f2:	4629      	mov	r1, r5
 80046f4:	689b      	ldr	r3, [r3, #8]
 80046f6:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
      model(m)
 80046fa:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80046fe:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8004700:	4628      	mov	r0, r5
 8004702:	f003 fcf3 	bl	80080ec <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8004706:	f7ff ffd5 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 800470a:	f01a f8c6 	bl	801e89a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800470e:	f7ff ffd1 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8004712:	f01a f93d 	bl	801e990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
}
 8004716:	4620      	mov	r0, r4
 8004718:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800471a:	bf00      	nop
 800471c:	2000ef70 	.word	0x2000ef70
 8004720:	080293d0 	.word	0x080293d0
 8004724:	080293b8 	.word	0x080293b8
 8004728:	2000ef1c 	.word	0x2000ef1c

0800472c <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800472c:	4b06      	ldr	r3, [pc, #24]	; (8004748 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv+0x1c>)
 800472e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004732:	2300      	movs	r3, #0
 8004734:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004738:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800473c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004740:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004744:	4770      	bx	lr
 8004746:	bf00      	nop
 8004748:	08004565 	.word	0x08004565

0800474c <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>:
 800474c:	4b06      	ldr	r3, [pc, #24]	; (8004768 <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv+0x1c>)
 800474e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004752:	2300      	movs	r3, #0
 8004754:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004758:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800475c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004760:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004764:	4770      	bx	lr
 8004766:	bf00      	nop
 8004768:	08004879 	.word	0x08004879

0800476c <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>:
 800476c:	4b06      	ldr	r3, [pc, #24]	; (8004788 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv+0x1c>)
 800476e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004772:	2300      	movs	r3, #0
 8004774:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004778:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800477c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004780:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004784:	4770      	bx	lr
 8004786:	bf00      	nop
 8004788:	08004d05 	.word	0x08004d05

0800478c <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv>:
 800478c:	4b06      	ldr	r3, [pc, #24]	; (80047a8 <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionEastEv+0x1c>)
 800478e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004792:	2300      	movs	r3, #0
 8004794:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004798:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800479c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047a0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047a4:	4770      	bx	lr
 80047a6:	bf00      	nop
 80047a8:	08005275 	.word	0x08005275

080047ac <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>:
 80047ac:	4b06      	ldr	r3, [pc, #24]	; (80047c8 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv+0x1c>)
 80047ae:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047b2:	2300      	movs	r3, #0
 80047b4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047b8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047bc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047c0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047c4:	4770      	bx	lr
 80047c6:	bf00      	nop
 80047c8:	08005135 	.word	0x08005135

080047cc <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv>:
 80047cc:	4b06      	ldr	r3, [pc, #24]	; (80047e8 <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionWestEv+0x1c>)
 80047ce:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047d2:	2300      	movs	r3, #0
 80047d4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047d8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047dc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80047e0:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80047e4:	4770      	bx	lr
 80047e6:	bf00      	nop
 80047e8:	08004bc5 	.word	0x08004bc5

080047ec <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>:
 80047ec:	4b06      	ldr	r3, [pc, #24]	; (8004808 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv+0x1c>)
 80047ee:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80047f2:	2300      	movs	r3, #0
 80047f4:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 80047f8:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80047fc:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004800:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004804:	4770      	bx	lr
 8004806:	bf00      	nop
 8004808:	08004ff5 	.word	0x08004ff5

0800480c <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv>:
 800480c:	4b06      	ldr	r3, [pc, #24]	; (8004828 <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionWestEv+0x1c>)
 800480e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004812:	2300      	movs	r3, #0
 8004814:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004818:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800481c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004820:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004824:	4770      	bx	lr
 8004826:	bf00      	nop
 8004828:	08004a85 	.word	0x08004a85

0800482c <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>:
 800482c:	4b06      	ldr	r3, [pc, #24]	; (8004848 <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv+0x1c>)
 800482e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004832:	2300      	movs	r3, #0
 8004834:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8004838:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800483c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004840:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004844:	4770      	bx	lr
 8004846:	bf00      	nop
 8004848:	08004411 	.word	0x08004411

0800484c <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv>:
 800484c:	4b06      	ldr	r3, [pc, #24]	; (8004868 <_ZN23FrontendApplicationBase41gotoDriverScreenScreenSlideTransitionEastEv+0x1c>)
 800484e:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8004852:	2300      	movs	r3, #0
 8004854:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8004858:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 800485c:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8004860:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8004864:	4770      	bx	lr
 8004866:	bf00      	nop
 8004868:	08004eb5 	.word	0x08004eb5

0800486c <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>:
 800486c:	6803      	ldr	r3, [r0, #0]
 800486e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004870:	4718      	bx	r3

08004872 <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>:
 8004872:	6803      	ldr	r3, [r0, #0]
 8004874:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004876:	4718      	bx	r3

08004878 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv>:
{
 8004878:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800487c:	e9d0 ba55 	ldrd	fp, sl, [r0, #340]	; 0x154
{
 8004880:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004882:	f8db 0008 	ldr.w	r0, [fp, #8]
 8004886:	6803      	ldr	r3, [r0, #0]
 8004888:	6a1b      	ldr	r3, [r3, #32]
 800488a:	4798      	blx	r3
 800488c:	f244 7397 	movw	r3, #18327	; 0x4797
 8004890:	4298      	cmp	r0, r3
 8004892:	d805      	bhi.n	80048a0 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x28>
 8004894:	4b54      	ldr	r3, [pc, #336]	; (80049e8 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x170>)
 8004896:	4a55      	ldr	r2, [pc, #340]	; (80049ec <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 8004898:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800489a:	4855      	ldr	r0, [pc, #340]	; (80049f0 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x178>)
 800489c:	f021 fec6 	bl	802662c <__assert_func>
 80048a0:	f8db 0004 	ldr.w	r0, [fp, #4]
 80048a4:	6803      	ldr	r3, [r0, #0]
 80048a6:	6a1b      	ldr	r3, [r3, #32]
 80048a8:	4798      	blx	r3
 80048aa:	280f      	cmp	r0, #15
 80048ac:	d803      	bhi.n	80048b6 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x3e>
 80048ae:	4b51      	ldr	r3, [pc, #324]	; (80049f4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x17c>)
 80048b0:	4a4e      	ldr	r2, [pc, #312]	; (80049ec <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 80048b2:	21a4      	movs	r1, #164	; 0xa4
 80048b4:	e7f1      	b.n	800489a <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80048b6:	f8db 000c 	ldr.w	r0, [fp, #12]
 80048ba:	6803      	ldr	r3, [r0, #0]
 80048bc:	6a1b      	ldr	r3, [r3, #32]
 80048be:	4798      	blx	r3
 80048c0:	2837      	cmp	r0, #55	; 0x37
 80048c2:	d803      	bhi.n	80048cc <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x54>
 80048c4:	4b4c      	ldr	r3, [pc, #304]	; (80049f8 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x180>)
 80048c6:	4a49      	ldr	r2, [pc, #292]	; (80049ec <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x174>)
 80048c8:	21a5      	movs	r1, #165	; 0xa5
 80048ca:	e7e6      	b.n	800489a <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 80048cc:	f010 faec 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80048d0:	f8df 9138 	ldr.w	r9, [pc, #312]	; 8004a0c <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x194>
 80048d4:	3004      	adds	r0, #4
 80048d6:	f010 fb4d 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80048da:	f8d9 0000 	ldr.w	r0, [r9]
 80048de:	b110      	cbz	r0, 80048e6 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x6e>
        (*currentTrans)->tearDown();
 80048e0:	6803      	ldr	r3, [r0, #0]
 80048e2:	68db      	ldr	r3, [r3, #12]
 80048e4:	4798      	blx	r3
    if (*currentTrans)
 80048e6:	f8d9 0000 	ldr.w	r0, [r9]
 80048ea:	b110      	cbz	r0, 80048f2 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x7a>
        (*currentTrans)->~Transition();
 80048ec:	6803      	ldr	r3, [r0, #0]
 80048ee:	681b      	ldr	r3, [r3, #0]
 80048f0:	4798      	blx	r3
    if (*currentScreen)
 80048f2:	f8df 811c 	ldr.w	r8, [pc, #284]	; 8004a10 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x198>
 80048f6:	f8d8 0000 	ldr.w	r0, [r8]
 80048fa:	b110      	cbz	r0, 8004902 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x8a>
        (*currentScreen)->tearDownScreen();
 80048fc:	6803      	ldr	r3, [r0, #0]
 80048fe:	695b      	ldr	r3, [r3, #20]
 8004900:	4798      	blx	r3
    if (*currentPresenter)
 8004902:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004906:	b110      	cbz	r0, 800490e <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x96>
        (*currentPresenter)->deactivate();
 8004908:	6803      	ldr	r3, [r0, #0]
 800490a:	685b      	ldr	r3, [r3, #4]
 800490c:	4798      	blx	r3
    if (*currentScreen)
 800490e:	f8d8 0000 	ldr.w	r0, [r8]
 8004912:	b110      	cbz	r0, 800491a <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xa2>
        (*currentScreen)->~Screen();
 8004914:	6803      	ldr	r3, [r0, #0]
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	4798      	blx	r3
    if (*currentPresenter)
 800491a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800491e:	b110      	cbz	r0, 8004926 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0xae>
        (*currentPresenter)->~Presenter();
 8004920:	6803      	ldr	r3, [r0, #0]
 8004922:	689b      	ldr	r3, [r3, #8]
 8004924:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004926:	f8db 000c 	ldr.w	r0, [fp, #12]
 800492a:	6803      	ldr	r3, [r0, #0]
 800492c:	2100      	movs	r1, #0
 800492e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004930:	4798      	blx	r3
          solid()
 8004932:	4b32      	ldr	r3, [pc, #200]	; (80049fc <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x184>)
 8004934:	6003      	str	r3, [r0, #0]
 8004936:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800493a:	8103      	strh	r3, [r0, #8]
 800493c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004940:	6343      	str	r3, [r0, #52]	; 0x34
    class FullSolidRect : public Widget
 8004942:	4b2f      	ldr	r3, [pc, #188]	; (8004a00 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x188>)
 8004944:	6103      	str	r3, [r0, #16]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004946:	4a2f      	ldr	r2, [pc, #188]	; (8004a04 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x18c>)
            targetValue = HAL::DISPLAY_WIDTH;
 8004948:	4b2f      	ldr	r3, [pc, #188]	; (8004a08 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x190>)
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800494a:	f9b2 2000 	ldrsh.w	r2, [r2]
            targetValue = HAL::DISPLAY_WIDTH;
 800494e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004952:	8183      	strh	r3, [r0, #12]
        : screenContainer(0), done(false)
 8004954:	2500      	movs	r5, #0
 8004956:	6045      	str	r5, [r0, #4]
          solid()
 8004958:	7285      	strb	r5, [r0, #10]
 800495a:	81c5      	strh	r5, [r0, #14]
 800495c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8004960:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8004964:	e9c0 5509 	strd	r5, r5, [r0, #36]	; 0x24
 8004968:	e9c0 550b 	strd	r5, r5, [r0, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800496c:	4629      	mov	r1, r5
 800496e:	4604      	mov	r4, r0
 8004970:	9200      	str	r2, [sp, #0]
 8004972:	3010      	adds	r0, #16
 8004974:	462a      	mov	r2, r5
 8004976:	f7fe f9be 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800497a:	4629      	mov	r1, r5
 800497c:	f8db 0008 	ldr.w	r0, [fp, #8]
 8004980:	f7ff ff74 	bl	800486c <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8004984:	4606      	mov	r6, r0
 8004986:	f003 ff81 	bl	800888c <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800498a:	4629      	mov	r1, r5
 800498c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8004990:	f7ff ff6f 	bl	8004872 <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 8004994:	4631      	mov	r1, r6
 8004996:	4605      	mov	r5, r0
 8004998:	f003 ff52 	bl	8008840 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 800499c:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80049a0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80049a4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80049a8:	b1e5      	cbz	r5, 80049e4 <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x16c>
 80049aa:	1d2b      	adds	r3, r5, #4
 80049ac:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80049b0:	6833      	ldr	r3, [r6, #0]
 80049b2:	f8c5 a008 	str.w	sl, [r5, #8]
 80049b6:	4630      	mov	r0, r6
 80049b8:	68db      	ldr	r3, [r3, #12]
 80049ba:	63f5      	str	r5, [r6, #60]	; 0x3c
 80049bc:	4798      	blx	r3
    newPresenter->activate();
 80049be:	682b      	ldr	r3, [r5, #0]
 80049c0:	4628      	mov	r0, r5
 80049c2:	681b      	ldr	r3, [r3, #0]
 80049c4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80049c6:	4621      	mov	r1, r4
 80049c8:	4630      	mov	r0, r6
 80049ca:	f012 f899 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80049ce:	6823      	ldr	r3, [r4, #0]
 80049d0:	4620      	mov	r0, r4
 80049d2:	691b      	ldr	r3, [r3, #16]
 80049d4:	4798      	blx	r3
    newTransition->invalidate();
 80049d6:	6823      	ldr	r3, [r4, #0]
 80049d8:	695b      	ldr	r3, [r3, #20]
 80049da:	4620      	mov	r0, r4
}
 80049dc:	b003      	add	sp, #12
 80049de:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049e2:	4718      	bx	r3
    model->bind(newPresenter);
 80049e4:	462b      	mov	r3, r5
 80049e6:	e7e1      	b.n	80049ac <_ZN23FrontendApplicationBase47gotoMainInfotaimentScreenWipeTransitionEastImplEv+0x134>
 80049e8:	080285e8 	.word	0x080285e8
 80049ec:	08028a15 	.word	0x08028a15
 80049f0:	08028784 	.word	0x08028784
 80049f4:	080287cb 	.word	0x080287cb
 80049f8:	0802886e 	.word	0x0802886e
 80049fc:	08029490 	.word	0x08029490
 8004a00:	08029350 	.word	0x08029350
 8004a04:	2000ef12 	.word	0x2000ef12
 8004a08:	2000ef10 	.word	0x2000ef10
 8004a0c:	2000ef64 	.word	0x2000ef64
 8004a10:	2000ef60 	.word	0x2000ef60

08004a14 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
 8004a14:	6803      	ldr	r3, [r0, #0]
 8004a16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004a18:	4718      	bx	r3
	...

08004a1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a1c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8004a1e:	4605      	mov	r5, r0
 8004a20:	2600      	movs	r6, #0
 8004a22:	4b14      	ldr	r3, [pc, #80]	; (8004a74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x58>)
 8004a24:	6046      	str	r6, [r0, #4]
 8004a26:	7206      	strb	r6, [r0, #8]
 8004a28:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a2c:	4604      	mov	r4, r0
          relativeValue(0)
 8004a2e:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004a30:	460f      	mov	r7, r1
          relativeValue(0)
 8004a32:	f00c fd5b 	bl	80114ec <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a36:	4b10      	ldr	r3, [pc, #64]	; (8004a78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x5c>)
          relativeValue(0)
 8004a38:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a3c:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8004a3e:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8004a42:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8004a44:	b923      	cbnz	r3, 8004a50 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x34>
            done = true;
 8004a46:	2301      	movs	r3, #1
 8004a48:	7223      	strb	r3, [r4, #8]
    }
 8004a4a:	4620      	mov	r0, r4
 8004a4c:	b003      	add	sp, #12
 8004a4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004a50:	4b0a      	ldr	r3, [pc, #40]	; (8004a7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>)
 8004a52:	4f0b      	ldr	r7, [pc, #44]	; (8004a80 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x64>)
 8004a54:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004a58:	9300      	str	r3, [sp, #0]
 8004a5a:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004a5e:	4632      	mov	r2, r6
 8004a60:	4631      	mov	r1, r6
 8004a62:	4628      	mov	r0, r5
 8004a64:	f7fe f947 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8004a68:	4628      	mov	r0, r5
 8004a6a:	f00c fcba 	bl	80113e2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
 8004a6e:	883b      	ldrh	r3, [r7, #0]
 8004a70:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8004a72:	e7ea      	b.n	8004a4a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x2e>
 8004a74:	0802946c 	.word	0x0802946c
 8004a78:	2000ef1b 	.word	0x2000ef1b
 8004a7c:	2000ef12 	.word	0x2000ef12
 8004a80:	2000ef10 	.word	0x2000ef10

08004a84 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv>:
{
 8004a84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004a88:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004a8c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004a8e:	68a0      	ldr	r0, [r4, #8]
 8004a90:	6803      	ldr	r3, [r0, #0]
 8004a92:	6a1b      	ldr	r3, [r3, #32]
 8004a94:	4798      	blx	r3
 8004a96:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 8004a9a:	d205      	bcs.n	8004aa8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x24>
 8004a9c:	4b42      	ldr	r3, [pc, #264]	; (8004ba8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x124>)
 8004a9e:	4a43      	ldr	r2, [pc, #268]	; (8004bac <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004aa0:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004aa2:	4843      	ldr	r0, [pc, #268]	; (8004bb0 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x12c>)
 8004aa4:	f021 fdc2 	bl	802662c <__assert_func>
 8004aa8:	6860      	ldr	r0, [r4, #4]
 8004aaa:	6803      	ldr	r3, [r0, #0]
 8004aac:	6a1b      	ldr	r3, [r3, #32]
 8004aae:	4798      	blx	r3
 8004ab0:	280f      	cmp	r0, #15
 8004ab2:	d803      	bhi.n	8004abc <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x38>
 8004ab4:	4b3f      	ldr	r3, [pc, #252]	; (8004bb4 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x130>)
 8004ab6:	4a3d      	ldr	r2, [pc, #244]	; (8004bac <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004ab8:	21a4      	movs	r1, #164	; 0xa4
 8004aba:	e7f2      	b.n	8004aa2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004abc:	68e0      	ldr	r0, [r4, #12]
 8004abe:	6803      	ldr	r3, [r0, #0]
 8004ac0:	6a1b      	ldr	r3, [r3, #32]
 8004ac2:	4798      	blx	r3
 8004ac4:	283f      	cmp	r0, #63	; 0x3f
 8004ac6:	d803      	bhi.n	8004ad0 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x4c>
 8004ac8:	4b3b      	ldr	r3, [pc, #236]	; (8004bb8 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x134>)
 8004aca:	4a38      	ldr	r2, [pc, #224]	; (8004bac <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x128>)
 8004acc:	21a5      	movs	r1, #165	; 0xa5
 8004ace:	e7e8      	b.n	8004aa2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8004ad0:	f010 f9ea 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004ad4:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004bbc <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x138>
 8004ad8:	3004      	adds	r0, #4
 8004ada:	f010 fa4b 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004ade:	f8d9 0000 	ldr.w	r0, [r9]
 8004ae2:	b110      	cbz	r0, 8004aea <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8004ae4:	6803      	ldr	r3, [r0, #0]
 8004ae6:	68db      	ldr	r3, [r3, #12]
 8004ae8:	4798      	blx	r3
    if (*currentTrans)
 8004aea:	f8d9 0000 	ldr.w	r0, [r9]
 8004aee:	b110      	cbz	r0, 8004af6 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8004af0:	6803      	ldr	r3, [r0, #0]
 8004af2:	681b      	ldr	r3, [r3, #0]
 8004af4:	4798      	blx	r3
    if (*currentScreen)
 8004af6:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8004bc0 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x13c>
 8004afa:	f8d8 0000 	ldr.w	r0, [r8]
 8004afe:	b110      	cbz	r0, 8004b06 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8004b00:	6803      	ldr	r3, [r0, #0]
 8004b02:	695b      	ldr	r3, [r3, #20]
 8004b04:	4798      	blx	r3
    if (*currentPresenter)
 8004b06:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b0a:	b110      	cbz	r0, 8004b12 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004b0c:	6803      	ldr	r3, [r0, #0]
 8004b0e:	685b      	ldr	r3, [r3, #4]
 8004b10:	4798      	blx	r3
    if (*currentScreen)
 8004b12:	f8d8 0000 	ldr.w	r0, [r8]
 8004b16:	b110      	cbz	r0, 8004b1e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004b18:	6803      	ldr	r3, [r0, #0]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	4798      	blx	r3
    if (*currentPresenter)
 8004b1e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004b22:	b110      	cbz	r0, 8004b2a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004b24:	6803      	ldr	r3, [r0, #0]
 8004b26:	689b      	ldr	r3, [r3, #8]
 8004b28:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004b2a:	68e0      	ldr	r0, [r4, #12]
 8004b2c:	2100      	movs	r1, #0
 8004b2e:	f7ff ff71 	bl	8004a14 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004b32:	2114      	movs	r1, #20
 8004b34:	4605      	mov	r5, r0
 8004b36:	f7ff ff71 	bl	8004a1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004b3a:	68a0      	ldr	r0, [r4, #8]
 8004b3c:	6803      	ldr	r3, [r0, #0]
 8004b3e:	2100      	movs	r1, #0
 8004b40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b42:	4798      	blx	r3
 8004b44:	4606      	mov	r6, r0
 8004b46:	f003 fb97 	bl	8008278 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004b4a:	6860      	ldr	r0, [r4, #4]
 8004b4c:	6803      	ldr	r3, [r0, #0]
 8004b4e:	2100      	movs	r1, #0
 8004b50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b52:	4798      	blx	r3
 8004b54:	4631      	mov	r1, r6
 8004b56:	4604      	mov	r4, r0
 8004b58:	f003 fb68 	bl	800822c <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 8004b5c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004b60:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004b64:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004b68:	b1dc      	cbz	r4, 8004ba2 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0x11e>
 8004b6a:	1d23      	adds	r3, r4, #4
 8004b6c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004b70:	6833      	ldr	r3, [r6, #0]
 8004b72:	f8c4 a008 	str.w	sl, [r4, #8]
 8004b76:	4630      	mov	r0, r6
 8004b78:	68db      	ldr	r3, [r3, #12]
 8004b7a:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004b7c:	4798      	blx	r3
    newPresenter->activate();
 8004b7e:	6823      	ldr	r3, [r4, #0]
 8004b80:	4620      	mov	r0, r4
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004b86:	4629      	mov	r1, r5
 8004b88:	4630      	mov	r0, r6
 8004b8a:	f011 ffb9 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004b8e:	682b      	ldr	r3, [r5, #0]
 8004b90:	4628      	mov	r0, r5
 8004b92:	691b      	ldr	r3, [r3, #16]
 8004b94:	4798      	blx	r3
    newTransition->invalidate();
 8004b96:	682b      	ldr	r3, [r5, #0]
 8004b98:	4628      	mov	r0, r5
 8004b9a:	695b      	ldr	r3, [r3, #20]
}
 8004b9c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ba0:	4718      	bx	r3
    model->bind(newPresenter);
 8004ba2:	4623      	mov	r3, r4
 8004ba4:	e7e2      	b.n	8004b6c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionWestImplEv+0xe8>
 8004ba6:	bf00      	nop
 8004ba8:	080285e8 	.word	0x080285e8
 8004bac:	08028b3b 	.word	0x08028b3b
 8004bb0:	08028784 	.word	0x08028784
 8004bb4:	080287cb 	.word	0x080287cb
 8004bb8:	0802886e 	.word	0x0802886e
 8004bbc:	2000ef64 	.word	0x2000ef64
 8004bc0:	2000ef60 	.word	0x2000ef60

08004bc4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv>:
{
 8004bc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004bc8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004bcc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004bce:	68a0      	ldr	r0, [r4, #8]
 8004bd0:	6803      	ldr	r3, [r0, #0]
 8004bd2:	6a1b      	ldr	r3, [r3, #32]
 8004bd4:	4798      	blx	r3
 8004bd6:	f240 438b 	movw	r3, #1163	; 0x48b
 8004bda:	4298      	cmp	r0, r3
 8004bdc:	d805      	bhi.n	8004bea <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x26>
 8004bde:	4b42      	ldr	r3, [pc, #264]	; (8004ce8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x124>)
 8004be0:	4a42      	ldr	r2, [pc, #264]	; (8004cec <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004be2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004be4:	4842      	ldr	r0, [pc, #264]	; (8004cf0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x12c>)
 8004be6:	f021 fd21 	bl	802662c <__assert_func>
 8004bea:	6860      	ldr	r0, [r4, #4]
 8004bec:	6803      	ldr	r3, [r0, #0]
 8004bee:	6a1b      	ldr	r3, [r3, #32]
 8004bf0:	4798      	blx	r3
 8004bf2:	280f      	cmp	r0, #15
 8004bf4:	d803      	bhi.n	8004bfe <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x3a>
 8004bf6:	4b3f      	ldr	r3, [pc, #252]	; (8004cf4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x130>)
 8004bf8:	4a3c      	ldr	r2, [pc, #240]	; (8004cec <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004bfa:	21a4      	movs	r1, #164	; 0xa4
 8004bfc:	e7f2      	b.n	8004be4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004bfe:	68e0      	ldr	r0, [r4, #12]
 8004c00:	6803      	ldr	r3, [r0, #0]
 8004c02:	6a1b      	ldr	r3, [r3, #32]
 8004c04:	4798      	blx	r3
 8004c06:	283f      	cmp	r0, #63	; 0x3f
 8004c08:	d803      	bhi.n	8004c12 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x4e>
 8004c0a:	4b3b      	ldr	r3, [pc, #236]	; (8004cf8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x134>)
 8004c0c:	4a37      	ldr	r2, [pc, #220]	; (8004cec <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x128>)
 8004c0e:	21a5      	movs	r1, #165	; 0xa5
 8004c10:	e7e8      	b.n	8004be4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004c12:	f010 f949 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004c16:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004cfc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x138>
 8004c1a:	3004      	adds	r0, #4
 8004c1c:	f010 f9aa 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004c20:	f8d9 0000 	ldr.w	r0, [r9]
 8004c24:	b110      	cbz	r0, 8004c2c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004c26:	6803      	ldr	r3, [r0, #0]
 8004c28:	68db      	ldr	r3, [r3, #12]
 8004c2a:	4798      	blx	r3
    if (*currentTrans)
 8004c2c:	f8d9 0000 	ldr.w	r0, [r9]
 8004c30:	b110      	cbz	r0, 8004c38 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004c32:	6803      	ldr	r3, [r0, #0]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4798      	blx	r3
    if (*currentScreen)
 8004c38:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004d00 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x13c>
 8004c3c:	f8d8 0000 	ldr.w	r0, [r8]
 8004c40:	b110      	cbz	r0, 8004c48 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004c42:	6803      	ldr	r3, [r0, #0]
 8004c44:	695b      	ldr	r3, [r3, #20]
 8004c46:	4798      	blx	r3
    if (*currentPresenter)
 8004c48:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c4c:	b110      	cbz	r0, 8004c54 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004c4e:	6803      	ldr	r3, [r0, #0]
 8004c50:	685b      	ldr	r3, [r3, #4]
 8004c52:	4798      	blx	r3
    if (*currentScreen)
 8004c54:	f8d8 0000 	ldr.w	r0, [r8]
 8004c58:	b110      	cbz	r0, 8004c60 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004c5a:	6803      	ldr	r3, [r0, #0]
 8004c5c:	681b      	ldr	r3, [r3, #0]
 8004c5e:	4798      	blx	r3
    if (*currentPresenter)
 8004c60:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004c64:	b110      	cbz	r0, 8004c6c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004c66:	6803      	ldr	r3, [r0, #0]
 8004c68:	689b      	ldr	r3, [r3, #8]
 8004c6a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004c6c:	68e0      	ldr	r0, [r4, #12]
 8004c6e:	2100      	movs	r1, #0
 8004c70:	f7ff fed0 	bl	8004a14 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004c74:	2114      	movs	r1, #20
 8004c76:	4605      	mov	r5, r0
 8004c78:	f7ff fed0 	bl	8004a1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004c7c:	68a0      	ldr	r0, [r4, #8]
 8004c7e:	6803      	ldr	r3, [r0, #0]
 8004c80:	2100      	movs	r1, #0
 8004c82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c84:	4798      	blx	r3
 8004c86:	4606      	mov	r6, r0
 8004c88:	f004 f8e8 	bl	8008e5c <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004c8c:	6860      	ldr	r0, [r4, #4]
 8004c8e:	6803      	ldr	r3, [r0, #0]
 8004c90:	2100      	movs	r1, #0
 8004c92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004c94:	4798      	blx	r3
 8004c96:	4631      	mov	r1, r6
 8004c98:	4604      	mov	r4, r0
 8004c9a:	f004 f88d 	bl	8008db8 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 8004c9e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004ca2:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004ca6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004caa:	b1dc      	cbz	r4, 8004ce4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0x120>
 8004cac:	1d23      	adds	r3, r4, #4
 8004cae:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004cb2:	6833      	ldr	r3, [r6, #0]
 8004cb4:	f8c4 a008 	str.w	sl, [r4, #8]
 8004cb8:	4630      	mov	r0, r6
 8004cba:	68db      	ldr	r3, [r3, #12]
 8004cbc:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004cbe:	4798      	blx	r3
    newPresenter->activate();
 8004cc0:	6823      	ldr	r3, [r4, #0]
 8004cc2:	4620      	mov	r0, r4
 8004cc4:	681b      	ldr	r3, [r3, #0]
 8004cc6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004cc8:	4629      	mov	r1, r5
 8004cca:	4630      	mov	r0, r6
 8004ccc:	f011 ff18 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004cd0:	682b      	ldr	r3, [r5, #0]
 8004cd2:	4628      	mov	r0, r5
 8004cd4:	691b      	ldr	r3, [r3, #16]
 8004cd6:	4798      	blx	r3
    newTransition->invalidate();
 8004cd8:	682b      	ldr	r3, [r5, #0]
 8004cda:	4628      	mov	r0, r5
 8004cdc:	695b      	ldr	r3, [r3, #20]
}
 8004cde:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004ce2:	4718      	bx	r3
    model->bind(newPresenter);
 8004ce4:	4623      	mov	r3, r4
 8004ce6:	e7e2      	b.n	8004cae <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionWestImplEv+0xea>
 8004ce8:	080285e8 	.word	0x080285e8
 8004cec:	08028c66 	.word	0x08028c66
 8004cf0:	08028784 	.word	0x08028784
 8004cf4:	080287cb 	.word	0x080287cb
 8004cf8:	0802886e 	.word	0x0802886e
 8004cfc:	2000ef64 	.word	0x2000ef64
 8004d00:	2000ef60 	.word	0x2000ef60

08004d04 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv>:
{
 8004d04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004d08:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004d0c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004d0e:	68a0      	ldr	r0, [r4, #8]
 8004d10:	6803      	ldr	r3, [r0, #0]
 8004d12:	6a1b      	ldr	r3, [r3, #32]
 8004d14:	4798      	blx	r3
 8004d16:	f244 7397 	movw	r3, #18327	; 0x4797
 8004d1a:	4298      	cmp	r0, r3
 8004d1c:	d805      	bhi.n	8004d2a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x26>
 8004d1e:	4b41      	ldr	r3, [pc, #260]	; (8004e24 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x120>)
 8004d20:	4a41      	ldr	r2, [pc, #260]	; (8004e28 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d22:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004d24:	4841      	ldr	r0, [pc, #260]	; (8004e2c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x128>)
 8004d26:	f021 fc81 	bl	802662c <__assert_func>
 8004d2a:	6860      	ldr	r0, [r4, #4]
 8004d2c:	6803      	ldr	r3, [r0, #0]
 8004d2e:	6a1b      	ldr	r3, [r3, #32]
 8004d30:	4798      	blx	r3
 8004d32:	280f      	cmp	r0, #15
 8004d34:	d803      	bhi.n	8004d3e <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x3a>
 8004d36:	4b3e      	ldr	r3, [pc, #248]	; (8004e30 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x12c>)
 8004d38:	4a3b      	ldr	r2, [pc, #236]	; (8004e28 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d3a:	21a4      	movs	r1, #164	; 0xa4
 8004d3c:	e7f2      	b.n	8004d24 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004d3e:	68e0      	ldr	r0, [r4, #12]
 8004d40:	6803      	ldr	r3, [r0, #0]
 8004d42:	6a1b      	ldr	r3, [r3, #32]
 8004d44:	4798      	blx	r3
 8004d46:	283f      	cmp	r0, #63	; 0x3f
 8004d48:	d803      	bhi.n	8004d52 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x4e>
 8004d4a:	4b3a      	ldr	r3, [pc, #232]	; (8004e34 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x130>)
 8004d4c:	4a36      	ldr	r2, [pc, #216]	; (8004e28 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x124>)
 8004d4e:	21a5      	movs	r1, #165	; 0xa5
 8004d50:	e7e8      	b.n	8004d24 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004d52:	f010 f8a9 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004d56:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8004e38 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x134>
 8004d5a:	3004      	adds	r0, #4
 8004d5c:	f010 f90a 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004d60:	f8d9 0000 	ldr.w	r0, [r9]
 8004d64:	b110      	cbz	r0, 8004d6c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8004d66:	6803      	ldr	r3, [r0, #0]
 8004d68:	68db      	ldr	r3, [r3, #12]
 8004d6a:	4798      	blx	r3
    if (*currentTrans)
 8004d6c:	f8d9 0000 	ldr.w	r0, [r9]
 8004d70:	b110      	cbz	r0, 8004d78 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8004d72:	6803      	ldr	r3, [r0, #0]
 8004d74:	681b      	ldr	r3, [r3, #0]
 8004d76:	4798      	blx	r3
    if (*currentScreen)
 8004d78:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8004e3c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x138>
 8004d7c:	f8d8 0000 	ldr.w	r0, [r8]
 8004d80:	b110      	cbz	r0, 8004d88 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004d82:	6803      	ldr	r3, [r0, #0]
 8004d84:	695b      	ldr	r3, [r3, #20]
 8004d86:	4798      	blx	r3
    if (*currentPresenter)
 8004d88:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004d8c:	b110      	cbz	r0, 8004d94 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004d8e:	6803      	ldr	r3, [r0, #0]
 8004d90:	685b      	ldr	r3, [r3, #4]
 8004d92:	4798      	blx	r3
    if (*currentScreen)
 8004d94:	f8d8 0000 	ldr.w	r0, [r8]
 8004d98:	b110      	cbz	r0, 8004da0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004d9a:	6803      	ldr	r3, [r0, #0]
 8004d9c:	681b      	ldr	r3, [r3, #0]
 8004d9e:	4798      	blx	r3
    if (*currentPresenter)
 8004da0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004da4:	b110      	cbz	r0, 8004dac <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004da6:	6803      	ldr	r3, [r0, #0]
 8004da8:	689b      	ldr	r3, [r3, #8]
 8004daa:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004dac:	68e0      	ldr	r0, [r4, #12]
 8004dae:	2100      	movs	r1, #0
 8004db0:	f7ff fe30 	bl	8004a14 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8004db4:	2114      	movs	r1, #20
 8004db6:	4605      	mov	r5, r0
 8004db8:	f7ff fe30 	bl	8004a1c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004dbc:	2100      	movs	r1, #0
 8004dbe:	68a0      	ldr	r0, [r4, #8]
 8004dc0:	f7ff fd54 	bl	800486c <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8004dc4:	4606      	mov	r6, r0
 8004dc6:	f003 fd61 	bl	800888c <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004dca:	6860      	ldr	r0, [r4, #4]
 8004dcc:	2100      	movs	r1, #0
 8004dce:	f7ff fd50 	bl	8004872 <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 8004dd2:	4631      	mov	r1, r6
 8004dd4:	4604      	mov	r4, r0
 8004dd6:	f003 fd33 	bl	8008840 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 8004dda:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004dde:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004de2:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004de6:	b1dc      	cbz	r4, 8004e20 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0x11c>
 8004de8:	1d23      	adds	r3, r4, #4
 8004dea:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004dee:	6833      	ldr	r3, [r6, #0]
 8004df0:	f8c4 a008 	str.w	sl, [r4, #8]
 8004df4:	4630      	mov	r0, r6
 8004df6:	68db      	ldr	r3, [r3, #12]
 8004df8:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004dfa:	4798      	blx	r3
    newPresenter->activate();
 8004dfc:	6823      	ldr	r3, [r4, #0]
 8004dfe:	4620      	mov	r0, r4
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004e04:	4629      	mov	r1, r5
 8004e06:	4630      	mov	r0, r6
 8004e08:	f011 fe7a 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004e0c:	682b      	ldr	r3, [r5, #0]
 8004e0e:	4628      	mov	r0, r5
 8004e10:	691b      	ldr	r3, [r3, #16]
 8004e12:	4798      	blx	r3
    newTransition->invalidate();
 8004e14:	682b      	ldr	r3, [r5, #0]
 8004e16:	4628      	mov	r0, r5
 8004e18:	695b      	ldr	r3, [r3, #20]
}
 8004e1a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e1e:	4718      	bx	r3
    model->bind(newPresenter);
 8004e20:	4623      	mov	r3, r4
 8004e22:	e7e2      	b.n	8004dea <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionWestImplEv+0xe6>
 8004e24:	080285e8 	.word	0x080285e8
 8004e28:	08028d89 	.word	0x08028d89
 8004e2c:	08028784 	.word	0x08028784
 8004e30:	080287cb 	.word	0x080287cb
 8004e34:	0802886e 	.word	0x0802886e
 8004e38:	2000ef64 	.word	0x2000ef64
 8004e3c:	2000ef60 	.word	0x2000ef60

08004e40 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8004e40:	6803      	ldr	r3, [r0, #0]
 8004e42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e44:	4718      	bx	r3
	...

08004e48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8004e4a:	4605      	mov	r5, r0
 8004e4c:	2600      	movs	r6, #0
 8004e4e:	4b15      	ldr	r3, [pc, #84]	; (8004ea4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 8004e50:	6046      	str	r6, [r0, #4]
 8004e52:	7206      	strb	r6, [r0, #8]
 8004e54:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e58:	4604      	mov	r4, r0
          relativeValue(0)
 8004e5a:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8004e5c:	460f      	mov	r7, r1
          relativeValue(0)
 8004e5e:	f00c fb45 	bl	80114ec <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e62:	4b11      	ldr	r3, [pc, #68]	; (8004ea8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x60>)
          relativeValue(0)
 8004e64:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e68:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8004e6a:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8004e6e:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8004e70:	b923      	cbnz	r3, 8004e7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x34>
            done = true;
 8004e72:	2301      	movs	r3, #1
 8004e74:	7223      	strb	r3, [r4, #8]
    }
 8004e76:	4620      	mov	r0, r4
 8004e78:	b003      	add	sp, #12
 8004e7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8004e7c:	4b0b      	ldr	r3, [pc, #44]	; (8004eac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8004e7e:	4f0c      	ldr	r7, [pc, #48]	; (8004eb0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8004e80:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004e84:	9300      	str	r3, [sp, #0]
 8004e86:	f9b7 3000 	ldrsh.w	r3, [r7]
 8004e8a:	4632      	mov	r2, r6
 8004e8c:	4631      	mov	r1, r6
 8004e8e:	4628      	mov	r0, r5
 8004e90:	f7fd ff31 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8004e94:	4628      	mov	r0, r5
 8004e96:	f00c faa4 	bl	80113e2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8004e9a:	883b      	ldrh	r3, [r7, #0]
 8004e9c:	425b      	negs	r3, r3
 8004e9e:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8004ea0:	e7e9      	b.n	8004e76 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x2e>
 8004ea2:	bf00      	nop
 8004ea4:	08029448 	.word	0x08029448
 8004ea8:	2000ef1b 	.word	0x2000ef1b
 8004eac:	2000ef12 	.word	0x2000ef12
 8004eb0:	2000ef10 	.word	0x2000ef10

08004eb4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoDriverScreenScreenSlideTransitionEastImpl()
{
 8004eb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<DriverScreenView, DriverScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004eb8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ebc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ebe:	68a0      	ldr	r0, [r4, #8]
 8004ec0:	6803      	ldr	r3, [r0, #0]
 8004ec2:	6a1b      	ldr	r3, [r3, #32]
 8004ec4:	4798      	blx	r3
 8004ec6:	f640 431b 	movw	r3, #3099	; 0xc1b
 8004eca:	4298      	cmp	r0, r3
 8004ecc:	d805      	bhi.n	8004eda <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x26>
 8004ece:	4b42      	ldr	r3, [pc, #264]	; (8004fd8 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x124>)
 8004ed0:	4a42      	ldr	r2, [pc, #264]	; (8004fdc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004ed2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004ed4:	4842      	ldr	r0, [pc, #264]	; (8004fe0 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004ed6:	f021 fba9 	bl	802662c <__assert_func>
 8004eda:	6860      	ldr	r0, [r4, #4]
 8004edc:	6803      	ldr	r3, [r0, #0]
 8004ede:	6a1b      	ldr	r3, [r3, #32]
 8004ee0:	4798      	blx	r3
 8004ee2:	280f      	cmp	r0, #15
 8004ee4:	d803      	bhi.n	8004eee <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x3a>
 8004ee6:	4b3f      	ldr	r3, [pc, #252]	; (8004fe4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x130>)
 8004ee8:	4a3c      	ldr	r2, [pc, #240]	; (8004fdc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004eea:	21a4      	movs	r1, #164	; 0xa4
 8004eec:	e7f2      	b.n	8004ed4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004eee:	68e0      	ldr	r0, [r4, #12]
 8004ef0:	6803      	ldr	r3, [r0, #0]
 8004ef2:	6a1b      	ldr	r3, [r3, #32]
 8004ef4:	4798      	blx	r3
 8004ef6:	283f      	cmp	r0, #63	; 0x3f
 8004ef8:	d803      	bhi.n	8004f02 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x4e>
 8004efa:	4b3b      	ldr	r3, [pc, #236]	; (8004fe8 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x134>)
 8004efc:	4a37      	ldr	r2, [pc, #220]	; (8004fdc <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x128>)
 8004efe:	21a5      	movs	r1, #165	; 0xa5
 8004f00:	e7e8      	b.n	8004ed4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8004f02:	f00f ffd1 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004f06:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004fec <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x138>
 8004f0a:	3004      	adds	r0, #4
 8004f0c:	f010 f832 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8004f10:	f8d9 0000 	ldr.w	r0, [r9]
 8004f14:	b110      	cbz	r0, 8004f1c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004f16:	6803      	ldr	r3, [r0, #0]
 8004f18:	68db      	ldr	r3, [r3, #12]
 8004f1a:	4798      	blx	r3
    if (*currentTrans)
 8004f1c:	f8d9 0000 	ldr.w	r0, [r9]
 8004f20:	b110      	cbz	r0, 8004f28 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 8004f22:	6803      	ldr	r3, [r0, #0]
 8004f24:	681b      	ldr	r3, [r3, #0]
 8004f26:	4798      	blx	r3
    if (*currentScreen)
 8004f28:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8004ff0 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x13c>
 8004f2c:	f8d8 0000 	ldr.w	r0, [r8]
 8004f30:	b110      	cbz	r0, 8004f38 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8004f32:	6803      	ldr	r3, [r0, #0]
 8004f34:	695b      	ldr	r3, [r3, #20]
 8004f36:	4798      	blx	r3
    if (*currentPresenter)
 8004f38:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f3c:	b110      	cbz	r0, 8004f44 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 8004f3e:	6803      	ldr	r3, [r0, #0]
 8004f40:	685b      	ldr	r3, [r3, #4]
 8004f42:	4798      	blx	r3
    if (*currentScreen)
 8004f44:	f8d8 0000 	ldr.w	r0, [r8]
 8004f48:	b110      	cbz	r0, 8004f50 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 8004f4a:	6803      	ldr	r3, [r0, #0]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	4798      	blx	r3
    if (*currentPresenter)
 8004f50:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004f54:	b110      	cbz	r0, 8004f5c <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8004f56:	6803      	ldr	r3, [r0, #0]
 8004f58:	689b      	ldr	r3, [r3, #8]
 8004f5a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004f5c:	68e0      	ldr	r0, [r4, #12]
 8004f5e:	2100      	movs	r1, #0
 8004f60:	f7ff ff6e 	bl	8004e40 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8004f64:	2114      	movs	r1, #20
 8004f66:	4605      	mov	r5, r0
 8004f68:	f7ff ff6e 	bl	8004e48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8004f6c:	68a0      	ldr	r0, [r4, #8]
 8004f6e:	6803      	ldr	r3, [r0, #0]
 8004f70:	2100      	movs	r1, #0
 8004f72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f74:	4798      	blx	r3
 8004f76:	4606      	mov	r6, r0
 8004f78:	f003 fa4e 	bl	8008418 <_ZN16DriverScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8004f7c:	6860      	ldr	r0, [r4, #4]
 8004f7e:	6803      	ldr	r3, [r0, #0]
 8004f80:	2100      	movs	r1, #0
 8004f82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004f84:	4798      	blx	r3
 8004f86:	4631      	mov	r1, r6
 8004f88:	4604      	mov	r4, r0
 8004f8a:	f003 fa1f 	bl	80083cc <_ZN21DriverScreenPresenterC1ER16DriverScreenView>
    *currentTrans = newTransition;
 8004f8e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8004f92:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8004f96:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004f9a:	b1dc      	cbz	r4, 8004fd4 <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0x120>
 8004f9c:	1d23      	adds	r3, r4, #4
 8004f9e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8004fa2:	6833      	ldr	r3, [r6, #0]
 8004fa4:	f8c4 a008 	str.w	sl, [r4, #8]
 8004fa8:	4630      	mov	r0, r6
 8004faa:	68db      	ldr	r3, [r3, #12]
 8004fac:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004fae:	4798      	blx	r3
    newPresenter->activate();
 8004fb0:	6823      	ldr	r3, [r4, #0]
 8004fb2:	4620      	mov	r0, r4
 8004fb4:	681b      	ldr	r3, [r3, #0]
 8004fb6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004fb8:	4629      	mov	r1, r5
 8004fba:	4630      	mov	r0, r6
 8004fbc:	f011 fda0 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004fc0:	682b      	ldr	r3, [r5, #0]
 8004fc2:	4628      	mov	r0, r5
 8004fc4:	691b      	ldr	r3, [r3, #16]
 8004fc6:	4798      	blx	r3
    newTransition->invalidate();
 8004fc8:	682b      	ldr	r3, [r5, #0]
 8004fca:	4628      	mov	r0, r5
 8004fcc:	695b      	ldr	r3, [r3, #20]
}
 8004fce:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fd2:	4718      	bx	r3
    model->bind(newPresenter);
 8004fd4:	4623      	mov	r3, r4
 8004fd6:	e7e2      	b.n	8004f9e <_ZN23FrontendApplicationBase45gotoDriverScreenScreenSlideTransitionEastImplEv+0xea>
 8004fd8:	080285e8 	.word	0x080285e8
 8004fdc:	08028eb0 	.word	0x08028eb0
 8004fe0:	08028784 	.word	0x08028784
 8004fe4:	080287cb 	.word	0x080287cb
 8004fe8:	0802886e 	.word	0x0802886e
 8004fec:	2000ef64 	.word	0x2000ef64
 8004ff0:	2000ef60 	.word	0x2000ef60

08004ff4 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv>:
{
 8004ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<CompetitionScreenView, CompetitionScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004ff8:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004ffc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8004ffe:	68a0      	ldr	r0, [r4, #8]
 8005000:	6803      	ldr	r3, [r0, #0]
 8005002:	6a1b      	ldr	r3, [r3, #32]
 8005004:	4798      	blx	r3
 8005006:	f5b0 7fa8 	cmp.w	r0, #336	; 0x150
 800500a:	d205      	bcs.n	8005018 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x24>
 800500c:	4b42      	ldr	r3, [pc, #264]	; (8005118 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x124>)
 800500e:	4a43      	ldr	r2, [pc, #268]	; (800511c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8005010:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005012:	4843      	ldr	r0, [pc, #268]	; (8005120 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x12c>)
 8005014:	f021 fb0a 	bl	802662c <__assert_func>
 8005018:	6860      	ldr	r0, [r4, #4]
 800501a:	6803      	ldr	r3, [r0, #0]
 800501c:	6a1b      	ldr	r3, [r3, #32]
 800501e:	4798      	blx	r3
 8005020:	280f      	cmp	r0, #15
 8005022:	d803      	bhi.n	800502c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x38>
 8005024:	4b3f      	ldr	r3, [pc, #252]	; (8005124 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x130>)
 8005026:	4a3d      	ldr	r2, [pc, #244]	; (800511c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 8005028:	21a4      	movs	r1, #164	; 0xa4
 800502a:	e7f2      	b.n	8005012 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800502c:	68e0      	ldr	r0, [r4, #12]
 800502e:	6803      	ldr	r3, [r0, #0]
 8005030:	6a1b      	ldr	r3, [r3, #32]
 8005032:	4798      	blx	r3
 8005034:	283f      	cmp	r0, #63	; 0x3f
 8005036:	d803      	bhi.n	8005040 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x4c>
 8005038:	4b3b      	ldr	r3, [pc, #236]	; (8005128 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x134>)
 800503a:	4a38      	ldr	r2, [pc, #224]	; (800511c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x128>)
 800503c:	21a5      	movs	r1, #165	; 0xa5
 800503e:	e7e8      	b.n	8005012 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8005040:	f00f ff32 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005044:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800512c <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x138>
 8005048:	3004      	adds	r0, #4
 800504a:	f00f ff93 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800504e:	f8d9 0000 	ldr.w	r0, [r9]
 8005052:	b110      	cbz	r0, 800505a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8005054:	6803      	ldr	r3, [r0, #0]
 8005056:	68db      	ldr	r3, [r3, #12]
 8005058:	4798      	blx	r3
    if (*currentTrans)
 800505a:	f8d9 0000 	ldr.w	r0, [r9]
 800505e:	b110      	cbz	r0, 8005066 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8005060:	6803      	ldr	r3, [r0, #0]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	4798      	blx	r3
    if (*currentScreen)
 8005066:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8005130 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x13c>
 800506a:	f8d8 0000 	ldr.w	r0, [r8]
 800506e:	b110      	cbz	r0, 8005076 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8005070:	6803      	ldr	r3, [r0, #0]
 8005072:	695b      	ldr	r3, [r3, #20]
 8005074:	4798      	blx	r3
    if (*currentPresenter)
 8005076:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800507a:	b110      	cbz	r0, 8005082 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800507c:	6803      	ldr	r3, [r0, #0]
 800507e:	685b      	ldr	r3, [r3, #4]
 8005080:	4798      	blx	r3
    if (*currentScreen)
 8005082:	f8d8 0000 	ldr.w	r0, [r8]
 8005086:	b110      	cbz	r0, 800508e <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8005088:	6803      	ldr	r3, [r0, #0]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	4798      	blx	r3
    if (*currentPresenter)
 800508e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005092:	b110      	cbz	r0, 800509a <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8005094:	6803      	ldr	r3, [r0, #0]
 8005096:	689b      	ldr	r3, [r3, #8]
 8005098:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800509a:	68e0      	ldr	r0, [r4, #12]
 800509c:	2100      	movs	r1, #0
 800509e:	f7ff fecf 	bl	8004e40 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80050a2:	2114      	movs	r1, #20
 80050a4:	4605      	mov	r5, r0
 80050a6:	f7ff fecf 	bl	8004e48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80050aa:	68a0      	ldr	r0, [r4, #8]
 80050ac:	6803      	ldr	r3, [r0, #0]
 80050ae:	2100      	movs	r1, #0
 80050b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050b2:	4798      	blx	r3
 80050b4:	4606      	mov	r6, r0
 80050b6:	f003 f8df 	bl	8008278 <_ZN21CompetitionScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80050ba:	6860      	ldr	r0, [r4, #4]
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	2100      	movs	r1, #0
 80050c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80050c2:	4798      	blx	r3
 80050c4:	4631      	mov	r1, r6
 80050c6:	4604      	mov	r4, r0
 80050c8:	f003 f8b0 	bl	800822c <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>
    *currentTrans = newTransition;
 80050cc:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80050d0:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80050d4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80050d8:	b1dc      	cbz	r4, 8005112 <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0x11e>
 80050da:	1d23      	adds	r3, r4, #4
 80050dc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80050e0:	6833      	ldr	r3, [r6, #0]
 80050e2:	f8c4 a008 	str.w	sl, [r4, #8]
 80050e6:	4630      	mov	r0, r6
 80050e8:	68db      	ldr	r3, [r3, #12]
 80050ea:	63f4      	str	r4, [r6, #60]	; 0x3c
 80050ec:	4798      	blx	r3
    newPresenter->activate();
 80050ee:	6823      	ldr	r3, [r4, #0]
 80050f0:	4620      	mov	r0, r4
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80050f6:	4629      	mov	r1, r5
 80050f8:	4630      	mov	r0, r6
 80050fa:	f011 fd01 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80050fe:	682b      	ldr	r3, [r5, #0]
 8005100:	4628      	mov	r0, r5
 8005102:	691b      	ldr	r3, [r3, #16]
 8005104:	4798      	blx	r3
    newTransition->invalidate();
 8005106:	682b      	ldr	r3, [r5, #0]
 8005108:	4628      	mov	r0, r5
 800510a:	695b      	ldr	r3, [r3, #20]
}
 800510c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005110:	4718      	bx	r3
    model->bind(newPresenter);
 8005112:	4623      	mov	r3, r4
 8005114:	e7e2      	b.n	80050dc <_ZN23FrontendApplicationBase50gotoCompetitionScreenScreenSlideTransitionEastImplEv+0xe8>
 8005116:	bf00      	nop
 8005118:	080285e8 	.word	0x080285e8
 800511c:	08028fd1 	.word	0x08028fd1
 8005120:	08028784 	.word	0x08028784
 8005124:	080287cb 	.word	0x080287cb
 8005128:	0802886e 	.word	0x0802886e
 800512c:	2000ef64 	.word	0x2000ef64
 8005130:	2000ef60 	.word	0x2000ef60

08005134 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv>:
{
 8005134:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MissionSelectView, MissionSelectPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005138:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800513c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800513e:	68a0      	ldr	r0, [r4, #8]
 8005140:	6803      	ldr	r3, [r0, #0]
 8005142:	6a1b      	ldr	r3, [r3, #32]
 8005144:	4798      	blx	r3
 8005146:	f240 438b 	movw	r3, #1163	; 0x48b
 800514a:	4298      	cmp	r0, r3
 800514c:	d805      	bhi.n	800515a <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x26>
 800514e:	4b42      	ldr	r3, [pc, #264]	; (8005258 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x124>)
 8005150:	4a42      	ldr	r2, [pc, #264]	; (800525c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 8005152:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005154:	4842      	ldr	r0, [pc, #264]	; (8005260 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x12c>)
 8005156:	f021 fa69 	bl	802662c <__assert_func>
 800515a:	6860      	ldr	r0, [r4, #4]
 800515c:	6803      	ldr	r3, [r0, #0]
 800515e:	6a1b      	ldr	r3, [r3, #32]
 8005160:	4798      	blx	r3
 8005162:	280f      	cmp	r0, #15
 8005164:	d803      	bhi.n	800516e <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x3a>
 8005166:	4b3f      	ldr	r3, [pc, #252]	; (8005264 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x130>)
 8005168:	4a3c      	ldr	r2, [pc, #240]	; (800525c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 800516a:	21a4      	movs	r1, #164	; 0xa4
 800516c:	e7f2      	b.n	8005154 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800516e:	68e0      	ldr	r0, [r4, #12]
 8005170:	6803      	ldr	r3, [r0, #0]
 8005172:	6a1b      	ldr	r3, [r3, #32]
 8005174:	4798      	blx	r3
 8005176:	283f      	cmp	r0, #63	; 0x3f
 8005178:	d803      	bhi.n	8005182 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x4e>
 800517a:	4b3b      	ldr	r3, [pc, #236]	; (8005268 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x134>)
 800517c:	4a37      	ldr	r2, [pc, #220]	; (800525c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x128>)
 800517e:	21a5      	movs	r1, #165	; 0xa5
 8005180:	e7e8      	b.n	8005154 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8005182:	f00f fe91 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8005186:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 800526c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x138>
 800518a:	3004      	adds	r0, #4
 800518c:	f00f fef2 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8005190:	f8d9 0000 	ldr.w	r0, [r9]
 8005194:	b110      	cbz	r0, 800519c <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8005196:	6803      	ldr	r3, [r0, #0]
 8005198:	68db      	ldr	r3, [r3, #12]
 800519a:	4798      	blx	r3
    if (*currentTrans)
 800519c:	f8d9 0000 	ldr.w	r0, [r9]
 80051a0:	b110      	cbz	r0, 80051a8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80051a2:	6803      	ldr	r3, [r0, #0]
 80051a4:	681b      	ldr	r3, [r3, #0]
 80051a6:	4798      	blx	r3
    if (*currentScreen)
 80051a8:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8005270 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x13c>
 80051ac:	f8d8 0000 	ldr.w	r0, [r8]
 80051b0:	b110      	cbz	r0, 80051b8 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80051b2:	6803      	ldr	r3, [r0, #0]
 80051b4:	695b      	ldr	r3, [r3, #20]
 80051b6:	4798      	blx	r3
    if (*currentPresenter)
 80051b8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051bc:	b110      	cbz	r0, 80051c4 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80051be:	6803      	ldr	r3, [r0, #0]
 80051c0:	685b      	ldr	r3, [r3, #4]
 80051c2:	4798      	blx	r3
    if (*currentScreen)
 80051c4:	f8d8 0000 	ldr.w	r0, [r8]
 80051c8:	b110      	cbz	r0, 80051d0 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80051ca:	6803      	ldr	r3, [r0, #0]
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	4798      	blx	r3
    if (*currentPresenter)
 80051d0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80051d4:	b110      	cbz	r0, 80051dc <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80051d6:	6803      	ldr	r3, [r0, #0]
 80051d8:	689b      	ldr	r3, [r3, #8]
 80051da:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80051dc:	68e0      	ldr	r0, [r4, #12]
 80051de:	2100      	movs	r1, #0
 80051e0:	f7ff fe2e 	bl	8004e40 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80051e4:	2114      	movs	r1, #20
 80051e6:	4605      	mov	r5, r0
 80051e8:	f7ff fe2e 	bl	8004e48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80051ec:	68a0      	ldr	r0, [r4, #8]
 80051ee:	6803      	ldr	r3, [r0, #0]
 80051f0:	2100      	movs	r1, #0
 80051f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80051f4:	4798      	blx	r3
 80051f6:	4606      	mov	r6, r0
 80051f8:	f003 fe30 	bl	8008e5c <_ZN17MissionSelectViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80051fc:	6860      	ldr	r0, [r4, #4]
 80051fe:	6803      	ldr	r3, [r0, #0]
 8005200:	2100      	movs	r1, #0
 8005202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005204:	4798      	blx	r3
 8005206:	4631      	mov	r1, r6
 8005208:	4604      	mov	r4, r0
 800520a:	f003 fdd5 	bl	8008db8 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>
    *currentTrans = newTransition;
 800520e:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8005212:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005216:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800521a:	b1dc      	cbz	r4, 8005254 <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0x120>
 800521c:	1d23      	adds	r3, r4, #4
 800521e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8005222:	6833      	ldr	r3, [r6, #0]
 8005224:	f8c4 a008 	str.w	sl, [r4, #8]
 8005228:	4630      	mov	r0, r6
 800522a:	68db      	ldr	r3, [r3, #12]
 800522c:	63f4      	str	r4, [r6, #60]	; 0x3c
 800522e:	4798      	blx	r3
    newPresenter->activate();
 8005230:	6823      	ldr	r3, [r4, #0]
 8005232:	4620      	mov	r0, r4
 8005234:	681b      	ldr	r3, [r3, #0]
 8005236:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005238:	4629      	mov	r1, r5
 800523a:	4630      	mov	r0, r6
 800523c:	f011 fc60 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8005240:	682b      	ldr	r3, [r5, #0]
 8005242:	4628      	mov	r0, r5
 8005244:	691b      	ldr	r3, [r3, #16]
 8005246:	4798      	blx	r3
    newTransition->invalidate();
 8005248:	682b      	ldr	r3, [r5, #0]
 800524a:	4628      	mov	r0, r5
 800524c:	695b      	ldr	r3, [r3, #20]
}
 800524e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005252:	4718      	bx	r3
    model->bind(newPresenter);
 8005254:	4623      	mov	r3, r4
 8005256:	e7e2      	b.n	800521e <_ZN23FrontendApplicationBase46gotoMissionSelectScreenSlideTransitionEastImplEv+0xea>
 8005258:	080285e8 	.word	0x080285e8
 800525c:	080290fc 	.word	0x080290fc
 8005260:	08028784 	.word	0x08028784
 8005264:	080287cb 	.word	0x080287cb
 8005268:	0802886e 	.word	0x0802886e
 800526c:	2000ef64 	.word	0x2000ef64
 8005270:	2000ef60 	.word	0x2000ef60

08005274 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv>:
{
 8005274:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MainInfotaimentView, MainInfotaimentPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8005278:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 800527c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800527e:	68a0      	ldr	r0, [r4, #8]
 8005280:	6803      	ldr	r3, [r0, #0]
 8005282:	6a1b      	ldr	r3, [r3, #32]
 8005284:	4798      	blx	r3
 8005286:	f244 7397 	movw	r3, #18327	; 0x4797
 800528a:	4298      	cmp	r0, r3
 800528c:	d805      	bhi.n	800529a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x26>
 800528e:	4b41      	ldr	r3, [pc, #260]	; (8005394 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x120>)
 8005290:	4a41      	ldr	r2, [pc, #260]	; (8005398 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 8005292:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8005294:	4841      	ldr	r0, [pc, #260]	; (800539c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x128>)
 8005296:	f021 f9c9 	bl	802662c <__assert_func>
 800529a:	6860      	ldr	r0, [r4, #4]
 800529c:	6803      	ldr	r3, [r0, #0]
 800529e:	6a1b      	ldr	r3, [r3, #32]
 80052a0:	4798      	blx	r3
 80052a2:	280f      	cmp	r0, #15
 80052a4:	d803      	bhi.n	80052ae <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x3a>
 80052a6:	4b3e      	ldr	r3, [pc, #248]	; (80053a0 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x12c>)
 80052a8:	4a3b      	ldr	r2, [pc, #236]	; (8005398 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 80052aa:	21a4      	movs	r1, #164	; 0xa4
 80052ac:	e7f2      	b.n	8005294 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80052ae:	68e0      	ldr	r0, [r4, #12]
 80052b0:	6803      	ldr	r3, [r0, #0]
 80052b2:	6a1b      	ldr	r3, [r3, #32]
 80052b4:	4798      	blx	r3
 80052b6:	283f      	cmp	r0, #63	; 0x3f
 80052b8:	d803      	bhi.n	80052c2 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x4e>
 80052ba:	4b3a      	ldr	r3, [pc, #232]	; (80053a4 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x130>)
 80052bc:	4a36      	ldr	r2, [pc, #216]	; (8005398 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x124>)
 80052be:	21a5      	movs	r1, #165	; 0xa5
 80052c0:	e7e8      	b.n	8005294 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80052c2:	f00f fdf1 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80052c6:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80053a8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x134>
 80052ca:	3004      	adds	r0, #4
 80052cc:	f00f fe52 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80052d0:	f8d9 0000 	ldr.w	r0, [r9]
 80052d4:	b110      	cbz	r0, 80052dc <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 80052d6:	6803      	ldr	r3, [r0, #0]
 80052d8:	68db      	ldr	r3, [r3, #12]
 80052da:	4798      	blx	r3
    if (*currentTrans)
 80052dc:	f8d9 0000 	ldr.w	r0, [r9]
 80052e0:	b110      	cbz	r0, 80052e8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 80052e2:	6803      	ldr	r3, [r0, #0]
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	4798      	blx	r3
    if (*currentScreen)
 80052e8:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 80053ac <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x138>
 80052ec:	f8d8 0000 	ldr.w	r0, [r8]
 80052f0:	b110      	cbz	r0, 80052f8 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80052f2:	6803      	ldr	r3, [r0, #0]
 80052f4:	695b      	ldr	r3, [r3, #20]
 80052f6:	4798      	blx	r3
    if (*currentPresenter)
 80052f8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80052fc:	b110      	cbz	r0, 8005304 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80052fe:	6803      	ldr	r3, [r0, #0]
 8005300:	685b      	ldr	r3, [r3, #4]
 8005302:	4798      	blx	r3
    if (*currentScreen)
 8005304:	f8d8 0000 	ldr.w	r0, [r8]
 8005308:	b110      	cbz	r0, 8005310 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 800530a:	6803      	ldr	r3, [r0, #0]
 800530c:	681b      	ldr	r3, [r3, #0]
 800530e:	4798      	blx	r3
    if (*currentPresenter)
 8005310:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8005314:	b110      	cbz	r0, 800531c <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8005316:	6803      	ldr	r3, [r0, #0]
 8005318:	689b      	ldr	r3, [r3, #8]
 800531a:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800531c:	68e0      	ldr	r0, [r4, #12]
 800531e:	2100      	movs	r1, #0
 8005320:	f7ff fd8e 	bl	8004e40 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8005324:	2114      	movs	r1, #20
 8005326:	4605      	mov	r5, r0
 8005328:	f7ff fd8e 	bl	8004e48 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800532c:	2100      	movs	r1, #0
 800532e:	68a0      	ldr	r0, [r4, #8]
 8005330:	f7ff fa9c 	bl	800486c <_ZN8touchgfx17AbstractPartition2atI19MainInfotaimentViewEERT_t>
 8005334:	4606      	mov	r6, r0
 8005336:	f003 faa9 	bl	800888c <_ZN19MainInfotaimentViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800533a:	6860      	ldr	r0, [r4, #4]
 800533c:	2100      	movs	r1, #0
 800533e:	f7ff fa98 	bl	8004872 <_ZN8touchgfx17AbstractPartition2atI24MainInfotaimentPresenterEERT_t>
 8005342:	4631      	mov	r1, r6
 8005344:	4604      	mov	r4, r0
 8005346:	f003 fa7b 	bl	8008840 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>
    *currentTrans = newTransition;
 800534a:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800534e:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8005352:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8005356:	b1dc      	cbz	r4, 8005390 <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0x11c>
 8005358:	1d23      	adds	r3, r4, #4
 800535a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800535e:	6833      	ldr	r3, [r6, #0]
 8005360:	f8c4 a008 	str.w	sl, [r4, #8]
 8005364:	4630      	mov	r0, r6
 8005366:	68db      	ldr	r3, [r3, #12]
 8005368:	63f4      	str	r4, [r6, #60]	; 0x3c
 800536a:	4798      	blx	r3
    newPresenter->activate();
 800536c:	6823      	ldr	r3, [r4, #0]
 800536e:	4620      	mov	r0, r4
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8005374:	4629      	mov	r1, r5
 8005376:	4630      	mov	r0, r6
 8005378:	f011 fbc2 	bl	8016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800537c:	682b      	ldr	r3, [r5, #0]
 800537e:	4628      	mov	r0, r5
 8005380:	691b      	ldr	r3, [r3, #16]
 8005382:	4798      	blx	r3
    newTransition->invalidate();
 8005384:	682b      	ldr	r3, [r5, #0]
 8005386:	4628      	mov	r0, r5
 8005388:	695b      	ldr	r3, [r3, #20]
}
 800538a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800538e:	4718      	bx	r3
    model->bind(newPresenter);
 8005390:	4623      	mov	r3, r4
 8005392:	e7e2      	b.n	800535a <_ZN23FrontendApplicationBase48gotoMainInfotaimentScreenSlideTransitionEastImplEv+0xe6>
 8005394:	080285e8 	.word	0x080285e8
 8005398:	0802921f 	.word	0x0802921f
 800539c:	08028784 	.word	0x08028784
 80053a0:	080287cb 	.word	0x080287cb
 80053a4:	0802886e 	.word	0x0802886e
 80053a8:	2000ef64 	.word	0x2000ef64
 80053ac:	2000ef60 	.word	0x2000ef60

080053b0 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 80053b0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80053b2:	4770      	bx	lr

080053b4 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80053b4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80053b6:	4770      	bx	lr

080053b8 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80053b8:	4770      	bx	lr

080053ba <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80053ba:	888b      	ldrh	r3, [r1, #4]
 80053bc:	69c0      	ldr	r0, [r0, #28]
 80053be:	680a      	ldr	r2, [r1, #0]
 80053c0:	0adb      	lsrs	r3, r3, #11
 80053c2:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80053c6:	4410      	add	r0, r2
 80053c8:	4770      	bx	lr

080053ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80053ca:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80053cc:	b1c2      	cbz	r2, 8005400 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80053ce:	7b13      	ldrb	r3, [r2, #12]
 80053d0:	b1b3      	cbz	r3, 8005400 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80053d2:	7b54      	ldrb	r4, [r2, #13]
 80053d4:	7ad2      	ldrb	r2, [r2, #11]
 80053d6:	0224      	lsls	r4, r4, #8
 80053d8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80053dc:	4314      	orrs	r4, r2
 80053de:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80053e0:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80053e2:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80053e6:	8813      	ldrh	r3, [r2, #0]
 80053e8:	428b      	cmp	r3, r1
 80053ea:	d102      	bne.n	80053f2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80053ec:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80053f0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80053f2:	d805      	bhi.n	8005400 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80053f4:	3801      	subs	r0, #1
 80053f6:	b280      	uxth	r0, r0
 80053f8:	3204      	adds	r2, #4
 80053fa:	2800      	cmp	r0, #0
 80053fc:	d1f3      	bne.n	80053e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80053fe:	e7f7      	b.n	80053f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8005400:	2000      	movs	r0, #0
 8005402:	e7f5      	b.n	80053f0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08005404 <_ZN8touchgfx13GeneratedFontD0Ev>:
 8005404:	b510      	push	{r4, lr}
 8005406:	212c      	movs	r1, #44	; 0x2c
 8005408:	4604      	mov	r4, r0
 800540a:	f021 f8e1 	bl	80265d0 <_ZdlPvj>
 800540e:	4620      	mov	r0, r4
 8005410:	bd10      	pop	{r4, pc}
	...

08005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8005414:	b530      	push	{r4, r5, lr}
 8005416:	b08b      	sub	sp, #44	; 0x2c
 8005418:	4604      	mov	r4, r0
      arabicTable(formsTable)
 800541a:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 800541e:	9508      	str	r5, [sp, #32]
 8005420:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8005424:	9507      	str	r5, [sp, #28]
 8005426:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800542a:	9506      	str	r5, [sp, #24]
 800542c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8005430:	9505      	str	r5, [sp, #20]
 8005432:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8005436:	9504      	str	r5, [sp, #16]
 8005438:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800543c:	9503      	str	r5, [sp, #12]
 800543e:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8005442:	9502      	str	r5, [sp, #8]
 8005444:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8005448:	9501      	str	r5, [sp, #4]
 800544a:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800544e:	9500      	str	r5, [sp, #0]
 8005450:	f010 fec0 	bl	80161d4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8005454:	4b06      	ldr	r3, [pc, #24]	; (8005470 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8005456:	6023      	str	r3, [r4, #0]
 8005458:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800545a:	61e3      	str	r3, [r4, #28]
 800545c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800545e:	6223      	str	r3, [r4, #32]
 8005460:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005462:	6263      	str	r3, [r4, #36]	; 0x24
 8005464:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8005466:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8005468:	4620      	mov	r0, r4
 800546a:	b00b      	add	sp, #44	; 0x2c
 800546c:	bd30      	pop	{r4, r5, pc}
 800546e:	bf00      	nop
 8005470:	080294b4 	.word	0x080294b4

08005474 <_ZN23MainInfotaimentViewBase11setupScreenEv>:
}

void MainInfotaimentViewBase::setupScreen()
{

}
 8005474:	4770      	bx	lr

08005476 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8005476:	4770      	bx	lr

08005478 <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8005478:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 800547a:	68c2      	ldr	r2, [r0, #12]
 800547c:	6844      	ldr	r4, [r0, #4]
 800547e:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8005480:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8005482:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8005486:	07d2      	lsls	r2, r2, #31
 8005488:	bf48      	it	mi
 800548a:	5962      	ldrmi	r2, [r4, r5]
 800548c:	689b      	ldr	r3, [r3, #8]
    }
 800548e:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8005490:	bf48      	it	mi
 8005492:	58d3      	ldrmi	r3, [r2, r3]
 8005494:	4718      	bx	r3

08005496 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8005496:	6843      	ldr	r3, [r0, #4]
 8005498:	b12b      	cbz	r3, 80054a6 <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 800549a:	6883      	ldr	r3, [r0, #8]
 800549c:	b92b      	cbnz	r3, 80054aa <_ZNK8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 800549e:	68c0      	ldr	r0, [r0, #12]
 80054a0:	f000 0001 	and.w	r0, r0, #1
 80054a4:	4770      	bx	lr
 80054a6:	4618      	mov	r0, r3
 80054a8:	4770      	bx	lr
 80054aa:	2001      	movs	r0, #1
    }
 80054ac:	4770      	bx	lr

080054ae <_ZN8touchgfx8CallbackI23MainInfotaimentViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80054ae:	b510      	push	{r4, lr}
 80054b0:	2110      	movs	r1, #16
 80054b2:	4604      	mov	r4, r0
 80054b4:	f021 f88c 	bl	80265d0 <_ZdlPvj>
 80054b8:	4620      	mov	r0, r4
 80054ba:	bd10      	pop	{r4, pc}

080054bc <_ZN23MainInfotaimentViewBaseD1Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 80054bc:	b510      	push	{r4, lr}
 80054be:	4b03      	ldr	r3, [pc, #12]	; (80054cc <_ZN23MainInfotaimentViewBaseD1Ev+0x10>)
 80054c0:	6003      	str	r3, [r0, #0]
 80054c2:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80054c4:	f00d ffee 	bl	80134a4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80054c8:	4620      	mov	r0, r4
 80054ca:	bd10      	pop	{r4, pc}
 80054cc:	0802952c 	.word	0x0802952c

080054d0 <_ZN23MainInfotaimentViewBaseD0Ev>:
MainInfotaimentViewBase::~MainInfotaimentViewBase()
 80054d0:	b507      	push	{r0, r1, r2, lr}
 80054d2:	4b07      	ldr	r3, [pc, #28]	; (80054f0 <_ZN23MainInfotaimentViewBaseD0Ev+0x20>)
 80054d4:	6003      	str	r3, [r0, #0]
 80054d6:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 80054d8:	f00d ffe4 	bl	80134a4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 80054dc:	9801      	ldr	r0, [sp, #4]
 80054de:	f244 7198 	movw	r1, #18328	; 0x4798
 80054e2:	f021 f875 	bl	80265d0 <_ZdlPvj>
 80054e6:	9801      	ldr	r0, [sp, #4]
 80054e8:	b003      	add	sp, #12
 80054ea:	f85d fb04 	ldr.w	pc, [sp], #4
 80054ee:	bf00      	nop
 80054f0:	0802952c 	.word	0x0802952c

080054f4 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainInfotaimentViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 80054f4:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 80054f6:	f500 53aa 	add.w	r3, r0, #5440	; 0x1540
 80054fa:	330c      	adds	r3, #12
 80054fc:	4299      	cmp	r1, r3
{
 80054fe:	4604      	mov	r4, r0
 8005500:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 8005502:	d103      	bne.n	800550c <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
    virtual ~MainInfotaimentViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8005504:	f00f fcd0 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromLiveDataToMissionSelect
        //When btnNextPage clicked change screen to MissionSelect
        //Go to MissionSelect with screen transition towards East
        application().gotoMissionSelectScreenSlideTransitionEast();
 8005508:	f7ff f950 	bl	80047ac <_ZN23FrontendApplicationBase42gotoMissionSelectScreenSlideTransitionEastEv>
    }
    if (&src == &toDriver1)
 800550c:	f504 53b5 	add.w	r3, r4, #5792	; 0x16a0
 8005510:	3304      	adds	r3, #4
 8005512:	429d      	cmp	r5, r3
 8005514:	d103      	bne.n	800551e <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2a>
 8005516:	f00f fcc7 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //toDriverEasterEgg1
        //When toDriver1 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
 800551a:	f7ff f987 	bl	800482c <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
    }
    if (&src == &toDriver2)
 800551e:	f504 54b6 	add.w	r4, r4, #5824	; 0x16c0
 8005522:	3418      	adds	r4, #24
 8005524:	42a5      	cmp	r5, r4
 8005526:	d105      	bne.n	8005534 <_ZN23MainInfotaimentViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x40>
 8005528:	f00f fcbe 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
        //toDriverEasterEgg2
        //When toDriver2 clicked change screen to DriverScreen
        //Go to DriverScreen with no screen transition
        application().gotoDriverScreenScreenNoTransition();
    }
}
 800552c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoDriverScreenScreenNoTransition();
 8005530:	f7ff b97c 	b.w	800482c <_ZN23FrontendApplicationBase34gotoDriverScreenScreenNoTransitionEv>
}
 8005534:	bd38      	pop	{r3, r4, r5, pc}
	...

08005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 8005538:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 800553a:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 800553c:	4604      	mov	r4, r0
 800553e:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8005540:	2100      	movs	r1, #0
 8005542:	f021 f8ff 	bl	8026744 <memset>
 8005546:	4620      	mov	r0, r4
 8005548:	f7fd fbe8 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 800554c:	4b06      	ldr	r3, [pc, #24]	; (8005568 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800554e:	6023      	str	r3, [r4, #0]
 8005550:	882b      	ldrh	r3, [r5, #0]
 8005552:	84e3      	strh	r3, [r4, #38]	; 0x26
 8005554:	23ff      	movs	r3, #255	; 0xff
    {
        Image::setBitmap(bmp);
 8005556:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8005558:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 800555c:	4629      	mov	r1, r5
 800555e:	f00c ffa3 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8005562:	4620      	mov	r0, r4
 8005564:	bd38      	pop	{r3, r4, r5, pc}
 8005566:	bf00      	nop
 8005568:	0802a4dc 	.word	0x0802a4dc

0800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setStart(T x, T y)
    {
        setStart(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 800556c:	0152      	lsls	r2, r2, #5
 800556e:	0149      	lsls	r1, r1, #5
 8005570:	f00b be66 	b.w	8011240 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>

08005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>:
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setEnd(T x, T y)
    {
        setEnd(CWRUtil::toQ5<T>(x), CWRUtil::toQ5<T>(y));
 8005574:	0152      	lsls	r2, r2, #5
 8005576:	0149      	lsls	r1, r1, #5
 8005578:	f00b be6d 	b.w	8011256 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>

0800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>:
     * @see updateLineWidth
     *
     * @note The area containing the Line is not invalidated.
     */
    template <typename T>
    void setLineWidth(T width)
 800557c:	b410      	push	{r4}
     *
     * @note The area containing the Line is not invalidated.
     */
    void setLineWidth(CWRUtil::Q5 widthQ5)
    {
        if (lineWidthQ5 == widthQ5)
 800557e:	6bc4      	ldr	r4, [r0, #60]	; 0x3c
 8005580:	ebb4 1f41 	cmp.w	r4, r1, lsl #5
    template <typename T>
    FORCE_INLINE_FUNCTION
#endif
    static Q5 toQ5(T value)
    {
        return Q5((int)(value * Rasterizer::POLY_BASE_SIZE));
 8005584:	ea4f 1241 	mov.w	r2, r1, lsl #5
 8005588:	d004      	beq.n	8005594 <_ZN8touchgfx4Line12setLineWidthIiEEvT_+0x18>
    }
 800558a:	f85d 4b04 	ldr.w	r4, [sp], #4
        {
            return;
        }

        lineWidthQ5 = widthQ5;
 800558e:	63c2      	str	r2, [r0, #60]	; 0x3c

        updateCachedShape();
 8005590:	f00b bd60 	b.w	8011054 <_ZN8touchgfx4Line17updateCachedShapeEv>
    }
 8005594:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005598:	4770      	bx	lr
	...

0800559c <_ZN23MainInfotaimentViewBaseC1Ev>:
MainInfotaimentViewBase::MainInfotaimentViewBase() :
 800559c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80055a0:	ed2d 8b10 	vpush	{d8-d15}
 80055a4:	4683      	mov	fp, r0
 80055a6:	b0c5      	sub	sp, #276	; 0x114
    buttonCallback(this, &MainInfotaimentViewBase::buttonCallbackHandler)
 80055a8:	46da      	mov	sl, fp
        : presenter(0)
 80055aa:	2500      	movs	r5, #0
 80055ac:	f011 f8fc 	bl	80167a8 <_ZN8touchgfx6ScreenC1Ev>
 80055b0:	4be3      	ldr	r3, [pc, #908]	; (8005940 <_ZN23MainInfotaimentViewBaseC1Ev+0x3a4>)
 80055b2:	f8cb 503c 	str.w	r5, [fp, #60]	; 0x3c
 80055b6:	f84a 3b40 	str.w	r3, [sl], #64
 80055ba:	f10b 096c 	add.w	r9, fp, #108	; 0x6c
 80055be:	4650      	mov	r0, sl
 80055c0:	f7fd fd14 	bl	8002fec <_ZN8touchgfx3BoxC1Ev>
 80055c4:	4648      	mov	r0, r9
 80055c6:	f7fd fd5b 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80055ca:	f10b 03b8 	add.w	r3, fp, #184	; 0xb8
 80055ce:	4618      	mov	r0, r3
 80055d0:	9308      	str	r3, [sp, #32]
 80055d2:	f7fd fd55 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80055d6:	f50b 7382 	add.w	r3, fp, #260	; 0x104
 80055da:	4618      	mov	r0, r3
 80055dc:	f50b 78a6 	add.w	r8, fp, #332	; 0x14c
 80055e0:	9309      	str	r3, [sp, #36]	; 0x24
 80055e2:	f7fd fd1f 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80055e6:	4640      	mov	r0, r8
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 80055e8:	4cd6      	ldr	r4, [pc, #856]	; (8005944 <_ZN23MainInfotaimentViewBaseC1Ev+0x3a8>)
 80055ea:	f00b fd13 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 80055ee:	f50b 73de 	add.w	r3, fp, #444	; 0x1bc
 80055f2:	4618      	mov	r0, r3
 80055f4:	f104 0624 	add.w	r6, r4, #36	; 0x24
 80055f8:	9336      	str	r3, [sp, #216]	; 0xd8
 80055fa:	f7fc fb4d 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80055fe:	f50b 73e8 	add.w	r3, fp, #464	; 0x1d0
 8005602:	f8cb 41bc 	str.w	r4, [fp, #444]	; 0x1bc
 8005606:	f8cb 61c4 	str.w	r6, [fp, #452]	; 0x1c4
 800560a:	4618      	mov	r0, r3
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 800560c:	f8cb 51c8 	str.w	r5, [fp, #456]	; 0x1c8
 8005610:	9319      	str	r3, [sp, #100]	; 0x64
 8005612:	f7fd fd35 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005616:	f50b 7307 	add.w	r3, fp, #540	; 0x21c
 800561a:	4618      	mov	r0, r3
 800561c:	930a      	str	r3, [sp, #40]	; 0x28
 800561e:	f7fd fd01 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005622:	f50b 7319 	add.w	r3, fp, #612	; 0x264
 8005626:	4618      	mov	r0, r3
 8005628:	932a      	str	r3, [sp, #168]	; 0xa8
 800562a:	f7fd fd1b 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800562e:	f50b 7326 	add.w	r3, fp, #664	; 0x298
 8005632:	4618      	mov	r0, r3
 8005634:	932b      	str	r3, [sp, #172]	; 0xac
 8005636:	f7fd fd15 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800563a:	f50b 7333 	add.w	r3, fp, #716	; 0x2cc
 800563e:	4618      	mov	r0, r3
 8005640:	ee08 3a10 	vmov	s16, r3
 8005644:	f009 fe80 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 8005648:	f50b 736c 	add.w	r3, fp, #944	; 0x3b0
 800564c:	4618      	mov	r0, r3
 800564e:	ee08 3a90 	vmov	s17, r3
 8005652:	f009 fe79 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 8005656:	f20b 4394 	addw	r3, fp, #1172	; 0x494
 800565a:	4618      	mov	r0, r3
 800565c:	932c      	str	r3, [sp, #176]	; 0xb0
 800565e:	f7fd fd01 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005662:	f50b 6399 	add.w	r3, fp, #1224	; 0x4c8
 8005666:	4618      	mov	r0, r3
 8005668:	ee09 3a10 	vmov	s18, r3
 800566c:	f009 fe6c 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 8005670:	f20b 53ac 	addw	r3, fp, #1452	; 0x5ac
 8005674:	4618      	mov	r0, r3
 8005676:	932d      	str	r3, [sp, #180]	; 0xb4
 8005678:	f7fd fcf4 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800567c:	f50b 63bc 	add.w	r3, fp, #1504	; 0x5e0
 8005680:	4618      	mov	r0, r3
 8005682:	ee0d 3a90 	vmov	s27, r3
 8005686:	f00b fcc5 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 800568a:	f50b 63ca 	add.w	r3, fp, #1616	; 0x650
 800568e:	4618      	mov	r0, r3
 8005690:	9337      	str	r3, [sp, #220]	; 0xdc
 8005692:	f7fc fb01 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8005696:	f20b 6364 	addw	r3, fp, #1636	; 0x664
 800569a:	f8cb 4650 	str.w	r4, [fp, #1616]	; 0x650
 800569e:	f8cb 6658 	str.w	r6, [fp, #1624]	; 0x658
 80056a2:	4618      	mov	r0, r3
 80056a4:	f8cb 565c 	str.w	r5, [fp, #1628]	; 0x65c
 80056a8:	ee0e 3a10 	vmov	s28, r3
 80056ac:	f00b fcb2 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 80056b0:	f20b 63d4 	addw	r3, fp, #1748	; 0x6d4
 80056b4:	4618      	mov	r0, r3
 80056b6:	9338      	str	r3, [sp, #224]	; 0xe0
 80056b8:	f7fc faee 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80056bc:	f50b 63dd 	add.w	r3, fp, #1768	; 0x6e8
 80056c0:	f8cb 46d4 	str.w	r4, [fp, #1748]	; 0x6d4
 80056c4:	f8cb 66dc 	str.w	r6, [fp, #1756]	; 0x6dc
 80056c8:	4618      	mov	r0, r3
 80056ca:	f8cb 56e0 	str.w	r5, [fp, #1760]	; 0x6e0
 80056ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80056d0:	f7fd fca8 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80056d4:	f50b 63e6 	add.w	r3, fp, #1840	; 0x730
 80056d8:	4618      	mov	r0, r3
 80056da:	9322      	str	r3, [sp, #136]	; 0x88
 80056dc:	f7fd fcd0 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80056e0:	f20b 737c 	addw	r3, fp, #1916	; 0x77c
 80056e4:	4618      	mov	r0, r3
 80056e6:	931a      	str	r3, [sp, #104]	; 0x68
 80056e8:	f7fd fc9c 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80056ec:	f20b 73c4 	addw	r3, fp, #1988	; 0x7c4
 80056f0:	4618      	mov	r0, r3
 80056f2:	ee09 3a90 	vmov	s19, r3
 80056f6:	f009 fe27 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 80056fa:	f60b 03a8 	addw	r3, fp, #2216	; 0x8a8
 80056fe:	4618      	mov	r0, r3
 8005700:	ee0a 3a10 	vmov	s20, r3
 8005704:	f009 fe20 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 8005708:	f60b 138c 	addw	r3, fp, #2444	; 0x98c
 800570c:	4618      	mov	r0, r3
 800570e:	ee0a 3a90 	vmov	s21, r3
 8005712:	f009 fe19 	bl	800f348 <_ZN8touchgfx11BoxProgressC1Ev>
 8005716:	f50b 6327 	add.w	r3, fp, #2672	; 0xa70
 800571a:	4618      	mov	r0, r3
 800571c:	932e      	str	r3, [sp, #184]	; 0xb8
 800571e:	f7fd fca1 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005722:	f60b 23a4 	addw	r3, fp, #2724	; 0xaa4
 8005726:	4618      	mov	r0, r3
 8005728:	9323      	str	r3, [sp, #140]	; 0x8c
 800572a:	f7fd fca9 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800572e:	f50b 632f 	add.w	r3, fp, #2800	; 0xaf0
 8005732:	4618      	mov	r0, r3
 8005734:	932f      	str	r3, [sp, #188]	; 0xbc
 8005736:	f7fd fc95 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800573a:	f60b 3324 	addw	r3, fp, #2852	; 0xb24
 800573e:	4618      	mov	r0, r3
 8005740:	9330      	str	r3, [sp, #192]	; 0xc0
 8005742:	f7fd fc8f 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005746:	f60b 3358 	addw	r3, fp, #2904	; 0xb58
 800574a:	4618      	mov	r0, r3
 800574c:	9324      	str	r3, [sp, #144]	; 0x90
 800574e:	f7fd fc97 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005752:	f60b 33a4 	addw	r3, fp, #2980	; 0xba4
 8005756:	4618      	mov	r0, r3
 8005758:	9325      	str	r3, [sp, #148]	; 0x94
 800575a:	f7fd fc91 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800575e:	f50b 633f 	add.w	r3, fp, #3056	; 0xbf0
 8005762:	4618      	mov	r0, r3
 8005764:	9331      	str	r3, [sp, #196]	; 0xc4
 8005766:	f7fd fc7d 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800576a:	f60b 4324 	addw	r3, fp, #3108	; 0xc24
 800576e:	4618      	mov	r0, r3
 8005770:	930c      	str	r3, [sp, #48]	; 0x30
 8005772:	f7fd fc57 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005776:	f60b 436c 	addw	r3, fp, #3180	; 0xc6c
 800577a:	4618      	mov	r0, r3
 800577c:	9332      	str	r3, [sp, #200]	; 0xc8
 800577e:	f7fd fc71 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005782:	f50b 634a 	add.w	r3, fp, #3232	; 0xca0
 8005786:	4618      	mov	r0, r3
 8005788:	930d      	str	r3, [sp, #52]	; 0x34
 800578a:	f7fd fc4b 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 800578e:	f60b 43e8 	addw	r3, fp, #3304	; 0xce8
 8005792:	af41      	add	r7, sp, #260	; 0x104
 8005794:	931b      	str	r3, [sp, #108]	; 0x6c
 8005796:	4639      	mov	r1, r7
 8005798:	f04f 33ff 	mov.w	r3, #4294967295
 800579c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800579e:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 80057a2:	f00b ff11 	bl	80115c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80057a6:	f60b 5314 	addw	r3, fp, #3348	; 0xd14
 80057aa:	4618      	mov	r0, r3
 80057ac:	ee0e 3a90 	vmov	s29, r3
 80057b0:	f7fd fc38 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80057b4:	f60b 535c 	addw	r3, fp, #3420	; 0xd5c
 80057b8:	4618      	mov	r0, r3
 80057ba:	ee0f 3a10 	vmov	s30, r3
 80057be:	f00b fc29 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 80057c2:	f60b 53cc 	addw	r3, fp, #3532	; 0xdcc
 80057c6:	4618      	mov	r0, r3
 80057c8:	9339      	str	r3, [sp, #228]	; 0xe4
 80057ca:	f7fc fa65 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80057ce:	f50b 635e 	add.w	r3, fp, #3552	; 0xde0
 80057d2:	f8cb 4dcc 	str.w	r4, [fp, #3532]	; 0xdcc
 80057d6:	f8cb 6dd4 	str.w	r6, [fp, #3540]	; 0xdd4
 80057da:	4618      	mov	r0, r3
 80057dc:	f8cb 5dd8 	str.w	r5, [fp, #3544]	; 0xdd8
 80057e0:	ee0f 3a90 	vmov	s31, r3
 80057e4:	f00b fc16 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 80057e8:	f50b 6365 	add.w	r3, fp, #3664	; 0xe50
 80057ec:	4618      	mov	r0, r3
 80057ee:	933a      	str	r3, [sp, #232]	; 0xe8
 80057f0:	f7fc fa52 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 80057f4:	f60b 6364 	addw	r3, fp, #3684	; 0xe64
 80057f8:	f8cb 4e50 	str.w	r4, [fp, #3664]	; 0xe50
 80057fc:	f8cb 6e58 	str.w	r6, [fp, #3672]	; 0xe58
 8005800:	4618      	mov	r0, r3
 8005802:	f8cb 5e5c 	str.w	r5, [fp, #3676]	; 0xe5c
 8005806:	9333      	str	r3, [sp, #204]	; 0xcc
 8005808:	f7fd fc2c 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800580c:	f60b 6398 	addw	r3, fp, #3736	; 0xe98
 8005810:	4618      	mov	r0, r3
 8005812:	9302      	str	r3, [sp, #8]
 8005814:	f7fd fc06 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005818:	f50b 636e 	add.w	r3, fp, #3808	; 0xee0
 800581c:	4618      	mov	r0, r3
 800581e:	9334      	str	r3, [sp, #208]	; 0xd0
 8005820:	f7fd fc20 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005824:	f60b 7314 	addw	r3, fp, #3860	; 0xf14
 8005828:	4618      	mov	r0, r3
 800582a:	9303      	str	r3, [sp, #12]
 800582c:	f00b fbf2 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 8005830:	f60b 7384 	addw	r3, fp, #3972	; 0xf84
 8005834:	4618      	mov	r0, r3
 8005836:	933b      	str	r3, [sp, #236]	; 0xec
 8005838:	f7fc fa2e 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800583c:	f60b 7398 	addw	r3, fp, #3992	; 0xf98
 8005840:	f8cb 4f84 	str.w	r4, [fp, #3972]	; 0xf84
 8005844:	f8cb 6f8c 	str.w	r6, [fp, #3980]	; 0xf8c
 8005848:	4618      	mov	r0, r3
 800584a:	f8cb 5f90 	str.w	r5, [fp, #3984]	; 0xf90
 800584e:	9335      	str	r3, [sp, #212]	; 0xd4
 8005850:	f7fd fc08 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005854:	f60b 73cc 	addw	r3, fp, #4044	; 0xfcc
 8005858:	4618      	mov	r0, r3
 800585a:	9304      	str	r3, [sp, #16]
 800585c:	f00b fbda 	bl	8011014 <_ZN8touchgfx4LineC1Ev>
 8005860:	f50b 5381 	add.w	r3, fp, #4128	; 0x1020
 8005864:	331c      	adds	r3, #28
 8005866:	4618      	mov	r0, r3
 8005868:	9326      	str	r3, [sp, #152]	; 0x98
 800586a:	f7fc fa15 	bl	8001c98 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 800586e:	f50b 5380 	add.w	r3, fp, #4096	; 0x1000
 8005872:	63dc      	str	r4, [r3, #60]	; 0x3c
 8005874:	645e      	str	r6, [r3, #68]	; 0x44
 8005876:	649d      	str	r5, [r3, #72]	; 0x48
 8005878:	f50b 5382 	add.w	r3, fp, #4160	; 0x1040
 800587c:	3310      	adds	r3, #16
 800587e:	4618      	mov	r0, r3
 8005880:	931c      	str	r3, [sp, #112]	; 0x70
 8005882:	f7fd fbef 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005886:	f50b 5384 	add.w	r3, fp, #4224	; 0x1080
 800588a:	3304      	adds	r3, #4
 800588c:	4618      	mov	r0, r3
 800588e:	ee0b 3a10 	vmov	s22, r3
 8005892:	f7fd fbc7 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005896:	f50b 5386 	add.w	r3, fp, #4288	; 0x10c0
 800589a:	330c      	adds	r3, #12
 800589c:	4618      	mov	r0, r3
 800589e:	ee0b 3a90 	vmov	s23, r3
 80058a2:	f7fd fbbf 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80058a6:	f50b 5388 	add.w	r3, fp, #4352	; 0x1100
 80058aa:	3314      	adds	r3, #20
 80058ac:	4618      	mov	r0, r3
 80058ae:	9305      	str	r3, [sp, #20]
 80058b0:	f7fd fbe6 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058b4:	f50b 538b 	add.w	r3, fp, #4448	; 0x1160
 80058b8:	4618      	mov	r0, r3
 80058ba:	931d      	str	r3, [sp, #116]	; 0x74
 80058bc:	f7fd fbe0 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058c0:	f50b 538d 	add.w	r3, fp, #4512	; 0x11a0
 80058c4:	330c      	adds	r3, #12
 80058c6:	4618      	mov	r0, r3
 80058c8:	9306      	str	r3, [sp, #24]
 80058ca:	f7fd fbd9 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058ce:	f50b 538f 	add.w	r3, fp, #4576	; 0x11e0
 80058d2:	3318      	adds	r3, #24
 80058d4:	4618      	mov	r0, r3
 80058d6:	9307      	str	r3, [sp, #28]
 80058d8:	f7fd fbd2 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058dc:	f50b 5392 	add.w	r3, fp, #4672	; 0x1240
 80058e0:	3304      	adds	r3, #4
 80058e2:	4618      	mov	r0, r3
 80058e4:	931e      	str	r3, [sp, #120]	; 0x78
 80058e6:	f7fd fbbd 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80058ea:	f50b 5393 	add.w	r3, fp, #4704	; 0x1260
 80058ee:	3318      	adds	r3, #24
 80058f0:	4618      	mov	r0, r3
 80058f2:	930e      	str	r3, [sp, #56]	; 0x38
 80058f4:	f7fd fbc4 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80058f8:	f50b 5396 	add.w	r3, fp, #4800	; 0x12c0
 80058fc:	3304      	adds	r3, #4
 80058fe:	f04f 34ff 	mov.w	r4, #4294967295
 8005902:	4639      	mov	r1, r7
 8005904:	4618      	mov	r0, r3
 8005906:	930f      	str	r3, [sp, #60]	; 0x3c
 8005908:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 800590c:	f7ff fe14 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005910:	f50b 5397 	add.w	r3, fp, #4832	; 0x12e0
 8005914:	3310      	adds	r3, #16
 8005916:	4618      	mov	r0, r3
 8005918:	931f      	str	r3, [sp, #124]	; 0x7c
 800591a:	f7fd fba3 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800591e:	f50b 5399 	add.w	r3, fp, #4896	; 0x1320
 8005922:	3304      	adds	r3, #4
 8005924:	4618      	mov	r0, r3
 8005926:	9310      	str	r3, [sp, #64]	; 0x40
 8005928:	f7fd fbaa 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800592c:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 8005930:	3310      	adds	r3, #16
 8005932:	4639      	mov	r1, r7
 8005934:	4618      	mov	r0, r3
 8005936:	9311      	str	r3, [sp, #68]	; 0x44
 8005938:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 800593c:	e004      	b.n	8005948 <_ZN23MainInfotaimentViewBaseC1Ev+0x3ac>
 800593e:	bf00      	nop
 8005940:	0802952c 	.word	0x0802952c
 8005944:	08029fe8 	.word	0x08029fe8
 8005948:	f7ff fdf6 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800594c:	f50b 539c 	add.w	r3, fp, #4992	; 0x1380
 8005950:	331c      	adds	r3, #28
 8005952:	4639      	mov	r1, r7
 8005954:	4618      	mov	r0, r3
 8005956:	9312      	str	r3, [sp, #72]	; 0x48
 8005958:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 800595c:	f7ff fdec 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005960:	f50b 539e 	add.w	r3, fp, #5056	; 0x13c0
 8005964:	3308      	adds	r3, #8
 8005966:	4639      	mov	r1, r7
 8005968:	4618      	mov	r0, r3
 800596a:	9313      	str	r3, [sp, #76]	; 0x4c
 800596c:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 8005970:	f7ff fde2 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8005974:	f50b 539f 	add.w	r3, fp, #5088	; 0x13e0
 8005978:	3314      	adds	r3, #20
 800597a:	4618      	mov	r0, r3
 800597c:	9320      	str	r3, [sp, #128]	; 0x80
 800597e:	f7fd fb71 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 8005982:	f50b 53a1 	add.w	r3, fp, #5152	; 0x1420
 8005986:	3308      	adds	r3, #8
 8005988:	4618      	mov	r0, r3
 800598a:	9314      	str	r3, [sp, #80]	; 0x50
 800598c:	f7fd fb78 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8005990:	f50b 53a3 	add.w	r3, fp, #5216	; 0x1460
 8005994:	3314      	adds	r3, #20
 8005996:	4639      	mov	r1, r7
 8005998:	4618      	mov	r0, r3
 800599a:	9315      	str	r3, [sp, #84]	; 0x54
 800599c:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80059a0:	f7ff fdca 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80059a4:	f50b 53a5 	add.w	r3, fp, #5280	; 0x14a0
 80059a8:	4639      	mov	r1, r7
 80059aa:	4618      	mov	r0, r3
 80059ac:	9327      	str	r3, [sp, #156]	; 0x9c
 80059ae:	f8ad 4104 	strh.w	r4, [sp, #260]	; 0x104
 80059b2:	f7ff fdc1 	bl	8005538 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80059b6:	f50b 53a6 	add.w	r3, fp, #5312	; 0x14c0
 80059ba:	330c      	adds	r3, #12
 80059bc:	4618      	mov	r0, r3
 80059be:	9321      	str	r3, [sp, #132]	; 0x84
 80059c0:	f7fd fb50 	bl	8003064 <_ZN8touchgfx13BoxWithBorderC1Ev>
 80059c4:	f50b 53a8 	add.w	r3, fp, #5376	; 0x1500
 80059c8:	4618      	mov	r0, r3
 80059ca:	9328      	str	r3, [sp, #160]	; 0xa0
 80059cc:	f7fd fb58 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80059d0:	f50b 53aa 	add.w	r3, fp, #5440	; 0x1540
 80059d4:	330c      	adds	r3, #12
 80059d6:	4618      	mov	r0, r3
 80059d8:	9316      	str	r3, [sp, #88]	; 0x58
 80059da:	f7fd f9b1 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 80059de:	f50b 53ac 	add.w	r3, fp, #5504	; 0x1580
 80059e2:	4618      	mov	r0, r3
 80059e4:	9329      	str	r3, [sp, #164]	; 0xa4
 80059e6:	f7fd fb4b 	bl	8003080 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80059ea:	f50b 53ae 	add.w	r3, fp, #5568	; 0x15c0
 80059ee:	330c      	adds	r3, #12
 80059f0:	4618      	mov	r0, r3
 80059f2:	ee0c 3a10 	vmov	s24, r3
 80059f6:	f7fd fb15 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 80059fa:	f50b 53b0 	add.w	r3, fp, #5632	; 0x1600
 80059fe:	3314      	adds	r3, #20
 8005a00:	4618      	mov	r0, r3
 8005a02:	ee0c 3a90 	vmov	s25, r3
 8005a06:	f7fd fb0d 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005a0a:	f50b 53b2 	add.w	r3, fp, #5696	; 0x1640
 8005a0e:	331c      	adds	r3, #28
 8005a10:	4618      	mov	r0, r3
 8005a12:	ee0d 3a10 	vmov	s26, r3
 8005a16:	f7fd fb05 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 8005a1a:	f50b 53b5 	add.w	r3, fp, #5792	; 0x16a0
 8005a1e:	3304      	adds	r3, #4
 8005a20:	4618      	mov	r0, r3
 8005a22:	9317      	str	r3, [sp, #92]	; 0x5c
 8005a24:	f7fd f98c 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 8005a28:	f50b 53b6 	add.w	r3, fp, #5824	; 0x16c0
 8005a2c:	3318      	adds	r3, #24
 8005a2e:	4618      	mov	r0, r3
 8005a30:	9318      	str	r3, [sp, #96]	; 0x60
 8005a32:	f7fd f985 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8005a36:	f50b 4380 	add.w	r3, fp, #16384	; 0x4000
 8005a3a:	4a29      	ldr	r2, [pc, #164]	; (8005ae0 <_ZN23MainInfotaimentViewBaseC1Ev+0x544>)
 8005a3c:	f8c3 2788 	str.w	r2, [r3, #1928]	; 0x788
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005a40:	f50b 50c5 	add.w	r0, fp, #6304	; 0x18a0
 8005a44:	4a27      	ldr	r2, [pc, #156]	; (8005ae4 <_ZN23MainInfotaimentViewBaseC1Ev+0x548>)
 8005a46:	f8c3 2790 	str.w	r2, [r3, #1936]	; 0x790
 8005a4a:	f8c3 b78c 	str.w	fp, [r3, #1932]	; 0x78c
 8005a4e:	f8c3 5794 	str.w	r5, [r3, #1940]	; 0x794
 8005a52:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 8005a56:	3008      	adds	r0, #8
 8005a58:	f00d fd1a 	bl	8013490 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8005a5c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8005a60:	462a      	mov	r2, r5
 8005a62:	4650      	mov	r0, sl
 8005a64:	9300      	str	r3, [sp, #0]
 8005a66:	4629      	mov	r1, r5
 8005a68:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005a6c:	f7fd f943 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005a70:	f10b 0404 	add.w	r4, fp, #4
 8005a74:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8005a78:	f8cb 3068 	str.w	r3, [fp, #104]	; 0x68
 8005a7c:	4651      	mov	r1, sl
 8005a7e:	4620      	mov	r0, r4
 8005a80:	f009 fe76 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtGear.setXY(363, 40);
 8005a84:	2228      	movs	r2, #40	; 0x28
 8005a86:	f240 116b 	movw	r1, #363	; 0x16b
 8005a8a:	4648      	mov	r0, r9
 8005a8c:	f7fd f926 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8005a90:	4b15      	ldr	r3, [pc, #84]	; (8005ae8 <_ZN23MainInfotaimentViewBaseC1Ev+0x54c>)
 8005a92:	f8cb 309c 	str.w	r3, [fp, #156]	; 0x9c
        boundingArea = calculateBoundingArea();
 8005a96:	f8db 306c 	ldr.w	r3, [fp, #108]	; 0x6c
        linespace = space;
 8005a9a:	f8ab 50a0 	strh.w	r5, [fp, #160]	; 0xa0
        boundingArea = calculateBoundingArea();
 8005a9e:	ae3c      	add	r6, sp, #240	; 0xf0
 8005aa0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005aa4:	4649      	mov	r1, r9
 8005aa6:	4630      	mov	r0, r6
 8005aa8:	4798      	blx	r3
 8005aaa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005aae:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8005ab2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005ab6:	4b0d      	ldr	r3, [pc, #52]	; (8005aec <_ZN23MainInfotaimentViewBaseC1Ev+0x550>)
 8005ab8:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B1YM).getText());
 8005aba:	f50b 5ab8 	add.w	sl, fp, #5888	; 0x1700
 8005abe:	f10a 0a0c 	add.w	sl, sl, #12
 8005ac2:	b92b      	cbnz	r3, 8005ad0 <_ZN23MainInfotaimentViewBaseC1Ev+0x534>
 8005ac4:	4b0a      	ldr	r3, [pc, #40]	; (8005af0 <_ZN23MainInfotaimentViewBaseC1Ev+0x554>)
 8005ac6:	4a0b      	ldr	r2, [pc, #44]	; (8005af4 <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005ac8:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005aca:	480b      	ldr	r0, [pc, #44]	; (8005af8 <_ZN23MainInfotaimentViewBaseC1Ev+0x55c>)
 8005acc:	f020 fdae 	bl	802662c <__assert_func>
 8005ad0:	4b0a      	ldr	r3, [pc, #40]	; (8005afc <_ZN23MainInfotaimentViewBaseC1Ev+0x560>)
 8005ad2:	881b      	ldrh	r3, [r3, #0]
 8005ad4:	2b7f      	cmp	r3, #127	; 0x7f
 8005ad6:	d815      	bhi.n	8005b04 <_ZN23MainInfotaimentViewBaseC1Ev+0x568>
 8005ad8:	4b09      	ldr	r3, [pc, #36]	; (8005b00 <_ZN23MainInfotaimentViewBaseC1Ev+0x564>)
 8005ada:	4a06      	ldr	r2, [pc, #24]	; (8005af4 <_ZN23MainInfotaimentViewBaseC1Ev+0x558>)
 8005adc:	2161      	movs	r1, #97	; 0x61
 8005ade:	e7f4      	b.n	8005aca <_ZN23MainInfotaimentViewBaseC1Ev+0x52e>
 8005ae0:	08029514 	.word	0x08029514
 8005ae4:	080054f5 	.word	0x080054f5
 8005ae8:	ffffea00 	.word	0xffffea00
 8005aec:	2000ef74 	.word	0x2000ef74
 8005af0:	08028308 	.word	0x08028308
 8005af4:	0802840a 	.word	0x0802840a
 8005af8:	08028385 	.word	0x08028385
 8005afc:	2000ef78 	.word	0x2000ef78
 8005b00:	080283cc 	.word	0x080283cc
        return texts->getText(typedTextId);
 8005b04:	4bdc      	ldr	r3, [pc, #880]	; (8005e78 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005b06:	217f      	movs	r1, #127	; 0x7f
 8005b08:	6818      	ldr	r0, [r3, #0]
 8005b0a:	f002 fb2b 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8005b0e:	4adb      	ldr	r2, [pc, #876]	; (8005e7c <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005b10:	4603      	mov	r3, r0
 8005b12:	2102      	movs	r1, #2
 8005b14:	4650      	mov	r0, sl
 8005b16:	f012 fb37 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtGear.resizeToCurrentText();
 8005b1a:	4648      	mov	r0, r9
 8005b1c:	f8cb a0b4 	str.w	sl, [fp, #180]	; 0xb4
 8005b20:	f00c fa76 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005b24:	4bd6      	ldr	r3, [pc, #856]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005b26:	9341      	str	r3, [sp, #260]	; 0x104
 8005b28:	f04f 0280 	mov.w	r2, #128	; 0x80
    txtGear.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8VH0));
 8005b2c:	4648      	mov	r0, r9
 8005b2e:	4639      	mov	r1, r7
 8005b30:	f8ad 2108 	strh.w	r2, [sp, #264]	; 0x108
 8005b34:	f00c fa8c 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005b38:	4649      	mov	r1, r9
 8005b3a:	4620      	mov	r0, r4
 8005b3c:	f009 fe18 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtSpeed.setXY(670, 71);
 8005b40:	9808      	ldr	r0, [sp, #32]
 8005b42:	2247      	movs	r2, #71	; 0x47
 8005b44:	f240 219e 	movw	r1, #670	; 0x29e
 8005b48:	f7fd f8c8 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8005b4c:	f8db 30b8 	ldr.w	r3, [fp, #184]	; 0xb8
        color = newColor;
 8005b50:	4acc      	ldr	r2, [pc, #816]	; (8005e84 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 8005b52:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005b56:	9908      	ldr	r1, [sp, #32]
        color = newColor;
 8005b58:	f8cb 20e8 	str.w	r2, [fp, #232]	; 0xe8
        boundingArea = calculateBoundingArea();
 8005b5c:	4630      	mov	r0, r6
        linespace = space;
 8005b5e:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
        boundingArea = calculateBoundingArea();
 8005b62:	4798      	blx	r3
 8005b64:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005b68:	f10b 03f4 	add.w	r3, fp, #244	; 0xf4
 8005b6c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005b70:	49c5      	ldr	r1, [pc, #788]	; (8005e88 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 8005b72:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KTQV).getText());
 8005b74:	f50b 59b8 	add.w	r9, fp, #5888	; 0x1700
 8005b78:	f109 0910 	add.w	r9, r9, #16
 8005b7c:	2b00      	cmp	r3, #0
 8005b7e:	d0a1      	beq.n	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005b80:	49c2      	ldr	r1, [pc, #776]	; (8005e8c <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 8005b82:	880b      	ldrh	r3, [r1, #0]
 8005b84:	2b7d      	cmp	r3, #125	; 0x7d
 8005b86:	d9a7      	bls.n	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005b88:	48bb      	ldr	r0, [pc, #748]	; (8005e78 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005b8a:	217d      	movs	r1, #125	; 0x7d
 8005b8c:	6800      	ldr	r0, [r0, #0]
 8005b8e:	f002 fae9 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8005b92:	4aba      	ldr	r2, [pc, #744]	; (8005e7c <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005b94:	4603      	mov	r3, r0
 8005b96:	2104      	movs	r1, #4
 8005b98:	4648      	mov	r0, r9
 8005b9a:	f012 faf5 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.resizeToCurrentText();
 8005b9e:	9808      	ldr	r0, [sp, #32]
 8005ba0:	f8cb 9100 	str.w	r9, [fp, #256]	; 0x100
 8005ba4:	f00c fa34 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8005ba8:	4bb5      	ldr	r3, [pc, #724]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UXLR));
 8005baa:	9808      	ldr	r0, [sp, #32]
 8005bac:	9341      	str	r3, [sp, #260]	; 0x104
 8005bae:	4639      	mov	r1, r7
 8005bb0:	237e      	movs	r3, #126	; 0x7e
 8005bb2:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005bb6:	f00c fa4b 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005bba:	9908      	ldr	r1, [sp, #32]
 8005bbc:	4620      	mov	r0, r4
 8005bbe:	f009 fdd7 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        color = newColor;
 8005bc2:	f04f 3aff 	mov.w	sl, #4294967295
    labelSpeed.setXY(767, 78);
 8005bc6:	224e      	movs	r2, #78	; 0x4e
 8005bc8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005bca:	f240 21ff 	movw	r1, #767	; 0x2ff
 8005bce:	f7fd f885 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005bd2:	9909      	ldr	r1, [sp, #36]	; 0x24
        color = newColor;
 8005bd4:	f8cb a134 	str.w	sl, [fp, #308]	; 0x134
        boundingArea = calculateBoundingArea();
 8005bd8:	4630      	mov	r0, r6
        linespace = space;
 8005bda:	f8ab 5138 	strh.w	r5, [fp, #312]	; 0x138
        boundingArea = calculateBoundingArea();
 8005bde:	f00b ff9d 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005be2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005be6:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005bea:	f50b 79a0 	add.w	r9, fp, #320	; 0x140
 8005bee:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 8005bf2:	f88b c13c 	strb.w	ip, [fp, #316]	; 0x13c
        boundingArea = calculateBoundingArea();
 8005bf6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005bf8:	4630      	mov	r0, r6
 8005bfa:	f00b ff8f 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005bfe:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005c02:	4b9f      	ldr	r3, [pc, #636]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005c04:	9341      	str	r3, [sp, #260]	; 0x104
 8005c06:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8005c0a:	237c      	movs	r3, #124	; 0x7c
    labelSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FQ22));
 8005c0c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005c0e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005c12:	4639      	mov	r1, r7
 8005c14:	f00c fa1c 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005c18:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005c1a:	4620      	mov	r0, r4
 8005c1c:	f009 fda8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1.setPosition(752, 75, 15, 42);
 8005c20:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005c24:	f8cd e000 	str.w	lr, [sp]
 8005c28:	230f      	movs	r3, #15
 8005c2a:	4640      	mov	r0, r8
 8005c2c:	224b      	movs	r2, #75	; 0x4b
 8005c2e:	f44f 713c 	mov.w	r1, #752	; 0x2f0
 8005c32:	f7fd f860 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        canvasPainter = &painter;
 8005c36:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8005c38:	f8cb 2174 	str.w	r2, [fp, #372]	; 0x174
    line1.setStart(0, 0);
 8005c3c:	4640      	mov	r0, r8
 8005c3e:	462a      	mov	r2, r5
 8005c40:	4629      	mov	r1, r5
 8005c42:	f8cb a1c8 	str.w	sl, [fp, #456]	; 0x1c8
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8005c46:	f8ab a1cc 	strh.w	sl, [fp, #460]	; 0x1cc
 8005c4a:	f7ff fc8f 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1.setEnd(0, 45);
 8005c4e:	222d      	movs	r2, #45	; 0x2d
 8005c50:	4640      	mov	r0, r8
 8005c52:	4629      	mov	r1, r5
 8005c54:	f7ff fc8e 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1.setLineWidth(10);
 8005c58:	4640      	mov	r0, r8
 8005c5a:	210a      	movs	r1, #10
 8005c5c:	f7ff fc8e 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005c60:	4640      	mov	r0, r8
 8005c62:	4629      	mov	r1, r5
 8005c64:	f00b fb02 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005c68:	4641      	mov	r1, r8
 8005c6a:	4620      	mov	r0, r4
 8005c6c:	f009 fd80 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtRpm.setPosition(12, 71, 128, 49);
 8005c70:	f04f 0e31 	mov.w	lr, #49	; 0x31
 8005c74:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005c76:	f8cd e000 	str.w	lr, [sp]
 8005c7a:	2380      	movs	r3, #128	; 0x80
 8005c7c:	2247      	movs	r2, #71	; 0x47
 8005c7e:	210c      	movs	r1, #12
 8005c80:	f7fd f839 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        boundingArea = calculateBoundingArea();
 8005c84:	f8db 31d0 	ldr.w	r3, [fp, #464]	; 0x1d0
        color = newColor;
 8005c88:	4a7e      	ldr	r2, [pc, #504]	; (8005e84 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e8>)
        boundingArea = calculateBoundingArea();
 8005c8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8005c8e:	9919      	ldr	r1, [sp, #100]	; 0x64
        color = newColor;
 8005c90:	f8cb 2200 	str.w	r2, [fp, #512]	; 0x200
        boundingArea = calculateBoundingArea();
 8005c94:	4630      	mov	r0, r6
        linespace = space;
 8005c96:	f8ab 5204 	strh.w	r5, [fp, #516]	; 0x204
        boundingArea = calculateBoundingArea();
 8005c9a:	4798      	blx	r3
 8005c9c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005ca0:	f50b 7303 	add.w	r3, fp, #524	; 0x20c
 8005ca4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8005ca8:	4977      	ldr	r1, [pc, #476]	; (8005e88 <_ZN23MainInfotaimentViewBaseC1Ev+0x8ec>)
 8005caa:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y39W).getText());
 8005cac:	f50b 58b8 	add.w	r8, fp, #5888	; 0x1700
 8005cb0:	f108 0818 	add.w	r8, r8, #24
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	f43f af05 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8005cba:	4974      	ldr	r1, [pc, #464]	; (8005e8c <_ZN23MainInfotaimentViewBaseC1Ev+0x8f0>)
 8005cbc:	880b      	ldrh	r3, [r1, #0]
 8005cbe:	2b7a      	cmp	r3, #122	; 0x7a
 8005cc0:	f67f af0a 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8005cc4:	486c      	ldr	r0, [pc, #432]	; (8005e78 <_ZN23MainInfotaimentViewBaseC1Ev+0x8dc>)
 8005cc6:	217a      	movs	r1, #122	; 0x7a
 8005cc8:	6800      	ldr	r0, [r0, #0]
 8005cca:	f002 fa4b 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8005cce:	4a6b      	ldr	r2, [pc, #428]	; (8005e7c <_ZN23MainInfotaimentViewBaseC1Ev+0x8e0>)
 8005cd0:	4603      	mov	r3, r0
 8005cd2:	2107      	movs	r1, #7
 8005cd4:	4640      	mov	r0, r8
 8005cd6:	f012 fa57 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005cda:	4b69      	ldr	r3, [pc, #420]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
    txtRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VS7F));
 8005cdc:	9819      	ldr	r0, [sp, #100]	; 0x64
 8005cde:	f8cb 8218 	str.w	r8, [fp, #536]	; 0x218
 8005ce2:	9341      	str	r3, [sp, #260]	; 0x104
 8005ce4:	4639      	mov	r1, r7
 8005ce6:	237b      	movs	r3, #123	; 0x7b
 8005ce8:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005cec:	f00c f9b0 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005cf0:	9919      	ldr	r1, [sp, #100]	; 0x64
 8005cf2:	4620      	mov	r0, r4
 8005cf4:	f009 fd3c 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRpm.setXY(158, 79);
 8005cf8:	224f      	movs	r2, #79	; 0x4f
 8005cfa:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005cfc:	219e      	movs	r1, #158	; 0x9e
 8005cfe:	f7fc ffed 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8005d02:	990a      	ldr	r1, [sp, #40]	; 0x28
        color = newColor;
 8005d04:	f8cb a24c 	str.w	sl, [fp, #588]	; 0x24c
        boundingArea = calculateBoundingArea();
 8005d08:	4630      	mov	r0, r6
        linespace = space;
 8005d0a:	f8ab 5250 	strh.w	r5, [fp, #592]	; 0x250
        boundingArea = calculateBoundingArea();
 8005d0e:	f00b ff05 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d12:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8005d16:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8005d1a:	f50b 7816 	add.w	r8, fp, #600	; 0x258
 8005d1e:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8005d22:	f88b c254 	strb.w	ip, [fp, #596]	; 0x254
        boundingArea = calculateBoundingArea();
 8005d26:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d28:	4630      	mov	r0, r6
 8005d2a:	f00b fef7 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005d2e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8005d32:	4b53      	ldr	r3, [pc, #332]	; (8005e80 <_ZN23MainInfotaimentViewBaseC1Ev+0x8e4>)
 8005d34:	9341      	str	r3, [sp, #260]	; 0x104
 8005d36:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8005d3a:	2379      	movs	r3, #121	; 0x79
    labelRpm.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4SAL));
 8005d3c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005d3e:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8005d42:	4639      	mov	r1, r7
 8005d44:	f00c f984 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005d48:	990a      	ldr	r1, [sp, #40]	; 0x28
 8005d4a:	4620      	mov	r0, r4
 8005d4c:	f009 fd10 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxThrottle.setPosition(305, 169, 190, 24);
 8005d50:	f04f 0e18 	mov.w	lr, #24
 8005d54:	f8cd e000 	str.w	lr, [sp]
 8005d58:	23be      	movs	r3, #190	; 0xbe
 8005d5a:	982a      	ldr	r0, [sp, #168]	; 0xa8
 8005d5c:	22a9      	movs	r2, #169	; 0xa9
 8005d5e:	f240 1131 	movw	r1, #305	; 0x131
 8005d62:	f7fc ffc8 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005d66:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 8005d6a:	4a49      	ldr	r2, [pc, #292]	; (8005e90 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005d6c:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8005d6e:	f8cb 2290 	str.w	r2, [fp, #656]	; 0x290
        borderSize = size;
 8005d72:	f8ab 8294 	strh.w	r8, [fp, #660]	; 0x294
 8005d76:	4620      	mov	r0, r4
 8005d78:	f8cb a28c 	str.w	sl, [fp, #652]	; 0x28c
 8005d7c:	f009 fcf8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake.setPosition(305, 216, 190, 24);
 8005d80:	f04f 0e18 	mov.w	lr, #24
 8005d84:	f8cd e000 	str.w	lr, [sp]
 8005d88:	23be      	movs	r3, #190	; 0xbe
 8005d8a:	982b      	ldr	r0, [sp, #172]	; 0xac
 8005d8c:	22d8      	movs	r2, #216	; 0xd8
 8005d8e:	f240 1131 	movw	r1, #305	; 0x131
 8005d92:	f7fc ffb0 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8005d96:	4a3e      	ldr	r2, [pc, #248]	; (8005e90 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f4>)
 8005d98:	992b      	ldr	r1, [sp, #172]	; 0xac
 8005d9a:	f8cb 22c4 	str.w	r2, [fp, #708]	; 0x2c4
        borderSize = size;
 8005d9e:	f8ab 82c8 	strh.w	r8, [fp, #712]	; 0x2c8
 8005da2:	4620      	mov	r0, r4
 8005da4:	f8cb a2c0 	str.w	sl, [fp, #704]	; 0x2c0
 8005da8:	f009 fce2 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressThrottle.setXY(308, 171);
 8005dac:	ee18 0a10 	vmov	r0, s16
 8005db0:	22ab      	movs	r2, #171	; 0xab
 8005db2:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005db6:	f7fc ff91 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressThrottle.setProgressIndicatorPosition(2, 2, 180, 16);
 8005dba:	f04f 0910 	mov.w	r9, #16
 8005dbe:	2202      	movs	r2, #2
 8005dc0:	4611      	mov	r1, r2
 8005dc2:	ee18 0a10 	vmov	r0, s16
 8005dc6:	23b4      	movs	r3, #180	; 0xb4
 8005dc8:	f8cd 9000 	str.w	r9, [sp]
 8005dcc:	f009 fa17 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressThrottle.setRange(0, 100);
 8005dd0:	462b      	mov	r3, r5
 8005dd2:	2264      	movs	r2, #100	; 0x64
 8005dd4:	ee18 0a10 	vmov	r0, s16
 8005dd8:	4629      	mov	r1, r5
 8005dda:	9500      	str	r5, [sp, #0]
 8005ddc:	f009 fb2c 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressThrottle.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005de0:	ee18 0a10 	vmov	r0, s16
 8005de4:	4629      	mov	r1, r5
 8005de6:	f009 fb06 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 8005dea:	f04f 080a 	mov.w	r8, #10
    progressThrottle.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005dee:	ee18 0a10 	vmov	r0, s16
 8005df2:	4639      	mov	r1, r7
 8005df4:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005df8:	f009 fc4c 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressThrottle.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 8005dfc:	4925      	ldr	r1, [pc, #148]	; (8005e94 <_ZN23MainInfotaimentViewBaseC1Ev+0x8f8>)
 8005dfe:	ee18 0a10 	vmov	r0, s16
 8005e02:	f009 f9e6 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressThrottle.setValue(0);
 8005e06:	ee18 0a10 	vmov	r0, s16
 8005e0a:	4629      	mov	r1, r5
 8005e0c:	f009 fa0f 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005e10:	ee18 1a10 	vmov	r1, s16
 8005e14:	4620      	mov	r0, r4
 8005e16:	f009 fcab 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeFront.setXY(308, 218);
 8005e1a:	ee18 0a90 	vmov	r0, s17
 8005e1e:	22da      	movs	r2, #218	; 0xda
 8005e20:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005e24:	f7fc ff5a 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeFront.setProgressIndicatorPosition(2, 2, 180, 16);
 8005e28:	2202      	movs	r2, #2
 8005e2a:	4611      	mov	r1, r2
 8005e2c:	ee18 0a90 	vmov	r0, s17
 8005e30:	23b4      	movs	r3, #180	; 0xb4
 8005e32:	f8cd 9000 	str.w	r9, [sp]
 8005e36:	f009 f9e2 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeFront.setRange(0, 100);
 8005e3a:	462b      	mov	r3, r5
 8005e3c:	2264      	movs	r2, #100	; 0x64
 8005e3e:	ee18 0a90 	vmov	r0, s17
 8005e42:	4629      	mov	r1, r5
 8005e44:	9500      	str	r5, [sp, #0]
 8005e46:	f009 faf7 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeFront.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005e4a:	ee18 0a90 	vmov	r0, s17
 8005e4e:	4629      	mov	r1, r5
 8005e50:	f009 fad1 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeFront.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005e54:	ee18 0a90 	vmov	r0, s17
 8005e58:	4639      	mov	r1, r7
 8005e5a:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005e5e:	f009 fc19 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeFront.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005e62:	490d      	ldr	r1, [pc, #52]	; (8005e98 <_ZN23MainInfotaimentViewBaseC1Ev+0x8fc>)
 8005e64:	ee18 0a90 	vmov	r0, s17
 8005e68:	f009 f9b3 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeFront.setValue(0);
 8005e6c:	ee18 0a90 	vmov	r0, s17
 8005e70:	4629      	mov	r1, r5
 8005e72:	f009 f9dc 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005e76:	e011      	b.n	8005e9c <_ZN23MainInfotaimentViewBaseC1Ev+0x900>
 8005e78:	2000ef80 	.word	0x2000ef80
 8005e7c:	08028442 	.word	0x08028442
 8005e80:	080284b8 	.word	0x080284b8
 8005e84:	ffffea00 	.word	0xffffea00
 8005e88:	2000ef74 	.word	0x2000ef74
 8005e8c:	2000ef78 	.word	0x2000ef78
 8005e90:	fff4ff1f 	.word	0xfff4ff1f
 8005e94:	ff09ff00 	.word	0xff09ff00
 8005e98:	fff50f0f 	.word	0xfff50f0f
 8005e9c:	ee18 1a90 	vmov	r1, s17
 8005ea0:	4620      	mov	r0, r4
 8005ea2:	f009 fc65 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBrake_1.setPosition(305, 238, 190, 24);
 8005ea6:	f04f 0e18 	mov.w	lr, #24
 8005eaa:	23be      	movs	r3, #190	; 0xbe
 8005eac:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8005eae:	f8cd e000 	str.w	lr, [sp]
 8005eb2:	22ee      	movs	r2, #238	; 0xee
 8005eb4:	f240 1131 	movw	r1, #305	; 0x131
 8005eb8:	f7fc ff1d 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005ebc:	f04f 0e04 	mov.w	lr, #4
        borderColor = colorBorder;
 8005ec0:	4ae7      	ldr	r2, [pc, #924]	; (8006260 <_ZN23MainInfotaimentViewBaseC1Ev+0xcc4>)
        borderSize = size;
 8005ec2:	f8ab e4c4 	strh.w	lr, [fp, #1220]	; 0x4c4
 8005ec6:	992c      	ldr	r1, [sp, #176]	; 0xb0
        borderColor = colorBorder;
 8005ec8:	f8cb 24c0 	str.w	r2, [fp, #1216]	; 0x4c0
 8005ecc:	4620      	mov	r0, r4
 8005ece:	f8cb a4bc 	str.w	sl, [fp, #1212]	; 0x4bc
 8005ed2:	f009 fc4d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressBrakeRear.setXY(308, 240);
 8005ed6:	ee19 0a10 	vmov	r0, s18
 8005eda:	22f0      	movs	r2, #240	; 0xf0
 8005edc:	f44f 719a 	mov.w	r1, #308	; 0x134
 8005ee0:	f7fc fefc 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressBrakeRear.setProgressIndicatorPosition(2, 2, 180, 16);
 8005ee4:	2202      	movs	r2, #2
 8005ee6:	4611      	mov	r1, r2
 8005ee8:	ee19 0a10 	vmov	r0, s18
 8005eec:	23b4      	movs	r3, #180	; 0xb4
 8005eee:	f8cd 9000 	str.w	r9, [sp]
 8005ef2:	f009 f984 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressBrakeRear.setRange(0, 100);
 8005ef6:	462b      	mov	r3, r5
 8005ef8:	2264      	movs	r2, #100	; 0x64
 8005efa:	ee19 0a10 	vmov	r0, s18
 8005efe:	4629      	mov	r1, r5
 8005f00:	9500      	str	r5, [sp, #0]
 8005f02:	f009 fa99 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressBrakeRear.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 8005f06:	ee19 0a10 	vmov	r0, s18
 8005f0a:	4629      	mov	r1, r5
 8005f0c:	f009 fa73 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressBrakeRear.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_PROGRESS_INDICATOR_BG_SQUARE_0_DEGREES_ID));
 8005f10:	ee19 0a10 	vmov	r0, s18
 8005f14:	4639      	mov	r1, r7
 8005f16:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8005f1a:	f009 fbbb 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressBrakeRear.setColor(touchgfx::Color::getColorFromRGB(245, 15, 15));
 8005f1e:	49d1      	ldr	r1, [pc, #836]	; (8006264 <_ZN23MainInfotaimentViewBaseC1Ev+0xcc8>)
 8005f20:	ee19 0a10 	vmov	r0, s18
 8005f24:	f009 f955 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressBrakeRear.setValue(0);
 8005f28:	ee19 0a10 	vmov	r0, s18
 8005f2c:	4629      	mov	r1, r5
 8005f2e:	f009 f97e 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 8005f32:	ee19 1a10 	vmov	r1, s18
 8005f36:	4620      	mov	r0, r4
 8005f38:	f009 fc1a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxRES.setPosition(5, 253, 135, 64);
 8005f3c:	2340      	movs	r3, #64	; 0x40
 8005f3e:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8005f40:	9300      	str	r3, [sp, #0]
 8005f42:	22fd      	movs	r2, #253	; 0xfd
 8005f44:	2387      	movs	r3, #135	; 0x87
 8005f46:	2105      	movs	r1, #5
 8005f48:	f7fc fed5 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f4c:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        borderSize = size;
 8005f50:	f04f 0e04 	mov.w	lr, #4
 8005f54:	f8cb 25d4 	str.w	r2, [fp, #1492]	; 0x5d4
        borderColor = colorBorder;
 8005f58:	4ac3      	ldr	r2, [pc, #780]	; (8006268 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8005f5a:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8005f5c:	f8cb 25d8 	str.w	r2, [fp, #1496]	; 0x5d8
        borderSize = size;
 8005f60:	f8ab e5dc 	strh.w	lr, [fp, #1500]	; 0x5dc
 8005f64:	4620      	mov	r0, r4
 8005f66:	f009 fc03 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1.setPosition(143, 75, 15, 42);
 8005f6a:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8005f6e:	230f      	movs	r3, #15
 8005f70:	ee1d 0a90 	vmov	r0, s27
 8005f74:	f8cd e000 	str.w	lr, [sp]
 8005f78:	224b      	movs	r2, #75	; 0x4b
 8005f7a:	218f      	movs	r1, #143	; 0x8f
 8005f7c:	f7fc febb 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005f80:	f04f 3eff 	mov.w	lr, #4294967295
 8005f84:	9837      	ldr	r0, [sp, #220]	; 0xdc
 8005f86:	f8ab e660 	strh.w	lr, [fp, #1632]	; 0x660
 8005f8a:	f8cb 0608 	str.w	r0, [fp, #1544]	; 0x608
    line1_1.setStart(0, 0);
 8005f8e:	462a      	mov	r2, r5
 8005f90:	ee1d 0a90 	vmov	r0, s27
 8005f94:	4629      	mov	r1, r5
 8005f96:	f8cb a65c 	str.w	sl, [fp, #1628]	; 0x65c
 8005f9a:	f7ff fae7 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1.setEnd(0, 45);
 8005f9e:	222d      	movs	r2, #45	; 0x2d
 8005fa0:	ee1d 0a90 	vmov	r0, s27
 8005fa4:	4629      	mov	r1, r5
 8005fa6:	f7ff fae5 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1.setLineWidth(10);
 8005faa:	4641      	mov	r1, r8
 8005fac:	ee1d 0a90 	vmov	r0, s27
 8005fb0:	f7ff fae4 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8005fb4:	ee1d 0a90 	vmov	r0, s27
 8005fb8:	4629      	mov	r1, r5
 8005fba:	f00b f957 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8005fbe:	ee1d 1a90 	vmov	r1, s27
 8005fc2:	4620      	mov	r0, r4
 8005fc4:	f009 fbd4 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_1_1.setPosition(143, 154, 15, 42);
 8005fc8:	202a      	movs	r0, #42	; 0x2a
 8005fca:	230f      	movs	r3, #15
 8005fcc:	9000      	str	r0, [sp, #0]
 8005fce:	229a      	movs	r2, #154	; 0x9a
 8005fd0:	ee1e 0a10 	vmov	r0, s28
 8005fd4:	218f      	movs	r1, #143	; 0x8f
 8005fd6:	f7fc fe8e 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005fda:	f04f 3eff 	mov.w	lr, #4294967295
 8005fde:	9838      	ldr	r0, [sp, #224]	; 0xe0
 8005fe0:	f8ab e6e4 	strh.w	lr, [fp, #1764]	; 0x6e4
 8005fe4:	f8cb 068c 	str.w	r0, [fp, #1676]	; 0x68c
    line1_1_1.setStart(0, 0);
 8005fe8:	462a      	mov	r2, r5
 8005fea:	ee1e 0a10 	vmov	r0, s28
 8005fee:	4629      	mov	r1, r5
 8005ff0:	f8cb a6e0 	str.w	sl, [fp, #1760]	; 0x6e0
 8005ff4:	f7ff faba 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_1_1.setEnd(0, 45);
 8005ff8:	222d      	movs	r2, #45	; 0x2d
 8005ffa:	ee1e 0a10 	vmov	r0, s28
 8005ffe:	4629      	mov	r1, r5
 8006000:	f7ff fab8 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_1_1.setLineWidth(10);
 8006004:	4641      	mov	r1, r8
 8006006:	ee1e 0a10 	vmov	r0, s28
 800600a:	f7ff fab7 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800600e:	ee1e 0a10 	vmov	r0, s28
 8006012:	4629      	mov	r1, r5
 8006014:	f00b f92a 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006018:	ee1e 1a10 	vmov	r1, s28
 800601c:	4620      	mov	r0, r4
 800601e:	f009 fba7 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLapCounter.setXY(158, 161);
 8006022:	22a1      	movs	r2, #161	; 0xa1
 8006024:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006026:	219e      	movs	r1, #158	; 0x9e
 8006028:	f7fc fe58 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800602c:	990b      	ldr	r1, [sp, #44]	; 0x2c
        color = newColor;
 800602e:	f8cb a718 	str.w	sl, [fp, #1816]	; 0x718
        boundingArea = calculateBoundingArea();
 8006032:	4630      	mov	r0, r6
        linespace = space;
 8006034:	f8ab 571c 	strh.w	r5, [fp, #1820]	; 0x71c
        boundingArea = calculateBoundingArea();
 8006038:	f00b fd70 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800603c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        rotation = textRotation;
 8006040:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8006044:	f20b 7824 	addw	r8, fp, #1828	; 0x724
 8006048:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 800604c:	f88b c720 	strb.w	ip, [fp, #1824]	; 0x720
        boundingArea = calculateBoundingArea();
 8006050:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006052:	4630      	mov	r0, r6
 8006054:	f00b fd62 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006058:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800605c:	4b83      	ldr	r3, [pc, #524]	; (800626c <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
 800605e:	9341      	str	r3, [sp, #260]	; 0x104
 8006060:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8006064:	2358      	movs	r3, #88	; 0x58
    labelLapCounter.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IPF6));
 8006066:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006068:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 800606c:	4639      	mov	r1, r7
 800606e:	f00b ffef 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006072:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006074:	4620      	mov	r0, r4
 8006076:	f009 fb7b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtLap.setPosition(5, 150, 135, 49);
 800607a:	f04f 0e31 	mov.w	lr, #49	; 0x31
 800607e:	2387      	movs	r3, #135	; 0x87
 8006080:	2105      	movs	r1, #5
 8006082:	9822      	ldr	r0, [sp, #136]	; 0x88
 8006084:	f8cd e000 	str.w	lr, [sp]
 8006088:	2296      	movs	r2, #150	; 0x96
 800608a:	f7fc fe34 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800608e:	4a76      	ldr	r2, [pc, #472]	; (8006268 <_ZN23MainInfotaimentViewBaseC1Ev+0xccc>)
 8006090:	f8cb 2760 	str.w	r2, [fp, #1888]	; 0x760
        linespace = space;
 8006094:	f8ab 5764 	strh.w	r5, [fp, #1892]	; 0x764
        return TextArea::BoundingArea();
 8006098:	4638      	mov	r0, r7
 800609a:	f7fc ffbb 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 800609e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80060a2:	f20b 736c 	addw	r3, fp, #1900	; 0x76c
 80060a6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80060aa:	4971      	ldr	r1, [pc, #452]	; (8006270 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd4>)
 80060ac:	680b      	ldr	r3, [r1, #0]
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AR7I).getText());
 80060ae:	f50b 58b9 	add.w	r8, fp, #5920	; 0x1720
 80060b2:	f108 0806 	add.w	r8, r8, #6
 80060b6:	2b00      	cmp	r3, #0
 80060b8:	f43f ad04 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80060bc:	496d      	ldr	r1, [pc, #436]	; (8006274 <_ZN23MainInfotaimentViewBaseC1Ev+0xcd8>)
 80060be:	880b      	ldrh	r3, [r1, #0]
 80060c0:	2b59      	cmp	r3, #89	; 0x59
 80060c2:	f67f ad09 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80060c6:	486c      	ldr	r0, [pc, #432]	; (8006278 <_ZN23MainInfotaimentViewBaseC1Ev+0xcdc>)
 80060c8:	2159      	movs	r1, #89	; 0x59
 80060ca:	6800      	ldr	r0, [r0, #0]
 80060cc:	f002 f84a 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80060d0:	4a6a      	ldr	r2, [pc, #424]	; (800627c <_ZN23MainInfotaimentViewBaseC1Ev+0xce0>)
 80060d2:	4603      	mov	r3, r0
 80060d4:	2103      	movs	r1, #3
 80060d6:	4640      	mov	r0, r8
 80060d8:	f012 f856 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80060dc:	4b63      	ldr	r3, [pc, #396]	; (800626c <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    txtLap.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9DFI));
 80060de:	9822      	ldr	r0, [sp, #136]	; 0x88
        wc1 = value;
 80060e0:	f8cb 8778 	str.w	r8, [fp, #1912]	; 0x778
 80060e4:	4639      	mov	r1, r7
 80060e6:	f04f 085a 	mov.w	r8, #90	; 0x5a
 80060ea:	9341      	str	r3, [sp, #260]	; 0x104
 80060ec:	f8ad 8108 	strh.w	r8, [sp, #264]	; 0x108
 80060f0:	f00b ffae 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80060f4:	9922      	ldr	r1, [sp, #136]	; 0x88
 80060f6:	4620      	mov	r0, r4
 80060f8:	f009 fb3a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelRES.setXY(36, 267);
 80060fc:	f240 120b 	movw	r2, #267	; 0x10b
 8006100:	981a      	ldr	r0, [sp, #104]	; 0x68
 8006102:	2124      	movs	r1, #36	; 0x24
 8006104:	f7fc fdea 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006108:	4630      	mov	r0, r6
 800610a:	991a      	ldr	r1, [sp, #104]	; 0x68
        linespace = space;
 800610c:	f8ab 57b0 	strh.w	r5, [fp, #1968]	; 0x7b0
        color = newColor;
 8006110:	f8cb a7ac 	str.w	sl, [fp, #1964]	; 0x7ac
        boundingArea = calculateBoundingArea();
 8006114:	f00b fd02 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006118:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800611c:	f50b 63f7 	add.w	r3, fp, #1976	; 0x7b8
 8006120:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006124:	260c      	movs	r6, #12
 8006126:	4b51      	ldr	r3, [pc, #324]	; (800626c <_ZN23MainInfotaimentViewBaseC1Ev+0xcd0>)
    labelRES.setTypedText(touchgfx::TypedText(T_RES));
 8006128:	981a      	ldr	r0, [sp, #104]	; 0x68
 800612a:	9341      	str	r3, [sp, #260]	; 0x104
 800612c:	4639      	mov	r1, r7
 800612e:	f8ad 6108 	strh.w	r6, [sp, #264]	; 0x108
 8006132:	f00b ff8d 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006136:	991a      	ldr	r1, [sp, #104]	; 0x68
 8006138:	4620      	mov	r0, r4
 800613a:	f009 fb19 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmLow.setXY(12, 20);
 800613e:	4631      	mov	r1, r6
 8006140:	ee19 0a90 	vmov	r0, s19
 8006144:	2214      	movs	r2, #20
 8006146:	f7fc fdc9 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmLow.setProgressIndicatorPosition(2, 2, 246, 16);
 800614a:	2202      	movs	r2, #2
 800614c:	4611      	mov	r1, r2
 800614e:	ee19 0a90 	vmov	r0, s19
 8006152:	23f6      	movs	r3, #246	; 0xf6
 8006154:	f8cd 9000 	str.w	r9, [sp]
 8006158:	f009 f851 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmLow.setRange(0, 100);
 800615c:	462b      	mov	r3, r5
 800615e:	2264      	movs	r2, #100	; 0x64
 8006160:	4629      	mov	r1, r5
 8006162:	ee19 0a90 	vmov	r0, s19
 8006166:	9500      	str	r5, [sp, #0]
 8006168:	f009 f966 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmLow.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 800616c:	4629      	mov	r1, r5
 800616e:	ee19 0a90 	vmov	r0, s19
 8006172:	f009 f940 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
 8006176:	2617      	movs	r6, #23
    progressRpmLow.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8006178:	ee19 0a90 	vmov	r0, s19
 800617c:	4639      	mov	r1, r7
 800617e:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 8006182:	f009 fa87 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmLow.setColor(touchgfx::Color::getColorFromRGB(9, 255, 0));
 8006186:	493e      	ldr	r1, [pc, #248]	; (8006280 <_ZN23MainInfotaimentViewBaseC1Ev+0xce4>)
 8006188:	ee19 0a90 	vmov	r0, s19
 800618c:	f009 f821 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmLow.setValue(0);
 8006190:	4629      	mov	r1, r5
 8006192:	ee19 0a90 	vmov	r0, s19
 8006196:	f009 f84a 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 800619a:	ee19 1a90 	vmov	r1, s19
 800619e:	4620      	mov	r0, r4
 80061a0:	f009 fae6 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmMed.setXY(275, 20);
 80061a4:	ee1a 0a10 	vmov	r0, s20
 80061a8:	2214      	movs	r2, #20
 80061aa:	f240 1113 	movw	r1, #275	; 0x113
 80061ae:	f7fc fd95 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmMed.setProgressIndicatorPosition(2, 2, 246, 16);
 80061b2:	2202      	movs	r2, #2
 80061b4:	4611      	mov	r1, r2
 80061b6:	ee1a 0a10 	vmov	r0, s20
 80061ba:	23f6      	movs	r3, #246	; 0xf6
 80061bc:	f8cd 9000 	str.w	r9, [sp]
 80061c0:	f009 f81d 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmMed.setRange(0, 100);
 80061c4:	462b      	mov	r3, r5
 80061c6:	2264      	movs	r2, #100	; 0x64
 80061c8:	4629      	mov	r1, r5
 80061ca:	ee1a 0a10 	vmov	r0, s20
 80061ce:	9500      	str	r5, [sp, #0]
 80061d0:	f009 f932 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmMed.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 80061d4:	4629      	mov	r1, r5
 80061d6:	ee1a 0a10 	vmov	r0, s20
 80061da:	f009 f90c 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmMed.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 80061de:	ee1a 0a10 	vmov	r0, s20
 80061e2:	4639      	mov	r1, r7
 80061e4:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 80061e8:	f009 fa54 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmMed.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
 80061ec:	4925      	ldr	r1, [pc, #148]	; (8006284 <_ZN23MainInfotaimentViewBaseC1Ev+0xce8>)
 80061ee:	ee1a 0a10 	vmov	r0, s20
 80061f2:	f008 ffee 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmMed.setValue(0);
 80061f6:	4629      	mov	r1, r5
 80061f8:	ee1a 0a10 	vmov	r0, s20
 80061fc:	f009 f817 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 8006200:	ee1a 1a10 	vmov	r1, s20
 8006204:	4620      	mov	r0, r4
 8006206:	f009 fab3 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    progressRpmHigh.setXY(536, 20);
 800620a:	ee1a 0a90 	vmov	r0, s21
 800620e:	2214      	movs	r2, #20
 8006210:	f44f 7106 	mov.w	r1, #536	; 0x218
 8006214:	f7fc fd62 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    progressRpmHigh.setProgressIndicatorPosition(2, 2, 246, 16);
 8006218:	2202      	movs	r2, #2
 800621a:	4611      	mov	r1, r2
 800621c:	ee1a 0a90 	vmov	r0, s21
 8006220:	23f6      	movs	r3, #246	; 0xf6
 8006222:	f8cd 9000 	str.w	r9, [sp]
 8006226:	f008 ffea 	bl	800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>
    progressRpmHigh.setRange(0, 100);
 800622a:	462b      	mov	r3, r5
 800622c:	2264      	movs	r2, #100	; 0x64
 800622e:	4629      	mov	r1, r5
 8006230:	ee1a 0a90 	vmov	r0, s21
 8006234:	9500      	str	r5, [sp, #0]
 8006236:	f009 f8ff 	bl	800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    progressRpmHigh.setDirection(touchgfx::AbstractDirectionProgress::RIGHT);
 800623a:	4629      	mov	r1, r5
 800623c:	ee1a 0a90 	vmov	r0, s21
 8006240:	f009 f8d9 	bl	800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>
    progressRpmHigh.setBackground(touchgfx::Bitmap(BITMAP_PROGRESS_BAR_LARGE_ID));
 8006244:	ee1a 0a90 	vmov	r0, s21
 8006248:	4639      	mov	r1, r7
 800624a:	f8ad 6104 	strh.w	r6, [sp, #260]	; 0x104
 800624e:	f009 fa21 	bl	800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    progressRpmHigh.setColor(touchgfx::Color::getColorFromRGB(149, 0, 255));
 8006252:	490d      	ldr	r1, [pc, #52]	; (8006288 <_ZN23MainInfotaimentViewBaseC1Ev+0xcec>)
 8006254:	ee1a 0a90 	vmov	r0, s21
 8006258:	f008 ffbb 	bl	800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>
    progressRpmHigh.setValue(0);
 800625c:	4629      	mov	r1, r5
 800625e:	e015      	b.n	800628c <_ZN23MainInfotaimentViewBaseC1Ev+0xcf0>
 8006260:	fff4ff1f 	.word	0xfff4ff1f
 8006264:	fff50f0f 	.word	0xfff50f0f
 8006268:	ffffea00 	.word	0xffffea00
 800626c:	080284b8 	.word	0x080284b8
 8006270:	2000ef74 	.word	0x2000ef74
 8006274:	2000ef78 	.word	0x2000ef78
 8006278:	2000ef80 	.word	0x2000ef80
 800627c:	08028442 	.word	0x08028442
 8006280:	ff09ff00 	.word	0xff09ff00
 8006284:	ffff0000 	.word	0xffff0000
 8006288:	ff9500ff 	.word	0xff9500ff
 800628c:	ee1a 0a90 	vmov	r0, s21
 8006290:	f008 ffcd 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
 8006294:	ee1a 1a90 	vmov	r1, s21
 8006298:	4620      	mov	r0, r4
 800629a:	f009 fa69 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTWater.setPosition(150, 373, 90, 38);
 800629e:	2326      	movs	r3, #38	; 0x26
 80062a0:	982e      	ldr	r0, [sp, #184]	; 0xb8
 80062a2:	9300      	str	r3, [sp, #0]
 80062a4:	f240 1275 	movw	r2, #373	; 0x175
 80062a8:	4643      	mov	r3, r8
 80062aa:	2196      	movs	r1, #150	; 0x96
 80062ac:	f7fc fd23 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80062b0:	f04f 467f 	mov.w	r6, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80062b4:	4ad5      	ldr	r2, [pc, #852]	; (800660c <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 80062b6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80062b8:	f8cb 6a98 	str.w	r6, [fp, #2712]	; 0xa98
        borderSize = size;
 80062bc:	2305      	movs	r3, #5
        borderColor = colorBorder;
 80062be:	f8cb 2a9c 	str.w	r2, [fp, #2716]	; 0xa9c
        borderSize = size;
 80062c2:	f8ab 3aa0 	strh.w	r3, [fp, #2720]	; 0xaa0
 80062c6:	4620      	mov	r0, r4
 80062c8:	f009 fa52 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTWater.setPosition(157, 383, 75, 19);
 80062cc:	2313      	movs	r3, #19
 80062ce:	f240 127f 	movw	r2, #383	; 0x17f
 80062d2:	219d      	movs	r1, #157	; 0x9d
 80062d4:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80062d6:	9300      	str	r3, [sp, #0]
 80062d8:	234b      	movs	r3, #75	; 0x4b
 80062da:	f7fc fd0c 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        linespace = space;
 80062de:	f8ab 5ad8 	strh.w	r5, [fp, #2776]	; 0xad8
        color = newColor;
 80062e2:	f8cb aad4 	str.w	sl, [fp, #2772]	; 0xad4
        return TextArea::BoundingArea();
 80062e6:	4638      	mov	r0, r7
 80062e8:	f7fc fe94 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80062ec:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80062f0:	4ec7      	ldr	r6, [pc, #796]	; (8006610 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 80062f2:	f50b 632e 	add.w	r3, fp, #2784	; 0xae0
 80062f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80062fa:	6833      	ldr	r3, [r6, #0]
    Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_K6X0).getText());
 80062fc:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 8006300:	350c      	adds	r5, #12
 8006302:	2b00      	cmp	r3, #0
 8006304:	f43f abde 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006308:	49c2      	ldr	r1, [pc, #776]	; (8006614 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 800630a:	880b      	ldrh	r3, [r1, #0]
 800630c:	2b77      	cmp	r3, #119	; 0x77
 800630e:	f67f abe3 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006312:	48c1      	ldr	r0, [pc, #772]	; (8006618 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
        borderColor = colorBorder;
 8006314:	4fbd      	ldr	r7, [pc, #756]	; (800660c <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 8006316:	6800      	ldr	r0, [r0, #0]
 8006318:	2177      	movs	r1, #119	; 0x77
 800631a:	f001 ff23 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 800631e:	4abf      	ldr	r2, [pc, #764]	; (800661c <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 8006320:	4603      	mov	r3, r0
 8006322:	2104      	movs	r1, #4
 8006324:	4628      	mov	r0, r5
 8006326:	f011 ff2f 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 800632a:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 800632c:	4bbc      	ldr	r3, [pc, #752]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 800632e:	9823      	ldr	r0, [sp, #140]	; 0x8c
        wc1 = value;
 8006330:	f8cb 5aec 	str.w	r5, [fp, #2796]	; 0xaec
 8006334:	9341      	str	r3, [sp, #260]	; 0x104
 8006336:	4631      	mov	r1, r6
 8006338:	2378      	movs	r3, #120	; 0x78
 800633a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxTOil.setPosition(150, 333, 90, 38);
 800633e:	2526      	movs	r5, #38	; 0x26
    txtTWater.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ROYB));
 8006340:	f00b fe86 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006344:	9923      	ldr	r1, [sp, #140]	; 0x8c
 8006346:	4620      	mov	r0, r4
 8006348:	f009 fa12 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOil.setPosition(150, 333, 90, 38);
 800634c:	4643      	mov	r3, r8
 800634e:	f240 124d 	movw	r2, #333	; 0x14d
 8006352:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8006354:	9500      	str	r5, [sp, #0]
 8006356:	2196      	movs	r1, #150	; 0x96
 8006358:	f7fc fccd 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderSize = size;
 800635c:	f04f 0905 	mov.w	r9, #5
 8006360:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006364:	f8cb eb18 	str.w	lr, [fp, #2840]	; 0xb18
 8006368:	992f      	ldr	r1, [sp, #188]	; 0xbc
        borderColor = colorBorder;
 800636a:	f8cb 7b1c 	str.w	r7, [fp, #2844]	; 0xb1c
 800636e:	4620      	mov	r0, r4
        borderSize = size;
 8006370:	f8ab 9b20 	strh.w	r9, [fp, #2848]	; 0xb20
 8006374:	f009 f9fc 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPOil.setPosition(150, 293, 90, 38);
 8006378:	4643      	mov	r3, r8
 800637a:	f240 1225 	movw	r2, #293	; 0x125
 800637e:	9830      	ldr	r0, [sp, #192]	; 0xc0
 8006380:	9500      	str	r5, [sp, #0]
 8006382:	2196      	movs	r1, #150	; 0x96
 8006384:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 8006388:	f7fc fcb5 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
    txtTOil.setPosition(157, 343, 75, 19);
 800638c:	f04f 0813 	mov.w	r8, #19
 8006390:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8006392:	f8cb 5b4c 	str.w	r5, [fp, #2892]	; 0xb4c
        borderColor = colorBorder;
 8006396:	f8cb 7b50 	str.w	r7, [fp, #2896]	; 0xb50
 800639a:	4620      	mov	r0, r4
        borderSize = size;
 800639c:	f8ab 9b54 	strh.w	r9, [fp, #2900]	; 0xb54
 80063a0:	f009 f9e6 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        linespace = space;
 80063a4:	2700      	movs	r7, #0
 80063a6:	234b      	movs	r3, #75	; 0x4b
 80063a8:	f240 1257 	movw	r2, #343	; 0x157
 80063ac:	219d      	movs	r1, #157	; 0x9d
 80063ae:	9824      	ldr	r0, [sp, #144]	; 0x90
 80063b0:	f8cd 8000 	str.w	r8, [sp]
 80063b4:	f7fc fc9f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80063b8:	f8cb ab88 	str.w	sl, [fp, #2952]	; 0xb88
        linespace = space;
 80063bc:	f8ab 7b8c 	strh.w	r7, [fp, #2956]	; 0xb8c
        return TextArea::BoundingArea();
 80063c0:	4630      	mov	r0, r6
 80063c2:	f7fc fe27 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80063c6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80063ca:	f60b 3394 	addw	r3, fp, #2964	; 0xb94
 80063ce:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80063d2:	4a8f      	ldr	r2, [pc, #572]	; (8006610 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 80063d4:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ZRFT).getText());
 80063d6:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 80063da:	3514      	adds	r5, #20
 80063dc:	2b00      	cmp	r3, #0
 80063de:	f43f ab71 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80063e2:	498c      	ldr	r1, [pc, #560]	; (8006614 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 80063e4:	880b      	ldrh	r3, [r1, #0]
 80063e6:	2b75      	cmp	r3, #117	; 0x75
 80063e8:	f67f ab76 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80063ec:	488a      	ldr	r0, [pc, #552]	; (8006618 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 80063ee:	2175      	movs	r1, #117	; 0x75
 80063f0:	6800      	ldr	r0, [r0, #0]
 80063f2:	f001 feb7 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80063f6:	4a89      	ldr	r2, [pc, #548]	; (800661c <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 80063f8:	4603      	mov	r3, r0
 80063fa:	2104      	movs	r1, #4
 80063fc:	4628      	mov	r0, r5
 80063fe:	f011 fec3 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006402:	4b87      	ldr	r3, [pc, #540]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtTOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YR52));
 8006404:	9824      	ldr	r0, [sp, #144]	; 0x90
        wc1 = value;
 8006406:	f8cb 5ba0 	str.w	r5, [fp, #2976]	; 0xba0
 800640a:	9341      	str	r3, [sp, #260]	; 0x104
 800640c:	4631      	mov	r1, r6
 800640e:	2376      	movs	r3, #118	; 0x76
 8006410:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006414:	f00b fe1c 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006418:	9924      	ldr	r1, [sp, #144]	; 0x90
 800641a:	4620      	mov	r0, r4
 800641c:	f009 f9a8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPOil.setPosition(157, 303, 75, 19);
 8006420:	234b      	movs	r3, #75	; 0x4b
 8006422:	f240 122f 	movw	r2, #303	; 0x12f
 8006426:	219d      	movs	r1, #157	; 0x9d
 8006428:	9825      	ldr	r0, [sp, #148]	; 0x94
 800642a:	f8cd 8000 	str.w	r8, [sp]
 800642e:	f7fc fc62 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006432:	f8cb abd4 	str.w	sl, [fp, #3028]	; 0xbd4
        linespace = space;
 8006436:	f8ab 7bd8 	strh.w	r7, [fp, #3032]	; 0xbd8
        return TextArea::BoundingArea();
 800643a:	4630      	mov	r0, r6
 800643c:	f7fc fdea 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006440:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006444:	f50b 633e 	add.w	r3, fp, #3040	; 0xbe0
 8006448:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800644c:	4a70      	ldr	r2, [pc, #448]	; (8006610 <_ZN23MainInfotaimentViewBaseC1Ev+0x1074>)
 800644e:	6813      	ldr	r3, [r2, #0]
    Unicode::snprintf(txtPOilBuffer, TXTPOIL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1M75).getText());
 8006450:	f50b 55b9 	add.w	r5, fp, #5920	; 0x1720
 8006454:	351c      	adds	r5, #28
 8006456:	2b00      	cmp	r3, #0
 8006458:	f43f ab34 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800645c:	496d      	ldr	r1, [pc, #436]	; (8006614 <_ZN23MainInfotaimentViewBaseC1Ev+0x1078>)
 800645e:	880b      	ldrh	r3, [r1, #0]
 8006460:	2b73      	cmp	r3, #115	; 0x73
 8006462:	f67f ab39 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006466:	486c      	ldr	r0, [pc, #432]	; (8006618 <_ZN23MainInfotaimentViewBaseC1Ev+0x107c>)
 8006468:	2173      	movs	r1, #115	; 0x73
 800646a:	6800      	ldr	r0, [r0, #0]
 800646c:	f001 fe7a 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8006470:	4a6a      	ldr	r2, [pc, #424]	; (800661c <_ZN23MainInfotaimentViewBaseC1Ev+0x1080>)
 8006472:	4603      	mov	r3, r0
 8006474:	2106      	movs	r1, #6
 8006476:	4628      	mov	r0, r5
 8006478:	f011 fe86 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800647c:	4b68      	ldr	r3, [pc, #416]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 800647e:	9825      	ldr	r0, [sp, #148]	; 0x94
        wc1 = value;
 8006480:	f8cb 5bec 	str.w	r5, [fp, #3052]	; 0xbec
 8006484:	9341      	str	r3, [sp, #260]	; 0x104
 8006486:	4631      	mov	r1, r6
 8006488:	2374      	movs	r3, #116	; 0x74
 800648a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
    boxLC.setPosition(5, 321, 135, 63);
 800648e:	253f      	movs	r5, #63	; 0x3f
    txtPOil.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5NKC));
 8006490:	f00b fdde 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006494:	9925      	ldr	r1, [sp, #148]	; 0x94
 8006496:	4620      	mov	r0, r4
 8006498:	f009 f96a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxLC.setPosition(5, 321, 135, 63);
 800649c:	2387      	movs	r3, #135	; 0x87
 800649e:	4649      	mov	r1, r9
 80064a0:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80064a2:	9500      	str	r5, [sp, #0]
 80064a4:	f240 1241 	movw	r2, #321	; 0x141
 80064a8:	f7fc fc25 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80064ac:	f04f 0804 	mov.w	r8, #4
        borderColor = colorBorder;
 80064b0:	4a56      	ldr	r2, [pc, #344]	; (800660c <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 80064b2:	9931      	ldr	r1, [sp, #196]	; 0xc4
 80064b4:	f8cb 2c1c 	str.w	r2, [fp, #3100]	; 0xc1c
 80064b8:	f04f 457f 	mov.w	r5, #4278190080	; 0xff000000
 80064bc:	f8cb 5c18 	str.w	r5, [fp, #3096]	; 0xc18
        borderSize = size;
 80064c0:	f8ab 8c20 	strh.w	r8, [fp, #3104]	; 0xc20
 80064c4:	4620      	mov	r0, r4
 80064c6:	ad3c      	add	r5, sp, #240	; 0xf0
 80064c8:	f009 f952 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelLC.setXY(47, 335);
 80064cc:	f240 124f 	movw	r2, #335	; 0x14f
 80064d0:	980c      	ldr	r0, [sp, #48]	; 0x30
 80064d2:	212f      	movs	r1, #47	; 0x2f
 80064d4:	f7fc fc02 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80064d8:	4628      	mov	r0, r5
 80064da:	990c      	ldr	r1, [sp, #48]	; 0x30
        color = newColor;
 80064dc:	f8cb ac54 	str.w	sl, [fp, #3156]	; 0xc54
        linespace = space;
 80064e0:	f8ab 7c58 	strh.w	r7, [fp, #3160]	; 0xc58
        boundingArea = calculateBoundingArea();
 80064e4:	f00b fb1a 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80064e8:	990c      	ldr	r1, [sp, #48]	; 0x30
 80064ea:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 80064ee:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80064f2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80064f6:	4b4a      	ldr	r3, [pc, #296]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelLC.setTypedText(touchgfx::TypedText(T_LC));
 80064f8:	980c      	ldr	r0, [sp, #48]	; 0x30
 80064fa:	9341      	str	r3, [sp, #260]	; 0x104
 80064fc:	4631      	mov	r1, r6
 80064fe:	230b      	movs	r3, #11
 8006500:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006504:	f00b fda4 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006508:	990c      	ldr	r1, [sp, #48]	; 0x30
 800650a:	4620      	mov	r0, r4
 800650c:	f009 f930 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxClutch.setPosition(5, 388, 135, 63);
 8006510:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
 8006514:	2387      	movs	r3, #135	; 0x87
 8006516:	4649      	mov	r1, r9
 8006518:	9832      	ldr	r0, [sp, #200]	; 0xc8
 800651a:	f8cd e000 	str.w	lr, [sp]
 800651e:	f44f 72c2 	mov.w	r2, #388	; 0x184
 8006522:	f7fc fbe8 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006526:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 800652a:	4a38      	ldr	r2, [pc, #224]	; (800660c <_ZN23MainInfotaimentViewBaseC1Ev+0x1070>)
 800652c:	f8cb ec94 	str.w	lr, [fp, #3220]	; 0xc94
 8006530:	9932      	ldr	r1, [sp, #200]	; 0xc8
 8006532:	f8cb 2c98 	str.w	r2, [fp, #3224]	; 0xc98
        borderSize = size;
 8006536:	f8ab 8c9c 	strh.w	r8, [fp, #3228]	; 0xc9c
 800653a:	4620      	mov	r0, r4
 800653c:	f009 f918 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelClutch.setXY(39, 402);
 8006540:	f44f 72c9 	mov.w	r2, #402	; 0x192
 8006544:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006546:	2127      	movs	r1, #39	; 0x27
 8006548:	f7fc fbc8 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 800654c:	4628      	mov	r0, r5
 800654e:	990d      	ldr	r1, [sp, #52]	; 0x34
        color = newColor;
 8006550:	f8cb acd0 	str.w	sl, [fp, #3280]	; 0xcd0
        linespace = space;
 8006554:	f8ab 7cd4 	strh.w	r7, [fp, #3284]	; 0xcd4
        boundingArea = calculateBoundingArea();
 8006558:	f00b fae0 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800655c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800655e:	f101 033c 	add.w	r3, r1, #60	; 0x3c
 8006562:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006566:	f04f 0e0a 	mov.w	lr, #10
 800656a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800656e:	4b2c      	ldr	r3, [pc, #176]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
    labelClutch.setTypedText(touchgfx::TypedText(T_CLUTCH));
 8006570:	980d      	ldr	r0, [sp, #52]	; 0x34
 8006572:	f8ad e108 	strh.w	lr, [sp, #264]	; 0x108
 8006576:	4631      	mov	r1, r6
 8006578:	9341      	str	r3, [sp, #260]	; 0x104
 800657a:	f00b fd69 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800657e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006580:	4620      	mov	r0, r4
 8006582:	f009 f8f5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8006586:	230d      	movs	r3, #13
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_185X111_ID));
 8006588:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800658a:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 800658e:	4631      	mov	r1, r6
 8006590:	f00b ff8a 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(308, 340, 185, 111);
 8006594:	f04f 0e6f 	mov.w	lr, #111	; 0x6f
 8006598:	f8cd e000 	str.w	lr, [sp]
 800659c:	23b9      	movs	r3, #185	; 0xb9
 800659e:	f44f 72aa 	mov.w	r2, #340	; 0x154
 80065a2:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80065a4:	f44f 719a 	mov.w	r1, #308	; 0x134
 80065a8:	f7fc fba5 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 80065ac:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80065ae:	4639      	mov	r1, r7
 80065b0:	f00a ffc4 	bl	801153c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 80065b4:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80065b6:	4620      	mov	r0, r4
 80065b8:	f009 f8da 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelDS.setXY(766, 160);
 80065bc:	22a0      	movs	r2, #160	; 0xa0
 80065be:	ee1e 0a90 	vmov	r0, s29
 80065c2:	f240 21fe 	movw	r1, #766	; 0x2fe
 80065c6:	f7fc fb89 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80065ca:	4628      	mov	r0, r5
 80065cc:	ee1e 1a90 	vmov	r1, s29
        color = newColor;
 80065d0:	f8cb ad44 	str.w	sl, [fp, #3396]	; 0xd44
        linespace = space;
 80065d4:	f8ab 7d48 	strh.w	r7, [fp, #3400]	; 0xd48
        boundingArea = calculateBoundingArea();
 80065d8:	f00b faa0 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065dc:	ee1e 1a90 	vmov	r1, s29
 80065e0:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 80065e4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80065e8:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80065ec:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 80065f0:	f88b cd4c 	strb.w	ip, [fp, #3404]	; 0xd4c
        boundingArea = calculateBoundingArea();
 80065f4:	4628      	mov	r0, r5
 80065f6:	ee1e 1a90 	vmov	r1, s29
 80065fa:	f00b fa8f 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80065fe:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006602:	4b07      	ldr	r3, [pc, #28]	; (8006620 <_ZN23MainInfotaimentViewBaseC1Ev+0x1084>)
 8006604:	9341      	str	r3, [sp, #260]	; 0x104
 8006606:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 800660a:	e00b      	b.n	8006624 <_ZN23MainInfotaimentViewBaseC1Ev+0x1088>
 800660c:	ffffea00 	.word	0xffffea00
 8006610:	2000ef74 	.word	0x2000ef74
 8006614:	2000ef78 	.word	0x2000ef78
 8006618:	2000ef80 	.word	0x2000ef80
 800661c:	08028442 	.word	0x08028442
 8006620:	080284b8 	.word	0x080284b8
 8006624:	2372      	movs	r3, #114	; 0x72
    labelDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_67FN));
 8006626:	ee1e 0a90 	vmov	r0, s29
 800662a:	4631      	mov	r1, r6
 800662c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006630:	f00b fd0e 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006634:	ee1e 1a90 	vmov	r1, s29
 8006638:	4620      	mov	r0, r4
 800663a:	f009 f899 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2.setPosition(751, 150, 15, 42);
 800663e:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006642:	f8cd e000 	str.w	lr, [sp]
 8006646:	230f      	movs	r3, #15
 8006648:	ee1f 0a10 	vmov	r0, s30
 800664c:	2296      	movs	r2, #150	; 0x96
 800664e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8006652:	f7fc fb50 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006656:	9939      	ldr	r1, [sp, #228]	; 0xe4
 8006658:	f8cb 1d84 	str.w	r1, [fp, #3460]	; 0xd84
    line1_2.setStart(0, 0);
 800665c:	ee1f 0a10 	vmov	r0, s30
 8006660:	463a      	mov	r2, r7
 8006662:	4639      	mov	r1, r7
 8006664:	f8cb add8 	str.w	sl, [fp, #3544]	; 0xdd8
 8006668:	f8ab addc 	strh.w	sl, [fp, #3548]	; 0xddc
 800666c:	f7fe ff7e 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2.setEnd(0, 45);
 8006670:	222d      	movs	r2, #45	; 0x2d
 8006672:	ee1f 0a10 	vmov	r0, s30
 8006676:	4639      	mov	r1, r7
 8006678:	f7fe ff7c 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2.setLineWidth(10);
 800667c:	ee1f 0a10 	vmov	r0, s30
 8006680:	210a      	movs	r1, #10
 8006682:	f7fe ff7b 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 8006686:	ee1f 0a10 	vmov	r0, s30
 800668a:	4639      	mov	r1, r7
 800668c:	f00a fdee 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006690:	ee1f 1a10 	vmov	r1, s30
 8006694:	4620      	mov	r0, r4
 8006696:	f009 f86b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1.setPosition(751, 195, 15, 42);
 800669a:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800669e:	f8cd e000 	str.w	lr, [sp]
 80066a2:	ee1f 0a90 	vmov	r0, s31
 80066a6:	230f      	movs	r3, #15
 80066a8:	22c3      	movs	r2, #195	; 0xc3
 80066aa:	f240 21ef 	movw	r1, #751	; 0x2ef
 80066ae:	f7fc fb22 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80066b2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80066b6:	993a      	ldr	r1, [sp, #232]	; 0xe8
 80066b8:	f8ab 3e60 	strh.w	r3, [fp, #3680]	; 0xe60
    line1_2_1.setStart(0, 0);
 80066bc:	ee1f 0a90 	vmov	r0, s31
 80066c0:	f8cb 1e08 	str.w	r1, [fp, #3592]	; 0xe08
 80066c4:	463a      	mov	r2, r7
 80066c6:	4639      	mov	r1, r7
 80066c8:	f8cb ae5c 	str.w	sl, [fp, #3676]	; 0xe5c
 80066cc:	f7fe ff4e 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1.setEnd(0, 45);
 80066d0:	222d      	movs	r2, #45	; 0x2d
 80066d2:	ee1f 0a90 	vmov	r0, s31
 80066d6:	4639      	mov	r1, r7
 80066d8:	f7fe ff4c 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1.setLineWidth(10);
 80066dc:	ee1f 0a90 	vmov	r0, s31
 80066e0:	210a      	movs	r1, #10
 80066e2:	f7fe ff4b 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80066e6:	ee1f 0a90 	vmov	r0, s31
 80066ea:	4639      	mov	r1, r7
 80066ec:	f00a fdbe 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80066f0:	ee1f 1a90 	vmov	r1, s31
 80066f4:	4620      	mov	r0, r4
 80066f6:	f009 f83b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxDS.setPosition(586, 150, 145, 42);
 80066fa:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80066fe:	2391      	movs	r3, #145	; 0x91
 8006700:	9833      	ldr	r0, [sp, #204]	; 0xcc
 8006702:	f8cd e000 	str.w	lr, [sp]
 8006706:	2296      	movs	r2, #150	; 0x96
 8006708:	f240 214a 	movw	r1, #586	; 0x24a
 800670c:	f7fc faf3 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006710:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 8006714:	4add      	ldr	r2, [pc, #884]	; (8006a8c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 8006716:	f8cb ee8c 	str.w	lr, [fp, #3724]	; 0xe8c
 800671a:	9933      	ldr	r1, [sp, #204]	; 0xcc
 800671c:	f8cb 2e90 	str.w	r2, [fp, #3728]	; 0xe90
        borderSize = size;
 8006720:	f8ab 9e94 	strh.w	r9, [fp, #3732]	; 0xe94
 8006724:	4620      	mov	r0, r4
 8006726:	f009 f823 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS.setXY(766, 207);
 800672a:	22cf      	movs	r2, #207	; 0xcf
 800672c:	9802      	ldr	r0, [sp, #8]
 800672e:	f240 21fe 	movw	r1, #766	; 0x2fe
 8006732:	f7fc fad3 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006736:	4628      	mov	r0, r5
 8006738:	9902      	ldr	r1, [sp, #8]
        color = newColor;
 800673a:	f8cb aec8 	str.w	sl, [fp, #3784]	; 0xec8
        linespace = space;
 800673e:	f8ab 7ecc 	strh.w	r7, [fp, #3788]	; 0xecc
        boundingArea = calculateBoundingArea();
 8006742:	f00b f9eb 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006746:	9902      	ldr	r1, [sp, #8]
 8006748:	f101 083c 	add.w	r8, r1, #60	; 0x3c
 800674c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8006750:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8006754:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        rotation = textRotation;
 8006758:	f88b ced0 	strb.w	ip, [fp, #3792]	; 0xed0
        boundingArea = calculateBoundingArea();
 800675c:	4628      	mov	r0, r5
 800675e:	9902      	ldr	r1, [sp, #8]
 8006760:	f00b f9dc 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006764:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006768:	4bc9      	ldr	r3, [pc, #804]	; (8006a90 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 800676a:	9341      	str	r3, [sp, #260]	; 0x104
 800676c:	e888 0007 	stmia.w	r8, {r0, r1, r2}
 8006770:	2371      	movs	r3, #113	; 0x71
    labelAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MIUL));
 8006772:	9802      	ldr	r0, [sp, #8]
 8006774:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006778:	4631      	mov	r1, r6
 800677a:	f00b fc69 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800677e:	9902      	ldr	r1, [sp, #8]
 8006780:	4620      	mov	r0, r4
 8006782:	f008 fff5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAS.setPosition(586, 195, 145, 42);
 8006786:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800678a:	2391      	movs	r3, #145	; 0x91
 800678c:	9834      	ldr	r0, [sp, #208]	; 0xd0
 800678e:	f8cd e000 	str.w	lr, [sp]
 8006792:	22c3      	movs	r2, #195	; 0xc3
 8006794:	f240 214a 	movw	r1, #586	; 0x24a
 8006798:	f7fc faad 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 800679c:	4abb      	ldr	r2, [pc, #748]	; (8006a8c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 800679e:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80067a0:	f8cb 2f0c 	str.w	r2, [fp, #3852]	; 0xf0c
 80067a4:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 80067a8:	f8cb ef08 	str.w	lr, [fp, #3848]	; 0xf08
        borderSize = size;
 80067ac:	f8ab 9f10 	strh.w	r9, [fp, #3856]	; 0xf10
 80067b0:	4620      	mov	r0, r4
 80067b2:	f008 ffdd 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_2.setPosition(751, 240, 15, 42);
 80067b6:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 80067ba:	f8cd e000 	str.w	lr, [sp]
 80067be:	230f      	movs	r3, #15
 80067c0:	9803      	ldr	r0, [sp, #12]
 80067c2:	22f0      	movs	r2, #240	; 0xf0
 80067c4:	f240 21ef 	movw	r1, #751	; 0x2ef
 80067c8:	f7fc fa95 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80067cc:	993b      	ldr	r1, [sp, #236]	; 0xec
    line1_2_2.setStart(0, 0);
 80067ce:	9803      	ldr	r0, [sp, #12]
 80067d0:	f8cb 1f3c 	str.w	r1, [fp, #3900]	; 0xf3c
 80067d4:	463a      	mov	r2, r7
 80067d6:	4639      	mov	r1, r7
 80067d8:	f8cb af90 	str.w	sl, [fp, #3984]	; 0xf90
 80067dc:	f8ab af94 	strh.w	sl, [fp, #3988]	; 0xf94
 80067e0:	f7fe fec4 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_2.setEnd(0, 45);
 80067e4:	222d      	movs	r2, #45	; 0x2d
 80067e6:	9803      	ldr	r0, [sp, #12]
 80067e8:	4639      	mov	r1, r7
 80067ea:	f7fe fec3 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_2.setLineWidth(10);
 80067ee:	9803      	ldr	r0, [sp, #12]
 80067f0:	210a      	movs	r1, #10
 80067f2:	f7fe fec3 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_2.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 80067f6:	9803      	ldr	r0, [sp, #12]
 80067f8:	4639      	mov	r1, r7
 80067fa:	f00a fd37 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 80067fe:	9903      	ldr	r1, [sp, #12]
 8006800:	4620      	mov	r0, r4
 8006802:	f008 ffb5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxAMI.setPosition(586, 240, 145, 42);
 8006806:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800680a:	2391      	movs	r3, #145	; 0x91
 800680c:	9835      	ldr	r0, [sp, #212]	; 0xd4
 800680e:	f8cd e000 	str.w	lr, [sp]
 8006812:	22f0      	movs	r2, #240	; 0xf0
 8006814:	f240 214a 	movw	r1, #586	; 0x24a
 8006818:	f7fc fa6d 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 800681c:	4a9b      	ldr	r2, [pc, #620]	; (8006a8c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 800681e:	9935      	ldr	r1, [sp, #212]	; 0xd4
 8006820:	f8cb 2fc4 	str.w	r2, [fp, #4036]	; 0xfc4
 8006824:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8006828:	f8cb efc0 	str.w	lr, [fp, #4032]	; 0xfc0
        borderSize = size;
 800682c:	f8ab 9fc8 	strh.w	r9, [fp, #4040]	; 0xfc8
 8006830:	4620      	mov	r0, r4
 8006832:	f008 ff9d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    line1_2_1_1_1.setPosition(751, 284, 15, 42);
 8006836:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 800683a:	f50b 5880 	add.w	r8, fp, #4096	; 0x1000
 800683e:	f8cd e000 	str.w	lr, [sp]
 8006842:	230f      	movs	r3, #15
 8006844:	9804      	ldr	r0, [sp, #16]
 8006846:	f44f 728e 	mov.w	r2, #284	; 0x11c
 800684a:	f240 21ef 	movw	r1, #751	; 0x2ef
 800684e:	f7fc fa52 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 8006852:	9926      	ldr	r1, [sp, #152]	; 0x98
    line1_2_1_1_1.setStart(0, 0);
 8006854:	9804      	ldr	r0, [sp, #16]
 8006856:	f8c8 a048 	str.w	sl, [r8, #72]	; 0x48
 800685a:	f8a8 a04c 	strh.w	sl, [r8, #76]	; 0x4c
 800685e:	463a      	mov	r2, r7
 8006860:	f8cb 1ff4 	str.w	r1, [fp, #4084]	; 0xff4
 8006864:	4639      	mov	r1, r7
 8006866:	f7fe fe81 	bl	800556c <_ZN8touchgfx4Line8setStartIiEEvT_S2_>
    line1_2_1_1_1.setEnd(0, 45);
 800686a:	222d      	movs	r2, #45	; 0x2d
 800686c:	9804      	ldr	r0, [sp, #16]
 800686e:	4639      	mov	r1, r7
 8006870:	f7fe fe80 	bl	8005574 <_ZN8touchgfx4Line6setEndIiEEvT_S2_>
    line1_2_1_1_1.setLineWidth(10);
 8006874:	9804      	ldr	r0, [sp, #16]
 8006876:	210a      	movs	r1, #10
 8006878:	f7fe fe80 	bl	800557c <_ZN8touchgfx4Line12setLineWidthIiEEvT_>
    line1_2_1_1_1.setLineEndingStyle(touchgfx::Line::BUTT_CAP_ENDING);
 800687c:	9804      	ldr	r0, [sp, #16]
 800687e:	4639      	mov	r1, r7
 8006880:	f00a fcf4 	bl	801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>
 8006884:	9904      	ldr	r1, [sp, #16]
 8006886:	4620      	mov	r0, r4
 8006888:	f008 ff72 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxEBS.setPosition(586, 284, 145, 42);
 800688c:	f04f 0e2a 	mov.w	lr, #42	; 0x2a
 8006890:	2391      	movs	r3, #145	; 0x91
 8006892:	981c      	ldr	r0, [sp, #112]	; 0x70
 8006894:	f8cd e000 	str.w	lr, [sp]
 8006898:	f44f 728e 	mov.w	r2, #284	; 0x11c
 800689c:	f240 214a 	movw	r1, #586	; 0x24a
 80068a0:	f7fc fa29 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 80068a4:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
        borderColor = colorBorder;
 80068a8:	4a78      	ldr	r2, [pc, #480]	; (8006a8c <_ZN23MainInfotaimentViewBaseC1Ev+0x14f0>)
 80068aa:	f8c8 e078 	str.w	lr, [r8, #120]	; 0x78
 80068ae:	991c      	ldr	r1, [sp, #112]	; 0x70
 80068b0:	f8c8 207c 	str.w	r2, [r8, #124]	; 0x7c
        borderSize = size;
 80068b4:	f8a8 9080 	strh.w	r9, [r8, #128]	; 0x80
 80068b8:	4620      	mov	r0, r4
 80068ba:	f008 ff59 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_1.setXY(767, 247);
 80068be:	22f7      	movs	r2, #247	; 0xf7
 80068c0:	ee1b 0a10 	vmov	r0, s22
 80068c4:	f240 21ff 	movw	r1, #767	; 0x2ff
 80068c8:	f7fc fa08 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80068cc:	4628      	mov	r0, r5
 80068ce:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 80068d2:	f8c8 a0b4 	str.w	sl, [r8, #180]	; 0xb4
        linespace = space;
 80068d6:	f8a8 70b8 	strh.w	r7, [r8, #184]	; 0xb8
        boundingArea = calculateBoundingArea();
 80068da:	f00b f91f 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80068de:	ee1b 1a10 	vmov	r1, s22
 80068e2:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 80068e6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 80068ea:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 80068ee:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        rotation = textRotation;
 80068f2:	f888 c0bc 	strb.w	ip, [r8, #188]	; 0xbc
        boundingArea = calculateBoundingArea();
 80068f6:	4628      	mov	r0, r5
 80068f8:	ee1b 1a10 	vmov	r1, s22
 80068fc:	f00b f90e 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006900:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8006904:	4b62      	ldr	r3, [pc, #392]	; (8006a90 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 8006906:	9341      	str	r3, [sp, #260]	; 0x104
 8006908:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 800690c:	2370      	movs	r3, #112	; 0x70
    labelAS_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D9LL));
 800690e:	ee1b 0a10 	vmov	r0, s22
 8006912:	4631      	mov	r1, r6
 8006914:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006918:	f00b fb9a 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800691c:	ee1b 1a10 	vmov	r1, s22
 8006920:	4620      	mov	r0, r4
 8006922:	f008 ff25 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelAS_2.setXY(766, 290);
 8006926:	f44f 7291 	mov.w	r2, #290	; 0x122
 800692a:	ee1b 0a90 	vmov	r0, s23
 800692e:	f240 21fe 	movw	r1, #766	; 0x2fe
 8006932:	f7fc f9d3 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8006936:	4628      	mov	r0, r5
 8006938:	ee1b 1a90 	vmov	r1, s23
        color = newColor;
 800693c:	f8c8 a0fc 	str.w	sl, [r8, #252]	; 0xfc
        linespace = space;
 8006940:	f8a8 7100 	strh.w	r7, [r8, #256]	; 0x100
        boundingArea = calculateBoundingArea();
 8006944:	f00b f8ea 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8006948:	ee1b 1a90 	vmov	r1, s23
 800694c:	f101 093c 	add.w	r9, r1, #60	; 0x3c
 8006950:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
        rotation = textRotation;
 8006954:	f04f 0c01 	mov.w	ip, #1
        boundingArea = calculateBoundingArea();
 8006958:	e889 0007 	stmia.w	r9, {r0, r1, r2}
        boundingArea = calculateBoundingArea();
 800695c:	4628      	mov	r0, r5
 800695e:	ee1b 1a90 	vmov	r1, s23
        rotation = textRotation;
 8006962:	f888 c104 	strb.w	ip, [r8, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 8006966:	f00b f8d9 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800696a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800696e:	4b48      	ldr	r3, [pc, #288]	; (8006a90 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
 8006970:	9341      	str	r3, [sp, #260]	; 0x104
 8006972:	e889 0007 	stmia.w	r9, {r0, r1, r2}
 8006976:	f04f 0c6f 	mov.w	ip, #111	; 0x6f
    labelAS_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_W7WZ));
 800697a:	ee1b 0a90 	vmov	r0, s23
 800697e:	4631      	mov	r1, r6
 8006980:	f8ad c108 	strh.w	ip, [sp, #264]	; 0x108
 8006984:	f00b fb64 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006988:	ee1b 1a90 	vmov	r1, s23
 800698c:	4620      	mov	r0, r4
 800698e:	f008 feef 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtDS.setXY(595, 158);
 8006992:	229e      	movs	r2, #158	; 0x9e
 8006994:	f240 2153 	movw	r1, #595	; 0x253
 8006998:	9805      	ldr	r0, [sp, #20]
 800699a:	f7fc f99f 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800699e:	f8c8 a144 	str.w	sl, [r8, #324]	; 0x144
        linespace = space;
 80069a2:	f8a8 7148 	strh.w	r7, [r8, #328]	; 0x148
        return TextArea::BoundingArea();
 80069a6:	4630      	mov	r0, r6
 80069a8:	f7fc fb34 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 80069ac:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80069b0:	f508 73a8 	add.w	r3, r8, #336	; 0x150
 80069b4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80069b8:	4b36      	ldr	r3, [pc, #216]	; (8006a94 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 80069ba:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtDSBuffer, TXTDS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Q3EN).getText());
 80069bc:	f50b 55ba 	add.w	r5, fp, #5952	; 0x1740
 80069c0:	3508      	adds	r5, #8
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	f43f a87e 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80069c8:	4933      	ldr	r1, [pc, #204]	; (8006a98 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 80069ca:	880b      	ldrh	r3, [r1, #0]
 80069cc:	2b6d      	cmp	r3, #109	; 0x6d
 80069ce:	f67f a883 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 80069d2:	4832      	ldr	r0, [pc, #200]	; (8006a9c <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 80069d4:	216d      	movs	r1, #109	; 0x6d
 80069d6:	6800      	ldr	r0, [r0, #0]
 80069d8:	f001 fbc4 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80069dc:	4a30      	ldr	r2, [pc, #192]	; (8006aa0 <_ZN23MainInfotaimentViewBaseC1Ev+0x1504>)
 80069de:	4603      	mov	r3, r0
 80069e0:	2128      	movs	r1, #40	; 0x28
 80069e2:	4628      	mov	r0, r5
 80069e4:	f011 fbd0 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtDS.resizeToCurrentText();
 80069e8:	9805      	ldr	r0, [sp, #20]
        wc1 = value;
 80069ea:	f8c8 515c 	str.w	r5, [r8, #348]	; 0x15c
 80069ee:	f00b fb0f 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 80069f2:	4d27      	ldr	r5, [pc, #156]	; (8006a90 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f4>)
    txtDS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J40F));
 80069f4:	9805      	ldr	r0, [sp, #20]
 80069f6:	9541      	str	r5, [sp, #260]	; 0x104
 80069f8:	236e      	movs	r3, #110	; 0x6e
 80069fa:	4631      	mov	r1, r6
 80069fc:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006a00:	f00b fb26 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a04:	9905      	ldr	r1, [sp, #20]
 8006a06:	4620      	mov	r0, r4
 8006a08:	f008 feb2 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAS.setXY(595, 202);
 8006a0c:	22ca      	movs	r2, #202	; 0xca
 8006a0e:	f240 2153 	movw	r1, #595	; 0x253
 8006a12:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006a14:	f7fc f962 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a18:	f8c8 a190 	str.w	sl, [r8, #400]	; 0x190
        linespace = space;
 8006a1c:	f8a8 7194 	strh.w	r7, [r8, #404]	; 0x194
        return TextArea::BoundingArea();
 8006a20:	4630      	mov	r0, r6
 8006a22:	f7fc faf7 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006a26:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006a2a:	f508 73ce 	add.w	r3, r8, #412	; 0x19c
 8006a2e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006a32:	4b18      	ldr	r3, [pc, #96]	; (8006a94 <_ZN23MainInfotaimentViewBaseC1Ev+0x14f8>)
 8006a34:	681b      	ldr	r3, [r3, #0]
 8006a36:	2b00      	cmp	r3, #0
 8006a38:	f43f a844 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006a3c:	4916      	ldr	r1, [pc, #88]	; (8006a98 <_ZN23MainInfotaimentViewBaseC1Ev+0x14fc>)
 8006a3e:	880b      	ldrh	r3, [r1, #0]
 8006a40:	2b6b      	cmp	r3, #107	; 0x6b
 8006a42:	f67f a849 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006a46:	4815      	ldr	r0, [pc, #84]	; (8006a9c <_ZN23MainInfotaimentViewBaseC1Ev+0x1500>)
 8006a48:	216b      	movs	r1, #107	; 0x6b
 8006a4a:	6800      	ldr	r0, [r0, #0]
 8006a4c:	f001 fb8a 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006a50:	f8c8 01a8 	str.w	r0, [r8, #424]	; 0x1a8
    txtAS.resizeToCurrentText();
 8006a54:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006a56:	f00b fadb 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006a5a:	236c      	movs	r3, #108	; 0x6c
    txtAS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0J70));
 8006a5c:	4631      	mov	r1, r6
 8006a5e:	981d      	ldr	r0, [sp, #116]	; 0x74
 8006a60:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006a64:	9541      	str	r5, [sp, #260]	; 0x104
 8006a66:	f00b faf3 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006a6a:	991d      	ldr	r1, [sp, #116]	; 0x74
 8006a6c:	4620      	mov	r0, r4
 8006a6e:	f008 fe7f 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtAMI.setXY(595, 247);
 8006a72:	22f7      	movs	r2, #247	; 0xf7
 8006a74:	f240 2153 	movw	r1, #595	; 0x253
 8006a78:	9806      	ldr	r0, [sp, #24]
 8006a7a:	f7fc f92f 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006a7e:	f8c8 a1dc 	str.w	sl, [r8, #476]	; 0x1dc
        linespace = space;
 8006a82:	f8a8 71e0 	strh.w	r7, [r8, #480]	; 0x1e0
        return TextArea::BoundingArea();
 8006a86:	4630      	mov	r0, r6
 8006a88:	e00c      	b.n	8006aa4 <_ZN23MainInfotaimentViewBaseC1Ev+0x1508>
 8006a8a:	bf00      	nop
 8006a8c:	ffffea00 	.word	0xffffea00
 8006a90:	080284b8 	.word	0x080284b8
 8006a94:	2000ef74 	.word	0x2000ef74
 8006a98:	2000ef78 	.word	0x2000ef78
 8006a9c:	2000ef80 	.word	0x2000ef80
 8006aa0:	08028442 	.word	0x08028442
 8006aa4:	f7fc fab6 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006aa8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006aac:	f508 78f4 	add.w	r8, r8, #488	; 0x1e8
 8006ab0:	e888 0007 	stmia.w	r8, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ab4:	48d7      	ldr	r0, [pc, #860]	; (8006e14 <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
 8006ab6:	6803      	ldr	r3, [r0, #0]
    Unicode::snprintf(txtAMIBuffer, TXTAMI_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VLUE).getText());
 8006ab8:	f50b 56bc 	add.w	r6, fp, #6016	; 0x1780
 8006abc:	3618      	adds	r6, #24
 8006abe:	2b00      	cmp	r3, #0
 8006ac0:	f43f a800 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006ac4:	49d4      	ldr	r1, [pc, #848]	; (8006e18 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006ac6:	880b      	ldrh	r3, [r1, #0]
 8006ac8:	2b69      	cmp	r3, #105	; 0x69
 8006aca:	f67f a805 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006ace:	f8df 8358 	ldr.w	r8, [pc, #856]	; 8006e28 <_ZN23MainInfotaimentViewBaseC1Ev+0x188c>
 8006ad2:	2169      	movs	r1, #105	; 0x69
 8006ad4:	f8d8 0000 	ldr.w	r0, [r8]
 8006ad8:	f001 fb44 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006adc:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 8006ae0:	4ace      	ldr	r2, [pc, #824]	; (8006e1c <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006ae2:	4603      	mov	r3, r0
 8006ae4:	2128      	movs	r1, #40	; 0x28
 8006ae6:	4630      	mov	r0, r6
 8006ae8:	f011 fb4e 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtAMI.resizeToCurrentText();
 8006aec:	9806      	ldr	r0, [sp, #24]
 8006aee:	f8c5 61f4 	str.w	r6, [r5, #500]	; 0x1f4
 8006af2:	f00b fa8d 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtAMI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_74WN));
 8006af6:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006af8:	4bc9      	ldr	r3, [pc, #804]	; (8006e20 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
 8006afa:	9806      	ldr	r0, [sp, #24]
 8006afc:	9341      	str	r3, [sp, #260]	; 0x104
 8006afe:	4631      	mov	r1, r6
 8006b00:	236a      	movs	r3, #106	; 0x6a
 8006b02:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006b06:	f00b faa3 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b0a:	9906      	ldr	r1, [sp, #24]
 8006b0c:	4620      	mov	r0, r4
 8006b0e:	f008 fe2f 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtEBS.setXY(595, 293);
 8006b12:	f240 1225 	movw	r2, #293	; 0x125
 8006b16:	f240 2153 	movw	r1, #595	; 0x253
 8006b1a:	9807      	ldr	r0, [sp, #28]
 8006b1c:	f7fc f8de 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8006b20:	f8c5 a228 	str.w	sl, [r5, #552]	; 0x228
        linespace = space;
 8006b24:	f8a5 722c 	strh.w	r7, [r5, #556]	; 0x22c
        return TextArea::BoundingArea();
 8006b28:	4630      	mov	r0, r6
 8006b2a:	f7fc fa73 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006b2e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        linespace = space;
 8006b32:	46b9      	mov	r9, r7
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006b34:	4fb7      	ldr	r7, [pc, #732]	; (8006e14 <_ZN23MainInfotaimentViewBaseC1Ev+0x1878>)
        boundingArea = calculateBoundingArea();
 8006b36:	f505 730d 	add.w	r3, r5, #564	; 0x234
 8006b3a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8006b3e:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtEBSBuffer, TXTEBS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_V415).getText());
 8006b40:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 8006b44:	f10a 0a08 	add.w	sl, sl, #8
 8006b48:	2b00      	cmp	r3, #0
 8006b4a:	f43e afbb 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006b4e:	49b2      	ldr	r1, [pc, #712]	; (8006e18 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006b50:	880b      	ldrh	r3, [r1, #0]
 8006b52:	2b67      	cmp	r3, #103	; 0x67
 8006b54:	f67e afc0 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006b58:	2167      	movs	r1, #103	; 0x67
 8006b5a:	f8d8 0000 	ldr.w	r0, [r8]
 8006b5e:	f001 fb01 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8006b62:	4aae      	ldr	r2, [pc, #696]	; (8006e1c <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006b64:	4603      	mov	r3, r0
 8006b66:	210a      	movs	r1, #10
 8006b68:	4650      	mov	r0, sl
 8006b6a:	f011 fb0d 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtEBS.resizeToCurrentText();
 8006b6e:	9807      	ldr	r0, [sp, #28]
        wc1 = value;
 8006b70:	f8c5 a240 	str.w	sl, [r5, #576]	; 0x240
 8006b74:	f00b fa4c 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 8006b78:	4ba9      	ldr	r3, [pc, #676]	; (8006e20 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtEBS.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HJ17));
 8006b7a:	9807      	ldr	r0, [sp, #28]
 8006b7c:	9341      	str	r3, [sp, #260]	; 0x104
 8006b7e:	4631      	mov	r1, r6
 8006b80:	2368      	movs	r3, #104	; 0x68
 8006b82:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006b86:	f00b fa63 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006b8a:	9907      	ldr	r1, [sp, #28]
 8006b8c:	4620      	mov	r0, r4
 8006b8e:	f008 fdef 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxBattery_V.setPosition(526, 376, 87, 38);
 8006b92:	2026      	movs	r0, #38	; 0x26
 8006b94:	2357      	movs	r3, #87	; 0x57
 8006b96:	9000      	str	r0, [sp, #0]
 8006b98:	f44f 72bc 	mov.w	r2, #376	; 0x178
 8006b9c:	981e      	ldr	r0, [sp, #120]	; 0x78
 8006b9e:	f240 210e 	movw	r1, #526	; 0x20e
 8006ba2:	f7fc f8a8 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006ba6:	4a9f      	ldr	r2, [pc, #636]	; (8006e24 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006ba8:	991e      	ldr	r1, [sp, #120]	; 0x78
 8006baa:	f04f 407f 	mov.w	r0, #4278190080	; 0xff000000
 8006bae:	e9c5 029b 	strd	r0, r2, [r5, #620]	; 0x26c
        borderSize = size;
 8006bb2:	f04f 0005 	mov.w	r0, #5
 8006bb6:	f8a5 0274 	strh.w	r0, [r5, #628]	; 0x274
 8006bba:	4620      	mov	r0, r4
 8006bbc:	f008 fdd8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtBattery_V.setPosition(536, 386, 70, 19);
 8006bc0:	f04f 0c13 	mov.w	ip, #19
 8006bc4:	2346      	movs	r3, #70	; 0x46
 8006bc6:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006bca:	f44f 7106 	mov.w	r1, #536	; 0x218
 8006bce:	980e      	ldr	r0, [sp, #56]	; 0x38
 8006bd0:	f8cd c000 	str.w	ip, [sp]
 8006bd4:	f7fc f88f 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006bd8:	f04f 3cff 	mov.w	ip, #4294967295
 8006bdc:	f8c5 c2a8 	str.w	ip, [r5, #680]	; 0x2a8
        linespace = space;
 8006be0:	f8a5 92ac 	strh.w	r9, [r5, #684]	; 0x2ac
        return TextArea::BoundingArea();
 8006be4:	4630      	mov	r0, r6
 8006be6:	f7fc fa15 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006bea:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006bee:	f505 732d 	add.w	r3, r5, #692	; 0x2b4
 8006bf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006bf6:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtBattery_VBuffer, TXTBATTERY_V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G99E).getText());
 8006bf8:	f50b 5abf 	add.w	sl, fp, #6112	; 0x17e0
 8006bfc:	f10a 0a1c 	add.w	sl, sl, #28
 8006c00:	2b00      	cmp	r3, #0
 8006c02:	f43e af5f 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006c06:	4984      	ldr	r1, [pc, #528]	; (8006e18 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006c08:	880b      	ldrh	r3, [r1, #0]
 8006c0a:	2b64      	cmp	r3, #100	; 0x64
 8006c0c:	f67e af64 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006c10:	2164      	movs	r1, #100	; 0x64
 8006c12:	f8d8 0000 	ldr.w	r0, [r8]
 8006c16:	f001 faa5 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8006c1a:	4a80      	ldr	r2, [pc, #512]	; (8006e1c <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006c1c:	4603      	mov	r3, r0
 8006c1e:	2106      	movs	r1, #6
 8006c20:	4650      	mov	r0, sl
 8006c22:	f011 fab1 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006c26:	4b7e      	ldr	r3, [pc, #504]	; (8006e20 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtBattery_V.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J87C));
 8006c28:	980e      	ldr	r0, [sp, #56]	; 0x38
        wc1 = value;
 8006c2a:	f8c5 a2c0 	str.w	sl, [r5, #704]	; 0x2c0
 8006c2e:	9341      	str	r3, [sp, #260]	; 0x104
 8006c30:	4631      	mov	r1, r6
 8006c32:	2365      	movs	r3, #101	; 0x65
 8006c34:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006c38:	f00b fa0a 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006c3c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8006c3e:	4620      	mov	r0, r4
 8006c40:	f008 fd96 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilPres.setXY(242, 293);
 8006c44:	f240 1225 	movw	r2, #293	; 0x125
 8006c48:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006c4a:	21f2      	movs	r1, #242	; 0xf2
 8006c4c:	f7fc f846 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006c50:	2311      	movs	r3, #17
    imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_OK_ID));
 8006c52:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006c54:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006c58:	4631      	mov	r1, r6
 8006c5a:	f00b fc25 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006c5e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006c60:	4620      	mov	r0, r4
 8006c62:	f008 fd85 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxPFuel.setPosition(150, 253, 90, 38);
 8006c66:	f04f 0c26 	mov.w	ip, #38	; 0x26
 8006c6a:	235a      	movs	r3, #90	; 0x5a
 8006c6c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8006c6e:	f8cd c000 	str.w	ip, [sp]
 8006c72:	22fd      	movs	r2, #253	; 0xfd
 8006c74:	2196      	movs	r1, #150	; 0x96
 8006c76:	f7fc f83e 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006c7a:	4a6a      	ldr	r2, [pc, #424]	; (8006e24 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006c7c:	991f      	ldr	r1, [sp, #124]	; 0x7c
 8006c7e:	f8c5 231c 	str.w	r2, [r5, #796]	; 0x31c
 8006c82:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 8006c86:	f04f 0005 	mov.w	r0, #5
 8006c8a:	f8c5 c318 	str.w	ip, [r5, #792]	; 0x318
 8006c8e:	f8a5 0320 	strh.w	r0, [r5, #800]	; 0x320
 8006c92:	4620      	mov	r0, r4
 8006c94:	f008 fd6c 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtPFuel.setPosition(157, 263, 75, 19);
 8006c98:	f04f 0c13 	mov.w	ip, #19
 8006c9c:	234b      	movs	r3, #75	; 0x4b
 8006c9e:	f240 1207 	movw	r2, #263	; 0x107
 8006ca2:	219d      	movs	r1, #157	; 0x9d
 8006ca4:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006ca6:	f8cd c000 	str.w	ip, [sp]
 8006caa:	f7fc f824 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006cae:	f04f 3cff 	mov.w	ip, #4294967295
 8006cb2:	f8c5 c354 	str.w	ip, [r5, #852]	; 0x354
        linespace = space;
 8006cb6:	f8a5 9358 	strh.w	r9, [r5, #856]	; 0x358
        return TextArea::BoundingArea();
 8006cba:	4630      	mov	r0, r6
 8006cbc:	f7fc f9aa 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006cc0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006cc4:	f50b 539b 	add.w	r3, fp, #4960	; 0x1360
 8006cc8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ccc:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtPFuelBuffer, TXTPFUEL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_B7Z3).getText());
 8006cce:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006cd2:	f10a 0a08 	add.w	sl, sl, #8
 8006cd6:	2b00      	cmp	r3, #0
 8006cd8:	f43e aef4 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006cdc:	494e      	ldr	r1, [pc, #312]	; (8006e18 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006cde:	880b      	ldrh	r3, [r1, #0]
 8006ce0:	2b55      	cmp	r3, #85	; 0x55
 8006ce2:	f67e aef9 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006ce6:	2155      	movs	r1, #85	; 0x55
 8006ce8:	f8d8 0000 	ldr.w	r0, [r8]
 8006cec:	f001 fa3a 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8006cf0:	4a4a      	ldr	r2, [pc, #296]	; (8006e1c <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006cf2:	4603      	mov	r3, r0
 8006cf4:	2106      	movs	r1, #6
 8006cf6:	4650      	mov	r0, sl
 8006cf8:	f011 fa46 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006cfc:	4b48      	ldr	r3, [pc, #288]	; (8006e20 <_ZN23MainInfotaimentViewBaseC1Ev+0x1884>)
    txtPFuel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EUMO));
 8006cfe:	9810      	ldr	r0, [sp, #64]	; 0x40
        wc1 = value;
 8006d00:	f8c5 a36c 	str.w	sl, [r5, #876]	; 0x36c
 8006d04:	9341      	str	r3, [sp, #260]	; 0x104
 8006d06:	4631      	mov	r1, r6
 8006d08:	2356      	movs	r3, #86	; 0x56
 8006d0a:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006d0e:	f00b f99f 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006d12:	9910      	ldr	r1, [sp, #64]	; 0x40
 8006d14:	4620      	mov	r0, r4
 8006d16:	f008 fd2b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgOilTemp.setXY(242, 330);
 8006d1a:	f44f 72a5 	mov.w	r2, #330	; 0x14a
 8006d1e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006d20:	21f2      	movs	r1, #242	; 0xf2
 8006d22:	f7fb ffdb 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006d26:	2314      	movs	r3, #20
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_OK_ID));
 8006d28:	9811      	ldr	r0, [sp, #68]	; 0x44
 8006d2a:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d2e:	4631      	mov	r1, r6
 8006d30:	f00b fbba 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d34:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006d36:	4620      	mov	r0, r4
 8006d38:	f008 fd1a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgWaterTemp.setXY(242, 377);
 8006d3c:	f240 1279 	movw	r2, #377	; 0x179
 8006d40:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006d42:	21f2      	movs	r1, #242	; 0xf2
 8006d44:	f7fb ffca 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006d48:	2319      	movs	r3, #25
    imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8006d4a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8006d4c:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d50:	4631      	mov	r1, r6
 8006d52:	f00b fba9 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d56:	9912      	ldr	r1, [sp, #72]	; 0x48
 8006d58:	4620      	mov	r0, r4
 8006d5a:	f008 fd09 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgTOrin.setXY(246, 415);
 8006d5e:	f240 129f 	movw	r2, #415	; 0x19f
 8006d62:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006d64:	21f6      	movs	r1, #246	; 0xf6
 8006d66:	f7fb ffb9 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006d6a:	2316      	movs	r3, #22
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8006d6c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8006d6e:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006d72:	4631      	mov	r1, r6
 8006d74:	f00b fb98 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006d78:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8006d7a:	4620      	mov	r0, r4
 8006d7c:	f008 fcf8 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    boxTOrin.setPosition(150, 413, 90, 38);
 8006d80:	f04f 0c26 	mov.w	ip, #38	; 0x26
 8006d84:	235a      	movs	r3, #90	; 0x5a
 8006d86:	9820      	ldr	r0, [sp, #128]	; 0x80
 8006d88:	f8cd c000 	str.w	ip, [sp]
 8006d8c:	f240 129d 	movw	r2, #413	; 0x19d
 8006d90:	2196      	movs	r1, #150	; 0x96
 8006d92:	f7fb ffb0 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006d96:	4a23      	ldr	r2, [pc, #140]	; (8006e24 <_ZN23MainInfotaimentViewBaseC1Ev+0x1888>)
 8006d98:	9920      	ldr	r1, [sp, #128]	; 0x80
 8006d9a:	f8c5 2420 	str.w	r2, [r5, #1056]	; 0x420
 8006d9e:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
        borderSize = size;
 8006da2:	f04f 0005 	mov.w	r0, #5
 8006da6:	f8c5 c41c 	str.w	ip, [r5, #1052]	; 0x41c
 8006daa:	f8a5 0424 	strh.w	r0, [r5, #1060]	; 0x424
 8006dae:	4620      	mov	r0, r4
 8006db0:	f008 fcde 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txtTOrin.setPosition(157, 423, 75, 19);
 8006db4:	f04f 0c13 	mov.w	ip, #19
 8006db8:	234b      	movs	r3, #75	; 0x4b
 8006dba:	f240 12a7 	movw	r2, #423	; 0x1a7
 8006dbe:	219d      	movs	r1, #157	; 0x9d
 8006dc0:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006dc2:	f8cd c000 	str.w	ip, [sp]
 8006dc6:	f7fb ff96 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006dca:	f04f 3cff 	mov.w	ip, #4294967295
 8006dce:	f8c5 c458 	str.w	ip, [r5, #1112]	; 0x458
        linespace = space;
 8006dd2:	f8a5 945c 	strh.w	r9, [r5, #1116]	; 0x45c
        return TextArea::BoundingArea();
 8006dd6:	4630      	mov	r0, r6
 8006dd8:	f7fc f91c 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006ddc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006de0:	f205 4364 	addw	r3, r5, #1124	; 0x464
 8006de4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006de8:	683b      	ldr	r3, [r7, #0]
    Unicode::snprintf(txtTOrinBuffer, TXTTORIN_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_IMBT).getText());
 8006dea:	f50b 5ac0 	add.w	sl, fp, #6144	; 0x1800
 8006dee:	f10a 0a14 	add.w	sl, sl, #20
 8006df2:	2b00      	cmp	r3, #0
 8006df4:	f43e ae66 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006df8:	4907      	ldr	r1, [pc, #28]	; (8006e18 <_ZN23MainInfotaimentViewBaseC1Ev+0x187c>)
 8006dfa:	880b      	ldrh	r3, [r1, #0]
 8006dfc:	2b5f      	cmp	r3, #95	; 0x5f
 8006dfe:	f67e ae6b 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006e02:	f8d8 0000 	ldr.w	r0, [r8]
 8006e06:	215f      	movs	r1, #95	; 0x5f
 8006e08:	f001 f9ac 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8006e0c:	4a03      	ldr	r2, [pc, #12]	; (8006e1c <_ZN23MainInfotaimentViewBaseC1Ev+0x1880>)
 8006e0e:	4603      	mov	r3, r0
 8006e10:	2104      	movs	r1, #4
 8006e12:	e00b      	b.n	8006e2c <_ZN23MainInfotaimentViewBaseC1Ev+0x1890>
 8006e14:	2000ef74 	.word	0x2000ef74
 8006e18:	2000ef78 	.word	0x2000ef78
 8006e1c:	08028442 	.word	0x08028442
 8006e20:	080284b8 	.word	0x080284b8
 8006e24:	ffffea00 	.word	0xffffea00
 8006e28:	2000ef80 	.word	0x2000ef80
 8006e2c:	4650      	mov	r0, sl
 8006e2e:	f011 f9ab 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8006e32:	4bc7      	ldr	r3, [pc, #796]	; (8007150 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>)
        wc1 = value;
 8006e34:	f8c5 a470 	str.w	sl, [r5, #1136]	; 0x470
    txtTOrin.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9UXZ));
 8006e38:	4631      	mov	r1, r6
 8006e3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8006e3c:	9341      	str	r3, [sp, #260]	; 0x104
 8006e3e:	2360      	movs	r3, #96	; 0x60
 8006e40:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006e44:	f00b f904 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006e48:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006e4a:	4620      	mov	r0, r4
 8006e4c:	f008 fc90 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    imgBatteryV.setXY(529, 337);
 8006e50:	f240 1251 	movw	r2, #337	; 0x151
 8006e54:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006e56:	f240 2111 	movw	r1, #529	; 0x211
 8006e5a:	f7fb ff3f 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006e5e:	f04f 0807 	mov.w	r8, #7
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006e62:	4631      	mov	r1, r6
 8006e64:	9815      	ldr	r0, [sp, #84]	; 0x54
 8006e66:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006e6a:	f00b fb1d 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e6e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8006e70:	4620      	mov	r0, r4
 8006e72:	f008 fc7d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    img24v.setXY(609, 337);
 8006e76:	f240 1251 	movw	r2, #337	; 0x151
 8006e7a:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006e7c:	f240 2161 	movw	r1, #609	; 0x261
 8006e80:	f7fb ff2c 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_OK_ID));
 8006e84:	4631      	mov	r1, r6
 8006e86:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8006e88:	f8ad 8104 	strh.w	r8, [sp, #260]	; 0x104
 8006e8c:	f00b fb0c 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8006e90:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8006e92:	4620      	mov	r0, r4
 8006e94:	f008 fc6c 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box24v.setPosition(608, 376, 87, 38);
 8006e98:	2326      	movs	r3, #38	; 0x26
 8006e9a:	9821      	ldr	r0, [sp, #132]	; 0x84
 8006e9c:	9300      	str	r3, [sp, #0]
 8006e9e:	f44f 72bc 	mov.w	r2, #376	; 0x178
 8006ea2:	2357      	movs	r3, #87	; 0x57
 8006ea4:	f44f 7118 	mov.w	r1, #608	; 0x260
 8006ea8:	f7fb ff25 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        borderColor = colorBorder;
 8006eac:	4aa9      	ldr	r2, [pc, #676]	; (8007154 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb8>)
 8006eae:	f8c5 24f8 	str.w	r2, [r5, #1272]	; 0x4f8
 8006eb2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        borderSize = size;
 8006eb6:	f04f 0005 	mov.w	r0, #5
 8006eba:	f8c5 34f4 	str.w	r3, [r5, #1268]	; 0x4f4
 8006ebe:	f8a5 04fc 	strh.w	r0, [r5, #1276]	; 0x4fc
 8006ec2:	9921      	ldr	r1, [sp, #132]	; 0x84
 8006ec4:	4620      	mov	r0, r4
 8006ec6:	f008 fc53 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    txt24v.setPosition(616, 386, 70, 19);
 8006eca:	2313      	movs	r3, #19
 8006ecc:	f44f 72c1 	mov.w	r2, #386	; 0x182
 8006ed0:	f44f 711a 	mov.w	r1, #616	; 0x268
 8006ed4:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006ed6:	9300      	str	r3, [sp, #0]
 8006ed8:	2346      	movs	r3, #70	; 0x46
 8006eda:	f7fb ff0c 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006ede:	f04f 33ff 	mov.w	r3, #4294967295
 8006ee2:	f8c5 3530 	str.w	r3, [r5, #1328]	; 0x530
        linespace = space;
 8006ee6:	f8a5 9534 	strh.w	r9, [r5, #1332]	; 0x534
        return TextArea::BoundingArea();
 8006eea:	4630      	mov	r0, r6
 8006eec:	f7fc f892 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006ef0:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8006ef4:	683b      	ldr	r3, [r7, #0]
 8006ef6:	f205 553c 	addw	r5, r5, #1340	; 0x53c
    Unicode::snprintf(txt24vBuffer, TXT24V_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8BB2).getText());
 8006efa:	f50b 56c0 	add.w	r6, fp, #6144	; 0x1800
 8006efe:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8006f02:	361c      	adds	r6, #28
 8006f04:	2b00      	cmp	r3, #0
 8006f06:	f43e addd 	beq.w	8005ac4 <_ZN23MainInfotaimentViewBaseC1Ev+0x528>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8006f0a:	4993      	ldr	r1, [pc, #588]	; (8007158 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bbc>)
 8006f0c:	880b      	ldrh	r3, [r1, #0]
 8006f0e:	2b5d      	cmp	r3, #93	; 0x5d
 8006f10:	f67e ade2 	bls.w	8005ad8 <_ZN23MainInfotaimentViewBaseC1Ev+0x53c>
        return texts->getText(typedTextId);
 8006f14:	4b91      	ldr	r3, [pc, #580]	; (800715c <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc0>)
        : typedTextId(id)
 8006f16:	f8df a238 	ldr.w	sl, [pc, #568]	; 8007150 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bb4>
        return texts->getText(typedTextId);
 8006f1a:	6818      	ldr	r0, [r3, #0]
 8006f1c:	215d      	movs	r1, #93	; 0x5d
 8006f1e:	f001 f921 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
        wc1 = value;
 8006f22:	f50b 5580 	add.w	r5, fp, #4096	; 0x1000
 8006f26:	4a8e      	ldr	r2, [pc, #568]	; (8007160 <_ZN23MainInfotaimentViewBaseC1Ev+0x1bc4>)
 8006f28:	4603      	mov	r3, r0
 8006f2a:	2106      	movs	r1, #6
 8006f2c:	4630      	mov	r0, r6
 8006f2e:	f011 f92b 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 8006f32:	f8c5 6548 	str.w	r6, [r5, #1352]	; 0x548
    txt24v.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JG35));
 8006f36:	ae41      	add	r6, sp, #260	; 0x104
        : typedTextId(id)
 8006f38:	235e      	movs	r3, #94	; 0x5e
 8006f3a:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8006f3c:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006f40:	4631      	mov	r1, r6
 8006f42:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 8006f46:	f00b f883 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006f4a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8006f4c:	4620      	mov	r0, r4
 8006f4e:	f008 fc0f 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setAction(buttonCallback);
 8006f52:	f50b 498f 	add.w	r9, fp, #18304	; 0x4780
    btnNextPage.setXY(735, 415);
 8006f56:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006f58:	f240 129f 	movw	r2, #415	; 0x19f
 8006f5c:	f240 21df 	movw	r1, #735	; 0x2df
 8006f60:	f7fb febc 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setAction(buttonCallback);
 8006f64:	f109 0908 	add.w	r9, r9, #8
 8006f68:	230b      	movs	r3, #11
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 8006f6a:	4632      	mov	r2, r6
 8006f6c:	9816      	ldr	r0, [sp, #88]	; 0x58
 8006f6e:	f8ad 3100 	strh.w	r3, [sp, #256]	; 0x100
 8006f72:	a940      	add	r1, sp, #256	; 0x100
 8006f74:	f8ad 3104 	strh.w	r3, [sp, #260]	; 0x104
 8006f78:	f00b f8c8 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8006f7c:	9916      	ldr	r1, [sp, #88]	; 0x58
 8006f7e:	f8c5 9574 	str.w	r9, [r5, #1396]	; 0x574
 8006f82:	4620      	mov	r0, r4
 8006f84:	f008 fbf4 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    dbgTextArea.setPosition(5, 454, 741, 23);
 8006f88:	2317      	movs	r3, #23
 8006f8a:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8006f8c:	9300      	str	r3, [sp, #0]
 8006f8e:	f44f 72e3 	mov.w	r2, #454	; 0x1c6
 8006f92:	2105      	movs	r1, #5
 8006f94:	f240 23e5 	movw	r3, #741	; 0x2e5
        linespace = space;
 8006f98:	f04f 0800 	mov.w	r8, #0
 8006f9c:	f7fb feab 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8006fa0:	f04f 33ff 	mov.w	r3, #4294967295
 8006fa4:	f8c5 35b0 	str.w	r3, [r5, #1456]	; 0x5b0
        linespace = space;
 8006fa8:	f8a5 85b4 	strh.w	r8, [r5, #1460]	; 0x5b4
        return TextArea::BoundingArea();
 8006fac:	4630      	mov	r0, r6
 8006fae:	f7fc f831 	bl	8003014 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
        boundingArea = calculateBoundingArea();
 8006fb2:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8006fb6:	f205 53bc 	addw	r3, r5, #1468	; 0x5bc
 8006fba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    dbgTextArea.setWildcard(dbgTextAreaBuffer);
 8006fbe:	f50b 53c1 	add.w	r3, fp, #6176	; 0x1820
 8006fc2:	3308      	adds	r3, #8
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006fc4:	9829      	ldr	r0, [sp, #164]	; 0xa4
        wc1 = value;
 8006fc6:	f8c5 35c8 	str.w	r3, [r5, #1480]	; 0x5c8
 8006fca:	4631      	mov	r1, r6
 8006fcc:	2362      	movs	r3, #98	; 0x62
    dbgTextAreaBuffer[0] = 0;
 8006fce:	f8a5 8828 	strh.w	r8, [r5, #2088]	; 0x828
 8006fd2:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8006fd6:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
    dbgTextArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2RY));
 8006fda:	f00b f839 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8006fde:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8006fe0:	4620      	mov	r0, r4
 8006fe2:	f008 fbc5 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(635, 414);
 8006fe6:	ee1c 0a10 	vmov	r0, s24
 8006fea:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 8006fee:	f240 217b 	movw	r1, #635	; 0x27b
 8006ff2:	f7fb fe73 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8006ff6:	af3c      	add	r7, sp, #240	; 0xf0
        color = newColor;
 8006ff8:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 8006ffc:	ee1c 1a10 	vmov	r1, s24
        color = newColor;
 8007000:	f8c5 35fc 	str.w	r3, [r5, #1532]	; 0x5fc
        boundingArea = calculateBoundingArea();
 8007004:	4638      	mov	r0, r7
        linespace = space;
 8007006:	f8a5 8600 	strh.w	r8, [r5, #1536]	; 0x600
        boundingArea = calculateBoundingArea();
 800700a:	f00a fd87 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800700e:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007012:	ee1c 3a10 	vmov	r3, s24
 8007016:	333c      	adds	r3, #60	; 0x3c
 8007018:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800701c:	235c      	movs	r3, #92	; 0x5c
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_J3QN));
 800701e:	ee1c 0a10 	vmov	r0, s24
 8007022:	4631      	mov	r1, r6
 8007024:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 8007028:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 800702c:	f00b f810 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007030:	ee1c 1a10 	vmov	r1, s24
 8007034:	4620      	mov	r0, r4
 8007036:	f008 fb9b 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1_1.setXY(557, 414);
 800703a:	ee1c 0a90 	vmov	r0, s25
 800703e:	f44f 72cf 	mov.w	r2, #414	; 0x19e
 8007042:	f240 212d 	movw	r1, #557	; 0x22d
 8007046:	f7fb fe49 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800704a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800704e:	ee1c 1a90 	vmov	r1, s25
        color = newColor;
 8007052:	f8c5 3644 	str.w	r3, [r5, #1604]	; 0x644
        boundingArea = calculateBoundingArea();
 8007056:	4638      	mov	r0, r7
        linespace = space;
 8007058:	f8a5 8648 	strh.w	r8, [r5, #1608]	; 0x648
        boundingArea = calculateBoundingArea();
 800705c:	f00a fd5e 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007060:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8007064:	ee1c 3a90 	vmov	r3, s25
 8007068:	333c      	adds	r3, #60	; 0x3c
 800706a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800706e:	235b      	movs	r3, #91	; 0x5b
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BU43));
 8007070:	ee1c 0a90 	vmov	r0, s25
 8007074:	4631      	mov	r1, r6
 8007076:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 800707a:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 800707e:	f00a ffe7 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007082:	ee1c 1a90 	vmov	r1, s25
 8007086:	4620      	mov	r0, r4
 8007088:	f008 fb72 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(246, 261);
 800708c:	ee1d 0a10 	vmov	r0, s26
 8007090:	f240 1205 	movw	r2, #261	; 0x105
 8007094:	21f6      	movs	r1, #246	; 0xf6
 8007096:	f7fb fe21 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800709a:	f04f 33ff 	mov.w	r3, #4294967295
        boundingArea = calculateBoundingArea();
 800709e:	ee1d 1a10 	vmov	r1, s26
        color = newColor;
 80070a2:	f8c5 368c 	str.w	r3, [r5, #1676]	; 0x68c
        boundingArea = calculateBoundingArea();
 80070a6:	4638      	mov	r0, r7
        linespace = space;
 80070a8:	f8a5 8690 	strh.w	r8, [r5, #1680]	; 0x690
        boundingArea = calculateBoundingArea();
 80070ac:	f00a fd36 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80070b0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80070b4:	ee1d 3a10 	vmov	r3, s26
 80070b8:	333c      	adds	r3, #60	; 0x3c
 80070ba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 80070be:	2354      	movs	r3, #84	; 0x54
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ONGO));
 80070c0:	ee1d 0a10 	vmov	r0, s26
 80070c4:	4631      	mov	r1, r6
 80070c6:	f8ad 3108 	strh.w	r3, [sp, #264]	; 0x108
 80070ca:	f8cd a104 	str.w	sl, [sp, #260]	; 0x104
 80070ce:	f00a ffbf 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80070d2:	ee1d 1a10 	vmov	r1, s26
 80070d6:	4620      	mov	r0, r4
 80070d8:	f008 fb4a 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver1.setXY(308, 341);
 80070dc:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80070de:	f240 1255 	movw	r2, #341	; 0x155
 80070e2:	f44f 719a 	mov.w	r1, #308	; 0x134
 80070e6:	f7fb fdf9 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80070ea:	2704      	movs	r7, #4
    toDriver1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 80070ec:	4632      	mov	r2, r6
 80070ee:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80070f0:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 80070f4:	a940      	add	r1, sp, #256	; 0x100
 80070f6:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 80070fa:	f00b f807 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80070fe:	9917      	ldr	r1, [sp, #92]	; 0x5c
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8007100:	f885 86d6 	strb.w	r8, [r5, #1750]	; 0x6d6
 8007104:	4620      	mov	r0, r4
 8007106:	f8c5 96cc 	str.w	r9, [r5, #1740]	; 0x6cc
 800710a:	f008 fb31 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    toDriver2.setXY(351, 393);
 800710e:	9818      	ldr	r0, [sp, #96]	; 0x60
 8007110:	f240 1289 	movw	r2, #393	; 0x189
 8007114:	f240 115f 	movw	r1, #351	; 0x15f
 8007118:	f7fb fde0 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    toDriver2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_TINY_ROUNDED_DISABLED_ID));
 800711c:	9818      	ldr	r0, [sp, #96]	; 0x60
 800711e:	f8ad 7100 	strh.w	r7, [sp, #256]	; 0x100
 8007122:	4632      	mov	r2, r6
 8007124:	a940      	add	r1, sp, #256	; 0x100
 8007126:	f8ad 7104 	strh.w	r7, [sp, #260]	; 0x104
 800712a:	f00a ffef 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800712e:	4620      	mov	r0, r4
 8007130:	9918      	ldr	r1, [sp, #96]	; 0x60
 8007132:	f885 870a 	strb.w	r8, [r5, #1802]	; 0x70a
        visible = vis;
 8007136:	f885 86fd 	strb.w	r8, [r5, #1789]	; 0x6fd
 800713a:	f8c5 9700 	str.w	r9, [r5, #1792]	; 0x700
 800713e:	f008 fb17 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007142:	4658      	mov	r0, fp
 8007144:	b045      	add	sp, #276	; 0x114
 8007146:	ecbd 8b10 	vpop	{d8-d15}
 800714a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800714e:	bf00      	nop
 8007150:	080284b8 	.word	0x080284b8
 8007154:	ffffea00 	.word	0xffffea00
 8007158:	2000ef78 	.word	0x2000ef78
 800715c:	2000ef80 	.word	0x2000ef80
 8007160:	08028442 	.word	0x08028442

08007164 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8007164:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8007166:	4770      	bx	lr

08007168 <_ZN21MissionSelectViewBase21onChassisResetClickedEv>:
     * Virtual Action Handlers
     */
    virtual void onChassisResetClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007168:	4770      	bx	lr

0800716a <_ZN21MissionSelectViewBase16onIdleBtnClickedEv>:
    virtual void onIdleBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800716a:	4770      	bx	lr

0800716c <_ZN21MissionSelectViewBase24onAccelerationBtnClickedEv>:
    virtual void onAccelerationBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800716c:	4770      	bx	lr

0800716e <_ZN21MissionSelectViewBase19onSkidpadBtnClickedEv>:
    virtual void onSkidpadBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800716e:	4770      	bx	lr

08007170 <_ZN21MissionSelectViewBase21onAutocrossBtnClickedEv>:
    virtual void onAutocrossBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007170:	4770      	bx	lr

08007172 <_ZN21MissionSelectViewBase22onTrackdriveBtnClickedEv>:
    virtual void onTrackdriveBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007172:	4770      	bx	lr

08007174 <_ZN21MissionSelectViewBase19onEbsTestBtnClickedEv>:
    virtual void onEbsTestBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007174:	4770      	bx	lr

08007176 <_ZN21MissionSelectViewBase22onInspectionBtnClickedEv>:
    virtual void onInspectionBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007176:	4770      	bx	lr

08007178 <_ZN21MissionSelectViewBase18onManualBtnClickedEv>:
    virtual void onManualBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 8007178:	4770      	bx	lr

0800717a <_ZN21MissionSelectViewBase17onDebugBtnClickedEv>:
    virtual void onDebugBtnClicked()
    {
        // Override and implement this function in MissionSelect
    }
 800717a:	4770      	bx	lr

0800717c <_ZN21MissionSelectViewBaseD1Ev>:
}

MissionSelectViewBase::~MissionSelectViewBase()
{

}
 800717c:	4770      	bx	lr

0800717e <_ZN21MissionSelectViewBase11setupScreenEv>:

void MissionSelectViewBase::setupScreen()
{

}
 800717e:	4770      	bx	lr

08007180 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8007180:	4770      	bx	lr

08007182 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8007182:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8007186:	b14b      	cbz	r3, 800719c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8007188:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 800718c:	6812      	ldr	r2, [r2, #0]
 800718e:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8007190:	b13b      	cbz	r3, 80071a2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8007192:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8007196:	681b      	ldr	r3, [r3, #0]
        borderColor = colorBorder;
 8007198:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 800719a:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 800719c:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80071a0:	e7f4      	b.n	800718c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80071a2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80071a6:	e7f6      	b.n	8007196 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080071a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    TextArea text;           ///< The text
    colortype colorReleased; ///< The color released
    colortype colorPressed;  ///< The color pressed

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 80071a8:	b508      	push	{r3, lr}
    {
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 80071aa:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80071ae:	b13b      	cbz	r3, 80071c0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x18>
 80071b0:	f100 03c4 	add.w	r3, r0, #196	; 0xc4
 80071b4:	681b      	ldr	r3, [r3, #0]
        color = newColor;
 80071b6:	f8c0 30a8 	str.w	r3, [r0, #168]	; 0xa8
        T::handlePressedUpdated();
 80071ba:	f7ff ffe2 	bl	8007182 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 80071be:	bd08      	pop	{r3, pc}
        text.setColor(T::getPressed() ? colorPressed : colorReleased);
 80071c0:	f100 03c0 	add.w	r3, r0, #192	; 0xc0
 80071c4:	e7f6      	b.n	80071b4 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0xc>

080071c6 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80071c6:	4770      	bx	lr

080071c8 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80071c8:	4770      	bx	lr

080071ca <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
class TextButtonStyle : public T
 80071ca:	4770      	bx	lr

080071cc <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80071cc:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071ce:	68c2      	ldr	r2, [r0, #12]
 80071d0:	6844      	ldr	r4, [r0, #4]
 80071d2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80071d4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80071d6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80071da:	07d2      	lsls	r2, r2, #31
 80071dc:	bf48      	it	mi
 80071de:	5962      	ldrmi	r2, [r4, r5]
 80071e0:	689b      	ldr	r3, [r3, #8]
    }
 80071e2:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80071e4:	bf48      	it	mi
 80071e6:	58d3      	ldrmi	r3, [r2, r3]
 80071e8:	4718      	bx	r3

080071ea <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80071ea:	6843      	ldr	r3, [r0, #4]
 80071ec:	b12b      	cbz	r3, 80071fa <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 80071ee:	6883      	ldr	r3, [r0, #8]
 80071f0:	b92b      	cbnz	r3, 80071fe <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 80071f2:	68c0      	ldr	r0, [r0, #12]
 80071f4:	f000 0001 	and.w	r0, r0, #1
 80071f8:	4770      	bx	lr
 80071fa:	4618      	mov	r0, r3
 80071fc:	4770      	bx	lr
 80071fe:	2001      	movs	r0, #1
    }
 8007200:	4770      	bx	lr

08007202 <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8007202:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8007204:	68c2      	ldr	r2, [r0, #12]
 8007206:	6844      	ldr	r4, [r0, #4]
 8007208:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800720a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800720c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8007210:	07d2      	lsls	r2, r2, #31
 8007212:	bf48      	it	mi
 8007214:	5962      	ldrmi	r2, [r4, r5]
 8007216:	689b      	ldr	r3, [r3, #8]
    }
 8007218:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800721a:	bf48      	it	mi
 800721c:	58d3      	ldrmi	r3, [r2, r3]
 800721e:	4718      	bx	r3

08007220 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8007220:	6843      	ldr	r3, [r0, #4]
 8007222:	b12b      	cbz	r3, 8007230 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8007224:	6883      	ldr	r3, [r0, #8]
 8007226:	b92b      	cbnz	r3, 8007234 <_ZNK8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8007228:	68c0      	ldr	r0, [r0, #12]
 800722a:	f000 0001 	and.w	r0, r0, #1
 800722e:	4770      	bx	lr
 8007230:	4618      	mov	r0, r3
 8007232:	4770      	bx	lr
 8007234:	2001      	movs	r0, #1
    }
 8007236:	4770      	bx	lr

08007238 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8007238:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
        alpha = newAlpha;
 800723c:	f880 30ae 	strb.w	r3, [r0, #174]	; 0xae
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8007240:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        text.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8007244:	4770      	bx	lr

08007246 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8007246:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 800724a:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 800724e:	4770      	bx	lr

08007250 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8007250:	b510      	push	{r4, lr}
 8007252:	2178      	movs	r1, #120	; 0x78
 8007254:	4604      	mov	r4, r0
 8007256:	f01f f9bb 	bl	80265d0 <_ZdlPvj>
 800725a:	4620      	mov	r0, r4
 800725c:	bd10      	pop	{r4, pc}

0800725e <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class TextButtonStyle : public T
 800725e:	b510      	push	{r4, lr}
 8007260:	21c8      	movs	r1, #200	; 0xc8
 8007262:	4604      	mov	r4, r0
 8007264:	f01f f9b4 	bl	80265d0 <_ZdlPvj>
 8007268:	4620      	mov	r0, r4
 800726a:	bd10      	pop	{r4, pc}

0800726c <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800726c:	b510      	push	{r4, lr}
 800726e:	2110      	movs	r1, #16
 8007270:	4604      	mov	r4, r0
 8007272:	f01f f9ad 	bl	80265d0 <_ZdlPvj>
 8007276:	4620      	mov	r0, r4
 8007278:	bd10      	pop	{r4, pc}

0800727a <_ZN8touchgfx8CallbackI21MissionSelectViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800727a:	b510      	push	{r4, lr}
 800727c:	2110      	movs	r1, #16
 800727e:	4604      	mov	r4, r0
 8007280:	f01f f9a6 	bl	80265d0 <_ZdlPvj>
 8007284:	4620      	mov	r0, r4
 8007286:	bd10      	pop	{r4, pc}

08007288 <_ZN21MissionSelectViewBaseD0Ev>:
MissionSelectViewBase::~MissionSelectViewBase()
 8007288:	b510      	push	{r4, lr}
}
 800728a:	f240 418c 	movw	r1, #1164	; 0x48c
MissionSelectViewBase::~MissionSelectViewBase()
 800728e:	4604      	mov	r4, r0
}
 8007290:	f01f f99e 	bl	80265d0 <_ZdlPvj>
 8007294:	4620      	mov	r0, r4
 8007296:	bd10      	pop	{r4, pc}

08007298 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MissionSelectViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8007298:	b538      	push	{r3, r4, r5, lr}
    if (&src == &btnNextPage)
 800729a:	f100 036c 	add.w	r3, r0, #108	; 0x6c
 800729e:	4299      	cmp	r1, r3
{
 80072a0:	4604      	mov	r4, r0
 80072a2:	460d      	mov	r5, r1
    if (&src == &btnNextPage)
 80072a4:	d103      	bne.n	80072ae <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80072a6:	f00d fdff 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //fromMissionSelectToCompetitionScreen
        //When btnNextPage clicked change screen to CompetitionScreen
        //Go to CompetitionScreen with screen transition towards East
        application().gotoCompetitionScreenScreenSlideTransitionEast();
 80072aa:	f7fd fa9f 	bl	80047ec <_ZN23FrontendApplicationBase46gotoCompetitionScreenScreenSlideTransitionEastEv>
    }
    if (&src == &idleBtn)
 80072ae:	f504 73f2 	add.w	r3, r4, #484	; 0x1e4
 80072b2:	429d      	cmp	r5, r3
 80072b4:	d103      	bne.n	80072be <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
    {
        //IdleMission
        //When idleBtn clicked call virtual function
        //Call onIdleBtnClicked
        onIdleBtnClicked();
 80072b6:	6823      	ldr	r3, [r4, #0]
 80072b8:	4620      	mov	r0, r4
 80072ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80072bc:	4798      	blx	r3
    }
    if (&src == &accelerationBtn)
 80072be:	f504 7365 	add.w	r3, r4, #916	; 0x394
 80072c2:	429d      	cmp	r5, r3
 80072c4:	d103      	bne.n	80072ce <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x36>
    {
        //AccelerationMission
        //When accelerationBtn clicked call virtual function
        //Call onAccelerationBtnClicked
        onAccelerationBtnClicked();
 80072c6:	6823      	ldr	r3, [r4, #0]
 80072c8:	4620      	mov	r0, r4
 80072ca:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80072cc:	4798      	blx	r3
    }
    if (&src == &skidpadBtn)
 80072ce:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 80072d2:	429d      	cmp	r5, r3
 80072d4:	d103      	bne.n	80072de <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x46>
    {
        //SkidpadMission
        //When skidpadBtn clicked call virtual function
        //Call onSkidpadBtnClicked
        onSkidpadBtnClicked();
 80072d6:	6823      	ldr	r3, [r4, #0]
 80072d8:	4620      	mov	r0, r4
 80072da:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80072dc:	4798      	blx	r3
    }
    if (&src == &autocrossBtn)
 80072de:	f204 4324 	addw	r3, r4, #1060	; 0x424
 80072e2:	429d      	cmp	r5, r3
 80072e4:	d103      	bne.n	80072ee <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
    {
        //AutocrossMission
        //When autocrossBtn clicked call virtual function
        //Call onAutocrossBtnClicked
        onAutocrossBtnClicked();
 80072e6:	6823      	ldr	r3, [r4, #0]
 80072e8:	4620      	mov	r0, r4
 80072ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80072ec:	4798      	blx	r3
    }
    if (&src == &trackdriveBtn)
 80072ee:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 80072f2:	429d      	cmp	r5, r3
 80072f4:	d103      	bne.n	80072fe <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x66>
    {
        //TrackdriveMission
        //When trackdriveBtn clicked call virtual function
        //Call onTrackdriveBtnClicked
        onTrackdriveBtnClicked();
 80072f6:	6823      	ldr	r3, [r4, #0]
 80072f8:	4620      	mov	r0, r4
 80072fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80072fc:	4798      	blx	r3
    }
    if (&src == &ebsTestBtn)
 80072fe:	f504 731d 	add.w	r3, r4, #628	; 0x274
 8007302:	429d      	cmp	r5, r3
 8007304:	d103      	bne.n	800730e <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x76>
    {
        //EbtTestMission
        //When ebsTestBtn clicked call virtual function
        //Call onEbsTestBtnClicked
        onEbsTestBtnClicked();
 8007306:	6823      	ldr	r3, [r4, #0]
 8007308:	4620      	mov	r0, r4
 800730a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800730c:	4798      	blx	r3
    }
    if (&src == &inspectionBtn)
 800730e:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 8007312:	429d      	cmp	r5, r3
 8007314:	d103      	bne.n	800731e <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x86>
    {
        //InspectionMission
        //When inspectionBtn clicked call virtual function
        //Call onInspectionBtnClicked
        onInspectionBtnClicked();
 8007316:	6823      	ldr	r3, [r4, #0]
 8007318:	4620      	mov	r0, r4
 800731a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800731c:	4798      	blx	r3
    }
    if (&src == &manualBtn)
 800731e:	f504 7341 	add.w	r3, r4, #772	; 0x304
 8007322:	429d      	cmp	r5, r3
 8007324:	d103      	bne.n	800732e <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x96>
    {
        //ManualMission
        //When manualBtn clicked call virtual function
        //Call onManualBtnClicked
        onManualBtnClicked();
 8007326:	6823      	ldr	r3, [r4, #0]
 8007328:	4620      	mov	r0, r4
 800732a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800732c:	4798      	blx	r3
    }
    if (&src == &debugBtn)
 800732e:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 8007332:	429d      	cmp	r5, r3
 8007334:	d103      	bne.n	800733e <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xa6>
    {
        //DebugMission
        //When debugBtn clicked call virtual function
        //Call onDebugBtnClicked
        onDebugBtnClicked();
 8007336:	6823      	ldr	r3, [r4, #0]
 8007338:	4620      	mov	r0, r4
 800733a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800733c:	4798      	blx	r3
    }
    if (&src == &btnPrevPage)
 800733e:	34a0      	adds	r4, #160	; 0xa0
 8007340:	42a5      	cmp	r5, r4
 8007342:	d105      	bne.n	8007350 <_ZN21MissionSelectViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0xb8>
 8007344:	f00d fdb0 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
        //fromMissionSelectToMainInfotaiment
        //When btnPrevPage clicked change screen to MainInfotaiment
        //Go to MainInfotaiment with screen transition towards West
        application().gotoMainInfotaimentScreenSlideTransitionWest();
    }
}
 8007348:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoMainInfotaimentScreenSlideTransitionWest();
 800734c:	f7fd ba0e 	b.w	800476c <_ZN23FrontendApplicationBase44gotoMainInfotaimentScreenSlideTransitionWestEv>
}
 8007350:	bd38      	pop	{r3, r4, r5, pc}

08007352 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8007352:	b510      	push	{r4, lr}
 8007354:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8007356:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8007358:	b150      	cbz	r0, 8007370 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 800735a:	6803      	ldr	r3, [r0, #0]
 800735c:	68db      	ldr	r3, [r3, #12]
 800735e:	4798      	blx	r3
 8007360:	b130      	cbz	r0, 8007370 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8007362:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007364:	6803      	ldr	r3, [r0, #0]
 8007366:	4621      	mov	r1, r4
 8007368:	689b      	ldr	r3, [r3, #8]
        }
    }
 800736a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 800736e:	4718      	bx	r3
    }
 8007370:	bd10      	pop	{r4, pc}

08007372 <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MissionSelectViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &chassisResetBtn)
 8007372:	f500 728e 	add.w	r2, r0, #284	; 0x11c
 8007376:	428a      	cmp	r2, r1
 8007378:	d102      	bne.n	8007380 <_ZN21MissionSelectViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ChassisReset
        //When chassisResetBtn clicked call virtual function
        //Call onChassisResetClicked
        onChassisResetClicked();
 800737a:	6803      	ldr	r3, [r0, #0]
 800737c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800737e:	4718      	bx	r3
    }
}
 8007380:	4770      	bx	lr

08007382 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8007382:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8007384:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8007386:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 800738a:	4604      	mov	r4, r0
 800738c:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800738e:	b99b      	cbnz	r3, 80073b8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8007390:	b98e      	cbnz	r6, 80073b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8007392:	fab3 f383 	clz	r3, r3
 8007396:	095b      	lsrs	r3, r3, #5
 8007398:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 800739c:	6823      	ldr	r3, [r4, #0]
 800739e:	4620      	mov	r0, r4
 80073a0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80073a4:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 80073a6:	6823      	ldr	r3, [r4, #0]
 80073a8:	4620      	mov	r0, r4
 80073aa:	695b      	ldr	r3, [r3, #20]
 80073ac:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 80073ae:	b116      	cbz	r6, 80073b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80073b0:	792b      	ldrb	r3, [r5, #4]
 80073b2:	2b01      	cmp	r3, #1
 80073b4:	d003      	beq.n	80073be <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 80073b6:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 80073b8:	2e00      	cmp	r6, #0
 80073ba:	d0fc      	beq.n	80073b6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 80073bc:	e7e9      	b.n	8007392 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 80073be:	6823      	ldr	r3, [r4, #0]
 80073c0:	4620      	mov	r0, r4
 80073c2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 80073c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 80073ca:	4718      	bx	r3

080073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>:
    void setWidthHeight(int16_t width, int16_t height)
 80073cc:	b570      	push	{r4, r5, r6, lr}
        setWidth(width);
 80073ce:	6803      	ldr	r3, [r0, #0]
    void setWidthHeight(int16_t width, int16_t height)
 80073d0:	4604      	mov	r4, r0
        setWidth(width);
 80073d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    void setWidthHeight(int16_t width, int16_t height)
 80073d4:	4615      	mov	r5, r2
        setWidth(width);
 80073d6:	4798      	blx	r3
        setHeight(height);
 80073d8:	6823      	ldr	r3, [r4, #0]
 80073da:	4629      	mov	r1, r5
 80073dc:	4620      	mov	r0, r4
 80073de:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 80073e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 80073e4:	4718      	bx	r3
	...

080073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 80073e8:	4b1a      	ldr	r3, [pc, #104]	; (8007454 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 80073ea:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 80073ec:	881b      	ldrh	r3, [r3, #0]
 80073ee:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80073f0:	428b      	cmp	r3, r1
    void updateTextPosition()
 80073f2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 80073f4:	d92a      	bls.n	800744c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80073f6:	4b18      	ldr	r3, [pc, #96]	; (8007458 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 80073f8:	681b      	ldr	r3, [r3, #0]
 80073fa:	b92b      	cbnz	r3, 8007408 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 80073fc:	4b17      	ldr	r3, [pc, #92]	; (800745c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 80073fe:	4a18      	ldr	r2, [pc, #96]	; (8007460 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8007400:	4818      	ldr	r0, [pc, #96]	; (8007464 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8007402:	216c      	movs	r1, #108	; 0x6c
 8007404:	f01f f912 	bl	802662c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8007408:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800740c:	4b16      	ldr	r3, [pc, #88]	; (8007468 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8007414:	4b15      	ldr	r3, [pc, #84]	; (800746c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8007416:	6818      	ldr	r0, [r3, #0]
 8007418:	f000 fea4 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800741c:	682b      	ldr	r3, [r5, #0]
 800741e:	9001      	str	r0, [sp, #4]
 8007420:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007422:	4628      	mov	r0, r5
 8007424:	4798      	blx	r3
 8007426:	682b      	ldr	r3, [r5, #0]
 8007428:	9901      	ldr	r1, [sp, #4]
 800742a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800742c:	4604      	mov	r4, r0
 800742e:	4628      	mov	r0, r5
 8007430:	4798      	blx	r3
 8007432:	682b      	ldr	r3, [r5, #0]
 8007434:	9901      	ldr	r1, [sp, #4]
 8007436:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007438:	fb14 f400 	smulbb	r4, r4, r0
 800743c:	4628      	mov	r0, r5
 800743e:	4798      	blx	r3
 8007440:	b2a4      	uxth	r4, r4
 8007442:	4404      	add	r4, r0
 8007444:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8007448:	b002      	add	sp, #8
 800744a:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 800744c:	2300      	movs	r3, #0
 800744e:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 8007452:	e7f9      	b.n	8007448 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8007454:	2000ef78 	.word	0x2000ef78
 8007458:	2000ef74 	.word	0x2000ef74
 800745c:	08028308 	.word	0x08028308
 8007460:	0802834a 	.word	0x0802834a
 8007464:	08028385 	.word	0x08028385
 8007468:	2000ef7c 	.word	0x2000ef7c
 800746c:	2000ef80 	.word	0x2000ef80

08007470 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8007470:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    TextButtonStyle()
 8007474:	b570      	push	{r4, r5, r6, lr}
        : T(), up(), down()
 8007476:	4606      	mov	r6, r0
 8007478:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 800747a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 800747e:	2500      	movs	r5, #0
 8007480:	8483      	strh	r3, [r0, #36]	; 0x24
 8007482:	4b19      	ldr	r3, [pc, #100]	; (80074e8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x78>)
 8007484:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8007486:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800748a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 800748e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8007492:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8007496:	6305      	str	r5, [r0, #48]	; 0x30
 8007498:	f846 3b34 	str.w	r3, [r6], #52
 800749c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 800749e:	4630      	mov	r0, r6
 80074a0:	f7fb fda4 	bl	8002fec <_ZN8touchgfx3BoxC1Ev>
 80074a4:	4b11      	ldr	r3, [pc, #68]	; (80074ec <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x7c>)
 80074a6:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 80074a8:	462a      	mov	r2, r5
 80074aa:	4629      	mov	r1, r5
 80074ac:	4630      	mov	r0, r6
        : color(0)
 80074ae:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80074b2:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 80074b6:	6625      	str	r5, [r4, #96]	; 0x60
 80074b8:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80074bc:	f7fb fc0e 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 80074c0:	4631      	mov	r1, r6
 80074c2:	4620      	mov	r0, r4
        : T()
 80074c4:	4626      	mov	r6, r4
 80074c6:	f008 f953 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80074ca:	4b09      	ldr	r3, [pc, #36]	; (80074f0 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x80>)
 80074cc:	f846 3b78 	str.w	r3, [r6], #120
 80074d0:	4630      	mov	r0, r6
 80074d2:	f7fb fda7 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
        T::add(text);
 80074d6:	4620      	mov	r0, r4
        : color(0)
 80074d8:	e9c4 5530 	strd	r5, r5, [r4, #192]	; 0xc0
 80074dc:	4631      	mov	r1, r6
 80074de:	f008 f947 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80074e2:	4620      	mov	r0, r4
 80074e4:	bd70      	pop	{r4, r5, r6, pc}
 80074e6:	bf00      	nop
 80074e8:	08029560 	.word	0x08029560
 80074ec:	0802a474 	.word	0x0802a474
 80074f0:	080295fc 	.word	0x080295fc

080074f4 <_ZN21MissionSelectViewBaseC1Ev>:
MissionSelectViewBase::MissionSelectViewBase() :
 80074f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074f8:	ed2d 8b08 	vpush	{d8-d11}
 80074fc:	4604      	mov	r4, r0
 80074fe:	b08b      	sub	sp, #44	; 0x2c
    flexButtonCallback(this, &MissionSelectViewBase::flexButtonCallbackHandler)
 8007500:	4627      	mov	r7, r4
 8007502:	f04f 0800 	mov.w	r8, #0
 8007506:	f00f f94f 	bl	80167a8 <_ZN8touchgfx6ScreenC1Ev>
 800750a:	4be9      	ldr	r3, [pc, #932]	; (80078b0 <_ZN21MissionSelectViewBaseC1Ev+0x3bc>)
 800750c:	f8c4 803c 	str.w	r8, [r4, #60]	; 0x3c
 8007510:	f847 3b40 	str.w	r3, [r7], #64
 8007514:	4638      	mov	r0, r7
 8007516:	f7fb fd69 	bl	8002fec <_ZN8touchgfx3BoxC1Ev>
 800751a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800751e:	4618      	mov	r0, r3
 8007520:	f104 05a0 	add.w	r5, r4, #160	; 0xa0
 8007524:	9301      	str	r3, [sp, #4]
 8007526:	f104 0bd4 	add.w	fp, r4, #212	; 0xd4
 800752a:	f7fb fc09 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 800752e:	4628      	mov	r0, r5
 8007530:	f504 798e 	add.w	r9, r4, #284	; 0x11c
 8007534:	f7fb fc04 	bl	8002d40 <_ZN8touchgfx6ButtonC1Ev>
 8007538:	4658      	mov	r0, fp
 800753a:	f7fb fd73 	bl	8003024 <_ZN8touchgfx8TextAreaC1Ev>
 800753e:	f504 7af2 	add.w	sl, r4, #484	; 0x1e4
 8007542:	4648      	mov	r0, r9
 8007544:	f7ff ff94 	bl	8007470 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8007548:	4650      	mov	r0, sl
 800754a:	f00b f8e5 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800754e:	f504 730b 	add.w	r3, r4, #556	; 0x22c
 8007552:	4618      	mov	r0, r3
 8007554:	ee08 3a10 	vmov	s16, r3
 8007558:	f00b f8de 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800755c:	f504 731d 	add.w	r3, r4, #628	; 0x274
 8007560:	4618      	mov	r0, r3
 8007562:	ee08 3a90 	vmov	s17, r3
 8007566:	f00b f8d7 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800756a:	f504 732f 	add.w	r3, r4, #700	; 0x2bc
 800756e:	4618      	mov	r0, r3
 8007570:	ee09 3a10 	vmov	s18, r3
 8007574:	f00b f8d0 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007578:	f504 7341 	add.w	r3, r4, #772	; 0x304
 800757c:	4618      	mov	r0, r3
 800757e:	ee09 3a90 	vmov	s19, r3
 8007582:	f00b f8c9 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007586:	f504 7353 	add.w	r3, r4, #844	; 0x34c
 800758a:	4618      	mov	r0, r3
 800758c:	ee0a 3a10 	vmov	s20, r3
 8007590:	f00b f8c2 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8007594:	f504 7365 	add.w	r3, r4, #916	; 0x394
 8007598:	4618      	mov	r0, r3
 800759a:	ee0a 3a90 	vmov	s21, r3
 800759e:	f00b f8bb 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075a2:	f504 7377 	add.w	r3, r4, #988	; 0x3dc
 80075a6:	4618      	mov	r0, r3
 80075a8:	ee0b 3a10 	vmov	s22, r3
 80075ac:	f00b f8b4 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 80075b0:	f204 4324 	addw	r3, r4, #1060	; 0x424
 80075b4:	4618      	mov	r0, r3
 80075b6:	ee0b 3a90 	vmov	s23, r3
 80075ba:	f00b f8ad 	bl	8012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 80075be:	4abd      	ldr	r2, [pc, #756]	; (80078b4 <_ZN21MissionSelectViewBaseC1Ev+0x3c0>)
 80075c0:	f8c4 246c 	str.w	r2, [r4, #1132]	; 0x46c
 80075c4:	4abc      	ldr	r2, [pc, #752]	; (80078b8 <_ZN21MissionSelectViewBaseC1Ev+0x3c4>)
 80075c6:	f8c4 2474 	str.w	r2, [r4, #1140]	; 0x474
 80075ca:	4abc      	ldr	r2, [pc, #752]	; (80078bc <_ZN21MissionSelectViewBaseC1Ev+0x3c8>)
 80075cc:	f8c4 247c 	str.w	r2, [r4, #1148]	; 0x47c
 80075d0:	4abb      	ldr	r2, [pc, #748]	; (80078c0 <_ZN21MissionSelectViewBaseC1Ev+0x3cc>)
 80075d2:	f8c4 8478 	str.w	r8, [r4, #1144]	; 0x478
 80075d6:	f8c4 2484 	str.w	r2, [r4, #1156]	; 0x484
 80075da:	f8c4 8488 	str.w	r8, [r4, #1160]	; 0x488
        setXY(x, y);
 80075de:	4642      	mov	r2, r8
 80075e0:	4641      	mov	r1, r8
 80075e2:	4638      	mov	r0, r7
 80075e4:	f8c4 4470 	str.w	r4, [r4, #1136]	; 0x470
 80075e8:	f8c4 4480 	str.w	r4, [r4, #1152]	; 0x480
 80075ec:	f7fb fb76 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80075f0:	4638      	mov	r0, r7
 80075f2:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 80075f6:	f44f 7148 	mov.w	r1, #800	; 0x320
 80075fa:	1d26      	adds	r6, r4, #4
 80075fc:	f7ff fee6 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
        color = newColor;
 8007600:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
 8007604:	66a2      	str	r2, [r4, #104]	; 0x68
 8007606:	4639      	mov	r1, r7
 8007608:	4630      	mov	r0, r6
 800760a:	f008 f8b1 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnNextPage.setXY(735, 415);
 800760e:	9b01      	ldr	r3, [sp, #4]
 8007610:	f240 129f 	movw	r2, #415	; 0x19f
 8007614:	4618      	mov	r0, r3
 8007616:	f240 21df 	movw	r1, #735	; 0x2df
 800761a:	f7fb fb5f 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    btnNextPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_NEXT_ID), touchgfx::Bitmap(BITMAP_BTN_NEXT_ID));
 800761e:	9b01      	ldr	r3, [sp, #4]
 8007620:	220b      	movs	r2, #11
 8007622:	f8ad 201c 	strh.w	r2, [sp, #28]
 8007626:	f8ad 2020 	strh.w	r2, [sp, #32]
 800762a:	a907      	add	r1, sp, #28
 800762c:	aa08      	add	r2, sp, #32
 800762e:	4618      	mov	r0, r3
 8007630:	f00a fd6c 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007634:	9b01      	ldr	r3, [sp, #4]
    btnNextPage.setAction(buttonCallback);
 8007636:	f204 476c 	addw	r7, r4, #1132	; 0x46c
 800763a:	4619      	mov	r1, r3
 800763c:	4630      	mov	r0, r6
 800763e:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
 8007642:	f008 f895 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    btnPrevPage.setXY(17, 415);
 8007646:	4628      	mov	r0, r5
 8007648:	f240 129f 	movw	r2, #415	; 0x19f
 800764c:	2111      	movs	r1, #17
 800764e:	f7fb fb45 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8007652:	230c      	movs	r3, #12
    btnPrevPage.setBitmaps(touchgfx::Bitmap(BITMAP_BTN_PREV_ID), touchgfx::Bitmap(BITMAP_BTN_PREV_ID));
 8007654:	aa08      	add	r2, sp, #32
 8007656:	a907      	add	r1, sp, #28
 8007658:	4628      	mov	r0, r5
 800765a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800765e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8007662:	f00a fd53 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007666:	4629      	mov	r1, r5
 8007668:	4630      	mov	r0, r6
 800766a:	f8c4 70c8 	str.w	r7, [r4, #200]	; 0xc8
        color = newColor;
 800766e:	f04f 35ff 	mov.w	r5, #4294967295
 8007672:	f008 f87d 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    labelSelectMission.setXY(258, 17);
 8007676:	2211      	movs	r2, #17
 8007678:	4658      	mov	r0, fp
 800767a:	f44f 7181 	mov.w	r1, #258	; 0x102
 800767e:	f7fb fb2d 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8007682:	f8a4 8108 	strh.w	r8, [r4, #264]	; 0x108
        boundingArea = calculateBoundingArea();
 8007686:	a802      	add	r0, sp, #8
 8007688:	4659      	mov	r1, fp
        color = newColor;
 800768a:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
        boundingArea = calculateBoundingArea();
 800768e:	f00a fa45 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007692:	a802      	add	r0, sp, #8
 8007694:	c807      	ldmia	r0, {r0, r1, r2}
 8007696:	f504 7388 	add.w	r3, r4, #272	; 0x110
 800769a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800769e:	4b89      	ldr	r3, [pc, #548]	; (80078c4 <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 80076a0:	9308      	str	r3, [sp, #32]
 80076a2:	2263      	movs	r2, #99	; 0x63
    labelSelectMission.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U2AM));
 80076a4:	a908      	add	r1, sp, #32
 80076a6:	4658      	mov	r0, fp
 80076a8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80076ac:	f00a fcd0 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80076b0:	4659      	mov	r1, fp
 80076b2:	4630      	mov	r0, r6
 80076b4:	f008 f85c 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        borderBox.setPosition(x, y, width, height);
 80076b8:	f504 70a8 	add.w	r0, r4, #336	; 0x150
        setXY(x, y);
 80076bc:	4642      	mov	r2, r8
 80076be:	4641      	mov	r1, r8
 80076c0:	9001      	str	r0, [sp, #4]
 80076c2:	f7fb fb0b 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 80076c6:	9801      	ldr	r0, [sp, #4]
 80076c8:	21d6      	movs	r1, #214	; 0xd6
 80076ca:	f240 122b 	movw	r2, #299	; 0x12b
 80076ce:	f7ff fe7d 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
        borderSize = size;
 80076d2:	2205      	movs	r2, #5
 80076d4:	f8a4 2180 	strh.w	r2, [r4, #384]	; 0x180
        up = colorReleased;
 80076d8:	4a7b      	ldr	r2, [pc, #492]	; (80078c8 <_ZN21MissionSelectViewBaseC1Ev+0x3d4>)
 80076da:	f8c4 2184 	str.w	r2, [r4, #388]	; 0x184
        down = colorPressed;
 80076de:	f46f 73e6 	mvn.w	r3, #460	; 0x1cc
 80076e2:	f5a2 1268 	sub.w	r2, r2, #3801088	; 0x3a0000
 80076e6:	441a      	add	r2, r3
 80076e8:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
        borderUp = borderColorReleased;
 80076ec:	f5a2 4288 	sub.w	r2, r2, #17408	; 0x4400
 80076f0:	3a66      	subs	r2, #102	; 0x66
 80076f2:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
        borderDown = borderColorPressed;
 80076f6:	f102 1233 	add.w	r2, r2, #3342387	; 0x330033
 80076fa:	f502 524c 	add.w	r2, r2, #13056	; 0x3300
 80076fe:	f8c4 2190 	str.w	r2, [r4, #400]	; 0x190
        handlePressedUpdated();
 8007702:	f8d4 211c 	ldr.w	r2, [r4, #284]	; 0x11c
 8007706:	4648      	mov	r0, r9
 8007708:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800770c:	4790      	blx	r2
 800770e:	4b6d      	ldr	r3, [pc, #436]	; (80078c4 <_ZN21MissionSelectViewBaseC1Ev+0x3d0>)
 8007710:	9308      	str	r3, [sp, #32]
        text.setTypedText(t);
 8007712:	f504 70ca 	add.w	r0, r4, #404	; 0x194
 8007716:	2357      	movs	r3, #87	; 0x57
 8007718:	a908      	add	r1, sp, #32
 800771a:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800771e:	9001      	str	r0, [sp, #4]
 8007720:	f00a fc96 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
        setWidthHeight(drawable.getWidth(), drawable.getHeight());
 8007724:	f9b4 2126 	ldrsh.w	r2, [r4, #294]	; 0x126
 8007728:	f9b4 1124 	ldrsh.w	r1, [r4, #292]	; 0x124
 800772c:	9801      	ldr	r0, [sp, #4]
 800772e:	f7ff fe4d 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
        setXY(x, y);
 8007732:	9801      	ldr	r0, [sp, #4]
 8007734:	4641      	mov	r1, r8
 8007736:	225d      	movs	r2, #93	; 0x5d
 8007738:	f7fb fad0 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800773c:	9801      	ldr	r0, [sp, #4]
 800773e:	f240 122b 	movw	r2, #299	; 0x12b
 8007742:	21d6      	movs	r1, #214	; 0xd6
 8007744:	f7ff fe42 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
        handlePressedUpdated();
 8007748:	4648      	mov	r0, r9
        colorPressed = newColorPressed;
 800774a:	e9c4 5577 	strd	r5, r5, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 800774e:	f7ff fd2b 	bl	80071a8 <_ZN8touchgfx15TextButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>
    chassisResetBtn.setAction(flexButtonCallback);
 8007752:	f204 437c 	addw	r3, r4, #1148	; 0x47c
        action = &callback;
 8007756:	f8c4 314c 	str.w	r3, [r4, #332]	; 0x14c
        setXY(x, y);
 800775a:	4648      	mov	r0, r9
 800775c:	2254      	movs	r2, #84	; 0x54
 800775e:	2111      	movs	r1, #17
 8007760:	f7fb fabc 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8007764:	f240 122b 	movw	r2, #299	; 0x12b
 8007768:	4648      	mov	r0, r9
 800776a:	21d6      	movs	r1, #214	; 0xd6
 800776c:	f7ff fe2e 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8007770:	4649      	mov	r1, r9
 8007772:	4630      	mov	r0, r6
 8007774:	f007 fffc 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    idleBtn.setXY(270, 84);
 8007778:	4650      	mov	r0, sl
 800777a:	2254      	movs	r2, #84	; 0x54
 800777c:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007780:	f04f 0902 	mov.w	r9, #2
 8007784:	f04f 0803 	mov.w	r8, #3
 8007788:	f7fb faa8 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    idleBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800778c:	aa08      	add	r2, sp, #32
 800778e:	a907      	add	r1, sp, #28
 8007790:	4650      	mov	r0, sl
 8007792:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007796:	f8ad 8020 	strh.w	r8, [sp, #32]
 800779a:	f00a fcb7 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800779e:	2352      	movs	r3, #82	; 0x52
 80077a0:	f8a4 321c 	strh.w	r3, [r4, #540]	; 0x21c
        updateTextPosition();
 80077a4:	4650      	mov	r0, sl
 80077a6:	f7ff fe1f 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077aa:	4651      	mov	r1, sl
 80077ac:	4630      	mov	r0, r6
        colorPressed = col;
 80077ae:	e9c4 5588 	strd	r5, r5, [r4, #544]	; 0x220
 80077b2:	f8c4 720c 	str.w	r7, [r4, #524]	; 0x20c
 80077b6:	f007 ffdb 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    trackdriveBtn.setXY(532, 84);
 80077ba:	ee18 0a10 	vmov	r0, s16
 80077be:	2254      	movs	r2, #84	; 0x54
 80077c0:	f44f 7105 	mov.w	r1, #532	; 0x214
 80077c4:	f7fb fa8a 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    trackdriveBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80077c8:	aa08      	add	r2, sp, #32
 80077ca:	a907      	add	r1, sp, #28
 80077cc:	ee18 0a10 	vmov	r0, s16
 80077d0:	f8ad 901c 	strh.w	r9, [sp, #28]
 80077d4:	f8ad 8020 	strh.w	r8, [sp, #32]
 80077d8:	f00a fc98 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80077dc:	234a      	movs	r3, #74	; 0x4a
 80077de:	f8a4 3264 	strh.w	r3, [r4, #612]	; 0x264
        updateTextPosition();
 80077e2:	ee18 0a10 	vmov	r0, s16
 80077e6:	f7ff fdff 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80077ea:	ee18 1a10 	vmov	r1, s16
 80077ee:	4630      	mov	r0, r6
        colorPressed = col;
 80077f0:	e9c4 559a 	strd	r5, r5, [r4, #616]	; 0x268
 80077f4:	f8c4 7254 	str.w	r7, [r4, #596]	; 0x254
 80077f8:	f007 ffba 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ebsTestBtn.setXY(532, 164);
 80077fc:	ee18 0a90 	vmov	r0, s17
 8007800:	22a4      	movs	r2, #164	; 0xa4
 8007802:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007806:	f7fb fa69 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    ebsTestBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800780a:	aa08      	add	r2, sp, #32
 800780c:	a907      	add	r1, sp, #28
 800780e:	ee18 0a90 	vmov	r0, s17
 8007812:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007816:	f8ad 8020 	strh.w	r8, [sp, #32]
 800781a:	f00a fc77 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800781e:	2348      	movs	r3, #72	; 0x48
 8007820:	f8a4 32ac 	strh.w	r3, [r4, #684]	; 0x2ac
        updateTextPosition();
 8007824:	ee18 0a90 	vmov	r0, s17
 8007828:	f7ff fdde 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800782c:	ee18 1a90 	vmov	r1, s17
 8007830:	4630      	mov	r0, r6
        colorPressed = col;
 8007832:	e9c4 55ac 	strd	r5, r5, [r4, #688]	; 0x2b0
 8007836:	f8c4 729c 	str.w	r7, [r4, #668]	; 0x29c
 800783a:	f007 ff99 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    inspectionBtn.setXY(532, 244);
 800783e:	ee19 0a10 	vmov	r0, s18
 8007842:	22f4      	movs	r2, #244	; 0xf4
 8007844:	f44f 7105 	mov.w	r1, #532	; 0x214
 8007848:	f7fb fa48 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    inspectionBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 800784c:	aa08      	add	r2, sp, #32
 800784e:	a907      	add	r1, sp, #28
 8007850:	ee19 0a10 	vmov	r0, s18
 8007854:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007858:	f8ad 8020 	strh.w	r8, [sp, #32]
 800785c:	f00a fc56 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007860:	2346      	movs	r3, #70	; 0x46
 8007862:	f8a4 32f4 	strh.w	r3, [r4, #756]	; 0x2f4
        updateTextPosition();
 8007866:	ee19 0a10 	vmov	r0, s18
 800786a:	f7ff fdbd 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 800786e:	ee19 1a10 	vmov	r1, s18
 8007872:	4630      	mov	r0, r6
        colorPressed = col;
 8007874:	e9c4 55be 	strd	r5, r5, [r4, #760]	; 0x2f8
 8007878:	f8c4 72e4 	str.w	r7, [r4, #740]	; 0x2e4
 800787c:	f007 ff78 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    manualBtn.setXY(532, 323);
 8007880:	ee19 0a90 	vmov	r0, s19
 8007884:	f240 1243 	movw	r2, #323	; 0x143
 8007888:	f44f 7105 	mov.w	r1, #532	; 0x214
 800788c:	f7fb fa26 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    manualBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007890:	aa08      	add	r2, sp, #32
 8007892:	a907      	add	r1, sp, #28
 8007894:	ee19 0a90 	vmov	r0, s19
 8007898:	f8ad 901c 	strh.w	r9, [sp, #28]
 800789c:	f8ad 8020 	strh.w	r8, [sp, #32]
 80078a0:	f00a fc34 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80078a4:	2344      	movs	r3, #68	; 0x44
 80078a6:	f8a4 333c 	strh.w	r3, [r4, #828]	; 0x33c
        updateTextPosition();
 80078aa:	ee19 0a90 	vmov	r0, s19
 80078ae:	e00d      	b.n	80078cc <_ZN21MissionSelectViewBaseC1Ev+0x3d8>
 80078b0:	080296c8 	.word	0x080296c8
 80078b4:	08029698 	.word	0x08029698
 80078b8:	08007299 	.word	0x08007299
 80078bc:	080296b0 	.word	0x080296b0
 80078c0:	08007373 	.word	0x08007373
 80078c4:	080284b8 	.word	0x080284b8
 80078c8:	ff3a7999 	.word	0xff3a7999
 80078cc:	f7ff fd8c 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80078d0:	ee19 1a90 	vmov	r1, s19
 80078d4:	4630      	mov	r0, r6
        colorPressed = col;
 80078d6:	e9c4 55d0 	strd	r5, r5, [r4, #832]	; 0x340
 80078da:	f8c4 732c 	str.w	r7, [r4, #812]	; 0x32c
 80078de:	f007 ff47 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    debugBtn.setXY(400, 405);
 80078e2:	ee1a 0a10 	vmov	r0, s20
 80078e6:	f240 1295 	movw	r2, #405	; 0x195
 80078ea:	f44f 71c8 	mov.w	r1, #400	; 0x190
 80078ee:	f7fb f9f5 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    debugBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80078f2:	aa08      	add	r2, sp, #32
 80078f4:	a907      	add	r1, sp, #28
 80078f6:	ee1a 0a10 	vmov	r0, s20
 80078fa:	f8ad 901c 	strh.w	r9, [sp, #28]
 80078fe:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007902:	f00a fc03 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007906:	2342      	movs	r3, #66	; 0x42
 8007908:	f8a4 3384 	strh.w	r3, [r4, #900]	; 0x384
        updateTextPosition();
 800790c:	ee1a 0a10 	vmov	r0, s20
 8007910:	f7ff fd6a 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007914:	ee1a 1a10 	vmov	r1, s20
 8007918:	4630      	mov	r0, r6
        colorPressed = col;
 800791a:	e9c4 55e2 	strd	r5, r5, [r4, #904]	; 0x388
 800791e:	f8c4 7374 	str.w	r7, [r4, #884]	; 0x374
 8007922:	f007 ff25 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    accelerationBtn.setXY(270, 164);
 8007926:	ee1a 0a90 	vmov	r0, s21
 800792a:	22a4      	movs	r2, #164	; 0xa4
 800792c:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007930:	f7fb f9d4 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    accelerationBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007934:	aa08      	add	r2, sp, #32
 8007936:	a907      	add	r1, sp, #28
 8007938:	ee1a 0a90 	vmov	r0, s21
 800793c:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007940:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007944:	f00a fbe2 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8007948:	2350      	movs	r3, #80	; 0x50
 800794a:	f8a4 33cc 	strh.w	r3, [r4, #972]	; 0x3cc
        updateTextPosition();
 800794e:	ee1a 0a90 	vmov	r0, s21
 8007952:	f7ff fd49 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007956:	ee1a 1a90 	vmov	r1, s21
 800795a:	4630      	mov	r0, r6
        colorPressed = col;
 800795c:	e9c4 55f4 	strd	r5, r5, [r4, #976]	; 0x3d0
 8007960:	f8c4 73bc 	str.w	r7, [r4, #956]	; 0x3bc
 8007964:	f007 ff04 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    skidpadBtn.setXY(270, 244);
 8007968:	ee1b 0a10 	vmov	r0, s22
 800796c:	22f4      	movs	r2, #244	; 0xf4
 800796e:	f44f 7187 	mov.w	r1, #270	; 0x10e
 8007972:	f7fb f9b3 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    skidpadBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 8007976:	aa08      	add	r2, sp, #32
 8007978:	a907      	add	r1, sp, #28
 800797a:	ee1b 0a10 	vmov	r0, s22
 800797e:	f8ad 901c 	strh.w	r9, [sp, #28]
 8007982:	f8ad 8020 	strh.w	r8, [sp, #32]
 8007986:	f00a fbc1 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800798a:	234e      	movs	r3, #78	; 0x4e
 800798c:	f8a4 3414 	strh.w	r3, [r4, #1044]	; 0x414
        updateTextPosition();
 8007990:	ee1b 0a10 	vmov	r0, s22
 8007994:	f7ff fd28 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 8007998:	ee1b 1a10 	vmov	r1, s22
 800799c:	4630      	mov	r0, r6
        color = col;
 800799e:	f8c4 5418 	str.w	r5, [r4, #1048]	; 0x418
        colorPressed = col;
 80079a2:	f8c4 541c 	str.w	r5, [r4, #1052]	; 0x41c
 80079a6:	f8c4 7404 	str.w	r7, [r4, #1028]	; 0x404
 80079aa:	f007 fee1 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    autocrossBtn.setXY(270, 323);
 80079ae:	ee1b 0a90 	vmov	r0, s23
 80079b2:	f240 1243 	movw	r2, #323	; 0x143
 80079b6:	f44f 7187 	mov.w	r1, #270	; 0x10e
 80079ba:	f7fb f98f 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
    autocrossBtn.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_60_SMALL_ROUNDED_PRESSED_ID));
 80079be:	aa08      	add	r2, sp, #32
 80079c0:	a907      	add	r1, sp, #28
 80079c2:	ee1b 0a90 	vmov	r0, s23
 80079c6:	f8ad 901c 	strh.w	r9, [sp, #28]
 80079ca:	f8ad 8020 	strh.w	r8, [sp, #32]
 80079ce:	f00a fb9d 	bl	801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80079d2:	234c      	movs	r3, #76	; 0x4c
        updateTextPosition();
 80079d4:	ee1b 0a90 	vmov	r0, s23
 80079d8:	f8a4 345c 	strh.w	r3, [r4, #1116]	; 0x45c
 80079dc:	f7ff fd04 	bl	80073e8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80079e0:	4630      	mov	r0, r6
 80079e2:	ee1b 1a90 	vmov	r1, s23
        color = col;
 80079e6:	f8c4 5460 	str.w	r5, [r4, #1120]	; 0x460
        colorPressed = col;
 80079ea:	f8c4 5464 	str.w	r5, [r4, #1124]	; 0x464
 80079ee:	f8c4 744c 	str.w	r7, [r4, #1100]	; 0x44c
 80079f2:	f007 febd 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80079f6:	4620      	mov	r0, r4
 80079f8:	b00b      	add	sp, #44	; 0x2c
 80079fa:	ecbd 8b08 	vpop	{d8-d11}
 80079fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007a02:	bf00      	nop

08007a04 <_ZN15StartupViewBaseD1Ev>:
}

StartupViewBase::~StartupViewBase()
{

}
 8007a04:	4770      	bx	lr

08007a06 <_ZN15StartupViewBase11setupScreenEv>:

void StartupViewBase::setupScreen()
{

}
 8007a06:	4770      	bx	lr

08007a08 <_ZN15StartupViewBase15afterTransitionEv>:
void StartupViewBase::afterTransition()
{
    //fromStartupToInfotaiment
    //When screen transition ends delay
    //Delay for 2400 ms (144 Ticks)
    fromStartupToInfotaimentCounter = FROMSTARTUPTOINFOTAIMENT_DURATION;
 8007a08:	2390      	movs	r3, #144	; 0x90
 8007a0a:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
}
 8007a0e:	4770      	bx	lr

08007a10 <_ZN15StartupViewBaseD0Ev>:
StartupViewBase::~StartupViewBase()
 8007a10:	b510      	push	{r4, lr}
}
 8007a12:	21e4      	movs	r1, #228	; 0xe4
StartupViewBase::~StartupViewBase()
 8007a14:	4604      	mov	r4, r0
}
 8007a16:	f01e fddb 	bl	80265d0 <_ZdlPvj>
 8007a1a:	4620      	mov	r0, r4
 8007a1c:	bd10      	pop	{r4, pc}

08007a1e <_ZN15StartupViewBase15handleTickEventEv>:

void StartupViewBase::handleTickEvent()
{
 8007a1e:	b508      	push	{r3, lr}
    if (fromStartupToInfotaimentCounter > 0)
 8007a20:	f8b0 30e0 	ldrh.w	r3, [r0, #224]	; 0xe0
 8007a24:	b153      	cbz	r3, 8007a3c <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    {
        fromStartupToInfotaimentCounter--;
 8007a26:	3b01      	subs	r3, #1
 8007a28:	b29b      	uxth	r3, r3
 8007a2a:	f8a0 30e0 	strh.w	r3, [r0, #224]	; 0xe0
        if (fromStartupToInfotaimentCounter == 0)
 8007a2e:	b92b      	cbnz	r3, 8007a3c <_ZN15StartupViewBase15handleTickEventEv+0x1e>
    virtual void afterTransition();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8007a30:	f00d fa3a 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
                //When fromStartupToInfotaiment completed change screen to MainInfotaiment
                //Go to MainInfotaiment with screen transition towards East
                application().gotoMainInfotaimentScreenWipeTransitionEast();
        }
    }
}
 8007a34:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
                application().gotoMainInfotaimentScreenWipeTransitionEast();
 8007a38:	f7fc be88 	b.w	800474c <_ZN23FrontendApplicationBase43gotoMainInfotaimentScreenWipeTransitionEastEv>
}
 8007a3c:	bd08      	pop	{r3, pc}
	...

08007a40 <_ZN15StartupViewBaseC1Ev>:
StartupViewBase::StartupViewBase() :
 8007a40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007a44:	4604      	mov	r4, r0
 8007a46:	b086      	sub	sp, #24
    fromStartupToInfotaimentCounter(0)
 8007a48:	4626      	mov	r6, r4
 8007a4a:	2500      	movs	r5, #0
 8007a4c:	f00e feac 	bl	80167a8 <_ZN8touchgfx6ScreenC1Ev>
 8007a50:	4b4e      	ldr	r3, [pc, #312]	; (8007b8c <_ZN15StartupViewBaseC1Ev+0x14c>)
 8007a52:	63e5      	str	r5, [r4, #60]	; 0x3c
 8007a54:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8007a58:	4629      	mov	r1, r5
 8007a5a:	2226      	movs	r2, #38	; 0x26
 8007a5c:	4630      	mov	r0, r6
 8007a5e:	f01e fe71 	bl	8026744 <memset>
 8007a62:	4630      	mov	r0, r6
 8007a64:	f7fb f95a 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8007a68:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8007a6c:	4b48      	ldr	r3, [pc, #288]	; (8007b90 <_ZN15StartupViewBaseC1Ev+0x150>)
 8007a6e:	6423      	str	r3, [r4, #64]	; 0x40
 8007a70:	27ff      	movs	r7, #255	; 0xff
        : Widget(), bitmap(bmp), alpha(255)
 8007a72:	2226      	movs	r2, #38	; 0x26
 8007a74:	4629      	mov	r1, r5
 8007a76:	f884 7066 	strb.w	r7, [r4, #102]	; 0x66
        : color(col)
 8007a7a:	66a5      	str	r5, [r4, #104]	; 0x68
 8007a7c:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8007a80:	4640      	mov	r0, r8
 8007a82:	f8ad 9010 	strh.w	r9, [sp, #16]
 8007a86:	f01e fe5d 	bl	8026744 <memset>
 8007a8a:	4640      	mov	r0, r8
 8007a8c:	f7fb f946 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8007a90:	4b40      	ldr	r3, [pc, #256]	; (8007b94 <_ZN15StartupViewBaseC1Ev+0x154>)
 8007a92:	66e3      	str	r3, [r4, #108]	; 0x6c
 8007a94:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8007a98:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8007a9c:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8007aa0:	a904      	add	r1, sp, #16
 8007aa2:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8007aa6:	4640      	mov	r0, r8
 8007aa8:	f00a fcfe 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007aac:	4629      	mov	r1, r5
 8007aae:	2226      	movs	r2, #38	; 0x26
 8007ab0:	4638      	mov	r0, r7
 8007ab2:	f01e fe47 	bl	8026744 <memset>
 8007ab6:	4638      	mov	r0, r7
 8007ab8:	f7fb f930 	bl	8002d1c <_ZN8touchgfx6WidgetC1Ev>
 8007abc:	4b36      	ldr	r3, [pc, #216]	; (8007b98 <_ZN15StartupViewBaseC1Ev+0x158>)
 8007abe:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8007ac2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
        : typedTextId(id)
 8007ac6:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8007ba0 <_ZN15StartupViewBaseC1Ev+0x160>
 8007aca:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007ace:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 8007ad2:	e9c4 3536 	strd	r3, r5, [r4, #216]	; 0xd8
        setXY(x, y);
 8007ad6:	462a      	mov	r2, r5
 8007ad8:	f8a4 90c4 	strh.w	r9, [r4, #196]	; 0xc4
        : color(col)
 8007adc:	f8c4 50c8 	str.w	r5, [r4, #200]	; 0xc8
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8007ae0:	f8a4 50d0 	strh.w	r5, [r4, #208]	; 0xd0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8007ae4:	f8c4 50d4 	str.w	r5, [r4, #212]	; 0xd4
 8007ae8:	f8a4 50e0 	strh.w	r5, [r4, #224]	; 0xe0
 8007aec:	4629      	mov	r1, r5
 8007aee:	4630      	mov	r0, r6
 8007af0:	f8c4 a0c0 	str.w	sl, [r4, #192]	; 0xc0
 8007af4:	f7fb f8f2 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8007af8:	4630      	mov	r0, r6
 8007afa:	f44f 7148 	mov.w	r1, #800	; 0x320
 8007afe:	f7fa f845 	bl	8001b8c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8007b02:	4630      	mov	r0, r6
 8007b04:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8007b08:	f7fa f842 	bl	8001b90 <_ZN8touchgfx8Drawable9setHeightEs>
 8007b0c:	f104 0904 	add.w	r9, r4, #4
        color = newColor;
 8007b10:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8007b14:	66a3      	str	r3, [r4, #104]	; 0x68
 8007b16:	4631      	mov	r1, r6
 8007b18:	4648      	mov	r0, r9
 8007b1a:	f007 fe29 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backgroundStartup.setXY(0, 0);
 8007b1e:	462a      	mov	r2, r5
 8007b20:	4629      	mov	r1, r5
 8007b22:	4640      	mov	r0, r8
 8007b24:	f7fb f8da 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8007b28:	230e      	movs	r3, #14
    backgroundStartup.setBitmap(touchgfx::Bitmap(BITMAP_MMRD_LOGO_NUOVO_800X480_ID));
 8007b2a:	a904      	add	r1, sp, #16
 8007b2c:	4640      	mov	r0, r8
 8007b2e:	f8ad 3010 	strh.w	r3, [sp, #16]
 8007b32:	f00a fcb9 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8007b36:	4641      	mov	r1, r8
 8007b38:	4648      	mov	r0, r9
 8007b3a:	f007 fe19 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(707, 0);
 8007b3e:	462a      	mov	r2, r5
 8007b40:	4638      	mov	r0, r7
 8007b42:	f240 21c3 	movw	r1, #707	; 0x2c3
 8007b46:	f7fb f8c9 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8007b4a:	4b14      	ldr	r3, [pc, #80]	; (8007b9c <_ZN15StartupViewBaseC1Ev+0x15c>)
        linespace = space;
 8007b4c:	f8a4 50cc 	strh.w	r5, [r4, #204]	; 0xcc
        boundingArea = calculateBoundingArea();
 8007b50:	466d      	mov	r5, sp
        color = newColor;
 8007b52:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
        boundingArea = calculateBoundingArea();
 8007b56:	4639      	mov	r1, r7
 8007b58:	4628      	mov	r0, r5
 8007b5a:	f009 ffdf 	bl	8011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8007b5e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8007b62:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8007b66:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8007b6a:	2366      	movs	r3, #102	; 0x66
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RP6T));
 8007b6c:	a904      	add	r1, sp, #16
 8007b6e:	4638      	mov	r0, r7
 8007b70:	f8ad 3014 	strh.w	r3, [sp, #20]
 8007b74:	f8cd a010 	str.w	sl, [sp, #16]
 8007b78:	f00a fa6a 	bl	8012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8007b7c:	4648      	mov	r0, r9
 8007b7e:	4639      	mov	r1, r7
 8007b80:	f007 fdf6 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8007b84:	4620      	mov	r0, r4
 8007b86:	b006      	add	sp, #24
 8007b88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007b8c:	08029724 	.word	0x08029724
 8007b90:	0802a398 	.word	0x0802a398
 8007b94:	0802a4dc 	.word	0x0802a4dc
 8007b98:	0802a308 	.word	0x0802a308
 8007b9c:	ffbab6b6 	.word	0xffbab6b6
 8007ba0:	080284b8 	.word	0x080284b8

08007ba4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_100_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_100_4bpp();

touchgfx::GeneratedFont& getFont_verdana_100_4bpp()
{
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007ba4:	4770      	bx	lr
	...

08007ba8 <_Z24getFont_verdana_100_4bppv>:
{
 8007ba8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007baa:	4d17      	ldr	r5, [pc, #92]	; (8007c08 <_Z24getFont_verdana_100_4bppv+0x60>)
 8007bac:	782c      	ldrb	r4, [r5, #0]
 8007bae:	f3bf 8f5b 	dmb	ish
 8007bb2:	f014 0401 	ands.w	r4, r4, #1
{
 8007bb6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_100_4bpp(glyphs_verdana_100_4bpp, 62, 121, 100, 0, 0, 4, 1, 3, 4, unicodes_verdana_100_4bpp, kerning_verdana_100_4bpp, 78, 0, 0, 0);
 8007bb8:	d123      	bne.n	8007c02 <_Z24getFont_verdana_100_4bppv+0x5a>
 8007bba:	4628      	mov	r0, r5
 8007bbc:	f01e fd0a 	bl	80265d4 <__cxa_guard_acquire>
 8007bc0:	b1f8      	cbz	r0, 8007c02 <_Z24getFont_verdana_100_4bppv+0x5a>
 8007bc2:	234e      	movs	r3, #78	; 0x4e
 8007bc4:	9309      	str	r3, [sp, #36]	; 0x24
 8007bc6:	4b11      	ldr	r3, [pc, #68]	; (8007c0c <_Z24getFont_verdana_100_4bppv+0x64>)
 8007bc8:	9308      	str	r3, [sp, #32]
 8007bca:	4b11      	ldr	r3, [pc, #68]	; (8007c10 <_Z24getFont_verdana_100_4bppv+0x68>)
 8007bcc:	9307      	str	r3, [sp, #28]
 8007bce:	2203      	movs	r2, #3
 8007bd0:	2304      	movs	r3, #4
 8007bd2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8007bd6:	2201      	movs	r2, #1
 8007bd8:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007bdc:	2364      	movs	r3, #100	; 0x64
 8007bde:	490d      	ldr	r1, [pc, #52]	; (8007c14 <_Z24getFont_verdana_100_4bppv+0x6c>)
 8007be0:	9300      	str	r3, [sp, #0]
 8007be2:	223e      	movs	r2, #62	; 0x3e
 8007be4:	2379      	movs	r3, #121	; 0x79
 8007be6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007bea:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007bee:	480a      	ldr	r0, [pc, #40]	; (8007c18 <_Z24getFont_verdana_100_4bppv+0x70>)
 8007bf0:	940a      	str	r4, [sp, #40]	; 0x28
 8007bf2:	f7fd fc0f 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007bf6:	4809      	ldr	r0, [pc, #36]	; (8007c1c <_Z24getFont_verdana_100_4bppv+0x74>)
 8007bf8:	f01e fd36 	bl	8026668 <atexit>
 8007bfc:	4628      	mov	r0, r5
 8007bfe:	f01e fcf5 	bl	80265ec <__cxa_guard_release>
    return verdana_100_4bpp;
}
 8007c02:	4805      	ldr	r0, [pc, #20]	; (8007c18 <_Z24getFont_verdana_100_4bppv+0x70>)
 8007c04:	b00f      	add	sp, #60	; 0x3c
 8007c06:	bd30      	pop	{r4, r5, pc}
 8007c08:	20005dc0 	.word	0x20005dc0
 8007c0c:	0802ab18 	.word	0x0802ab18
 8007c10:	0802b160 	.word	0x0802b160
 8007c14:	902355d0 	.word	0x902355d0
 8007c18:	20005dc4 	.word	0x20005dc4
 8007c1c:	08007ba5 	.word	0x08007ba5

08007c20 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c20:	4770      	bx	lr
	...

08007c24 <_Z23getFont_verdana_10_4bppv>:
{
 8007c24:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c26:	4d17      	ldr	r5, [pc, #92]	; (8007c84 <_Z23getFont_verdana_10_4bppv+0x60>)
 8007c28:	782c      	ldrb	r4, [r5, #0]
 8007c2a:	f3bf 8f5b 	dmb	ish
 8007c2e:	f014 0401 	ands.w	r4, r4, #1
{
 8007c32:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 66, 12, 10, 0, 0, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8007c34:	d122      	bne.n	8007c7c <_Z23getFont_verdana_10_4bppv+0x58>
 8007c36:	4628      	mov	r0, r5
 8007c38:	f01e fccc 	bl	80265d4 <__cxa_guard_acquire>
 8007c3c:	b1f0      	cbz	r0, 8007c7c <_Z23getFont_verdana_10_4bppv+0x58>
 8007c3e:	233f      	movs	r3, #63	; 0x3f
 8007c40:	9309      	str	r3, [sp, #36]	; 0x24
 8007c42:	4b11      	ldr	r3, [pc, #68]	; (8007c88 <_Z23getFont_verdana_10_4bppv+0x64>)
 8007c44:	9308      	str	r3, [sp, #32]
 8007c46:	4b11      	ldr	r3, [pc, #68]	; (8007c8c <_Z23getFont_verdana_10_4bppv+0x68>)
 8007c48:	9307      	str	r3, [sp, #28]
 8007c4a:	2301      	movs	r3, #1
 8007c4c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007c50:	9304      	str	r3, [sp, #16]
 8007c52:	2304      	movs	r3, #4
 8007c54:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007c58:	230a      	movs	r3, #10
 8007c5a:	490d      	ldr	r1, [pc, #52]	; (8007c90 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8007c5c:	9300      	str	r3, [sp, #0]
 8007c5e:	2242      	movs	r2, #66	; 0x42
 8007c60:	230c      	movs	r3, #12
 8007c62:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007c66:	480b      	ldr	r0, [pc, #44]	; (8007c94 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c68:	940a      	str	r4, [sp, #40]	; 0x28
 8007c6a:	9401      	str	r4, [sp, #4]
 8007c6c:	f7fd fbd2 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007c70:	4809      	ldr	r0, [pc, #36]	; (8007c98 <_Z23getFont_verdana_10_4bppv+0x74>)
 8007c72:	f01e fcf9 	bl	8026668 <atexit>
 8007c76:	4628      	mov	r0, r5
 8007c78:	f01e fcb8 	bl	80265ec <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8007c7c:	4805      	ldr	r0, [pc, #20]	; (8007c94 <_Z23getFont_verdana_10_4bppv+0x70>)
 8007c7e:	b00f      	add	sp, #60	; 0x3c
 8007c80:	bd30      	pop	{r4, r5, pc}
 8007c82:	bf00      	nop
 8007c84:	20005df0 	.word	0x20005df0
 8007c88:	0802ad58 	.word	0x0802ad58
 8007c8c:	0802b164 	.word	0x0802b164
 8007c90:	90235934 	.word	0x90235934
 8007c94:	20005df4 	.word	0x20005df4
 8007c98:	08007c21 	.word	0x08007c21

08007c9c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_120_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_120_4bpp();

touchgfx::GeneratedFont& getFont_verdana_120_4bpp()
{
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007c9c:	4770      	bx	lr
	...

08007ca0 <_Z24getFont_verdana_120_4bppv>:
{
 8007ca0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007ca2:	4d17      	ldr	r5, [pc, #92]	; (8007d00 <_Z24getFont_verdana_120_4bppv+0x60>)
 8007ca4:	782c      	ldrb	r4, [r5, #0]
 8007ca6:	f3bf 8f5b 	dmb	ish
 8007caa:	f014 0401 	ands.w	r4, r4, #1
{
 8007cae:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_120_4bpp(glyphs_verdana_120_4bpp, 28, 145, 120, 0, 0, 4, 1, 0, 1, unicodes_verdana_120_4bpp, kerning_verdana_120_4bpp, 63, 0, 0, 0);
 8007cb0:	d122      	bne.n	8007cf8 <_Z24getFont_verdana_120_4bppv+0x58>
 8007cb2:	4628      	mov	r0, r5
 8007cb4:	f01e fc8e 	bl	80265d4 <__cxa_guard_acquire>
 8007cb8:	b1f0      	cbz	r0, 8007cf8 <_Z24getFont_verdana_120_4bppv+0x58>
 8007cba:	233f      	movs	r3, #63	; 0x3f
 8007cbc:	9309      	str	r3, [sp, #36]	; 0x24
 8007cbe:	4b11      	ldr	r3, [pc, #68]	; (8007d04 <_Z24getFont_verdana_120_4bppv+0x64>)
 8007cc0:	9308      	str	r3, [sp, #32]
 8007cc2:	4b11      	ldr	r3, [pc, #68]	; (8007d08 <_Z24getFont_verdana_120_4bppv+0x68>)
 8007cc4:	9307      	str	r3, [sp, #28]
 8007cc6:	2301      	movs	r3, #1
 8007cc8:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007ccc:	9304      	str	r3, [sp, #16]
 8007cce:	2304      	movs	r3, #4
 8007cd0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007cd4:	2378      	movs	r3, #120	; 0x78
 8007cd6:	490d      	ldr	r1, [pc, #52]	; (8007d0c <_Z24getFont_verdana_120_4bppv+0x6c>)
 8007cd8:	9300      	str	r3, [sp, #0]
 8007cda:	221c      	movs	r2, #28
 8007cdc:	2391      	movs	r3, #145	; 0x91
 8007cde:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ce2:	480b      	ldr	r0, [pc, #44]	; (8007d10 <_Z24getFont_verdana_120_4bppv+0x70>)
 8007ce4:	940a      	str	r4, [sp, #40]	; 0x28
 8007ce6:	9401      	str	r4, [sp, #4]
 8007ce8:	f7fd fb94 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007cec:	4809      	ldr	r0, [pc, #36]	; (8007d14 <_Z24getFont_verdana_120_4bppv+0x74>)
 8007cee:	f01e fcbb 	bl	8026668 <atexit>
 8007cf2:	4628      	mov	r0, r5
 8007cf4:	f01e fc7a 	bl	80265ec <__cxa_guard_release>
    return verdana_120_4bpp;
}
 8007cf8:	4805      	ldr	r0, [pc, #20]	; (8007d10 <_Z24getFont_verdana_120_4bppv+0x70>)
 8007cfa:	b00f      	add	sp, #60	; 0x3c
 8007cfc:	bd30      	pop	{r4, r5, pc}
 8007cfe:	bf00      	nop
 8007d00:	20005e20 	.word	0x20005e20
 8007d04:	0802ad74 	.word	0x0802ad74
 8007d08:	0802b168 	.word	0x0802b168
 8007d0c:	90235cd0 	.word	0x90235cd0
 8007d10:	20005e24 	.word	0x20005e24
 8007d14:	08007c9d 	.word	0x08007c9d

08007d18 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d18:	4770      	bx	lr
	...

08007d1c <_Z23getFont_verdana_15_4bppv>:
{
 8007d1c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d1e:	4d17      	ldr	r5, [pc, #92]	; (8007d7c <_Z23getFont_verdana_15_4bppv+0x60>)
 8007d20:	782c      	ldrb	r4, [r5, #0]
 8007d22:	f3bf 8f5b 	dmb	ish
 8007d26:	f014 0401 	ands.w	r4, r4, #1
{
 8007d2a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 66, 18, 15, 0, 0, 4, 1, 1, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8007d2c:	d122      	bne.n	8007d74 <_Z23getFont_verdana_15_4bppv+0x58>
 8007d2e:	4628      	mov	r0, r5
 8007d30:	f01e fc50 	bl	80265d4 <__cxa_guard_acquire>
 8007d34:	b1f0      	cbz	r0, 8007d74 <_Z23getFont_verdana_15_4bppv+0x58>
 8007d36:	233f      	movs	r3, #63	; 0x3f
 8007d38:	9309      	str	r3, [sp, #36]	; 0x24
 8007d3a:	4b11      	ldr	r3, [pc, #68]	; (8007d80 <_Z23getFont_verdana_15_4bppv+0x64>)
 8007d3c:	9308      	str	r3, [sp, #32]
 8007d3e:	4b11      	ldr	r3, [pc, #68]	; (8007d84 <_Z23getFont_verdana_15_4bppv+0x68>)
 8007d40:	9307      	str	r3, [sp, #28]
 8007d42:	2301      	movs	r3, #1
 8007d44:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007d48:	9304      	str	r3, [sp, #16]
 8007d4a:	2304      	movs	r3, #4
 8007d4c:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007d50:	230f      	movs	r3, #15
 8007d52:	490d      	ldr	r1, [pc, #52]	; (8007d88 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8007d54:	9300      	str	r3, [sp, #0]
 8007d56:	2242      	movs	r2, #66	; 0x42
 8007d58:	2312      	movs	r3, #18
 8007d5a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007d5e:	480b      	ldr	r0, [pc, #44]	; (8007d8c <_Z23getFont_verdana_15_4bppv+0x70>)
 8007d60:	940a      	str	r4, [sp, #40]	; 0x28
 8007d62:	9401      	str	r4, [sp, #4]
 8007d64:	f7fd fb56 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007d68:	4809      	ldr	r0, [pc, #36]	; (8007d90 <_Z23getFont_verdana_15_4bppv+0x74>)
 8007d6a:	f01e fc7d 	bl	8026668 <atexit>
 8007d6e:	4628      	mov	r0, r5
 8007d70:	f01e fc3c 	bl	80265ec <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8007d74:	4805      	ldr	r0, [pc, #20]	; (8007d8c <_Z23getFont_verdana_15_4bppv+0x70>)
 8007d76:	b00f      	add	sp, #60	; 0x3c
 8007d78:	bd30      	pop	{r4, r5, pc}
 8007d7a:	bf00      	nop
 8007d7c:	20005e50 	.word	0x20005e50
 8007d80:	0802adfc 	.word	0x0802adfc
 8007d84:	0802b16c 	.word	0x0802b16c
 8007d88:	90235e58 	.word	0x90235e58
 8007d8c:	20005e54 	.word	0x20005e54
 8007d90:	08007d19 	.word	0x08007d19

08007d94 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_180_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_180_4bpp();

touchgfx::GeneratedFont& getFont_verdana_180_4bpp()
{
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007d94:	4770      	bx	lr
	...

08007d98 <_Z24getFont_verdana_180_4bppv>:
{
 8007d98:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007d9a:	4d17      	ldr	r5, [pc, #92]	; (8007df8 <_Z24getFont_verdana_180_4bppv+0x60>)
 8007d9c:	782c      	ldrb	r4, [r5, #0]
 8007d9e:	f3bf 8f5b 	dmb	ish
 8007da2:	f014 0401 	ands.w	r4, r4, #1
{
 8007da6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_180_4bpp(glyphs_verdana_180_4bpp, 7, 183, 180, 0, 0, 4, 1, 0, 0, unicodes_verdana_180_4bpp, kerning_verdana_180_4bpp, 63, 0, 0, 0);
 8007da8:	d122      	bne.n	8007df0 <_Z24getFont_verdana_180_4bppv+0x58>
 8007daa:	4628      	mov	r0, r5
 8007dac:	f01e fc12 	bl	80265d4 <__cxa_guard_acquire>
 8007db0:	b1f0      	cbz	r0, 8007df0 <_Z24getFont_verdana_180_4bppv+0x58>
 8007db2:	233f      	movs	r3, #63	; 0x3f
 8007db4:	9309      	str	r3, [sp, #36]	; 0x24
 8007db6:	4b11      	ldr	r3, [pc, #68]	; (8007dfc <_Z24getFont_verdana_180_4bppv+0x64>)
 8007db8:	9308      	str	r3, [sp, #32]
 8007dba:	4b11      	ldr	r3, [pc, #68]	; (8007e00 <_Z24getFont_verdana_180_4bppv+0x68>)
 8007dbc:	4911      	ldr	r1, [pc, #68]	; (8007e04 <_Z24getFont_verdana_180_4bppv+0x6c>)
 8007dbe:	4812      	ldr	r0, [pc, #72]	; (8007e08 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007dc0:	940a      	str	r4, [sp, #40]	; 0x28
 8007dc2:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007dc6:	2201      	movs	r2, #1
 8007dc8:	2304      	movs	r3, #4
 8007dca:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007dce:	23b4      	movs	r3, #180	; 0xb4
 8007dd0:	9300      	str	r3, [sp, #0]
 8007dd2:	2207      	movs	r2, #7
 8007dd4:	23b7      	movs	r3, #183	; 0xb7
 8007dd6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007dda:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007dde:	9405      	str	r4, [sp, #20]
 8007de0:	f7fd fb18 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007de4:	4809      	ldr	r0, [pc, #36]	; (8007e0c <_Z24getFont_verdana_180_4bppv+0x74>)
 8007de6:	f01e fc3f 	bl	8026668 <atexit>
 8007dea:	4628      	mov	r0, r5
 8007dec:	f01e fbfe 	bl	80265ec <__cxa_guard_release>
    return verdana_180_4bpp;
}
 8007df0:	4805      	ldr	r0, [pc, #20]	; (8007e08 <_Z24getFont_verdana_180_4bppv+0x70>)
 8007df2:	b00f      	add	sp, #60	; 0x3c
 8007df4:	bd30      	pop	{r4, r5, pc}
 8007df6:	bf00      	nop
 8007df8:	20005e80 	.word	0x20005e80
 8007dfc:	0802ae80 	.word	0x0802ae80
 8007e00:	0802b170 	.word	0x0802b170
 8007e04:	902361f4 	.word	0x902361f4
 8007e08:	20005e84 	.word	0x20005e84
 8007e0c:	08007d95 	.word	0x08007d95

08007e10 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007e10:	4770      	bx	lr
	...

08007e14 <_Z23getFont_verdana_20_4bppv>:
{
 8007e14:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007e16:	4d17      	ldr	r5, [pc, #92]	; (8007e74 <_Z23getFont_verdana_20_4bppv+0x60>)
 8007e18:	782c      	ldrb	r4, [r5, #0]
 8007e1a:	f3bf 8f5b 	dmb	ish
 8007e1e:	f014 0401 	ands.w	r4, r4, #1
{
 8007e22:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 67, 24, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8007e24:	d122      	bne.n	8007e6c <_Z23getFont_verdana_20_4bppv+0x58>
 8007e26:	4628      	mov	r0, r5
 8007e28:	f01e fbd4 	bl	80265d4 <__cxa_guard_acquire>
 8007e2c:	b1f0      	cbz	r0, 8007e6c <_Z23getFont_verdana_20_4bppv+0x58>
 8007e2e:	233f      	movs	r3, #63	; 0x3f
 8007e30:	9309      	str	r3, [sp, #36]	; 0x24
 8007e32:	4b11      	ldr	r3, [pc, #68]	; (8007e78 <_Z23getFont_verdana_20_4bppv+0x64>)
 8007e34:	9308      	str	r3, [sp, #32]
 8007e36:	4b11      	ldr	r3, [pc, #68]	; (8007e7c <_Z23getFont_verdana_20_4bppv+0x68>)
 8007e38:	9307      	str	r3, [sp, #28]
 8007e3a:	2301      	movs	r3, #1
 8007e3c:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007e40:	9304      	str	r3, [sp, #16]
 8007e42:	2304      	movs	r3, #4
 8007e44:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007e48:	2314      	movs	r3, #20
 8007e4a:	490d      	ldr	r1, [pc, #52]	; (8007e80 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8007e4c:	9300      	str	r3, [sp, #0]
 8007e4e:	2243      	movs	r2, #67	; 0x43
 8007e50:	2318      	movs	r3, #24
 8007e52:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007e56:	480b      	ldr	r0, [pc, #44]	; (8007e84 <_Z23getFont_verdana_20_4bppv+0x70>)
 8007e58:	940a      	str	r4, [sp, #40]	; 0x28
 8007e5a:	9401      	str	r4, [sp, #4]
 8007e5c:	f7fd fada 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007e60:	4809      	ldr	r0, [pc, #36]	; (8007e88 <_Z23getFont_verdana_20_4bppv+0x74>)
 8007e62:	f01e fc01 	bl	8026668 <atexit>
 8007e66:	4628      	mov	r0, r5
 8007e68:	f01e fbc0 	bl	80265ec <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8007e6c:	4805      	ldr	r0, [pc, #20]	; (8007e84 <_Z23getFont_verdana_20_4bppv+0x70>)
 8007e6e:	b00f      	add	sp, #60	; 0x3c
 8007e70:	bd30      	pop	{r4, r5, pc}
 8007e72:	bf00      	nop
 8007e74:	20005eb0 	.word	0x20005eb0
 8007e78:	0802ae84 	.word	0x0802ae84
 8007e7c:	0802b174 	.word	0x0802b174
 8007e80:	90236258 	.word	0x90236258
 8007e84:	20005eb4 	.word	0x20005eb4
 8007e88:	08007e11 	.word	0x08007e11

08007e8c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007e8c:	4770      	bx	lr
	...

08007e90 <_Z23getFont_verdana_30_4bppv>:
{
 8007e90:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007e92:	4d17      	ldr	r5, [pc, #92]	; (8007ef0 <_Z23getFont_verdana_30_4bppv+0x60>)
 8007e94:	782c      	ldrb	r4, [r5, #0]
 8007e96:	f3bf 8f5b 	dmb	ish
 8007e9a:	f014 0401 	ands.w	r4, r4, #1
{
 8007e9e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 64, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8007ea0:	d122      	bne.n	8007ee8 <_Z23getFont_verdana_30_4bppv+0x58>
 8007ea2:	4628      	mov	r0, r5
 8007ea4:	f01e fb96 	bl	80265d4 <__cxa_guard_acquire>
 8007ea8:	b1f0      	cbz	r0, 8007ee8 <_Z23getFont_verdana_30_4bppv+0x58>
 8007eaa:	233f      	movs	r3, #63	; 0x3f
 8007eac:	9309      	str	r3, [sp, #36]	; 0x24
 8007eae:	4b11      	ldr	r3, [pc, #68]	; (8007ef4 <_Z23getFont_verdana_30_4bppv+0x64>)
 8007eb0:	9308      	str	r3, [sp, #32]
 8007eb2:	4b11      	ldr	r3, [pc, #68]	; (8007ef8 <_Z23getFont_verdana_30_4bppv+0x68>)
 8007eb4:	9307      	str	r3, [sp, #28]
 8007eb6:	2301      	movs	r3, #1
 8007eb8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8007ebc:	9304      	str	r3, [sp, #16]
 8007ebe:	2304      	movs	r3, #4
 8007ec0:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007ec4:	231e      	movs	r3, #30
 8007ec6:	490d      	ldr	r1, [pc, #52]	; (8007efc <_Z23getFont_verdana_30_4bppv+0x6c>)
 8007ec8:	9300      	str	r3, [sp, #0]
 8007eca:	2240      	movs	r2, #64	; 0x40
 8007ecc:	2324      	movs	r3, #36	; 0x24
 8007ece:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007ed2:	480b      	ldr	r0, [pc, #44]	; (8007f00 <_Z23getFont_verdana_30_4bppv+0x70>)
 8007ed4:	940a      	str	r4, [sp, #40]	; 0x28
 8007ed6:	9401      	str	r4, [sp, #4]
 8007ed8:	f7fd fa9c 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007edc:	4809      	ldr	r0, [pc, #36]	; (8007f04 <_Z23getFont_verdana_30_4bppv+0x74>)
 8007ede:	f01e fbc3 	bl	8026668 <atexit>
 8007ee2:	4628      	mov	r0, r5
 8007ee4:	f01e fb82 	bl	80265ec <__cxa_guard_release>
    return verdana_30_4bpp;
}
 8007ee8:	4805      	ldr	r0, [pc, #20]	; (8007f00 <_Z23getFont_verdana_30_4bppv+0x70>)
 8007eea:	b00f      	add	sp, #60	; 0x3c
 8007eec:	bd30      	pop	{r4, r5, pc}
 8007eee:	bf00      	nop
 8007ef0:	20005ee0 	.word	0x20005ee0
 8007ef4:	0802afa0 	.word	0x0802afa0
 8007ef8:	0802b178 	.word	0x0802b178
 8007efc:	90236604 	.word	0x90236604
 8007f00:	20005ee4 	.word	0x20005ee4
 8007f04:	08007e8d 	.word	0x08007e8d

08007f08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f08:	4770      	bx	lr
	...

08007f0c <_Z23getFont_verdana_40_4bppv>:
{
 8007f0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f0e:	4d17      	ldr	r5, [pc, #92]	; (8007f6c <_Z23getFont_verdana_40_4bppv+0x60>)
 8007f10:	782c      	ldrb	r4, [r5, #0]
 8007f12:	f3bf 8f5b 	dmb	ish
 8007f16:	f014 0401 	ands.w	r4, r4, #1
{
 8007f1a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 11, 41, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8007f1c:	d122      	bne.n	8007f64 <_Z23getFont_verdana_40_4bppv+0x58>
 8007f1e:	4628      	mov	r0, r5
 8007f20:	f01e fb58 	bl	80265d4 <__cxa_guard_acquire>
 8007f24:	b1f0      	cbz	r0, 8007f64 <_Z23getFont_verdana_40_4bppv+0x58>
 8007f26:	233f      	movs	r3, #63	; 0x3f
 8007f28:	9309      	str	r3, [sp, #36]	; 0x24
 8007f2a:	4b11      	ldr	r3, [pc, #68]	; (8007f70 <_Z23getFont_verdana_40_4bppv+0x64>)
 8007f2c:	9308      	str	r3, [sp, #32]
 8007f2e:	4b11      	ldr	r3, [pc, #68]	; (8007f74 <_Z23getFont_verdana_40_4bppv+0x68>)
 8007f30:	4911      	ldr	r1, [pc, #68]	; (8007f78 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8007f32:	4812      	ldr	r0, [pc, #72]	; (8007f7c <_Z23getFont_verdana_40_4bppv+0x70>)
 8007f34:	940a      	str	r4, [sp, #40]	; 0x28
 8007f36:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8007f3a:	2201      	movs	r2, #1
 8007f3c:	2304      	movs	r3, #4
 8007f3e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8007f42:	2328      	movs	r3, #40	; 0x28
 8007f44:	9300      	str	r3, [sp, #0]
 8007f46:	220b      	movs	r2, #11
 8007f48:	2329      	movs	r3, #41	; 0x29
 8007f4a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007f4e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8007f52:	9405      	str	r4, [sp, #20]
 8007f54:	f7fd fa5e 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007f58:	4809      	ldr	r0, [pc, #36]	; (8007f80 <_Z23getFont_verdana_40_4bppv+0x74>)
 8007f5a:	f01e fb85 	bl	8026668 <atexit>
 8007f5e:	4628      	mov	r0, r5
 8007f60:	f01e fb44 	bl	80265ec <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8007f64:	4805      	ldr	r0, [pc, #20]	; (8007f7c <_Z23getFont_verdana_40_4bppv+0x70>)
 8007f66:	b00f      	add	sp, #60	; 0x3c
 8007f68:	bd30      	pop	{r4, r5, pc}
 8007f6a:	bf00      	nop
 8007f6c:	20005f10 	.word	0x20005f10
 8007f70:	0802b124 	.word	0x0802b124
 8007f74:	0802b17c 	.word	0x0802b17c
 8007f78:	90236984 	.word	0x90236984
 8007f7c:	20005f14 	.word	0x20005f14
 8007f80:	08007f09 	.word	0x08007f09

08007f84 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_57_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_57_4bpp();

touchgfx::GeneratedFont& getFont_verdana_57_4bpp()
{
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f84:	4770      	bx	lr
	...

08007f88 <_Z23getFont_verdana_57_4bppv>:
{
 8007f88:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f8a:	4d17      	ldr	r5, [pc, #92]	; (8007fe8 <_Z23getFont_verdana_57_4bppv+0x60>)
 8007f8c:	782c      	ldrb	r4, [r5, #0]
 8007f8e:	f3bf 8f5b 	dmb	ish
 8007f92:	f014 0401 	ands.w	r4, r4, #1
{
 8007f96:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_57_4bpp(glyphs_verdana_57_4bpp, 25, 58, 57, 0, 0, 4, 1, 0, 1, unicodes_verdana_57_4bpp, kerning_verdana_57_4bpp, 63, 0, 0, 0);
 8007f98:	d122      	bne.n	8007fe0 <_Z23getFont_verdana_57_4bppv+0x58>
 8007f9a:	4628      	mov	r0, r5
 8007f9c:	f01e fb1a 	bl	80265d4 <__cxa_guard_acquire>
 8007fa0:	b1f0      	cbz	r0, 8007fe0 <_Z23getFont_verdana_57_4bppv+0x58>
 8007fa2:	233f      	movs	r3, #63	; 0x3f
 8007fa4:	9309      	str	r3, [sp, #36]	; 0x24
 8007fa6:	4b11      	ldr	r3, [pc, #68]	; (8007fec <_Z23getFont_verdana_57_4bppv+0x64>)
 8007fa8:	9308      	str	r3, [sp, #32]
 8007faa:	4b11      	ldr	r3, [pc, #68]	; (8007ff0 <_Z23getFont_verdana_57_4bppv+0x68>)
 8007fac:	9307      	str	r3, [sp, #28]
 8007fae:	2301      	movs	r3, #1
 8007fb0:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8007fb4:	9304      	str	r3, [sp, #16]
 8007fb6:	2304      	movs	r3, #4
 8007fb8:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8007fbc:	2339      	movs	r3, #57	; 0x39
 8007fbe:	490d      	ldr	r1, [pc, #52]	; (8007ff4 <_Z23getFont_verdana_57_4bppv+0x6c>)
 8007fc0:	9300      	str	r3, [sp, #0]
 8007fc2:	2219      	movs	r2, #25
 8007fc4:	233a      	movs	r3, #58	; 0x3a
 8007fc6:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8007fca:	480b      	ldr	r0, [pc, #44]	; (8007ff8 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007fcc:	940a      	str	r4, [sp, #40]	; 0x28
 8007fce:	9401      	str	r4, [sp, #4]
 8007fd0:	f7fd fa20 	bl	8005414 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8007fd4:	4809      	ldr	r0, [pc, #36]	; (8007ffc <_Z23getFont_verdana_57_4bppv+0x74>)
 8007fd6:	f01e fb47 	bl	8026668 <atexit>
 8007fda:	4628      	mov	r0, r5
 8007fdc:	f01e fb06 	bl	80265ec <__cxa_guard_release>
    return verdana_57_4bpp;
}
 8007fe0:	4805      	ldr	r0, [pc, #20]	; (8007ff8 <_Z23getFont_verdana_57_4bppv+0x70>)
 8007fe2:	b00f      	add	sp, #60	; 0x3c
 8007fe4:	bd30      	pop	{r4, r5, pc}
 8007fe6:	bf00      	nop
 8007fe8:	20005f40 	.word	0x20005f40
 8007fec:	0802b128 	.word	0x0802b128
 8007ff0:	0802b180 	.word	0x0802b180
 8007ff4:	90236a20 	.word	0x90236a20
 8007ff8:	20005f44 	.word	0x20005f44
 8007ffc:	08007f85 	.word	0x08007f85

08008000 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8008000:	2000      	movs	r0, #0
 8008002:	4770      	bx	lr

08008004 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8008004:	2000      	movs	r0, #0
 8008006:	4770      	bx	lr

08008008 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008008:	b40e      	push	{r1, r2, r3}
 800800a:	b503      	push	{r0, r1, lr}
 800800c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800800e:	2100      	movs	r1, #0
{
 8008010:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8008014:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8008016:	f00d ff05 	bl	8015e24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800801a:	b002      	add	sp, #8
 800801c:	f85d eb04 	ldr.w	lr, [sp], #4
 8008020:	b003      	add	sp, #12
 8008022:	4770      	bx	lr

08008024 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8008024:	b40c      	push	{r2, r3}
 8008026:	b507      	push	{r0, r1, r2, lr}
 8008028:	ab04      	add	r3, sp, #16
 800802a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 800802e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8008030:	f00d fef8 	bl	8015e24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8008034:	b003      	add	sp, #12
 8008036:	f85d eb04 	ldr.w	lr, [sp], #4
 800803a:	b002      	add	sp, #8
 800803c:	4770      	bx	lr
	...

08008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8008040:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8008042:	b510      	push	{r4, lr}
 8008044:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8008046:	b373      	cbz	r3, 80080a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8008048:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 800804a:	b92b      	cbnz	r3, 8008058 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 800804c:	4b18      	ldr	r3, [pc, #96]	; (80080b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 800804e:	4a19      	ldr	r2, [pc, #100]	; (80080b4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8008050:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8008052:	4819      	ldr	r0, [pc, #100]	; (80080b8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8008054:	f01e faea 	bl	802662c <__assert_func>
            return buffer[pos];
 8008058:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 800805a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800805e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8008060:	b30b      	cbz	r3, 80080a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8008062:	f00f fadc 	bl	801761e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8008066:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8008068:	2b01      	cmp	r3, #1
 800806a:	d803      	bhi.n	8008074 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 800806c:	4b13      	ldr	r3, [pc, #76]	; (80080bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800806e:	4a14      	ldr	r2, [pc, #80]	; (80080c0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8008070:	21cb      	movs	r1, #203	; 0xcb
 8008072:	e7ee      	b.n	8008052 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8008074:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8008076:	1c53      	adds	r3, r2, #1
 8008078:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800807a:	2b09      	cmp	r3, #9
 800807c:	4619      	mov	r1, r3
 800807e:	bf88      	it	hi
 8008080:	f1a3 010a 	subhi.w	r1, r3, #10
 8008084:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8008088:	f640 103f 	movw	r0, #2367	; 0x93f
 800808c:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 800808e:	4281      	cmp	r1, r0
 8008090:	d109      	bne.n	80080a6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8008092:	2b0a      	cmp	r3, #10
 8008094:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8008098:	bf28      	it	cs
 800809a:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800809c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80080a0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80080a2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80080a4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80080a6:	4620      	mov	r0, r4
}
 80080a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80080ac:	f00f b9ba 	b.w	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80080b0:	08029750 	.word	0x08029750
 80080b4:	08029759 	.word	0x08029759
 80080b8:	08029804 	.word	0x08029804
 80080bc:	0802984e 	.word	0x0802984e
 80080c0:	0802985c 	.word	0x0802985c

080080c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80080c4:	f00f b975 	b.w	80173b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080080c8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80080c8:	b510      	push	{r4, lr}
 80080ca:	b086      	sub	sp, #24
 80080cc:	ac02      	add	r4, sp, #8
 80080ce:	e884 0006 	stmia.w	r4, {r1, r2}
 80080d2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80080d4:	ab0a      	add	r3, sp, #40	; 0x28
 80080d6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80080d8:	9301      	str	r3, [sp, #4]
 80080da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80080dc:	9300      	str	r3, [sp, #0]
 80080de:	4621      	mov	r1, r4
 80080e0:	9b08      	ldr	r3, [sp, #32]
 80080e2:	f00c fa63 	bl	80145ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 80080e6:	b006      	add	sp, #24
 80080e8:	bd10      	pop	{r4, pc}
	...

080080ec <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 80080ec:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 80080ee:	bb18      	cbnz	r0, 8008138 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 80080f0:	4b12      	ldr	r3, [pc, #72]	; (800813c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 80080f2:	4813      	ldr	r0, [pc, #76]	; (8008140 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 80080f4:	681b      	ldr	r3, [r3, #0]
 80080f6:	4913      	ldr	r1, [pc, #76]	; (8008144 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 80080f8:	b1b3      	cbz	r3, 8008128 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80080fa:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 80080fc:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 80080fe:	441a      	add	r2, r3
 8008100:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8008102:	685a      	ldr	r2, [r3, #4]
 8008104:	441a      	add	r2, r3
 8008106:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8008108:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 800810a:	4b0f      	ldr	r3, [pc, #60]	; (8008148 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 800810c:	2200      	movs	r2, #0
 800810e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8008110:	f000 f838 	bl	8008184 <_ZN17TypedTextDatabase8getFontsEv>
 8008114:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8008116:	f000 f833 	bl	8008180 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 800811a:	4b0c      	ldr	r3, [pc, #48]	; (800814c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800811c:	601c      	str	r4, [r3, #0]
        fonts = f;
 800811e:	4b0c      	ldr	r3, [pc, #48]	; (8008150 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8008120:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8008122:	4b0c      	ldr	r3, [pc, #48]	; (8008154 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8008124:	8018      	strh	r0, [r3, #0]
    }
}
 8008126:	e007      	b.n	8008138 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8008128:	4b0b      	ldr	r3, [pc, #44]	; (8008158 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 800812a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800812c:	4b0b      	ldr	r3, [pc, #44]	; (800815c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 800812e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8008130:	4b0b      	ldr	r3, [pc, #44]	; (8008160 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8008132:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8008134:	2c00      	cmp	r4, #0
 8008136:	d1e8      	bne.n	800810a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8008138:	bd38      	pop	{r3, r4, r5, pc}
 800813a:	bf00      	nop
 800813c:	20005f70 	.word	0x20005f70
 8008140:	20005f74 	.word	0x20005f74
 8008144:	20005f78 	.word	0x20005f78
 8008148:	20005f7c 	.word	0x20005f7c
 800814c:	2000ef74 	.word	0x2000ef74
 8008150:	2000ef7c 	.word	0x2000ef7c
 8008154:	2000ef78 	.word	0x2000ef78
 8008158:	90236d84 	.word	0x90236d84
 800815c:	90236b80 	.word	0x90236b80
 8008160:	902371f4 	.word	0x902371f4

08008164 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8008164:	4b04      	ldr	r3, [pc, #16]	; (8008178 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8008166:	681b      	ldr	r3, [r3, #0]
 8008168:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800816c:	4b03      	ldr	r3, [pc, #12]	; (800817c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 800816e:	681b      	ldr	r3, [r3, #0]
}
 8008170:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8008174:	4770      	bx	lr
 8008176:	bf00      	nop
 8008178:	20005f78 	.word	0x20005f78
 800817c:	20005f74 	.word	0x20005f74

08008180 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8008180:	2081      	movs	r0, #129	; 0x81
 8008182:	4770      	bx	lr

08008184 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8008184:	4800      	ldr	r0, [pc, #0]	; (8008188 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8008186:	4770      	bx	lr
 8008188:	20005f80 	.word	0x20005f80

0800818c <_GLOBAL__sub_I_touchgfx_fonts>:
    case 8:
        touchgfx_fonts[8] = &(getFont_verdana_57_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800818c:	b510      	push	{r4, lr}
    &(getFont_verdana_30_4bpp()),
 800818e:	f7ff fe7f 	bl	8007e90 <_Z23getFont_verdana_30_4bppv>
};
 8008192:	4c0d      	ldr	r4, [pc, #52]	; (80081c8 <_GLOBAL__sub_I_touchgfx_fonts+0x3c>)
 8008194:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_10_4bpp()),
 8008196:	f7ff fd45 	bl	8007c24 <_Z23getFont_verdana_10_4bppv>
};
 800819a:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_100_4bpp()),
 800819c:	f7ff fd04 	bl	8007ba8 <_Z24getFont_verdana_100_4bppv>
};
 80081a0:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_40_4bpp()),
 80081a2:	f7ff feb3 	bl	8007f0c <_Z23getFont_verdana_40_4bppv>
};
 80081a6:	60e0      	str	r0, [r4, #12]
    &(getFont_verdana_20_4bpp()),
 80081a8:	f7ff fe34 	bl	8007e14 <_Z23getFont_verdana_20_4bppv>
};
 80081ac:	6120      	str	r0, [r4, #16]
    &(getFont_verdana_15_4bpp()),
 80081ae:	f7ff fdb5 	bl	8007d1c <_Z23getFont_verdana_15_4bppv>
};
 80081b2:	6160      	str	r0, [r4, #20]
    &(getFont_verdana_120_4bpp()),
 80081b4:	f7ff fd74 	bl	8007ca0 <_Z24getFont_verdana_120_4bppv>
};
 80081b8:	61a0      	str	r0, [r4, #24]
    &(getFont_verdana_180_4bpp()),
 80081ba:	f7ff fded 	bl	8007d98 <_Z24getFont_verdana_180_4bppv>
};
 80081be:	61e0      	str	r0, [r4, #28]
    &(getFont_verdana_57_4bpp())
 80081c0:	f7ff fee2 	bl	8007f88 <_Z23getFont_verdana_57_4bppv>
};
 80081c4:	6220      	str	r0, [r4, #32]
} // namespace TypedTextDatabase
 80081c6:	bd10      	pop	{r4, pc}
 80081c8:	20005f80 	.word	0x20005f80

080081cc <_ZN8touchgfx8DrawableC1Ev>:
          visible(true)
 80081cc:	4a07      	ldr	r2, [pc, #28]	; (80081ec <_ZN8touchgfx8DrawableC1Ev+0x20>)
 80081ce:	6002      	str	r2, [r0, #0]
        : x(0), y(0), width(0), height(0)
 80081d0:	2200      	movs	r2, #0
 80081d2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80081d6:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80081da:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80081de:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80081e2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80081e6:	8482      	strh	r2, [r0, #36]	; 0x24
    }
 80081e8:	4770      	bx	lr
 80081ea:	bf00      	nop
 80081ec:	0802a620 	.word	0x0802a620

080081f0 <_ZN13ModelListener11gearChangedEv>:
    virtual void gearChanged() {};
 80081f0:	4770      	bx	lr

080081f2 <_ZN13ModelListener11infoChangedEv>:
    virtual void infoChanged() {};
 80081f2:	4770      	bx	lr

080081f4 <_ZN13ModelListener19debugMessageChangedEv>:
    virtual void debugMessageChanged() {};
 80081f4:	4770      	bx	lr

080081f6 <_ZN26CompetitionScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~CompetitionScreenPresenter() {}
 80081f6:	4770      	bx	lr

080081f8 <_ZThn4_N26CompetitionScreenPresenterD1Ev>:
 80081f8:	3804      	subs	r0, #4
 80081fa:	4770      	bx	lr

080081fc <_ZN26CompetitionScreenPresenter8activateEv>:

}

void CompetitionScreenPresenter::activate()
{
	missionChanged();
 80081fc:	6803      	ldr	r3, [r0, #0]
 80081fe:	691b      	ldr	r3, [r3, #16]
 8008200:	4718      	bx	r3

08008202 <_ZN26CompetitionScreenPresenter10deactivateEv>:
}

void CompetitionScreenPresenter::deactivate()
{

}
 8008202:	4770      	bx	lr

08008204 <_ZN26CompetitionScreenPresenterD0Ev>:
 8008204:	b510      	push	{r4, lr}
 8008206:	2110      	movs	r1, #16
 8008208:	4604      	mov	r4, r0
 800820a:	f01e f9e1 	bl	80265d0 <_ZdlPvj>
 800820e:	4620      	mov	r0, r4
 8008210:	bd10      	pop	{r4, pc}

08008212 <_ZThn4_N26CompetitionScreenPresenterD0Ev>:
 8008212:	f1a0 0004 	sub.w	r0, r0, #4
 8008216:	e7f5      	b.n	8008204 <_ZN26CompetitionScreenPresenterD0Ev>

08008218 <_ZN26CompetitionScreenPresenter14missionChangedEv>:
    void requestChassisReset();

    void requestMission(MmrMission missionType);
    void commonAfterRequestMission(MmrMission missionType);

    const char* getMission() { return mission; }
 8008218:	6881      	ldr	r1, [r0, #8]

void CompetitionScreenPresenter::missionChanged() {
	view.setMission(model->getMission());
 800821a:	68c0      	ldr	r0, [r0, #12]
 800821c:	3108      	adds	r1, #8
 800821e:	f000 b837 	b.w	8008290 <_ZN21CompetitionScreenView10setMissionEPKc>

08008222 <_ZThn4_N26CompetitionScreenPresenter14missionChangedEv>:

    virtual void missionChanged();
 8008222:	f1a0 0004 	sub.w	r0, r0, #4
 8008226:	f7ff bff7 	b.w	8008218 <_ZN26CompetitionScreenPresenter14missionChangedEv>
	...

0800822c <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView>:
CompetitionScreenPresenter::CompetitionScreenPresenter(CompetitionScreenView& v)
 800822c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800822e:	2200      	movs	r2, #0
 8008230:	6082      	str	r2, [r0, #8]
    : view(v)
 8008232:	4a04      	ldr	r2, [pc, #16]	; (8008244 <_ZN26CompetitionScreenPresenterC1ER21CompetitionScreenView+0x18>)
 8008234:	60c1      	str	r1, [r0, #12]
 8008236:	f102 0408 	add.w	r4, r2, #8
 800823a:	3224      	adds	r2, #36	; 0x24
 800823c:	6004      	str	r4, [r0, #0]
 800823e:	6042      	str	r2, [r0, #4]
}
 8008240:	bd10      	pop	{r4, pc}
 8008242:	bf00      	nop
 8008244:	08029930 	.word	0x08029930

08008248 <_ZN21CompetitionScreenView14tearDownScreenEv>:
}

void CompetitionScreenView::tearDownScreen()
{
    CompetitionScreenViewBase::tearDownScreen();
}
 8008248:	4770      	bx	lr
	...

0800824c <_ZN21CompetitionScreenViewD1Ev>:

class CompetitionScreenView : public CompetitionScreenViewBase
{
public:
    CompetitionScreenView();
    virtual ~CompetitionScreenView() {}
 800824c:	b510      	push	{r4, lr}
 800824e:	4b03      	ldr	r3, [pc, #12]	; (800825c <_ZN21CompetitionScreenViewD1Ev+0x10>)
 8008250:	6003      	str	r3, [r0, #0]
 8008252:	4604      	mov	r4, r0
 8008254:	f7fa fcaf 	bl	8002bb6 <_ZN25CompetitionScreenViewBaseD1Ev>
 8008258:	4620      	mov	r0, r4
 800825a:	bd10      	pop	{r4, pc}
 800825c:	08029974 	.word	0x08029974

08008260 <_ZN21CompetitionScreenViewD0Ev>:
 8008260:	b510      	push	{r4, lr}
 8008262:	4604      	mov	r4, r0
 8008264:	f7ff fff2 	bl	800824c <_ZN21CompetitionScreenViewD1Ev>
 8008268:	4620      	mov	r0, r4
 800826a:	f44f 71a8 	mov.w	r1, #336	; 0x150
 800826e:	f01e f9af 	bl	80265d0 <_ZdlPvj>
 8008272:	4620      	mov	r0, r4
 8008274:	bd10      	pop	{r4, pc}
	...

08008278 <_ZN21CompetitionScreenViewC1Ev>:
CompetitionScreenView::CompetitionScreenView() { }
 8008278:	b510      	push	{r4, lr}
 800827a:	4604      	mov	r4, r0
 800827c:	f7fa fd7c 	bl	8002d78 <_ZN25CompetitionScreenViewBaseC1Ev>
 8008280:	4b01      	ldr	r3, [pc, #4]	; (8008288 <_ZN21CompetitionScreenViewC1Ev+0x10>)
 8008282:	6023      	str	r3, [r4, #0]
 8008284:	4620      	mov	r0, r4
 8008286:	bd10      	pop	{r4, pc}
 8008288:	08029974 	.word	0x08029974

0800828c <_ZN21CompetitionScreenView11setupScreenEv>:
    CompetitionScreenViewBase::setupScreen();
 800828c:	f7fa bc94 	b.w	8002bb8 <_ZN25CompetitionScreenViewBase11setupScreenEv>

08008290 <_ZN21CompetitionScreenView10setMissionEPKc>:

void CompetitionScreenView::setMission(const char *mission) {
 8008290:	b510      	push	{r4, lr}
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 8008292:	220f      	movs	r2, #15
void CompetitionScreenView::setMission(const char *mission) {
 8008294:	4604      	mov	r4, r0
	Unicode::strncpy(txtMissionBuffer, mission, TXTMISSION_SIZE);
 8008296:	f500 7090 	add.w	r0, r0, #288	; 0x120
 800829a:	f00f fc08 	bl	8017aae <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	txtMission.invalidate();
 800829e:	f104 00d4 	add.w	r0, r4, #212	; 0xd4
}
 80082a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtMission.invalidate();
 80082a6:	f00d bee7 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>

080082aa <_ZN13ModelListener14missionChangedEv>:
    virtual void missionChanged() {};
 80082aa:	4770      	bx	lr

080082ac <_ZN21DriverScreenPresenterD1Ev>:
    virtual void deactivate();

    virtual void gearChanged();
    virtual void infoChanged();

    virtual ~DriverScreenPresenter() {}
 80082ac:	4770      	bx	lr

080082ae <_ZThn4_N21DriverScreenPresenterD1Ev>:
 80082ae:	3804      	subs	r0, #4
 80082b0:	4770      	bx	lr

080082b2 <_ZN21DriverScreenPresenter8activateEv>:
{

}

void DriverScreenPresenter::activate()
{
 80082b2:	b510      	push	{r4, lr}
	infoChanged();
 80082b4:	6803      	ldr	r3, [r0, #0]
{
 80082b6:	4604      	mov	r4, r0
	infoChanged();
 80082b8:	695b      	ldr	r3, [r3, #20]
 80082ba:	4798      	blx	r3
	gearChanged();
 80082bc:	6823      	ldr	r3, [r4, #0]
 80082be:	4620      	mov	r0, r4
 80082c0:	691b      	ldr	r3, [r3, #16]
}
 80082c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	gearChanged();
 80082c6:	4718      	bx	r3

080082c8 <_ZN21DriverScreenPresenter10deactivateEv>:

void DriverScreenPresenter::deactivate()
{

}
 80082c8:	4770      	bx	lr

080082ca <_ZN21DriverScreenPresenterD0Ev>:
 80082ca:	b510      	push	{r4, lr}
 80082cc:	2110      	movs	r1, #16
 80082ce:	4604      	mov	r4, r0
 80082d0:	f01e f97e 	bl	80265d0 <_ZdlPvj>
 80082d4:	4620      	mov	r0, r4
 80082d6:	bd10      	pop	{r4, pc}

080082d8 <_ZThn4_N21DriverScreenPresenterD0Ev>:
 80082d8:	f1a0 0004 	sub.w	r0, r0, #4
 80082dc:	e7f5      	b.n	80082ca <_ZN21DriverScreenPresenterD0Ev>

080082de <_ZN21DriverScreenPresenter11gearChangedEv>:
    int getGear() { return gear; }
 80082de:	6883      	ldr	r3, [r0, #8]

void DriverScreenPresenter::gearChanged() {
	view.setGear(model->getGear());
 80082e0:	68c0      	ldr	r0, [r0, #12]
 80082e2:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80082e6:	f000 b8a3 	b.w	8008430 <_ZN16DriverScreenView7setGearEi>

080082ea <_ZThn4_N21DriverScreenPresenter11gearChangedEv>:
    virtual void gearChanged();
 80082ea:	f1a0 0004 	sub.w	r0, r0, #4
 80082ee:	f7ff bff6 	b.w	80082de <_ZN21DriverScreenPresenter11gearChangedEv>

080082f2 <_ZN21DriverScreenPresenter11infoChangedEv>:
 80082f2:	6883      	ldr	r3, [r0, #8]
}

void DriverScreenPresenter::infoChanged() {
 80082f4:	b510      	push	{r4, lr}
 80082f6:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 80082f8:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 80082fc:	68c0      	ldr	r0, [r0, #12]
 80082fe:	f000 f897 	bl	8008430 <_ZN16DriverScreenView7setGearEi>
    int getRpm() { return rpm; }
 8008302:	68a3      	ldr	r3, [r4, #8]

	view.setRpm(model->getRpm());
 8008304:	68e0      	ldr	r0, [r4, #12]
 8008306:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800830a:	f000 f8a9 	bl	8008460 <_ZN16DriverScreenView6setRpmEi>
    int getLap() { return lap; }
 800830e:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 8008310:	68e0      	ldr	r0, [r4, #12]
 8008312:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0
 8008316:	f000 f8b5 	bl	8008484 <_ZN16DriverScreenView6setLapEi>
    int getSpeed() { return speed; }
 800831a:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 800831c:	68e0      	ldr	r0, [r4, #12]
 800831e:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 8008322:	f000 f8c1 	bl	80084a8 <_ZN16DriverScreenView8setSpeedEi>
    int getRES() { return RES; }
 8008326:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 8008328:	68e0      	ldr	r0, [r4, #12]
 800832a:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 800832e:	f000 f8cd 	bl	80084cc <_ZN16DriverScreenView6setRESEi>
    bool getLC() { return LC; }
 8008332:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 8008334:	68e0      	ldr	r0, [r4, #12]
 8008336:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 800833a:	f000 f8eb 	bl	8008514 <_ZN16DriverScreenView5setLCEb>
    bool getCLT() { return CLT; }
 800833e:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 8008340:	68e0      	ldr	r0, [r4, #12]
 8008342:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 8008346:	f000 f8ff 	bl	8008548 <_ZN16DriverScreenView6setCLTEb>
    int getT_water() { return T_water; }
 800834a:	68a3      	ldr	r3, [r4, #8]

	view.setTmot(model->getT_water());
 800834c:	68e0      	ldr	r0, [r4, #12]
 800834e:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 8008352:	f000 f913 	bl	800857c <_ZN16DriverScreenView7setTmotEi>
    int getT_oil() { return T_oil; }
 8008356:	68a3      	ldr	r3, [r4, #8]
	view.setToil(model->getT_oil());
 8008358:	68e0      	ldr	r0, [r4, #12]
 800835a:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 800835e:	f000 f91f 	bl	80085a0 <_ZN16DriverScreenView7setToilEi>
    float getOrinTemperature() { return orinTemperature; }
 8008362:	68a3      	ldr	r3, [r4, #8]
	view.setTorin(model->getOrinTemperature());
 8008364:	68e0      	ldr	r0, [r4, #12]
 8008366:	edd3 7a31 	vldr	s15, [r3, #196]	; 0xc4
 800836a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800836e:	ee17 1a90 	vmov	r1, s15
 8008372:	f000 f927 	bl	80085c4 <_ZN16DriverScreenView8setTorinEi>
    float getP_oil() { return P_oil; }
 8008376:	68a3      	ldr	r3, [r4, #8]

	view.setPoil(model->getP_oil());
 8008378:	68e0      	ldr	r0, [r4, #12]
 800837a:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 800837e:	f000 f933 	bl	80085e8 <_ZN16DriverScreenView7setPoilEf>
    float getP_fuel() { return P_fuel; }
 8008382:	68a3      	ldr	r3, [r4, #8]
	view.setPfuel(model->getP_fuel());
 8008384:	68e0      	ldr	r0, [r4, #12]
 8008386:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 800838a:	f000 f941 	bl	8008610 <_ZN16DriverScreenView8setPfuelEf>
    int getFrontBrakePerc() { return frontBrakePerc; }
 800838e:	68a3      	ldr	r3, [r4, #8]
	view.setPbrake(model->getFrontBrakePerc());
 8008390:	68e0      	ldr	r0, [r4, #12]
 8008392:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 8008396:	f000 f94f 	bl	8008638 <_ZN16DriverScreenView9setPbrakeEi>
    int getThrottle_perc() { return throttle_perc; }
 800839a:	68a3      	ldr	r3, [r4, #8]

	view.setTPS(model->getThrottle_perc());
 800839c:	68e0      	ldr	r0, [r4, #12]
 800839e:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 80083a2:	f000 f95b 	bl	800865c <_ZN16DriverScreenView6setTPSEi>
    float getBattery_v() { return battery_v; }
 80083a6:	68a3      	ldr	r3, [r4, #8]

	view.setBat12(model->getBattery_v());
 80083a8:	68e0      	ldr	r0, [r4, #12]
 80083aa:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 80083ae:	f000 f967 	bl	8008680 <_ZN16DriverScreenView8setBat12Ef>
    float getVoltage24v() { return voltage24v; }
 80083b2:	68a3      	ldr	r3, [r4, #8]
	view.setBat24(model->getVoltage24v());
 80083b4:	68e0      	ldr	r0, [r4, #12]
 80083b6:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
}
 80083ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setBat24(model->getVoltage24v());
 80083be:	f000 b973 	b.w	80086a8 <_ZN16DriverScreenView8setBat24Ef>

080083c2 <_ZThn4_N21DriverScreenPresenter11infoChangedEv>:
    virtual void infoChanged();
 80083c2:	f1a0 0004 	sub.w	r0, r0, #4
 80083c6:	f7ff bf94 	b.w	80082f2 <_ZN21DriverScreenPresenter11infoChangedEv>
	...

080083cc <_ZN21DriverScreenPresenterC1ER16DriverScreenView>:
DriverScreenPresenter::DriverScreenPresenter(DriverScreenView& v)
 80083cc:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 80083ce:	2200      	movs	r2, #0
 80083d0:	6082      	str	r2, [r0, #8]
    : view(v)
 80083d2:	4a04      	ldr	r2, [pc, #16]	; (80083e4 <_ZN21DriverScreenPresenterC1ER16DriverScreenView+0x18>)
 80083d4:	60c1      	str	r1, [r0, #12]
 80083d6:	f102 0408 	add.w	r4, r2, #8
 80083da:	3228      	adds	r2, #40	; 0x28
 80083dc:	6004      	str	r4, [r0, #0]
 80083de:	6042      	str	r2, [r0, #4]
}
 80083e0:	bd10      	pop	{r4, pc}
 80083e2:	bf00      	nop
 80083e4:	080299a0 	.word	0x080299a0

080083e8 <_ZN16DriverScreenView14tearDownScreenEv>:
    DriverScreenViewBase::setupScreen();
}

void DriverScreenView::tearDownScreen() {
    DriverScreenViewBase::tearDownScreen();
}
 80083e8:	4770      	bx	lr
	...

080083ec <_ZN16DriverScreenViewD1Ev>:

class DriverScreenView : public DriverScreenViewBase
{
public:
    DriverScreenView();
    virtual ~DriverScreenView() {}
 80083ec:	b510      	push	{r4, lr}
 80083ee:	4b03      	ldr	r3, [pc, #12]	; (80083fc <_ZN16DriverScreenViewD1Ev+0x10>)
 80083f0:	6003      	str	r3, [r0, #0]
 80083f2:	4604      	mov	r4, r0
 80083f4:	f7fa fdb8 	bl	8002f68 <_ZN20DriverScreenViewBaseD1Ev>
 80083f8:	4620      	mov	r0, r4
 80083fa:	bd10      	pop	{r4, pc}
 80083fc:	080299f8 	.word	0x080299f8

08008400 <_ZN16DriverScreenViewD0Ev>:
 8008400:	b510      	push	{r4, lr}
 8008402:	4604      	mov	r4, r0
 8008404:	f7ff fff2 	bl	80083ec <_ZN16DriverScreenViewD1Ev>
 8008408:	4620      	mov	r0, r4
 800840a:	f640 411c 	movw	r1, #3100	; 0xc1c
 800840e:	f01e f8df 	bl	80265d0 <_ZdlPvj>
 8008412:	4620      	mov	r0, r4
 8008414:	bd10      	pop	{r4, pc}
	...

08008418 <_ZN16DriverScreenViewC1Ev>:
DriverScreenView::DriverScreenView() {}
 8008418:	b510      	push	{r4, lr}
 800841a:	4604      	mov	r4, r0
 800841c:	f7fa fe3c 	bl	8003098 <_ZN20DriverScreenViewBaseC1Ev>
 8008420:	4b01      	ldr	r3, [pc, #4]	; (8008428 <_ZN16DriverScreenViewC1Ev+0x10>)
 8008422:	6023      	str	r3, [r4, #0]
 8008424:	4620      	mov	r0, r4
 8008426:	bd10      	pop	{r4, pc}
 8008428:	080299f8 	.word	0x080299f8

0800842c <_ZN16DriverScreenView11setupScreenEv>:
    DriverScreenViewBase::setupScreen();
 800842c:	f7fa bd9d 	b.w	8002f6a <_ZN20DriverScreenViewBase11setupScreenEv>

08008430 <_ZN16DriverScreenView7setGearEi>:

void DriverScreenView::setGear(int gear) {
 8008430:	b510      	push	{r4, lr}
	if (gear == 0) {
 8008432:	460b      	mov	r3, r1
void DriverScreenView::setGear(int gear) {
 8008434:	4604      	mov	r4, r0
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 8008436:	f600 3098 	addw	r0, r0, #2968	; 0xb98
	if (gear == 0) {
 800843a:	b951      	cbnz	r1, 8008452 <_ZN16DriverScreenView7setGearEi+0x22>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 800843c:	4a06      	ldr	r2, [pc, #24]	; (8008458 <_ZN16DriverScreenView7setGearEi+0x28>)
 800843e:	234e      	movs	r3, #78	; 0x4e
	}
	else {
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 8008440:	2102      	movs	r1, #2
 8008442:	f00f fea1 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	}

	txtGear.invalidate();
 8008446:	f204 405c 	addw	r0, r4, #1116	; 0x45c
}
 800844a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtGear.invalidate();
 800844e:	f00d be13 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 8008452:	4a02      	ldr	r2, [pc, #8]	; (800845c <_ZN16DriverScreenView7setGearEi+0x2c>)
 8008454:	e7f4      	b.n	8008440 <_ZN16DriverScreenView7setGearEi+0x10>
 8008456:	bf00      	nop
 8008458:	080299e0 	.word	0x080299e0
 800845c:	080299e3 	.word	0x080299e3

08008460 <_ZN16DriverScreenView6setRpmEi>:

void DriverScreenView::setRpm(int rpm) {
 8008460:	b510      	push	{r4, lr}
 8008462:	460b      	mov	r3, r1
 8008464:	4604      	mov	r4, r0
    Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%d", rpm);
 8008466:	4a06      	ldr	r2, [pc, #24]	; (8008480 <_ZN16DriverScreenView6setRpmEi+0x20>)
 8008468:	2106      	movs	r1, #6
 800846a:	f600 309c 	addw	r0, r0, #2972	; 0xb9c
 800846e:	f00f fe8b 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtRpm.invalidate();
 8008472:	f504 6095 	add.w	r0, r4, #1192	; 0x4a8
}
 8008476:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtRpm.invalidate();
 800847a:	f00d bdfd 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800847e:	bf00      	nop
 8008480:	080299e3 	.word	0x080299e3

08008484 <_ZN16DriverScreenView6setLapEi>:

void DriverScreenView::setLap(int lap) {
 8008484:	b510      	push	{r4, lr}
 8008486:	460b      	mov	r3, r1
 8008488:	4604      	mov	r4, r0
    Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 800848a:	4a06      	ldr	r2, [pc, #24]	; (80084a4 <_ZN16DriverScreenView6setLapEi+0x20>)
 800848c:	2103      	movs	r1, #3
 800848e:	f600 30f4 	addw	r0, r0, #3060	; 0xbf4
 8008492:	f00f fe79 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtLap.invalidate();
 8008496:	f504 6030 	add.w	r0, r4, #2816	; 0xb00
}
 800849a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtLap.invalidate();
 800849e:	f00d bdeb 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80084a2:	bf00      	nop
 80084a4:	080299e3 	.word	0x080299e3

080084a8 <_ZN16DriverScreenView8setSpeedEi>:

void DriverScreenView::setSpeed(int speed) {
 80084a8:	b510      	push	{r4, lr}
 80084aa:	460b      	mov	r3, r1
 80084ac:	4604      	mov	r4, r0
    Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%d", speed);
 80084ae:	4a06      	ldr	r2, [pc, #24]	; (80084c8 <_ZN16DriverScreenView8setSpeedEi+0x20>)
 80084b0:	2108      	movs	r1, #8
 80084b2:	f600 30fa 	addw	r0, r0, #3066	; 0xbfa
 80084b6:	f00f fe67 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtSpeed.invalidate();
 80084ba:	f604 304c 	addw	r0, r4, #2892	; 0xb4c
}
 80084be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtSpeed.invalidate();
 80084c2:	f00d bdd9 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80084c6:	bf00      	nop
 80084c8:	080299e3 	.word	0x080299e3

080084cc <_ZN16DriverScreenView6setRESEi>:

void DriverScreenView::setRES(int resVal) {
	switch (resVal) {
 80084cc:	2901      	cmp	r1, #1
void DriverScreenView::setRES(int resVal) {
 80084ce:	b510      	push	{r4, lr}
 80084d0:	4604      	mov	r4, r0
	switch (resVal) {
 80084d2:	d008      	beq.n	80084e6 <_ZN16DriverScreenView6setRESEi+0x1a>
 80084d4:	2903      	cmp	r1, #3
 80084d6:	d018      	beq.n	800850a <_ZN16DriverScreenView6setRESEi+0x3e>
 80084d8:	b969      	cbnz	r1, 80084f6 <_ZN16DriverScreenView6setRESEi+0x2a>
 80084da:	4b0d      	ldr	r3, [pc, #52]	; (8008510 <_ZN16DriverScreenView6setRESEi+0x44>)
 80084dc:	f8c4 3248 	str.w	r3, [r4, #584]	; 0x248
        color = newColor;
 80084e0:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084e4:	e005      	b.n	80084f2 <_ZN16DriverScreenView6setRESEi+0x26>
 80084e6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80084ea:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
 80084ee:	f04f 33ff 	mov.w	r3, #4294967295
 80084f2:	f8c4 35b8 	str.w	r3, [r4, #1464]	; 0x5b8
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		break;
	}

	boxRES.invalidate();
 80084f6:	f504 7008 	add.w	r0, r4, #544	; 0x220
 80084fa:	f00d fdbd 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 80084fe:	f504 60b1 	add.w	r0, r4, #1416	; 0x588
}
 8008502:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 8008506:	f00d bdb7 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800850a:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 800850e:	e7e5      	b.n	80084dc <_ZN16DriverScreenView6setRESEi+0x10>
 8008510:	ffff0000 	.word	0xffff0000

08008514 <_ZN16DriverScreenView5setLCEb>:

void DriverScreenView::setLC(bool isLcOn) {
 8008514:	b510      	push	{r4, lr}
 8008516:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800851a:	4604      	mov	r4, r0
	if (isLcOn) {
 800851c:	b179      	cbz	r1, 800853e <_ZN16DriverScreenView5setLCEb+0x2a>
 800851e:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 8008522:	f8c0 2178 	str.w	r2, [r0, #376]	; 0x178
	else {
		boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelLC.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxLC.invalidate();
 8008526:	f504 70a8 	add.w	r0, r4, #336	; 0x150
 800852a:	f8c4 3570 	str.w	r3, [r4, #1392]	; 0x570
 800852e:	f00d fda3 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 8008532:	f504 60a8 	add.w	r0, r4, #1344	; 0x540
}
 8008536:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 800853a:	f00d bd9d 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800853e:	f8c0 3178 	str.w	r3, [r0, #376]	; 0x178
 8008542:	f04f 33ff 	mov.w	r3, #4294967295
 8008546:	e7ee      	b.n	8008526 <_ZN16DriverScreenView5setLCEb+0x12>

08008548 <_ZN16DriverScreenView6setCLTEb>:

void DriverScreenView::setCLT(bool isCltPulled) {
 8008548:	b510      	push	{r4, lr}
 800854a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800854e:	4604      	mov	r4, r0
	if (isCltPulled) {
 8008550:	b179      	cbz	r1, 8008572 <_ZN16DriverScreenView6setCLTEb+0x2a>
 8008552:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 8008556:	f8c0 21e0 	str.w	r2, [r0, #480]	; 0x1e0
	else {
		boxCLT.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
		labelCLT.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
	}

	boxCLT.invalidate();
 800855a:	f504 70dc 	add.w	r0, r4, #440	; 0x1b8
 800855e:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8008562:	f00d fd89 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelCLT.invalidate();
 8008566:	f504 60ba 	add.w	r0, r4, #1488	; 0x5d0
}
 800856a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelCLT.invalidate();
 800856e:	f00d bd83 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008572:	f8c0 31e0 	str.w	r3, [r0, #480]	; 0x1e0
 8008576:	f04f 33ff 	mov.w	r3, #4294967295
 800857a:	e7ee      	b.n	800855a <_ZN16DriverScreenView6setCLTEb+0x12>

0800857c <_ZN16DriverScreenView7setTmotEi>:


void DriverScreenView::setTmot(int motTemp) {
 800857c:	b510      	push	{r4, lr}
 800857e:	460b      	mov	r3, r1
 8008580:	4604      	mov	r4, r0
    Unicode::snprintf(txtTmotBuffer, TXTTMOT_SIZE, "%d", motTemp);
 8008582:	4a06      	ldr	r2, [pc, #24]	; (800859c <_ZN16DriverScreenView7setTmotEi+0x20>)
 8008584:	2104      	movs	r1, #4
 8008586:	f600 30a8 	addw	r0, r0, #2984	; 0xba8
 800858a:	f00f fdfd 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTmot.invalidate();
 800858e:	f204 40f4 	addw	r0, r4, #1268	; 0x4f4
}
 8008592:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTmot.invalidate();
 8008596:	f00d bd6f 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800859a:	bf00      	nop
 800859c:	080299e3 	.word	0x080299e3

080085a0 <_ZN16DriverScreenView7setToilEi>:

void DriverScreenView::setToil(int oilTemp) {
 80085a0:	b510      	push	{r4, lr}
 80085a2:	460b      	mov	r3, r1
 80085a4:	4604      	mov	r4, r0
    Unicode::snprintf(txtToilBuffer, TXTTOIL_SIZE, "%d", oilTemp);
 80085a6:	4a06      	ldr	r2, [pc, #24]	; (80085c0 <_ZN16DriverScreenView7setToilEi+0x20>)
 80085a8:	2104      	movs	r1, #4
 80085aa:	f600 30e4 	addw	r0, r0, #3044	; 0xbe4
 80085ae:	f00f fdeb 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtToil.invalidate();
 80085b2:	f604 2068 	addw	r0, r4, #2664	; 0xa68
}
 80085b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtToil.invalidate();
 80085ba:	f00d bd5d 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80085be:	bf00      	nop
 80085c0:	080299e3 	.word	0x080299e3

080085c4 <_ZN16DriverScreenView8setTorinEi>:

void DriverScreenView::setTorin(int orinTemp) {
 80085c4:	b510      	push	{r4, lr}
 80085c6:	460b      	mov	r3, r1
 80085c8:	4604      	mov	r4, r0
    Unicode::snprintf(txtTorinBuffer, TXTTORIN_SIZE, "%d", orinTemp);
 80085ca:	4a06      	ldr	r2, [pc, #24]	; (80085e4 <_ZN16DriverScreenView8setTorinEi+0x20>)
 80085cc:	2104      	movs	r1, #4
 80085ce:	f600 30ec 	addw	r0, r0, #3052	; 0xbec
 80085d2:	f00f fdd9 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTorin.invalidate();
 80085d6:	f604 20b4 	addw	r0, r4, #2740	; 0xab4
}
 80085da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTorin.invalidate();
 80085de:	f00d bd4b 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80085e2:	bf00      	nop
 80085e4:	080299e3 	.word	0x080299e3

080085e8 <_ZN16DriverScreenView7setPoilEf>:

void DriverScreenView::setPoil(float oilPressure) {
 80085e8:	b513      	push	{r0, r1, r4, lr}
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 80085ea:	4a08      	ldr	r2, [pc, #32]	; (800860c <_ZN16DriverScreenView7setPoilEf+0x24>)
 80085ec:	ed8d 0a01 	vstr	s0, [sp, #4]
 80085f0:	4604      	mov	r4, r0
 80085f2:	ab01      	add	r3, sp, #4
 80085f4:	2105      	movs	r1, #5
 80085f6:	f500 603b 	add.w	r0, r0, #2992	; 0xbb0
 80085fa:	f00f ffb1 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPoilBuffer, TXTPOIL_SIZE, "%.2f", oilPressure);
    txtPoil.invalidate();
 80085fe:	f504 600a 	add.w	r0, r4, #2208	; 0x8a0
}
 8008602:	b002      	add	sp, #8
 8008604:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPoil.invalidate();
 8008608:	f00d bd36 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800860c:	080299e6 	.word	0x080299e6

08008610 <_ZN16DriverScreenView8setPfuelEf>:

void DriverScreenView::setPfuel(float fuelPressure) {
 8008610:	b513      	push	{r0, r1, r4, lr}
 8008612:	4a08      	ldr	r2, [pc, #32]	; (8008634 <_ZN16DriverScreenView8setPfuelEf+0x24>)
 8008614:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008618:	4604      	mov	r4, r0
 800861a:	ab01      	add	r3, sp, #4
 800861c:	2104      	movs	r1, #4
 800861e:	f600 30d2 	addw	r0, r0, #3026	; 0xbd2
 8008622:	f00f ff9d 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtPfuelBuffer, TXTPFUEL_SIZE, "%.1f", fuelPressure);
    txtPfuel.invalidate();
 8008626:	f504 601d 	add.w	r0, r4, #2512	; 0x9d0
}
 800862a:	b002      	add	sp, #8
 800862c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPfuel.invalidate();
 8008630:	f00d bd22 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008634:	080299eb 	.word	0x080299eb

08008638 <_ZN16DriverScreenView9setPbrakeEi>:

void DriverScreenView::setPbrake(int brakePressure) {
 8008638:	b510      	push	{r4, lr}
 800863a:	460b      	mov	r3, r1
 800863c:	4604      	mov	r4, r0
    Unicode::snprintf(txtPbrakeBuffer, TXTPBRAKE_SIZE, "%d", brakePressure);
 800863e:	4a06      	ldr	r2, [pc, #24]	; (8008658 <_ZN16DriverScreenView9setPbrakeEi+0x20>)
 8008640:	2104      	movs	r1, #4
 8008642:	f500 603c 	add.w	r0, r0, #3008	; 0xbc0
 8008646:	f00f fd9f 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtPbrake.invalidate();
 800864a:	f604 1038 	addw	r0, r4, #2360	; 0x938
}
 800864e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtPbrake.invalidate();
 8008652:	f00d bd11 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008656:	bf00      	nop
 8008658:	080299e3 	.word	0x080299e3

0800865c <_ZN16DriverScreenView6setTPSEi>:

void DriverScreenView::setTPS(int tpsPercentage) {
 800865c:	b510      	push	{r4, lr}
 800865e:	460b      	mov	r3, r1
 8008660:	4604      	mov	r4, r0
    Unicode::snprintf(txtTPSBuffer, TXTTPS_SIZE, "%d", tpsPercentage);
 8008662:	4a06      	ldr	r2, [pc, #24]	; (800867c <_ZN16DriverScreenView6setTPSEi+0x20>)
 8008664:	2103      	movs	r1, #3
 8008666:	f600 30ba 	addw	r0, r0, #3002	; 0xbba
 800866a:	f00f fd8d 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtTPS.invalidate();
 800866e:	f604 00ec 	addw	r0, r4, #2284	; 0x8ec
}
 8008672:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtTPS.invalidate();
 8008676:	f00d bcff 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800867a:	bf00      	nop
 800867c:	080299e3 	.word	0x080299e3

08008680 <_ZN16DriverScreenView8setBat12Ef>:

void DriverScreenView::setBat12(float voltage) {
 8008680:	b513      	push	{r0, r1, r4, lr}
 8008682:	4a08      	ldr	r2, [pc, #32]	; (80086a4 <_ZN16DriverScreenView8setBat12Ef+0x24>)
 8008684:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008688:	4604      	mov	r4, r0
 800868a:	ab01      	add	r3, sp, #4
 800868c:	2105      	movs	r1, #5
 800868e:	f600 30da 	addw	r0, r0, #3034	; 0xbda
 8008692:	f00f ff65 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat12Buffer, TXTBAT12_SIZE, "%.1f", voltage);
    txtBat12.invalidate();
 8008696:	f604 201c 	addw	r0, r4, #2588	; 0xa1c
}
 800869a:	b002      	add	sp, #8
 800869c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat12.invalidate();
 80086a0:	f00d bcea 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80086a4:	080299eb 	.word	0x080299eb

080086a8 <_ZN16DriverScreenView8setBat24Ef>:

void DriverScreenView::setBat24(float voltage) {
 80086a8:	b513      	push	{r0, r1, r4, lr}
 80086aa:	4a08      	ldr	r2, [pc, #32]	; (80086cc <_ZN16DriverScreenView8setBat24Ef+0x24>)
 80086ac:	ed8d 0a01 	vstr	s0, [sp, #4]
 80086b0:	4604      	mov	r4, r0
 80086b2:	ab01      	add	r3, sp, #4
 80086b4:	2105      	movs	r1, #5
 80086b6:	f600 30c8 	addw	r0, r0, #3016	; 0xbc8
 80086ba:	f00f ff51 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
    Unicode::snprintfFloat(txtBat24Buffer, TXTBAT24_SIZE, "%.1f", voltage);
    txtBat24.invalidate();
 80086be:	f604 1084 	addw	r0, r4, #2436	; 0x984
}
 80086c2:	b002      	add	sp, #8
 80086c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    txtBat24.invalidate();
 80086c8:	f00d bcd6 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80086cc:	080299eb 	.word	0x080299eb

080086d0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80086d0:	4770      	bx	lr

080086d2 <_ZN19FrontendApplicationD0Ev>:
 80086d2:	b510      	push	{r4, lr}
 80086d4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80086d8:	4604      	mov	r4, r0
 80086da:	f01d ff79 	bl	80265d0 <_ZdlPvj>
 80086de:	4620      	mov	r0, r4
 80086e0:	bd10      	pop	{r4, pc}

080086e2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80086e2:	b510      	push	{r4, lr}
 80086e4:	4604      	mov	r4, r0
    {
        model.tick();
 80086e6:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80086ea:	f000 fbd9 	bl	8008ea0 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80086ee:	4620      	mov	r0, r4
    }
 80086f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80086f4:	f00c bc9c 	b.w	8015030 <_ZN8touchgfx11Application15handleTickEventEv>

080086f8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80086f8:	b510      	push	{r4, lr}
 80086fa:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80086fc:	f7fb ffe6 	bl	80046cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8008700:	4b01      	ldr	r3, [pc, #4]	; (8008708 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8008702:	6023      	str	r3, [r4, #0]
{

}
 8008704:	4620      	mov	r0, r4
 8008706:	bd10      	pop	{r4, pc}
 8008708:	08029a2c 	.word	0x08029a2c

0800870c <_ZN24MainInfotaimentPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainInfotaimentPresenter() {};
 800870c:	4770      	bx	lr

0800870e <_ZThn4_N24MainInfotaimentPresenterD1Ev>:
 800870e:	3804      	subs	r0, #4
 8008710:	4770      	bx	lr

08008712 <_ZN24MainInfotaimentPresenter8activateEv>:
{
	view.setRES(3);
}

void MainInfotaimentPresenter::activate()
{
 8008712:	b510      	push	{r4, lr}
	infoChanged();
 8008714:	6803      	ldr	r3, [r0, #0]
{
 8008716:	4604      	mov	r4, r0
	infoChanged();
 8008718:	695b      	ldr	r3, [r3, #20]
 800871a:	4798      	blx	r3
	debugMessageChanged();
 800871c:	6823      	ldr	r3, [r4, #0]
 800871e:	4620      	mov	r0, r4
 8008720:	699b      	ldr	r3, [r3, #24]
}
 8008722:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	debugMessageChanged();
 8008726:	4718      	bx	r3

08008728 <_ZN24MainInfotaimentPresenter10deactivateEv>:

void MainInfotaimentPresenter::deactivate()
{
	
}
 8008728:	4770      	bx	lr

0800872a <_ZN24MainInfotaimentPresenterD0Ev>:
 800872a:	b510      	push	{r4, lr}
 800872c:	2110      	movs	r1, #16
 800872e:	4604      	mov	r4, r0
 8008730:	f01d ff4e 	bl	80265d0 <_ZdlPvj>
 8008734:	4620      	mov	r0, r4
 8008736:	bd10      	pop	{r4, pc}

08008738 <_ZThn4_N24MainInfotaimentPresenterD0Ev>:
 8008738:	f1a0 0004 	sub.w	r0, r0, #4
 800873c:	e7f5      	b.n	800872a <_ZN24MainInfotaimentPresenterD0Ev>

0800873e <_ZN24MainInfotaimentPresenter11gearChangedEv>:
    int getGear() { return gear; }
 800873e:	6883      	ldr	r3, [r0, #8]

void MainInfotaimentPresenter::gearChanged()
{
	view.setGear(model->getGear());
 8008740:	68c0      	ldr	r0, [r0, #12]
 8008742:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 8008746:	f000 b8ad 	b.w	80088a4 <_ZN19MainInfotaimentView7setGearEi>

0800874a <_ZThn4_N24MainInfotaimentPresenter11gearChangedEv>:

    //from model
    virtual void gearChanged();
 800874a:	f1a0 0004 	sub.w	r0, r0, #4
 800874e:	f7ff bff6 	b.w	800873e <_ZN24MainInfotaimentPresenter11gearChangedEv>

08008752 <_ZN24MainInfotaimentPresenter11infoChangedEv>:
 8008752:	6883      	ldr	r3, [r0, #8]
}

void MainInfotaimentPresenter::infoChanged()
{
 8008754:	b510      	push	{r4, lr}
 8008756:	4604      	mov	r4, r0
	view.setGear(model->getGear());
 8008758:	f8d3 10a0 	ldr.w	r1, [r3, #160]	; 0xa0
 800875c:	68c0      	ldr	r0, [r0, #12]
 800875e:	f000 f8a1 	bl	80088a4 <_ZN19MainInfotaimentView7setGearEi>
    int getSpeed() { return speed; }
 8008762:	68a3      	ldr	r3, [r4, #8]
	view.setSpeed(model->getSpeed());
 8008764:	68e0      	ldr	r0, [r4, #12]
 8008766:	f8d3 10a4 	ldr.w	r1, [r3, #164]	; 0xa4
 800876a:	f000 f8c9 	bl	8008900 <_ZN19MainInfotaimentView8setSpeedEi>
    int getRpm() { return rpm; }
 800876e:	68a3      	ldr	r3, [r4, #8]
	view.setRpm(model->getRpm());
 8008770:	68e0      	ldr	r0, [r4, #12]
 8008772:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 8008776:	f000 f973 	bl	8008a60 <_ZN19MainInfotaimentView6setRpmEi>
    int getT_water() { return T_water; }
 800877a:	68a3      	ldr	r3, [r4, #8]

	view.setT_Water(model->getT_water());
 800877c:	68e0      	ldr	r0, [r4, #12]
 800877e:	f8d3 10ac 	ldr.w	r1, [r3, #172]	; 0xac
 8008782:	f000 f9c3 	bl	8008b0c <_ZN19MainInfotaimentView10setT_WaterEi>
    int getT_oil() { return T_oil; }
 8008786:	68a3      	ldr	r3, [r4, #8]
	view.setT_Oil(model->getT_oil());
 8008788:	68e0      	ldr	r0, [r4, #12]
 800878a:	f8d3 10b0 	ldr.w	r1, [r3, #176]	; 0xb0
 800878e:	f000 f9e7 	bl	8008b60 <_ZN19MainInfotaimentView8setT_OilEi>
    float getP_oil() { return P_oil; }
 8008792:	68a3      	ldr	r3, [r4, #8]
	view.setP_Oil(model->getP_oil());
 8008794:	68e0      	ldr	r0, [r4, #12]
 8008796:	ed93 0a32 	vldr	s0, [r3, #200]	; 0xc8
 800879a:	f000 fa0b 	bl	8008bb4 <_ZN19MainInfotaimentView8setP_OilEf>
    float getP_fuel() { return P_fuel; }
 800879e:	68a3      	ldr	r3, [r4, #8]
	view.setP_Fuel(model->getP_fuel());
 80087a0:	68e0      	ldr	r0, [r4, #12]
 80087a2:	ed93 0a33 	vldr	s0, [r3, #204]	; 0xcc
 80087a6:	f000 f8bd 	bl	8008924 <_ZN19MainInfotaimentView9setP_FuelEf>
    int getThrottle_perc() { return throttle_perc; }
 80087aa:	68a3      	ldr	r3, [r4, #8]

	view.setThrottle_Perc(model->getThrottle_perc());
 80087ac:	68e0      	ldr	r0, [r4, #12]
 80087ae:	f8d3 10b4 	ldr.w	r1, [r3, #180]	; 0xb4
 80087b2:	f000 f949 	bl	8008a48 <_ZN19MainInfotaimentView16setThrottle_PercEi>
    int getFrontBrakePerc() { return frontBrakePerc; }
 80087b6:	68a3      	ldr	r3, [r4, #8]

	view.setFrontBrake_Perc(model->getFrontBrakePerc());
 80087b8:	68e0      	ldr	r0, [r4, #12]
 80087ba:	f8d3 10b8 	ldr.w	r1, [r3, #184]	; 0xb8
 80087be:	f000 f947 	bl	8008a50 <_ZN19MainInfotaimentView18setFrontBrake_PercEi>
    int getRearBrakePerc() { return rearBrakePerc; }
 80087c2:	68a3      	ldr	r3, [r4, #8]
	view.setRearBrake_Perc(model->getRearBrakePerc());
 80087c4:	68e0      	ldr	r0, [r4, #12]
 80087c6:	f8d3 10bc 	ldr.w	r1, [r3, #188]	; 0xbc
 80087ca:	f000 f945 	bl	8008a58 <_ZN19MainInfotaimentView17setRearBrake_PercEi>
    int getRES() { return RES; }
 80087ce:	68a3      	ldr	r3, [r4, #8]

	view.setRES(model->getRES());
 80087d0:	68e0      	ldr	r0, [r4, #12]
 80087d2:	f8d3 10d0 	ldr.w	r1, [r3, #208]	; 0xd0
 80087d6:	f000 f8bb 	bl	8008950 <_ZN19MainInfotaimentView6setRESEi>
    bool getLC() { return LC; }
 80087da:	68a3      	ldr	r3, [r4, #8]
	view.setLC(model->getLC());
 80087dc:	68e0      	ldr	r0, [r4, #12]
 80087de:	f893 10d4 	ldrb.w	r1, [r3, #212]	; 0xd4
 80087e2:	f000 f8d9 	bl	8008998 <_ZN19MainInfotaimentView5setLCEb>
    bool getCLT() { return CLT; }
 80087e6:	68a3      	ldr	r3, [r4, #8]
	view.setCLT(model->getCLT());
 80087e8:	68e0      	ldr	r0, [r4, #12]
 80087ea:	f893 10d5 	ldrb.w	r1, [r3, #213]	; 0xd5
 80087ee:	f000 f8ed 	bl	80089cc <_ZN19MainInfotaimentView6setCLTEb>
    float getBattery_v() { return battery_v; }
 80087f2:	68a3      	ldr	r3, [r4, #8]

	view.setBattery_V(model->getBattery_v());
 80087f4:	68e0      	ldr	r0, [r4, #12]
 80087f6:	ed93 0a36 	vldr	s0, [r3, #216]	; 0xd8
 80087fa:	f000 fa89 	bl	8008d10 <_ZN19MainInfotaimentView12setBattery_VEf>
    float getOrinTemperature() { return orinTemperature; }
 80087fe:	68a3      	ldr	r3, [r4, #8]

	view.setOrinTemperature(model->getOrinTemperature());
 8008800:	68e0      	ldr	r0, [r4, #12]
 8008802:	ed93 0a31 	vldr	s0, [r3, #196]	; 0xc4
 8008806:	f000 fa11 	bl	8008c2c <_ZN19MainInfotaimentView18setOrinTemperatureEf>
    float getVoltage24v() { return voltage24v; }
 800880a:	68a3      	ldr	r3, [r4, #8]
	view.setVoltage24v(model->getVoltage24v());
 800880c:	68e0      	ldr	r0, [r4, #12]
 800880e:	ed93 0a37 	vldr	s0, [r3, #220]	; 0xdc
 8008812:	f000 fa41 	bl	8008c98 <_ZN19MainInfotaimentView13setVoltage24vEf>
    int getLap() { return lap; }
 8008816:	68a3      	ldr	r3, [r4, #8]
	view.setLap(model->getLap());
 8008818:	68e0      	ldr	r0, [r4, #12]
 800881a:	f8d3 10c0 	ldr.w	r1, [r3, #192]	; 0xc0

	/* TODO: String variables */
}
 800881e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	view.setLap(model->getLap());
 8008822:	f000 b8ed 	b.w	8008a00 <_ZN19MainInfotaimentView6setLapEi>

08008826 <_ZThn4_N24MainInfotaimentPresenter11infoChangedEv>:
    virtual void infoChanged();
 8008826:	f1a0 0004 	sub.w	r0, r0, #4
 800882a:	f7ff bf92 	b.w	8008752 <_ZN24MainInfotaimentPresenter11infoChangedEv>

0800882e <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>:

    const char* getDebugMessage() { return dbgMessage; }
 800882e:	6883      	ldr	r3, [r0, #8]


void MainInfotaimentPresenter::debugMessageChanged() {
	view.setDebugMessage(model->getDebugMessage());
 8008830:	68c0      	ldr	r0, [r0, #12]
 8008832:	6859      	ldr	r1, [r3, #4]
 8008834:	f000 b8f6 	b.w	8008a24 <_ZN19MainInfotaimentView15setDebugMessageEPKc>

08008838 <_ZThn4_N24MainInfotaimentPresenter19debugMessageChangedEv>:
    virtual void debugMessageChanged();
 8008838:	f1a0 0004 	sub.w	r0, r0, #4
 800883c:	f7ff bff7 	b.w	800882e <_ZN24MainInfotaimentPresenter19debugMessageChangedEv>

08008840 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView>:
MainInfotaimentPresenter::MainInfotaimentPresenter(MainInfotaimentView& v)
 8008840:	b510      	push	{r4, lr}
 8008842:	2200      	movs	r2, #0
 8008844:	6082      	str	r2, [r0, #8]
    : view(v)
 8008846:	4a04      	ldr	r2, [pc, #16]	; (8008858 <_ZN24MainInfotaimentPresenterC1ER19MainInfotaimentView+0x18>)
 8008848:	60c1      	str	r1, [r0, #12]
 800884a:	f102 0408 	add.w	r4, r2, #8
 800884e:	322c      	adds	r2, #44	; 0x2c
 8008850:	6004      	str	r4, [r0, #0]
 8008852:	6042      	str	r2, [r0, #4]
}
 8008854:	bd10      	pop	{r4, pc}
 8008856:	bf00      	nop
 8008858:	08029a78 	.word	0x08029a78

0800885c <_ZN19MainInfotaimentView14tearDownScreenEv>:
}

void MainInfotaimentView::tearDownScreen()
{
  MainInfotaimentViewBase::tearDownScreen();
}
 800885c:	4770      	bx	lr
	...

08008860 <_ZN19MainInfotaimentViewD1Ev>:

class MainInfotaimentView : public MainInfotaimentViewBase
{
public:
    MainInfotaimentView();
    virtual ~MainInfotaimentView() {}
 8008860:	b510      	push	{r4, lr}
 8008862:	4b03      	ldr	r3, [pc, #12]	; (8008870 <_ZN19MainInfotaimentViewD1Ev+0x10>)
 8008864:	6003      	str	r3, [r0, #0]
 8008866:	4604      	mov	r4, r0
 8008868:	f7fc fe28 	bl	80054bc <_ZN23MainInfotaimentViewBaseD1Ev>
 800886c:	4620      	mov	r0, r4
 800886e:	bd10      	pop	{r4, pc}
 8008870:	08029ae4 	.word	0x08029ae4

08008874 <_ZN19MainInfotaimentViewD0Ev>:
 8008874:	b510      	push	{r4, lr}
 8008876:	4604      	mov	r4, r0
 8008878:	f7ff fff2 	bl	8008860 <_ZN19MainInfotaimentViewD1Ev>
 800887c:	4620      	mov	r0, r4
 800887e:	f244 7198 	movw	r1, #18328	; 0x4798
 8008882:	f01d fea5 	bl	80265d0 <_ZdlPvj>
 8008886:	4620      	mov	r0, r4
 8008888:	bd10      	pop	{r4, pc}
	...

0800888c <_ZN19MainInfotaimentViewC1Ev>:
MainInfotaimentView::MainInfotaimentView()
 800888c:	b510      	push	{r4, lr}
 800888e:	4604      	mov	r4, r0
 8008890:	f7fc fe84 	bl	800559c <_ZN23MainInfotaimentViewBaseC1Ev>
 8008894:	4b01      	ldr	r3, [pc, #4]	; (800889c <_ZN19MainInfotaimentViewC1Ev+0x10>)
 8008896:	6023      	str	r3, [r4, #0]
}
 8008898:	4620      	mov	r0, r4
 800889a:	bd10      	pop	{r4, pc}
 800889c:	08029ae4 	.word	0x08029ae4

080088a0 <_ZN19MainInfotaimentView11setupScreenEv>:
  MainInfotaimentViewBase::setupScreen();
 80088a0:	f7fc bde8 	b.w	8005474 <_ZN23MainInfotaimentViewBase11setupScreenEv>

080088a4 <_ZN19MainInfotaimentView7setGearEi>:

void MainInfotaimentView::setGear(int gear)
{
 80088a4:	b510      	push	{r4, lr}
 80088a6:	4604      	mov	r4, r0
	//update text area

	if (!gear)
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 80088a8:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 80088ac:	300c      	adds	r0, #12
	if (!gear)
 80088ae:	460b      	mov	r3, r1
 80088b0:	b9d9      	cbnz	r1, 80088ea <_ZN19MainInfotaimentView7setGearEi+0x46>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%c", 'N');
 80088b2:	4a0f      	ldr	r2, [pc, #60]	; (80088f0 <_ZN19MainInfotaimentView7setGearEi+0x4c>)
 80088b4:	234e      	movs	r3, #78	; 0x4e
	else
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 80088b6:	2102      	movs	r1, #2
 80088b8:	f00f fc66 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3d", 150);
 80088bc:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 80088c0:	4a0c      	ldr	r2, [pc, #48]	; (80088f4 <_ZN19MainInfotaimentView7setGearEi+0x50>)
 80088c2:	2396      	movs	r3, #150	; 0x96
 80088c4:	2104      	movs	r1, #4
 80088c6:	3010      	adds	r0, #16
 80088c8:	f00f fc5e 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%4d", 4200);
 80088cc:	f504 50b8 	add.w	r0, r4, #5888	; 0x1700
 80088d0:	4a09      	ldr	r2, [pc, #36]	; (80088f8 <_ZN19MainInfotaimentView7setGearEi+0x54>)
 80088d2:	f241 0368 	movw	r3, #4200	; 0x1068
 80088d6:	2107      	movs	r1, #7
 80088d8:	3018      	adds	r0, #24
 80088da:	f00f fc55 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtGear.invalidate();
 80088de:	f104 006c 	add.w	r0, r4, #108	; 0x6c
}
 80088e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtGear.invalidate();
 80088e6:	f00d bbc7 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
		Unicode::snprintf(txtGearBuffer, TXTGEAR_SIZE, "%d", gear);
 80088ea:	4a04      	ldr	r2, [pc, #16]	; (80088fc <_ZN19MainInfotaimentView7setGearEi+0x58>)
 80088ec:	e7e3      	b.n	80088b6 <_ZN19MainInfotaimentView7setGearEi+0x12>
 80088ee:	bf00      	nop
 80088f0:	080299e0 	.word	0x080299e0
 80088f4:	08029abc 	.word	0x08029abc
 80088f8:	08029ac0 	.word	0x08029ac0
 80088fc:	080299e3 	.word	0x080299e3

08008900 <_ZN19MainInfotaimentView8setSpeedEi>:

void MainInfotaimentView::setSpeed(int speed)
{
 8008900:	b510      	push	{r4, lr}
 8008902:	4604      	mov	r4, r0
	//update text area

	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 8008904:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
{
 8008908:	460b      	mov	r3, r1
	Unicode::snprintf(txtSpeedBuffer, TXTSPEED_SIZE, "%3.3d", speed);
 800890a:	4a05      	ldr	r2, [pc, #20]	; (8008920 <_ZN19MainInfotaimentView8setSpeedEi+0x20>)
 800890c:	2104      	movs	r1, #4
 800890e:	3010      	adds	r0, #16
 8008910:	f00f fc3a 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtSpeed.invalidate();
 8008914:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
}
 8008918:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtSpeed.invalidate();
 800891c:	f00d bbac 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008920:	08029ac4 	.word	0x08029ac4

08008924 <_ZN19MainInfotaimentView9setP_FuelEf>:

	txtPOil.invalidate();
	imgOilPres.invalidate();
}

void MainInfotaimentView::setP_Fuel(float p_fuel) {
 8008924:	b513      	push	{r0, r1, r4, lr}
 8008926:	4604      	mov	r4, r0
 8008928:	f500 50c0 	add.w	r0, r0, #6144	; 0x1800
 800892c:	4a07      	ldr	r2, [pc, #28]	; (800894c <_ZN19MainInfotaimentView9setP_FuelEf+0x28>)
 800892e:	ed8d 0a01 	vstr	s0, [sp, #4]
 8008932:	ab01      	add	r3, sp, #4
 8008934:	2106      	movs	r1, #6
 8008936:	3008      	adds	r0, #8
 8008938:	f00f fe12 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtPFuelBuffer, TXTPFUEL_SIZE, "%.2f", p_fuel);
	txtPFuel.invalidate();
 800893c:	f504 5099 	add.w	r0, r4, #4896	; 0x1320
 8008940:	3004      	adds	r0, #4
}
 8008942:	b002      	add	sp, #8
 8008944:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPFuel.invalidate();
 8008948:	f00d bb96 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800894c:	080299e6 	.word	0x080299e6

08008950 <_ZN19MainInfotaimentView6setRESEi>:
  img24v.invalidate();
  txt24v.invalidate();
}

void MainInfotaimentView::setRES(int RES)
{
 8008950:	b510      	push	{r4, lr}
 8008952:	4604      	mov	r4, r0
	if(!RES)
 8008954:	b929      	cbnz	r1, 8008962 <_ZN19MainInfotaimentView6setRESEi+0x12>
 8008956:	4b0f      	ldr	r3, [pc, #60]	; (8008994 <_ZN19MainInfotaimentView6setRESEi+0x44>)
 8008958:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 800895c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8008960:	e007      	b.n	8008972 <_ZN19MainInfotaimentView6setRESEi+0x22>
	{
		/* Turn RES EMERGENCY MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	} else if(RES == 1)
 8008962:	2901      	cmp	r1, #1
 8008964:	d111      	bne.n	800898a <_ZN19MainInfotaimentView6setRESEi+0x3a>
 8008966:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800896a:	f8c0 35d4 	str.w	r3, [r0, #1492]	; 0x5d4
 800896e:	f04f 33ff 	mov.w	r3, #4294967295
 8008972:	f8c4 37ac 	str.w	r3, [r4, #1964]	; 0x7ac
		/* Turn RES GO MODE box */
		boxRES.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
		labelRES.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxRES.invalidate();
 8008976:	f204 50ac 	addw	r0, r4, #1452	; 0x5ac
 800897a:	f00d fb7d 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelRES.invalidate();
 800897e:	f204 707c 	addw	r0, r4, #1916	; 0x77c
}
 8008982:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelRES.invalidate();
 8008986:	f00d bb77 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if(RES == 3)
 800898a:	2903      	cmp	r1, #3
 800898c:	d1f3      	bne.n	8008976 <_ZN19MainInfotaimentView6setRESEi+0x26>
 800898e:	f04f 23ff 	mov.w	r3, #4278255360	; 0xff00ff00
 8008992:	e7e1      	b.n	8008958 <_ZN19MainInfotaimentView6setRESEi+0x8>
 8008994:	ffff0000 	.word	0xffff0000

08008998 <_ZN19MainInfotaimentView5setLCEb>:

void MainInfotaimentView::setLC(bool LC)
{
 8008998:	b510      	push	{r4, lr}
 800899a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800899e:	4604      	mov	r4, r0
	if(!LC)
 80089a0:	b979      	cbnz	r1, 80089c2 <_ZN19MainInfotaimentView5setLCEb+0x2a>
 80089a2:	f8c0 3c18 	str.w	r3, [r0, #3096]	; 0xc18
 80089a6:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on LC box */
    boxLC.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelLC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxLC.invalidate();
 80089aa:	f504 603f 	add.w	r0, r4, #3056	; 0xbf0
 80089ae:	f8c4 3c54 	str.w	r3, [r4, #3156]	; 0xc54
 80089b2:	f00d fb61 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelLC.invalidate();
 80089b6:	f604 4024 	addw	r0, r4, #3108	; 0xc24
}
 80089ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelLC.invalidate();
 80089be:	f00d bb5b 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089c2:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 80089c6:	f8c0 2c18 	str.w	r2, [r0, #3096]	; 0xc18
 80089ca:	e7ee      	b.n	80089aa <_ZN19MainInfotaimentView5setLCEb+0x12>

080089cc <_ZN19MainInfotaimentView6setCLTEb>:

void MainInfotaimentView::setCLT(bool CLT)
{
 80089cc:	b510      	push	{r4, lr}
 80089ce:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80089d2:	4604      	mov	r4, r0
	if(!CLT)
 80089d4:	b979      	cbnz	r1, 80089f6 <_ZN19MainInfotaimentView6setCLTEb+0x2a>
 80089d6:	f8c0 3c94 	str.w	r3, [r0, #3220]	; 0xc94
 80089da:	f04f 33ff 	mov.w	r3, #4294967295
		/* Turn on CLT box */
    boxClutch.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    labelClutch.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
	}

	boxClutch.invalidate();
 80089de:	f604 406c 	addw	r0, r4, #3180	; 0xc6c
 80089e2:	f8c4 3cd0 	str.w	r3, [r4, #3280]	; 0xcd0
 80089e6:	f00d fb47 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	labelClutch.invalidate();
 80089ea:	f504 604a 	add.w	r0, r4, #3232	; 0xca0
}
 80089ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	labelClutch.invalidate();
 80089f2:	f00d bb41 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 80089f6:	f04f 22ff 	mov.w	r2, #4278255360	; 0xff00ff00
 80089fa:	f8c0 2c94 	str.w	r2, [r0, #3220]	; 0xc94
 80089fe:	e7ee      	b.n	80089de <_ZN19MainInfotaimentView6setCLTEb+0x12>

08008a00 <_ZN19MainInfotaimentView6setLapEi>:

	txtBattery_V.invalidate();
	imgBatteryV.invalidate();
}

void MainInfotaimentView::setLap(int lap) {
 8008a00:	b510      	push	{r4, lr}
 8008a02:	4604      	mov	r4, r0
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 8008a04:	f500 50b9 	add.w	r0, r0, #5920	; 0x1720
void MainInfotaimentView::setLap(int lap) {
 8008a08:	460b      	mov	r3, r1
	Unicode::snprintf(txtLapBuffer, TXTLAP_SIZE, "%d", lap);
 8008a0a:	4a05      	ldr	r2, [pc, #20]	; (8008a20 <_ZN19MainInfotaimentView6setLapEi+0x20>)
 8008a0c:	2103      	movs	r1, #3
 8008a0e:	3006      	adds	r0, #6
 8008a10:	f00f fbba 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>

  txtLap.invalidate();
 8008a14:	f504 60e6 	add.w	r0, r4, #1840	; 0x730
}
 8008a18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  txtLap.invalidate();
 8008a1c:	f00d bb2c 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a20:	080299e3 	.word	0x080299e3

08008a24 <_ZN19MainInfotaimentView15setDebugMessageEPKc>:

/* TODO: String variables */


void MainInfotaimentView::setDebugMessage(const char* msg) {
 8008a24:	b510      	push	{r4, lr}
 8008a26:	4604      	mov	r4, r0
	if (msg == nullptr) {
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 8008a28:	f500 50c1 	add.w	r0, r0, #6176	; 0x1820
 8008a2c:	3008      	adds	r0, #8
 8008a2e:	2240      	movs	r2, #64	; 0x40
	if (msg == nullptr) {
 8008a30:	b901      	cbnz	r1, 8008a34 <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x10>
		Unicode::strncpy(dbgTextAreaBuffer, "", DBGTEXTAREA_SIZE);
 8008a32:	4904      	ldr	r1, [pc, #16]	; (8008a44 <_ZN19MainInfotaimentView15setDebugMessageEPKc+0x20>)
	} else {
		Unicode::strncpy(dbgTextAreaBuffer, msg, DBGTEXTAREA_SIZE);
 8008a34:	f00f f83b 	bl	8017aae <_ZN8touchgfx7Unicode7strncpyEPtPKct>
	}

	dbgTextArea.invalidate();
 8008a38:	f504 50ac 	add.w	r0, r4, #5504	; 0x1580
 8008a3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	dbgTextArea.invalidate();
 8008a40:	f00d bb1a 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008a44:	0802aa7b 	.word	0x0802aa7b

08008a48 <_ZN19MainInfotaimentView16setThrottle_PercEi>:
	progressThrottle.setValue(throttle_perc);
 8008a48:	f500 7033 	add.w	r0, r0, #716	; 0x2cc
 8008a4c:	f006 bbef 	b.w	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a50 <_ZN19MainInfotaimentView18setFrontBrake_PercEi>:
	progressBrakeFront.setValue(brake_perc);
 8008a50:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8008a54:	f006 bbeb 	b.w	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a58 <_ZN19MainInfotaimentView17setRearBrake_PercEi>:
	progressBrakeRear.setValue(brake_perc);
 8008a58:	f500 6099 	add.w	r0, r0, #1224	; 0x4c8
 8008a5c:	f006 bbe7 	b.w	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>

08008a60 <_ZN19MainInfotaimentView6setRpmEi>:
{
 8008a60:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a64:	4605      	mov	r5, r0
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 8008a66:	f500 50b8 	add.w	r0, r0, #5888	; 0x1700
 8008a6a:	460b      	mov	r3, r1
{
 8008a6c:	460c      	mov	r4, r1
	Unicode::snprintf(txtRpmBuffer, TXTRPM_SIZE, "%5.5d", rpm);
 8008a6e:	4a26      	ldr	r2, [pc, #152]	; (8008b08 <_ZN19MainInfotaimentView6setRpmEi+0xa8>)
 8008a70:	2107      	movs	r1, #7
 8008a72:	3018      	adds	r0, #24
 8008a74:	f00f fb88 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	if (rpm < 4500)
 8008a78:	f241 1393 	movw	r3, #4499	; 0x1193
 8008a7c:	429c      	cmp	r4, r3
		progressRpmLow.setValue(0);
 8008a7e:	f205 76c4 	addw	r6, r5, #1988	; 0x7c4
		progressRpmMed.setValue(0);
 8008a82:	f605 08a8 	addw	r8, r5, #2216	; 0x8a8
		progressRpmHigh.setValue(0);
 8008a86:	f605 178c 	addw	r7, r5, #2444	; 0x98c
	if (rpm < 4500)
 8008a8a:	dc01      	bgt.n	8008a90 <_ZN19MainInfotaimentView6setRpmEi+0x30>
			progressRpmLow.setValue(0);
 8008a8c:	2100      	movs	r1, #0
 8008a8e:	e007      	b.n	8008aa0 <_ZN19MainInfotaimentView6setRpmEi+0x40>
	} else if ((rpm >= 4500) && (rpm < 6000))
 8008a90:	f5a4 538c 	sub.w	r3, r4, #4480	; 0x1180
 8008a94:	3b14      	subs	r3, #20
 8008a96:	f240 52db 	movw	r2, #1499	; 0x5db
 8008a9a:	4293      	cmp	r3, r2
 8008a9c:	d805      	bhi.n	8008aaa <_ZN19MainInfotaimentView6setRpmEi+0x4a>
		progressRpmLow.setValue(100);
 8008a9e:	2164      	movs	r1, #100	; 0x64
			progressRpmLow.setValue(0);
 8008aa0:	4630      	mov	r0, r6
 8008aa2:	f006 fbc4 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(0);
 8008aa6:	2100      	movs	r1, #0
 8008aa8:	e00b      	b.n	8008ac2 <_ZN19MainInfotaimentView6setRpmEi+0x62>
	} else if ((rpm >= 6000) && (rpm < 9000))
 8008aaa:	f5a4 53bb 	sub.w	r3, r4, #5984	; 0x1760
 8008aae:	3b10      	subs	r3, #16
 8008ab0:	f640 31b7 	movw	r1, #2999	; 0xbb7
 8008ab4:	428b      	cmp	r3, r1
 8008ab6:	d811      	bhi.n	8008adc <_ZN19MainInfotaimentView6setRpmEi+0x7c>
		progressRpmLow.setValue(100);
 8008ab8:	2164      	movs	r1, #100	; 0x64
 8008aba:	4630      	mov	r0, r6
 8008abc:	f006 fbb7 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
		progressRpmMed.setValue(100);
 8008ac0:	2164      	movs	r1, #100	; 0x64
			progressRpmMed.setValue(0);
 8008ac2:	4640      	mov	r0, r8
 8008ac4:	f006 fbb3 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(0);
 8008ac8:	2100      	movs	r1, #0
			progressRpmHigh.setValue(100);
 8008aca:	4638      	mov	r0, r7
 8008acc:	f006 fbaf 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
  txtRpm.invalidate();
 8008ad0:	f505 70e8 	add.w	r0, r5, #464	; 0x1d0
}
 8008ad4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  txtRpm.invalidate();
 8008ad8:	f00d bace 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	} else if ((rpm >= 9000) && (rpm < 10500))
 8008adc:	f5a4 540c 	sub.w	r4, r4, #8960	; 0x2300
 8008ae0:	3c28      	subs	r4, #40	; 0x28
 8008ae2:	4294      	cmp	r4, r2
 8008ae4:	d809      	bhi.n	8008afa <_ZN19MainInfotaimentView6setRpmEi+0x9a>
			progressRpmLow.setValue(100);
 8008ae6:	2164      	movs	r1, #100	; 0x64
 8008ae8:	4630      	mov	r0, r6
 8008aea:	f006 fba0 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmMed.setValue(100);
 8008aee:	2164      	movs	r1, #100	; 0x64
 8008af0:	4640      	mov	r0, r8
 8008af2:	f006 fb9c 	bl	800f22e <_ZN8touchgfx11BoxProgress8setValueEi>
			progressRpmHigh.setValue(100);
 8008af6:	2164      	movs	r1, #100	; 0x64
 8008af8:	e7e7      	b.n	8008aca <_ZN19MainInfotaimentView6setRpmEi+0x6a>
		if (progressRpmLow.getValue() == 100)
 8008afa:	4630      	mov	r0, r6
 8008afc:	f006 fcd9 	bl	800f4b2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 8008b00:	2864      	cmp	r0, #100	; 0x64
 8008b02:	d1f0      	bne.n	8008ae6 <_ZN19MainInfotaimentView6setRpmEi+0x86>
 8008b04:	e7c2      	b.n	8008a8c <_ZN19MainInfotaimentView6setRpmEi+0x2c>
 8008b06:	bf00      	nop
 8008b08:	08029aca 	.word	0x08029aca

08008b0c <_ZN19MainInfotaimentView10setT_WaterEi>:
{
 8008b0c:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_water <= WATER_TEMP_LOW_VAL )
 8008b0e:	2932      	cmp	r1, #50	; 0x32
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8008b10:	f500 549c 	add.w	r4, r0, #4992	; 0x1380
{
 8008b14:	4605      	mov	r5, r0
 8008b16:	460e      	mov	r6, r1
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_LOW_ID));
 8008b18:	f104 041c 	add.w	r4, r4, #28
	if (t_water <= WATER_TEMP_LOW_VAL )
 8008b1c:	dc18      	bgt.n	8008b50 <_ZN19MainInfotaimentView10setT_WaterEi+0x44>
 8008b1e:	2319      	movs	r3, #25
		imgWaterTemp.setBitmap(touchgfx::Bitmap(BITMAP_WATER_HIGH_ID));
 8008b20:	a901      	add	r1, sp, #4
 8008b22:	4620      	mov	r0, r4
 8008b24:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008b28:	f009 fcbe 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTWaterBuffer, TXTTWATER_SIZE, "%3.3d", t_water);
 8008b2c:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008b30:	4a0a      	ldr	r2, [pc, #40]	; (8008b5c <_ZN19MainInfotaimentView10setT_WaterEi+0x50>)
 8008b32:	4633      	mov	r3, r6
 8008b34:	2104      	movs	r1, #4
 8008b36:	300c      	adds	r0, #12
 8008b38:	f00f fb26 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTWater.invalidate();
 8008b3c:	f605 20a4 	addw	r0, r5, #2724	; 0xaa4
 8008b40:	f00d fa9a 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgWaterTemp.invalidate();
 8008b44:	4620      	mov	r0, r4
}
 8008b46:	b002      	add	sp, #8
 8008b48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgWaterTemp.invalidate();
 8008b4c:	f00d ba94 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_water <= WATER_TEMP_OK_VAL )
 8008b50:	295e      	cmp	r1, #94	; 0x5e
 8008b52:	bfd4      	ite	le
 8008b54:	231a      	movle	r3, #26
 8008b56:	2318      	movgt	r3, #24
 8008b58:	e7e2      	b.n	8008b20 <_ZN19MainInfotaimentView10setT_WaterEi+0x14>
 8008b5a:	bf00      	nop
 8008b5c:	08029ac4 	.word	0x08029ac4

08008b60 <_ZN19MainInfotaimentView8setT_OilEi>:
{
 8008b60:	b573      	push	{r0, r1, r4, r5, r6, lr}
	if (t_oil <= OIL_TEMP_LOW_VAL )
 8008b62:	2932      	cmp	r1, #50	; 0x32
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 8008b64:	f500 549b 	add.w	r4, r0, #4960	; 0x1360
{
 8008b68:	4605      	mov	r5, r0
 8008b6a:	460e      	mov	r6, r1
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_LOW_ID));
 8008b6c:	f104 0410 	add.w	r4, r4, #16
	if (t_oil <= OIL_TEMP_LOW_VAL )
 8008b70:	dc18      	bgt.n	8008ba4 <_ZN19MainInfotaimentView8setT_OilEi+0x44>
 8008b72:	2313      	movs	r3, #19
    imgOilTemp.setBitmap(touchgfx::Bitmap(BITMAP_OIL_TEMP_HIGH_ID));
 8008b74:	a901      	add	r1, sp, #4
 8008b76:	4620      	mov	r0, r4
 8008b78:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008b7c:	f009 fc94 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
	Unicode::snprintf(txtTOilBuffer, TXTTOIL_SIZE, "%3.3d", t_oil);
 8008b80:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008b84:	4a0a      	ldr	r2, [pc, #40]	; (8008bb0 <_ZN19MainInfotaimentView8setT_OilEi+0x50>)
 8008b86:	4633      	mov	r3, r6
 8008b88:	2104      	movs	r1, #4
 8008b8a:	3014      	adds	r0, #20
 8008b8c:	f00f fafc 	bl	8018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtTOil.invalidate();
 8008b90:	f605 3058 	addw	r0, r5, #2904	; 0xb58
 8008b94:	f00d fa70 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilTemp.invalidate();
 8008b98:	4620      	mov	r0, r4
}
 8008b9a:	b002      	add	sp, #8
 8008b9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	imgOilTemp.invalidate();
 8008ba0:	f00d ba6a 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (t_oil <= OIL_TEMP_OK_VAL )
 8008ba4:	2968      	cmp	r1, #104	; 0x68
 8008ba6:	bfd4      	ite	le
 8008ba8:	2314      	movle	r3, #20
 8008baa:	2312      	movgt	r3, #18
 8008bac:	e7e2      	b.n	8008b74 <_ZN19MainInfotaimentView8setT_OilEi+0x14>
 8008bae:	bf00      	nop
 8008bb0:	08029ac4 	.word	0x08029ac4

08008bb4 <_ZN19MainInfotaimentView8setP_OilEf>:
{
 8008bb4:	b530      	push	{r4, r5, lr}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bb6:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
{
 8008bba:	ed2d 8b02 	vpush	{d8}
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bbe:	eeb4 0ae7 	vcmpe.f32	s0, s15
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 8008bc2:	f500 5496 	add.w	r4, r0, #4800	; 0x12c0
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008bca:	b083      	sub	sp, #12
 8008bcc:	4605      	mov	r5, r0
 8008bce:	eeb0 8a40 	vmov.f32	s16, s0
    	imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_LOW_ID));
 8008bd2:	f104 0404 	add.w	r4, r4, #4
	if (p_oil <= OIL_PRESS_LOW_VAL )
 8008bd6:	d81c      	bhi.n	8008c12 <_ZN19MainInfotaimentView8setP_OilEf+0x5e>
 8008bd8:	2310      	movs	r3, #16
		imgOilPres.setBitmap(touchgfx::Bitmap(BITMAP_OIL_PRES_HIGH_ID));
 8008bda:	a901      	add	r1, sp, #4
 8008bdc:	4620      	mov	r0, r4
 8008bde:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008be2:	f009 fc61 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008be6:	f505 50b9 	add.w	r0, r5, #5920	; 0x1720
 8008bea:	4a0f      	ldr	r2, [pc, #60]	; (8008c28 <_ZN19MainInfotaimentView8setP_OilEf+0x74>)
 8008bec:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008bf0:	ab01      	add	r3, sp, #4
 8008bf2:	2106      	movs	r1, #6
 8008bf4:	301c      	adds	r0, #28
 8008bf6:	f00f fcb3 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtPOil.invalidate();
 8008bfa:	f605 30a4 	addw	r0, r5, #2980	; 0xba4
 8008bfe:	f00d fa3b 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgOilPres.invalidate();
 8008c02:	4620      	mov	r0, r4
}
 8008c04:	b003      	add	sp, #12
 8008c06:	ecbd 8b02 	vpop	{d8}
 8008c0a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgOilPres.invalidate();
 8008c0e:	f00d ba33 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (p_oil <= OIL_PRESS_OK_VAL )
 8008c12:	eef1 7a0a 	vmov.f32	s15, #26	; 0x40d00000  6.5
 8008c16:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008c1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c1e:	bf94      	ite	ls
 8008c20:	2311      	movls	r3, #17
 8008c22:	230f      	movhi	r3, #15
 8008c24:	e7d9      	b.n	8008bda <_ZN19MainInfotaimentView8setP_OilEf+0x26>
 8008c26:	bf00      	nop
 8008c28:	080299e6 	.word	0x080299e6

08008c2c <_ZN19MainInfotaimentView18setOrinTemperatureEf>:
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c2c:	b530      	push	{r4, r5, lr}
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c2e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8008c90 <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x64>
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c32:	ed2d 8b02 	vpush	{d8}
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c36:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8008c3a:	f500 559e 	add.w	r5, r0, #5056	; 0x13c0
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c3e:	b083      	sub	sp, #12
  if (orinTemperature <= ORIN_T_OK_VAL)
 8008c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_OK_ID));
 8008c44:	f105 0508 	add.w	r5, r5, #8
 8008c48:	bf94      	ite	ls
 8008c4a:	2316      	movls	r3, #22
 8008c4c:	2315      	movhi	r3, #21
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c4e:	4604      	mov	r4, r0
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 8008c50:	a901      	add	r1, sp, #4
 8008c52:	4628      	mov	r0, r5
void MainInfotaimentView::setOrinTemperature(float orinTemperature) {
 8008c54:	eeb0 8a40 	vmov.f32	s16, s0
 8008c58:	f8ad 3004 	strh.w	r3, [sp, #4]
    imgTOrin.setBitmap(touchgfx::Bitmap(BITMAP_ORIN_T_HIGH_ID));
 8008c5c:	f009 fc24 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008c60:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8008c64:	4a0b      	ldr	r2, [pc, #44]	; (8008c94 <_ZN19MainInfotaimentView18setOrinTemperatureEf+0x68>)
 8008c66:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008c6a:	ab01      	add	r3, sp, #4
 8008c6c:	2104      	movs	r1, #4
 8008c6e:	3014      	adds	r0, #20
 8008c70:	f00f fc76 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  imgTOrin.invalidate();
 8008c74:	4628      	mov	r0, r5
 8008c76:	f00d f9ff 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
  txtTOrin.invalidate();
 8008c7a:	f504 50a1 	add.w	r0, r4, #5152	; 0x1420
 8008c7e:	3008      	adds	r0, #8
}
 8008c80:	b003      	add	sp, #12
 8008c82:	ecbd 8b02 	vpop	{d8}
 8008c86:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txtTOrin.invalidate();
 8008c8a:	f00d b9f5 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 8008c8e:	bf00      	nop
 8008c90:	428c0000 	.word	0x428c0000
 8008c94:	08029ad0 	.word	0x08029ad0

08008c98 <_ZN19MainInfotaimentView13setVoltage24vEf>:
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008c98:	b530      	push	{r4, r5, lr}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008c9a:	eddf 7a1b 	vldr	s15, [pc, #108]	; 8008d08 <_ZN19MainInfotaimentView13setVoltage24vEf+0x70>
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008c9e:	ed2d 8b02 	vpush	{d8}
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008ca2:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008ca6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
void MainInfotaimentView::setVoltage24v(float voltage24v) {
 8008caa:	b083      	sub	sp, #12
 8008cac:	4604      	mov	r4, r0
 8008cae:	eeb0 8a40 	vmov.f32	s16, s0
		img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_LOW_ID));
 8008cb2:	f500 55a5 	add.w	r5, r0, #5280	; 0x14a0
  if (voltage24v <= VOLTAGE_24V_LOW_VAL)
 8008cb6:	d81c      	bhi.n	8008cf2 <_ZN19MainInfotaimentView13setVoltage24vEf+0x5a>
 8008cb8:	2306      	movs	r3, #6
    img24v.setBitmap(touchgfx::Bitmap(BITMAP_24V_HIGH_ID));
 8008cba:	a901      	add	r1, sp, #4
 8008cbc:	4628      	mov	r0, r5
 8008cbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008cc2:	f009 fbf1 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008cc6:	f504 50c0 	add.w	r0, r4, #6144	; 0x1800
 8008cca:	4a10      	ldr	r2, [pc, #64]	; (8008d0c <_ZN19MainInfotaimentView13setVoltage24vEf+0x74>)
 8008ccc:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008cd0:	ab01      	add	r3, sp, #4
 8008cd2:	2106      	movs	r1, #6
 8008cd4:	301c      	adds	r0, #28
 8008cd6:	f00f fc43 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
  img24v.invalidate();
 8008cda:	4628      	mov	r0, r5
 8008cdc:	f00d f9cc 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
  txt24v.invalidate();
 8008ce0:	f504 50a8 	add.w	r0, r4, #5376	; 0x1500
}
 8008ce4:	b003      	add	sp, #12
 8008ce6:	ecbd 8b02 	vpop	{d8}
 8008cea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
  txt24v.invalidate();
 8008cee:	f00d b9c3 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
  else if (voltage24v <= VOLTAGE_24V_OK_VAL)  
 8008cf2:	eef3 7a0b 	vmov.f32	s15, #59	; 0x41d80000  27.0
 8008cf6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8008cfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cfe:	bf94      	ite	ls
 8008d00:	2307      	movls	r3, #7
 8008d02:	2305      	movhi	r3, #5
 8008d04:	e7d9      	b.n	8008cba <_ZN19MainInfotaimentView13setVoltage24vEf+0x22>
 8008d06:	bf00      	nop
 8008d08:	41bc0000 	.word	0x41bc0000
 8008d0c:	08029ad4 	.word	0x08029ad4

08008d10 <_ZN19MainInfotaimentView12setBattery_VEf>:
{
 8008d10:	b530      	push	{r4, r5, lr}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d12:	eef2 7a07 	vmov.f32	s15, #39	; 0x41380000  11.5
{
 8008d16:	ed2d 8b02 	vpush	{d8}
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d1a:	eeb4 0ae7 	vcmpe.f32	s0, s15
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008d1e:	f500 54a3 	add.w	r4, r0, #5216	; 0x1460
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
{
 8008d26:	b083      	sub	sp, #12
 8008d28:	4605      	mov	r5, r0
 8008d2a:	eeb0 8a40 	vmov.f32	s16, s0
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_LOW_ID));
 8008d2e:	f104 0414 	add.w	r4, r4, #20
	if (battery_v <= BATTERY_V_LOW_VAL )
 8008d32:	d81d      	bhi.n	8008d70 <_ZN19MainInfotaimentView12setBattery_VEf+0x60>
 8008d34:	2306      	movs	r3, #6
    imgBatteryV.setBitmap(touchgfx::Bitmap(BITMAP_BATTERY_HIGH_ID));
 8008d36:	a901      	add	r1, sp, #4
 8008d38:	4620      	mov	r0, r4
 8008d3a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8008d3e:	f009 fbb3 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8008d42:	f505 50bf 	add.w	r0, r5, #6112	; 0x17e0
 8008d46:	4a14      	ldr	r2, [pc, #80]	; (8008d98 <_ZN19MainInfotaimentView12setBattery_VEf+0x88>)
 8008d48:	ed8d 8a01 	vstr	s16, [sp, #4]
 8008d4c:	ab01      	add	r3, sp, #4
 8008d4e:	2106      	movs	r1, #6
 8008d50:	301c      	adds	r0, #28
 8008d52:	f00f fc05 	bl	8018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtBattery_V.invalidate();
 8008d56:	f505 5093 	add.w	r0, r5, #4704	; 0x1260
 8008d5a:	3018      	adds	r0, #24
 8008d5c:	f00d f98c 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	imgBatteryV.invalidate();
 8008d60:	4620      	mov	r0, r4
}
 8008d62:	b003      	add	sp, #12
 8008d64:	ecbd 8b02 	vpop	{d8}
 8008d68:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	imgBatteryV.invalidate();
 8008d6c:	f00d b984 	b.w	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
	else if (battery_v <= BATTERY_V_OK_VAL )
 8008d70:	ee10 0a10 	vmov	r0, s0
 8008d74:	f7f7 fd22 	bl	80007bc <__aeabi_f2d>
 8008d78:	a305      	add	r3, pc, #20	; (adr r3, 8008d90 <_ZN19MainInfotaimentView12setBattery_VEf+0x80>)
 8008d7a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008d7e:	f7f7 fddf 	bl	8000940 <__aeabi_dcmple>
 8008d82:	b108      	cbz	r0, 8008d88 <_ZN19MainInfotaimentView12setBattery_VEf+0x78>
 8008d84:	2307      	movs	r3, #7
 8008d86:	e7d6      	b.n	8008d36 <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008d88:	2305      	movs	r3, #5
 8008d8a:	e7d4      	b.n	8008d36 <_ZN19MainInfotaimentView12setBattery_VEf+0x26>
 8008d8c:	f3af 8000 	nop.w
 8008d90:	cccccccd 	.word	0xcccccccd
 8008d94:	402ccccc 	.word	0x402ccccc
 8008d98:	08029ad4 	.word	0x08029ad4

08008d9c <_ZN22MissionSelectPresenterD1Ev>:

    void requestMission(MmrMission type);

    void requestChassisReset();

    virtual ~MissionSelectPresenter() {};
 8008d9c:	4770      	bx	lr

08008d9e <_ZThn4_N22MissionSelectPresenterD1Ev>:
 8008d9e:	3804      	subs	r0, #4
 8008da0:	4770      	bx	lr

08008da2 <_ZN22MissionSelectPresenter10deactivateEv>:


void MissionSelectPresenter::activate()
{

}
 8008da2:	4770      	bx	lr

08008da4 <_ZN22MissionSelectPresenterD0Ev>:
 8008da4:	b510      	push	{r4, lr}
 8008da6:	2110      	movs	r1, #16
 8008da8:	4604      	mov	r4, r0
 8008daa:	f01d fc11 	bl	80265d0 <_ZdlPvj>
 8008dae:	4620      	mov	r0, r4
 8008db0:	bd10      	pop	{r4, pc}

08008db2 <_ZThn4_N22MissionSelectPresenterD0Ev>:
 8008db2:	f1a0 0004 	sub.w	r0, r0, #4
 8008db6:	e7f5      	b.n	8008da4 <_ZN22MissionSelectPresenterD0Ev>

08008db8 <_ZN22MissionSelectPresenterC1ER17MissionSelectView>:
MissionSelectPresenter::MissionSelectPresenter(MissionSelectView& v)
 8008db8:	b510      	push	{r4, lr}
 8008dba:	2200      	movs	r2, #0
 8008dbc:	6082      	str	r2, [r0, #8]
    : view(v)
 8008dbe:	4a04      	ldr	r2, [pc, #16]	; (8008dd0 <_ZN22MissionSelectPresenterC1ER17MissionSelectView+0x18>)
 8008dc0:	60c1      	str	r1, [r0, #12]
 8008dc2:	f102 0408 	add.w	r4, r2, #8
 8008dc6:	3220      	adds	r2, #32
 8008dc8:	6004      	str	r4, [r0, #0]
 8008dca:	6042      	str	r2, [r0, #4]
}
 8008dcc:	bd10      	pop	{r4, pc}
 8008dce:	bf00      	nop
 8008dd0:	08029b10 	.word	0x08029b10

08008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>:

}

void MissionSelectPresenter::requestMission(MmrMission missionType)
{
    model->requestMission(missionType);
 8008dd4:	6880      	ldr	r0, [r0, #8]
 8008dd6:	f000 b8ed 	b.w	8008fb4 <_ZN5Model14requestMissionE10MmrMission>

08008dda <_ZN22MissionSelectPresenter19requestChassisResetEv>:
}

void MissionSelectPresenter::requestChassisReset() {
    model->requestChassisReset();
 8008dda:	6880      	ldr	r0, [r0, #8]
 8008ddc:	f000 b8c8 	b.w	8008f70 <_ZN5Model19requestChassisResetEv>

08008de0 <_ZN17MissionSelectView14tearDownScreenEv>:

}

void MissionSelectView::tearDownScreen() {
    MissionSelectViewBase::tearDownScreen();
}
 8008de0:	4770      	bx	lr

08008de2 <_ZN17MissionSelectView21onChassisResetClickedEv>:
    presenter->requestChassisReset();
 8008de2:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008de4:	f7ff bff9 	b.w	8008dda <_ZN22MissionSelectPresenter19requestChassisResetEv>

08008de8 <_ZN17MissionSelectView16onIdleBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_IDLE);
 8008de8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dea:	2100      	movs	r1, #0
 8008dec:	f7ff bff2 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008df0 <_ZN17MissionSelectView24onAccelerationBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_ACCELERATION);
 8008df0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008df2:	2101      	movs	r1, #1
 8008df4:	f7ff bfee 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008df8 <_ZN17MissionSelectView19onSkidpadBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_SKIDPAD);
 8008df8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008dfa:	2102      	movs	r1, #2
 8008dfc:	f7ff bfea 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e00 <_ZN17MissionSelectView21onAutocrossBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_AUTOCROSS);
 8008e00:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e02:	2103      	movs	r1, #3
 8008e04:	f7ff bfe6 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e08 <_ZN17MissionSelectView22onTrackdriveBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_TRACKDRIVE);
 8008e08:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e0a:	2104      	movs	r1, #4
 8008e0c:	f7ff bfe2 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e10 <_ZN17MissionSelectView19onEbsTestBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_EBS_TEST);
 8008e10:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e12:	2105      	movs	r1, #5
 8008e14:	f7ff bfde 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e18 <_ZN17MissionSelectView22onInspectionBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_INSPECTION);
 8008e18:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e1a:	2106      	movs	r1, #6
 8008e1c:	f7ff bfda 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e20 <_ZN17MissionSelectView18onManualBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_MANUAL);
 8008e20:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e22:	2107      	movs	r1, #7
 8008e24:	f7ff bfd6 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e28 <_ZN17MissionSelectView17onDebugBtnClickedEv>:
	presenter->requestMission(MMR_MISSION_DEBUG);
 8008e28:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8008e2a:	2108      	movs	r1, #8
 8008e2c:	f7ff bfd2 	b.w	8008dd4 <_ZN22MissionSelectPresenter14requestMissionE10MmrMission>

08008e30 <_ZN17MissionSelectViewD1Ev>:
class MissionSelectView : public MissionSelectViewBase
{
public:
    MissionSelectView();
    
    virtual ~MissionSelectView() {}
 8008e30:	b510      	push	{r4, lr}
 8008e32:	4b03      	ldr	r3, [pc, #12]	; (8008e40 <_ZN17MissionSelectViewD1Ev+0x10>)
 8008e34:	6003      	str	r3, [r0, #0]
 8008e36:	4604      	mov	r4, r0
 8008e38:	f7fe f9a0 	bl	800717c <_ZN21MissionSelectViewBaseD1Ev>
 8008e3c:	4620      	mov	r0, r4
 8008e3e:	bd10      	pop	{r4, pc}
 8008e40:	08029b50 	.word	0x08029b50

08008e44 <_ZN17MissionSelectViewD0Ev>:
 8008e44:	b510      	push	{r4, lr}
 8008e46:	4604      	mov	r4, r0
 8008e48:	f7ff fff2 	bl	8008e30 <_ZN17MissionSelectViewD1Ev>
 8008e4c:	4620      	mov	r0, r4
 8008e4e:	f240 418c 	movw	r1, #1164	; 0x48c
 8008e52:	f01d fbbd 	bl	80265d0 <_ZdlPvj>
 8008e56:	4620      	mov	r0, r4
 8008e58:	bd10      	pop	{r4, pc}
	...

08008e5c <_ZN17MissionSelectViewC1Ev>:
MissionSelectView::MissionSelectView() {
 8008e5c:	b510      	push	{r4, lr}
 8008e5e:	4604      	mov	r4, r0
 8008e60:	f7fe fb48 	bl	80074f4 <_ZN21MissionSelectViewBaseC1Ev>
 8008e64:	4b01      	ldr	r3, [pc, #4]	; (8008e6c <_ZN17MissionSelectViewC1Ev+0x10>)
 8008e66:	6023      	str	r3, [r4, #0]
}
 8008e68:	4620      	mov	r0, r4
 8008e6a:	bd10      	pop	{r4, pc}
 8008e6c:	08029b50 	.word	0x08029b50

08008e70 <_ZN17MissionSelectView11setupScreenEv>:
    MissionSelectViewBase::setupScreen();
 8008e70:	f7fe b985 	b.w	800717e <_ZN21MissionSelectViewBase11setupScreenEv>

08008e74 <_ZN5ModelC1Ev>:
#include <gui/model/ModelListener.hpp>
#include <string.h>

displayInfo info;

Model::Model() : modelListener(0)
 8008e74:	b538      	push	{r3, r4, r5, lr}
 8008e76:	4604      	mov	r4, r0
 8008e78:	2500      	movs	r5, #0
 8008e7a:	f840 5b17 	str.w	r5, [r0], #23
 8008e7e:	4906      	ldr	r1, [pc, #24]	; (8008e98 <_ZN5ModelC1Ev+0x24>)
 8008e80:	2287      	movs	r2, #135	; 0x87
 8008e82:	f01d fc51 	bl	8026728 <memcpy>
{
	dbgMessage = nullptr;
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008e86:	4905      	ldr	r1, [pc, #20]	; (8008e9c <_ZN5ModelC1Ev+0x28>)
	dbgMessage = nullptr;
 8008e88:	6065      	str	r5, [r4, #4]
	strncpy(mission, "None", MAX_MISSION_LEN);
 8008e8a:	220f      	movs	r2, #15
 8008e8c:	f104 0008 	add.w	r0, r4, #8
 8008e90:	f01e f882 	bl	8026f98 <strncpy>
}
 8008e94:	4620      	mov	r0, r4
 8008e96:	bd38      	pop	{r3, r4, r5, pc}
 8008e98:	080277cc 	.word	0x080277cc
 8008e9c:	08029ba4 	.word	0x08029ba4

08008ea0 <_ZN5Model4tickEv>:
extern osMessageQueueId_t dbgMsgQueue;
extern osMessageQueueId_t guiToMainMsgQueue;
extern osMessageQueueId_t mainToGuiMsgQueue;

void Model::tick()
{
 8008ea0:	b570      	push	{r4, r5, r6, lr}
	osStatus_t status;
	
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008ea2:	4d2f      	ldr	r5, [pc, #188]	; (8008f60 <_ZN5Model4tickEv+0xc0>)
{
 8008ea4:	4604      	mov	r4, r0
	status = osMessageQueueGet(mainToGuiMsgQueue, &info, NULL, 0);
 8008ea6:	482f      	ldr	r0, [pc, #188]	; (8008f64 <_ZN5Model4tickEv+0xc4>)
 8008ea8:	2300      	movs	r3, #0
 8008eaa:	6800      	ldr	r0, [r0, #0]
 8008eac:	461a      	mov	r2, r3
 8008eae:	4629      	mov	r1, r5
 8008eb0:	f004 f9cd 	bl	800d24e <osMessageQueueGet>
	if (status == osOK)
 8008eb4:	2800      	cmp	r0, #0
 8008eb6:	d143      	bne.n	8008f40 <_ZN5Model4tickEv+0xa0>
	{
		setGear(info.gear);
 8008eb8:	786b      	ldrb	r3, [r5, #1]
 8008eba:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
		setSpeed(info.speed);
 8008ebe:	782b      	ldrb	r3, [r5, #0]
 8008ec0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
		setRpm(info.rpm);
 8008ec4:	886b      	ldrh	r3, [r5, #2]
 8008ec6:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8

		setT_water(info.T_water);
 8008eca:	792b      	ldrb	r3, [r5, #4]
 8008ecc:	f8c4 30ac 	str.w	r3, [r4, #172]	; 0xac
		setT_oil(info.T_oil);
 8008ed0:	796b      	ldrb	r3, [r5, #5]
 8008ed2:	f8c4 30b0 	str.w	r3, [r4, #176]	; 0xb0
    void setP_oil(float recvP_oil) { P_oil= recvP_oil; }
 8008ed6:	68ab      	ldr	r3, [r5, #8]
 8008ed8:	f8c4 30c8 	str.w	r3, [r4, #200]	; 0xc8
		setP_oil(info.P_oil);

		setThrottle_perc(info.throttle_perc);
 8008edc:	79ab      	ldrb	r3, [r5, #6]
 8008ede:	f8c4 30b4 	str.w	r3, [r4, #180]	; 0xb4
    void setRES(int recvRES) { RES = recvRES; }
 8008ee2:	68eb      	ldr	r3, [r5, #12]
 8008ee4:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
    void setLC(bool recvLC) { LC= recvLC; }
 8008ee8:	8a2b      	ldrh	r3, [r5, #16]
 8008eea:	f8a4 30d4 	strh.w	r3, [r4, #212]	; 0xd4
    void setBattery_v(float recvBattery_v) { battery_v = recvBattery_v; }
 8008eee:	696b      	ldr	r3, [r5, #20]
 8008ef0:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
    void setOrinTemperature(float recvOrinTemperature) { orinTemperature = recvOrinTemperature; }
 8008ef4:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8008ef6:	f8c4 30c4 	str.w	r3, [r4, #196]	; 0xc4
    void setVoltage24v(float recvVoltage24v) { voltage24v = recvVoltage24v; }
 8008efa:	6a2b      	ldr	r3, [r5, #32]
 8008efc:	f8c4 30dc 	str.w	r3, [r4, #220]	; 0xdc
		setBattery_v(info.battery_v);

		setOrinTemperature(info.orinTemperature);
		setVoltage24v(info.voltage24v);

		setRearBrakePerc(info.brakePressureRear * (100.0 / 160.0));
 8008f00:	69e8      	ldr	r0, [r5, #28]
 8008f02:	f7f7 fc5b 	bl	80007bc <__aeabi_f2d>
 8008f06:	4b18      	ldr	r3, [pc, #96]	; (8008f68 <_ZN5Model4tickEv+0xc8>)
 8008f08:	2200      	movs	r2, #0
 8008f0a:	f7f7 f9c9 	bl	80002a0 <__aeabi_dmul>
 8008f0e:	f7f7 fd35 	bl	800097c <__aeabi_d2iz>
 8008f12:	f8c4 00bc 	str.w	r0, [r4, #188]	; 0xbc
		setFrontBrakePerc(info.brakePressureFront * (100.0 / 160.0));
 8008f16:	69a8      	ldr	r0, [r5, #24]
 8008f18:	f7f7 fc50 	bl	80007bc <__aeabi_f2d>
 8008f1c:	4b12      	ldr	r3, [pc, #72]	; (8008f68 <_ZN5Model4tickEv+0xc8>)
 8008f1e:	2200      	movs	r2, #0
 8008f20:	f7f7 f9be 	bl	80002a0 <__aeabi_dmul>
 8008f24:	f7f7 fd2a 	bl	800097c <__aeabi_d2iz>
    void setLap(int lap_recv) { lap = lap_recv; }
 8008f28:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8008f2a:	f8c4 00b8 	str.w	r0, [r4, #184]	; 0xb8
		setLap(info.lap);
		setP_Fuel(info.P_fuel);

		/* TODO: String variables */

		modelListener->infoChanged();
 8008f2e:	6820      	ldr	r0, [r4, #0]
 8008f30:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
    void setP_Fuel(float recvP_fuel) { P_fuel = recvP_fuel; }
 8008f34:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8008f36:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8008f3a:	6803      	ldr	r3, [r0, #0]
 8008f3c:	68db      	ldr	r3, [r3, #12]
 8008f3e:	4798      	blx	r3
	}

	status = osMessageQueueGet(dbgMsgQueue, &dbgMessage, NULL, 0);
 8008f40:	480a      	ldr	r0, [pc, #40]	; (8008f6c <_ZN5Model4tickEv+0xcc>)
 8008f42:	2300      	movs	r3, #0
 8008f44:	6800      	ldr	r0, [r0, #0]
 8008f46:	461a      	mov	r2, r3
 8008f48:	1d21      	adds	r1, r4, #4
 8008f4a:	f004 f980 	bl	800d24e <osMessageQueueGet>
	if (status == osOK)
 8008f4e:	b928      	cbnz	r0, 8008f5c <_ZN5Model4tickEv+0xbc>
		modelListener->debugMessageChanged();
 8008f50:	6820      	ldr	r0, [r4, #0]
 8008f52:	6803      	ldr	r3, [r0, #0]

}
 8008f54:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		modelListener->debugMessageChanged();
 8008f58:	691b      	ldr	r3, [r3, #16]
 8008f5a:	4718      	bx	r3
}
 8008f5c:	bd70      	pop	{r4, r5, r6, pc}
 8008f5e:	bf00      	nop
 8008f60:	20005fa4 	.word	0x20005fa4
 8008f64:	20005d68 	.word	0x20005d68
 8008f68:	3fe40000 	.word	0x3fe40000
 8008f6c:	20005b24 	.word	0x20005b24

08008f70 <_ZN5Model19requestChassisResetEv>:

  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
  commonAfterRequestMission(missionType);
}

void Model::requestChassisReset() {
 8008f70:	b507      	push	{r0, r1, r2, lr}
  guiToMainMsg msg {
		.type = GUI_TO_MAIN_MSG_CHASSISRESET
	};

	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f72:	4807      	ldr	r0, [pc, #28]	; (8008f90 <_ZN5Model19requestChassisResetEv+0x20>)
  guiToMainMsg msg {
 8008f74:	2300      	movs	r3, #0
 8008f76:	2202      	movs	r2, #2
 8008f78:	f88d 2004 	strb.w	r2, [sp, #4]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f7c:	a901      	add	r1, sp, #4
 8008f7e:	461a      	mov	r2, r3
 8008f80:	6800      	ldr	r0, [r0, #0]
  guiToMainMsg msg {
 8008f82:	f88d 3005 	strb.w	r3, [sp, #5]
	osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008f86:	f004 f932 	bl	800d1ee <osMessageQueuePut>
}
 8008f8a:	b003      	add	sp, #12
 8008f8c:	f85d fb04 	ldr.w	pc, [sp], #4
 8008f90:	20005b2c 	.word	0x20005b2c

08008f94 <_ZN5Model25commonAfterRequestMissionE10MmrMission>:


#endif

void Model::commonAfterRequestMission(MmrMission missionType) {
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f94:	ebc1 1101 	rsb	r1, r1, r1, lsl #4
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008f98:	b510      	push	{r4, lr}
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f9a:	3117      	adds	r1, #23
void Model::commonAfterRequestMission(MmrMission missionType) {
 8008f9c:	4604      	mov	r4, r0
	strncpy(mission, missionTranslation[missionType], MAX_MISSION_LEN),
 8008f9e:	4401      	add	r1, r0
 8008fa0:	220f      	movs	r2, #15
 8008fa2:	3008      	adds	r0, #8
 8008fa4:	f01d fff8 	bl	8026f98 <strncpy>
	modelListener->missionChanged();
 8008fa8:	6820      	ldr	r0, [r4, #0]
 8008faa:	6803      	ldr	r3, [r0, #0]
}
 8008fac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	modelListener->missionChanged();
 8008fb0:	695b      	ldr	r3, [r3, #20]
 8008fb2:	4718      	bx	r3

08008fb4 <_ZN5Model14requestMissionE10MmrMission>:
void Model::requestMission(MmrMission missionType) {
 8008fb4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8008fb6:	4605      	mov	r5, r0
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008fb8:	4808      	ldr	r0, [pc, #32]	; (8008fdc <_ZN5Model14requestMissionE10MmrMission+0x28>)
	msg.content.selectedMission = missionType;
 8008fba:	f88d 1005 	strb.w	r1, [sp, #5]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008fbe:	2300      	movs	r3, #0
void Model::requestMission(MmrMission missionType) {
 8008fc0:	460c      	mov	r4, r1
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008fc2:	461a      	mov	r2, r3
 8008fc4:	a901      	add	r1, sp, #4
 8008fc6:	6800      	ldr	r0, [r0, #0]
	msg.type = GUI_TO_MAIN_MSG_MISSIONSELECT;
 8008fc8:	f88d 3004 	strb.w	r3, [sp, #4]
  osMessageQueuePut(guiToMainMsgQueue, &msg, 0, 0);
 8008fcc:	f004 f90f 	bl	800d1ee <osMessageQueuePut>
  commonAfterRequestMission(missionType);
 8008fd0:	4621      	mov	r1, r4
 8008fd2:	4628      	mov	r0, r5
 8008fd4:	f7ff ffde 	bl	8008f94 <_ZN5Model25commonAfterRequestMissionE10MmrMission>
}
 8008fd8:	b003      	add	sp, #12
 8008fda:	bd30      	pop	{r4, r5, pc}
 8008fdc:	20005b2c 	.word	0x20005b2c

08008fe0 <_ZN16StartupPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartupPresenter() {};
 8008fe0:	4770      	bx	lr

08008fe2 <_ZThn4_N16StartupPresenterD1Ev>:
 8008fe2:	3804      	subs	r0, #4
 8008fe4:	4770      	bx	lr

08008fe6 <_ZN16StartupPresenter10deactivateEv>:
}

void StartupPresenter::activate()
{

}
 8008fe6:	4770      	bx	lr

08008fe8 <_ZN16StartupPresenterD0Ev>:
 8008fe8:	b510      	push	{r4, lr}
 8008fea:	2110      	movs	r1, #16
 8008fec:	4604      	mov	r4, r0
 8008fee:	f01d faef 	bl	80265d0 <_ZdlPvj>
 8008ff2:	4620      	mov	r0, r4
 8008ff4:	bd10      	pop	{r4, pc}

08008ff6 <_ZThn4_N16StartupPresenterD0Ev>:
 8008ff6:	f1a0 0004 	sub.w	r0, r0, #4
 8008ffa:	e7f5      	b.n	8008fe8 <_ZN16StartupPresenterD0Ev>

08008ffc <_ZN16StartupPresenterC1ER11StartupView>:
StartupPresenter::StartupPresenter(StartupView& v)
 8008ffc:	b510      	push	{r4, lr}
 8008ffe:	2200      	movs	r2, #0
 8009000:	6082      	str	r2, [r0, #8]
    : view(v)
 8009002:	4a04      	ldr	r2, [pc, #16]	; (8009014 <_ZN16StartupPresenterC1ER11StartupView+0x18>)
 8009004:	60c1      	str	r1, [r0, #12]
 8009006:	f102 0408 	add.w	r4, r2, #8
 800900a:	3220      	adds	r2, #32
 800900c:	6004      	str	r4, [r0, #0]
 800900e:	6042      	str	r2, [r0, #4]
}
 8009010:	bd10      	pop	{r4, pc}
 8009012:	bf00      	nop
 8009014:	08029bac 	.word	0x08029bac

08009018 <_ZN11StartupView14tearDownScreenEv>:
}

void StartupView::tearDownScreen()
{
    StartupViewBase::tearDownScreen();
}
 8009018:	4770      	bx	lr
	...

0800901c <_ZN11StartupViewD1Ev>:

class StartupView : public StartupViewBase
{
public:
    StartupView();
    virtual ~StartupView() {}
 800901c:	b510      	push	{r4, lr}
 800901e:	4b03      	ldr	r3, [pc, #12]	; (800902c <_ZN11StartupViewD1Ev+0x10>)
 8009020:	6003      	str	r3, [r0, #0]
 8009022:	4604      	mov	r4, r0
 8009024:	f7fe fcee 	bl	8007a04 <_ZN15StartupViewBaseD1Ev>
 8009028:	4620      	mov	r0, r4
 800902a:	bd10      	pop	{r4, pc}
 800902c:	08029bec 	.word	0x08029bec

08009030 <_ZN11StartupViewD0Ev>:
 8009030:	b510      	push	{r4, lr}
 8009032:	4604      	mov	r4, r0
 8009034:	f7ff fff2 	bl	800901c <_ZN11StartupViewD1Ev>
 8009038:	4620      	mov	r0, r4
 800903a:	21e4      	movs	r1, #228	; 0xe4
 800903c:	f01d fac8 	bl	80265d0 <_ZdlPvj>
 8009040:	4620      	mov	r0, r4
 8009042:	bd10      	pop	{r4, pc}

08009044 <_ZN11StartupViewC1Ev>:
StartupView::StartupView()
 8009044:	b510      	push	{r4, lr}
 8009046:	4604      	mov	r4, r0
 8009048:	f7fe fcfa 	bl	8007a40 <_ZN15StartupViewBaseC1Ev>
 800904c:	4b01      	ldr	r3, [pc, #4]	; (8009054 <_ZN11StartupViewC1Ev+0x10>)
 800904e:	6023      	str	r3, [r4, #0]
}
 8009050:	4620      	mov	r0, r4
 8009052:	bd10      	pop	{r4, pc}
 8009054:	08029bec 	.word	0x08029bec

08009058 <_ZN11StartupView11setupScreenEv>:
    StartupViewBase::setupScreen();
 8009058:	f7fe bcd5 	b.w	8007a06 <_ZN15StartupViewBase11setupScreenEv>

0800905c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800905c:	4770      	bx	lr

0800905e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800905e:	2000      	movs	r0, #0
 8009060:	4770      	bx	lr

08009062 <ft6x06_ReadID>:
{
 8009062:	b510      	push	{r4, lr}
 8009064:	4604      	mov	r4, r0
  TS_IO_Init();
 8009066:	f000 fa95 	bl	8009594 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 800906a:	21a8      	movs	r1, #168	; 0xa8
 800906c:	b2e0      	uxtb	r0, r4
 800906e:	f000 faad 	bl	80095cc <TS_IO_Read>
}
 8009072:	b280      	uxth	r0, r0
 8009074:	bd10      	pop	{r4, pc}
	...

08009078 <ft6x06_TS_DetectTouch>:
{
 8009078:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 800907a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800907c:	2102      	movs	r1, #2
 800907e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8009080:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8009084:	f000 faa2 	bl	80095cc <TS_IO_Read>
 8009088:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 800908c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8009090:	f003 030f 	and.w	r3, r3, #15
 8009094:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8009098:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800909c:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800909e:	bf88      	it	hi
 80090a0:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80090a4:	4b04      	ldr	r3, [pc, #16]	; (80090b8 <ft6x06_TS_DetectTouch+0x40>)
 80090a6:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80090aa:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80090ae:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80090b0:	2200      	movs	r2, #0
 80090b2:	709a      	strb	r2, [r3, #2]
}
 80090b4:	b002      	add	sp, #8
 80090b6:	bd10      	pop	{r4, pc}
 80090b8:	20005fd6 	.word	0x20005fd6

080090bc <ft6x06_TS_GetXY>:
{
 80090bc:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090be:	4c15      	ldr	r4, [pc, #84]	; (8009114 <ft6x06_TS_GetXY+0x58>)
{
 80090c0:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090c2:	78a3      	ldrb	r3, [r4, #2]
 80090c4:	7862      	ldrb	r2, [r4, #1]
 80090c6:	429a      	cmp	r2, r3
{
 80090c8:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80090ca:	d91f      	bls.n	800910c <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 80090cc:	b303      	cbz	r3, 8009110 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 80090ce:	2b01      	cmp	r3, #1
 80090d0:	bf14      	ite	ne
 80090d2:	2100      	movne	r1, #0
 80090d4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80090d6:	2304      	movs	r3, #4
 80090d8:	eb0d 0203 	add.w	r2, sp, r3
 80090dc:	b2c0      	uxtb	r0, r0
 80090de:	f000 fa93 	bl	8009608 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80090e2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80090e6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80090ea:	021b      	lsls	r3, r3, #8
 80090ec:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80090f0:	4313      	orrs	r3, r2
 80090f2:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80090f4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80090f8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80090fc:	021b      	lsls	r3, r3, #8
 80090fe:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 8009102:	4313      	orrs	r3, r2
 8009104:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8009106:	78a3      	ldrb	r3, [r4, #2]
 8009108:	3301      	adds	r3, #1
 800910a:	70a3      	strb	r3, [r4, #2]
}
 800910c:	b002      	add	sp, #8
 800910e:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 8009110:	2103      	movs	r1, #3
 8009112:	e7e0      	b.n	80090d6 <ft6x06_TS_GetXY+0x1a>
 8009114:	20005fd6 	.word	0x20005fd6

08009118 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009118:	2201      	movs	r2, #1
 800911a:	21a4      	movs	r1, #164	; 0xa4
 800911c:	b2c0      	uxtb	r0, r0
 800911e:	f000 ba3b 	b.w	8009598 <TS_IO_Write>

08009122 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8009122:	2200      	movs	r2, #0
 8009124:	21a4      	movs	r1, #164	; 0xa4
 8009126:	b2c0      	uxtb	r0, r0
 8009128:	f000 ba36 	b.w	8009598 <TS_IO_Write>

0800912c <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 800912c:	f7ff bff9 	b.w	8009122 <ft6x06_TS_DisableIT>

08009130 <ft6x06_TS_ClearIT>:
 8009130:	4770      	bx	lr
	...

08009134 <ft6x06_Init>:
{  
 8009134:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8009136:	4b09      	ldr	r3, [pc, #36]	; (800915c <ft6x06_Init+0x28>)
 8009138:	781a      	ldrb	r2, [r3, #0]
 800913a:	4290      	cmp	r0, r2
 800913c:	d00a      	beq.n	8009154 <ft6x06_Init+0x20>
 800913e:	7859      	ldrb	r1, [r3, #1]
 8009140:	4288      	cmp	r0, r1
 8009142:	d007      	beq.n	8009154 <ft6x06_Init+0x20>
 8009144:	b10a      	cbz	r2, 800914a <ft6x06_Init+0x16>
 8009146:	b929      	cbnz	r1, 8009154 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8009148:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800914a:	5498      	strb	r0, [r3, r2]
}
 800914c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8009150:	f000 ba20 	b.w	8009594 <TS_IO_Init>
}
 8009154:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009158:	4770      	bx	lr
 800915a:	bf00      	nop
 800915c:	20005fd4 	.word	0x20005fd4

08009160 <NT35510_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t NT35510_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8009160:	b530      	push	{r4, r5, lr}
 8009162:	4604      	mov	r4, r0
 8009164:	b0b1      	sub	sp, #196	; 0xc4
  NT35510_IO_Delay(120);
 8009166:	2078      	movs	r0, #120	; 0x78
{
 8009168:	460d      	mov	r5, r1
  NT35510_IO_Delay(120);
 800916a:	f000 fa65 	bl	8009638 <NT35510_IO_Delay>

/* ************************************************************************** */
/* Proprietary Initialization                                                 */
/* ************************************************************************** */
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800916e:	4ba3      	ldr	r3, [pc, #652]	; (80093fc <NT35510_Init+0x29c>)
  const uint8_t nt35510_reg1[]  = {0x03, 0x03, 0x03, 0xB0};
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8009170:	4aa3      	ldr	r2, [pc, #652]	; (8009400 <NT35510_Init+0x2a0>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8009172:	6818      	ldr	r0, [r3, #0]
 8009174:	889b      	ldrh	r3, [r3, #4]
 8009176:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 800917a:	4ba2      	ldr	r3, [pc, #648]	; (8009404 <NT35510_Init+0x2a4>)
  const uint8_t nt35510_reg3[]  = {0x03, 0x03, 0x03, 0xB1};
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800917c:	49a2      	ldr	r1, [pc, #648]	; (8009408 <NT35510_Init+0x2a8>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800917e:	902c      	str	r0, [sp, #176]	; 0xb0
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8009180:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8009184:	4ba1      	ldr	r3, [pc, #644]	; (800940c <NT35510_Init+0x2ac>)
  const uint8_t nt35510_reg5[]  = {0x00, 0x00, 0x02, 0xB2};
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8009186:	48a2      	ldr	r0, [pc, #648]	; (8009410 <NT35510_Init+0x2b0>)
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
  const uint8_t nt35510_reg8[]  = {0x09, 0x09, 0x09, 0xB3};
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8009188:	f8df c2a4 	ldr.w	ip, [pc, #676]	; 8009430 <NT35510_Init+0x2d0>
  const uint8_t nt35510_reg10[] = {0x08, 0x08, 0x08, 0xB5};
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 800918c:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 8009434 <NT35510_Init+0x2d4>
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8009190:	e9cd 1316 	strd	r1, r3, [sp, #88]	; 0x58
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8009194:	4b9f      	ldr	r3, [pc, #636]	; (8009414 <NT35510_Init+0x2b4>)
 8009196:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
 800919a:	f240 13bf 	movw	r3, #447	; 0x1bf
 800919e:	f8ad 3004 	strh.w	r3, [sp, #4]
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 80091a2:	4b9d      	ldr	r3, [pc, #628]	; (8009418 <NT35510_Init+0x2b8>)
 80091a4:	e9cd c31a 	strd	ip, r3, [sp, #104]	; 0x68
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 80091a8:	4b9c      	ldr	r3, [pc, #624]	; (800941c <NT35510_Init+0x2bc>)
 80091aa:	e9cd e31c 	strd	lr, r3, [sp, #112]	; 0x70
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
 80091ae:	4b9c      	ldr	r3, [pc, #624]	; (8009420 <NT35510_Init+0x2c0>)
 80091b0:	931e      	str	r3, [sp, #120]	; 0x78
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
 80091b2:	f103 7380 	add.w	r3, r3, #16777216	; 0x1000000
 80091b6:	931f      	str	r3, [sp, #124]	; 0x7c
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091b8:	4b9a      	ldr	r3, [pc, #616]	; (8009424 <NT35510_Init+0x2c4>)
 80091ba:	789a      	ldrb	r2, [r3, #2]
 80091bc:	f88d 2046 	strb.w	r2, [sp, #70]	; 0x46
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091c0:	f8b3 2007 	ldrh.w	r2, [r3, #7]
 80091c4:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091c8:	7ada      	ldrb	r2, [r3, #11]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091ca:	8819      	ldrh	r1, [r3, #0]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091cc:	f88d 204a 	strb.w	r2, [sp, #74]	; 0x4a
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80091d0:	f240 32b6 	movw	r2, #950	; 0x3b6
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091d4:	f8d3 0003 	ldr.w	r0, [r3, #3]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80091d8:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80091dc:	f8ad 2008 	strh.w	r2, [sp, #8]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091e0:	f8b3 1009 	ldrh.w	r1, [r3, #9]
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80091e4:	902e      	str	r0, [sp, #184]	; 0xb8
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80091e6:	f245 12b5 	movw	r2, #20917	; 0x51b5
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80091ea:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80091ee:	f8ad 200c 	strh.w	r2, [sp, #12]
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80091f2:	8999      	ldrh	r1, [r3, #12]
 80091f4:	7b9a      	ldrb	r2, [r3, #14]
 80091f6:	f88d 204e 	strb.w	r2, [sp, #78]	; 0x4e
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80091fa:	4a8b      	ldr	r2, [pc, #556]	; (8009428 <NT35510_Init+0x2c8>)
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80091fc:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 8009200:	6810      	ldr	r0, [r2, #0]
 8009202:	7912      	ldrb	r2, [r2, #4]
 8009204:	f88d 208c 	strb.w	r2, [sp, #140]	; 0x8c
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 8009208:	4a88      	ldr	r2, [pc, #544]	; (800942c <NT35510_Init+0x2cc>)
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 800920a:	9022      	str	r0, [sp, #136]	; 0x88
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 800920c:	f04f 413c 	mov.w	r1, #3154116608	; 0xbc000000
 8009210:	e9cd 1220 	strd	r1, r2, [sp, #128]	; 0x80
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 8009214:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
 8009218:	f8ad 2010 	strh.w	r2, [sp, #16]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 800921c:	2236      	movs	r2, #54	; 0x36
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 800921e:	f8d3 000f 	ldr.w	r0, [r3, #15]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 8009222:	f8ad 2014 	strh.w	r2, [sp, #20]
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 8009226:	7cda      	ldrb	r2, [r3, #19]
 8009228:	9024      	str	r0, [sp, #144]	; 0x90
 800922a:	f88d 2094 	strb.w	r2, [sp, #148]	; 0x94
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 800922e:	6958      	ldr	r0, [r3, #20]
 8009230:	7e1a      	ldrb	r2, [r3, #24]
 8009232:	9026      	str	r0, [sp, #152]	; 0x98
 8009234:	f88d 209c 	strb.w	r2, [sp, #156]	; 0x9c
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8009238:	f8d3 0019 	ldr.w	r0, [r3, #25]
 800923c:	9028      	str	r0, [sp, #160]	; 0xa0
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 800923e:	f246 0236 	movw	r2, #24630	; 0x6036
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8009242:	f8d3 001e 	ldr.w	r0, [r3, #30]
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 8009246:	f8ad 2018 	strh.w	r2, [sp, #24]
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800924a:	7f5a      	ldrb	r2, [r3, #29]
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800924c:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8009250:	f88d 30ac 	strb.w	r3, [sp, #172]	; 0xac
  const uint8_t nt35510_reg26[] = {NT35510_CMD_TEEON, 0x00};  /* Tear on */
 8009254:	2335      	movs	r3, #53	; 0x35
 8009256:	f8ad 301c 	strh.w	r3, [sp, #28]
  const uint8_t nt35510_reg27[] = {NT35510_CMD_SLPOUT, 0x00}; /* Sleep out */
 800925a:	2311      	movs	r3, #17
 800925c:	f8ad 3020 	strh.w	r3, [sp, #32]
  const uint8_t nt35510_reg30[] = {NT35510_CMD_DISPON, 0x00};
 8009260:	2329      	movs	r3, #41	; 0x29
 8009262:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24

  const uint8_t nt35510_reg31[] = {NT35510_CMD_WRDISBV, 0x7F};
 8009266:	f647 7351 	movw	r3, #32593	; 0x7f51
 800926a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 800926e:	f642 4353 	movw	r3, #11347	; 0x2c53
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8009272:	f88d 20a4 	strb.w	r2, [sp, #164]	; 0xa4
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8009276:	902a      	str	r0, [sp, #168]	; 0xa8
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8009278:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
  const uint8_t nt35510_reg33[] = {NT35510_CMD_WRCABC, 0x02};
 800927c:	f240 2355 	movw	r3, #597	; 0x255
 8009280:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
  const uint8_t nt35510_reg34[] = {NT35510_CMD_WRCABCMB, 0xFF};
 8009284:	f64f 735e 	movw	r3, #65374	; 0xff5e
 8009288:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 800928c:	232c      	movs	r3, #44	; 0x2c
 800928e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 8009292:	f245 533a 	movw	r3, #21818	; 0x553a
 8009296:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};

  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 800929a:	a92c      	add	r1, sp, #176	; 0xb0
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 800929c:	f247 733a 	movw	r3, #30522	; 0x773a
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 80092a0:	2005      	movs	r0, #5
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 80092a2:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 80092a6:	f7f7 ffab 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg1);/* AVDD: 5.2V */
 80092aa:	a914      	add	r1, sp, #80	; 0x50
 80092ac:	2003      	movs	r0, #3
 80092ae:	f7f7 ffa7 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg2);/* AVDD: Ratio */
 80092b2:	a915      	add	r1, sp, #84	; 0x54
 80092b4:	2003      	movs	r0, #3
 80092b6:	f7f7 ffa3 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg3);/* AVEE: -5.2V */
 80092ba:	a916      	add	r1, sp, #88	; 0x58
 80092bc:	2003      	movs	r0, #3
 80092be:	f7f7 ff9f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg4);/* AVEE: Ratio */
 80092c2:	a917      	add	r1, sp, #92	; 0x5c
 80092c4:	2003      	movs	r0, #3
 80092c6:	f7f7 ff9b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg5);/* VCL: -2.5V */
 80092ca:	a918      	add	r1, sp, #96	; 0x60
 80092cc:	2003      	movs	r0, #3
 80092ce:	f7f7 ff97 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg6);/* VCL: Ratio */
 80092d2:	a919      	add	r1, sp, #100	; 0x64
 80092d4:	2003      	movs	r0, #3
 80092d6:	f7f7 ff93 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg7);/* VGH: 15V (Free Pump) */
 80092da:	a901      	add	r1, sp, #4
 80092dc:	2001      	movs	r0, #1
 80092de:	f7f7 ff8f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg8);
 80092e2:	a91a      	add	r1, sp, #104	; 0x68
 80092e4:	2003      	movs	r0, #3
 80092e6:	f7f7 ff8b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg9);/* VGH: Ratio */
 80092ea:	a91b      	add	r1, sp, #108	; 0x6c
 80092ec:	2003      	movs	r0, #3
 80092ee:	f7f7 ff87 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg10);/* VGL_REG: -10V */
 80092f2:	a91c      	add	r1, sp, #112	; 0x70
 80092f4:	2003      	movs	r0, #3
 80092f6:	f7f7 ff83 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg12);/* VGLX: Ratio */
 80092fa:	a91d      	add	r1, sp, #116	; 0x74
 80092fc:	2003      	movs	r0, #3
 80092fe:	f7f7 ff7f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg13);/* VGMP/VGSP: 4.5V/0V */
 8009302:	a91e      	add	r1, sp, #120	; 0x78
 8009304:	2003      	movs	r0, #3
 8009306:	f7f7 ff7b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg14);/* VGMN/VGSN:-4.5V/0V */
 800930a:	a91f      	add	r1, sp, #124	; 0x7c
 800930c:	2003      	movs	r0, #3
 800930e:	f7f7 ff77 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg15);/* VCOM: -1.325V */
 8009312:	a911      	add	r1, sp, #68	; 0x44
 8009314:	2002      	movs	r0, #2
 8009316:	f7f7 ff73 	bl	8001200 <DSI_IO_WriteCmd>

/* ************************************************************************** */
/* Proprietary DCS Initialization                                             */
/* ************************************************************************** */
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg16);/* LV2: Page 0 enable */
 800931a:	a92e      	add	r1, sp, #184	; 0xb8
 800931c:	2005      	movs	r0, #5
 800931e:	f7f7 ff6f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg17);/* Display control */
 8009322:	a912      	add	r1, sp, #72	; 0x48
 8009324:	2002      	movs	r0, #2
 8009326:	f7f7 ff6b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg18);/* Src hold time */
 800932a:	a902      	add	r1, sp, #8
 800932c:	2001      	movs	r0, #1
 800932e:	f7f7 ff67 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg19);
 8009332:	a903      	add	r1, sp, #12
 8009334:	2001      	movs	r0, #1
 8009336:	f7f7 ff63 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg20);/* Gate EQ control */
 800933a:	a913      	add	r1, sp, #76	; 0x4c
 800933c:	2002      	movs	r0, #2
 800933e:	f7f7 ff5f 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(4, (uint8_t *)nt35510_reg21);/* Src EQ control(Mode2) */
 8009342:	a922      	add	r1, sp, #136	; 0x88
 8009344:	2004      	movs	r0, #4
 8009346:	f7f7 ff5b 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg22);/* Inv. mode(2-dot) */
 800934a:	a920      	add	r1, sp, #128	; 0x80
 800934c:	2003      	movs	r0, #3
 800934e:	f7f7 ff57 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg23);
 8009352:	a921      	add	r1, sp, #132	; 0x84
 8009354:	2003      	movs	r0, #3
 8009356:	f7f7 ff53 	bl	8001200 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg24);
 800935a:	a904      	add	r1, sp, #16
 800935c:	2001      	movs	r0, #1
 800935e:	f7f7 ff4f 	bl	8001200 <DSI_IO_WriteCmd>
  /* Tear on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg26);
 8009362:	a907      	add	r1, sp, #28
 8009364:	2000      	movs	r0, #0
 8009366:	f7f7 ff4b 	bl	8001200 <DSI_IO_WriteCmd>
  /* Set Pixel color format to RGB888 */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg37);
 800936a:	2000      	movs	r0, #0
 800936c:	a910      	add	r1, sp, #64	; 0x40
 800936e:	f7f7 ff47 	bl	8001200 <DSI_IO_WriteCmd>
/* ************************************************************************** */
/* Standard DCS Initialization                                                */
/* ************************************************************************** */

  /* Add a delay, otherwise MADCTL not taken */
  NT35510_IO_Delay(200);
 8009372:	20c8      	movs	r0, #200	; 0xc8
 8009374:	f000 f960 	bl	8009638 <NT35510_IO_Delay>

  /* Configure orientation */
  if(orientation == NT35510_ORIENTATION_PORTRAIT)
 8009378:	2d00      	cmp	r5, #0
 800937a:	d134      	bne.n	80093e6 <NT35510_Init+0x286>
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_portrait);
 800937c:	a905      	add	r1, sp, #20
 800937e:	2001      	movs	r0, #1
 8009380:	f7f7 ff3e 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_portrait);
 8009384:	a924      	add	r1, sp, #144	; 0x90
 8009386:	2004      	movs	r0, #4
 8009388:	f7f7 ff3a 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_portrait);
 800938c:	a926      	add	r1, sp, #152	; 0x98
  }
  else
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 800938e:	2004      	movs	r0, #4
 8009390:	f7f7 ff36 	bl	8001200 <DSI_IO_WriteCmd>
  }

  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg27);
 8009394:	a908      	add	r1, sp, #32
 8009396:	2000      	movs	r0, #0
 8009398:	f7f7 ff32 	bl	8001200 <DSI_IO_WriteCmd>
  /* Wait for sleep out exit */
  NT35510_IO_Delay(120);
 800939c:	2078      	movs	r0, #120	; 0x78
 800939e:	f000 f94b 	bl	8009638 <NT35510_IO_Delay>

  switch(ColorCoding)
 80093a2:	2c02      	cmp	r4, #2
  {
    case NT35510_FORMAT_RBG565 :
      /* Set Pixel color format to RGB565 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg36);
 80093a4:	bf0c      	ite	eq
 80093a6:	a90f      	addeq	r1, sp, #60	; 0x3c
      break;
    case NT35510_FORMAT_RGB888 :
      /* Set Pixel color format to RGB888 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg37);
 80093a8:	a910      	addne	r1, sp, #64	; 0x40
 80093aa:	2001      	movs	r0, #1
 80093ac:	f7f7 ff28 	bl	8001200 <DSI_IO_WriteCmd>
      break;
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg31);
 80093b0:	a90a      	add	r1, sp, #40	; 0x28
 80093b2:	2001      	movs	r0, #1
 80093b4:	f7f7 ff24 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg32);
 80093b8:	a90b      	add	r1, sp, #44	; 0x2c
 80093ba:	2001      	movs	r0, #1
 80093bc:	f7f7 ff20 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg33);
 80093c0:	a90c      	add	r1, sp, #48	; 0x30
 80093c2:	2001      	movs	r0, #1
 80093c4:	f7f7 ff1c 	bl	8001200 <DSI_IO_WriteCmd>
  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg34);
 80093c8:	a90d      	add	r1, sp, #52	; 0x34
 80093ca:	2001      	movs	r0, #1
 80093cc:	f7f7 ff18 	bl	8001200 <DSI_IO_WriteCmd>
  /** CABC : Content Adaptive Backlight Control section end << */

  /* Display on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg30);
 80093d0:	a909      	add	r1, sp, #36	; 0x24
 80093d2:	2000      	movs	r0, #0
 80093d4:	f7f7 ff14 	bl	8001200 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg35);
 80093d8:	a90e      	add	r1, sp, #56	; 0x38
 80093da:	2000      	movs	r0, #0
 80093dc:	f7f7 ff10 	bl	8001200 <DSI_IO_WriteCmd>

  return 0;
}
 80093e0:	2000      	movs	r0, #0
 80093e2:	b031      	add	sp, #196	; 0xc4
 80093e4:	bd30      	pop	{r4, r5, pc}
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
 80093e6:	a906      	add	r1, sp, #24
 80093e8:	2001      	movs	r0, #1
 80093ea:	f7f7 ff09 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
 80093ee:	a928      	add	r1, sp, #160	; 0xa0
 80093f0:	2004      	movs	r0, #4
 80093f2:	f7f7 ff05 	bl	8001200 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 80093f6:	a92a      	add	r1, sp, #168	; 0xa8
 80093f8:	e7c9      	b.n	800938e <NT35510_Init+0x22e>
 80093fa:	bf00      	nop
 80093fc:	08029c18 	.word	0x08029c18
 8009400:	b0030303 	.word	0xb0030303
 8009404:	b6464646 	.word	0xb6464646
 8009408:	b1030303 	.word	0xb1030303
 800940c:	b7363636 	.word	0xb7363636
 8009410:	b2020000 	.word	0xb2020000
 8009414:	b8262626 	.word	0xb8262626
 8009418:	b9363636 	.word	0xb9363636
 800941c:	ba262626 	.word	0xba262626
 8009420:	bc008000 	.word	0xbc008000
 8009424:	08027853 	.word	0x08027853
 8009428:	08029c1f 	.word	0x08029c1f
 800942c:	cc000003 	.word	0xcc000003
 8009430:	b3090909 	.word	0xb3090909
 8009434:	b5080808 	.word	0xb5080808

08009438 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8009438:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800943a:	4d2f      	ldr	r5, [pc, #188]	; (80094f8 <I2C1_Init+0xc0>)
{
 800943c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800943e:	4628      	mov	r0, r5
 8009440:	f002 f964 	bl	800b70c <HAL_I2C_GetState>
 8009444:	4604      	mov	r4, r0
 8009446:	2800      	cmp	r0, #0
 8009448:	d154      	bne.n	80094f4 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800944a:	4a2c      	ldr	r2, [pc, #176]	; (80094fc <I2C1_Init+0xc4>)
 800944c:	4b2c      	ldr	r3, [pc, #176]	; (8009500 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800944e:	4e2d      	ldr	r6, [pc, #180]	; (8009504 <I2C1_Init+0xcc>)
 8009450:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8009452:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8009456:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800945a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800945e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8009462:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8009466:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009468:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800946a:	f043 0302 	orr.w	r3, r3, #2
 800946e:	6333      	str	r3, [r6, #48]	; 0x30
 8009470:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8009472:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8009474:	f003 0302 	and.w	r3, r3, #2
 8009478:	9301      	str	r3, [sp, #4]
 800947a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800947c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8009480:	2312      	movs	r3, #18
 8009482:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8009486:	2002      	movs	r0, #2
 8009488:	2304      	movs	r3, #4
 800948a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800948e:	a903      	add	r1, sp, #12
 8009490:	481d      	ldr	r0, [pc, #116]	; (8009508 <I2C1_Init+0xd0>)
 8009492:	f001 fb69 	bl	800ab68 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8009496:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800949a:	a903      	add	r1, sp, #12
 800949c:	481a      	ldr	r0, [pc, #104]	; (8009508 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800949e:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 80094a0:	f001 fb62 	bl	800ab68 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 80094a4:	9402      	str	r4, [sp, #8]
 80094a6:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80094a8:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80094ac:	6433      	str	r3, [r6, #64]	; 0x40
 80094ae:	6c33      	ldr	r3, [r6, #64]	; 0x40
 80094b0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80094b4:	9302      	str	r3, [sp, #8]
 80094b6:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 80094b8:	6a33      	ldr	r3, [r6, #32]
 80094ba:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80094be:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 80094c0:	6a33      	ldr	r3, [r6, #32]
 80094c2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80094c6:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 80094c8:	4622      	mov	r2, r4
 80094ca:	2105      	movs	r1, #5
 80094cc:	201f      	movs	r0, #31
 80094ce:	f000 fd15 	bl	8009efc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80094d2:	201f      	movs	r0, #31
 80094d4:	f000 fd44 	bl	8009f60 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80094d8:	4622      	mov	r2, r4
 80094da:	2105      	movs	r1, #5
 80094dc:	2020      	movs	r0, #32
 80094de:	f000 fd0d 	bl	8009efc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80094e2:	2020      	movs	r0, #32
 80094e4:	f000 fd3c 	bl	8009f60 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80094e8:	4628      	mov	r0, r5
  }
}
 80094ea:	b008      	add	sp, #32
 80094ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 80094f0:	f001 beb2 	b.w	800b258 <HAL_I2C_Init>
}
 80094f4:	b008      	add	sp, #32
 80094f6:	bd70      	pop	{r4, r5, r6, pc}
 80094f8:	20005fdc 	.word	0x20005fdc
 80094fc:	40005400 	.word	0x40005400
 8009500:	00061a80 	.word	0x00061a80
 8009504:	40023800 	.word	0x40023800
 8009508:	40020400 	.word	0x40020400

0800950c <BSP_PB_Init>:
{
 800950c:	b510      	push	{r4, lr}
 800950e:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8009510:	4b19      	ldr	r3, [pc, #100]	; (8009578 <BSP_PB_Init+0x6c>)
 8009512:	2400      	movs	r4, #0
 8009514:	9400      	str	r4, [sp, #0]
 8009516:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009518:	f042 0201 	orr.w	r2, r2, #1
 800951c:	631a      	str	r2, [r3, #48]	; 0x30
 800951e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009520:	f003 0301 	and.w	r3, r3, #1
 8009524:	9300      	str	r3, [sp, #0]
 8009526:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8009528:	b969      	cbnz	r1, 8009546 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 800952a:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 800952c:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8009530:	2302      	movs	r3, #2
 8009532:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009534:	4b11      	ldr	r3, [pc, #68]	; (800957c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8009536:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009538:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800953c:	a901      	add	r1, sp, #4
 800953e:	f001 fb13 	bl	800ab68 <HAL_GPIO_Init>
}
 8009542:	b006      	add	sp, #24
 8009544:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8009546:	2901      	cmp	r1, #1
 8009548:	d1fb      	bne.n	8009542 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 800954a:	2302      	movs	r3, #2
 800954c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 800954e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8009552:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009554:	4b09      	ldr	r3, [pc, #36]	; (800957c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8009556:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8009558:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 800955c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 800955e:	a901      	add	r1, sp, #4
 8009560:	f001 fb02 	bl	800ab68 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8009564:	4622      	mov	r2, r4
 8009566:	210f      	movs	r1, #15
 8009568:	2006      	movs	r0, #6
 800956a:	f000 fcc7 	bl	8009efc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 800956e:	2006      	movs	r0, #6
 8009570:	f000 fcf6 	bl	8009f60 <HAL_NVIC_EnableIRQ>
}
 8009574:	e7e5      	b.n	8009542 <BSP_PB_Init+0x36>
 8009576:	bf00      	nop
 8009578:	40023800 	.word	0x40023800
 800957c:	20000048 	.word	0x20000048

08009580 <BSP_PB_GetState>:
{
 8009580:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8009582:	4b03      	ldr	r3, [pc, #12]	; (8009590 <BSP_PB_GetState+0x10>)
 8009584:	2101      	movs	r1, #1
 8009586:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800958a:	f001 fc75 	bl	800ae78 <HAL_GPIO_ReadPin>
}
 800958e:	bd08      	pop	{r3, pc}
 8009590:	20000048 	.word	0x20000048

08009594 <TS_IO_Init>:
 8009594:	f7ff bf50 	b.w	8009438 <I2C1_Init>

08009598 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8009598:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 800959a:	2301      	movs	r3, #1
 800959c:	f88d 2017 	strb.w	r2, [sp, #23]
 80095a0:	2264      	movs	r2, #100	; 0x64
 80095a2:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80095a6:	f10d 0217 	add.w	r2, sp, #23
 80095aa:	9200      	str	r2, [sp, #0]
 80095ac:	460a      	mov	r2, r1
 80095ae:	4601      	mov	r1, r0
 80095b0:	4805      	ldr	r0, [pc, #20]	; (80095c8 <TS_IO_Write+0x30>)
 80095b2:	f001 ff13 	bl	800b3dc <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 80095b6:	b120      	cbz	r0, 80095c2 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 80095b8:	4803      	ldr	r0, [pc, #12]	; (80095c8 <TS_IO_Write+0x30>)
 80095ba:	f001 fef5 	bl	800b3a8 <HAL_I2C_DeInit>
  I2C1_Init();
 80095be:	f7ff ff3b 	bl	8009438 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 80095c2:	b007      	add	sp, #28
 80095c4:	f85d fb04 	ldr.w	pc, [sp], #4
 80095c8:	20005fdc 	.word	0x20005fdc

080095cc <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 80095cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 80095ce:	2300      	movs	r3, #0
{
 80095d0:	460a      	mov	r2, r1
  uint8_t Value = 0;
 80095d2:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 80095d6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80095da:	2301      	movs	r3, #1
 80095dc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80095e0:	f10d 0117 	add.w	r1, sp, #23
 80095e4:	9100      	str	r1, [sp, #0]
 80095e6:	4601      	mov	r1, r0
 80095e8:	4806      	ldr	r0, [pc, #24]	; (8009604 <TS_IO_Read+0x38>)
 80095ea:	f001 ff87 	bl	800b4fc <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 80095ee:	b120      	cbz	r0, 80095fa <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 80095f0:	4804      	ldr	r0, [pc, #16]	; (8009604 <TS_IO_Read+0x38>)
 80095f2:	f001 fed9 	bl	800b3a8 <HAL_I2C_DeInit>
  I2C1_Init();
 80095f6:	f7ff ff1f 	bl	8009438 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 80095fa:	f89d 0017 	ldrb.w	r0, [sp, #23]
 80095fe:	b007      	add	sp, #28
 8009600:	f85d fb04 	ldr.w	pc, [sp], #4
 8009604:	20005fdc 	.word	0x20005fdc

08009608 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8009608:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 800960a:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800960e:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8009612:	9200      	str	r2, [sp, #0]
 8009614:	2301      	movs	r3, #1
 8009616:	460a      	mov	r2, r1
 8009618:	4601      	mov	r1, r0
 800961a:	4806      	ldr	r0, [pc, #24]	; (8009634 <TS_IO_ReadMultiple+0x2c>)
 800961c:	f001 ff6e 	bl	800b4fc <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8009620:	4604      	mov	r4, r0
 8009622:	b120      	cbz	r0, 800962e <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8009624:	4803      	ldr	r0, [pc, #12]	; (8009634 <TS_IO_ReadMultiple+0x2c>)
 8009626:	f001 febf 	bl	800b3a8 <HAL_I2C_DeInit>
  I2C1_Init();
 800962a:	f7ff ff05 	bl	8009438 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 800962e:	b2a0      	uxth	r0, r4
 8009630:	b004      	add	sp, #16
 8009632:	bd10      	pop	{r4, pc}
 8009634:	20005fdc 	.word	0x20005fdc

08009638 <NT35510_IO_Delay>:
 8009638:	f000 bc3a 	b.w	8009eb0 <HAL_Delay>

0800963c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800963c:	b500      	push	{lr}
 800963e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009640:	f44f 7280 	mov.w	r2, #256	; 0x100
 8009644:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8009646:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 800964a:	2205      	movs	r2, #5
 800964c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 800964e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8009650:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8009652:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8009654:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009658:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 800965c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8009660:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009662:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8009664:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8009666:	2210      	movs	r2, #16
 8009668:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 800966a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 800966e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8009670:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8009672:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8009674:	a906      	add	r1, sp, #24
 8009676:	466a      	mov	r2, sp
 8009678:	4804      	ldr	r0, [pc, #16]	; (800968c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 800967a:	f002 fbc0 	bl	800bdfe <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 800967e:	3800      	subs	r0, #0
 8009680:	bf18      	it	ne
 8009682:	2001      	movne	r0, #1
 8009684:	b015      	add	sp, #84	; 0x54
 8009686:	f85d fb04 	ldr.w	pc, [sp], #4
 800968a:	bf00      	nop
 800968c:	20006030 	.word	0x20006030

08009690 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8009690:	b500      	push	{lr}
 8009692:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009694:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009698:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 800969a:	2306      	movs	r3, #6
 800969c:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800969e:	4817      	ldr	r0, [pc, #92]	; (80096fc <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 80096a0:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80096a2:	f241 3288 	movw	r2, #5000	; 0x1388
 80096a6:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80096a8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 80096ac:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 80096b0:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 80096b2:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80096b4:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80096b6:	f002 fb5e 	bl	800bd76 <HAL_QSPI_Command>
 80096ba:	b9e0      	cbnz	r0, 80096f6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 80096bc:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 80096be:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 80096c2:	2201      	movs	r2, #1
 80096c4:	2310      	movs	r3, #16
 80096c6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 80096ca:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 80096ce:	2305      	movs	r3, #5
 80096d0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80096d4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 80096d8:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 80096da:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80096dc:	4807      	ldr	r0, [pc, #28]	; (80096fc <QSPI_WriteEnable.constprop.0+0x6c>)
 80096de:	f241 3388 	movw	r3, #5000	; 0x1388
 80096e2:	466a      	mov	r2, sp
 80096e4:	a906      	add	r1, sp, #24
 80096e6:	f002 fb8a 	bl	800bdfe <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 80096ea:	3800      	subs	r0, #0
 80096ec:	bf18      	it	ne
 80096ee:	2001      	movne	r0, #1
}
 80096f0:	b015      	add	sp, #84	; 0x54
 80096f2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 80096f6:	2001      	movs	r0, #1
 80096f8:	e7fa      	b.n	80096f0 <QSPI_WriteEnable.constprop.0+0x60>
 80096fa:	bf00      	nop
 80096fc:	20006030 	.word	0x20006030

08009700 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8009700:	b500      	push	{lr}
 8009702:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8009704:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009708:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800970a:	23eb      	movs	r3, #235	; 0xeb
 800970c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800970e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8009712:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8009714:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8009718:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800971a:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800971e:	2300      	movs	r3, #0
 8009720:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8009724:	220a      	movs	r2, #10
 8009726:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009728:	a902      	add	r1, sp, #8
 800972a:	466a      	mov	r2, sp
 800972c:	4806      	ldr	r0, [pc, #24]	; (8009748 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800972e:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009730:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8009734:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8009736:	f002 fbb2 	bl	800be9e <HAL_QSPI_MemoryMapped>
}
 800973a:	3800      	subs	r0, #0
 800973c:	bf18      	it	ne
 800973e:	2001      	movne	r0, #1
 8009740:	b011      	add	sp, #68	; 0x44
 8009742:	f85d fb04 	ldr.w	pc, [sp], #4
 8009746:	bf00      	nop
 8009748:	20006030 	.word	0x20006030

0800974c <BSP_QSPI_MspInit>:
{
 800974c:	b570      	push	{r4, r5, r6, lr}
 800974e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8009750:	4b2c      	ldr	r3, [pc, #176]	; (8009804 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8009752:	482d      	ldr	r0, [pc, #180]	; (8009808 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8009754:	2400      	movs	r4, #0
 8009756:	9400      	str	r4, [sp, #0]
 8009758:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800975a:	f042 0202 	orr.w	r2, r2, #2
 800975e:	639a      	str	r2, [r3, #56]	; 0x38
 8009760:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009762:	f002 0202 	and.w	r2, r2, #2
 8009766:	9200      	str	r2, [sp, #0]
 8009768:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800976a:	699a      	ldr	r2, [r3, #24]
 800976c:	f042 0202 	orr.w	r2, r2, #2
 8009770:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009772:	699a      	ldr	r2, [r3, #24]
 8009774:	f022 0202 	bic.w	r2, r2, #2
 8009778:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800977a:	9401      	str	r4, [sp, #4]
 800977c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800977e:	f042 0202 	orr.w	r2, r2, #2
 8009782:	631a      	str	r2, [r3, #48]	; 0x30
 8009784:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009786:	f002 0202 	and.w	r2, r2, #2
 800978a:	9201      	str	r2, [sp, #4]
 800978c:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800978e:	9402      	str	r4, [sp, #8]
 8009790:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009792:	f042 0220 	orr.w	r2, r2, #32
 8009796:	631a      	str	r2, [r3, #48]	; 0x30
 8009798:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800979a:	f003 0320 	and.w	r3, r3, #32
 800979e:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80097a0:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80097a2:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80097a4:	2302      	movs	r3, #2
 80097a6:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80097aa:	2101      	movs	r1, #1
 80097ac:	2303      	movs	r3, #3
 80097ae:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80097b2:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80097b4:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80097b6:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80097b8:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80097ba:	f001 f9d5 	bl	800ab68 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80097be:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80097c2:	a903      	add	r1, sp, #12
 80097c4:	4811      	ldr	r0, [pc, #68]	; (800980c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80097c6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80097c8:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80097ca:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80097cc:	f001 f9cc 	bl	800ab68 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80097d0:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097d4:	a903      	add	r1, sp, #12
 80097d6:	480d      	ldr	r0, [pc, #52]	; (800980c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80097d8:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80097da:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097dc:	f001 f9c4 	bl	800ab68 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80097e0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097e2:	a903      	add	r1, sp, #12
 80097e4:	4809      	ldr	r0, [pc, #36]	; (800980c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80097e6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80097e8:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80097ea:	f001 f9bd 	bl	800ab68 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80097ee:	4622      	mov	r2, r4
 80097f0:	210f      	movs	r1, #15
 80097f2:	205b      	movs	r0, #91	; 0x5b
 80097f4:	f000 fb82 	bl	8009efc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80097f8:	205b      	movs	r0, #91	; 0x5b
 80097fa:	f000 fbb1 	bl	8009f60 <HAL_NVIC_EnableIRQ>
}
 80097fe:	b008      	add	sp, #32
 8009800:	bd70      	pop	{r4, r5, r6, pc}
 8009802:	bf00      	nop
 8009804:	40023800 	.word	0x40023800
 8009808:	40020400 	.word	0x40020400
 800980c:	40021400 	.word	0x40021400

08009810 <BSP_QSPI_Init>:
{
 8009810:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8009812:	4c48      	ldr	r4, [pc, #288]	; (8009934 <BSP_QSPI_Init+0x124>)
 8009814:	4b48      	ldr	r3, [pc, #288]	; (8009938 <BSP_QSPI_Init+0x128>)
 8009816:	6023      	str	r3, [r4, #0]
{
 8009818:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800981a:	4620      	mov	r0, r4
 800981c:	f002 fa98 	bl	800bd50 <HAL_QSPI_DeInit>
 8009820:	4605      	mov	r5, r0
 8009822:	b110      	cbz	r0, 800982a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8009824:	2001      	movs	r0, #1
}
 8009826:	b011      	add	sp, #68	; 0x44
 8009828:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800982a:	4601      	mov	r1, r0
 800982c:	4620      	mov	r0, r4
 800982e:	f7ff ff8d 	bl	800974c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8009832:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8009834:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8009836:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800983a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800983c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8009840:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8009844:	fab3 f383 	clz	r3, r3
 8009848:	3b01      	subs	r3, #1
 800984a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800984c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800984e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8009852:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8009856:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800985a:	f002 fa25 	bl	800bca8 <HAL_QSPI_Init>
 800985e:	2800      	cmp	r0, #0
 8009860:	d1e0      	bne.n	8009824 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8009862:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8009866:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800986a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800986e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8009870:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8009872:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8009874:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009876:	f241 3288 	movw	r2, #5000	; 0x1388
 800987a:	a902      	add	r1, sp, #8
 800987c:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800987e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8009880:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009882:	f002 fa78 	bl	800bd76 <HAL_QSPI_Command>
 8009886:	b108      	cbz	r0, 800988c <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8009888:	2004      	movs	r0, #4
 800988a:	e7cc      	b.n	8009826 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800988c:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800988e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009892:	a902      	add	r1, sp, #8
 8009894:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8009896:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009898:	f002 fa6d 	bl	800bd76 <HAL_QSPI_Command>
 800989c:	2800      	cmp	r0, #0
 800989e:	d1f3      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80098a0:	f241 3088 	movw	r0, #5000	; 0x1388
 80098a4:	f7ff feca 	bl	800963c <QSPI_AutoPollingMemReady.constprop.0>
 80098a8:	2800      	cmp	r0, #0
 80098aa:	d1ed      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80098ac:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80098b0:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80098b4:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80098b8:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80098ba:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098bc:	f241 3288 	movw	r2, #5000	; 0x1388
 80098c0:	a902      	add	r1, sp, #8
 80098c2:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80098c4:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80098c6:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80098c8:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098ca:	f002 fa54 	bl	800bd76 <HAL_QSPI_Command>
 80098ce:	2800      	cmp	r0, #0
 80098d0:	d1da      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80098d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80098d6:	f10d 0107 	add.w	r1, sp, #7
 80098da:	4620      	mov	r0, r4
 80098dc:	f002 fbc4 	bl	800c068 <HAL_QSPI_Receive>
 80098e0:	2800      	cmp	r0, #0
 80098e2:	d1d1      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80098e4:	f7ff fed4 	bl	8009690 <QSPI_WriteEnable.constprop.0>
 80098e8:	2800      	cmp	r0, #0
 80098ea:	d1cd      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80098ec:	2381      	movs	r3, #129	; 0x81
 80098ee:	9302      	str	r3, [sp, #8]
 80098f0:	22f0      	movs	r2, #240	; 0xf0
 80098f2:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80098f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80098fa:	210a      	movs	r1, #10
 80098fc:	fab2 f282 	clz	r2, r2
 8009900:	fa01 f202 	lsl.w	r2, r1, r2
 8009904:	f003 030f 	and.w	r3, r3, #15
 8009908:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800990a:	a902      	add	r1, sp, #8
 800990c:	f241 3288 	movw	r2, #5000	; 0x1388
 8009910:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8009912:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8009916:	f002 fa2e 	bl	800bd76 <HAL_QSPI_Command>
 800991a:	2800      	cmp	r0, #0
 800991c:	d1b4      	bne.n	8009888 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800991e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009922:	f10d 0107 	add.w	r1, sp, #7
 8009926:	4620      	mov	r0, r4
 8009928:	f002 fb42 	bl	800bfb0 <HAL_QSPI_Transmit>
 800992c:	2800      	cmp	r0, #0
 800992e:	f43f af7a 	beq.w	8009826 <BSP_QSPI_Init+0x16>
 8009932:	e7a9      	b.n	8009888 <BSP_QSPI_Init+0x78>
 8009934:	20006030 	.word	0x20006030
 8009938:	a0001000 	.word	0xa0001000

0800993c <BSP_QSPI_MspDeInit>:
{
 800993c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800993e:	205b      	movs	r0, #91	; 0x5b
 8009940:	f000 fb1c 	bl	8009f7c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8009944:	4814      	ldr	r0, [pc, #80]	; (8009998 <BSP_QSPI_MspDeInit+0x5c>)
 8009946:	2140      	movs	r1, #64	; 0x40
 8009948:	f001 f9f4 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800994c:	4813      	ldr	r0, [pc, #76]	; (800999c <BSP_QSPI_MspDeInit+0x60>)
 800994e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009952:	f001 f9ef 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8009956:	4811      	ldr	r0, [pc, #68]	; (800999c <BSP_QSPI_MspDeInit+0x60>)
 8009958:	f44f 7180 	mov.w	r1, #256	; 0x100
 800995c:	f001 f9ea 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8009960:	480e      	ldr	r0, [pc, #56]	; (800999c <BSP_QSPI_MspDeInit+0x60>)
 8009962:	f44f 7100 	mov.w	r1, #512	; 0x200
 8009966:	f001 f9e5 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800996a:	480c      	ldr	r0, [pc, #48]	; (800999c <BSP_QSPI_MspDeInit+0x60>)
 800996c:	2180      	movs	r1, #128	; 0x80
 800996e:	f001 f9e1 	bl	800ad34 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8009972:	480a      	ldr	r0, [pc, #40]	; (800999c <BSP_QSPI_MspDeInit+0x60>)
 8009974:	2140      	movs	r1, #64	; 0x40
 8009976:	f001 f9dd 	bl	800ad34 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800997a:	4b09      	ldr	r3, [pc, #36]	; (80099a0 <BSP_QSPI_MspDeInit+0x64>)
 800997c:	699a      	ldr	r2, [r3, #24]
 800997e:	f042 0202 	orr.w	r2, r2, #2
 8009982:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8009984:	699a      	ldr	r2, [r3, #24]
 8009986:	f022 0202 	bic.w	r2, r2, #2
 800998a:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800998c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800998e:	f022 0202 	bic.w	r2, r2, #2
 8009992:	639a      	str	r2, [r3, #56]	; 0x38
}
 8009994:	bd08      	pop	{r3, pc}
 8009996:	bf00      	nop
 8009998:	40020400 	.word	0x40020400
 800999c:	40021400 	.word	0x40021400
 80099a0:	40023800 	.word	0x40023800

080099a4 <BSP_QSPI_DeInit>:
{
 80099a4:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80099a6:	4d08      	ldr	r5, [pc, #32]	; (80099c8 <BSP_QSPI_DeInit+0x24>)
 80099a8:	4b08      	ldr	r3, [pc, #32]	; (80099cc <BSP_QSPI_DeInit+0x28>)
 80099aa:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80099ac:	4628      	mov	r0, r5
 80099ae:	f002 f9cf 	bl	800bd50 <HAL_QSPI_DeInit>
 80099b2:	4604      	mov	r4, r0
 80099b4:	b928      	cbnz	r0, 80099c2 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80099b6:	4601      	mov	r1, r0
 80099b8:	4628      	mov	r0, r5
 80099ba:	f7ff ffbf 	bl	800993c <BSP_QSPI_MspDeInit>
}
 80099be:	4620      	mov	r0, r4
 80099c0:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80099c2:	2401      	movs	r4, #1
 80099c4:	e7fb      	b.n	80099be <BSP_QSPI_DeInit+0x1a>
 80099c6:	bf00      	nop
 80099c8:	20006030 	.word	0x20006030
 80099cc:	a0001000 	.word	0xa0001000

080099d0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80099d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80099d4:	4c21      	ldr	r4, [pc, #132]	; (8009a5c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099d6:	4d22      	ldr	r5, [pc, #136]	; (8009a60 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099d8:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80099da:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099de:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099e0:	4621      	mov	r1, r4
{
 80099e2:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80099e8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80099ea:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80099ee:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80099f2:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80099f6:	f002 ffdb 	bl	800c9b0 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80099fa:	4630      	mov	r0, r6
 80099fc:	f000 fa58 	bl	8009eb0 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8009a00:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a02:	4621      	mov	r1, r4
 8009a04:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a08:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009a0a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8009a0e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a12:	f002 ffcd 	bl	800c9b0 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8009a16:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009a18:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a1c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8009a1e:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a20:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a24:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8009a26:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a2a:	f002 ffc1 	bl	800c9b0 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8009a2e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8009a32:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8009a34:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8009a36:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a3a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8009a3c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8009a3e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a40:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009a44:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8009a46:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8009a48:	f002 ffb2 	bl	800c9b0 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009a4c:	4649      	mov	r1, r9
 8009a4e:	4628      	mov	r0, r5
}
 8009a50:	b003      	add	sp, #12
 8009a52:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8009a56:	f002 bfc9 	b.w	800c9ec <HAL_SDRAM_ProgramRefreshRate>
 8009a5a:	bf00      	nop
 8009a5c:	2000607c 	.word	0x2000607c
 8009a60:	20006168 	.word	0x20006168

08009a64 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009a64:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009a66:	4606      	mov	r6, r0
{
 8009a68:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009a6a:	2800      	cmp	r0, #0
 8009a6c:	f000 80bd 	beq.w	8009bea <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8009a70:	4b5f      	ldr	r3, [pc, #380]	; (8009bf0 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009a72:	4860      	ldr	r0, [pc, #384]	; (8009bf4 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009a74:	4c60      	ldr	r4, [pc, #384]	; (8009bf8 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8009a76:	2500      	movs	r5, #0
 8009a78:	9500      	str	r5, [sp, #0]
 8009a7a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a7c:	f042 0201 	orr.w	r2, r2, #1
 8009a80:	639a      	str	r2, [r3, #56]	; 0x38
 8009a82:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8009a84:	f002 0201 	and.w	r2, r2, #1
 8009a88:	9200      	str	r2, [sp, #0]
 8009a8a:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8009a8c:	9501      	str	r5, [sp, #4]
 8009a8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a90:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8009a94:	631a      	str	r2, [r3, #48]	; 0x30
 8009a96:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009a98:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8009a9c:	9201      	str	r2, [sp, #4]
 8009a9e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8009aa0:	9502      	str	r5, [sp, #8]
 8009aa2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009aa4:	f042 0204 	orr.w	r2, r2, #4
 8009aa8:	631a      	str	r2, [r3, #48]	; 0x30
 8009aaa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009aac:	f002 0204 	and.w	r2, r2, #4
 8009ab0:	9202      	str	r2, [sp, #8]
 8009ab2:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8009ab4:	9503      	str	r5, [sp, #12]
 8009ab6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ab8:	f042 0208 	orr.w	r2, r2, #8
 8009abc:	631a      	str	r2, [r3, #48]	; 0x30
 8009abe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ac0:	f002 0208 	and.w	r2, r2, #8
 8009ac4:	9203      	str	r2, [sp, #12]
 8009ac6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8009ac8:	9504      	str	r5, [sp, #16]
 8009aca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009acc:	f042 0210 	orr.w	r2, r2, #16
 8009ad0:	631a      	str	r2, [r3, #48]	; 0x30
 8009ad2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ad4:	f002 0210 	and.w	r2, r2, #16
 8009ad8:	9204      	str	r2, [sp, #16]
 8009ada:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8009adc:	9505      	str	r5, [sp, #20]
 8009ade:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ae0:	f042 0220 	orr.w	r2, r2, #32
 8009ae4:	631a      	str	r2, [r3, #48]	; 0x30
 8009ae6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009ae8:	f002 0220 	and.w	r2, r2, #32
 8009aec:	9205      	str	r2, [sp, #20]
 8009aee:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8009af0:	9506      	str	r5, [sp, #24]
 8009af2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009af4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009af8:	631a      	str	r2, [r3, #48]	; 0x30
 8009afa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009afc:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8009b00:	9206      	str	r2, [sp, #24]
 8009b02:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8009b04:	9507      	str	r5, [sp, #28]
 8009b06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009b08:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8009b0c:	631a      	str	r2, [r3, #48]	; 0x30
 8009b0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009b10:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8009b14:	9207      	str	r2, [sp, #28]
 8009b16:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009b18:	9508      	str	r5, [sp, #32]
 8009b1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8009b1c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009b20:	631a      	str	r2, [r3, #48]	; 0x30
 8009b22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009b28:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009b2a:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8009b2c:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8009b2e:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8009b30:	2301      	movs	r3, #1
 8009b32:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009b36:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8009b38:	220c      	movs	r2, #12
 8009b3a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 8009b3c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8009b3e:	f001 f813 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009b42:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009b46:	482d      	ldr	r0, [pc, #180]	; (8009bfc <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8009b48:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8009b4a:	a909      	add	r1, sp, #36	; 0x24
 8009b4c:	f001 f80c 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b50:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009b54:	482a      	ldr	r0, [pc, #168]	; (8009c00 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b56:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8009b58:	a909      	add	r1, sp, #36	; 0x24
 8009b5a:	f001 f805 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b5e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009b62:	4828      	ldr	r0, [pc, #160]	; (8009c04 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b64:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8009b66:	a909      	add	r1, sp, #36	; 0x24
 8009b68:	f000 fffe 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009b6c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009b70:	4825      	ldr	r0, [pc, #148]	; (8009c08 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8009b72:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8009b74:	a909      	add	r1, sp, #36	; 0x24
 8009b76:	f000 fff7 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b7a:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009b7e:	4823      	ldr	r0, [pc, #140]	; (8009c0c <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8009b80:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8009b82:	a909      	add	r1, sp, #36	; 0x24
 8009b84:	f000 fff0 	bl	800ab68 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b88:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009b8c:	4820      	ldr	r0, [pc, #128]	; (8009c10 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8009b8e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8009b90:	a909      	add	r1, sp, #36	; 0x24
 8009b92:	f000 ffe9 	bl	800ab68 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8009b96:	2280      	movs	r2, #128	; 0x80
 8009b98:	f44f 7300 	mov.w	r3, #512	; 0x200
 8009b9c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8009ba0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8009ba4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009ba8:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 8009bac:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8009bb0:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8009bb4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8009bb8:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 8009bbc:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 8009bbe:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8009bc2:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009bc4:	4b13      	ldr	r3, [pc, #76]	; (8009c14 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009bc6:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8009bc8:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009bca:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8009bcc:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8009bce:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 8009bd0:	f000 fa8e 	bl	800a0f0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 8009bd4:	4620      	mov	r0, r4
 8009bd6:	f000 fa0b 	bl	8009ff0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 8009bda:	2038      	movs	r0, #56	; 0x38
 8009bdc:	462a      	mov	r2, r5
 8009bde:	2105      	movs	r1, #5
 8009be0:	f000 f98c 	bl	8009efc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 8009be4:	2038      	movs	r0, #56	; 0x38
 8009be6:	f000 f9bb 	bl	8009f60 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009bea:	b00e      	add	sp, #56	; 0x38
 8009bec:	bd70      	pop	{r4, r5, r6, pc}
 8009bee:	bf00      	nop
 8009bf0:	40023800 	.word	0x40023800
 8009bf4:	40020800 	.word	0x40020800
 8009bf8:	20006108 	.word	0x20006108
 8009bfc:	40020c00 	.word	0x40020c00
 8009c00:	40021000 	.word	0x40021000
 8009c04:	40021400 	.word	0x40021400
 8009c08:	40021800 	.word	0x40021800
 8009c0c:	40021c00 	.word	0x40021c00
 8009c10:	40022000 	.word	0x40022000
 8009c14:	40026410 	.word	0x40026410

08009c18 <BSP_SDRAM_Init>:
{
 8009c18:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009c1a:	4c19      	ldr	r4, [pc, #100]	; (8009c80 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 8009c1c:	4d19      	ldr	r5, [pc, #100]	; (8009c84 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009c1e:	4b1a      	ldr	r3, [pc, #104]	; (8009c88 <BSP_SDRAM_Init+0x70>)
 8009c20:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8009c22:	2107      	movs	r1, #7
 8009c24:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8009c26:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8009c28:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 8009c2c:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8009c30:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8009c34:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8009c36:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8009c38:	2340      	movs	r3, #64	; 0x40
 8009c3a:	2220      	movs	r2, #32
 8009c3c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8009c40:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8009c42:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8009c46:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 8009c4a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8009c4e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8009c52:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009c56:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8009c58:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 8009c5c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8009c5e:	f7ff ff01 	bl	8009a64 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8009c62:	4629      	mov	r1, r5
 8009c64:	4620      	mov	r0, r4
 8009c66:	f002 fe75 	bl	800c954 <HAL_SDRAM_Init>
 8009c6a:	4c08      	ldr	r4, [pc, #32]	; (8009c8c <BSP_SDRAM_Init+0x74>)
 8009c6c:	3800      	subs	r0, #0
 8009c6e:	bf18      	it	ne
 8009c70:	2001      	movne	r0, #1
 8009c72:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8009c74:	f240 5069 	movw	r0, #1385	; 0x569
 8009c78:	f7ff feaa 	bl	80099d0 <BSP_SDRAM_Initialization_sequence>
}
 8009c7c:	7820      	ldrb	r0, [r4, #0]
 8009c7e:	bd38      	pop	{r3, r4, r5, pc}
 8009c80:	20006168 	.word	0x20006168
 8009c84:	2000608c 	.word	0x2000608c
 8009c88:	a0000140 	.word	0xa0000140
 8009c8c:	2000004d 	.word	0x2000004d

08009c90 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8009c90:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8009c92:	b148      	cbz	r0, 8009ca8 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8009c94:	2038      	movs	r0, #56	; 0x38
 8009c96:	f000 f971 	bl	8009f7c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 8009c9a:	4804      	ldr	r0, [pc, #16]	; (8009cac <BSP_SDRAM_MspDeInit+0x1c>)
 8009c9c:	4b04      	ldr	r3, [pc, #16]	; (8009cb0 <BSP_SDRAM_MspDeInit+0x20>)
 8009c9e:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8009ca0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8009ca4:	f000 ba24 	b.w	800a0f0 <HAL_DMA_DeInit>
}
 8009ca8:	bd08      	pop	{r3, pc}
 8009caa:	bf00      	nop
 8009cac:	200060a8 	.word	0x200060a8
 8009cb0:	40026410 	.word	0x40026410

08009cb4 <BSP_SDRAM_DeInit>:
{
 8009cb4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8009cb6:	4c07      	ldr	r4, [pc, #28]	; (8009cd4 <BSP_SDRAM_DeInit+0x20>)
 8009cb8:	4b07      	ldr	r3, [pc, #28]	; (8009cd8 <BSP_SDRAM_DeInit+0x24>)
 8009cba:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 8009cbc:	4620      	mov	r0, r4
 8009cbe:	f002 fe69 	bl	800c994 <HAL_SDRAM_DeInit>
 8009cc2:	4d06      	ldr	r5, [pc, #24]	; (8009cdc <BSP_SDRAM_DeInit+0x28>)
 8009cc4:	4601      	mov	r1, r0
 8009cc6:	b918      	cbnz	r0, 8009cd0 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8009cc8:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 8009cca:	4620      	mov	r0, r4
 8009ccc:	f7ff ffe0 	bl	8009c90 <BSP_SDRAM_MspDeInit>
}
 8009cd0:	7828      	ldrb	r0, [r5, #0]
 8009cd2:	bd38      	pop	{r3, r4, r5, pc}
 8009cd4:	20006168 	.word	0x20006168
 8009cd8:	a0000140 	.word	0xa0000140
 8009cdc:	2000004c 	.word	0x2000004c

08009ce0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 8009ce0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 8009ce4:	4d16      	ldr	r5, [pc, #88]	; (8009d40 <BSP_TS_Init+0x60>)
 8009ce6:	4c17      	ldr	r4, [pc, #92]	; (8009d44 <BSP_TS_Init+0x64>)
 8009ce8:	682b      	ldr	r3, [r5, #0]
{
 8009cea:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 8009cec:	7820      	ldrb	r0, [r4, #0]
{
 8009cee:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 8009cf0:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 8009cf2:	686b      	ldr	r3, [r5, #4]
 8009cf4:	2054      	movs	r0, #84	; 0x54
 8009cf6:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 8009cf8:	b2c0      	uxtb	r0, r0
 8009cfa:	2811      	cmp	r0, #17
 8009cfc:	d00a      	beq.n	8009d14 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8009cfe:	686b      	ldr	r3, [r5, #4]
 8009d00:	2070      	movs	r0, #112	; 0x70
 8009d02:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009d04:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009d06:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009d08:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8009d0a:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8009d0c:	d004      	beq.n	8009d18 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8009d0e:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 8009d10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 8009d14:	2354      	movs	r3, #84	; 0x54
 8009d16:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009d18:	4b0b      	ldr	r3, [pc, #44]	; (8009d48 <BSP_TS_Init+0x68>)
 8009d1a:	f8df 8030 	ldr.w	r8, [pc, #48]	; 8009d4c <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 8009d1e:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 8009d20:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 8009d24:	42be      	cmp	r6, r7
 8009d26:	bf34      	ite	cc
 8009d28:	2601      	movcc	r6, #1
 8009d2a:	260c      	movcs	r6, #12
 8009d2c:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8009d2e:	68ab      	ldr	r3, [r5, #8]
 8009d30:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8009d32:	f8d8 3000 	ldr.w	r3, [r8]
 8009d36:	7820      	ldrb	r0, [r4, #0]
 8009d38:	68db      	ldr	r3, [r3, #12]
 8009d3a:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8009d3c:	2000      	movs	r0, #0
 8009d3e:	e7e7      	b.n	8009d10 <BSP_TS_Init+0x30>
 8009d40:	20000020 	.word	0x20000020
 8009d44:	2000619c 	.word	0x2000619c
 8009d48:	200061b4 	.word	0x200061b4
 8009d4c:	200061b0 	.word	0x200061b0

08009d50 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8009d50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d54:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8009e34 <BSP_TS_GetState+0xe4>
 8009d58:	4a33      	ldr	r2, [pc, #204]	; (8009e28 <BSP_TS_GetState+0xd8>)
 8009d5a:	f8db 3000 	ldr.w	r3, [fp]
{
 8009d5e:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d60:	691b      	ldr	r3, [r3, #16]
 8009d62:	7810      	ldrb	r0, [r2, #0]
{
 8009d64:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8009d66:	4798      	blx	r3
 8009d68:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8009d6a:	b158      	cbz	r0, 8009d84 <BSP_TS_GetState+0x34>
 8009d6c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8009e38 <BSP_TS_GetState+0xe8>
 8009d70:	4f2e      	ldr	r7, [pc, #184]	; (8009e2c <BSP_TS_GetState+0xdc>)
 8009d72:	f106 0a02 	add.w	sl, r6, #2
 8009d76:	ad03      	add	r5, sp, #12
 8009d78:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8009d7a:	f04f 0900 	mov.w	r9, #0
 8009d7e:	7833      	ldrb	r3, [r6, #0]
 8009d80:	454b      	cmp	r3, r9
 8009d82:	d803      	bhi.n	8009d8c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8009d84:	2000      	movs	r0, #0
 8009d86:	b005      	add	sp, #20
 8009d88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8009d8c:	f8db 3000 	ldr.w	r3, [fp]
 8009d90:	4825      	ldr	r0, [pc, #148]	; (8009e28 <BSP_TS_GetState+0xd8>)
 8009d92:	695b      	ldr	r3, [r3, #20]
 8009d94:	7800      	ldrb	r0, [r0, #0]
 8009d96:	9101      	str	r1, [sp, #4]
 8009d98:	462a      	mov	r2, r5
 8009d9a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 8009d9c:	4b24      	ldr	r3, [pc, #144]	; (8009e30 <BSP_TS_GetState+0xe0>)
 8009d9e:	9901      	ldr	r1, [sp, #4]
 8009da0:	781b      	ldrb	r3, [r3, #0]
 8009da2:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8009da6:	bf1f      	itttt	ne
 8009da8:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 8009daa:	8828      	ldrhne	r0, [r5, #0]
 8009dac:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 8009dae:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8009db0:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8009db2:	bf41      	itttt	mi
 8009db4:	880a      	ldrhmi	r2, [r1, #0]
 8009db6:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 8009dba:	3203      	addmi	r2, #3
 8009dbc:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 8009dbe:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009dc0:	bf48      	it	mi
 8009dc2:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009dc4:	f8d8 2000 	ldr.w	r2, [r8]
 8009dc8:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8009dcc:	bf42      	ittt	mi
 8009dce:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 8009dd2:	3301      	addmi	r3, #1
 8009dd4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009dd6:	b293      	uxth	r3, r2
 8009dd8:	4290      	cmp	r0, r2
 8009dda:	bf8c      	ite	hi
 8009ddc:	1ac3      	subhi	r3, r0, r3
 8009dde:	1a1b      	subls	r3, r3, r0
 8009de0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009de2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8009de6:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009de8:	683b      	ldr	r3, [r7, #0]
 8009dea:	b29c      	uxth	r4, r3
 8009dec:	429a      	cmp	r2, r3
 8009dee:	bf88      	it	hi
 8009df0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 8009df2:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8009df4:	bf98      	it	ls
 8009df6:	1aa4      	subls	r4, r4, r2
 8009df8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8009dfa:	441c      	add	r4, r3
 8009dfc:	46c4      	mov	ip, r8
 8009dfe:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 8009e00:	bfc8      	it	gt
 8009e02:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8009e06:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8009e0a:	bfc8      	it	gt
 8009e0c:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 8009e0e:	46be      	mov	lr, r7
 8009e10:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 8009e14:	f8de 3000 	ldr.w	r3, [lr]
 8009e18:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8009e1c:	f108 0804 	add.w	r8, r8, #4
 8009e20:	3704      	adds	r7, #4
 8009e22:	f109 0901 	add.w	r9, r9, #1
 8009e26:	e7aa      	b.n	8009d7e <BSP_TS_GetState+0x2e>
 8009e28:	2000619c 	.word	0x2000619c
 8009e2c:	200061a8 	.word	0x200061a8
 8009e30:	200061b4 	.word	0x200061b4
 8009e34:	200061b0 	.word	0x200061b0
 8009e38:	200061a0 	.word	0x200061a0

08009e3c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8009e3c:	4b05      	ldr	r3, [pc, #20]	; (8009e54 <SystemInit+0x18>)
 8009e3e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8009e42:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8009e46:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8009e4a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8009e4e:	609a      	str	r2, [r3, #8]
#endif
}
 8009e50:	4770      	bx	lr
 8009e52:	bf00      	nop
 8009e54:	e000ed00 	.word	0xe000ed00

08009e58 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8009e58:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8009e5a:	4b0b      	ldr	r3, [pc, #44]	; (8009e88 <HAL_Init+0x30>)
 8009e5c:	681a      	ldr	r2, [r3, #0]
 8009e5e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8009e62:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8009e64:	681a      	ldr	r2, [r3, #0]
 8009e66:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8009e6a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8009e6c:	681a      	ldr	r2, [r3, #0]
 8009e6e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009e72:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8009e74:	2003      	movs	r0, #3
 8009e76:	f000 f82f 	bl	8009ed8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8009e7a:	2000      	movs	r0, #0
 8009e7c:	f7f8 fd3a 	bl	80028f4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8009e80:	f7f8 fa90 	bl	80023a4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8009e84:	2000      	movs	r0, #0
 8009e86:	bd08      	pop	{r3, pc}
 8009e88:	40023c00 	.word	0x40023c00

08009e8c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8009e8c:	4a03      	ldr	r2, [pc, #12]	; (8009e9c <HAL_IncTick+0x10>)
 8009e8e:	4b04      	ldr	r3, [pc, #16]	; (8009ea0 <HAL_IncTick+0x14>)
 8009e90:	6811      	ldr	r1, [r2, #0]
 8009e92:	781b      	ldrb	r3, [r3, #0]
 8009e94:	440b      	add	r3, r1
 8009e96:	6013      	str	r3, [r2, #0]
}
 8009e98:	4770      	bx	lr
 8009e9a:	bf00      	nop
 8009e9c:	200061b8 	.word	0x200061b8
 8009ea0:	20000054 	.word	0x20000054

08009ea4 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8009ea4:	4b01      	ldr	r3, [pc, #4]	; (8009eac <HAL_GetTick+0x8>)
 8009ea6:	6818      	ldr	r0, [r3, #0]
}
 8009ea8:	4770      	bx	lr
 8009eaa:	bf00      	nop
 8009eac:	200061b8 	.word	0x200061b8

08009eb0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8009eb0:	b538      	push	{r3, r4, r5, lr}
 8009eb2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009eb4:	f7ff fff6 	bl	8009ea4 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8009eb8:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8009eba:	bf1c      	itt	ne
 8009ebc:	4b05      	ldrne	r3, [pc, #20]	; (8009ed4 <HAL_Delay+0x24>)
 8009ebe:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8009ec0:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8009ec2:	bf18      	it	ne
 8009ec4:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8009ec6:	f7ff ffed 	bl	8009ea4 <HAL_GetTick>
 8009eca:	1b43      	subs	r3, r0, r5
 8009ecc:	42a3      	cmp	r3, r4
 8009ece:	d3fa      	bcc.n	8009ec6 <HAL_Delay+0x16>
  {
  }
}
 8009ed0:	bd38      	pop	{r3, r4, r5, pc}
 8009ed2:	bf00      	nop
 8009ed4:	20000054 	.word	0x20000054

08009ed8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8009ed8:	4907      	ldr	r1, [pc, #28]	; (8009ef8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8009eda:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009edc:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009ee0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009ee2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8009ee4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8009ee8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8009eea:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8009eec:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8009ef0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8009ef4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8009ef6:	4770      	bx	lr
 8009ef8:	e000ed00 	.word	0xe000ed00

08009efc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8009efc:	4b16      	ldr	r3, [pc, #88]	; (8009f58 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8009efe:	b530      	push	{r4, r5, lr}
 8009f00:	68dc      	ldr	r4, [r3, #12]
 8009f02:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009f06:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009f0a:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8009f0c:	2d04      	cmp	r5, #4
 8009f0e:	bf28      	it	cs
 8009f10:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009f12:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f14:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8009f18:	bf8c      	ite	hi
 8009f1a:	3c03      	subhi	r4, #3
 8009f1c:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f1e:	fa03 f505 	lsl.w	r5, r3, r5
 8009f22:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8009f26:	40a3      	lsls	r3, r4
 8009f28:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f2c:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8009f2e:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8009f30:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f34:	bfac      	ite	ge
 8009f36:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f3a:	4a08      	ldrlt	r2, [pc, #32]	; (8009f5c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f3c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f40:	bfb8      	it	lt
 8009f42:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f46:	b2db      	uxtb	r3, r3
 8009f48:	bfaa      	itet	ge
 8009f4a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f4e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009f50:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8009f54:	bd30      	pop	{r4, r5, pc}
 8009f56:	bf00      	nop
 8009f58:	e000ed00 	.word	0xe000ed00
 8009f5c:	e000ed14 	.word	0xe000ed14

08009f60 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009f60:	2800      	cmp	r0, #0
 8009f62:	db08      	blt.n	8009f76 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009f64:	0942      	lsrs	r2, r0, #5
 8009f66:	2301      	movs	r3, #1
 8009f68:	f000 001f 	and.w	r0, r0, #31
 8009f6c:	fa03 f000 	lsl.w	r0, r3, r0
 8009f70:	4b01      	ldr	r3, [pc, #4]	; (8009f78 <HAL_NVIC_EnableIRQ+0x18>)
 8009f72:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8009f76:	4770      	bx	lr
 8009f78:	e000e100 	.word	0xe000e100

08009f7c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8009f7c:	2800      	cmp	r0, #0
 8009f7e:	db0d      	blt.n	8009f9c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8009f80:	0943      	lsrs	r3, r0, #5
 8009f82:	2201      	movs	r2, #1
 8009f84:	f000 001f 	and.w	r0, r0, #31
 8009f88:	fa02 f000 	lsl.w	r0, r2, r0
 8009f8c:	3320      	adds	r3, #32
 8009f8e:	4a04      	ldr	r2, [pc, #16]	; (8009fa0 <HAL_NVIC_DisableIRQ+0x24>)
 8009f90:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8009f94:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8009f98:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8009f9c:	4770      	bx	lr
 8009f9e:	bf00      	nop
 8009fa0:	e000e100 	.word	0xe000e100

08009fa4 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8009fa4:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8009fa6:	4604      	mov	r4, r0
 8009fa8:	b150      	cbz	r0, 8009fc0 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8009faa:	7943      	ldrb	r3, [r0, #5]
 8009fac:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009fb0:	b913      	cbnz	r3, 8009fb8 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8009fb2:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8009fb4:	f7f8 fa16 	bl	80023e4 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8009fb8:	2301      	movs	r3, #1
 8009fba:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8009fbc:	2000      	movs	r0, #0
}
 8009fbe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009fc0:	2001      	movs	r0, #1
 8009fc2:	e7fc      	b.n	8009fbe <HAL_CRC_Init+0x1a>

08009fc4 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009fc4:	6803      	ldr	r3, [r0, #0]
{
 8009fc6:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009fc8:	4c08      	ldr	r4, [pc, #32]	; (8009fec <DMA_CalcBaseAndBitshift+0x28>)
{
 8009fca:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8009fcc:	b2d9      	uxtb	r1, r3
 8009fce:	3910      	subs	r1, #16
 8009fd0:	2018      	movs	r0, #24
 8009fd2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8009fd6:	5c20      	ldrb	r0, [r4, r0]
 8009fd8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009fda:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 8009fde:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 8009fe2:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8009fe4:	bf88      	it	hi
 8009fe6:	3004      	addhi	r0, #4
 8009fe8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 8009fea:	bd10      	pop	{r4, pc}
 8009fec:	08029c3d 	.word	0x08029c3d

08009ff0 <HAL_DMA_Init>:
{
 8009ff0:	b570      	push	{r4, r5, r6, lr}
 8009ff2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8009ff4:	f7ff ff56 	bl	8009ea4 <HAL_GetTick>
 8009ff8:	4605      	mov	r5, r0
  if(hdma == NULL)
 8009ffa:	2c00      	cmp	r4, #0
 8009ffc:	d073      	beq.n	800a0e6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 8009ffe:	2302      	movs	r3, #2
 800a000:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 800a004:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 800a006:	2300      	movs	r3, #0
 800a008:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 800a00c:	6813      	ldr	r3, [r2, #0]
 800a00e:	f023 0301 	bic.w	r3, r3, #1
 800a012:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800a014:	6821      	ldr	r1, [r4, #0]
 800a016:	680b      	ldr	r3, [r1, #0]
 800a018:	07d8      	lsls	r0, r3, #31
 800a01a:	d42f      	bmi.n	800a07c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 800a01c:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a01e:	4d33      	ldr	r5, [pc, #204]	; (800a0ec <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a020:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 800a022:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a024:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800a028:	4313      	orrs	r3, r2
 800a02a:	68e2      	ldr	r2, [r4, #12]
 800a02c:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 800a02e:	6922      	ldr	r2, [r4, #16]
 800a030:	4313      	orrs	r3, r2
 800a032:	6962      	ldr	r2, [r4, #20]
 800a034:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800a036:	69e2      	ldr	r2, [r4, #28]
 800a038:	4303      	orrs	r3, r0
 800a03a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800a03c:	6a22      	ldr	r2, [r4, #32]
 800a03e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a040:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800a042:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800a044:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800a048:	bf02      	ittt	eq
 800a04a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800a04e:	4335      	orreq	r5, r6
 800a050:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 800a052:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 800a054:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a056:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800a058:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800a05c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800a060:	d133      	bne.n	800a0ca <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 800a062:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a064:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800a066:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800a068:	b37d      	cbz	r5, 800a0ca <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800a06a:	b990      	cbnz	r0, 800a092 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800a06c:	2a01      	cmp	r2, #1
 800a06e:	d021      	beq.n	800a0b4 <HAL_DMA_Init+0xc4>
 800a070:	f032 0202 	bics.w	r2, r2, #2
 800a074:	d129      	bne.n	800a0ca <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800a076:	01ea      	lsls	r2, r5, #7
 800a078:	d527      	bpl.n	800a0ca <HAL_DMA_Init+0xda>
 800a07a:	e01e      	b.n	800a0ba <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a07c:	f7ff ff12 	bl	8009ea4 <HAL_GetTick>
 800a080:	1b40      	subs	r0, r0, r5
 800a082:	2805      	cmp	r0, #5
 800a084:	d9c6      	bls.n	800a014 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a086:	2320      	movs	r3, #32
 800a088:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a08a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800a08c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 800a090:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 800a092:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800a096:	d114      	bne.n	800a0c2 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800a098:	2a03      	cmp	r2, #3
 800a09a:	d816      	bhi.n	800a0ca <HAL_DMA_Init+0xda>
 800a09c:	a001      	add	r0, pc, #4	; (adr r0, 800a0a4 <HAL_DMA_Init+0xb4>)
 800a09e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 800a0a2:	bf00      	nop
 800a0a4:	0800a0bb 	.word	0x0800a0bb
 800a0a8:	0800a077 	.word	0x0800a077
 800a0ac:	0800a0bb 	.word	0x0800a0bb
 800a0b0:	0800a0b5 	.word	0x0800a0b5
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 800a0b4:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 800a0b8:	d107      	bne.n	800a0ca <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800a0ba:	2340      	movs	r3, #64	; 0x40
 800a0bc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800a0be:	2001      	movs	r0, #1
 800a0c0:	e7e4      	b.n	800a08c <HAL_DMA_Init+0x9c>
    switch (tmp)
 800a0c2:	2a02      	cmp	r2, #2
 800a0c4:	d9f9      	bls.n	800a0ba <HAL_DMA_Init+0xca>
 800a0c6:	2a03      	cmp	r2, #3
 800a0c8:	d0d5      	beq.n	800a076 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800a0ca:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a0cc:	4620      	mov	r0, r4
 800a0ce:	f7ff ff79 	bl	8009fc4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a0d2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 800a0d4:	233f      	movs	r3, #63	; 0x3f
 800a0d6:	4093      	lsls	r3, r2
 800a0d8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a0da:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 800a0dc:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a0de:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 800a0e0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 800a0e4:	e7d4      	b.n	800a090 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 800a0e6:	2001      	movs	r0, #1
 800a0e8:	e7d2      	b.n	800a090 <HAL_DMA_Init+0xa0>
 800a0ea:	bf00      	nop
 800a0ec:	f010803f 	.word	0xf010803f

0800a0f0 <HAL_DMA_DeInit>:
{
 800a0f0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 800a0f2:	4605      	mov	r5, r0
 800a0f4:	b320      	cbz	r0, 800a140 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 800a0f6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800a0fa:	2b02      	cmp	r3, #2
 800a0fc:	b2dc      	uxtb	r4, r3
 800a0fe:	d01d      	beq.n	800a13c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 800a100:	6803      	ldr	r3, [r0, #0]
 800a102:	681a      	ldr	r2, [r3, #0]
 800a104:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 800a108:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 800a10a:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 800a10c:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 800a10e:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 800a110:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 800a112:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 800a114:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 800a116:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 800a118:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800a11a:	f7ff ff53 	bl	8009fc4 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a11e:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 800a120:	233f      	movs	r3, #63	; 0x3f
 800a122:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 800a124:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 800a128:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 800a12c:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a130:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 800a132:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 800a134:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 800a138:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800a13c:	4620      	mov	r0, r4
 800a13e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800a140:	2401      	movs	r4, #1
 800a142:	e7fb      	b.n	800a13c <HAL_DMA_DeInit+0x4c>

0800a144 <HAL_DMA_Abort>:
{
 800a144:	b570      	push	{r4, r5, r6, lr}
 800a146:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 800a148:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800a14a:	f7ff feab 	bl	8009ea4 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a14e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 800a152:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 800a154:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800a156:	d006      	beq.n	800a166 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 800a158:	2380      	movs	r3, #128	; 0x80
 800a15a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800a15c:	2300      	movs	r3, #0
 800a15e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 800a162:	2001      	movs	r0, #1
}
 800a164:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800a166:	6823      	ldr	r3, [r4, #0]
 800a168:	681a      	ldr	r2, [r3, #0]
 800a16a:	f022 0216 	bic.w	r2, r2, #22
 800a16e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 800a170:	695a      	ldr	r2, [r3, #20]
 800a172:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800a176:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800a178:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a17a:	b90a      	cbnz	r2, 800a180 <HAL_DMA_Abort+0x3c>
 800a17c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800a17e:	b11a      	cbz	r2, 800a188 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 800a180:	681a      	ldr	r2, [r3, #0]
 800a182:	f022 0208 	bic.w	r2, r2, #8
 800a186:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 800a188:	681a      	ldr	r2, [r3, #0]
 800a18a:	f022 0201 	bic.w	r2, r2, #1
 800a18e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 800a190:	6823      	ldr	r3, [r4, #0]
 800a192:	681b      	ldr	r3, [r3, #0]
 800a194:	f013 0301 	ands.w	r3, r3, #1
 800a198:	d10a      	bne.n	800a1b0 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800a19a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800a19c:	223f      	movs	r2, #63	; 0x3f
 800a19e:	408a      	lsls	r2, r1
 800a1a0:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800a1a2:	2201      	movs	r2, #1
 800a1a4:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 800a1a8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800a1ac:	4618      	mov	r0, r3
 800a1ae:	e7d9      	b.n	800a164 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800a1b0:	f7ff fe78 	bl	8009ea4 <HAL_GetTick>
 800a1b4:	1b40      	subs	r0, r0, r5
 800a1b6:	2805      	cmp	r0, #5
 800a1b8:	d9ea      	bls.n	800a190 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800a1ba:	2320      	movs	r3, #32
 800a1bc:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a1be:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 800a1c0:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800a1c2:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 800a1c6:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800a1ca:	e7cb      	b.n	800a164 <HAL_DMA_Abort+0x20>

0800a1cc <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800a1cc:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800a1ce:	4604      	mov	r4, r0
 800a1d0:	b330      	cbz	r0, 800a220 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800a1d2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800a1d6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800a1da:	b91b      	cbnz	r3, 800a1e4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800a1dc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800a1e0:	f7f8 f918 	bl	8002414 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a1e4:	6822      	ldr	r2, [r4, #0]
 800a1e6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a1e8:	2302      	movs	r3, #2
 800a1ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800a1ee:	6813      	ldr	r3, [r2, #0]
 800a1f0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800a1f4:	430b      	orrs	r3, r1
 800a1f6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800a1f8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800a1fa:	68a1      	ldr	r1, [r4, #8]
 800a1fc:	f023 0307 	bic.w	r3, r3, #7
 800a200:	430b      	orrs	r3, r1
 800a202:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 800a204:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800a206:	68e1      	ldr	r1, [r4, #12]
 800a208:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800a20c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800a210:	430b      	orrs	r3, r1
 800a212:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a214:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a216:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800a218:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800a21a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800a21e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800a220:	2001      	movs	r0, #1
 800a222:	e7fc      	b.n	800a21e <HAL_DMA2D_Init+0x52>

0800a224 <HAL_DMA2D_LineEventCallback>:
 800a224:	4770      	bx	lr

0800a226 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 800a226:	4770      	bx	lr

0800a228 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a228:	6803      	ldr	r3, [r0, #0]
{
 800a22a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800a22c:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800a22e:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a230:	07f2      	lsls	r2, r6, #31
{
 800a232:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800a234:	d514      	bpl.n	800a260 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 800a236:	05e9      	lsls	r1, r5, #23
 800a238:	d512      	bpl.n	800a260 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800a23a:	681a      	ldr	r2, [r3, #0]
 800a23c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800a240:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 800a242:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800a244:	f042 0201 	orr.w	r2, r2, #1
 800a248:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800a24a:	2201      	movs	r2, #1
 800a24c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a24e:	2304      	movs	r3, #4
 800a250:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a254:	2300      	movs	r3, #0
 800a256:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a25a:	6943      	ldr	r3, [r0, #20]
 800a25c:	b103      	cbz	r3, 800a260 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a25e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800a260:	06b2      	lsls	r2, r6, #26
 800a262:	d516      	bpl.n	800a292 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 800a264:	04ab      	lsls	r3, r5, #18
 800a266:	d514      	bpl.n	800a292 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 800a268:	6823      	ldr	r3, [r4, #0]
 800a26a:	681a      	ldr	r2, [r3, #0]
 800a26c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800a270:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800a272:	2220      	movs	r2, #32
 800a274:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 800a276:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a278:	f043 0302 	orr.w	r3, r3, #2
 800a27c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a27e:	2304      	movs	r3, #4
 800a280:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a284:	2300      	movs	r3, #0
 800a286:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a28a:	6963      	ldr	r3, [r4, #20]
 800a28c:	b10b      	cbz	r3, 800a292 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a28e:	4620      	mov	r0, r4
 800a290:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800a292:	0730      	lsls	r0, r6, #28
 800a294:	d516      	bpl.n	800a2c4 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 800a296:	0529      	lsls	r1, r5, #20
 800a298:	d514      	bpl.n	800a2c4 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800a29a:	6823      	ldr	r3, [r4, #0]
 800a29c:	681a      	ldr	r2, [r3, #0]
 800a29e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800a2a2:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 800a2a4:	2208      	movs	r2, #8
 800a2a6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800a2a8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a2aa:	f043 0304 	orr.w	r3, r3, #4
 800a2ae:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800a2b0:	2304      	movs	r3, #4
 800a2b2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a2b6:	2300      	movs	r3, #0
 800a2b8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800a2bc:	6963      	ldr	r3, [r4, #20]
 800a2be:	b10b      	cbz	r3, 800a2c4 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800a2c0:	4620      	mov	r0, r4
 800a2c2:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 800a2c4:	0772      	lsls	r2, r6, #29
 800a2c6:	d50b      	bpl.n	800a2e0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800a2c8:	056b      	lsls	r3, r5, #21
 800a2ca:	d509      	bpl.n	800a2e0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800a2cc:	6823      	ldr	r3, [r4, #0]
 800a2ce:	681a      	ldr	r2, [r3, #0]
 800a2d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800a2d4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 800a2d6:	2204      	movs	r2, #4
 800a2d8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800a2da:	4620      	mov	r0, r4
 800a2dc:	f7ff ffa2 	bl	800a224 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800a2e0:	07b0      	lsls	r0, r6, #30
 800a2e2:	d514      	bpl.n	800a30e <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 800a2e4:	05a9      	lsls	r1, r5, #22
 800a2e6:	d512      	bpl.n	800a30e <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800a2e8:	6823      	ldr	r3, [r4, #0]
 800a2ea:	681a      	ldr	r2, [r3, #0]
 800a2ec:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800a2f0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800a2f2:	2202      	movs	r2, #2
 800a2f4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a2f6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a2f8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a2fa:	2301      	movs	r3, #1
 800a2fc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a300:	2300      	movs	r3, #0
 800a302:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 800a306:	6923      	ldr	r3, [r4, #16]
 800a308:	b10b      	cbz	r3, 800a30e <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800a30a:	4620      	mov	r0, r4
 800a30c:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800a30e:	06f2      	lsls	r2, r6, #27
 800a310:	d513      	bpl.n	800a33a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 800a312:	04eb      	lsls	r3, r5, #19
 800a314:	d511      	bpl.n	800a33a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 800a316:	6823      	ldr	r3, [r4, #0]
 800a318:	681a      	ldr	r2, [r3, #0]
 800a31a:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800a31e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800a320:	2210      	movs	r2, #16
 800a322:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 800a324:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a326:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800a328:	2301      	movs	r3, #1
 800a32a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800a32e:	2300      	movs	r3, #0
 800a330:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 800a334:	4620      	mov	r0, r4
 800a336:	f7ff ff76 	bl	800a226 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800a33a:	bd70      	pop	{r4, r5, r6, pc}

0800a33c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800a33c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800a33e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 800a342:	2b01      	cmp	r3, #1
 800a344:	f04f 0302 	mov.w	r3, #2
 800a348:	d02b      	beq.n	800a3a2 <HAL_DMA2D_ConfigLayer+0x66>
 800a34a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800a34c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 800a350:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a354:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 800a358:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800a35c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800a35e:	4f18      	ldr	r7, [pc, #96]	; (800a3c0 <HAL_DMA2D_ConfigLayer+0x84>)
 800a360:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a364:	3c09      	subs	r4, #9
 800a366:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 800a368:	bf9c      	itt	ls
 800a36a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800a36e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800a370:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a374:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800a376:	bf88      	it	hi
 800a378:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800a37c:	b999      	cbnz	r1, 800a3a6 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800a37e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800a380:	4039      	ands	r1, r7
 800a382:	430a      	orrs	r2, r1
 800a384:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a386:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800a388:	6982      	ldr	r2, [r0, #24]
 800a38a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a38c:	d803      	bhi.n	800a396 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800a38e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800a390:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 800a394:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800a396:	2301      	movs	r3, #1
 800a398:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800a39c:	2300      	movs	r3, #0
 800a39e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800a3a2:	4618      	mov	r0, r3

  return HAL_OK;
}
 800a3a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800a3a6:	69d9      	ldr	r1, [r3, #28]
 800a3a8:	4039      	ands	r1, r7
 800a3aa:	430a      	orrs	r2, r1
 800a3ac:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a3ae:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800a3b0:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800a3b2:	6992      	ldr	r2, [r2, #24]
 800a3b4:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 800a3b6:	bf9c      	itt	ls
 800a3b8:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800a3bc:	621d      	strls	r5, [r3, #32]
 800a3be:	e7ea      	b.n	800a396 <HAL_DMA2D_ConfigLayer+0x5a>
 800a3c0:	00fcfff0 	.word	0x00fcfff0

0800a3c4 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 800a3c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3c8:	4607      	mov	r7, r0
 800a3ca:	460d      	mov	r5, r1
 800a3cc:	4614      	mov	r4, r2
 800a3ce:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 800a3d0:	f7ff fd68 	bl	8009ea4 <HAL_GetTick>
 800a3d4:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800a3d6:	683b      	ldr	r3, [r7, #0]
 800a3d8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800a3da:	07d2      	lsls	r2, r2, #31
 800a3dc:	d50a      	bpl.n	800a3f4 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 800a3de:	9906      	ldr	r1, [sp, #24]
 800a3e0:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 800a3e4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800a3e8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 800a3ec:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 800a3ee:	2000      	movs	r0, #0
}
 800a3f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a3f4:	f7ff fd56 	bl	8009ea4 <HAL_GetTick>
 800a3f8:	eba0 0008 	sub.w	r0, r0, r8
 800a3fc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a400:	d9e9      	bls.n	800a3d6 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 800a402:	2003      	movs	r0, #3
 800a404:	e7f4      	b.n	800a3f0 <DSI_ShortWrite+0x2c>

0800a406 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a406:	7c03      	ldrb	r3, [r0, #16]
 800a408:	2b01      	cmp	r3, #1
 800a40a:	d05d      	beq.n	800a4c8 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 800a40c:	6803      	ldr	r3, [r0, #0]
 800a40e:	2200      	movs	r2, #0
 800a410:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a414:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 800a418:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a41a:	bf48      	it	mi
 800a41c:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 800a420:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 800a422:	bf42      	ittt	mi
 800a424:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 800a428:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 800a42c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 800a430:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 800a432:	bf42      	ittt	mi
 800a434:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 800a438:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800a43c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 800a440:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 800a442:	bf42      	ittt	mi
 800a444:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a448:	f042 0201 	orrmi.w	r2, r2, #1
 800a44c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 800a450:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 800a452:	bf42      	ittt	mi
 800a454:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a458:	f042 0202 	orrmi.w	r2, r2, #2
 800a45c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 800a460:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 800a462:	bf42      	ittt	mi
 800a464:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a468:	f042 020c 	orrmi.w	r2, r2, #12
 800a46c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 800a470:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 800a472:	bf42      	ittt	mi
 800a474:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a478:	f042 0210 	orrmi.w	r2, r2, #16
 800a47c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 800a480:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 800a482:	bf42      	ittt	mi
 800a484:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a488:	f042 0220 	orrmi.w	r2, r2, #32
 800a48c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 800a490:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 800a492:	bf42      	ittt	mi
 800a494:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a498:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a49c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 800a4a0:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 800a4a2:	bf42      	ittt	mi
 800a4a4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a4a8:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a4ac:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 800a4b0:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 800a4b2:	bf42      	ittt	mi
 800a4b4:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 800a4b8:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800a4bc:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 800a4c0:	2300      	movs	r3, #0
 800a4c2:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a4c4:	4618      	mov	r0, r3
 800a4c6:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a4c8:	2002      	movs	r0, #2
}
 800a4ca:	4770      	bx	lr

0800a4cc <HAL_DSI_Init>:
{
 800a4cc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a4ce:	460d      	mov	r5, r1
  if (hdsi == NULL)
 800a4d0:	4604      	mov	r4, r0
 800a4d2:	2800      	cmp	r0, #0
 800a4d4:	f000 80a9 	beq.w	800a62a <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 800a4d8:	7c43      	ldrb	r3, [r0, #17]
 800a4da:	b90b      	cbnz	r3, 800a4e0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 800a4dc:	f7f7 ffbc 	bl	8002458 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 800a4e0:	2303      	movs	r3, #3
 800a4e2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 800a4e4:	2300      	movs	r3, #0
 800a4e6:	9300      	str	r3, [sp, #0]
 800a4e8:	6823      	ldr	r3, [r4, #0]
 800a4ea:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 800a4ee:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 800a4f2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 800a4f6:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 800a4fa:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a4fe:	9300      	str	r3, [sp, #0]
 800a500:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 800a502:	f7ff fccf 	bl	8009ea4 <HAL_GetTick>
 800a506:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 800a508:	6822      	ldr	r2, [r4, #0]
 800a50a:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 800a50e:	04d9      	lsls	r1, r3, #19
 800a510:	d57a      	bpl.n	800a608 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 800a512:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a516:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 800a51a:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 800a51e:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a522:	e9d5 0300 	ldrd	r0, r3, [r5]
 800a526:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a528:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 800a52c:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a52e:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 800a532:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 800a536:	430b      	orrs	r3, r1
 800a538:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a53c:	2300      	movs	r3, #0
 800a53e:	9301      	str	r3, [sp, #4]
 800a540:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a544:	f043 0301 	orr.w	r3, r3, #1
 800a548:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 800a54c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 800a550:	f003 0301 	and.w	r3, r3, #1
 800a554:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 800a556:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 800a558:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 800a55a:	f7ff fca9 	bl	8009eb0 <HAL_Delay>
  tickstart = HAL_GetTick();
 800a55e:	f7ff fca1 	bl	8009ea4 <HAL_GetTick>
 800a562:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 800a564:	6823      	ldr	r3, [r4, #0]
 800a566:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a56a:	05d2      	lsls	r2, r2, #23
 800a56c:	d556      	bpl.n	800a61c <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a56e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a572:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 800a574:	f042 0206 	orr.w	r2, r2, #6
 800a578:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 800a57c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a580:	f022 0203 	bic.w	r2, r2, #3
 800a584:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 800a588:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 800a58c:	430a      	orrs	r2, r1
 800a58e:	f042 0201 	orr.w	r2, r2, #1
 800a592:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a596:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a59a:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 800a59c:	f022 0203 	bic.w	r2, r2, #3
 800a5a0:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 800a5a4:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a5a8:	430a      	orrs	r2, r1
 800a5aa:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a5ae:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a5b0:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 800a5b2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800a5b6:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 800a5b8:	689a      	ldr	r2, [r3, #8]
 800a5ba:	430a      	orrs	r2, r1
 800a5bc:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 800a5be:	686a      	ldr	r2, [r5, #4]
 800a5c0:	491b      	ldr	r1, [pc, #108]	; (800a630 <HAL_DSI_Init+0x164>)
 800a5c2:	2a01      	cmp	r2, #1
 800a5c4:	bf38      	it	cc
 800a5c6:	2201      	movcc	r2, #1
 800a5c8:	434a      	muls	r2, r1
 800a5ca:	68a9      	ldr	r1, [r5, #8]
 800a5cc:	f001 0103 	and.w	r1, r1, #3
 800a5d0:	408a      	lsls	r2, r1
 800a5d2:	6829      	ldr	r1, [r5, #0]
 800a5d4:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 800a5d8:	4341      	muls	r1, r0
 800a5da:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 800a5de:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 800a5e2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 800a5e6:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a5ea:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a5ee:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 800a5f0:	430a      	orrs	r2, r1
 800a5f2:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 800a5f6:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 800a5fa:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 800a5fe:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 800a600:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 800a602:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 800a604:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 800a606:	e007      	b.n	800a618 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a608:	f7ff fc4c 	bl	8009ea4 <HAL_GetTick>
 800a60c:	1b80      	subs	r0, r0, r6
 800a60e:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a612:	f67f af79 	bls.w	800a508 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 800a616:	2003      	movs	r0, #3
}
 800a618:	b002      	add	sp, #8
 800a61a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800a61c:	f7ff fc42 	bl	8009ea4 <HAL_GetTick>
 800a620:	1b80      	subs	r0, r0, r6
 800a622:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800a626:	d99d      	bls.n	800a564 <HAL_DSI_Init+0x98>
 800a628:	e7f5      	b.n	800a616 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 800a62a:	2001      	movs	r0, #1
 800a62c:	e7f4      	b.n	800a618 <HAL_DSI_Init+0x14c>
 800a62e:	bf00      	nop
 800a630:	003d0900 	.word	0x003d0900

0800a634 <HAL_DSI_ErrorCallback>:
 800a634:	4770      	bx	lr

0800a636 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a636:	6803      	ldr	r3, [r0, #0]
 800a638:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a63c:	07d1      	lsls	r1, r2, #31
{
 800a63e:	b510      	push	{r4, lr}
 800a640:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 800a642:	d508      	bpl.n	800a656 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 800a644:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a648:	07d2      	lsls	r2, r2, #31
 800a64a:	d504      	bpl.n	800a656 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 800a64c:	2201      	movs	r2, #1
 800a64e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 800a652:	f7f6 fe29 	bl	80012a8 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 800a656:	6823      	ldr	r3, [r4, #0]
 800a658:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 800a65c:	0791      	lsls	r1, r2, #30
 800a65e:	d509      	bpl.n	800a674 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 800a660:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a664:	0792      	lsls	r2, r2, #30
 800a666:	d505      	bpl.n	800a674 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 800a668:	2202      	movs	r2, #2
 800a66a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 800a66e:	4620      	mov	r0, r4
 800a670:	f7f6 fe4e 	bl	8001310 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 800a674:	69a3      	ldr	r3, [r4, #24]
 800a676:	2b00      	cmp	r3, #0
 800a678:	d04e      	beq.n	800a718 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 800a67a:	6821      	ldr	r1, [r4, #0]
 800a67c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a680:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 800a684:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 800a688:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a68a:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a68e:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 800a690:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 800a692:	b119      	cbz	r1, 800a69c <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 800a694:	6961      	ldr	r1, [r4, #20]
 800a696:	f041 0101 	orr.w	r1, r1, #1
 800a69a:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 800a69c:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 800a6a0:	bf1e      	ittt	ne
 800a6a2:	6962      	ldrne	r2, [r4, #20]
 800a6a4:	f042 0202 	orrne.w	r2, r2, #2
 800a6a8:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 800a6aa:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 800a6ac:	bf42      	ittt	mi
 800a6ae:	6962      	ldrmi	r2, [r4, #20]
 800a6b0:	f042 0204 	orrmi.w	r2, r2, #4
 800a6b4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 800a6b6:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 800a6b8:	bf42      	ittt	mi
 800a6ba:	6962      	ldrmi	r2, [r4, #20]
 800a6bc:	f042 0208 	orrmi.w	r2, r2, #8
 800a6c0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 800a6c2:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 800a6c6:	bf1e      	ittt	ne
 800a6c8:	6962      	ldrne	r2, [r4, #20]
 800a6ca:	f042 0210 	orrne.w	r2, r2, #16
 800a6ce:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 800a6d0:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 800a6d2:	bf42      	ittt	mi
 800a6d4:	6962      	ldrmi	r2, [r4, #20]
 800a6d6:	f042 0220 	orrmi.w	r2, r2, #32
 800a6da:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 800a6dc:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 800a6de:	bf42      	ittt	mi
 800a6e0:	6962      	ldrmi	r2, [r4, #20]
 800a6e2:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800a6e6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 800a6e8:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 800a6ea:	bf42      	ittt	mi
 800a6ec:	6962      	ldrmi	r2, [r4, #20]
 800a6ee:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800a6f2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 800a6f4:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 800a6f6:	bf42      	ittt	mi
 800a6f8:	6962      	ldrmi	r2, [r4, #20]
 800a6fa:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 800a6fe:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 800a700:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 800a704:	bf1e      	ittt	ne
 800a706:	6963      	ldrne	r3, [r4, #20]
 800a708:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 800a70c:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 800a70e:	6963      	ldr	r3, [r4, #20]
 800a710:	b113      	cbz	r3, 800a718 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 800a712:	4620      	mov	r0, r4
 800a714:	f7ff ff8e 	bl	800a634 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 800a718:	bd10      	pop	{r4, pc}

0800a71a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a71a:	7c03      	ldrb	r3, [r0, #16]
 800a71c:	2b01      	cmp	r3, #1
 800a71e:	d00b      	beq.n	800a738 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 800a720:	6803      	ldr	r3, [r0, #0]
 800a722:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a724:	f022 0203 	bic.w	r2, r2, #3
 800a728:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800a72a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a72c:	4311      	orrs	r1, r2
 800a72e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a730:	2300      	movs	r3, #0
 800a732:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a734:	4618      	mov	r0, r3
 800a736:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a738:	2002      	movs	r0, #2
}
 800a73a:	4770      	bx	lr

0800a73c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800a73c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a73e:	7c03      	ldrb	r3, [r0, #16]
 800a740:	2b01      	cmp	r3, #1
 800a742:	d06a      	beq.n	800a81a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a744:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a746:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 800a748:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800a74a:	f042 0201 	orr.w	r2, r2, #1
 800a74e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 800a750:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a754:	f022 0201 	bic.w	r2, r2, #1
 800a758:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800a75c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a760:	f042 0201 	orr.w	r2, r2, #1
 800a764:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 800a768:	68da      	ldr	r2, [r3, #12]
 800a76a:	f022 0203 	bic.w	r2, r2, #3
 800a76e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 800a770:	68da      	ldr	r2, [r3, #12]
 800a772:	4322      	orrs	r2, r4
 800a774:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 800a776:	695a      	ldr	r2, [r3, #20]
 800a778:	f022 0207 	bic.w	r2, r2, #7
 800a77c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800a77e:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 800a782:	432a      	orrs	r2, r5
 800a784:	694d      	ldr	r5, [r1, #20]
 800a786:	695c      	ldr	r4, [r3, #20]
 800a788:	432a      	orrs	r2, r5
 800a78a:	4322      	orrs	r2, r4
 800a78c:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a78e:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a790:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800a792:	f022 020f 	bic.w	r2, r2, #15
 800a796:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 800a798:	691c      	ldr	r4, [r3, #16]
 800a79a:	432c      	orrs	r4, r5
 800a79c:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800a79e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a7a2:	f024 040e 	bic.w	r4, r4, #14
 800a7a6:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a7aa:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a7ae:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800a7b0:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 800a7b4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 800a7b8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a7ba:	0c12      	lsrs	r2, r2, #16
 800a7bc:	0412      	lsls	r2, r2, #16
 800a7be:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800a7c0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 800a7c2:	4322      	orrs	r2, r4
 800a7c4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 800a7c6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 800a7ca:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 800a7ce:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a7d2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 800a7d6:	432a      	orrs	r2, r5
 800a7d8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a7da:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 800a7de:	432a      	orrs	r2, r5
 800a7e0:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a7e2:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 800a7e4:	432a      	orrs	r2, r5
 800a7e6:	4322      	orrs	r2, r4
 800a7e8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 800a7ec:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a7ee:	f022 0201 	bic.w	r2, r2, #1
 800a7f2:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 800a7f4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 800a7f6:	430a      	orrs	r2, r1
 800a7f8:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 800a7fa:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a7fe:	f042 0201 	orr.w	r2, r2, #1
 800a802:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 800a806:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800a80a:	f042 0202 	orr.w	r2, r2, #2
 800a80e:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a812:	2300      	movs	r3, #0
 800a814:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a816:	4618      	mov	r0, r3
}
 800a818:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a81a:	2002      	movs	r0, #2
 800a81c:	e7fc      	b.n	800a818 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

0800a820 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 800a820:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a822:	7c03      	ldrb	r3, [r0, #16]
 800a824:	2b01      	cmp	r3, #1
 800a826:	d02a      	beq.n	800a87e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 800a828:	6802      	ldr	r2, [r0, #0]
 800a82a:	4b16      	ldr	r3, [pc, #88]	; (800a884 <HAL_DSI_ConfigCommand+0x64>)
 800a82c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800a82e:	4023      	ands	r3, r4
 800a830:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a832:	e9d1 3500 	ldrd	r3, r5, [r1]
 800a836:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 800a838:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a83a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800a83c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800a83e:	68cd      	ldr	r5, [r1, #12]
 800a840:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 800a842:	690d      	ldr	r5, [r1, #16]
 800a844:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 800a846:	694d      	ldr	r5, [r1, #20]
 800a848:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800a84a:	698d      	ldr	r5, [r1, #24]
 800a84c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800a84e:	69cd      	ldr	r5, [r1, #28]
 800a850:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 800a852:	6a0d      	ldr	r5, [r1, #32]
 800a854:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 800a856:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 800a858:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800a85a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a85c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800a85e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a860:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 800a862:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800a864:	4323      	orrs	r3, r4
 800a866:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 800a868:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a86a:	f023 0302 	bic.w	r3, r3, #2
 800a86e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 800a870:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800a872:	430b      	orrs	r3, r1
 800a874:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a876:	2300      	movs	r3, #0
 800a878:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a87a:	4618      	mov	r0, r3
}
 800a87c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a87e:	2002      	movs	r0, #2
 800a880:	e7fc      	b.n	800a87c <HAL_DSI_ConfigCommand+0x5c>
 800a882:	bf00      	nop
 800a884:	fef080ff 	.word	0xfef080ff

0800a888 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a888:	7c03      	ldrb	r3, [r0, #16]
 800a88a:	2b01      	cmp	r3, #1
 800a88c:	d00b      	beq.n	800a8a6 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800a88e:	6803      	ldr	r3, [r0, #0]
 800a890:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a892:	f022 021f 	bic.w	r2, r2, #31
 800a896:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 800a898:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a89a:	4311      	orrs	r1, r2
 800a89c:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a89e:	2300      	movs	r3, #0
 800a8a0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a8a2:	4618      	mov	r0, r3
 800a8a4:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800a8a6:	2002      	movs	r0, #2
}
 800a8a8:	4770      	bx	lr

0800a8aa <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800a8aa:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a8ac:	7c03      	ldrb	r3, [r0, #16]
 800a8ae:	2b01      	cmp	r3, #1
 800a8b0:	d035      	beq.n	800a91e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a8b2:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a8b6:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 800a8b8:	4294      	cmp	r4, r2
 800a8ba:	bf38      	it	cc
 800a8bc:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 800a8be:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a8c2:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 800a8c6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 800a8ca:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 800a8ce:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a8d2:	4322      	orrs	r2, r4
 800a8d4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 800a8d8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 800a8dc:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 800a8e0:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 800a8e4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800a8e8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a8ea:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 800a8ee:	690d      	ldr	r5, [r1, #16]
 800a8f0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a8f4:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 800a8f6:	432a      	orrs	r2, r5
 800a8f8:	4322      	orrs	r2, r4
 800a8fa:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 800a8fe:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a902:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a906:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 800a90a:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 800a90e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800a912:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a916:	2300      	movs	r3, #0
 800a918:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a91a:	4618      	mov	r0, r3
}
 800a91c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a91e:	2002      	movs	r0, #2
 800a920:	e7fc      	b.n	800a91c <HAL_DSI_ConfigPhyTimer+0x72>
	...

0800a924 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 800a924:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a926:	7c03      	ldrb	r3, [r0, #16]
 800a928:	2b01      	cmp	r3, #1
 800a92a:	d05c      	beq.n	800a9e6 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a92c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a92e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a930:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a932:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800a934:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 800a938:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800a93a:	689a      	ldr	r2, [r3, #8]
 800a93c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 800a940:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a942:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a944:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 800a946:	b292      	uxth	r2, r2
 800a948:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800a94a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800a94c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800a950:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 800a952:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a954:	4a25      	ldr	r2, [pc, #148]	; (800a9ec <HAL_DSI_ConfigHostTimeouts+0xc8>)
 800a956:	4014      	ands	r4, r2
 800a958:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800a95a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800a95c:	432c      	orrs	r4, r5
 800a95e:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a960:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a962:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 800a964:	4014      	ands	r4, r2
 800a966:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 800a968:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800a96a:	432c      	orrs	r4, r5
 800a96c:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a96e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a972:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800a974:	4014      	ands	r4, r2
 800a976:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800a97a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800a97e:	432c      	orrs	r4, r5
 800a980:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a984:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a988:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800a98a:	4014      	ands	r4, r2
 800a98c:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 800a990:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a994:	432c      	orrs	r4, r5
 800a996:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800a99a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a99e:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 800a9a2:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 800a9a6:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800a9aa:	698d      	ldr	r5, [r1, #24]
 800a9ac:	432c      	orrs	r4, r5
 800a9ae:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a9b2:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a9b6:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a9b8:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 800a9ba:	4014      	ands	r4, r2
 800a9bc:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 800a9c0:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 800a9c4:	432c      	orrs	r4, r5
 800a9c6:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 800a9ca:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a9ce:	4022      	ands	r2, r4
 800a9d0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 800a9d4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 800a9d8:	430a      	orrs	r2, r1
 800a9da:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800a9de:	2300      	movs	r3, #0
 800a9e0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800a9e2:	4618      	mov	r0, r3
}
 800a9e4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800a9e6:	2002      	movs	r0, #2
 800a9e8:	e7fc      	b.n	800a9e4 <HAL_DSI_ConfigHostTimeouts+0xc0>
 800a9ea:	bf00      	nop
 800a9ec:	ffff0000 	.word	0xffff0000

0800a9f0 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800a9f0:	7c03      	ldrb	r3, [r0, #16]
 800a9f2:	2b01      	cmp	r3, #1
{
 800a9f4:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 800a9f6:	d01c      	beq.n	800aa32 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 800a9f8:	6802      	ldr	r2, [r0, #0]
 800a9fa:	2300      	movs	r3, #0
 800a9fc:	9300      	str	r3, [sp, #0]
 800a9fe:	6851      	ldr	r1, [r2, #4]
 800aa00:	f041 0101 	orr.w	r1, r1, #1
 800aa04:	6051      	str	r1, [r2, #4]
 800aa06:	6851      	ldr	r1, [r2, #4]
 800aa08:	f001 0101 	and.w	r1, r1, #1
 800aa0c:	9100      	str	r1, [sp, #0]
 800aa0e:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800aa10:	9301      	str	r3, [sp, #4]
 800aa12:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 800aa16:	f041 0108 	orr.w	r1, r1, #8
 800aa1a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800aa1e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa22:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 800aa24:	f002 0208 	and.w	r2, r2, #8
 800aa28:	9201      	str	r2, [sp, #4]
 800aa2a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800aa2c:	4618      	mov	r0, r3
}
 800aa2e:	b002      	add	sp, #8
 800aa30:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800aa32:	2002      	movs	r0, #2
 800aa34:	e7fb      	b.n	800aa2e <HAL_DSI_Start+0x3e>

0800aa36 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa36:	7c03      	ldrb	r3, [r0, #16]
 800aa38:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800aa3a:	bf1f      	itttt	ne
 800aa3c:	6802      	ldrne	r2, [r0, #0]
 800aa3e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 800aa42:	f043 0304 	orrne.w	r3, r3, #4
 800aa46:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa4a:	bf1d      	ittte	ne
 800aa4c:	2300      	movne	r3, #0
 800aa4e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 800aa50:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 800aa52:	2002      	moveq	r0, #2
}
 800aa54:	4770      	bx	lr

0800aa56 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 800aa56:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa58:	7c05      	ldrb	r5, [r0, #16]
 800aa5a:	2d01      	cmp	r5, #1
{
 800aa5c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800aa5e:	d009      	beq.n	800aa74 <HAL_DSI_ShortWrite+0x1e>
 800aa60:	2501      	movs	r5, #1
 800aa62:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 800aa64:	9d06      	ldr	r5, [sp, #24]
 800aa66:	9500      	str	r5, [sp, #0]
 800aa68:	f7ff fcac 	bl	800a3c4 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800aa6c:	2300      	movs	r3, #0
 800aa6e:	7423      	strb	r3, [r4, #16]

  return status;
}
 800aa70:	b003      	add	sp, #12
 800aa72:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800aa74:	2002      	movs	r0, #2
 800aa76:	e7fb      	b.n	800aa70 <HAL_DSI_ShortWrite+0x1a>

0800aa78 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 800aa78:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aa7c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800aa7e:	7c03      	ldrb	r3, [r0, #16]
 800aa80:	2b01      	cmp	r3, #1
{
 800aa82:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 800aa86:	4606      	mov	r6, r0
 800aa88:	460f      	mov	r7, r1
 800aa8a:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800aa8c:	d053      	beq.n	800ab36 <HAL_DSI_LongWrite+0xbe>
 800aa8e:	2301      	movs	r3, #1
 800aa90:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 800aa92:	f7ff fa07 	bl	8009ea4 <HAL_GetTick>
 800aa96:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 800aa98:	6831      	ldr	r1, [r6, #0]
 800aa9a:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 800aa9c:	f013 0a01 	ands.w	sl, r3, #1
 800aaa0:	d01a      	beq.n	800aad8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800aaa2:	2c03      	cmp	r4, #3
 800aaa4:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 800aaa6:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800aaaa:	bf28      	it	cs
 800aaac:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 800aaae:	4282      	cmp	r2, r0
 800aab0:	d11e      	bne.n	800aaf0 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 800aab2:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 800aab4:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 800aab8:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 800aaba:	bb1b      	cbnz	r3, 800ab04 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 800aabc:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 800aabe:	0222      	lsls	r2, r4, #8
 800aac0:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 800aac4:	b292      	uxth	r2, r2
 800aac6:	0224      	lsls	r4, r4, #8
 800aac8:	4315      	orrs	r5, r2
 800aaca:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 800aace:	432c      	orrs	r4, r5
 800aad0:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 800aad2:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 800aad4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 800aad6:	e009      	b.n	800aaec <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 800aad8:	f7ff f9e4 	bl	8009ea4 <HAL_GetTick>
 800aadc:	eba0 000b 	sub.w	r0, r0, fp
 800aae0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800aae4:	d9d8      	bls.n	800aa98 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 800aae6:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 800aaea:	2003      	movs	r0, #3
}
 800aaec:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 800aaf0:	f818 3002 	ldrb.w	r3, [r8, r2]
 800aaf4:	3201      	adds	r2, #1
 800aaf6:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 800aafa:	fa03 f30c 	lsl.w	r3, r3, ip
 800aafe:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 800ab02:	e7d4      	b.n	800aaae <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ab04:	2b04      	cmp	r3, #4
    fifoword = 0U;
 800ab06:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ab0a:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 800ab0c:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 800ab0e:	bf28      	it	cs
 800ab10:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ab14:	f812 8000 	ldrb.w	r8, [r2, r0]
 800ab18:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800ab1c:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ab1e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 800ab22:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800ab24:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 800ab28:	d1f4      	bne.n	800ab14 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800ab2a:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 800ab2e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 800ab32:	4472      	add	r2, lr
 800ab34:	e7c1      	b.n	800aaba <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 800ab36:	2002      	movs	r0, #2
 800ab38:	e7d8      	b.n	800aaec <HAL_DSI_LongWrite+0x74>

0800ab3a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800ab3a:	7c03      	ldrb	r3, [r0, #16]
 800ab3c:	2b01      	cmp	r3, #1
 800ab3e:	d010      	beq.n	800ab62 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 800ab40:	6803      	ldr	r3, [r0, #0]
 800ab42:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ab46:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800ab4a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800ab4e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 800ab52:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 800ab56:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800ab5a:	2300      	movs	r3, #0
 800ab5c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800ab5e:	4618      	mov	r0, r3
 800ab60:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 800ab62:	2002      	movs	r0, #2
}
 800ab64:	4770      	bx	lr
	...

0800ab68 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 800ab68:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ab6c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 800ad30 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800ab70:	4a6d      	ldr	r2, [pc, #436]	; (800ad28 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ab72:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab74:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800ab76:	2401      	movs	r4, #1
 800ab78:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800ab7a:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800ab7e:	43ac      	bics	r4, r5
 800ab80:	f040 80b9 	bne.w	800acf6 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab84:	684d      	ldr	r5, [r1, #4]
 800ab86:	f005 0403 	and.w	r4, r5, #3
 800ab8a:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab8e:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab90:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab92:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab96:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ab98:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800ab9c:	d834      	bhi.n	800ac08 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800ab9e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800aba0:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 800aba4:	68cf      	ldr	r7, [r1, #12]
 800aba6:	fa07 f708 	lsl.w	r7, r7, r8
 800abaa:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800abae:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800abb0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800abb2:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 800abb6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800abba:	409f      	lsls	r7, r3
 800abbc:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800abc0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800abc2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800abc4:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800abc8:	688f      	ldr	r7, [r1, #8]
 800abca:	fa07 f708 	lsl.w	r7, r7, r8
 800abce:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800abd2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 800abd4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800abd6:	d119      	bne.n	800ac0c <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 800abd8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800abdc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abe0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 800abe4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800abe8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800abec:	f04f 0e0f 	mov.w	lr, #15
 800abf0:	fa0e fe0b 	lsl.w	lr, lr, fp
 800abf4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800abf8:	690f      	ldr	r7, [r1, #16]
 800abfa:	fa07 f70b 	lsl.w	r7, r7, fp
 800abfe:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800ac02:	f8ca 7020 	str.w	r7, [sl, #32]
 800ac06:	e001      	b.n	800ac0c <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800ac08:	2c03      	cmp	r4, #3
 800ac0a:	d1da      	bne.n	800abc2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 800ac0c:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800ac0e:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800ac12:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800ac14:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800ac16:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800ac1a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800ac1c:	d06b      	beq.n	800acf6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac1e:	f04f 0a00 	mov.w	sl, #0
 800ac22:	f8cd a004 	str.w	sl, [sp, #4]
 800ac26:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac2a:	4c40      	ldr	r4, [pc, #256]	; (800ad2c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800ac2c:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 800ac30:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800ac34:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 800ac38:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800ac3c:	9601      	str	r6, [sp, #4]
 800ac3e:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800ac40:	f023 0603 	bic.w	r6, r3, #3
 800ac44:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 800ac48:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac4c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 800ac50:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac54:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800ac58:	270f      	movs	r7, #15
 800ac5a:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac5e:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800ac60:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ac64:	d04e      	beq.n	800ad04 <HAL_GPIO_Init+0x19c>
 800ac66:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac6a:	42a0      	cmp	r0, r4
 800ac6c:	d04c      	beq.n	800ad08 <HAL_GPIO_Init+0x1a0>
 800ac6e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac72:	42a0      	cmp	r0, r4
 800ac74:	d04a      	beq.n	800ad0c <HAL_GPIO_Init+0x1a4>
 800ac76:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac7a:	42a0      	cmp	r0, r4
 800ac7c:	d048      	beq.n	800ad10 <HAL_GPIO_Init+0x1a8>
 800ac7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac82:	42a0      	cmp	r0, r4
 800ac84:	d046      	beq.n	800ad14 <HAL_GPIO_Init+0x1ac>
 800ac86:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac8a:	42a0      	cmp	r0, r4
 800ac8c:	d044      	beq.n	800ad18 <HAL_GPIO_Init+0x1b0>
 800ac8e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac92:	42a0      	cmp	r0, r4
 800ac94:	d042      	beq.n	800ad1c <HAL_GPIO_Init+0x1b4>
 800ac96:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800ac9a:	42a0      	cmp	r0, r4
 800ac9c:	d040      	beq.n	800ad20 <HAL_GPIO_Init+0x1b8>
 800ac9e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800aca2:	42a0      	cmp	r0, r4
 800aca4:	d03e      	beq.n	800ad24 <HAL_GPIO_Init+0x1bc>
 800aca6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800acaa:	42a0      	cmp	r0, r4
 800acac:	bf0c      	ite	eq
 800acae:	2409      	moveq	r4, #9
 800acb0:	240a      	movne	r4, #10
 800acb2:	fa04 f40e 	lsl.w	r4, r4, lr
 800acb6:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 800acb8:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800acba:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800acbc:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800acc0:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 800acc2:	bf54      	ite	pl
 800acc4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acc6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800acca:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800accc:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800acce:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 800acd0:	bf54      	ite	pl
 800acd2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acd4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 800acd8:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 800acda:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 800acdc:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 800acde:	bf54      	ite	pl
 800ace0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800ace2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 800ace6:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800ace8:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 800acea:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 800acec:	bf54      	ite	pl
 800acee:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 800acf0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 800acf4:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800acf6:	3301      	adds	r3, #1
 800acf8:	2b10      	cmp	r3, #16
 800acfa:	f47f af3b 	bne.w	800ab74 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 800acfe:	b003      	add	sp, #12
 800ad00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800ad04:	4654      	mov	r4, sl
 800ad06:	e7d4      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad08:	2401      	movs	r4, #1
 800ad0a:	e7d2      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad0c:	2402      	movs	r4, #2
 800ad0e:	e7d0      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad10:	2403      	movs	r4, #3
 800ad12:	e7ce      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad14:	2404      	movs	r4, #4
 800ad16:	e7cc      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad18:	2405      	movs	r4, #5
 800ad1a:	e7ca      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad1c:	2406      	movs	r4, #6
 800ad1e:	e7c8      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad20:	2407      	movs	r4, #7
 800ad22:	e7c6      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad24:	2408      	movs	r4, #8
 800ad26:	e7c4      	b.n	800acb2 <HAL_GPIO_Init+0x14a>
 800ad28:	40013c00 	.word	0x40013c00
 800ad2c:	40020000 	.word	0x40020000
 800ad30:	40023800 	.word	0x40023800

0800ad34 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 800ad34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800ad38:	4c4a      	ldr	r4, [pc, #296]	; (800ae64 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad3a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800ae6c <HAL_GPIO_DeInit+0x138>
 800ad3e:	f8df a130 	ldr.w	sl, [pc, #304]	; 800ae70 <HAL_GPIO_DeInit+0x13c>
 800ad42:	f8df b130 	ldr.w	fp, [pc, #304]	; 800ae74 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ad46:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 800ad48:	2301      	movs	r3, #1
 800ad4a:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800ad4e:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 800ad52:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 800ad56:	d16e      	bne.n	800ae36 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 800ad58:	f022 0503 	bic.w	r5, r2, #3
 800ad5c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800ad60:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad64:	4b40      	ldr	r3, [pc, #256]	; (800ae68 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 800ad66:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800ad6a:	f002 0c03 	and.w	ip, r2, #3
 800ad6e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800ad72:	260f      	movs	r6, #15
 800ad74:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad78:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800ad7a:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ad7e:	d05f      	beq.n	800ae40 <HAL_GPIO_DeInit+0x10c>
 800ad80:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad84:	4298      	cmp	r0, r3
 800ad86:	d05d      	beq.n	800ae44 <HAL_GPIO_DeInit+0x110>
 800ad88:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad8c:	4298      	cmp	r0, r3
 800ad8e:	d05b      	beq.n	800ae48 <HAL_GPIO_DeInit+0x114>
 800ad90:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad94:	4298      	cmp	r0, r3
 800ad96:	d059      	beq.n	800ae4c <HAL_GPIO_DeInit+0x118>
 800ad98:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800ad9c:	4298      	cmp	r0, r3
 800ad9e:	d057      	beq.n	800ae50 <HAL_GPIO_DeInit+0x11c>
 800ada0:	4548      	cmp	r0, r9
 800ada2:	d057      	beq.n	800ae54 <HAL_GPIO_DeInit+0x120>
 800ada4:	4550      	cmp	r0, sl
 800ada6:	d057      	beq.n	800ae58 <HAL_GPIO_DeInit+0x124>
 800ada8:	4558      	cmp	r0, fp
 800adaa:	d057      	beq.n	800ae5c <HAL_GPIO_DeInit+0x128>
 800adac:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800adb0:	4298      	cmp	r0, r3
 800adb2:	d055      	beq.n	800ae60 <HAL_GPIO_DeInit+0x12c>
 800adb4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800adb8:	4298      	cmp	r0, r3
 800adba:	bf0c      	ite	eq
 800adbc:	2309      	moveq	r3, #9
 800adbe:	230a      	movne	r3, #10
 800adc0:	fa03 f30c 	lsl.w	r3, r3, ip
 800adc4:	4543      	cmp	r3, r8
 800adc6:	d113      	bne.n	800adf0 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 800adc8:	6823      	ldr	r3, [r4, #0]
 800adca:	ea23 0307 	bic.w	r3, r3, r7
 800adce:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 800add0:	6863      	ldr	r3, [r4, #4]
 800add2:	ea23 0307 	bic.w	r3, r3, r7
 800add6:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 800add8:	68e3      	ldr	r3, [r4, #12]
 800adda:	ea23 0307 	bic.w	r3, r3, r7
 800adde:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 800ade0:	68a3      	ldr	r3, [r4, #8]
 800ade2:	ea23 0307 	bic.w	r3, r3, r7
 800ade6:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 800ade8:	68ab      	ldr	r3, [r5, #8]
 800adea:	ea23 0306 	bic.w	r3, r3, r6
 800adee:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800adf0:	6805      	ldr	r5, [r0, #0]
 800adf2:	2603      	movs	r6, #3
 800adf4:	0053      	lsls	r3, r2, #1
 800adf6:	fa06 f303 	lsl.w	r3, r6, r3
 800adfa:	ea25 0503 	bic.w	r5, r5, r3
 800adfe:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800ae00:	fa22 f506 	lsr.w	r5, r2, r6
 800ae04:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 800ae08:	f002 0c07 	and.w	ip, r2, #7
 800ae0c:	6a2e      	ldr	r6, [r5, #32]
 800ae0e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 800ae12:	270f      	movs	r7, #15
 800ae14:	fa07 f70c 	lsl.w	r7, r7, ip
 800ae18:	ea26 0707 	bic.w	r7, r6, r7
 800ae1c:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800ae1e:	68c5      	ldr	r5, [r0, #12]
 800ae20:	ea25 0503 	bic.w	r5, r5, r3
 800ae24:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 800ae26:	6845      	ldr	r5, [r0, #4]
 800ae28:	ea25 050e 	bic.w	r5, r5, lr
 800ae2c:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800ae2e:	6885      	ldr	r5, [r0, #8]
 800ae30:	ea25 0303 	bic.w	r3, r5, r3
 800ae34:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800ae36:	3201      	adds	r2, #1
 800ae38:	2a10      	cmp	r2, #16
 800ae3a:	d185      	bne.n	800ad48 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800ae3c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800ae40:	2300      	movs	r3, #0
 800ae42:	e7bd      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae44:	2301      	movs	r3, #1
 800ae46:	e7bb      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae48:	2302      	movs	r3, #2
 800ae4a:	e7b9      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae4c:	2303      	movs	r3, #3
 800ae4e:	e7b7      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae50:	2304      	movs	r3, #4
 800ae52:	e7b5      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae54:	2305      	movs	r3, #5
 800ae56:	e7b3      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae58:	2306      	movs	r3, #6
 800ae5a:	e7b1      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae5c:	2307      	movs	r3, #7
 800ae5e:	e7af      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae60:	2308      	movs	r3, #8
 800ae62:	e7ad      	b.n	800adc0 <HAL_GPIO_DeInit+0x8c>
 800ae64:	40013c00 	.word	0x40013c00
 800ae68:	40020000 	.word	0x40020000
 800ae6c:	40021400 	.word	0x40021400
 800ae70:	40021800 	.word	0x40021800
 800ae74:	40021c00 	.word	0x40021c00

0800ae78 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800ae78:	6903      	ldr	r3, [r0, #16]
 800ae7a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800ae7c:	bf14      	ite	ne
 800ae7e:	2001      	movne	r0, #1
 800ae80:	2000      	moveq	r0, #0
 800ae82:	4770      	bx	lr

0800ae84 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 800ae84:	b10a      	cbz	r2, 800ae8a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ae86:	6181      	str	r1, [r0, #24]
  }
}
 800ae88:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800ae8a:	0409      	lsls	r1, r1, #16
 800ae8c:	e7fb      	b.n	800ae86 <HAL_GPIO_WritePin+0x2>

0800ae8e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800ae8e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 800ae90:	ea01 0203 	and.w	r2, r1, r3
 800ae94:	ea21 0103 	bic.w	r1, r1, r3
 800ae98:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800ae9c:	6181      	str	r1, [r0, #24]
}
 800ae9e:	4770      	bx	lr

0800aea0 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800aea0:	6801      	ldr	r1, [r0, #0]
 800aea2:	694b      	ldr	r3, [r1, #20]
 800aea4:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800aea8:	f04f 0200 	mov.w	r2, #0
 800aeac:	d010      	beq.n	800aed0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800aeae:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800aeb2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800aeb4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800aeb6:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800aeb8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800aebc:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aec0:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800aec2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800aec6:	f043 0304 	orr.w	r3, r3, #4
 800aeca:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800aecc:	2001      	movs	r0, #1
 800aece:	4770      	bx	lr
  }
  return HAL_OK;
 800aed0:	4618      	mov	r0, r3
}
 800aed2:	4770      	bx	lr

0800aed4 <I2C_WaitOnFlagUntilTimeout>:
{
 800aed4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800aed8:	4606      	mov	r6, r0
 800aeda:	460f      	mov	r7, r1
 800aedc:	4691      	mov	r9, r2
 800aede:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800aee0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800aee4:	6833      	ldr	r3, [r6, #0]
 800aee6:	f1ba 0f01 	cmp.w	sl, #1
 800aeea:	bf0c      	ite	eq
 800aeec:	695c      	ldreq	r4, [r3, #20]
 800aeee:	699c      	ldrne	r4, [r3, #24]
 800aef0:	ea27 0404 	bic.w	r4, r7, r4
 800aef4:	b2a4      	uxth	r4, r4
 800aef6:	fab4 f484 	clz	r4, r4
 800aefa:	0964      	lsrs	r4, r4, #5
 800aefc:	45a1      	cmp	r9, r4
 800aefe:	d001      	beq.n	800af04 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800af00:	2000      	movs	r0, #0
 800af02:	e017      	b.n	800af34 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 800af04:	1c6a      	adds	r2, r5, #1
 800af06:	d0ee      	beq.n	800aee6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af08:	f7fe ffcc 	bl	8009ea4 <HAL_GetTick>
 800af0c:	9b08      	ldr	r3, [sp, #32]
 800af0e:	1ac0      	subs	r0, r0, r3
 800af10:	42a8      	cmp	r0, r5
 800af12:	d801      	bhi.n	800af18 <I2C_WaitOnFlagUntilTimeout+0x44>
 800af14:	2d00      	cmp	r5, #0
 800af16:	d1e5      	bne.n	800aee4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af18:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800af1a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800af1c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800af1e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800af22:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af26:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af28:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800af2c:	f042 0220 	orr.w	r2, r2, #32
 800af30:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800af32:	2001      	movs	r0, #1
}
 800af34:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

0800af38 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 800af38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af3c:	4604      	mov	r4, r0
 800af3e:	460f      	mov	r7, r1
 800af40:	4616      	mov	r6, r2
 800af42:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800af44:	6825      	ldr	r5, [r4, #0]
 800af46:	6968      	ldr	r0, [r5, #20]
 800af48:	ea27 0000 	bic.w	r0, r7, r0
 800af4c:	b280      	uxth	r0, r0
 800af4e:	b1b8      	cbz	r0, 800af80 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 800af50:	696b      	ldr	r3, [r5, #20]
 800af52:	055a      	lsls	r2, r3, #21
 800af54:	d516      	bpl.n	800af84 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800af56:	682b      	ldr	r3, [r5, #0]
 800af58:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800af5c:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800af5e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800af62:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800af64:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800af66:	2300      	movs	r3, #0
 800af68:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800af6a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800af6e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800af72:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800af74:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800af78:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800af7a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800af7e:	2001      	movs	r0, #1
}
 800af80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800af84:	1c73      	adds	r3, r6, #1
 800af86:	d0de      	beq.n	800af46 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800af88:	f7fe ff8c 	bl	8009ea4 <HAL_GetTick>
 800af8c:	eba0 0008 	sub.w	r0, r0, r8
 800af90:	42b0      	cmp	r0, r6
 800af92:	d801      	bhi.n	800af98 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800af94:	2e00      	cmp	r6, #0
 800af96:	d1d5      	bne.n	800af44 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af98:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800af9a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800af9c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800af9e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afa2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afa6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800afa8:	f042 0220 	orr.w	r2, r2, #32
 800afac:	e7e4      	b.n	800af78 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800afae <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800afae:	b570      	push	{r4, r5, r6, lr}
 800afb0:	4604      	mov	r4, r0
 800afb2:	460d      	mov	r5, r1
 800afb4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800afb6:	6821      	ldr	r1, [r4, #0]
 800afb8:	694b      	ldr	r3, [r1, #20]
 800afba:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800afbe:	d001      	beq.n	800afc4 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800afc0:	2000      	movs	r0, #0
 800afc2:	e010      	b.n	800afe6 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800afc4:	694a      	ldr	r2, [r1, #20]
 800afc6:	06d2      	lsls	r2, r2, #27
 800afc8:	d50e      	bpl.n	800afe8 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800afca:	f06f 0210 	mvn.w	r2, #16
 800afce:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800afd0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800afd2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800afd4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800afd8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800afdc:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800afde:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800afe0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 800afe4:	2001      	movs	r0, #1
}
 800afe6:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800afe8:	f7fe ff5c 	bl	8009ea4 <HAL_GetTick>
 800afec:	1b80      	subs	r0, r0, r6
 800afee:	42a8      	cmp	r0, r5
 800aff0:	d801      	bhi.n	800aff6 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 800aff2:	2d00      	cmp	r5, #0
 800aff4:	d1df      	bne.n	800afb6 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 800aff6:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800aff8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800affa:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800affc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b000:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b004:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800b006:	f042 0220 	orr.w	r2, r2, #32
 800b00a:	e7e8      	b.n	800afde <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800b00c <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800b00c:	b570      	push	{r4, r5, r6, lr}
 800b00e:	4604      	mov	r4, r0
 800b010:	460d      	mov	r5, r1
 800b012:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800b014:	6823      	ldr	r3, [r4, #0]
 800b016:	695b      	ldr	r3, [r3, #20]
 800b018:	075b      	lsls	r3, r3, #29
 800b01a:	d501      	bpl.n	800b020 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800b01c:	2000      	movs	r0, #0
}
 800b01e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b020:	4620      	mov	r0, r4
 800b022:	f7ff ff3d 	bl	800aea0 <I2C_IsAcknowledgeFailed>
 800b026:	b9a8      	cbnz	r0, 800b054 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b028:	1c6a      	adds	r2, r5, #1
 800b02a:	d0f3      	beq.n	800b014 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b02c:	f7fe ff3a 	bl	8009ea4 <HAL_GetTick>
 800b030:	1b80      	subs	r0, r0, r6
 800b032:	42a8      	cmp	r0, r5
 800b034:	d801      	bhi.n	800b03a <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800b036:	2d00      	cmp	r5, #0
 800b038:	d1ec      	bne.n	800b014 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b03a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b03c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b03e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b040:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b044:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b048:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b04a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b04e:	f042 0220 	orr.w	r2, r2, #32
 800b052:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b054:	2001      	movs	r0, #1
 800b056:	e7e2      	b.n	800b01e <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800b058 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800b058:	b570      	push	{r4, r5, r6, lr}
 800b05a:	4604      	mov	r4, r0
 800b05c:	460d      	mov	r5, r1
 800b05e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800b060:	6823      	ldr	r3, [r4, #0]
 800b062:	695b      	ldr	r3, [r3, #20]
 800b064:	061b      	lsls	r3, r3, #24
 800b066:	d501      	bpl.n	800b06c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800b068:	2000      	movs	r0, #0
}
 800b06a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800b06c:	4620      	mov	r0, r4
 800b06e:	f7ff ff17 	bl	800aea0 <I2C_IsAcknowledgeFailed>
 800b072:	b9a8      	cbnz	r0, 800b0a0 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800b074:	1c6a      	adds	r2, r5, #1
 800b076:	d0f3      	beq.n	800b060 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800b078:	f7fe ff14 	bl	8009ea4 <HAL_GetTick>
 800b07c:	1b80      	subs	r0, r0, r6
 800b07e:	42a8      	cmp	r0, r5
 800b080:	d801      	bhi.n	800b086 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800b082:	2d00      	cmp	r5, #0
 800b084:	d1ec      	bne.n	800b060 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b086:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800b088:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800b08a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800b08c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800b090:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b094:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800b096:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800b09a:	f042 0220 	orr.w	r2, r2, #32
 800b09e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800b0a0:	2001      	movs	r0, #1
 800b0a2:	e7e2      	b.n	800b06a <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800b0a4 <I2C_RequestMemoryWrite>:
{
 800b0a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0a8:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b0aa:	6802      	ldr	r2, [r0, #0]
{
 800b0ac:	b085      	sub	sp, #20
 800b0ae:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800b0b2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b0b4:	6813      	ldr	r3, [r2, #0]
 800b0b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b0ba:	6013      	str	r3, [r2, #0]
{
 800b0bc:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b0be:	463b      	mov	r3, r7
 800b0c0:	f8cd 8000 	str.w	r8, [sp]
 800b0c4:	2200      	movs	r2, #0
 800b0c6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b0ca:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b0cc:	f7ff ff02 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b0d0:	6823      	ldr	r3, [r4, #0]
 800b0d2:	b138      	cbz	r0, 800b0e4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b0d4:	681b      	ldr	r3, [r3, #0]
 800b0d6:	05db      	lsls	r3, r3, #23
 800b0d8:	d502      	bpl.n	800b0e0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b0da:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b0de:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b0e0:	2003      	movs	r0, #3
 800b0e2:	e00a      	b.n	800b0fa <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b0e4:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b0e8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b0ea:	4919      	ldr	r1, [pc, #100]	; (800b150 <I2C_RequestMemoryWrite+0xac>)
 800b0ec:	4643      	mov	r3, r8
 800b0ee:	463a      	mov	r2, r7
 800b0f0:	4620      	mov	r0, r4
 800b0f2:	f7ff ff21 	bl	800af38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b0f6:	b118      	cbz	r0, 800b100 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800b0f8:	2001      	movs	r0, #1
}
 800b0fa:	b005      	add	sp, #20
 800b0fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b100:	6823      	ldr	r3, [r4, #0]
 800b102:	9003      	str	r0, [sp, #12]
 800b104:	695a      	ldr	r2, [r3, #20]
 800b106:	9203      	str	r2, [sp, #12]
 800b108:	699b      	ldr	r3, [r3, #24]
 800b10a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b10c:	4642      	mov	r2, r8
 800b10e:	4639      	mov	r1, r7
 800b110:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b112:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b114:	f7ff ffa0 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b118:	b140      	cbz	r0, 800b12c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b11a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b11c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b11e:	bf01      	itttt	eq
 800b120:	6822      	ldreq	r2, [r4, #0]
 800b122:	6813      	ldreq	r3, [r2, #0]
 800b124:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b128:	6013      	streq	r3, [r2, #0]
 800b12a:	e7e5      	b.n	800b0f8 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b12c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b130:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b132:	d102      	bne.n	800b13a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b134:	b2ed      	uxtb	r5, r5
 800b136:	611d      	str	r5, [r3, #16]
 800b138:	e7df      	b.n	800b0fa <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b13a:	0a2a      	lsrs	r2, r5, #8
 800b13c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b13e:	4639      	mov	r1, r7
 800b140:	4642      	mov	r2, r8
 800b142:	4620      	mov	r0, r4
 800b144:	f7ff ff88 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b148:	2800      	cmp	r0, #0
 800b14a:	d1e6      	bne.n	800b11a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b14c:	6823      	ldr	r3, [r4, #0]
 800b14e:	e7f1      	b.n	800b134 <I2C_RequestMemoryWrite+0x90>
 800b150:	00010002 	.word	0x00010002

0800b154 <I2C_RequestMemoryRead>:
{
 800b154:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b158:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b15a:	6803      	ldr	r3, [r0, #0]
{
 800b15c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b15e:	681a      	ldr	r2, [r3, #0]
 800b160:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800b164:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b166:	681a      	ldr	r2, [r3, #0]
{
 800b168:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b16c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800b170:	601a      	str	r2, [r3, #0]
{
 800b172:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b174:	463b      	mov	r3, r7
 800b176:	f8cd 8000 	str.w	r8, [sp]
 800b17a:	2200      	movs	r2, #0
 800b17c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800b180:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b182:	f7ff fea7 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b186:	6823      	ldr	r3, [r4, #0]
 800b188:	b148      	cbz	r0, 800b19e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b18a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b18c:	05db      	lsls	r3, r3, #23
 800b18e:	d502      	bpl.n	800b196 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800b190:	f44f 7300 	mov.w	r3, #512	; 0x200
 800b194:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800b196:	2003      	movs	r0, #3
}
 800b198:	b004      	add	sp, #16
 800b19a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 800b19e:	fa5f f986 	uxtb.w	r9, r6
 800b1a2:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800b1a6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b1a8:	492a      	ldr	r1, [pc, #168]	; (800b254 <I2C_RequestMemoryRead+0x100>)
 800b1aa:	4643      	mov	r3, r8
 800b1ac:	463a      	mov	r2, r7
 800b1ae:	4620      	mov	r0, r4
 800b1b0:	f7ff fec2 	bl	800af38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800b1b4:	b108      	cbz	r0, 800b1ba <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800b1b6:	2001      	movs	r0, #1
 800b1b8:	e7ee      	b.n	800b198 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1ba:	6823      	ldr	r3, [r4, #0]
 800b1bc:	9003      	str	r0, [sp, #12]
 800b1be:	695a      	ldr	r2, [r3, #20]
 800b1c0:	9203      	str	r2, [sp, #12]
 800b1c2:	699b      	ldr	r3, [r3, #24]
 800b1c4:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1c6:	4642      	mov	r2, r8
 800b1c8:	4639      	mov	r1, r7
 800b1ca:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b1cc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1ce:	f7ff ff43 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b1d2:	b140      	cbz	r0, 800b1e6 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b1d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b1d6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1d8:	bf01      	itttt	eq
 800b1da:	6822      	ldreq	r2, [r4, #0]
 800b1dc:	6813      	ldreq	r3, [r2, #0]
 800b1de:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b1e2:	6013      	streq	r3, [r2, #0]
 800b1e4:	e7e7      	b.n	800b1b6 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b1e6:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b1ea:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800b1ec:	d11a      	bne.n	800b224 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b1ee:	b2ed      	uxtb	r5, r5
 800b1f0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b1f2:	4642      	mov	r2, r8
 800b1f4:	4639      	mov	r1, r7
 800b1f6:	4620      	mov	r0, r4
 800b1f8:	f7ff ff2e 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b1fc:	2800      	cmp	r0, #0
 800b1fe:	d1e9      	bne.n	800b1d4 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800b200:	6822      	ldr	r2, [r4, #0]
 800b202:	6813      	ldr	r3, [r2, #0]
 800b204:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800b208:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800b20a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800b20e:	4602      	mov	r2, r0
 800b210:	f8cd 8000 	str.w	r8, [sp]
 800b214:	463b      	mov	r3, r7
 800b216:	4620      	mov	r0, r4
 800b218:	f7ff fe5c 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b21c:	6822      	ldr	r2, [r4, #0]
 800b21e:	b160      	cbz	r0, 800b23a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800b220:	6813      	ldr	r3, [r2, #0]
 800b222:	e7b3      	b.n	800b18c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800b224:	0a2a      	lsrs	r2, r5, #8
 800b226:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800b228:	4639      	mov	r1, r7
 800b22a:	4642      	mov	r2, r8
 800b22c:	4620      	mov	r0, r4
 800b22e:	f7ff ff13 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b232:	2800      	cmp	r0, #0
 800b234:	d1ce      	bne.n	800b1d4 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800b236:	6823      	ldr	r3, [r4, #0]
 800b238:	e7d9      	b.n	800b1ee <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800b23a:	f049 0301 	orr.w	r3, r9, #1
 800b23e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800b240:	4904      	ldr	r1, [pc, #16]	; (800b254 <I2C_RequestMemoryRead+0x100>)
 800b242:	4643      	mov	r3, r8
 800b244:	463a      	mov	r2, r7
 800b246:	4620      	mov	r0, r4
 800b248:	f7ff fe76 	bl	800af38 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 800b24c:	3800      	subs	r0, #0
 800b24e:	bf18      	it	ne
 800b250:	2001      	movne	r0, #1
 800b252:	e7a1      	b.n	800b198 <I2C_RequestMemoryRead+0x44>
 800b254:	00010002 	.word	0x00010002

0800b258 <HAL_I2C_Init>:
{
 800b258:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 800b25a:	4604      	mov	r4, r0
 800b25c:	b908      	cbnz	r0, 800b262 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 800b25e:	2001      	movs	r0, #1
}
 800b260:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800b262:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800b266:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b26a:	b91b      	cbnz	r3, 800b274 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 800b26c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 800b270:	f7f7 f92e 	bl	80024d0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b274:	2324      	movs	r3, #36	; 0x24
 800b276:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b27a:	6823      	ldr	r3, [r4, #0]
 800b27c:	681a      	ldr	r2, [r3, #0]
 800b27e:	f022 0201 	bic.w	r2, r2, #1
 800b282:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800b284:	681a      	ldr	r2, [r3, #0]
 800b286:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800b28a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 800b28c:	681a      	ldr	r2, [r3, #0]
 800b28e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800b292:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800b294:	f001 f814 	bl	800c2c0 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 800b298:	4b3f      	ldr	r3, [pc, #252]	; (800b398 <HAL_I2C_Init+0x140>)
 800b29a:	6865      	ldr	r5, [r4, #4]
 800b29c:	429d      	cmp	r5, r3
 800b29e:	bf94      	ite	ls
 800b2a0:	4b3e      	ldrls	r3, [pc, #248]	; (800b39c <HAL_I2C_Init+0x144>)
 800b2a2:	4b3f      	ldrhi	r3, [pc, #252]	; (800b3a0 <HAL_I2C_Init+0x148>)
 800b2a4:	4298      	cmp	r0, r3
 800b2a6:	bf8c      	ite	hi
 800b2a8:	2300      	movhi	r3, #0
 800b2aa:	2301      	movls	r3, #1
 800b2ac:	2b00      	cmp	r3, #0
 800b2ae:	d1d6      	bne.n	800b25e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2b0:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b2b2:	4e39      	ldr	r6, [pc, #228]	; (800b398 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2b4:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800b2b6:	493b      	ldr	r1, [pc, #236]	; (800b3a4 <HAL_I2C_Init+0x14c>)
 800b2b8:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2bc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b2c0:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b2c2:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800b2c4:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800b2c6:	bf88      	it	hi
 800b2c8:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 800b2cc:	6a13      	ldr	r3, [r2, #32]
 800b2ce:	bf88      	it	hi
 800b2d0:	4371      	mulhi	r1, r6
 800b2d2:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800b2d6:	bf84      	itt	hi
 800b2d8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 800b2dc:	fbb1 f1f6 	udivhi	r1, r1, r6
 800b2e0:	3101      	adds	r1, #1
 800b2e2:	4319      	orrs	r1, r3
 800b2e4:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b2e6:	69d1      	ldr	r1, [r2, #28]
 800b2e8:	1e43      	subs	r3, r0, #1
 800b2ea:	482b      	ldr	r0, [pc, #172]	; (800b398 <HAL_I2C_Init+0x140>)
 800b2ec:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 800b2f0:	4285      	cmp	r5, r0
 800b2f2:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b2f6:	d832      	bhi.n	800b35e <HAL_I2C_Init+0x106>
 800b2f8:	006d      	lsls	r5, r5, #1
 800b2fa:	f640 70fc 	movw	r0, #4092	; 0xffc
 800b2fe:	fbb3 f3f5 	udiv	r3, r3, r5
 800b302:	3301      	adds	r3, #1
 800b304:	4203      	tst	r3, r0
 800b306:	d042      	beq.n	800b38e <HAL_I2C_Init+0x136>
 800b308:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b30c:	430b      	orrs	r3, r1
 800b30e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800b310:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 800b314:	6811      	ldr	r1, [r2, #0]
 800b316:	4303      	orrs	r3, r0
 800b318:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 800b31c:	430b      	orrs	r3, r1
 800b31e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 800b320:	6891      	ldr	r1, [r2, #8]
 800b322:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800b326:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 800b32a:	4303      	orrs	r3, r0
 800b32c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b330:	430b      	orrs	r3, r1
 800b332:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800b334:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 800b338:	68d1      	ldr	r1, [r2, #12]
 800b33a:	4303      	orrs	r3, r0
 800b33c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 800b340:	430b      	orrs	r3, r1
 800b342:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800b344:	6813      	ldr	r3, [r2, #0]
 800b346:	f043 0301 	orr.w	r3, r3, #1
 800b34a:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b34c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 800b34e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b350:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800b352:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b356:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800b358:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 800b35c:	e780      	b.n	800b260 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 800b35e:	68a0      	ldr	r0, [r4, #8]
 800b360:	b950      	cbnz	r0, 800b378 <HAL_I2C_Init+0x120>
 800b362:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800b366:	fbb3 f3f5 	udiv	r3, r3, r5
 800b36a:	3301      	adds	r3, #1
 800b36c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b370:	b17b      	cbz	r3, 800b392 <HAL_I2C_Init+0x13a>
 800b372:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800b376:	e7c9      	b.n	800b30c <HAL_I2C_Init+0xb4>
 800b378:	2019      	movs	r0, #25
 800b37a:	4345      	muls	r5, r0
 800b37c:	fbb3 f3f5 	udiv	r3, r3, r5
 800b380:	3301      	adds	r3, #1
 800b382:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800b386:	b123      	cbz	r3, 800b392 <HAL_I2C_Init+0x13a>
 800b388:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800b38c:	e7be      	b.n	800b30c <HAL_I2C_Init+0xb4>
 800b38e:	2304      	movs	r3, #4
 800b390:	e7bc      	b.n	800b30c <HAL_I2C_Init+0xb4>
 800b392:	2301      	movs	r3, #1
 800b394:	e7ba      	b.n	800b30c <HAL_I2C_Init+0xb4>
 800b396:	bf00      	nop
 800b398:	000186a0 	.word	0x000186a0
 800b39c:	001e847f 	.word	0x001e847f
 800b3a0:	003d08ff 	.word	0x003d08ff
 800b3a4:	000f4240 	.word	0x000f4240

0800b3a8 <HAL_I2C_DeInit>:
{
 800b3a8:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 800b3aa:	4604      	mov	r4, r0
 800b3ac:	b198      	cbz	r0, 800b3d6 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 800b3ae:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 800b3b0:	2324      	movs	r3, #36	; 0x24
 800b3b2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800b3b6:	6813      	ldr	r3, [r2, #0]
 800b3b8:	f023 0301 	bic.w	r3, r3, #1
 800b3bc:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 800b3be:	f7f7 f8cb 	bl	8002558 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 800b3c2:	2000      	movs	r0, #0
 800b3c4:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 800b3c6:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 800b3ca:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800b3ce:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 800b3d0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 800b3d4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800b3d6:	2001      	movs	r0, #1
 800b3d8:	e7fc      	b.n	800b3d4 <HAL_I2C_DeInit+0x2c>
	...

0800b3dc <HAL_I2C_Mem_Write>:
{
 800b3dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800b3e0:	4604      	mov	r4, r0
 800b3e2:	4699      	mov	r9, r3
 800b3e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800b3e6:	460f      	mov	r7, r1
 800b3e8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b3ea:	f7fe fd5b 	bl	8009ea4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b3ee:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b3f2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b3f4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b3f6:	d003      	beq.n	800b400 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 800b3f8:	2002      	movs	r0, #2
}
 800b3fa:	b003      	add	sp, #12
 800b3fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b400:	9000      	str	r0, [sp, #0]
 800b402:	493c      	ldr	r1, [pc, #240]	; (800b4f4 <HAL_I2C_Mem_Write+0x118>)
 800b404:	2319      	movs	r3, #25
 800b406:	2201      	movs	r2, #1
 800b408:	4620      	mov	r0, r4
 800b40a:	f7ff fd63 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b40e:	2800      	cmp	r0, #0
 800b410:	d1f2      	bne.n	800b3f8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 800b412:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b416:	2b01      	cmp	r3, #1
 800b418:	d0ee      	beq.n	800b3f8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b41a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b41c:	2301      	movs	r3, #1
 800b41e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b422:	6803      	ldr	r3, [r0, #0]
 800b424:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b426:	bf5e      	ittt	pl
 800b428:	6803      	ldrpl	r3, [r0, #0]
 800b42a:	f043 0301 	orrpl.w	r3, r3, #1
 800b42e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b430:	6803      	ldr	r3, [r0, #0]
 800b432:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b436:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 800b438:	2321      	movs	r3, #33	; 0x21
 800b43a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b43e:	2340      	movs	r3, #64	; 0x40
 800b440:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b444:	2300      	movs	r3, #0
 800b446:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b44a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b44c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 800b450:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b452:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b454:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b456:	4b28      	ldr	r3, [pc, #160]	; (800b4f8 <HAL_I2C_Mem_Write+0x11c>)
 800b458:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b45a:	e9cd 6500 	strd	r6, r5, [sp]
 800b45e:	464b      	mov	r3, r9
 800b460:	4642      	mov	r2, r8
 800b462:	4639      	mov	r1, r7
 800b464:	4620      	mov	r0, r4
 800b466:	f7ff fe1d 	bl	800b0a4 <I2C_RequestMemoryWrite>
 800b46a:	2800      	cmp	r0, #0
 800b46c:	d02a      	beq.n	800b4c4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800b46e:	2001      	movs	r0, #1
 800b470:	e7c3      	b.n	800b3fa <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b472:	f7ff fdf1 	bl	800b058 <I2C_WaitOnTXEFlagUntilTimeout>
 800b476:	b140      	cbz	r0, 800b48a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800b478:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b47a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b47c:	bf01      	itttt	eq
 800b47e:	6822      	ldreq	r2, [r4, #0]
 800b480:	6813      	ldreq	r3, [r2, #0]
 800b482:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800b486:	6013      	streq	r3, [r2, #0]
 800b488:	e7f1      	b.n	800b46e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b48a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b48c:	6827      	ldr	r7, [r4, #0]
 800b48e:	461a      	mov	r2, r3
 800b490:	f812 1b01 	ldrb.w	r1, [r2], #1
 800b494:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800b496:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 800b498:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 800b49a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 800b49c:	3a01      	subs	r2, #1
 800b49e:	b292      	uxth	r2, r2
 800b4a0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b4a2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800b4a4:	1e48      	subs	r0, r1, #1
 800b4a6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b4a8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 800b4aa:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800b4ac:	d50a      	bpl.n	800b4c4 <HAL_I2C_Mem_Write+0xe8>
 800b4ae:	b148      	cbz	r0, 800b4c4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 800b4b0:	785a      	ldrb	r2, [r3, #1]
 800b4b2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800b4b4:	3302      	adds	r3, #2
 800b4b6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 800b4b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b4ba:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 800b4bc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 800b4be:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 800b4c0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b4c2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 800b4c4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b4c6:	462a      	mov	r2, r5
 800b4c8:	4631      	mov	r1, r6
 800b4ca:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 800b4cc:	2b00      	cmp	r3, #0
 800b4ce:	d1d0      	bne.n	800b472 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b4d0:	f7ff fd9c 	bl	800b00c <I2C_WaitOnBTFFlagUntilTimeout>
 800b4d4:	2800      	cmp	r0, #0
 800b4d6:	d1cf      	bne.n	800b478 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b4d8:	6822      	ldr	r2, [r4, #0]
 800b4da:	6813      	ldr	r3, [r2, #0]
 800b4dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800b4e0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 800b4e2:	2320      	movs	r3, #32
 800b4e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b4e8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b4ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 800b4f0:	e783      	b.n	800b3fa <HAL_I2C_Mem_Write+0x1e>
 800b4f2:	bf00      	nop
 800b4f4:	00100002 	.word	0x00100002
 800b4f8:	ffff0000 	.word	0xffff0000

0800b4fc <HAL_I2C_Mem_Read>:
{
 800b4fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b500:	4604      	mov	r4, r0
 800b502:	b087      	sub	sp, #28
 800b504:	4699      	mov	r9, r3
 800b506:	9f10      	ldr	r7, [sp, #64]	; 0x40
 800b508:	460d      	mov	r5, r1
 800b50a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800b50c:	f7fe fcca 	bl	8009ea4 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b510:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 800b514:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 800b516:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 800b518:	d004      	beq.n	800b524 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800b51a:	2502      	movs	r5, #2
}
 800b51c:	4628      	mov	r0, r5
 800b51e:	b007      	add	sp, #28
 800b520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 800b524:	9000      	str	r0, [sp, #0]
 800b526:	4976      	ldr	r1, [pc, #472]	; (800b700 <HAL_I2C_Mem_Read+0x204>)
 800b528:	2319      	movs	r3, #25
 800b52a:	2201      	movs	r2, #1
 800b52c:	4620      	mov	r0, r4
 800b52e:	f7ff fcd1 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b532:	2800      	cmp	r0, #0
 800b534:	d1f1      	bne.n	800b51a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 800b536:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800b53a:	2b01      	cmp	r3, #1
 800b53c:	d0ed      	beq.n	800b51a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b53e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800b540:	2301      	movs	r3, #1
 800b542:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800b546:	6803      	ldr	r3, [r0, #0]
 800b548:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800b54a:	bf5e      	ittt	pl
 800b54c:	6803      	ldrpl	r3, [r0, #0]
 800b54e:	f043 0301 	orrpl.w	r3, r3, #1
 800b552:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b554:	6803      	ldr	r3, [r0, #0]
 800b556:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b55a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800b55c:	2322      	movs	r3, #34	; 0x22
 800b55e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800b562:	2340      	movs	r3, #64	; 0x40
 800b564:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800b568:	2300      	movs	r3, #0
 800b56a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800b56c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b56e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800b570:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b574:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800b576:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b578:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800b57a:	4b62      	ldr	r3, [pc, #392]	; (800b704 <HAL_I2C_Mem_Read+0x208>)
 800b57c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800b57e:	4629      	mov	r1, r5
 800b580:	e9cd 7600 	strd	r7, r6, [sp]
 800b584:	464b      	mov	r3, r9
 800b586:	4642      	mov	r2, r8
 800b588:	4620      	mov	r0, r4
 800b58a:	f7ff fde3 	bl	800b154 <I2C_RequestMemoryRead>
 800b58e:	4605      	mov	r5, r0
 800b590:	b108      	cbz	r0, 800b596 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 800b592:	2501      	movs	r5, #1
 800b594:	e7c2      	b.n	800b51c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 800b596:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b598:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 800b59a:	b9b2      	cbnz	r2, 800b5ca <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b59c:	9002      	str	r0, [sp, #8]
 800b59e:	695a      	ldr	r2, [r3, #20]
 800b5a0:	9202      	str	r2, [sp, #8]
 800b5a2:	699a      	ldr	r2, [r3, #24]
 800b5a4:	9202      	str	r2, [sp, #8]
 800b5a6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b5a8:	681a      	ldr	r2, [r3, #0]
 800b5aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b5ae:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b5b0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 800b708 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 800b5b4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b5b6:	2b00      	cmp	r3, #0
 800b5b8:	d12c      	bne.n	800b614 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 800b5ba:	2220      	movs	r2, #32
 800b5bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 800b5c0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800b5c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 800b5c8:	e7a8      	b.n	800b51c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 800b5ca:	2a01      	cmp	r2, #1
 800b5cc:	d10a      	bne.n	800b5e4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5ce:	681a      	ldr	r2, [r3, #0]
 800b5d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5d4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5d6:	9003      	str	r0, [sp, #12]
 800b5d8:	695a      	ldr	r2, [r3, #20]
 800b5da:	9203      	str	r2, [sp, #12]
 800b5dc:	699a      	ldr	r2, [r3, #24]
 800b5de:	9203      	str	r2, [sp, #12]
 800b5e0:	9a03      	ldr	r2, [sp, #12]
 800b5e2:	e7e1      	b.n	800b5a8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 800b5e4:	2a02      	cmp	r2, #2
 800b5e6:	d10e      	bne.n	800b606 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b5e8:	681a      	ldr	r2, [r3, #0]
 800b5ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b5ee:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 800b5f0:	681a      	ldr	r2, [r3, #0]
 800b5f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800b5f6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b5f8:	9004      	str	r0, [sp, #16]
 800b5fa:	695a      	ldr	r2, [r3, #20]
 800b5fc:	9204      	str	r2, [sp, #16]
 800b5fe:	699b      	ldr	r3, [r3, #24]
 800b600:	9304      	str	r3, [sp, #16]
 800b602:	9b04      	ldr	r3, [sp, #16]
 800b604:	e7d4      	b.n	800b5b0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800b606:	9005      	str	r0, [sp, #20]
 800b608:	695a      	ldr	r2, [r3, #20]
 800b60a:	9205      	str	r2, [sp, #20]
 800b60c:	699b      	ldr	r3, [r3, #24]
 800b60e:	9305      	str	r3, [sp, #20]
 800b610:	9b05      	ldr	r3, [sp, #20]
 800b612:	e7cd      	b.n	800b5b0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 800b614:	2b03      	cmp	r3, #3
 800b616:	d856      	bhi.n	800b6c6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 800b618:	2b01      	cmp	r3, #1
 800b61a:	d115      	bne.n	800b648 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b61c:	4632      	mov	r2, r6
 800b61e:	4639      	mov	r1, r7
 800b620:	4620      	mov	r0, r4
 800b622:	f7ff fcc4 	bl	800afae <I2C_WaitOnRXNEFlagUntilTimeout>
 800b626:	2800      	cmp	r0, #0
 800b628:	d1b3      	bne.n	800b592 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b62a:	6823      	ldr	r3, [r4, #0]
 800b62c:	691a      	ldr	r2, [r3, #16]
 800b62e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b630:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b632:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b634:	3301      	adds	r3, #1
 800b636:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b638:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b63a:	3b01      	subs	r3, #1
 800b63c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b63e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b640:	3b01      	subs	r3, #1
 800b642:	b29b      	uxth	r3, r3
 800b644:	8563      	strh	r3, [r4, #42]	; 0x2a
 800b646:	e7b5      	b.n	800b5b4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 800b648:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b64a:	9600      	str	r6, [sp, #0]
 800b64c:	463b      	mov	r3, r7
 800b64e:	f04f 0200 	mov.w	r2, #0
 800b652:	4641      	mov	r1, r8
 800b654:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 800b656:	d119      	bne.n	800b68c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b658:	f7ff fc3c 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b65c:	2800      	cmp	r0, #0
 800b65e:	d198      	bne.n	800b592 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800b660:	6823      	ldr	r3, [r4, #0]
 800b662:	681a      	ldr	r2, [r3, #0]
 800b664:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800b668:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b66a:	691a      	ldr	r2, [r3, #16]
 800b66c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b66e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b670:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b672:	1c53      	adds	r3, r2, #1
 800b674:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b676:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b678:	3b01      	subs	r3, #1
 800b67a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b67c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b67e:	3b01      	subs	r3, #1
 800b680:	b29b      	uxth	r3, r3
 800b682:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b684:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b686:	691b      	ldr	r3, [r3, #16]
 800b688:	7053      	strb	r3, [r2, #1]
 800b68a:	e7d2      	b.n	800b632 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b68c:	f7ff fc22 	bl	800aed4 <I2C_WaitOnFlagUntilTimeout>
 800b690:	2800      	cmp	r0, #0
 800b692:	f47f af7e 	bne.w	800b592 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800b696:	6823      	ldr	r3, [r4, #0]
 800b698:	681a      	ldr	r2, [r3, #0]
 800b69a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800b69e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6a0:	691a      	ldr	r2, [r3, #16]
 800b6a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b6a4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 800b6a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b6a8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 800b6aa:	3301      	adds	r3, #1
 800b6ac:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 800b6ae:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b6b0:	3b01      	subs	r3, #1
 800b6b2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800b6b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b6b6:	3b01      	subs	r3, #1
 800b6b8:	b29b      	uxth	r3, r3
 800b6ba:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800b6bc:	4602      	mov	r2, r0
 800b6be:	463b      	mov	r3, r7
 800b6c0:	4641      	mov	r1, r8
 800b6c2:	4620      	mov	r0, r4
 800b6c4:	e7c8      	b.n	800b658 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800b6c6:	4632      	mov	r2, r6
 800b6c8:	4639      	mov	r1, r7
 800b6ca:	4620      	mov	r0, r4
 800b6cc:	f7ff fc6f 	bl	800afae <I2C_WaitOnRXNEFlagUntilTimeout>
 800b6d0:	2800      	cmp	r0, #0
 800b6d2:	f47f af5e 	bne.w	800b592 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800b6d6:	6823      	ldr	r3, [r4, #0]
 800b6d8:	691a      	ldr	r2, [r3, #16]
 800b6da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800b6dc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 800b6de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800b6e0:	1c53      	adds	r3, r2, #1
 800b6e2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 800b6e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b6e6:	3b01      	subs	r3, #1
 800b6e8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800b6ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800b6ec:	3b01      	subs	r3, #1
 800b6ee:	b29b      	uxth	r3, r3
 800b6f0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 800b6f2:	6823      	ldr	r3, [r4, #0]
 800b6f4:	6959      	ldr	r1, [r3, #20]
 800b6f6:	0749      	lsls	r1, r1, #29
 800b6f8:	f57f af5c 	bpl.w	800b5b4 <HAL_I2C_Mem_Read+0xb8>
 800b6fc:	e7c3      	b.n	800b686 <HAL_I2C_Mem_Read+0x18a>
 800b6fe:	bf00      	nop
 800b700:	00100002 	.word	0x00100002
 800b704:	ffff0000 	.word	0xffff0000
 800b708:	00010004 	.word	0x00010004

0800b70c <HAL_I2C_GetState>:
  return hi2c->State;
 800b70c:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 800b710:	4770      	bx	lr

0800b712 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b712:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b714:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b718:	01d2      	lsls	r2, r2, #7
 800b71a:	3284      	adds	r2, #132	; 0x84
 800b71c:	1883      	adds	r3, r0, r2
{
 800b71e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b722:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b724:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b726:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800b728:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800b72c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b730:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b732:	68c5      	ldr	r5, [r0, #12]
 800b734:	f10c 0701 	add.w	r7, ip, #1
 800b738:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b73c:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b740:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 800b742:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800b744:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800b748:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800b74a:	68c5      	ldr	r5, [r0, #12]
 800b74c:	68ce      	ldr	r6, [r1, #12]
 800b74e:	f3c5 050a 	ubfx	r5, r5, #0, #11
 800b752:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800b754:	689d      	ldr	r5, [r3, #8]
 800b756:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 800b75a:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800b75c:	68c7      	ldr	r7, [r0, #12]
 800b75e:	688d      	ldr	r5, [r1, #8]
 800b760:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800b764:	3501      	adds	r5, #1
 800b766:	443d      	add	r5, r7
 800b768:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800b76c:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b76e:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b770:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800b772:	f025 0507 	bic.w	r5, r5, #7
 800b776:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b778:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800b77c:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b77e:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 800b780:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800b784:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800b788:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800b78c:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 800b790:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800b794:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800b798:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 800b79c:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800b79e:	695d      	ldr	r5, [r3, #20]
 800b7a0:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800b7a4:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800b7a6:	694d      	ldr	r5, [r1, #20]
 800b7a8:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800b7aa:	69dd      	ldr	r5, [r3, #28]
 800b7ac:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 800b7b0:	f025 0507 	bic.w	r5, r5, #7
 800b7b4:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800b7b6:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 800b7ba:	433d      	orrs	r5, r7
 800b7bc:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b7be:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b7c0:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 800b7c2:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800b7c6:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800b7c8:	b31e      	cbz	r6, 800b812 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800b7ca:	2e01      	cmp	r6, #1
 800b7cc:	d023      	beq.n	800b816 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800b7ce:	1eb5      	subs	r5, r6, #2
 800b7d0:	2d02      	cmp	r5, #2
 800b7d2:	d922      	bls.n	800b81a <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800b7d4:	2e07      	cmp	r6, #7
 800b7d6:	bf0c      	ite	eq
 800b7d8:	2502      	moveq	r5, #2
 800b7da:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 800b7dc:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 800b7de:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 800b7e2:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7e4:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7e8:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b7ea:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7ec:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7ee:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800b7f0:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800b7f2:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800b7f6:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800b7f8:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 800b7fa:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 800b7fe:	f024 0407 	bic.w	r4, r4, #7
 800b802:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800b804:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800b806:	5883      	ldr	r3, [r0, r2]
 800b808:	f043 0301 	orr.w	r3, r3, #1
 800b80c:	5083      	str	r3, [r0, r2]
}
 800b80e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 800b812:	2504      	movs	r5, #4
 800b814:	e7e2      	b.n	800b7dc <LTDC_SetConfig+0xca>
    tmp = 3U;
 800b816:	2503      	movs	r5, #3
 800b818:	e7e0      	b.n	800b7dc <LTDC_SetConfig+0xca>
    tmp = 2U;
 800b81a:	2502      	movs	r5, #2
 800b81c:	e7de      	b.n	800b7dc <LTDC_SetConfig+0xca>
	...

0800b820 <HAL_LTDC_Init>:
{
 800b820:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 800b822:	4604      	mov	r4, r0
 800b824:	2800      	cmp	r0, #0
 800b826:	d063      	beq.n	800b8f0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 800b828:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800b82c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800b830:	b91b      	cbnz	r3, 800b83a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 800b832:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800b836:	f7f6 fead 	bl	8002594 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b83a:	2302      	movs	r3, #2
 800b83c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 800b840:	6823      	ldr	r3, [r4, #0]
 800b842:	699a      	ldr	r2, [r3, #24]
 800b844:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800b848:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b84a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800b84e:	4302      	orrs	r2, r0
 800b850:	68e0      	ldr	r0, [r4, #12]
 800b852:	6999      	ldr	r1, [r3, #24]
 800b854:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800b856:	6920      	ldr	r0, [r4, #16]
 800b858:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800b85a:	430a      	orrs	r2, r1
 800b85c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b85e:	689a      	ldr	r2, [r3, #8]
 800b860:	4924      	ldr	r1, [pc, #144]	; (800b8f4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 800b862:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800b864:	400a      	ands	r2, r1
 800b866:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800b868:	689a      	ldr	r2, [r3, #8]
 800b86a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b86e:	69a0      	ldr	r0, [r4, #24]
 800b870:	4302      	orrs	r2, r0
 800b872:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b874:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800b876:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800b878:	400a      	ands	r2, r1
 800b87a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800b87c:	68da      	ldr	r2, [r3, #12]
 800b87e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b882:	6a20      	ldr	r0, [r4, #32]
 800b884:	4302      	orrs	r2, r0
 800b886:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b888:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800b88a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800b88c:	400a      	ands	r2, r1
 800b88e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800b890:	691a      	ldr	r2, [r3, #16]
 800b892:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b896:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800b898:	4302      	orrs	r2, r0
 800b89a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800b89c:	695a      	ldr	r2, [r3, #20]
 800b89e:	4011      	ands	r1, r2
 800b8a0:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b8a2:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 800b8a4:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800b8a6:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800b8aa:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800b8ac:	430a      	orrs	r2, r1
 800b8ae:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b8b0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 800b8b2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800b8b6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800b8ba:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800b8be:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 800b8c0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800b8c2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800b8c6:	430a      	orrs	r2, r1
 800b8c8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800b8cc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800b8d0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 800b8d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b8d4:	f042 0206 	orr.w	r2, r2, #6
 800b8d8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800b8da:	699a      	ldr	r2, [r3, #24]
 800b8dc:	f042 0201 	orr.w	r2, r2, #1
 800b8e0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b8e2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 800b8e4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800b8e6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800b8ea:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800b8ee:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800b8f0:	2001      	movs	r0, #1
 800b8f2:	e7fc      	b.n	800b8ee <HAL_LTDC_Init+0xce>
 800b8f4:	f000f800 	.word	0xf000f800

0800b8f8 <HAL_LTDC_ErrorCallback>:
 800b8f8:	4770      	bx	lr

0800b8fa <HAL_LTDC_LineEventCallback>:
 800b8fa:	4770      	bx	lr

0800b8fc <HAL_LTDC_ReloadEventCallback>:
 800b8fc:	4770      	bx	lr

0800b8fe <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b8fe:	6803      	ldr	r3, [r0, #0]
{
 800b900:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800b902:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 800b904:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b906:	0772      	lsls	r2, r6, #29
{
 800b908:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800b90a:	d514      	bpl.n	800b936 <HAL_LTDC_IRQHandler+0x38>
 800b90c:	0769      	lsls	r1, r5, #29
 800b90e:	d512      	bpl.n	800b936 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800b910:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b912:	f022 0204 	bic.w	r2, r2, #4
 800b916:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800b918:	2204      	movs	r2, #4
 800b91a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800b91c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b920:	f043 0301 	orr.w	r3, r3, #1
 800b924:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 800b928:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b92a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b92e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b932:	f7ff ffe1 	bl	800b8f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800b936:	07b2      	lsls	r2, r6, #30
 800b938:	d516      	bpl.n	800b968 <HAL_LTDC_IRQHandler+0x6a>
 800b93a:	07ab      	lsls	r3, r5, #30
 800b93c:	d514      	bpl.n	800b968 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800b93e:	6823      	ldr	r3, [r4, #0]
 800b940:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b942:	f022 0202 	bic.w	r2, r2, #2
 800b946:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800b948:	2202      	movs	r2, #2
 800b94a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800b94c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 800b950:	4313      	orrs	r3, r2
 800b952:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800b956:	2304      	movs	r3, #4
 800b958:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b95c:	2300      	movs	r3, #0
 800b95e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 800b962:	4620      	mov	r0, r4
 800b964:	f7ff ffc8 	bl	800b8f8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800b968:	07f0      	lsls	r0, r6, #31
 800b96a:	d510      	bpl.n	800b98e <HAL_LTDC_IRQHandler+0x90>
 800b96c:	07e9      	lsls	r1, r5, #31
 800b96e:	d50e      	bpl.n	800b98e <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800b970:	6823      	ldr	r3, [r4, #0]
 800b972:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b974:	f022 0201 	bic.w	r2, r2, #1
 800b978:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800b97a:	2201      	movs	r2, #1
 800b97c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800b97e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800b980:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b984:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800b988:	4620      	mov	r0, r4
 800b98a:	f7ff ffb6 	bl	800b8fa <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800b98e:	0732      	lsls	r2, r6, #28
 800b990:	d511      	bpl.n	800b9b6 <HAL_LTDC_IRQHandler+0xb8>
 800b992:	072b      	lsls	r3, r5, #28
 800b994:	d50f      	bpl.n	800b9b6 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 800b996:	6823      	ldr	r3, [r4, #0]
 800b998:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800b99a:	f022 0208 	bic.w	r2, r2, #8
 800b99e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800b9a0:	2208      	movs	r2, #8
 800b9a2:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 800b9a4:	2301      	movs	r3, #1
 800b9a6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800b9aa:	2300      	movs	r3, #0
 800b9ac:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800b9b0:	4620      	mov	r0, r4
 800b9b2:	f7ff ffa3 	bl	800b8fc <HAL_LTDC_ReloadEventCallback>
}
 800b9b6:	bd70      	pop	{r4, r5, r6, pc}

0800b9b8 <HAL_LTDC_ConfigLayer>:
{
 800b9b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800b9bc:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800b9c0:	2b01      	cmp	r3, #1
{
 800b9c2:	4606      	mov	r6, r0
 800b9c4:	460f      	mov	r7, r1
 800b9c6:	4694      	mov	ip, r2
 800b9c8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800b9cc:	d01f      	beq.n	800ba0e <HAL_LTDC_ConfigLayer+0x56>
 800b9ce:	f04f 0801 	mov.w	r8, #1
 800b9d2:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800b9d6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800b9da:	2434      	movs	r4, #52	; 0x34
 800b9dc:	460d      	mov	r5, r1
 800b9de:	fb04 6402 	mla	r4, r4, r2, r6
 800b9e2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9e4:	3438      	adds	r4, #56	; 0x38
 800b9e6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9ea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b9ee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800b9f0:	682b      	ldr	r3, [r5, #0]
 800b9f2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 800b9f4:	4630      	mov	r0, r6
 800b9f6:	4662      	mov	r2, ip
 800b9f8:	4639      	mov	r1, r7
 800b9fa:	f7ff fe8a 	bl	800b712 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800b9fe:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800ba00:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800ba02:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 800ba06:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ba0a:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 800ba0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800ba14 <HAL_LTDC_SetPitch>:
{
 800ba14:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 800ba16:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800ba1a:	2b01      	cmp	r3, #1
 800ba1c:	f04f 0302 	mov.w	r3, #2
 800ba20:	d02c      	beq.n	800ba7c <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ba22:	2434      	movs	r4, #52	; 0x34
 800ba24:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800ba28:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800ba2c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800ba2e:	b33c      	cbz	r4, 800ba80 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800ba30:	2c01      	cmp	r4, #1
 800ba32:	d027      	beq.n	800ba84 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800ba34:	1ea5      	subs	r5, r4, #2
 800ba36:	429d      	cmp	r5, r3
 800ba38:	d902      	bls.n	800ba40 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800ba3a:	2c07      	cmp	r4, #7
 800ba3c:	bf18      	it	ne
 800ba3e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ba40:	6804      	ldr	r4, [r0, #0]
 800ba42:	01d2      	lsls	r2, r2, #7
 800ba44:	3284      	adds	r2, #132	; 0x84
 800ba46:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 800ba48:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800ba4a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800ba4c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 800ba50:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 800ba54:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ba56:	4c0c      	ldr	r4, [pc, #48]	; (800ba88 <HAL_LTDC_SetPitch+0x74>)
 800ba58:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800ba5a:	f045 0501 	orr.w	r5, r5, #1
 800ba5e:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 800ba60:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 800ba62:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 800ba66:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 800ba68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ba6a:	f043 0301 	orr.w	r3, r3, #1
 800ba6e:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 800ba70:	2301      	movs	r3, #1
 800ba72:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800ba76:	2300      	movs	r3, #0
 800ba78:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800ba7c:	4618      	mov	r0, r3
 800ba7e:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 800ba80:	2304      	movs	r3, #4
 800ba82:	e7dd      	b.n	800ba40 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 800ba84:	2303      	movs	r3, #3
 800ba86:	e7db      	b.n	800ba40 <HAL_LTDC_SetPitch+0x2c>
 800ba88:	40016800 	.word	0x40016800

0800ba8c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800ba8c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800ba8e:	2300      	movs	r3, #0
 800ba90:	9301      	str	r3, [sp, #4]
 800ba92:	4b18      	ldr	r3, [pc, #96]	; (800baf4 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800ba94:	4d18      	ldr	r5, [pc, #96]	; (800baf8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 800ba96:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800ba98:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800ba9c:	641a      	str	r2, [r3, #64]	; 0x40
 800ba9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800baa0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800baa4:	9301      	str	r3, [sp, #4]
 800baa6:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 800baa8:	4b14      	ldr	r3, [pc, #80]	; (800bafc <HAL_PWREx_EnableOverDrive+0x70>)
 800baaa:	2201      	movs	r2, #1
 800baac:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 800baae:	f7fe f9f9 	bl	8009ea4 <HAL_GetTick>
 800bab2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800bab4:	686b      	ldr	r3, [r5, #4]
 800bab6:	03da      	lsls	r2, r3, #15
 800bab8:	d50b      	bpl.n	800bad2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800baba:	4b10      	ldr	r3, [pc, #64]	; (800bafc <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800babc:	4d0e      	ldr	r5, [pc, #56]	; (800baf8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 800babe:	2201      	movs	r2, #1
 800bac0:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 800bac2:	f7fe f9ef 	bl	8009ea4 <HAL_GetTick>
 800bac6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 800bac8:	686b      	ldr	r3, [r5, #4]
 800baca:	039b      	lsls	r3, r3, #14
 800bacc:	d50a      	bpl.n	800bae4 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 800bace:	2000      	movs	r0, #0
 800bad0:	e006      	b.n	800bae0 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800bad2:	f7fe f9e7 	bl	8009ea4 <HAL_GetTick>
 800bad6:	1b00      	subs	r0, r0, r4
 800bad8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800badc:	d9ea      	bls.n	800bab4 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 800bade:	2003      	movs	r0, #3
}
 800bae0:	b003      	add	sp, #12
 800bae2:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 800bae4:	f7fe f9de 	bl	8009ea4 <HAL_GetTick>
 800bae8:	1b00      	subs	r0, r0, r4
 800baea:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800baee:	d9eb      	bls.n	800bac8 <HAL_PWREx_EnableOverDrive+0x3c>
 800baf0:	e7f5      	b.n	800bade <HAL_PWREx_EnableOverDrive+0x52>
 800baf2:	bf00      	nop
 800baf4:	40023800 	.word	0x40023800
 800baf8:	40007000 	.word	0x40007000
 800bafc:	420e0000 	.word	0x420e0000

0800bb00 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 800bb00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 800bb04:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 800bb06:	b13e      	cbz	r6, 800bb18 <QSPI_Config+0x18>
 800bb08:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800bb0c:	bf1f      	itttt	ne
 800bb0e:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 800bb10:	6804      	ldrne	r4, [r0, #0]
 800bb12:	f103 33ff 	addne.w	r3, r3, #4294967295
 800bb16:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800bb18:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb1c:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800bb20:	f1b9 0f00 	cmp.w	r9, #0
 800bb24:	d04f      	beq.n	800bbc6 <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb26:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 800bb28:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb2a:	f8d1 a000 	ldr.w	sl, [r1]
 800bb2e:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 800bb32:	ea46 0909 	orr.w	r9, r6, r9
 800bb36:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 800bb3a:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 800bb3e:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800bb42:	b335      	cbz	r5, 800bb92 <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bb44:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb46:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bb48:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb4a:	ea49 0505 	orr.w	r5, r9, r5
 800bb4e:	b19f      	cbz	r7, 800bb78 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb50:	ea4a 0307 	orr.w	r3, sl, r7
 800bb54:	4323      	orrs	r3, r4
 800bb56:	ea43 0308 	orr.w	r3, r3, r8
 800bb5a:	68cc      	ldr	r4, [r1, #12]
 800bb5c:	ea43 030e 	orr.w	r3, r3, lr
 800bb60:	4333      	orrs	r3, r6
 800bb62:	4323      	orrs	r3, r4
 800bb64:	ea43 030c 	orr.w	r3, r3, ip
 800bb68:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bb6a:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb6e:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bb70:	d00d      	beq.n	800bb8e <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bb72:	684b      	ldr	r3, [r1, #4]
 800bb74:	6183      	str	r3, [r0, #24]
 800bb76:	e00a      	b.n	800bb8e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb78:	ea4a 0304 	orr.w	r3, sl, r4
 800bb7c:	ea43 0308 	orr.w	r3, r3, r8
 800bb80:	ea43 030e 	orr.w	r3, r3, lr
 800bb84:	4333      	orrs	r3, r6
 800bb86:	ea43 030c 	orr.w	r3, r3, ip
 800bb8a:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb8c:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800bb8e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bb92:	b16f      	cbz	r7, 800bbb0 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bb94:	ea4a 0307 	orr.w	r3, sl, r7
 800bb98:	4323      	orrs	r3, r4
 800bb9a:	ea43 0308 	orr.w	r3, r3, r8
 800bb9e:	68cc      	ldr	r4, [r1, #12]
 800bba0:	ea43 030e 	orr.w	r3, r3, lr
 800bba4:	4323      	orrs	r3, r4
 800bba6:	ea43 030c 	orr.w	r3, r3, ip
 800bbaa:	ea43 0309 	orr.w	r3, r3, r9
 800bbae:	e7dc      	b.n	800bb6a <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbb0:	ea4a 0304 	orr.w	r3, sl, r4
 800bbb4:	ea43 0308 	orr.w	r3, r3, r8
 800bbb8:	ea43 030e 	orr.w	r3, r3, lr
 800bbbc:	ea43 030c 	orr.w	r3, r3, ip
 800bbc0:	ea43 0309 	orr.w	r3, r3, r9
 800bbc4:	e7e2      	b.n	800bb8c <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800bbc6:	b345      	cbz	r5, 800bc1a <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800bbc8:	6804      	ldr	r4, [r0, #0]
 800bbca:	688b      	ldr	r3, [r1, #8]
 800bbcc:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bbce:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbd2:	694e      	ldr	r6, [r1, #20]
 800bbd4:	6908      	ldr	r0, [r1, #16]
 800bbd6:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 800bbda:	ea43 0502 	orr.w	r5, r3, r2
 800bbde:	04b6      	lsls	r6, r6, #18
 800bbe0:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bbe4:	b187      	cbz	r7, 800bc08 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbe6:	4338      	orrs	r0, r7
 800bbe8:	ea40 0008 	orr.w	r0, r0, r8
 800bbec:	4303      	orrs	r3, r0
 800bbee:	68c8      	ldr	r0, [r1, #12]
 800bbf0:	ea43 030c 	orr.w	r3, r3, ip
 800bbf4:	4303      	orrs	r3, r0
 800bbf6:	4333      	orrs	r3, r6
 800bbf8:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bbfa:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bbfe:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800bc00:	d0c5      	beq.n	800bb8e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800bc02:	684b      	ldr	r3, [r1, #4]
 800bc04:	61a3      	str	r3, [r4, #24]
 800bc06:	e7c2      	b.n	800bb8e <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bc08:	ea40 0008 	orr.w	r0, r0, r8
 800bc0c:	4303      	orrs	r3, r0
 800bc0e:	ea43 030c 	orr.w	r3, r3, ip
 800bc12:	4333      	orrs	r3, r6
 800bc14:	432b      	orrs	r3, r5
 800bc16:	6163      	str	r3, [r4, #20]
 800bc18:	e7b9      	b.n	800bb8e <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800bc1a:	b17f      	cbz	r7, 800bc3c <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bc1c:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 800bc1e:	6800      	ldr	r0, [r0, #0]
 800bc20:	ea46 0307 	orr.w	r3, r6, r7
 800bc24:	4313      	orrs	r3, r2
 800bc26:	4323      	orrs	r3, r4
 800bc28:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 800bc2a:	4323      	orrs	r3, r4
 800bc2c:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 800bc2e:	4323      	orrs	r3, r4
 800bc30:	68cc      	ldr	r4, [r1, #12]
 800bc32:	4323      	orrs	r3, r4
 800bc34:	694c      	ldr	r4, [r1, #20]
 800bc36:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 800bc3a:	e796      	b.n	800bb6a <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800bc3c:	2e00      	cmp	r6, #0
 800bc3e:	d0a6      	beq.n	800bb8e <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800bc40:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800bc42:	6800      	ldr	r0, [r0, #0]
 800bc44:	4333      	orrs	r3, r6
 800bc46:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800bc48:	431a      	orrs	r2, r3
 800bc4a:	4332      	orrs	r2, r6
 800bc4c:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 800bc4e:	694b      	ldr	r3, [r1, #20]
 800bc50:	4332      	orrs	r2, r6
 800bc52:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800bc56:	6142      	str	r2, [r0, #20]
}
 800bc58:	e799      	b.n	800bb8e <QSPI_Config+0x8e>

0800bc5a <QSPI_WaitFlagStateUntilTimeout>:
{
 800bc5a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bc5e:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800bc62:	4604      	mov	r4, r0
 800bc64:	460e      	mov	r6, r1
 800bc66:	4615      	mov	r5, r2
 800bc68:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800bc6a:	6822      	ldr	r2, [r4, #0]
 800bc6c:	6893      	ldr	r3, [r2, #8]
 800bc6e:	4233      	tst	r3, r6
 800bc70:	bf14      	ite	ne
 800bc72:	2301      	movne	r3, #1
 800bc74:	2300      	moveq	r3, #0
 800bc76:	42ab      	cmp	r3, r5
 800bc78:	d101      	bne.n	800bc7e <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800bc7a:	2000      	movs	r0, #0
 800bc7c:	e012      	b.n	800bca4 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 800bc7e:	f1b8 3fff 	cmp.w	r8, #4294967295
 800bc82:	d0f3      	beq.n	800bc6c <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bc84:	f7fe f90e 	bl	8009ea4 <HAL_GetTick>
 800bc88:	1bc0      	subs	r0, r0, r7
 800bc8a:	4540      	cmp	r0, r8
 800bc8c:	d802      	bhi.n	800bc94 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 800bc8e:	f1b8 0f00 	cmp.w	r8, #0
 800bc92:	d1ea      	bne.n	800bc6a <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800bc94:	2304      	movs	r3, #4
 800bc96:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800bc9a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800bc9c:	f043 0301 	orr.w	r3, r3, #1
 800bca0:	6463      	str	r3, [r4, #68]	; 0x44
 800bca2:	2001      	movs	r0, #1
}
 800bca4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bca8 <HAL_QSPI_Init>:
{
 800bca8:	b530      	push	{r4, r5, lr}
 800bcaa:	b085      	sub	sp, #20
 800bcac:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bcae:	f7fe f8f9 	bl	8009ea4 <HAL_GetTick>
 800bcb2:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800bcb4:	2c00      	cmp	r4, #0
 800bcb6:	d047      	beq.n	800bd48 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 800bcb8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bcbc:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 800bcc0:	b94a      	cbnz	r2, 800bcd6 <HAL_QSPI_Init+0x2e>
 800bcc2:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 800bcc4:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 800bcc8:	4620      	mov	r0, r4
 800bcca:	f7f6 fc95 	bl	80025f8 <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 800bcce:	f241 3288 	movw	r2, #5000	; 0x1388
 800bcd2:	9b03      	ldr	r3, [sp, #12]
 800bcd4:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 800bcd6:	6820      	ldr	r0, [r4, #0]
 800bcd8:	68a1      	ldr	r1, [r4, #8]
 800bcda:	6802      	ldr	r2, [r0, #0]
 800bcdc:	3901      	subs	r1, #1
 800bcde:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 800bce2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 800bce6:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bce8:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bcea:	9200      	str	r2, [sp, #0]
 800bcec:	2120      	movs	r1, #32
 800bcee:	2200      	movs	r2, #0
 800bcf0:	4620      	mov	r0, r4
 800bcf2:	f7ff ffb2 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 800bcf6:	bb10      	cbnz	r0, 800bd3e <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 800bcf8:	69e5      	ldr	r5, [r4, #28]
 800bcfa:	68e3      	ldr	r3, [r4, #12]
 800bcfc:	6822      	ldr	r2, [r4, #0]
 800bcfe:	432b      	orrs	r3, r5
 800bd00:	6a25      	ldr	r5, [r4, #32]
 800bd02:	6811      	ldr	r1, [r2, #0]
 800bd04:	432b      	orrs	r3, r5
 800bd06:	6865      	ldr	r5, [r4, #4]
 800bd08:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 800bd0c:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 800bd10:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 800bd14:	430b      	orrs	r3, r1
 800bd16:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800bd18:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 800bd1c:	430b      	orrs	r3, r1
 800bd1e:	6921      	ldr	r1, [r4, #16]
 800bd20:	6855      	ldr	r5, [r2, #4]
 800bd22:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800bd26:	4909      	ldr	r1, [pc, #36]	; (800bd4c <HAL_QSPI_Init+0xa4>)
 800bd28:	4029      	ands	r1, r5
 800bd2a:	430b      	orrs	r3, r1
 800bd2c:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 800bd2e:	6813      	ldr	r3, [r2, #0]
 800bd30:	f043 0301 	orr.w	r3, r3, #1
 800bd34:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800bd36:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd38:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800bd3a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd3e:	2300      	movs	r3, #0
 800bd40:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bd44:	b005      	add	sp, #20
 800bd46:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800bd48:	2001      	movs	r0, #1
 800bd4a:	e7fb      	b.n	800bd44 <HAL_QSPI_Init+0x9c>
 800bd4c:	ffe0f8fe 	.word	0xffe0f8fe

0800bd50 <HAL_QSPI_DeInit>:
{
 800bd50:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800bd52:	4604      	mov	r4, r0
 800bd54:	b168      	cbz	r0, 800bd72 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800bd56:	6802      	ldr	r2, [r0, #0]
 800bd58:	6813      	ldr	r3, [r2, #0]
 800bd5a:	f023 0301 	bic.w	r3, r3, #1
 800bd5e:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 800bd60:	f7f6 fca4 	bl	80026ac <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bd64:	2000      	movs	r0, #0
 800bd66:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800bd68:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bd6c:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 800bd70:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800bd72:	2001      	movs	r0, #1
 800bd74:	e7fc      	b.n	800bd70 <HAL_QSPI_DeInit+0x20>

0800bd76 <HAL_QSPI_Command>:
{
 800bd76:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd7a:	4604      	mov	r4, r0
 800bd7c:	b085      	sub	sp, #20
 800bd7e:	4617      	mov	r7, r2
 800bd80:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800bd82:	f7fe f88f 	bl	8009ea4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bd86:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800bd8a:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bd8c:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bd8e:	d034      	beq.n	800bdfa <HAL_QSPI_Command+0x84>
 800bd90:	2201      	movs	r2, #1
 800bd92:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bd96:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bd9a:	2a01      	cmp	r2, #1
 800bd9c:	fa5f f882 	uxtb.w	r8, r2
 800bda0:	f04f 0602 	mov.w	r6, #2
 800bda4:	d127      	bne.n	800bdf6 <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bda6:	2200      	movs	r2, #0
 800bda8:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bdaa:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 800bdac:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800bdb0:	9700      	str	r7, [sp, #0]
 800bdb2:	2120      	movs	r1, #32
 800bdb4:	4620      	mov	r0, r4
 800bdb6:	f7ff ff50 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bdba:	4605      	mov	r5, r0
 800bdbc:	b9a0      	cbnz	r0, 800bde8 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bdbe:	4602      	mov	r2, r0
 800bdc0:	4649      	mov	r1, r9
 800bdc2:	4620      	mov	r0, r4
 800bdc4:	f7ff fe9c 	bl	800bb00 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 800bdc8:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 800bdcc:	9b03      	ldr	r3, [sp, #12]
 800bdce:	b94a      	cbnz	r2, 800bde4 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800bdd0:	9700      	str	r7, [sp, #0]
 800bdd2:	4642      	mov	r2, r8
 800bdd4:	4631      	mov	r1, r6
 800bdd6:	4620      	mov	r0, r4
 800bdd8:	f7ff ff3f 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800bddc:	4605      	mov	r5, r0
 800bdde:	b918      	cbnz	r0, 800bde8 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bde0:	6823      	ldr	r3, [r4, #0]
 800bde2:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800bde4:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800bde8:	2300      	movs	r3, #0
 800bdea:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bdee:	4628      	mov	r0, r5
 800bdf0:	b005      	add	sp, #20
 800bdf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 800bdf6:	4635      	mov	r5, r6
 800bdf8:	e7f6      	b.n	800bde8 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 800bdfa:	2502      	movs	r5, #2
 800bdfc:	e7f7      	b.n	800bdee <HAL_QSPI_Command+0x78>

0800bdfe <HAL_QSPI_AutoPolling>:
{
 800bdfe:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800be02:	4604      	mov	r4, r0
 800be04:	4615      	mov	r5, r2
 800be06:	461e      	mov	r6, r3
 800be08:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800be0a:	f7fe f84b 	bl	8009ea4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800be0e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800be12:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800be14:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800be16:	d040      	beq.n	800be9a <HAL_QSPI_AutoPolling+0x9c>
 800be18:	2201      	movs	r2, #1
 800be1a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800be1e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800be22:	2a01      	cmp	r2, #1
 800be24:	b2d7      	uxtb	r7, r2
 800be26:	d136      	bne.n	800be96 <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800be28:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800be2a:	2200      	movs	r2, #0
 800be2c:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800be2e:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800be30:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800be34:	9600      	str	r6, [sp, #0]
 800be36:	2120      	movs	r1, #32
 800be38:	4620      	mov	r0, r4
 800be3a:	f7ff ff0e 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800be3e:	bb20      	cbnz	r0, 800be8a <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 800be40:	6821      	ldr	r1, [r4, #0]
 800be42:	682a      	ldr	r2, [r5, #0]
 800be44:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800be46:	686a      	ldr	r2, [r5, #4]
 800be48:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800be4a:	68aa      	ldr	r2, [r5, #8]
 800be4c:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 800be4e:	680a      	ldr	r2, [r1, #0]
 800be50:	6928      	ldr	r0, [r5, #16]
 800be52:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800be56:	4302      	orrs	r2, r0
 800be58:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 800be5c:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 800be5e:	68ea      	ldr	r2, [r5, #12]
 800be60:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800be64:	4641      	mov	r1, r8
 800be66:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800be6a:	4620      	mov	r0, r4
 800be6c:	f7ff fe48 	bl	800bb00 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 800be70:	9b03      	ldr	r3, [sp, #12]
 800be72:	9600      	str	r6, [sp, #0]
 800be74:	463a      	mov	r2, r7
 800be76:	2108      	movs	r1, #8
 800be78:	4620      	mov	r0, r4
 800be7a:	f7ff feee 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800be7e:	b920      	cbnz	r0, 800be8a <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 800be80:	6823      	ldr	r3, [r4, #0]
 800be82:	2208      	movs	r2, #8
 800be84:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800be86:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800be8a:	2300      	movs	r3, #0
 800be8c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800be90:	b004      	add	sp, #16
 800be92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800be96:	2002      	movs	r0, #2
 800be98:	e7f7      	b.n	800be8a <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800be9a:	2002      	movs	r0, #2
 800be9c:	e7f8      	b.n	800be90 <HAL_QSPI_AutoPolling+0x92>

0800be9e <HAL_QSPI_MemoryMapped>:
{
 800be9e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800bea0:	4604      	mov	r4, r0
 800bea2:	4616      	mov	r6, r2
 800bea4:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bea6:	f7fd fffd 	bl	8009ea4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800beaa:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800beae:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800beb0:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800beb2:	d032      	beq.n	800bf1a <HAL_QSPI_MemoryMapped+0x7c>
 800beb4:	2201      	movs	r2, #1
 800beb6:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800beba:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bebe:	2a01      	cmp	r2, #1
 800bec0:	d129      	bne.n	800bf16 <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bec2:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bec4:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bec6:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 800bec8:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800becc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 800bece:	9100      	str	r1, [sp, #0]
 800bed0:	4620      	mov	r0, r4
 800bed2:	2120      	movs	r1, #32
 800bed4:	f7ff fec1 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800bed8:	4605      	mov	r5, r0
 800beda:	b9b0      	cbnz	r0, 800bf0a <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800bedc:	6823      	ldr	r3, [r4, #0]
 800bede:	6872      	ldr	r2, [r6, #4]
 800bee0:	6818      	ldr	r0, [r3, #0]
 800bee2:	f020 0008 	bic.w	r0, r0, #8
 800bee6:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800bee8:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 800beea:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 800beec:	d107      	bne.n	800befe <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 800beee:	6832      	ldr	r2, [r6, #0]
 800bef0:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 800bef2:	2210      	movs	r2, #16
 800bef4:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 800bef6:	681a      	ldr	r2, [r3, #0]
 800bef8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800befc:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 800befe:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 800bf02:	4639      	mov	r1, r7
 800bf04:	4620      	mov	r0, r4
 800bf06:	f7ff fdfb 	bl	800bb00 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800bf0a:	2300      	movs	r3, #0
 800bf0c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800bf10:	4628      	mov	r0, r5
 800bf12:	b003      	add	sp, #12
 800bf14:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800bf16:	2502      	movs	r5, #2
 800bf18:	e7f7      	b.n	800bf0a <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800bf1a:	2502      	movs	r5, #2
 800bf1c:	e7f8      	b.n	800bf10 <HAL_QSPI_MemoryMapped+0x72>

0800bf1e <HAL_QSPI_Abort>:
{
 800bf1e:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bf20:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800bf22:	f7fd ffbf 	bl	8009ea4 <HAL_GetTick>
 800bf26:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800bf28:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 800bf2c:	f010 0002 	ands.w	r0, r0, #2
 800bf30:	d03a      	beq.n	800bfa8 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 800bf32:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bf34:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800bf36:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800bf3a:	680a      	ldr	r2, [r1, #0]
 800bf3c:	f012 0204 	ands.w	r2, r2, #4
 800bf40:	d034      	beq.n	800bfac <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bf42:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bf44:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800bf46:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800bf48:	f022 0204 	bic.w	r2, r2, #4
 800bf4c:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800bf4e:	f7fe f8f9 	bl	800a144 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800bf52:	9b03      	ldr	r3, [sp, #12]
 800bf54:	b118      	cbz	r0, 800bf5e <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800bf56:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800bf58:	f042 0204 	orr.w	r2, r2, #4
 800bf5c:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 800bf5e:	6822      	ldr	r2, [r4, #0]
 800bf60:	6891      	ldr	r1, [r2, #8]
 800bf62:	0689      	lsls	r1, r1, #26
 800bf64:	d51d      	bpl.n	800bfa2 <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bf66:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bf68:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800bf6a:	f041 0102 	orr.w	r1, r1, #2
 800bf6e:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800bf70:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bf72:	9200      	str	r2, [sp, #0]
 800bf74:	2102      	movs	r1, #2
 800bf76:	2201      	movs	r2, #1
 800bf78:	4620      	mov	r0, r4
 800bf7a:	f7ff fe6e 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bf7e:	9b03      	ldr	r3, [sp, #12]
 800bf80:	b990      	cbnz	r0, 800bfa8 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800bf82:	6822      	ldr	r2, [r4, #0]
 800bf84:	2102      	movs	r1, #2
 800bf86:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 800bf88:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800bf8a:	9200      	str	r2, [sp, #0]
 800bf8c:	2120      	movs	r1, #32
 800bf8e:	4602      	mov	r2, r0
 800bf90:	4620      	mov	r0, r4
 800bf92:	f7ff fe62 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800bf96:	b938      	cbnz	r0, 800bfa8 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 800bf98:	6822      	ldr	r2, [r4, #0]
 800bf9a:	6953      	ldr	r3, [r2, #20]
 800bf9c:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800bfa0:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800bfa2:	2301      	movs	r3, #1
 800bfa4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 800bfa8:	b004      	add	sp, #16
 800bfaa:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 800bfac:	4610      	mov	r0, r2
 800bfae:	e7d6      	b.n	800bf5e <HAL_QSPI_Abort+0x40>

0800bfb0 <HAL_QSPI_Transmit>:
{
 800bfb0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bfb2:	4604      	mov	r4, r0
 800bfb4:	b085      	sub	sp, #20
 800bfb6:	4616      	mov	r6, r2
 800bfb8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800bfba:	f7fd ff73 	bl	8009ea4 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800bfbe:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 800bfc2:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 800bfc4:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800bfc6:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800bfc8:	d04c      	beq.n	800c064 <HAL_QSPI_Transmit+0xb4>
 800bfca:	2201      	movs	r2, #1
 800bfcc:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800bfd0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800bfd4:	2a01      	cmp	r2, #1
 800bfd6:	b2d0      	uxtb	r0, r2
 800bfd8:	d142      	bne.n	800c060 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800bfda:	2200      	movs	r2, #0
 800bfdc:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800bfde:	2f00      	cmp	r7, #0
 800bfe0:	d039      	beq.n	800c056 <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 800bfe2:	2212      	movs	r2, #18
 800bfe4:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800bfe8:	692a      	ldr	r2, [r5, #16]
 800bfea:	3201      	adds	r2, #1
 800bfec:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bfee:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 800bff0:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800bff2:	3201      	adds	r2, #1
 800bff4:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 800bff6:	696a      	ldr	r2, [r5, #20]
 800bff8:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800bffc:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 800bffe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c000:	b9a2      	cbnz	r2, 800c02c <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c002:	9600      	str	r6, [sp, #0]
 800c004:	2201      	movs	r2, #1
 800c006:	2102      	movs	r1, #2
 800c008:	4620      	mov	r0, r4
 800c00a:	f7ff fe26 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 800c00e:	b928      	cbnz	r0, 800c01c <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c010:	6823      	ldr	r3, [r4, #0]
 800c012:	2202      	movs	r2, #2
 800c014:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800c016:	4620      	mov	r0, r4
 800c018:	f7ff ff81 	bl	800bf1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c01c:	2301      	movs	r3, #1
 800c01e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c022:	2300      	movs	r3, #0
 800c024:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c028:	b005      	add	sp, #20
 800c02a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 800c02c:	9600      	str	r6, [sp, #0]
 800c02e:	2201      	movs	r2, #1
 800c030:	2104      	movs	r1, #4
 800c032:	4620      	mov	r0, r4
 800c034:	9303      	str	r3, [sp, #12]
 800c036:	f7ff fe10 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 800c03a:	2800      	cmp	r0, #0
 800c03c:	d1ee      	bne.n	800c01c <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c03e:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c040:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800c042:	7812      	ldrb	r2, [r2, #0]
 800c044:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 800c048:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c04a:	3201      	adds	r2, #1
 800c04c:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 800c04e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c050:	3a01      	subs	r2, #1
 800c052:	62e2      	str	r2, [r4, #44]	; 0x2c
 800c054:	e7d3      	b.n	800bffe <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c056:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c058:	f043 0308 	orr.w	r3, r3, #8
 800c05c:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c05e:	e7e0      	b.n	800c022 <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 800c060:	2002      	movs	r0, #2
 800c062:	e7de      	b.n	800c022 <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800c064:	2002      	movs	r0, #2
 800c066:	e7df      	b.n	800c028 <HAL_QSPI_Transmit+0x78>

0800c068 <HAL_QSPI_Receive>:
{
 800c068:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c06a:	4604      	mov	r4, r0
 800c06c:	b085      	sub	sp, #20
 800c06e:	4616      	mov	r6, r2
 800c070:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800c072:	f7fd ff17 	bl	8009ea4 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800c076:	6825      	ldr	r5, [r4, #0]
 800c078:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 800c07c:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800c080:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800c082:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800c084:	d050      	beq.n	800c128 <HAL_QSPI_Receive+0xc0>
 800c086:	2201      	movs	r2, #1
 800c088:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800c08c:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800c090:	2a01      	cmp	r2, #1
 800c092:	b2d0      	uxtb	r0, r2
 800c094:	d146      	bne.n	800c124 <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800c096:	2200      	movs	r2, #0
 800c098:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 800c09a:	2f00      	cmp	r7, #0
 800c09c:	d03d      	beq.n	800c11a <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 800c09e:	2222      	movs	r2, #34	; 0x22
 800c0a0:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800c0a4:	692a      	ldr	r2, [r5, #16]
 800c0a6:	3201      	adds	r2, #1
 800c0a8:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c0aa:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 800c0ac:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 800c0ae:	3201      	adds	r2, #1
 800c0b0:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800c0b2:	6969      	ldr	r1, [r5, #20]
 800c0b4:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 800c0b8:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 800c0bc:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 800c0be:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 800c0c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c0c4:	b9a2      	cbnz	r2, 800c0f0 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 800c0c6:	9600      	str	r6, [sp, #0]
 800c0c8:	2201      	movs	r2, #1
 800c0ca:	2102      	movs	r1, #2
 800c0cc:	4620      	mov	r0, r4
 800c0ce:	f7ff fdc4 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 800c0d2:	b928      	cbnz	r0, 800c0e0 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800c0d4:	6823      	ldr	r3, [r4, #0]
 800c0d6:	2202      	movs	r2, #2
 800c0d8:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800c0da:	4620      	mov	r0, r4
 800c0dc:	f7ff ff1f 	bl	800bf1e <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 800c0e0:	2301      	movs	r3, #1
 800c0e2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800c0e6:	2300      	movs	r3, #0
 800c0e8:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800c0ec:	b005      	add	sp, #20
 800c0ee:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 800c0f0:	9600      	str	r6, [sp, #0]
 800c0f2:	2201      	movs	r2, #1
 800c0f4:	2106      	movs	r1, #6
 800c0f6:	4620      	mov	r0, r4
 800c0f8:	9303      	str	r3, [sp, #12]
 800c0fa:	f7ff fdae 	bl	800bc5a <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 800c0fe:	2800      	cmp	r0, #0
 800c100:	d1ee      	bne.n	800c0e0 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 800c102:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c104:	f895 1020 	ldrb.w	r1, [r5, #32]
 800c108:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 800c10a:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c10c:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 800c10e:	3201      	adds	r2, #1
 800c110:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 800c112:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800c114:	3a01      	subs	r2, #1
 800c116:	63a2      	str	r2, [r4, #56]	; 0x38
 800c118:	e7d3      	b.n	800c0c2 <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800c11a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c11c:	f043 0308 	orr.w	r3, r3, #8
 800c120:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800c122:	e7e0      	b.n	800c0e6 <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800c124:	2002      	movs	r0, #2
 800c126:	e7de      	b.n	800c0e6 <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 800c128:	2002      	movs	r0, #2
 800c12a:	e7df      	b.n	800c0ec <HAL_QSPI_Receive+0x84>

0800c12c <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c12c:	4913      	ldr	r1, [pc, #76]	; (800c17c <HAL_RCC_GetSysClockFreq+0x50>)
{
 800c12e:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c130:	688b      	ldr	r3, [r1, #8]
 800c132:	f003 030c 	and.w	r3, r3, #12
 800c136:	2b04      	cmp	r3, #4
 800c138:	d01c      	beq.n	800c174 <HAL_RCC_GetSysClockFreq+0x48>
 800c13a:	2b08      	cmp	r3, #8
 800c13c:	d11c      	bne.n	800c178 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c13e:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c140:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c142:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800c144:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c148:	bf14      	ite	ne
 800c14a:	480d      	ldrne	r0, [pc, #52]	; (800c180 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c14c:	480d      	ldreq	r0, [pc, #52]	; (800c184 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c14e:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800c152:	bf18      	it	ne
 800c154:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800c156:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800c15a:	fba1 0100 	umull	r0, r1, r1, r0
 800c15e:	f7f4 fc35 	bl	80009cc <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800c162:	4b06      	ldr	r3, [pc, #24]	; (800c17c <HAL_RCC_GetSysClockFreq+0x50>)
 800c164:	685b      	ldr	r3, [r3, #4]
 800c166:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800c16a:	3301      	adds	r3, #1
 800c16c:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 800c16e:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800c172:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800c174:	4802      	ldr	r0, [pc, #8]	; (800c180 <HAL_RCC_GetSysClockFreq+0x54>)
 800c176:	e7fc      	b.n	800c172 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800c178:	4802      	ldr	r0, [pc, #8]	; (800c184 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800c17a:	e7fa      	b.n	800c172 <HAL_RCC_GetSysClockFreq+0x46>
 800c17c:	40023800 	.word	0x40023800
 800c180:	007a1200 	.word	0x007a1200
 800c184:	00f42400 	.word	0x00f42400

0800c188 <HAL_RCC_ClockConfig>:
{
 800c188:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c18c:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 800c18e:	4604      	mov	r4, r0
 800c190:	b910      	cbnz	r0, 800c198 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800c192:	2001      	movs	r0, #1
}
 800c194:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 800c198:	4b44      	ldr	r3, [pc, #272]	; (800c2ac <HAL_RCC_ClockConfig+0x124>)
 800c19a:	681a      	ldr	r2, [r3, #0]
 800c19c:	f002 020f 	and.w	r2, r2, #15
 800c1a0:	428a      	cmp	r2, r1
 800c1a2:	d328      	bcc.n	800c1f6 <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800c1a4:	6822      	ldr	r2, [r4, #0]
 800c1a6:	0797      	lsls	r7, r2, #30
 800c1a8:	d42d      	bmi.n	800c206 <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800c1aa:	07d0      	lsls	r0, r2, #31
 800c1ac:	d441      	bmi.n	800c232 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800c1ae:	4b3f      	ldr	r3, [pc, #252]	; (800c2ac <HAL_RCC_ClockConfig+0x124>)
 800c1b0:	681a      	ldr	r2, [r3, #0]
 800c1b2:	f002 020f 	and.w	r2, r2, #15
 800c1b6:	42aa      	cmp	r2, r5
 800c1b8:	d866      	bhi.n	800c288 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c1ba:	6822      	ldr	r2, [r4, #0]
 800c1bc:	0751      	lsls	r1, r2, #29
 800c1be:	d46c      	bmi.n	800c29a <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c1c0:	0713      	lsls	r3, r2, #28
 800c1c2:	d507      	bpl.n	800c1d4 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800c1c4:	4a3a      	ldr	r2, [pc, #232]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c1c6:	6921      	ldr	r1, [r4, #16]
 800c1c8:	6893      	ldr	r3, [r2, #8]
 800c1ca:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 800c1ce:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c1d2:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800c1d4:	f7ff ffaa 	bl	800c12c <HAL_RCC_GetSysClockFreq>
 800c1d8:	4b35      	ldr	r3, [pc, #212]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c1da:	4a36      	ldr	r2, [pc, #216]	; (800c2b4 <HAL_RCC_ClockConfig+0x12c>)
 800c1dc:	689b      	ldr	r3, [r3, #8]
 800c1de:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800c1e2:	5cd3      	ldrb	r3, [r2, r3]
 800c1e4:	40d8      	lsrs	r0, r3
 800c1e6:	4b34      	ldr	r3, [pc, #208]	; (800c2b8 <HAL_RCC_ClockConfig+0x130>)
 800c1e8:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 800c1ea:	4b34      	ldr	r3, [pc, #208]	; (800c2bc <HAL_RCC_ClockConfig+0x134>)
 800c1ec:	6818      	ldr	r0, [r3, #0]
 800c1ee:	f7f6 fb81 	bl	80028f4 <HAL_InitTick>
  return HAL_OK;
 800c1f2:	2000      	movs	r0, #0
 800c1f4:	e7ce      	b.n	800c194 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c1f6:	b2ca      	uxtb	r2, r1
 800c1f8:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c1fa:	681b      	ldr	r3, [r3, #0]
 800c1fc:	f003 030f 	and.w	r3, r3, #15
 800c200:	428b      	cmp	r3, r1
 800c202:	d1c6      	bne.n	800c192 <HAL_RCC_ClockConfig+0xa>
 800c204:	e7ce      	b.n	800c1a4 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800c206:	4b2a      	ldr	r3, [pc, #168]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c208:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 800c20c:	bf1e      	ittt	ne
 800c20e:	6899      	ldrne	r1, [r3, #8]
 800c210:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800c214:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800c216:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800c218:	bf42      	ittt	mi
 800c21a:	6899      	ldrmi	r1, [r3, #8]
 800c21c:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 800c220:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800c222:	4923      	ldr	r1, [pc, #140]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c224:	68a0      	ldr	r0, [r4, #8]
 800c226:	688b      	ldr	r3, [r1, #8]
 800c228:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800c22c:	4303      	orrs	r3, r0
 800c22e:	608b      	str	r3, [r1, #8]
 800c230:	e7bb      	b.n	800c1aa <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800c232:	6862      	ldr	r2, [r4, #4]
 800c234:	4b1e      	ldr	r3, [pc, #120]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c236:	2a01      	cmp	r2, #1
 800c238:	d11c      	bne.n	800c274 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c23a:	681b      	ldr	r3, [r3, #0]
 800c23c:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c240:	d0a7      	beq.n	800c192 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800c242:	4e1b      	ldr	r6, [pc, #108]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c244:	68b3      	ldr	r3, [r6, #8]
 800c246:	f023 0303 	bic.w	r3, r3, #3
 800c24a:	4313      	orrs	r3, r2
 800c24c:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 800c24e:	f7fd fe29 	bl	8009ea4 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c252:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800c256:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800c258:	68b3      	ldr	r3, [r6, #8]
 800c25a:	6862      	ldr	r2, [r4, #4]
 800c25c:	f003 030c 	and.w	r3, r3, #12
 800c260:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800c264:	d0a3      	beq.n	800c1ae <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800c266:	f7fd fe1d 	bl	8009ea4 <HAL_GetTick>
 800c26a:	1bc0      	subs	r0, r0, r7
 800c26c:	4540      	cmp	r0, r8
 800c26e:	d9f3      	bls.n	800c258 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 800c270:	2003      	movs	r0, #3
 800c272:	e78f      	b.n	800c194 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c274:	1e91      	subs	r1, r2, #2
 800c276:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c278:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800c27a:	d802      	bhi.n	800c282 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c27c:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 800c280:	e7de      	b.n	800c240 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c282:	f013 0f02 	tst.w	r3, #2
 800c286:	e7db      	b.n	800c240 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800c288:	b2ea      	uxtb	r2, r5
 800c28a:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800c28c:	681b      	ldr	r3, [r3, #0]
 800c28e:	f003 030f 	and.w	r3, r3, #15
 800c292:	42ab      	cmp	r3, r5
 800c294:	f47f af7d 	bne.w	800c192 <HAL_RCC_ClockConfig+0xa>
 800c298:	e78f      	b.n	800c1ba <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800c29a:	4905      	ldr	r1, [pc, #20]	; (800c2b0 <HAL_RCC_ClockConfig+0x128>)
 800c29c:	68e0      	ldr	r0, [r4, #12]
 800c29e:	688b      	ldr	r3, [r1, #8]
 800c2a0:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800c2a4:	4303      	orrs	r3, r0
 800c2a6:	608b      	str	r3, [r1, #8]
 800c2a8:	e78a      	b.n	800c1c0 <HAL_RCC_ClockConfig+0x38>
 800c2aa:	bf00      	nop
 800c2ac:	40023c00 	.word	0x40023c00
 800c2b0:	40023800 	.word	0x40023800
 800c2b4:	08029c25 	.word	0x08029c25
 800c2b8:	20000050 	.word	0x20000050
 800c2bc:	20000058 	.word	0x20000058

0800c2c0 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 800c2c0:	4b04      	ldr	r3, [pc, #16]	; (800c2d4 <HAL_RCC_GetPCLK1Freq+0x14>)
 800c2c2:	4a05      	ldr	r2, [pc, #20]	; (800c2d8 <HAL_RCC_GetPCLK1Freq+0x18>)
 800c2c4:	689b      	ldr	r3, [r3, #8]
 800c2c6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 800c2ca:	5cd3      	ldrb	r3, [r2, r3]
 800c2cc:	4a03      	ldr	r2, [pc, #12]	; (800c2dc <HAL_RCC_GetPCLK1Freq+0x1c>)
 800c2ce:	6810      	ldr	r0, [r2, #0]
}
 800c2d0:	40d8      	lsrs	r0, r3
 800c2d2:	4770      	bx	lr
 800c2d4:	40023800 	.word	0x40023800
 800c2d8:	08029c35 	.word	0x08029c35
 800c2dc:	20000050 	.word	0x20000050

0800c2e0 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800c2e0:	230f      	movs	r3, #15
 800c2e2:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800c2e4:	4b0b      	ldr	r3, [pc, #44]	; (800c314 <HAL_RCC_GetClockConfig+0x34>)
 800c2e6:	689a      	ldr	r2, [r3, #8]
 800c2e8:	f002 0203 	and.w	r2, r2, #3
 800c2ec:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 800c2ee:	689a      	ldr	r2, [r3, #8]
 800c2f0:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800c2f4:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800c2f6:	689a      	ldr	r2, [r3, #8]
 800c2f8:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 800c2fc:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 800c2fe:	689b      	ldr	r3, [r3, #8]
 800c300:	08db      	lsrs	r3, r3, #3
 800c302:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800c306:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800c308:	4b03      	ldr	r3, [pc, #12]	; (800c318 <HAL_RCC_GetClockConfig+0x38>)
 800c30a:	681b      	ldr	r3, [r3, #0]
 800c30c:	f003 030f 	and.w	r3, r3, #15
 800c310:	600b      	str	r3, [r1, #0]
}
 800c312:	4770      	bx	lr
 800c314:	40023800 	.word	0x40023800
 800c318:	40023c00 	.word	0x40023c00

0800c31c <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800c31c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c31e:	6802      	ldr	r2, [r0, #0]
{
 800c320:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800c322:	0610      	lsls	r0, r2, #24
 800c324:	d508      	bpl.n	800c338 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800c326:	49aa      	ldr	r1, [pc, #680]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c328:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800c32a:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c32e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800c332:	4303      	orrs	r3, r0
 800c334:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 800c338:	05d1      	lsls	r1, r2, #23
 800c33a:	d508      	bpl.n	800c34e <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 800c33c:	49a4      	ldr	r1, [pc, #656]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c33e:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 800c340:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800c344:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c348:	4303      	orrs	r3, r0
 800c34a:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800c34e:	f012 0f43 	tst.w	r2, #67	; 0x43
 800c352:	d173      	bne.n	800c43c <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800c354:	6823      	ldr	r3, [r4, #0]
 800c356:	f013 0f0c 	tst.w	r3, #12
 800c35a:	f000 80c1 	beq.w	800c4e0 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800c35e:	4b9d      	ldr	r3, [pc, #628]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c360:	4d9b      	ldr	r5, [pc, #620]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 800c362:	2200      	movs	r2, #0
 800c364:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c366:	f7fd fd9d 	bl	8009ea4 <HAL_GetTick>
 800c36a:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800c36c:	682b      	ldr	r3, [r5, #0]
 800c36e:	009b      	lsls	r3, r3, #2
 800c370:	f100 80fc 	bmi.w	800c56c <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800c374:	6821      	ldr	r1, [r4, #0]
 800c376:	074f      	lsls	r7, r1, #29
 800c378:	d51a      	bpl.n	800c3b0 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c37a:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c37e:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800c382:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c386:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c38a:	4313      	orrs	r3, r2
 800c38c:	6922      	ldr	r2, [r4, #16]
 800c38e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c392:	69a2      	ldr	r2, [r4, #24]
 800c394:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c398:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800c39c:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800c3a0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c3a2:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800c3a6:	3a01      	subs	r2, #1
 800c3a8:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800c3ac:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 800c3b0:	070e      	lsls	r6, r1, #28
 800c3b2:	d519      	bpl.n	800c3e8 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800c3b4:	4a86      	ldr	r2, [pc, #536]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c3b6:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3ba:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 800c3be:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800c3c2:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 800c3c6:	4303      	orrs	r3, r0
 800c3c8:	6920      	ldr	r0, [r4, #16]
 800c3ca:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 800c3ce:	69e0      	ldr	r0, [r4, #28]
 800c3d0:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 800c3d4:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 800c3d8:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800c3dc:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800c3de:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800c3e2:	4303      	orrs	r3, r0
 800c3e4:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 800c3e8:	060d      	lsls	r5, r1, #24
 800c3ea:	d517      	bpl.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x100>
 800c3ec:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c3ee:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c3f2:	d113      	bne.n	800c41c <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 800c3f4:	4976      	ldr	r1, [pc, #472]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c3f6:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 800c3fa:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 800c3fe:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 800c402:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 800c406:	4313      	orrs	r3, r2
 800c408:	6922      	ldr	r2, [r4, #16]
 800c40a:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c40e:	6962      	ldr	r2, [r4, #20]
 800c410:	0852      	lsrs	r2, r2, #1
 800c412:	3a01      	subs	r2, #1
 800c414:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c418:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 800c41c:	4b6d      	ldr	r3, [pc, #436]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c41e:	4e6c      	ldr	r6, [pc, #432]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 800c420:	2201      	movs	r2, #1
 800c422:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800c424:	f7fd fd3e 	bl	8009ea4 <HAL_GetTick>
 800c428:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800c42a:	6833      	ldr	r3, [r6, #0]
 800c42c:	0098      	lsls	r0, r3, #2
 800c42e:	d459      	bmi.n	800c4e4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c430:	f7fd fd38 	bl	8009ea4 <HAL_GetTick>
 800c434:	1b40      	subs	r0, r0, r5
 800c436:	2802      	cmp	r0, #2
 800c438:	d9f7      	bls.n	800c42a <HAL_RCCEx_PeriphCLKConfig+0x10e>
 800c43a:	e04e      	b.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 800c43c:	4b65      	ldr	r3, [pc, #404]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c43e:	4e64      	ldr	r6, [pc, #400]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 800c440:	2200      	movs	r2, #0
 800c442:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c444:	f7fd fd2e 	bl	8009ea4 <HAL_GetTick>
 800c448:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 800c44a:	6833      	ldr	r3, [r6, #0]
 800c44c:	011b      	lsls	r3, r3, #4
 800c44e:	d43f      	bmi.n	800c4d0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800c450:	6821      	ldr	r1, [r4, #0]
 800c452:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800c454:	bf41      	itttt	mi
 800c456:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 800c45a:	071b      	lslmi	r3, r3, #28
 800c45c:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800c460:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800c464:	078e      	lsls	r6, r1, #30
 800c466:	d515      	bpl.n	800c494 <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c468:	4a59      	ldr	r2, [pc, #356]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c46a:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 800c46c:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800c470:	6865      	ldr	r5, [r4, #4]
 800c472:	061b      	lsls	r3, r3, #24
 800c474:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 800c478:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 800c47c:	4303      	orrs	r3, r0
 800c47e:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800c482:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800c486:	6a23      	ldr	r3, [r4, #32]
 800c488:	f020 001f 	bic.w	r0, r0, #31
 800c48c:	3b01      	subs	r3, #1
 800c48e:	4303      	orrs	r3, r0
 800c490:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800c494:	064d      	lsls	r5, r1, #25
 800c496:	d50a      	bpl.n	800c4ae <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800c498:	68e3      	ldr	r3, [r4, #12]
 800c49a:	6862      	ldr	r2, [r4, #4]
 800c49c:	061b      	lsls	r3, r3, #24
 800c49e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c4a2:	68a2      	ldr	r2, [r4, #8]
 800c4a4:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c4a8:	4a49      	ldr	r2, [pc, #292]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c4aa:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 800c4ae:	4b49      	ldr	r3, [pc, #292]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c4b0:	4e47      	ldr	r6, [pc, #284]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800c4b2:	2201      	movs	r2, #1
 800c4b4:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800c4b6:	f7fd fcf5 	bl	8009ea4 <HAL_GetTick>
 800c4ba:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 800c4bc:	6833      	ldr	r3, [r6, #0]
 800c4be:	0118      	lsls	r0, r3, #4
 800c4c0:	f53f af48 	bmi.w	800c354 <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c4c4:	f7fd fcee 	bl	8009ea4 <HAL_GetTick>
 800c4c8:	1b40      	subs	r0, r0, r5
 800c4ca:	2802      	cmp	r0, #2
 800c4cc:	d9f6      	bls.n	800c4bc <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 800c4ce:	e004      	b.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800c4d0:	f7fd fce8 	bl	8009ea4 <HAL_GetTick>
 800c4d4:	1b40      	subs	r0, r0, r5
 800c4d6:	2802      	cmp	r0, #2
 800c4d8:	d9b7      	bls.n	800c44a <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 800c4da:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 800c4dc:	b003      	add	sp, #12
 800c4de:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 800c4e0:	0619      	lsls	r1, r3, #24
 800c4e2:	d43e      	bmi.n	800c562 <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 800c4e4:	6823      	ldr	r3, [r4, #0]
 800c4e6:	069a      	lsls	r2, r3, #26
 800c4e8:	d530      	bpl.n	800c54c <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4ea:	2300      	movs	r3, #0
 800c4ec:	9301      	str	r3, [sp, #4]
 800c4ee:	4b38      	ldr	r3, [pc, #224]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 800c4f0:	4d39      	ldr	r5, [pc, #228]	; (800c5d8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 800c4f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c4f4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c4f8:	641a      	str	r2, [r3, #64]	; 0x40
 800c4fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c4fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c500:	9301      	str	r3, [sp, #4]
 800c502:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 800c504:	682b      	ldr	r3, [r5, #0]
 800c506:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c50a:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 800c50c:	f7fd fcca 	bl	8009ea4 <HAL_GetTick>
 800c510:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 800c512:	682b      	ldr	r3, [r5, #0]
 800c514:	05d9      	lsls	r1, r3, #23
 800c516:	d530      	bpl.n	800c57a <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800c518:	4d2d      	ldr	r5, [pc, #180]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c51a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c51c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 800c520:	d131      	bne.n	800c586 <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c522:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c524:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800c528:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800c52c:	4a28      	ldr	r2, [pc, #160]	; (800c5d0 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800c52e:	d14b      	bne.n	800c5c8 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 800c530:	6891      	ldr	r1, [r2, #8]
 800c532:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800c536:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c53a:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 800c53e:	4301      	orrs	r1, r0
 800c540:	6091      	str	r1, [r2, #8]
 800c542:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800c544:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800c548:	430b      	orrs	r3, r1
 800c54a:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 800c54c:	6820      	ldr	r0, [r4, #0]
 800c54e:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800c552:	bf1f      	itttt	ne
 800c554:	4b21      	ldrne	r3, [pc, #132]	; (800c5dc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 800c556:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 800c55a:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 800c55e:	2000      	movne	r0, #0
 800c560:	e7bc      	b.n	800c4dc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 800c562:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c564:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800c568:	d1bc      	bne.n	800c4e4 <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 800c56a:	e6f8      	b.n	800c35e <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800c56c:	f7fd fc9a 	bl	8009ea4 <HAL_GetTick>
 800c570:	1b80      	subs	r0, r0, r6
 800c572:	2802      	cmp	r0, #2
 800c574:	f67f aefa 	bls.w	800c36c <HAL_RCCEx_PeriphCLKConfig+0x50>
 800c578:	e7af      	b.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800c57a:	f7fd fc93 	bl	8009ea4 <HAL_GetTick>
 800c57e:	1b80      	subs	r0, r0, r6
 800c580:	2802      	cmp	r0, #2
 800c582:	d9c6      	bls.n	800c512 <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 800c584:	e7a9      	b.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800c586:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c588:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800c58c:	4293      	cmp	r3, r2
 800c58e:	d0c8      	beq.n	800c522 <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c590:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 800c592:	4a10      	ldr	r2, [pc, #64]	; (800c5d4 <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 800c594:	2101      	movs	r1, #1
 800c596:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800c59a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800c59e:	2100      	movs	r1, #0
 800c5a0:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 800c5a4:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 800c5a6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5a8:	07da      	lsls	r2, r3, #31
 800c5aa:	d5ba      	bpl.n	800c522 <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 800c5ac:	f7fd fc7a 	bl	8009ea4 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c5b0:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 800c5b4:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c5b6:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c5b8:	079b      	lsls	r3, r3, #30
 800c5ba:	d4b2      	bmi.n	800c522 <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c5bc:	f7fd fc72 	bl	8009ea4 <HAL_GetTick>
 800c5c0:	1b80      	subs	r0, r0, r6
 800c5c2:	42b8      	cmp	r0, r7
 800c5c4:	d9f7      	bls.n	800c5b6 <HAL_RCCEx_PeriphCLKConfig+0x29a>
 800c5c6:	e788      	b.n	800c4da <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800c5c8:	6891      	ldr	r1, [r2, #8]
 800c5ca:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800c5ce:	e7b7      	b.n	800c540 <HAL_RCCEx_PeriphCLKConfig+0x224>
 800c5d0:	40023800 	.word	0x40023800
 800c5d4:	42470000 	.word	0x42470000
 800c5d8:	40007000 	.word	0x40007000
 800c5dc:	42471000 	.word	0x42471000

0800c5e0 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800c5e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 800c5e4:	4604      	mov	r4, r0
 800c5e6:	b340      	cbz	r0, 800c63a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800c5e8:	6803      	ldr	r3, [r0, #0]
 800c5ea:	07dd      	lsls	r5, r3, #31
 800c5ec:	d410      	bmi.n	800c610 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800c5ee:	6823      	ldr	r3, [r4, #0]
 800c5f0:	0798      	lsls	r0, r3, #30
 800c5f2:	d45e      	bmi.n	800c6b2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800c5f4:	6823      	ldr	r3, [r4, #0]
 800c5f6:	071a      	lsls	r2, r3, #28
 800c5f8:	f100 80a0 	bmi.w	800c73c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800c5fc:	6823      	ldr	r3, [r4, #0]
 800c5fe:	075b      	lsls	r3, r3, #29
 800c600:	f100 80c0 	bmi.w	800c784 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 800c604:	69a0      	ldr	r0, [r4, #24]
 800c606:	2800      	cmp	r0, #0
 800c608:	f040 8128 	bne.w	800c85c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800c60c:	2000      	movs	r0, #0
 800c60e:	e02b      	b.n	800c668 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c610:	4b8f      	ldr	r3, [pc, #572]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c612:	689a      	ldr	r2, [r3, #8]
 800c614:	f002 020c 	and.w	r2, r2, #12
 800c618:	2a04      	cmp	r2, #4
 800c61a:	d007      	beq.n	800c62c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c61c:	689a      	ldr	r2, [r3, #8]
 800c61e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800c622:	2a08      	cmp	r2, #8
 800c624:	d10b      	bne.n	800c63e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800c626:	685a      	ldr	r2, [r3, #4]
 800c628:	0251      	lsls	r1, r2, #9
 800c62a:	d508      	bpl.n	800c63e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800c62c:	4b88      	ldr	r3, [pc, #544]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c62e:	681b      	ldr	r3, [r3, #0]
 800c630:	039a      	lsls	r2, r3, #14
 800c632:	d5dc      	bpl.n	800c5ee <HAL_RCC_OscConfig+0xe>
 800c634:	6863      	ldr	r3, [r4, #4]
 800c636:	2b00      	cmp	r3, #0
 800c638:	d1d9      	bne.n	800c5ee <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800c63a:	2001      	movs	r0, #1
 800c63c:	e014      	b.n	800c668 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c63e:	6862      	ldr	r2, [r4, #4]
 800c640:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 800c644:	d113      	bne.n	800c66e <HAL_RCC_OscConfig+0x8e>
 800c646:	681a      	ldr	r2, [r3, #0]
 800c648:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800c64c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c64e:	f7fd fc29 	bl	8009ea4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c652:	4e7f      	ldr	r6, [pc, #508]	; (800c850 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c654:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800c656:	6833      	ldr	r3, [r6, #0]
 800c658:	039b      	lsls	r3, r3, #14
 800c65a:	d4c8      	bmi.n	800c5ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c65c:	f7fd fc22 	bl	8009ea4 <HAL_GetTick>
 800c660:	1b40      	subs	r0, r0, r5
 800c662:	2864      	cmp	r0, #100	; 0x64
 800c664:	d9f7      	bls.n	800c656 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 800c666:	2003      	movs	r0, #3
}
 800c668:	b002      	add	sp, #8
 800c66a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c66e:	4d78      	ldr	r5, [pc, #480]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c670:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 800c674:	682b      	ldr	r3, [r5, #0]
 800c676:	d107      	bne.n	800c688 <HAL_RCC_OscConfig+0xa8>
 800c678:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800c67c:	602b      	str	r3, [r5, #0]
 800c67e:	682b      	ldr	r3, [r5, #0]
 800c680:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800c684:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c686:	e7e2      	b.n	800c64e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800c688:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800c68c:	602b      	str	r3, [r5, #0]
 800c68e:	682b      	ldr	r3, [r5, #0]
 800c690:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800c694:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 800c696:	2a00      	cmp	r2, #0
 800c698:	d1d9      	bne.n	800c64e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800c69a:	f7fd fc03 	bl	8009ea4 <HAL_GetTick>
 800c69e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800c6a0:	682b      	ldr	r3, [r5, #0]
 800c6a2:	039f      	lsls	r7, r3, #14
 800c6a4:	d5a3      	bpl.n	800c5ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800c6a6:	f7fd fbfd 	bl	8009ea4 <HAL_GetTick>
 800c6aa:	1b80      	subs	r0, r0, r6
 800c6ac:	2864      	cmp	r0, #100	; 0x64
 800c6ae:	d9f7      	bls.n	800c6a0 <HAL_RCC_OscConfig+0xc0>
 800c6b0:	e7d9      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c6b2:	4b67      	ldr	r3, [pc, #412]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c6b4:	689a      	ldr	r2, [r3, #8]
 800c6b6:	f012 0f0c 	tst.w	r2, #12
 800c6ba:	d007      	beq.n	800c6cc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c6bc:	689a      	ldr	r2, [r3, #8]
 800c6be:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800c6c2:	2a08      	cmp	r2, #8
 800c6c4:	d111      	bne.n	800c6ea <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800c6c6:	685b      	ldr	r3, [r3, #4]
 800c6c8:	025e      	lsls	r6, r3, #9
 800c6ca:	d40e      	bmi.n	800c6ea <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c6cc:	4a60      	ldr	r2, [pc, #384]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c6ce:	6813      	ldr	r3, [r2, #0]
 800c6d0:	079d      	lsls	r5, r3, #30
 800c6d2:	d502      	bpl.n	800c6da <HAL_RCC_OscConfig+0xfa>
 800c6d4:	68e3      	ldr	r3, [r4, #12]
 800c6d6:	2b01      	cmp	r3, #1
 800c6d8:	d1af      	bne.n	800c63a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c6da:	6813      	ldr	r3, [r2, #0]
 800c6dc:	6921      	ldr	r1, [r4, #16]
 800c6de:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c6e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800c6e6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800c6e8:	e784      	b.n	800c5f4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800c6ea:	68e2      	ldr	r2, [r4, #12]
 800c6ec:	4b59      	ldr	r3, [pc, #356]	; (800c854 <HAL_RCC_OscConfig+0x274>)
 800c6ee:	b1b2      	cbz	r2, 800c71e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 800c6f0:	2201      	movs	r2, #1
 800c6f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c6f4:	f7fd fbd6 	bl	8009ea4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c6f8:	4d55      	ldr	r5, [pc, #340]	; (800c850 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c6fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800c6fc:	682b      	ldr	r3, [r5, #0]
 800c6fe:	0798      	lsls	r0, r3, #30
 800c700:	d507      	bpl.n	800c712 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800c702:	682b      	ldr	r3, [r5, #0]
 800c704:	6922      	ldr	r2, [r4, #16]
 800c706:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800c70a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800c70e:	602b      	str	r3, [r5, #0]
 800c710:	e770      	b.n	800c5f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c712:	f7fd fbc7 	bl	8009ea4 <HAL_GetTick>
 800c716:	1b80      	subs	r0, r0, r6
 800c718:	2802      	cmp	r0, #2
 800c71a:	d9ef      	bls.n	800c6fc <HAL_RCC_OscConfig+0x11c>
 800c71c:	e7a3      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800c71e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800c720:	f7fd fbc0 	bl	8009ea4 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c724:	4e4a      	ldr	r6, [pc, #296]	; (800c850 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800c726:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800c728:	6833      	ldr	r3, [r6, #0]
 800c72a:	0799      	lsls	r1, r3, #30
 800c72c:	f57f af62 	bpl.w	800c5f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800c730:	f7fd fbb8 	bl	8009ea4 <HAL_GetTick>
 800c734:	1b40      	subs	r0, r0, r5
 800c736:	2802      	cmp	r0, #2
 800c738:	d9f6      	bls.n	800c728 <HAL_RCC_OscConfig+0x148>
 800c73a:	e794      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800c73c:	6962      	ldr	r2, [r4, #20]
 800c73e:	4b45      	ldr	r3, [pc, #276]	; (800c854 <HAL_RCC_OscConfig+0x274>)
 800c740:	b182      	cbz	r2, 800c764 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800c742:	2201      	movs	r2, #1
 800c744:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c748:	f7fd fbac 	bl	8009ea4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c74c:	4e40      	ldr	r6, [pc, #256]	; (800c850 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c74e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800c750:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c752:	079f      	lsls	r7, r3, #30
 800c754:	f53f af52 	bmi.w	800c5fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c758:	f7fd fba4 	bl	8009ea4 <HAL_GetTick>
 800c75c:	1b40      	subs	r0, r0, r5
 800c75e:	2802      	cmp	r0, #2
 800c760:	d9f6      	bls.n	800c750 <HAL_RCC_OscConfig+0x170>
 800c762:	e780      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800c764:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 800c768:	f7fd fb9c 	bl	8009ea4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c76c:	4e38      	ldr	r6, [pc, #224]	; (800c850 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c76e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800c770:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800c772:	0798      	lsls	r0, r3, #30
 800c774:	f57f af42 	bpl.w	800c5fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800c778:	f7fd fb94 	bl	8009ea4 <HAL_GetTick>
 800c77c:	1b40      	subs	r0, r0, r5
 800c77e:	2802      	cmp	r0, #2
 800c780:	d9f6      	bls.n	800c770 <HAL_RCC_OscConfig+0x190>
 800c782:	e770      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 800c784:	4b32      	ldr	r3, [pc, #200]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c786:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c788:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800c78c:	d128      	bne.n	800c7e0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800c78e:	9201      	str	r2, [sp, #4]
 800c790:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800c792:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800c796:	641a      	str	r2, [r3, #64]	; 0x40
 800c798:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c79a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800c79e:	9301      	str	r3, [sp, #4]
 800c7a0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800c7a2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c7a4:	4d2c      	ldr	r5, [pc, #176]	; (800c858 <HAL_RCC_OscConfig+0x278>)
 800c7a6:	682b      	ldr	r3, [r5, #0]
 800c7a8:	05d9      	lsls	r1, r3, #23
 800c7aa:	d51b      	bpl.n	800c7e4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c7ac:	68a3      	ldr	r3, [r4, #8]
 800c7ae:	4d28      	ldr	r5, [pc, #160]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c7b0:	2b01      	cmp	r3, #1
 800c7b2:	d127      	bne.n	800c804 <HAL_RCC_OscConfig+0x224>
 800c7b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c7b6:	f043 0301 	orr.w	r3, r3, #1
 800c7ba:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 800c7bc:	f7fd fb72 	bl	8009ea4 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c7c0:	4e23      	ldr	r6, [pc, #140]	; (800c850 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800c7c2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c7c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800c7c8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800c7ca:	079b      	lsls	r3, r3, #30
 800c7cc:	d539      	bpl.n	800c842 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800c7ce:	2f00      	cmp	r7, #0
 800c7d0:	f43f af18 	beq.w	800c604 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 800c7d4:	4a1e      	ldr	r2, [pc, #120]	; (800c850 <HAL_RCC_OscConfig+0x270>)
 800c7d6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 800c7d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800c7dc:	6413      	str	r3, [r2, #64]	; 0x40
 800c7de:	e711      	b.n	800c604 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 800c7e0:	2700      	movs	r7, #0
 800c7e2:	e7df      	b.n	800c7a4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800c7e4:	682b      	ldr	r3, [r5, #0]
 800c7e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800c7ea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800c7ec:	f7fd fb5a 	bl	8009ea4 <HAL_GetTick>
 800c7f0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 800c7f2:	682b      	ldr	r3, [r5, #0]
 800c7f4:	05da      	lsls	r2, r3, #23
 800c7f6:	d4d9      	bmi.n	800c7ac <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 800c7f8:	f7fd fb54 	bl	8009ea4 <HAL_GetTick>
 800c7fc:	1b80      	subs	r0, r0, r6
 800c7fe:	2802      	cmp	r0, #2
 800c800:	d9f7      	bls.n	800c7f2 <HAL_RCC_OscConfig+0x212>
 800c802:	e730      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 800c804:	2b05      	cmp	r3, #5
 800c806:	d104      	bne.n	800c812 <HAL_RCC_OscConfig+0x232>
 800c808:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c80a:	f043 0304 	orr.w	r3, r3, #4
 800c80e:	672b      	str	r3, [r5, #112]	; 0x70
 800c810:	e7d0      	b.n	800c7b4 <HAL_RCC_OscConfig+0x1d4>
 800c812:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c814:	f022 0201 	bic.w	r2, r2, #1
 800c818:	672a      	str	r2, [r5, #112]	; 0x70
 800c81a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800c81c:	f022 0204 	bic.w	r2, r2, #4
 800c820:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800c822:	2b00      	cmp	r3, #0
 800c824:	d1ca      	bne.n	800c7bc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 800c826:	f7fd fb3d 	bl	8009ea4 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c82a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800c82e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800c830:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800c832:	0798      	lsls	r0, r3, #30
 800c834:	d5cb      	bpl.n	800c7ce <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c836:	f7fd fb35 	bl	8009ea4 <HAL_GetTick>
 800c83a:	1b80      	subs	r0, r0, r6
 800c83c:	4540      	cmp	r0, r8
 800c83e:	d9f7      	bls.n	800c830 <HAL_RCC_OscConfig+0x250>
 800c840:	e711      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800c842:	f7fd fb2f 	bl	8009ea4 <HAL_GetTick>
 800c846:	1b40      	subs	r0, r0, r5
 800c848:	4540      	cmp	r0, r8
 800c84a:	d9bd      	bls.n	800c7c8 <HAL_RCC_OscConfig+0x1e8>
 800c84c:	e70b      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
 800c84e:	bf00      	nop
 800c850:	40023800 	.word	0x40023800
 800c854:	42470000 	.word	0x42470000
 800c858:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800c85c:	4d3b      	ldr	r5, [pc, #236]	; (800c94c <HAL_RCC_OscConfig+0x36c>)
 800c85e:	68ab      	ldr	r3, [r5, #8]
 800c860:	f003 030c 	and.w	r3, r3, #12
 800c864:	2b08      	cmp	r3, #8
 800c866:	d040      	beq.n	800c8ea <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c868:	4b39      	ldr	r3, [pc, #228]	; (800c950 <HAL_RCC_OscConfig+0x370>)
 800c86a:	2200      	movs	r2, #0
 800c86c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800c86e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800c870:	d12e      	bne.n	800c8d0 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 800c872:	f7fd fb17 	bl	8009ea4 <HAL_GetTick>
 800c876:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c878:	682b      	ldr	r3, [r5, #0]
 800c87a:	0199      	lsls	r1, r3, #6
 800c87c:	d422      	bmi.n	800c8c4 <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800c87e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800c882:	4313      	orrs	r3, r2
 800c884:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800c886:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800c88a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800c88c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800c890:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c892:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800c896:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c898:	0852      	lsrs	r2, r2, #1
 800c89a:	3a01      	subs	r2, #1
 800c89c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800c8a0:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800c8a2:	4b2b      	ldr	r3, [pc, #172]	; (800c950 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c8a4:	4d29      	ldr	r5, [pc, #164]	; (800c94c <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 800c8a6:	2201      	movs	r2, #1
 800c8a8:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 800c8aa:	f7fd fafb 	bl	8009ea4 <HAL_GetTick>
 800c8ae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800c8b0:	682b      	ldr	r3, [r5, #0]
 800c8b2:	019a      	lsls	r2, r3, #6
 800c8b4:	f53f aeaa 	bmi.w	800c60c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8b8:	f7fd faf4 	bl	8009ea4 <HAL_GetTick>
 800c8bc:	1b00      	subs	r0, r0, r4
 800c8be:	2802      	cmp	r0, #2
 800c8c0:	d9f6      	bls.n	800c8b0 <HAL_RCC_OscConfig+0x2d0>
 800c8c2:	e6d0      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8c4:	f7fd faee 	bl	8009ea4 <HAL_GetTick>
 800c8c8:	1b80      	subs	r0, r0, r6
 800c8ca:	2802      	cmp	r0, #2
 800c8cc:	d9d4      	bls.n	800c878 <HAL_RCC_OscConfig+0x298>
 800c8ce:	e6ca      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800c8d0:	f7fd fae8 	bl	8009ea4 <HAL_GetTick>
 800c8d4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800c8d6:	682b      	ldr	r3, [r5, #0]
 800c8d8:	019b      	lsls	r3, r3, #6
 800c8da:	f57f ae97 	bpl.w	800c60c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800c8de:	f7fd fae1 	bl	8009ea4 <HAL_GetTick>
 800c8e2:	1b00      	subs	r0, r0, r4
 800c8e4:	2802      	cmp	r0, #2
 800c8e6:	d9f6      	bls.n	800c8d6 <HAL_RCC_OscConfig+0x2f6>
 800c8e8:	e6bd      	b.n	800c666 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800c8ea:	2801      	cmp	r0, #1
 800c8ec:	f43f aebc 	beq.w	800c668 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800c8f0:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c8f2:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c8f4:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 800c8f8:	4291      	cmp	r1, r2
 800c8fa:	f47f ae9e 	bne.w	800c63a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c8fe:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c900:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800c904:	428a      	cmp	r2, r1
 800c906:	f47f ae98 	bne.w	800c63a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c90a:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 800c90c:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800c910:	401a      	ands	r2, r3
 800c912:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800c916:	f47f ae90 	bne.w	800c63a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c91a:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c91c:	0852      	lsrs	r2, r2, #1
 800c91e:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800c922:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800c924:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 800c928:	f47f ae87 	bne.w	800c63a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c92c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800c92e:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800c932:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800c936:	f47f ae80 	bne.w	800c63a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 800c93a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c93c:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 800c940:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800c944:	f43f ae62 	beq.w	800c60c <HAL_RCC_OscConfig+0x2c>
 800c948:	e677      	b.n	800c63a <HAL_RCC_OscConfig+0x5a>
 800c94a:	bf00      	nop
 800c94c:	40023800 	.word	0x40023800
 800c950:	42470000 	.word	0x42470000

0800c954 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800c954:	b538      	push	{r3, r4, r5, lr}
 800c956:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 800c958:	4604      	mov	r4, r0
 800c95a:	b1c8      	cbz	r0, 800c990 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 800c95c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c960:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800c964:	b91b      	cbnz	r3, 800c96e <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800c966:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800c96a:	f7f5 ff09 	bl	8002780 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c96e:	2302      	movs	r3, #2
 800c970:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 800c974:	1d21      	adds	r1, r4, #4
 800c976:	6820      	ldr	r0, [r4, #0]
 800c978:	f000 fa22 	bl	800cdc0 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 800c97c:	6862      	ldr	r2, [r4, #4]
 800c97e:	6820      	ldr	r0, [r4, #0]
 800c980:	4629      	mov	r1, r5
 800c982:	f000 fa58 	bl	800ce36 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800c986:	2301      	movs	r3, #1
 800c988:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 800c98c:	2000      	movs	r0, #0
}
 800c98e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800c990:	2001      	movs	r0, #1
 800c992:	e7fc      	b.n	800c98e <HAL_SDRAM_Init+0x3a>

0800c994 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 800c994:	b510      	push	{r4, lr}
 800c996:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 800c998:	f7f5 ff6a 	bl	8002870 <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800c99c:	e9d4 0100 	ldrd	r0, r1, [r4]
 800c9a0:	f000 fa7f 	bl	800cea2 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 800c9a4:	2000      	movs	r0, #0
 800c9a6:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800c9aa:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800c9ae:	bd10      	pop	{r4, pc}

0800c9b0 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 800c9b0:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c9b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 800c9b6:	2b02      	cmp	r3, #2
{
 800c9b8:	4605      	mov	r5, r0
 800c9ba:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 800c9bc:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 800c9be:	d012      	beq.n	800c9e6 <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 800c9c0:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 800c9c4:	2c01      	cmp	r4, #1
 800c9c6:	d10f      	bne.n	800c9e8 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800c9c8:	2302      	movs	r3, #2
 800c9ca:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800c9ce:	6828      	ldr	r0, [r5, #0]
 800c9d0:	f000 fa76 	bl	800cec0 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800c9d4:	6833      	ldr	r3, [r6, #0]
 800c9d6:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 800c9d8:	bf06      	itte	eq
 800c9da:	2305      	moveq	r3, #5
 800c9dc:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 800c9e0:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800c9e4:	2000      	movs	r0, #0
}
 800c9e6:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 800c9e8:	2001      	movs	r0, #1
 800c9ea:	e7fc      	b.n	800c9e6 <HAL_SDRAM_SendCommand+0x36>

0800c9ec <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 800c9ec:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9ee:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800c9f2:	2b02      	cmp	r3, #2
{
 800c9f4:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 800c9f6:	b2d8      	uxtb	r0, r3
 800c9f8:	d00d      	beq.n	800ca16 <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 800c9fa:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c9fe:	2b01      	cmp	r3, #1
 800ca00:	b2dd      	uxtb	r5, r3
 800ca02:	d109      	bne.n	800ca18 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca04:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ca06:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 800ca08:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800ca0c:	f000 fa7e 	bl	800cf0c <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 800ca10:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 800ca14:	2000      	movs	r0, #0
}
 800ca16:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 800ca18:	2001      	movs	r0, #1
 800ca1a:	e7fc      	b.n	800ca16 <HAL_SDRAM_ProgramRefreshRate+0x2a>

0800ca1c <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 800ca1c:	b510      	push	{r4, lr}
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 800ca1e:	4604      	mov	r4, r0
 800ca20:	2800      	cmp	r0, #0
 800ca22:	d055      	beq.n	800cad0 <HAL_SPI_Init+0xb4>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 800ca24:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800ca26:	2b00      	cmp	r3, #0
 800ca28:	d14e      	bne.n	800cac8 <HAL_SPI_Init+0xac>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 800ca2a:	6842      	ldr	r2, [r0, #4]
 800ca2c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 800ca30:	d000      	beq.n	800ca34 <HAL_SPI_Init+0x18>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 800ca32:	61c3      	str	r3, [r0, #28]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800ca34:	2300      	movs	r3, #0
 800ca36:	62a3      	str	r3, [r4, #40]	; 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 800ca38:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 800ca3c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800ca40:	b923      	cbnz	r3, 800ca4c <HAL_SPI_Init+0x30>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 800ca42:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 800ca46:	4620      	mov	r0, r4
 800ca48:	f7f5 fe4e 	bl	80026e8 <HAL_SPI_MspInit>
  }

  hspi->State = HAL_SPI_STATE_BUSY;

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 800ca4c:	6821      	ldr	r1, [r4, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca4e:	68a0      	ldr	r0, [r4, #8]
 800ca50:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 800ca52:	2302      	movs	r3, #2
 800ca54:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 800ca58:	680b      	ldr	r3, [r1, #0]
 800ca5a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800ca5e:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 800ca60:	6863      	ldr	r3, [r4, #4]
 800ca62:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 800ca66:	f403 7382 	and.w	r3, r3, #260	; 0x104
 800ca6a:	4303      	orrs	r3, r0
 800ca6c:	68e0      	ldr	r0, [r4, #12]
 800ca6e:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 800ca72:	4303      	orrs	r3, r0
 800ca74:	6920      	ldr	r0, [r4, #16]
 800ca76:	f000 0002 	and.w	r0, r0, #2
 800ca7a:	4303      	orrs	r3, r0
 800ca7c:	6960      	ldr	r0, [r4, #20]
 800ca7e:	f000 0001 	and.w	r0, r0, #1
 800ca82:	4303      	orrs	r3, r0
 800ca84:	f402 7000 	and.w	r0, r2, #512	; 0x200
 800ca88:	4303      	orrs	r3, r0
 800ca8a:	69e0      	ldr	r0, [r4, #28]
 800ca8c:	f000 0038 	and.w	r0, r0, #56	; 0x38
 800ca90:	4303      	orrs	r3, r0
 800ca92:	6a20      	ldr	r0, [r4, #32]
 800ca94:	f000 0080 	and.w	r0, r0, #128	; 0x80
 800ca98:	4303      	orrs	r3, r0
 800ca9a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800ca9c:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 800caa0:	4303      	orrs	r3, r0
 800caa2:	600b      	str	r3, [r1, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800caa4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800caa6:	0c12      	lsrs	r2, r2, #16
 800caa8:	f003 0310 	and.w	r3, r3, #16
 800caac:	f002 0204 	and.w	r2, r2, #4
 800cab0:	431a      	orrs	r2, r3
 800cab2:	604a      	str	r2, [r1, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800cab4:	69cb      	ldr	r3, [r1, #28]
 800cab6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800caba:	61cb      	str	r3, [r1, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cabc:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 800cabe:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 800cac0:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800cac2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51

  return HAL_OK;
}
 800cac6:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 800cac8:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 800caca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800cace:	e7b1      	b.n	800ca34 <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 800cad0:	2001      	movs	r0, #1
 800cad2:	e7f8      	b.n	800cac6 <HAL_SPI_Init+0xaa>

0800cad4 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 800cad4:	4770      	bx	lr
	...

0800cad8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800cad8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cadc:	2b01      	cmp	r3, #1
 800cade:	d130      	bne.n	800cb42 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800cae0:	2302      	movs	r3, #2
 800cae2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800cae6:	6803      	ldr	r3, [r0, #0]
 800cae8:	68da      	ldr	r2, [r3, #12]
 800caea:	f042 0201 	orr.w	r2, r2, #1
 800caee:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800caf0:	4a15      	ldr	r2, [pc, #84]	; (800cb48 <HAL_TIM_Base_Start_IT+0x70>)
 800caf2:	4293      	cmp	r3, r2
 800caf4:	d01a      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800caf6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800cafa:	d017      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cafc:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800cb00:	4293      	cmp	r3, r2
 800cb02:	d013      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cb04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cb08:	4293      	cmp	r3, r2
 800cb0a:	d00f      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cb0c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cb10:	4293      	cmp	r3, r2
 800cb12:	d00b      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cb14:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800cb18:	4293      	cmp	r3, r2
 800cb1a:	d007      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cb1c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800cb20:	4293      	cmp	r3, r2
 800cb22:	d003      	beq.n	800cb2c <HAL_TIM_Base_Start_IT+0x54>
 800cb24:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 800cb28:	4293      	cmp	r3, r2
 800cb2a:	d104      	bne.n	800cb36 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800cb2c:	689a      	ldr	r2, [r3, #8]
 800cb2e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800cb32:	2a06      	cmp	r2, #6
 800cb34:	d003      	beq.n	800cb3e <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800cb36:	681a      	ldr	r2, [r3, #0]
 800cb38:	f042 0201 	orr.w	r2, r2, #1
 800cb3c:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800cb3e:	2000      	movs	r0, #0
}
 800cb40:	4770      	bx	lr
    return HAL_ERROR;
 800cb42:	2001      	movs	r0, #1
 800cb44:	4770      	bx	lr
 800cb46:	bf00      	nop
 800cb48:	40010000 	.word	0x40010000

0800cb4c <HAL_TIM_OC_DelayElapsedCallback>:
 800cb4c:	4770      	bx	lr

0800cb4e <HAL_TIM_IC_CaptureCallback>:
 800cb4e:	4770      	bx	lr

0800cb50 <HAL_TIM_PWM_PulseFinishedCallback>:
 800cb50:	4770      	bx	lr

0800cb52 <HAL_TIM_TriggerCallback>:
 800cb52:	4770      	bx	lr

0800cb54 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb54:	6803      	ldr	r3, [r0, #0]
 800cb56:	691a      	ldr	r2, [r3, #16]
 800cb58:	0791      	lsls	r1, r2, #30
{
 800cb5a:	b510      	push	{r4, lr}
 800cb5c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800cb5e:	d50e      	bpl.n	800cb7e <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 800cb60:	68da      	ldr	r2, [r3, #12]
 800cb62:	0792      	lsls	r2, r2, #30
 800cb64:	d50b      	bpl.n	800cb7e <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800cb66:	f06f 0202 	mvn.w	r2, #2
 800cb6a:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 800cb6c:	2201      	movs	r2, #1
 800cb6e:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 800cb70:	699b      	ldr	r3, [r3, #24]
 800cb72:	079b      	lsls	r3, r3, #30
 800cb74:	d077      	beq.n	800cc66 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800cb76:	f7ff ffea 	bl	800cb4e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cb7a:	2300      	movs	r3, #0
 800cb7c:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 800cb7e:	6823      	ldr	r3, [r4, #0]
 800cb80:	691a      	ldr	r2, [r3, #16]
 800cb82:	0750      	lsls	r0, r2, #29
 800cb84:	d510      	bpl.n	800cba8 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 800cb86:	68da      	ldr	r2, [r3, #12]
 800cb88:	0751      	lsls	r1, r2, #29
 800cb8a:	d50d      	bpl.n	800cba8 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 800cb8c:	f06f 0204 	mvn.w	r2, #4
 800cb90:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800cb92:	2202      	movs	r2, #2
 800cb94:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb96:	699b      	ldr	r3, [r3, #24]
 800cb98:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cb9c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 800cb9e:	d068      	beq.n	800cc72 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 800cba0:	f7ff ffd5 	bl	800cb4e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cba4:	2300      	movs	r3, #0
 800cba6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 800cba8:	6823      	ldr	r3, [r4, #0]
 800cbaa:	691a      	ldr	r2, [r3, #16]
 800cbac:	0712      	lsls	r2, r2, #28
 800cbae:	d50f      	bpl.n	800cbd0 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800cbb0:	68da      	ldr	r2, [r3, #12]
 800cbb2:	0710      	lsls	r0, r2, #28
 800cbb4:	d50c      	bpl.n	800cbd0 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 800cbb6:	f06f 0208 	mvn.w	r2, #8
 800cbba:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800cbbc:	2204      	movs	r2, #4
 800cbbe:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cbc0:	69db      	ldr	r3, [r3, #28]
 800cbc2:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cbc4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800cbc6:	d05a      	beq.n	800cc7e <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbc8:	f7ff ffc1 	bl	800cb4e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbcc:	2300      	movs	r3, #0
 800cbce:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800cbd0:	6823      	ldr	r3, [r4, #0]
 800cbd2:	691a      	ldr	r2, [r3, #16]
 800cbd4:	06d2      	lsls	r2, r2, #27
 800cbd6:	d510      	bpl.n	800cbfa <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800cbd8:	68da      	ldr	r2, [r3, #12]
 800cbda:	06d0      	lsls	r0, r2, #27
 800cbdc:	d50d      	bpl.n	800cbfa <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800cbde:	f06f 0210 	mvn.w	r2, #16
 800cbe2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800cbe4:	2208      	movs	r2, #8
 800cbe6:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbe8:	69db      	ldr	r3, [r3, #28]
 800cbea:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800cbee:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800cbf0:	d04b      	beq.n	800cc8a <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800cbf2:	f7ff ffac 	bl	800cb4e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800cbf6:	2300      	movs	r3, #0
 800cbf8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800cbfa:	6823      	ldr	r3, [r4, #0]
 800cbfc:	691a      	ldr	r2, [r3, #16]
 800cbfe:	07d1      	lsls	r1, r2, #31
 800cc00:	d508      	bpl.n	800cc14 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800cc02:	68da      	ldr	r2, [r3, #12]
 800cc04:	07d2      	lsls	r2, r2, #31
 800cc06:	d505      	bpl.n	800cc14 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800cc08:	f06f 0201 	mvn.w	r2, #1
 800cc0c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800cc0e:	4620      	mov	r0, r4
 800cc10:	f7f5 fbbc 	bl	800238c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800cc14:	6823      	ldr	r3, [r4, #0]
 800cc16:	691a      	ldr	r2, [r3, #16]
 800cc18:	0610      	lsls	r0, r2, #24
 800cc1a:	d508      	bpl.n	800cc2e <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800cc1c:	68da      	ldr	r2, [r3, #12]
 800cc1e:	0611      	lsls	r1, r2, #24
 800cc20:	d505      	bpl.n	800cc2e <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800cc22:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800cc26:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800cc28:	4620      	mov	r0, r4
 800cc2a:	f000 f8c8 	bl	800cdbe <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800cc2e:	6823      	ldr	r3, [r4, #0]
 800cc30:	691a      	ldr	r2, [r3, #16]
 800cc32:	0652      	lsls	r2, r2, #25
 800cc34:	d508      	bpl.n	800cc48 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800cc36:	68da      	ldr	r2, [r3, #12]
 800cc38:	0650      	lsls	r0, r2, #25
 800cc3a:	d505      	bpl.n	800cc48 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800cc3c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800cc40:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800cc42:	4620      	mov	r0, r4
 800cc44:	f7ff ff85 	bl	800cb52 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800cc48:	6823      	ldr	r3, [r4, #0]
 800cc4a:	691a      	ldr	r2, [r3, #16]
 800cc4c:	0691      	lsls	r1, r2, #26
 800cc4e:	d522      	bpl.n	800cc96 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 800cc50:	68da      	ldr	r2, [r3, #12]
 800cc52:	0692      	lsls	r2, r2, #26
 800cc54:	d51f      	bpl.n	800cc96 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc56:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800cc5a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800cc5c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800cc5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 800cc62:	f000 b8ab 	b.w	800cdbc <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc66:	f7ff ff71 	bl	800cb4c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc6a:	4620      	mov	r0, r4
 800cc6c:	f7ff ff70 	bl	800cb50 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc70:	e783      	b.n	800cb7a <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc72:	f7ff ff6b 	bl	800cb4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc76:	4620      	mov	r0, r4
 800cc78:	f7ff ff6a 	bl	800cb50 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc7c:	e792      	b.n	800cba4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc7e:	f7ff ff65 	bl	800cb4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc82:	4620      	mov	r0, r4
 800cc84:	f7ff ff64 	bl	800cb50 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc88:	e7a0      	b.n	800cbcc <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 800cc8a:	f7ff ff5f 	bl	800cb4c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800cc8e:	4620      	mov	r0, r4
 800cc90:	f7ff ff5e 	bl	800cb50 <HAL_TIM_PWM_PulseFinishedCallback>
 800cc94:	e7af      	b.n	800cbf6 <HAL_TIM_IRQHandler+0xa2>
}
 800cc96:	bd10      	pop	{r4, pc}

0800cc98 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cc98:	4a30      	ldr	r2, [pc, #192]	; (800cd5c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800cc9a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800cc9c:	4290      	cmp	r0, r2
 800cc9e:	d012      	beq.n	800ccc6 <TIM_Base_SetConfig+0x2e>
 800cca0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800cca4:	d00f      	beq.n	800ccc6 <TIM_Base_SetConfig+0x2e>
 800cca6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ccaa:	4290      	cmp	r0, r2
 800ccac:	d00b      	beq.n	800ccc6 <TIM_Base_SetConfig+0x2e>
 800ccae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccb2:	4290      	cmp	r0, r2
 800ccb4:	d007      	beq.n	800ccc6 <TIM_Base_SetConfig+0x2e>
 800ccb6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccba:	4290      	cmp	r0, r2
 800ccbc:	d003      	beq.n	800ccc6 <TIM_Base_SetConfig+0x2e>
 800ccbe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ccc2:	4290      	cmp	r0, r2
 800ccc4:	d119      	bne.n	800ccfa <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 800ccc6:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800ccc8:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800cccc:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800ccce:	4a23      	ldr	r2, [pc, #140]	; (800cd5c <TIM_Base_SetConfig+0xc4>)
 800ccd0:	4290      	cmp	r0, r2
 800ccd2:	d029      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800ccd4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800ccd8:	d026      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800ccda:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800ccde:	4290      	cmp	r0, r2
 800cce0:	d022      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cce2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cce6:	4290      	cmp	r0, r2
 800cce8:	d01e      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800ccea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800ccee:	4290      	cmp	r0, r2
 800ccf0:	d01a      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800ccf2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800ccf6:	4290      	cmp	r0, r2
 800ccf8:	d016      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800ccfa:	4a19      	ldr	r2, [pc, #100]	; (800cd60 <TIM_Base_SetConfig+0xc8>)
 800ccfc:	4290      	cmp	r0, r2
 800ccfe:	d013      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cd00:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd04:	4290      	cmp	r0, r2
 800cd06:	d00f      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cd08:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd0c:	4290      	cmp	r0, r2
 800cd0e:	d00b      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cd10:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800cd14:	4290      	cmp	r0, r2
 800cd16:	d007      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cd18:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd1c:	4290      	cmp	r0, r2
 800cd1e:	d003      	beq.n	800cd28 <TIM_Base_SetConfig+0x90>
 800cd20:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800cd24:	4290      	cmp	r0, r2
 800cd26:	d103      	bne.n	800cd30 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd28:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800cd2a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800cd2e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800cd30:	694a      	ldr	r2, [r1, #20]
 800cd32:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800cd36:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 800cd38:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800cd3a:	688b      	ldr	r3, [r1, #8]
 800cd3c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800cd3e:	680b      	ldr	r3, [r1, #0]
 800cd40:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800cd42:	4b06      	ldr	r3, [pc, #24]	; (800cd5c <TIM_Base_SetConfig+0xc4>)
 800cd44:	4298      	cmp	r0, r3
 800cd46:	d003      	beq.n	800cd50 <TIM_Base_SetConfig+0xb8>
 800cd48:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800cd4c:	4298      	cmp	r0, r3
 800cd4e:	d101      	bne.n	800cd54 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800cd50:	690b      	ldr	r3, [r1, #16]
 800cd52:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800cd54:	2301      	movs	r3, #1
 800cd56:	6143      	str	r3, [r0, #20]
}
 800cd58:	4770      	bx	lr
 800cd5a:	bf00      	nop
 800cd5c:	40010000 	.word	0x40010000
 800cd60:	40014000 	.word	0x40014000

0800cd64 <HAL_TIM_Base_Init>:
{
 800cd64:	b510      	push	{r4, lr}
  if (htim == NULL)
 800cd66:	4604      	mov	r4, r0
 800cd68:	b330      	cbz	r0, 800cdb8 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800cd6a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800cd6e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800cd72:	b91b      	cbnz	r3, 800cd7c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800cd74:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 800cd78:	f7ff feac 	bl	800cad4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800cd7c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cd7e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 800cd80:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800cd84:	1d21      	adds	r1, r4, #4
 800cd86:	f7ff ff87 	bl	800cc98 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800cd8a:	2301      	movs	r3, #1
 800cd8c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 800cd90:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cd92:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 800cd96:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800cd9a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800cd9e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 800cda2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800cda6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800cdaa:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800cdae:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 800cdb2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 800cdb6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800cdb8:	2001      	movs	r0, #1
 800cdba:	e7fc      	b.n	800cdb6 <HAL_TIM_Base_Init+0x52>

0800cdbc <HAL_TIMEx_CommutCallback>:
 800cdbc:	4770      	bx	lr

0800cdbe <HAL_TIMEx_BreakCallback>:
 800cdbe:	4770      	bx	lr

0800cdc0 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800cdc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdc4:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cdc8:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdca:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 800cdce:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800cdd2:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800cdd6:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 800cdda:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800cddc:	b9a2      	cbnz	r2, 800ce08 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800cdde:	ea43 0209 	orr.w	r2, r3, r9
 800cde2:	432a      	orrs	r2, r5
 800cde4:	ea42 0308 	orr.w	r3, r2, r8
 800cde8:	6801      	ldr	r1, [r0, #0]
 800cdea:	ea43 030e 	orr.w	r3, r3, lr
 800cdee:	ea43 030c 	orr.w	r3, r3, ip
 800cdf2:	433b      	orrs	r3, r7
 800cdf4:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 800cdf8:	4333      	orrs	r3, r6
 800cdfa:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 800cdfe:	430b      	orrs	r3, r1
 800ce00:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800ce02:	2000      	movs	r0, #0
 800ce04:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800ce08:	6802      	ldr	r2, [r0, #0]
 800ce0a:	ea43 0309 	orr.w	r3, r3, r9
 800ce0e:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800ce12:	4313      	orrs	r3, r2
 800ce14:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800ce16:	ea45 0308 	orr.w	r3, r5, r8
 800ce1a:	6842      	ldr	r2, [r0, #4]
 800ce1c:	ea43 030e 	orr.w	r3, r3, lr
 800ce20:	ea43 030c 	orr.w	r3, r3, ip
 800ce24:	433b      	orrs	r3, r7
 800ce26:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 800ce2a:	4333      	orrs	r3, r6
 800ce2c:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 800ce30:	4313      	orrs	r3, r2
 800ce32:	6043      	str	r3, [r0, #4]
 800ce34:	e7e5      	b.n	800ce02 <FMC_SDRAM_Init+0x42>

0800ce36 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce36:	68cb      	ldr	r3, [r1, #12]
 800ce38:	f103 3cff 	add.w	ip, r3, #4294967295
 800ce3c:	694b      	ldr	r3, [r1, #20]
{
 800ce3e:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce40:	680f      	ldr	r7, [r1, #0]
 800ce42:	684c      	ldr	r4, [r1, #4]
 800ce44:	688e      	ldr	r6, [r1, #8]
 800ce46:	690d      	ldr	r5, [r1, #16]
 800ce48:	6989      	ldr	r1, [r1, #24]
 800ce4a:	3b01      	subs	r3, #1
 800ce4c:	051b      	lsls	r3, r3, #20
 800ce4e:	3c01      	subs	r4, #1
 800ce50:	3e01      	subs	r6, #1
 800ce52:	3d01      	subs	r5, #1
 800ce54:	3901      	subs	r1, #1
 800ce56:	3f01      	subs	r7, #1
 800ce58:	0124      	lsls	r4, r4, #4
 800ce5a:	0236      	lsls	r6, r6, #8
 800ce5c:	042d      	lsls	r5, r5, #16
 800ce5e:	0609      	lsls	r1, r1, #24
 800ce60:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800ce64:	b95a      	cbnz	r2, 800ce7e <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce66:	433b      	orrs	r3, r7
 800ce68:	4323      	orrs	r3, r4
 800ce6a:	6882      	ldr	r2, [r0, #8]
 800ce6c:	4333      	orrs	r3, r6
 800ce6e:	432b      	orrs	r3, r5
 800ce70:	430b      	orrs	r3, r1
 800ce72:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800ce76:	4313      	orrs	r3, r2
 800ce78:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 800ce7a:	2000      	movs	r0, #0
 800ce7c:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800ce7e:	6882      	ldr	r2, [r0, #8]
 800ce80:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 800ce84:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 800ce88:	431a      	orrs	r2, r3
 800ce8a:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800ce8c:	ea44 0306 	orr.w	r3, r4, r6
 800ce90:	68c2      	ldr	r2, [r0, #12]
 800ce92:	433b      	orrs	r3, r7
 800ce94:	432b      	orrs	r3, r5
 800ce96:	430b      	orrs	r3, r1
 800ce98:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 800ce9c:	4313      	orrs	r3, r2
 800ce9e:	60c3      	str	r3, [r0, #12]
 800cea0:	e7eb      	b.n	800ce7a <FMC_SDRAM_Timing_Init+0x44>

0800cea2 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 800cea2:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 800cea6:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 800ceaa:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 800ceae:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 800ceb2:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 800ceb4:	2300      	movs	r3, #0
 800ceb6:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 800ceb8:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 800ceba:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800cebc:	4618      	mov	r0, r3
 800cebe:	4770      	bx	lr

0800cec0 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800cec0:	b570      	push	{r4, r5, r6, lr}
 800cec2:	4604      	mov	r4, r0
 800cec4:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800cec6:	6902      	ldr	r2, [r0, #16]
 800cec8:	e9d1 3000 	ldrd	r3, r0, [r1]
 800cecc:	4303      	orrs	r3, r0
 800cece:	68c8      	ldr	r0, [r1, #12]
 800ced0:	0d92      	lsrs	r2, r2, #22
 800ced2:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800ced6:	0592      	lsls	r2, r2, #22
 800ced8:	4313      	orrs	r3, r2
 800ceda:	688a      	ldr	r2, [r1, #8]
 800cedc:	3a01      	subs	r2, #1
 800cede:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800cee2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800cee4:	f7fc ffde 	bl	8009ea4 <HAL_GetTick>
 800cee8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800ceea:	69a3      	ldr	r3, [r4, #24]
 800ceec:	f013 0320 	ands.w	r3, r3, #32
 800cef0:	d101      	bne.n	800cef6 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800cef2:	4618      	mov	r0, r3
 800cef4:	e003      	b.n	800cefe <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800cef6:	1c6b      	adds	r3, r5, #1
 800cef8:	d0f7      	beq.n	800ceea <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cefa:	b90d      	cbnz	r5, 800cf00 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 800cefc:	2003      	movs	r0, #3
}
 800cefe:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 800cf00:	f7fc ffd0 	bl	8009ea4 <HAL_GetTick>
 800cf04:	1b80      	subs	r0, r0, r6
 800cf06:	42a8      	cmp	r0, r5
 800cf08:	d9ef      	bls.n	800ceea <FMC_SDRAM_SendCommand+0x2a>
 800cf0a:	e7f7      	b.n	800cefc <FMC_SDRAM_SendCommand+0x3c>

0800cf0c <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800cf0c:	6943      	ldr	r3, [r0, #20]
 800cf0e:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800cf12:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800cf16:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 800cf1a:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 800cf1c:	2000      	movs	r0, #0
 800cf1e:	4770      	bx	lr

0800cf20 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 800cf20:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800cf22:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800cf26:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 800cf28:	f001 fe3c 	bl	800eba4 <xTaskGetSchedulerState>
 800cf2c:	2801      	cmp	r0, #1
 800cf2e:	d003      	beq.n	800cf38 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 800cf30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800cf34:	f000 bbde 	b.w	800d6f4 <xPortSysTickHandler>
}
 800cf38:	bd08      	pop	{r3, pc}
	...

0800cf3c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800cf3c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf40:	b92b      	cbnz	r3, 800cf4e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800cf42:	4b06      	ldr	r3, [pc, #24]	; (800cf5c <osKernelInitialize+0x20>)
 800cf44:	6818      	ldr	r0, [r3, #0]
 800cf46:	b928      	cbnz	r0, 800cf54 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 800cf48:	2201      	movs	r2, #1
 800cf4a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 800cf4c:	4770      	bx	lr
    stat = osErrorISR;
 800cf4e:	f06f 0005 	mvn.w	r0, #5
 800cf52:	4770      	bx	lr
    } else {
      stat = osError;
 800cf54:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 800cf58:	4770      	bx	lr
 800cf5a:	bf00      	nop
 800cf5c:	2000641c 	.word	0x2000641c

0800cf60 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 800cf60:	b510      	push	{r4, lr}
 800cf62:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800cf66:	b95c      	cbnz	r4, 800cf80 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 800cf68:	4b08      	ldr	r3, [pc, #32]	; (800cf8c <osKernelStart+0x2c>)
 800cf6a:	681a      	ldr	r2, [r3, #0]
 800cf6c:	2a01      	cmp	r2, #1
 800cf6e:	d10a      	bne.n	800cf86 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800cf70:	4a07      	ldr	r2, [pc, #28]	; (800cf90 <osKernelStart+0x30>)
 800cf72:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800cf74:	2202      	movs	r2, #2
 800cf76:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 800cf78:	f001 fcb8 	bl	800e8ec <vTaskStartScheduler>
      stat = osOK;
 800cf7c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 800cf7e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800cf80:	f06f 0005 	mvn.w	r0, #5
 800cf84:	e7fb      	b.n	800cf7e <osKernelStart+0x1e>
      stat = osError;
 800cf86:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 800cf8a:	e7f8      	b.n	800cf7e <osKernelStart+0x1e>
 800cf8c:	2000641c 	.word	0x2000641c
 800cf90:	e000ed00 	.word	0xe000ed00

0800cf94 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf94:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cf96:	b087      	sub	sp, #28
 800cf98:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800cf9a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800cf9c:	460b      	mov	r3, r1
  hTask = NULL;
 800cf9e:	9205      	str	r2, [sp, #20]
 800cfa0:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800cfa4:	b9d2      	cbnz	r2, 800cfdc <osThreadNew+0x48>
 800cfa6:	b1c8      	cbz	r0, 800cfdc <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800cfa8:	2c00      	cmp	r4, #0
 800cfaa:	d02f      	beq.n	800d00c <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 800cfac:	69a5      	ldr	r5, [r4, #24]
 800cfae:	2d00      	cmp	r5, #0
 800cfb0:	bf08      	it	eq
 800cfb2:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800cfb4:	1e69      	subs	r1, r5, #1
 800cfb6:	2937      	cmp	r1, #55	; 0x37
 800cfb8:	46ac      	mov	ip, r5
 800cfba:	d82b      	bhi.n	800d014 <osThreadNew+0x80>
 800cfbc:	6861      	ldr	r1, [r4, #4]
 800cfbe:	07c9      	lsls	r1, r1, #31
 800cfc0:	d428      	bmi.n	800d014 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800cfc2:	6966      	ldr	r6, [r4, #20]
 800cfc4:	b16e      	cbz	r6, 800cfe2 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800cfc6:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfc8:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 800cfcc:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfce:	b157      	cbz	r7, 800cfe6 <osThreadNew+0x52>
 800cfd0:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800cfd4:	d902      	bls.n	800cfdc <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfd6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800cfd8:	b104      	cbz	r4, 800cfdc <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800cfda:	b9ee      	cbnz	r6, 800d018 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 800cfdc:	9805      	ldr	r0, [sp, #20]
}
 800cfde:	b007      	add	sp, #28
 800cfe0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800cfe2:	2280      	movs	r2, #128	; 0x80
 800cfe4:	e7f0      	b.n	800cfc8 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800cfe6:	f1be 0f00 	cmp.w	lr, #0
 800cfea:	d1f7      	bne.n	800cfdc <osThreadNew+0x48>
      if (mem == 0) {
 800cfec:	6924      	ldr	r4, [r4, #16]
 800cfee:	2c00      	cmp	r4, #0
 800cff0:	d1f4      	bne.n	800cfdc <osThreadNew+0x48>
 800cff2:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800cff4:	a905      	add	r1, sp, #20
 800cff6:	e9cd c100 	strd	ip, r1, [sp]
 800cffa:	b292      	uxth	r2, r2
 800cffc:	4621      	mov	r1, r4
 800cffe:	f001 faf0 	bl	800e5e2 <xTaskCreate>
 800d002:	2801      	cmp	r0, #1
            hTask = NULL;
 800d004:	bf1c      	itt	ne
 800d006:	2300      	movne	r3, #0
 800d008:	9305      	strne	r3, [sp, #20]
 800d00a:	e7e7      	b.n	800cfdc <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 800d00c:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 800d010:	2280      	movs	r2, #128	; 0x80
 800d012:	e7ef      	b.n	800cff4 <osThreadNew+0x60>
        return (NULL);
 800d014:	4610      	mov	r0, r2
 800d016:	e7e2      	b.n	800cfde <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800d018:	e9cd 4701 	strd	r4, r7, [sp, #4]
 800d01c:	9500      	str	r5, [sp, #0]
 800d01e:	f001 faa8 	bl	800e572 <xTaskCreateStatic>
 800d022:	9005      	str	r0, [sp, #20]
 800d024:	e7da      	b.n	800cfdc <osThreadNew+0x48>

0800d026 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800d026:	b510      	push	{r4, lr}
 800d028:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800d02c:	b924      	cbnz	r4, 800d038 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800d02e:	b110      	cbz	r0, 800d036 <osDelay+0x10>
      vTaskDelay(ticks);
 800d030:	f001 fc1c 	bl	800e86c <vTaskDelay>
    stat = osOK;
 800d034:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800d036:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 800d038:	f06f 0005 	mvn.w	r0, #5
 800d03c:	e7fb      	b.n	800d036 <osDelay+0x10>

0800d03e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800d03e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d040:	4604      	mov	r4, r0
 800d042:	460e      	mov	r6, r1
 800d044:	4615      	mov	r5, r2
 800d046:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d04a:	b11a      	cbz	r2, 800d054 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800d04c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800d04e:	4620      	mov	r0, r4
 800d050:	b003      	add	sp, #12
 800d052:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800d054:	2800      	cmp	r0, #0
 800d056:	d0f9      	beq.n	800d04c <osSemaphoreNew+0xe>
 800d058:	4288      	cmp	r0, r1
 800d05a:	d3f7      	bcc.n	800d04c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800d05c:	b1e5      	cbz	r5, 800d098 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800d05e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800d062:	b1bb      	cbz	r3, 800d094 <osSemaphoreNew+0x56>
 800d064:	2f4f      	cmp	r7, #79	; 0x4f
 800d066:	d9f1      	bls.n	800d04c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d068:	2801      	cmp	r0, #1
 800d06a:	d12a      	bne.n	800d0c2 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800d06c:	2103      	movs	r1, #3
 800d06e:	9100      	str	r1, [sp, #0]
 800d070:	4611      	mov	r1, r2
 800d072:	f000 fce8 	bl	800da46 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 800d076:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 800d078:	2800      	cmp	r0, #0
 800d07a:	d0e7      	beq.n	800d04c <osSemaphoreNew+0xe>
 800d07c:	b1de      	cbz	r6, 800d0b6 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d07e:	2300      	movs	r3, #0
 800d080:	461a      	mov	r2, r3
 800d082:	4619      	mov	r1, r3
 800d084:	f000 fd94 	bl	800dbb0 <xQueueGenericSend>
 800d088:	2801      	cmp	r0, #1
 800d08a:	d014      	beq.n	800d0b6 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800d08c:	4620      	mov	r0, r4
 800d08e:	f001 f8cf 	bl	800e230 <vQueueDelete>
 800d092:	e7db      	b.n	800d04c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800d094:	2f00      	cmp	r7, #0
 800d096:	d1d9      	bne.n	800d04c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 800d098:	2c01      	cmp	r4, #1
 800d09a:	d105      	bne.n	800d0a8 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800d09c:	2203      	movs	r2, #3
 800d09e:	2100      	movs	r1, #0
 800d0a0:	4620      	mov	r0, r4
 800d0a2:	f000 fd1e 	bl	800dae2 <xQueueGenericCreate>
 800d0a6:	e7e6      	b.n	800d076 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 800d0a8:	4620      	mov	r0, r4
 800d0aa:	4631      	mov	r1, r6
 800d0ac:	f000 fd62 	bl	800db74 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800d0b0:	4604      	mov	r4, r0
 800d0b2:	2800      	cmp	r0, #0
 800d0b4:	d0ca      	beq.n	800d04c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 800d0b6:	b955      	cbnz	r5, 800d0ce <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 800d0b8:	4629      	mov	r1, r5
 800d0ba:	4620      	mov	r0, r4
 800d0bc:	f001 f892 	bl	800e1e4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800d0c0:	e7c5      	b.n	800d04e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800d0c2:	461a      	mov	r2, r3
 800d0c4:	f000 fd34 	bl	800db30 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 800d0c8:	4604      	mov	r4, r0
 800d0ca:	2800      	cmp	r0, #0
 800d0cc:	d0be      	beq.n	800d04c <osSemaphoreNew+0xe>
          name = attr->name;
 800d0ce:	682d      	ldr	r5, [r5, #0]
 800d0d0:	e7f2      	b.n	800d0b8 <osSemaphoreNew+0x7a>

0800d0d2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800d0d2:	b513      	push	{r0, r1, r4, lr}
 800d0d4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d0d6:	b308      	cbz	r0, 800d11c <osSemaphoreAcquire+0x4a>
 800d0d8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d0dc:	b1b3      	cbz	r3, 800d10c <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 800d0de:	b9e9      	cbnz	r1, 800d11c <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0e0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d0e2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800d0e4:	f001 f82f 	bl	800e146 <xQueueReceiveFromISR>
 800d0e8:	2801      	cmp	r0, #1
 800d0ea:	d114      	bne.n	800d116 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d0ec:	9b01      	ldr	r3, [sp, #4]
 800d0ee:	b913      	cbnz	r3, 800d0f6 <osSemaphoreAcquire+0x24>
  stat = osOK;
 800d0f0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d0f2:	b002      	add	sp, #8
 800d0f4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800d0f6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d0fa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d0fe:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d102:	f3bf 8f4f 	dsb	sy
 800d106:	f3bf 8f6f 	isb	sy
 800d10a:	e7f1      	b.n	800d0f0 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 800d10c:	f000 ff58 	bl	800dfc0 <xQueueSemaphoreTake>
 800d110:	2801      	cmp	r0, #1
 800d112:	d0ed      	beq.n	800d0f0 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800d114:	b92c      	cbnz	r4, 800d122 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800d116:	f06f 0002 	mvn.w	r0, #2
 800d11a:	e7ea      	b.n	800d0f2 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 800d11c:	f06f 0003 	mvn.w	r0, #3
 800d120:	e7e7      	b.n	800d0f2 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800d122:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d126:	e7e4      	b.n	800d0f2 <osSemaphoreAcquire+0x20>

0800d128 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 800d128:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800d12a:	b310      	cbz	r0, 800d172 <osSemaphoreRelease+0x4a>
 800d12c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 800d130:	b1b3      	cbz	r3, 800d160 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800d132:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d134:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800d136:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800d138:	f000 fe4f 	bl	800ddda <xQueueGiveFromISR>
 800d13c:	2801      	cmp	r0, #1
 800d13e:	d115      	bne.n	800d16c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 800d140:	9b01      	ldr	r3, [sp, #4]
 800d142:	b913      	cbnz	r3, 800d14a <osSemaphoreRelease+0x22>
  stat = osOK;
 800d144:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800d146:	b002      	add	sp, #8
 800d148:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800d14a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d14e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d152:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d156:	f3bf 8f4f 	dsb	sy
 800d15a:	f3bf 8f6f 	isb	sy
 800d15e:	e7f1      	b.n	800d144 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800d160:	461a      	mov	r2, r3
 800d162:	4619      	mov	r1, r3
 800d164:	f000 fd24 	bl	800dbb0 <xQueueGenericSend>
 800d168:	2801      	cmp	r0, #1
 800d16a:	d0eb      	beq.n	800d144 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800d16c:	f06f 0002 	mvn.w	r0, #2
 800d170:	e7e9      	b.n	800d146 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800d172:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800d176:	e7e6      	b.n	800d146 <osSemaphoreRelease+0x1e>

0800d178 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 800d178:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d17a:	4605      	mov	r5, r0
 800d17c:	460e      	mov	r6, r1
 800d17e:	4614      	mov	r4, r2
 800d180:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d184:	b11f      	cbz	r7, 800d18e <osMessageQueueNew+0x16>
  hQueue = NULL;
 800d186:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800d188:	4628      	mov	r0, r5
 800d18a:	b003      	add	sp, #12
 800d18c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800d18e:	2800      	cmp	r0, #0
 800d190:	d0f9      	beq.n	800d186 <osMessageQueueNew+0xe>
 800d192:	2900      	cmp	r1, #0
 800d194:	d0f7      	beq.n	800d186 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 800d196:	b1da      	cbz	r2, 800d1d0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d198:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800d19c:	b183      	cbz	r3, 800d1c0 <osMessageQueueNew+0x48>
 800d19e:	2a4f      	cmp	r2, #79	; 0x4f
 800d1a0:	d9f1      	bls.n	800d186 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d1a2:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800d1a4:	2a00      	cmp	r2, #0
 800d1a6:	d0ee      	beq.n	800d186 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800d1a8:	6966      	ldr	r6, [r4, #20]
 800d1aa:	434d      	muls	r5, r1
 800d1ac:	42ae      	cmp	r6, r5
 800d1ae:	d3ea      	bcc.n	800d186 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 800d1b0:	9700      	str	r7, [sp, #0]
 800d1b2:	f000 fc48 	bl	800da46 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 800d1b6:	4605      	mov	r5, r0
 800d1b8:	2800      	cmp	r0, #0
 800d1ba:	d0e4      	beq.n	800d186 <osMessageQueueNew+0xe>
        name = attr->name;
 800d1bc:	6824      	ldr	r4, [r4, #0]
 800d1be:	e011      	b.n	800d1e4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 800d1c0:	2a00      	cmp	r2, #0
 800d1c2:	d1e0      	bne.n	800d186 <osMessageQueueNew+0xe>
 800d1c4:	6923      	ldr	r3, [r4, #16]
 800d1c6:	2b00      	cmp	r3, #0
 800d1c8:	d1dd      	bne.n	800d186 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800d1ca:	6963      	ldr	r3, [r4, #20]
 800d1cc:	2b00      	cmp	r3, #0
 800d1ce:	d1da      	bne.n	800d186 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 800d1d0:	4628      	mov	r0, r5
 800d1d2:	2200      	movs	r2, #0
 800d1d4:	4631      	mov	r1, r6
 800d1d6:	f000 fc84 	bl	800dae2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 800d1da:	4605      	mov	r5, r0
 800d1dc:	2800      	cmp	r0, #0
 800d1de:	d0d2      	beq.n	800d186 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 800d1e0:	2c00      	cmp	r4, #0
 800d1e2:	d1eb      	bne.n	800d1bc <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 800d1e4:	4621      	mov	r1, r4
 800d1e6:	4628      	mov	r0, r5
 800d1e8:	f000 fffc 	bl	800e1e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 800d1ec:	e7cc      	b.n	800d188 <osMessageQueueNew+0x10>

0800d1ee <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 800d1ee:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d1f0:	461c      	mov	r4, r3
 800d1f2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d1f6:	b1c6      	cbz	r6, 800d22a <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d1f8:	b318      	cbz	r0, 800d242 <osMessageQueuePut+0x54>
 800d1fa:	b311      	cbz	r1, 800d242 <osMessageQueuePut+0x54>
 800d1fc:	bb0b      	cbnz	r3, 800d242 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d1fe:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d200:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800d202:	f000 fd88 	bl	800dd16 <xQueueGenericSendFromISR>
 800d206:	2801      	cmp	r0, #1
 800d208:	d118      	bne.n	800d23c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d20a:	9b01      	ldr	r3, [sp, #4]
 800d20c:	b913      	cbnz	r3, 800d214 <osMessageQueuePut+0x26>
  stat = osOK;
 800d20e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d210:	b002      	add	sp, #8
 800d212:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 800d214:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d218:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d21c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d220:	f3bf 8f4f 	dsb	sy
 800d224:	f3bf 8f6f 	isb	sy
 800d228:	e7f1      	b.n	800d20e <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d22a:	b150      	cbz	r0, 800d242 <osMessageQueuePut+0x54>
 800d22c:	b149      	cbz	r1, 800d242 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d22e:	4633      	mov	r3, r6
 800d230:	4622      	mov	r2, r4
 800d232:	f000 fcbd 	bl	800dbb0 <xQueueGenericSend>
 800d236:	2801      	cmp	r0, #1
 800d238:	d0e9      	beq.n	800d20e <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800d23a:	b92c      	cbnz	r4, 800d248 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800d23c:	f06f 0002 	mvn.w	r0, #2
 800d240:	e7e6      	b.n	800d210 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 800d242:	f06f 0003 	mvn.w	r0, #3
 800d246:	e7e3      	b.n	800d210 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 800d248:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d24c:	e7e0      	b.n	800d210 <osMessageQueuePut+0x22>

0800d24e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800d24e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d250:	461c      	mov	r4, r3
 800d252:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 800d256:	b1c3      	cbz	r3, 800d28a <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800d258:	b310      	cbz	r0, 800d2a0 <osMessageQueueGet+0x52>
 800d25a:	b309      	cbz	r1, 800d2a0 <osMessageQueueGet+0x52>
 800d25c:	bb04      	cbnz	r4, 800d2a0 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d25e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800d260:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800d262:	f000 ff70 	bl	800e146 <xQueueReceiveFromISR>
 800d266:	2801      	cmp	r0, #1
 800d268:	d117      	bne.n	800d29a <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800d26a:	9b01      	ldr	r3, [sp, #4]
 800d26c:	b913      	cbnz	r3, 800d274 <osMessageQueueGet+0x26>
  stat = osOK;
 800d26e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800d270:	b003      	add	sp, #12
 800d272:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 800d274:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d278:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d27c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800d280:	f3bf 8f4f 	dsb	sy
 800d284:	f3bf 8f6f 	isb	sy
 800d288:	e7f1      	b.n	800d26e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800d28a:	b148      	cbz	r0, 800d2a0 <osMessageQueueGet+0x52>
 800d28c:	b141      	cbz	r1, 800d2a0 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800d28e:	4622      	mov	r2, r4
 800d290:	f000 fdf7 	bl	800de82 <xQueueReceive>
 800d294:	2801      	cmp	r0, #1
 800d296:	d0ea      	beq.n	800d26e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 800d298:	b92c      	cbnz	r4, 800d2a6 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800d29a:	f06f 0002 	mvn.w	r0, #2
 800d29e:	e7e7      	b.n	800d270 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800d2a0:	f06f 0003 	mvn.w	r0, #3
 800d2a4:	e7e4      	b.n	800d270 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 800d2a6:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800d2aa:	e7e1      	b.n	800d270 <osMessageQueueGet+0x22>

0800d2ac <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800d2ac:	4b03      	ldr	r3, [pc, #12]	; (800d2bc <vApplicationGetIdleTaskMemory+0x10>)
 800d2ae:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 800d2b0:	4b03      	ldr	r3, [pc, #12]	; (800d2c0 <vApplicationGetIdleTaskMemory+0x14>)
 800d2b2:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 800d2b4:	2380      	movs	r3, #128	; 0x80
 800d2b6:	6013      	str	r3, [r2, #0]
}
 800d2b8:	4770      	bx	lr
 800d2ba:	bf00      	nop
 800d2bc:	200063bc 	.word	0x200063bc
 800d2c0:	200061bc 	.word	0x200061bc

0800d2c4 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 800d2c4:	4b03      	ldr	r3, [pc, #12]	; (800d2d4 <vApplicationGetTimerTaskMemory+0x10>)
 800d2c6:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800d2c8:	4b03      	ldr	r3, [pc, #12]	; (800d2d8 <vApplicationGetTimerTaskMemory+0x14>)
 800d2ca:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800d2cc:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d2d0:	6013      	str	r3, [r2, #0]
}
 800d2d2:	4770      	bx	lr
 800d2d4:	20006820 	.word	0x20006820
 800d2d8:	20006420 	.word	0x20006420

0800d2dc <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 800d2dc:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 800d2de:	4b0f      	ldr	r3, [pc, #60]	; (800d31c <prvInsertBlockIntoFreeList+0x40>)
 800d2e0:	461a      	mov	r2, r3
 800d2e2:	681b      	ldr	r3, [r3, #0]
 800d2e4:	4283      	cmp	r3, r0
 800d2e6:	d3fb      	bcc.n	800d2e0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800d2e8:	6854      	ldr	r4, [r2, #4]
 800d2ea:	1911      	adds	r1, r2, r4
 800d2ec:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 800d2ee:	bf01      	itttt	eq
 800d2f0:	6841      	ldreq	r1, [r0, #4]
 800d2f2:	4610      	moveq	r0, r2
 800d2f4:	1909      	addeq	r1, r1, r4
 800d2f6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800d2f8:	6844      	ldr	r4, [r0, #4]
 800d2fa:	1901      	adds	r1, r0, r4
 800d2fc:	428b      	cmp	r3, r1
 800d2fe:	d107      	bne.n	800d310 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 800d300:	4907      	ldr	r1, [pc, #28]	; (800d320 <prvInsertBlockIntoFreeList+0x44>)
 800d302:	6809      	ldr	r1, [r1, #0]
 800d304:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d306:	bf1f      	itttt	ne
 800d308:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800d30a:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800d30c:	1909      	addne	r1, r1, r4
 800d30e:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 800d310:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 800d312:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 800d314:	bf18      	it	ne
 800d316:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800d318:	bd10      	pop	{r4, pc}
 800d31a:	bf00      	nop
 800d31c:	2000e898 	.word	0x2000e898
 800d320:	20006880 	.word	0x20006880

0800d324 <pvPortMalloc>:
{
 800d324:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d328:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800d32a:	f001 f987 	bl	800e63c <vTaskSuspendAll>
		if( pxEnd == NULL )
 800d32e:	4842      	ldr	r0, [pc, #264]	; (800d438 <pvPortMalloc+0x114>)
 800d330:	4d42      	ldr	r5, [pc, #264]	; (800d43c <pvPortMalloc+0x118>)
 800d332:	6803      	ldr	r3, [r0, #0]
 800d334:	bb0b      	cbnz	r3, 800d37a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800d336:	4942      	ldr	r1, [pc, #264]	; (800d440 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800d338:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800d33a:	bf1f      	itttt	ne
 800d33c:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d33e:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 800d342:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 800d346:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d348:	bf14      	ite	ne
 800d34a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800d34c:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 800d350:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d352:	4e3c      	ldr	r6, [pc, #240]	; (800d444 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 800d354:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800d356:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800d35a:	2300      	movs	r3, #0
 800d35c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800d35e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 800d360:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 800d364:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 800d366:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800d36a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d36c:	4a36      	ldr	r2, [pc, #216]	; (800d448 <pvPortMalloc+0x124>)
 800d36e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800d370:	4a36      	ldr	r2, [pc, #216]	; (800d44c <pvPortMalloc+0x128>)
 800d372:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 800d374:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800d378:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800d37a:	682f      	ldr	r7, [r5, #0]
 800d37c:	4227      	tst	r7, r4
 800d37e:	d155      	bne.n	800d42c <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 800d380:	2c00      	cmp	r4, #0
 800d382:	d046      	beq.n	800d412 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 800d384:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 800d388:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800d38a:	bf1c      	itt	ne
 800d38c:	f023 0307 	bicne.w	r3, r3, #7
 800d390:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 800d392:	2b00      	cmp	r3, #0
 800d394:	d04a      	beq.n	800d42c <pvPortMalloc+0x108>
 800d396:	4c2d      	ldr	r4, [pc, #180]	; (800d44c <pvPortMalloc+0x128>)
 800d398:	6826      	ldr	r6, [r4, #0]
 800d39a:	429e      	cmp	r6, r3
 800d39c:	d346      	bcc.n	800d42c <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800d39e:	4a29      	ldr	r2, [pc, #164]	; (800d444 <pvPortMalloc+0x120>)
 800d3a0:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 800d3a2:	6869      	ldr	r1, [r5, #4]
 800d3a4:	4299      	cmp	r1, r3
 800d3a6:	d204      	bcs.n	800d3b2 <pvPortMalloc+0x8e>
 800d3a8:	f8d5 c000 	ldr.w	ip, [r5]
 800d3ac:	f1bc 0f00 	cmp.w	ip, #0
 800d3b0:	d115      	bne.n	800d3de <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 800d3b2:	6800      	ldr	r0, [r0, #0]
 800d3b4:	42a8      	cmp	r0, r5
 800d3b6:	d039      	beq.n	800d42c <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3b8:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d3ba:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d3bc:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800d3c0:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 800d3c2:	2910      	cmp	r1, #16
 800d3c4:	d912      	bls.n	800d3ec <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 800d3c6:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 800d3c8:	0742      	lsls	r2, r0, #29
 800d3ca:	d00b      	beq.n	800d3e4 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800d3cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d3d0:	f383 8811 	msr	BASEPRI, r3
 800d3d4:	f3bf 8f6f 	isb	sy
 800d3d8:	f3bf 8f4f 	dsb	sy
 800d3dc:	e7fe      	b.n	800d3dc <pvPortMalloc+0xb8>
 800d3de:	462a      	mov	r2, r5
 800d3e0:	4665      	mov	r5, ip
 800d3e2:	e7de      	b.n	800d3a2 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 800d3e4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 800d3e6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 800d3e8:	f7ff ff78 	bl	800d2dc <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3ec:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3ee:	4916      	ldr	r1, [pc, #88]	; (800d448 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 800d3f0:	4a17      	ldr	r2, [pc, #92]	; (800d450 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d3f2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3f4:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d3f6:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 800d3f8:	2300      	movs	r3, #0
 800d3fa:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 800d3fc:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 800d3fe:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 800d400:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 800d402:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 800d406:	bf38      	it	cc
 800d408:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800d40a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 800d40e:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 800d410:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 800d412:	f001 f9b7 	bl	800e784 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 800d416:	0763      	lsls	r3, r4, #29
 800d418:	d00a      	beq.n	800d430 <pvPortMalloc+0x10c>
 800d41a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d41e:	f383 8811 	msr	BASEPRI, r3
 800d422:	f3bf 8f6f 	isb	sy
 800d426:	f3bf 8f4f 	dsb	sy
 800d42a:	e7fe      	b.n	800d42a <pvPortMalloc+0x106>
void *pvReturn = NULL;
 800d42c:	2400      	movs	r4, #0
 800d42e:	e7f0      	b.n	800d412 <pvPortMalloc+0xee>
}
 800d430:	4620      	mov	r0, r4
 800d432:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d436:	bf00      	nop
 800d438:	20006880 	.word	0x20006880
 800d43c:	2000e884 	.word	0x2000e884
 800d440:	20006884 	.word	0x20006884
 800d444:	2000e898 	.word	0x2000e898
 800d448:	2000e88c 	.word	0x2000e88c
 800d44c:	2000e888 	.word	0x2000e888
 800d450:	2000e890 	.word	0x2000e890

0800d454 <vPortFree>:
{
 800d454:	b510      	push	{r4, lr}
	if( pv != NULL )
 800d456:	4604      	mov	r4, r0
 800d458:	b390      	cbz	r0, 800d4c0 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800d45a:	4a1a      	ldr	r2, [pc, #104]	; (800d4c4 <vPortFree+0x70>)
 800d45c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 800d460:	6812      	ldr	r2, [r2, #0]
 800d462:	4213      	tst	r3, r2
 800d464:	d108      	bne.n	800d478 <vPortFree+0x24>
 800d466:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d46a:	f383 8811 	msr	BASEPRI, r3
 800d46e:	f3bf 8f6f 	isb	sy
 800d472:	f3bf 8f4f 	dsb	sy
 800d476:	e7fe      	b.n	800d476 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 800d478:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800d47c:	b141      	cbz	r1, 800d490 <vPortFree+0x3c>
 800d47e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d482:	f383 8811 	msr	BASEPRI, r3
 800d486:	f3bf 8f6f 	isb	sy
 800d48a:	f3bf 8f4f 	dsb	sy
 800d48e:	e7fe      	b.n	800d48e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 800d490:	ea23 0302 	bic.w	r3, r3, r2
 800d494:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 800d498:	f001 f8d0 	bl	800e63c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d49c:	4a0a      	ldr	r2, [pc, #40]	; (800d4c8 <vPortFree+0x74>)
 800d49e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800d4a2:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d4a4:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 800d4a8:	440b      	add	r3, r1
 800d4aa:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800d4ac:	f7ff ff16 	bl	800d2dc <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 800d4b0:	4a06      	ldr	r2, [pc, #24]	; (800d4cc <vPortFree+0x78>)
 800d4b2:	6813      	ldr	r3, [r2, #0]
}
 800d4b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 800d4b8:	3301      	adds	r3, #1
 800d4ba:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800d4bc:	f001 b962 	b.w	800e784 <xTaskResumeAll>
}
 800d4c0:	bd10      	pop	{r4, pc}
 800d4c2:	bf00      	nop
 800d4c4:	2000e884 	.word	0x2000e884
 800d4c8:	2000e888 	.word	0x2000e888
 800d4cc:	2000e894 	.word	0x2000e894

0800d4d0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4d0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 800d4d4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4dc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 800d4de:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 800d4e0:	2300      	movs	r3, #0
 800d4e2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 800d4e4:	4770      	bx	lr

0800d4e6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 800d4e6:	2300      	movs	r3, #0
 800d4e8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 800d4ea:	4770      	bx	lr

0800d4ec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 800d4ec:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 800d4ee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 800d4f0:	689a      	ldr	r2, [r3, #8]
 800d4f2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 800d4f4:	689a      	ldr	r2, [r3, #8]
 800d4f6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 800d4f8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d4fa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d4fc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d4fe:	3301      	adds	r3, #1
 800d500:	6003      	str	r3, [r0, #0]
}
 800d502:	4770      	bx	lr

0800d504 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 800d504:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 800d506:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 800d508:	1c63      	adds	r3, r4, #1
 800d50a:	d10a      	bne.n	800d522 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 800d50c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 800d50e:	685a      	ldr	r2, [r3, #4]
 800d510:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 800d512:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 800d514:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 800d516:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 800d518:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 800d51a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 800d51c:	3301      	adds	r3, #1
 800d51e:	6003      	str	r3, [r0, #0]
}
 800d520:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 800d522:	f100 0208 	add.w	r2, r0, #8
 800d526:	4613      	mov	r3, r2
 800d528:	6852      	ldr	r2, [r2, #4]
 800d52a:	6815      	ldr	r5, [r2, #0]
 800d52c:	42a5      	cmp	r5, r4
 800d52e:	d9fa      	bls.n	800d526 <vListInsert+0x22>
 800d530:	e7ed      	b.n	800d50e <vListInsert+0xa>

0800d532 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d532:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 800d536:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 800d538:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800d53a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800d53c:	6859      	ldr	r1, [r3, #4]
 800d53e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 800d540:	bf08      	it	eq
 800d542:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 800d544:	2200      	movs	r2, #0
 800d546:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 800d548:	681a      	ldr	r2, [r3, #0]
 800d54a:	3a01      	subs	r2, #1
 800d54c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800d54e:	6818      	ldr	r0, [r3, #0]
}
 800d550:	4770      	bx	lr
	...

0800d554 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 800d554:	4808      	ldr	r0, [pc, #32]	; (800d578 <prvPortStartFirstTask+0x24>)
 800d556:	6800      	ldr	r0, [r0, #0]
 800d558:	6800      	ldr	r0, [r0, #0]
 800d55a:	f380 8808 	msr	MSP, r0
 800d55e:	f04f 0000 	mov.w	r0, #0
 800d562:	f380 8814 	msr	CONTROL, r0
 800d566:	b662      	cpsie	i
 800d568:	b661      	cpsie	f
 800d56a:	f3bf 8f4f 	dsb	sy
 800d56e:	f3bf 8f6f 	isb	sy
 800d572:	df00      	svc	0
 800d574:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 800d576:	0000      	.short	0x0000
 800d578:	e000ed08 	.word	0xe000ed08

0800d57c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800d57c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800d58c <vPortEnableVFP+0x10>
 800d580:	6801      	ldr	r1, [r0, #0]
 800d582:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800d586:	6001      	str	r1, [r0, #0]
 800d588:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800d58a:	0000      	.short	0x0000
 800d58c:	e000ed88 	.word	0xe000ed88

0800d590 <prvTaskExitError>:
{
 800d590:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 800d592:	2300      	movs	r3, #0
 800d594:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 800d596:	4b0d      	ldr	r3, [pc, #52]	; (800d5cc <prvTaskExitError+0x3c>)
 800d598:	681b      	ldr	r3, [r3, #0]
 800d59a:	3301      	adds	r3, #1
 800d59c:	d008      	beq.n	800d5b0 <prvTaskExitError+0x20>
 800d59e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5a2:	f383 8811 	msr	BASEPRI, r3
 800d5a6:	f3bf 8f6f 	isb	sy
 800d5aa:	f3bf 8f4f 	dsb	sy
 800d5ae:	e7fe      	b.n	800d5ae <prvTaskExitError+0x1e>
 800d5b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d5b4:	f383 8811 	msr	BASEPRI, r3
 800d5b8:	f3bf 8f6f 	isb	sy
 800d5bc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 800d5c0:	9b01      	ldr	r3, [sp, #4]
 800d5c2:	2b00      	cmp	r3, #0
 800d5c4:	d0fc      	beq.n	800d5c0 <prvTaskExitError+0x30>
}
 800d5c6:	b002      	add	sp, #8
 800d5c8:	4770      	bx	lr
 800d5ca:	bf00      	nop
 800d5cc:	2000005c 	.word	0x2000005c

0800d5d0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 800d5d0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 800d5d4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 800d5d8:	4b07      	ldr	r3, [pc, #28]	; (800d5f8 <pxPortInitialiseStack+0x28>)
 800d5da:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5de:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5e2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 800d5e6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 800d5ea:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 800d5ee:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800d5f2:	3844      	subs	r0, #68	; 0x44
 800d5f4:	4770      	bx	lr
 800d5f6:	bf00      	nop
 800d5f8:	0800d591 	.word	0x0800d591
 800d5fc:	00000000 	.word	0x00000000

0800d600 <SVC_Handler>:
	__asm volatile (
 800d600:	4b07      	ldr	r3, [pc, #28]	; (800d620 <pxCurrentTCBConst2>)
 800d602:	6819      	ldr	r1, [r3, #0]
 800d604:	6808      	ldr	r0, [r1, #0]
 800d606:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d60a:	f380 8809 	msr	PSP, r0
 800d60e:	f3bf 8f6f 	isb	sy
 800d612:	f04f 0000 	mov.w	r0, #0
 800d616:	f380 8811 	msr	BASEPRI, r0
 800d61a:	4770      	bx	lr
 800d61c:	f3af 8000 	nop.w

0800d620 <pxCurrentTCBConst2>:
 800d620:	2000e8e8 	.word	0x2000e8e8

0800d624 <vPortEnterCritical>:
 800d624:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d628:	f383 8811 	msr	BASEPRI, r3
 800d62c:	f3bf 8f6f 	isb	sy
 800d630:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 800d634:	4a0a      	ldr	r2, [pc, #40]	; (800d660 <vPortEnterCritical+0x3c>)
 800d636:	6813      	ldr	r3, [r2, #0]
 800d638:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800d63a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800d63c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800d63e:	d10e      	bne.n	800d65e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 800d640:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d644:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 800d648:	b2db      	uxtb	r3, r3
 800d64a:	b143      	cbz	r3, 800d65e <vPortEnterCritical+0x3a>
 800d64c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d650:	f383 8811 	msr	BASEPRI, r3
 800d654:	f3bf 8f6f 	isb	sy
 800d658:	f3bf 8f4f 	dsb	sy
 800d65c:	e7fe      	b.n	800d65c <vPortEnterCritical+0x38>
}
 800d65e:	4770      	bx	lr
 800d660:	2000005c 	.word	0x2000005c

0800d664 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 800d664:	4a08      	ldr	r2, [pc, #32]	; (800d688 <vPortExitCritical+0x24>)
 800d666:	6813      	ldr	r3, [r2, #0]
 800d668:	b943      	cbnz	r3, 800d67c <vPortExitCritical+0x18>
 800d66a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d66e:	f383 8811 	msr	BASEPRI, r3
 800d672:	f3bf 8f6f 	isb	sy
 800d676:	f3bf 8f4f 	dsb	sy
 800d67a:	e7fe      	b.n	800d67a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800d67c:	3b01      	subs	r3, #1
 800d67e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 800d680:	b90b      	cbnz	r3, 800d686 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 800d682:	f383 8811 	msr	BASEPRI, r3
}
 800d686:	4770      	bx	lr
 800d688:	2000005c 	.word	0x2000005c
 800d68c:	00000000 	.word	0x00000000

0800d690 <PendSV_Handler>:
	__asm volatile
 800d690:	f3ef 8009 	mrs	r0, PSP
 800d694:	f3bf 8f6f 	isb	sy
 800d698:	4b15      	ldr	r3, [pc, #84]	; (800d6f0 <pxCurrentTCBConst>)
 800d69a:	681a      	ldr	r2, [r3, #0]
 800d69c:	f01e 0f10 	tst.w	lr, #16
 800d6a0:	bf08      	it	eq
 800d6a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 800d6a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6aa:	6010      	str	r0, [r2, #0]
 800d6ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 800d6b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 800d6b4:	f380 8811 	msr	BASEPRI, r0
 800d6b8:	f3bf 8f4f 	dsb	sy
 800d6bc:	f3bf 8f6f 	isb	sy
 800d6c0:	f001 f962 	bl	800e988 <vTaskSwitchContext>
 800d6c4:	f04f 0000 	mov.w	r0, #0
 800d6c8:	f380 8811 	msr	BASEPRI, r0
 800d6cc:	bc09      	pop	{r0, r3}
 800d6ce:	6819      	ldr	r1, [r3, #0]
 800d6d0:	6808      	ldr	r0, [r1, #0]
 800d6d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d6d6:	f01e 0f10 	tst.w	lr, #16
 800d6da:	bf08      	it	eq
 800d6dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 800d6e0:	f380 8809 	msr	PSP, r0
 800d6e4:	f3bf 8f6f 	isb	sy
 800d6e8:	4770      	bx	lr
 800d6ea:	bf00      	nop
 800d6ec:	f3af 8000 	nop.w

0800d6f0 <pxCurrentTCBConst>:
 800d6f0:	2000e8e8 	.word	0x2000e8e8

0800d6f4 <xPortSysTickHandler>:
{
 800d6f4:	b508      	push	{r3, lr}
	__asm volatile
 800d6f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d6fa:	f383 8811 	msr	BASEPRI, r3
 800d6fe:	f3bf 8f6f 	isb	sy
 800d702:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 800d706:	f000 ffa7 	bl	800e658 <xTaskIncrementTick>
 800d70a:	b128      	cbz	r0, 800d718 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800d70c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d710:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800d714:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 800d718:	2300      	movs	r3, #0
 800d71a:	f383 8811 	msr	BASEPRI, r3
}
 800d71e:	bd08      	pop	{r3, pc}

0800d720 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 800d720:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800d724:	2300      	movs	r3, #0
 800d726:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800d728:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 800d72a:	4b05      	ldr	r3, [pc, #20]	; (800d740 <vPortSetupTimerInterrupt+0x20>)
 800d72c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800d730:	681b      	ldr	r3, [r3, #0]
 800d732:	fbb3 f3f1 	udiv	r3, r3, r1
 800d736:	3b01      	subs	r3, #1
 800d738:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800d73a:	2307      	movs	r3, #7
 800d73c:	6113      	str	r3, [r2, #16]
}
 800d73e:	4770      	bx	lr
 800d740:	20000050 	.word	0x20000050

0800d744 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d744:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 800d748:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800d74a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800d74e:	4a3a      	ldr	r2, [pc, #232]	; (800d838 <xPortStartScheduler+0xf4>)
 800d750:	4291      	cmp	r1, r2
 800d752:	d108      	bne.n	800d766 <xPortStartScheduler+0x22>
	__asm volatile
 800d754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d758:	f383 8811 	msr	BASEPRI, r3
 800d75c:	f3bf 8f6f 	isb	sy
 800d760:	f3bf 8f4f 	dsb	sy
 800d764:	e7fe      	b.n	800d764 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 800d766:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800d76a:	4b34      	ldr	r3, [pc, #208]	; (800d83c <xPortStartScheduler+0xf8>)
 800d76c:	429a      	cmp	r2, r3
 800d76e:	d108      	bne.n	800d782 <xPortStartScheduler+0x3e>
 800d770:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d774:	f383 8811 	msr	BASEPRI, r3
 800d778:	f3bf 8f6f 	isb	sy
 800d77c:	f3bf 8f4f 	dsb	sy
 800d780:	e7fe      	b.n	800d780 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 800d782:	4b2f      	ldr	r3, [pc, #188]	; (800d840 <xPortStartScheduler+0xfc>)
 800d784:	781a      	ldrb	r2, [r3, #0]
 800d786:	b2d2      	uxtb	r2, r2
 800d788:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800d78a:	22ff      	movs	r2, #255	; 0xff
 800d78c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d78e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d790:	4a2c      	ldr	r2, [pc, #176]	; (800d844 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800d792:	b2db      	uxtb	r3, r3
 800d794:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 800d798:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d79c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800d7a0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 800d7a2:	4a29      	ldr	r2, [pc, #164]	; (800d848 <xPortStartScheduler+0x104>)
 800d7a4:	2307      	movs	r3, #7
 800d7a6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 800d7a8:	2100      	movs	r1, #0
 800d7aa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800d7ae:	0600      	lsls	r0, r0, #24
 800d7b0:	f103 34ff 	add.w	r4, r3, #4294967295
 800d7b4:	d40c      	bmi.n	800d7d0 <xPortStartScheduler+0x8c>
 800d7b6:	b111      	cbz	r1, 800d7be <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 800d7b8:	2b03      	cmp	r3, #3
 800d7ba:	6013      	str	r3, [r2, #0]
 800d7bc:	d011      	beq.n	800d7e2 <xPortStartScheduler+0x9e>
 800d7be:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d7c2:	f383 8811 	msr	BASEPRI, r3
 800d7c6:	f3bf 8f6f 	isb	sy
 800d7ca:	f3bf 8f4f 	dsb	sy
 800d7ce:	e7fe      	b.n	800d7ce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800d7d0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800d7d4:	005b      	lsls	r3, r3, #1
 800d7d6:	b2db      	uxtb	r3, r3
 800d7d8:	f88d 3003 	strb.w	r3, [sp, #3]
 800d7dc:	2101      	movs	r1, #1
 800d7de:	4623      	mov	r3, r4
 800d7e0:	e7e3      	b.n	800d7aa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800d7e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 800d7e6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7e8:	9b01      	ldr	r3, [sp, #4]
 800d7ea:	4a15      	ldr	r2, [pc, #84]	; (800d840 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7ec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800d7f0:	b2db      	uxtb	r3, r3
 800d7f2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800d7f4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d7f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800d7fc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800d800:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800d804:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800d808:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800d80c:	f7ff ff88 	bl	800d720 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800d810:	4b0e      	ldr	r3, [pc, #56]	; (800d84c <xPortStartScheduler+0x108>)
 800d812:	2500      	movs	r5, #0
 800d814:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800d816:	f7ff feb1 	bl	800d57c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800d81a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800d81e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800d822:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800d826:	f7ff fe95 	bl	800d554 <prvPortStartFirstTask>
	vTaskSwitchContext();
 800d82a:	f001 f8ad 	bl	800e988 <vTaskSwitchContext>
	prvTaskExitError();
 800d82e:	f7ff feaf 	bl	800d590 <prvTaskExitError>
}
 800d832:	4628      	mov	r0, r5
 800d834:	b003      	add	sp, #12
 800d836:	bd30      	pop	{r4, r5, pc}
 800d838:	410fc271 	.word	0x410fc271
 800d83c:	410fc270 	.word	0x410fc270
 800d840:	e000e400 	.word	0xe000e400
 800d844:	2000e8a0 	.word	0x2000e8a0
 800d848:	2000e8a4 	.word	0x2000e8a4
 800d84c:	2000005c 	.word	0x2000005c

0800d850 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800d850:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800d854:	2b0f      	cmp	r3, #15
 800d856:	d90e      	bls.n	800d876 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800d858:	4a11      	ldr	r2, [pc, #68]	; (800d8a0 <vPortValidateInterruptPriority+0x50>)
 800d85a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800d85c:	4a11      	ldr	r2, [pc, #68]	; (800d8a4 <vPortValidateInterruptPriority+0x54>)
 800d85e:	7812      	ldrb	r2, [r2, #0]
 800d860:	429a      	cmp	r2, r3
 800d862:	d908      	bls.n	800d876 <vPortValidateInterruptPriority+0x26>
 800d864:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d868:	f383 8811 	msr	BASEPRI, r3
 800d86c:	f3bf 8f6f 	isb	sy
 800d870:	f3bf 8f4f 	dsb	sy
 800d874:	e7fe      	b.n	800d874 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800d876:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800d87a:	4a0b      	ldr	r2, [pc, #44]	; (800d8a8 <vPortValidateInterruptPriority+0x58>)
 800d87c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800d880:	6812      	ldr	r2, [r2, #0]
 800d882:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800d886:	4293      	cmp	r3, r2
 800d888:	d908      	bls.n	800d89c <vPortValidateInterruptPriority+0x4c>
 800d88a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d88e:	f383 8811 	msr	BASEPRI, r3
 800d892:	f3bf 8f6f 	isb	sy
 800d896:	f3bf 8f4f 	dsb	sy
 800d89a:	e7fe      	b.n	800d89a <vPortValidateInterruptPriority+0x4a>
	}
 800d89c:	4770      	bx	lr
 800d89e:	bf00      	nop
 800d8a0:	e000e3f0 	.word	0xe000e3f0
 800d8a4:	2000e8a0 	.word	0x2000e8a0
 800d8a8:	2000e8a4 	.word	0x2000e8a4

0800d8ac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800d8ac:	b510      	push	{r4, lr}
 800d8ae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800d8b0:	f7ff feb8 	bl	800d624 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800d8b4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800d8b6:	f7ff fed5 	bl	800d664 <vPortExitCritical>

	return xReturn;
}
 800d8ba:	fab4 f084 	clz	r0, r4
 800d8be:	0940      	lsrs	r0, r0, #5
 800d8c0:	bd10      	pop	{r4, pc}

0800d8c2 <prvCopyDataToQueue>:
{
 800d8c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d8c4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800d8c8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800d8ca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800d8cc:	b952      	cbnz	r2, 800d8e4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800d8ce:	6807      	ldr	r7, [r0, #0]
 800d8d0:	bb47      	cbnz	r7, 800d924 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d8d2:	6880      	ldr	r0, [r0, #8]
 800d8d4:	f001 f9b8 	bl	800ec48 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800d8d8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800d8da:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800d8dc:	3601      	adds	r6, #1
 800d8de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800d8e0:	4628      	mov	r0, r5
 800d8e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800d8e4:	b965      	cbnz	r5, 800d900 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d8e6:	6840      	ldr	r0, [r0, #4]
 800d8e8:	f018 ff1e 	bl	8026728 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8ec:	6863      	ldr	r3, [r4, #4]
 800d8ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d8f0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8f2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d8f4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d8f6:	4293      	cmp	r3, r2
 800d8f8:	d3f0      	bcc.n	800d8dc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800d8fa:	6823      	ldr	r3, [r4, #0]
 800d8fc:	6063      	str	r3, [r4, #4]
 800d8fe:	e7ed      	b.n	800d8dc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800d900:	68c0      	ldr	r0, [r0, #12]
 800d902:	f018 ff11 	bl	8026728 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d906:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800d908:	68e3      	ldr	r3, [r4, #12]
 800d90a:	4251      	negs	r1, r2
 800d90c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d90e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800d910:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800d912:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800d914:	bf3e      	ittt	cc
 800d916:	68a3      	ldrcc	r3, [r4, #8]
 800d918:	185b      	addcc	r3, r3, r1
 800d91a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800d91c:	2d02      	cmp	r5, #2
 800d91e:	d101      	bne.n	800d924 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800d920:	b116      	cbz	r6, 800d928 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800d922:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800d924:	2500      	movs	r5, #0
 800d926:	e7d9      	b.n	800d8dc <prvCopyDataToQueue+0x1a>
 800d928:	4635      	mov	r5, r6
 800d92a:	e7d7      	b.n	800d8dc <prvCopyDataToQueue+0x1a>

0800d92c <prvCopyDataFromQueue>:
{
 800d92c:	4603      	mov	r3, r0
 800d92e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d930:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800d932:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800d934:	b16a      	cbz	r2, 800d952 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d936:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d938:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d93a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800d93c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d93e:	bf28      	it	cs
 800d940:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800d942:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800d944:	bf28      	it	cs
 800d946:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d948:	68d9      	ldr	r1, [r3, #12]
}
 800d94a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800d94e:	f018 beeb 	b.w	8026728 <memcpy>
}
 800d952:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d956:	4770      	bx	lr

0800d958 <prvUnlockQueue>:
{
 800d958:	b570      	push	{r4, r5, r6, lr}
 800d95a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800d95c:	f7ff fe62 	bl	800d624 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800d960:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d964:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800d968:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800d96a:	2d00      	cmp	r5, #0
 800d96c:	dc14      	bgt.n	800d998 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800d96e:	23ff      	movs	r3, #255	; 0xff
 800d970:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800d974:	f7ff fe76 	bl	800d664 <vPortExitCritical>
	taskENTER_CRITICAL();
 800d978:	f7ff fe54 	bl	800d624 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800d97c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d980:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800d984:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800d986:	2d00      	cmp	r5, #0
 800d988:	dc12      	bgt.n	800d9b0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800d98a:	23ff      	movs	r3, #255	; 0xff
 800d98c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800d990:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800d994:	f7ff be66 	b.w	800d664 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800d998:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800d99a:	2b00      	cmp	r3, #0
 800d99c:	d0e7      	beq.n	800d96e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800d99e:	4630      	mov	r0, r6
 800d9a0:	f001 f86e 	bl	800ea80 <xTaskRemoveFromEventList>
 800d9a4:	b108      	cbz	r0, 800d9aa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800d9a6:	f001 f8f7 	bl	800eb98 <vTaskMissedYield>
			--cTxLock;
 800d9aa:	3d01      	subs	r5, #1
 800d9ac:	b26d      	sxtb	r5, r5
 800d9ae:	e7dc      	b.n	800d96a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800d9b0:	6923      	ldr	r3, [r4, #16]
 800d9b2:	2b00      	cmp	r3, #0
 800d9b4:	d0e9      	beq.n	800d98a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800d9b6:	4630      	mov	r0, r6
 800d9b8:	f001 f862 	bl	800ea80 <xTaskRemoveFromEventList>
 800d9bc:	b108      	cbz	r0, 800d9c2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800d9be:	f001 f8eb 	bl	800eb98 <vTaskMissedYield>
				--cRxLock;
 800d9c2:	3d01      	subs	r5, #1
 800d9c4:	b26d      	sxtb	r5, r5
 800d9c6:	e7de      	b.n	800d986 <prvUnlockQueue+0x2e>

0800d9c8 <xQueueGenericReset>:
{
 800d9c8:	b538      	push	{r3, r4, r5, lr}
 800d9ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800d9cc:	4604      	mov	r4, r0
 800d9ce:	b940      	cbnz	r0, 800d9e2 <xQueueGenericReset+0x1a>
 800d9d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800d9d4:	f383 8811 	msr	BASEPRI, r3
 800d9d8:	f3bf 8f6f 	isb	sy
 800d9dc:	f3bf 8f4f 	dsb	sy
 800d9e0:	e7fe      	b.n	800d9e0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800d9e2:	f7ff fe1f 	bl	800d624 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9e6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800d9ea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800d9ec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9ee:	434b      	muls	r3, r1
 800d9f0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9f2:	1a5b      	subs	r3, r3, r1
 800d9f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9f6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800d9f8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9fa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800d9fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800d9fe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800da00:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800da04:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800da08:	b9a5      	cbnz	r5, 800da34 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800da0a:	6923      	ldr	r3, [r4, #16]
 800da0c:	b173      	cbz	r3, 800da2c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800da0e:	f104 0010 	add.w	r0, r4, #16
 800da12:	f001 f835 	bl	800ea80 <xTaskRemoveFromEventList>
 800da16:	b148      	cbz	r0, 800da2c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800da18:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800da1c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800da20:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800da24:	f3bf 8f4f 	dsb	sy
 800da28:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800da2c:	f7ff fe1a 	bl	800d664 <vPortExitCritical>
}
 800da30:	2001      	movs	r0, #1
 800da32:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800da34:	f104 0010 	add.w	r0, r4, #16
 800da38:	f7ff fd4a 	bl	800d4d0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800da3c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800da40:	f7ff fd46 	bl	800d4d0 <vListInitialise>
 800da44:	e7f2      	b.n	800da2c <xQueueGenericReset+0x64>

0800da46 <xQueueGenericCreateStatic>:
	{
 800da46:	b513      	push	{r0, r1, r4, lr}
 800da48:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800da4a:	b940      	cbnz	r0, 800da5e <xQueueGenericCreateStatic+0x18>
 800da4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da50:	f383 8811 	msr	BASEPRI, r3
 800da54:	f3bf 8f6f 	isb	sy
 800da58:	f3bf 8f4f 	dsb	sy
 800da5c:	e7fe      	b.n	800da5c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800da5e:	b943      	cbnz	r3, 800da72 <xQueueGenericCreateStatic+0x2c>
 800da60:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da64:	f383 8811 	msr	BASEPRI, r3
 800da68:	f3bf 8f6f 	isb	sy
 800da6c:	f3bf 8f4f 	dsb	sy
 800da70:	e7fe      	b.n	800da70 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800da72:	b14a      	cbz	r2, 800da88 <xQueueGenericCreateStatic+0x42>
 800da74:	b991      	cbnz	r1, 800da9c <xQueueGenericCreateStatic+0x56>
 800da76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da7a:	f383 8811 	msr	BASEPRI, r3
 800da7e:	f3bf 8f6f 	isb	sy
 800da82:	f3bf 8f4f 	dsb	sy
 800da86:	e7fe      	b.n	800da86 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800da88:	b141      	cbz	r1, 800da9c <xQueueGenericCreateStatic+0x56>
 800da8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800da8e:	f383 8811 	msr	BASEPRI, r3
 800da92:	f3bf 8f6f 	isb	sy
 800da96:	f3bf 8f4f 	dsb	sy
 800da9a:	e7fe      	b.n	800da9a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800da9c:	2350      	movs	r3, #80	; 0x50
 800da9e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800daa0:	9b01      	ldr	r3, [sp, #4]
 800daa2:	2b50      	cmp	r3, #80	; 0x50
 800daa4:	d008      	beq.n	800dab8 <xQueueGenericCreateStatic+0x72>
 800daa6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daaa:	f383 8811 	msr	BASEPRI, r3
 800daae:	f3bf 8f6f 	isb	sy
 800dab2:	f3bf 8f4f 	dsb	sy
 800dab6:	e7fe      	b.n	800dab6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800dab8:	2900      	cmp	r1, #0
 800daba:	bf08      	it	eq
 800dabc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800dabe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dac0:	6022      	str	r2, [r4, #0]
 800dac2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800dac4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800dac8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800dacc:	4619      	mov	r1, r3
 800dace:	4620      	mov	r0, r4
 800dad0:	f7ff ff7a 	bl	800d9c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800dad4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800dad8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800dadc:	4620      	mov	r0, r4
 800dade:	b002      	add	sp, #8
 800dae0:	bd10      	pop	{r4, pc}

0800dae2 <xQueueGenericCreate>:
	{
 800dae2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dae4:	460d      	mov	r5, r1
 800dae6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800dae8:	4606      	mov	r6, r0
 800daea:	b940      	cbnz	r0, 800dafe <xQueueGenericCreate+0x1c>
 800daec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800daf0:	f383 8811 	msr	BASEPRI, r3
 800daf4:	f3bf 8f6f 	isb	sy
 800daf8:	f3bf 8f4f 	dsb	sy
 800dafc:	e7fe      	b.n	800dafc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800dafe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800db00:	3050      	adds	r0, #80	; 0x50
 800db02:	f7ff fc0f 	bl	800d324 <pvPortMalloc>
		if( pxNewQueue != NULL )
 800db06:	4604      	mov	r4, r0
 800db08:	b170      	cbz	r0, 800db28 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800db0a:	2300      	movs	r3, #0
 800db0c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800db10:	b165      	cbz	r5, 800db2c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800db12:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800db16:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800db1a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800db1c:	2101      	movs	r1, #1
 800db1e:	4620      	mov	r0, r4
 800db20:	f7ff ff52 	bl	800d9c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800db24:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800db28:	4620      	mov	r0, r4
 800db2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800db2c:	4603      	mov	r3, r0
 800db2e:	e7f2      	b.n	800db16 <xQueueGenericCreate+0x34>

0800db30 <xQueueCreateCountingSemaphoreStatic>:
	{
 800db30:	b513      	push	{r0, r1, r4, lr}
 800db32:	4613      	mov	r3, r2
 800db34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800db36:	b940      	cbnz	r0, 800db4a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800db38:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db3c:	f383 8811 	msr	BASEPRI, r3
 800db40:	f3bf 8f6f 	isb	sy
 800db44:	f3bf 8f4f 	dsb	sy
 800db48:	e7fe      	b.n	800db48 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db4a:	4288      	cmp	r0, r1
 800db4c:	d208      	bcs.n	800db60 <xQueueCreateCountingSemaphoreStatic+0x30>
 800db4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db52:	f383 8811 	msr	BASEPRI, r3
 800db56:	f3bf 8f6f 	isb	sy
 800db5a:	f3bf 8f4f 	dsb	sy
 800db5e:	e7fe      	b.n	800db5e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800db60:	2202      	movs	r2, #2
 800db62:	9200      	str	r2, [sp, #0]
 800db64:	2200      	movs	r2, #0
 800db66:	4611      	mov	r1, r2
 800db68:	f7ff ff6d 	bl	800da46 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800db6c:	b100      	cbz	r0, 800db70 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800db6e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800db70:	b002      	add	sp, #8
 800db72:	bd10      	pop	{r4, pc}

0800db74 <xQueueCreateCountingSemaphore>:
	{
 800db74:	b510      	push	{r4, lr}
 800db76:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800db78:	b940      	cbnz	r0, 800db8c <xQueueCreateCountingSemaphore+0x18>
 800db7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db7e:	f383 8811 	msr	BASEPRI, r3
 800db82:	f3bf 8f6f 	isb	sy
 800db86:	f3bf 8f4f 	dsb	sy
 800db8a:	e7fe      	b.n	800db8a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800db8c:	4288      	cmp	r0, r1
 800db8e:	d208      	bcs.n	800dba2 <xQueueCreateCountingSemaphore+0x2e>
 800db90:	f04f 0350 	mov.w	r3, #80	; 0x50
 800db94:	f383 8811 	msr	BASEPRI, r3
 800db98:	f3bf 8f6f 	isb	sy
 800db9c:	f3bf 8f4f 	dsb	sy
 800dba0:	e7fe      	b.n	800dba0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800dba2:	2202      	movs	r2, #2
 800dba4:	2100      	movs	r1, #0
 800dba6:	f7ff ff9c 	bl	800dae2 <xQueueGenericCreate>
		if( xHandle != NULL )
 800dbaa:	b100      	cbz	r0, 800dbae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800dbac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800dbae:	bd10      	pop	{r4, pc}

0800dbb0 <xQueueGenericSend>:
{
 800dbb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dbb4:	b085      	sub	sp, #20
 800dbb6:	4688      	mov	r8, r1
 800dbb8:	9201      	str	r2, [sp, #4]
 800dbba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800dbbc:	4604      	mov	r4, r0
 800dbbe:	b940      	cbnz	r0, 800dbd2 <xQueueGenericSend+0x22>
 800dbc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbc4:	f383 8811 	msr	BASEPRI, r3
 800dbc8:	f3bf 8f6f 	isb	sy
 800dbcc:	f3bf 8f4f 	dsb	sy
 800dbd0:	e7fe      	b.n	800dbd0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dbd2:	b951      	cbnz	r1, 800dbea <xQueueGenericSend+0x3a>
 800dbd4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dbd6:	b143      	cbz	r3, 800dbea <xQueueGenericSend+0x3a>
 800dbd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbdc:	f383 8811 	msr	BASEPRI, r3
 800dbe0:	f3bf 8f6f 	isb	sy
 800dbe4:	f3bf 8f4f 	dsb	sy
 800dbe8:	e7fe      	b.n	800dbe8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dbea:	2f02      	cmp	r7, #2
 800dbec:	d10b      	bne.n	800dc06 <xQueueGenericSend+0x56>
 800dbee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dbf0:	2b01      	cmp	r3, #1
 800dbf2:	d008      	beq.n	800dc06 <xQueueGenericSend+0x56>
 800dbf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dbf8:	f383 8811 	msr	BASEPRI, r3
 800dbfc:	f3bf 8f6f 	isb	sy
 800dc00:	f3bf 8f4f 	dsb	sy
 800dc04:	e7fe      	b.n	800dc04 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dc06:	f000 ffcd 	bl	800eba4 <xTaskGetSchedulerState>
 800dc0a:	4606      	mov	r6, r0
 800dc0c:	b950      	cbnz	r0, 800dc24 <xQueueGenericSend+0x74>
 800dc0e:	9b01      	ldr	r3, [sp, #4]
 800dc10:	b14b      	cbz	r3, 800dc26 <xQueueGenericSend+0x76>
 800dc12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dc16:	f383 8811 	msr	BASEPRI, r3
 800dc1a:	f3bf 8f6f 	isb	sy
 800dc1e:	f3bf 8f4f 	dsb	sy
 800dc22:	e7fe      	b.n	800dc22 <xQueueGenericSend+0x72>
 800dc24:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800dc26:	f04f 0900 	mov.w	r9, #0
 800dc2a:	e037      	b.n	800dc9c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dc2c:	9d01      	ldr	r5, [sp, #4]
 800dc2e:	b91d      	cbnz	r5, 800dc38 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800dc30:	f7ff fd18 	bl	800d664 <vPortExitCritical>
			return errQUEUE_FULL;
 800dc34:	2000      	movs	r0, #0
 800dc36:	e052      	b.n	800dcde <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800dc38:	b916      	cbnz	r6, 800dc40 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800dc3a:	a802      	add	r0, sp, #8
 800dc3c:	f000 ff64 	bl	800eb08 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800dc40:	f7ff fd10 	bl	800d664 <vPortExitCritical>
		vTaskSuspendAll();
 800dc44:	f000 fcfa 	bl	800e63c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800dc48:	f7ff fcec 	bl	800d624 <vPortEnterCritical>
 800dc4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800dc50:	2bff      	cmp	r3, #255	; 0xff
 800dc52:	bf08      	it	eq
 800dc54:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800dc58:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800dc5c:	2bff      	cmp	r3, #255	; 0xff
 800dc5e:	bf08      	it	eq
 800dc60:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800dc64:	f7ff fcfe 	bl	800d664 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800dc68:	a901      	add	r1, sp, #4
 800dc6a:	a802      	add	r0, sp, #8
 800dc6c:	f000 ff58 	bl	800eb20 <xTaskCheckForTimeOut>
 800dc70:	2800      	cmp	r0, #0
 800dc72:	d14a      	bne.n	800dd0a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800dc74:	f7ff fcd6 	bl	800d624 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800dc78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dc7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dc7c:	429a      	cmp	r2, r3
 800dc7e:	d131      	bne.n	800dce4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800dc80:	f7ff fcf0 	bl	800d664 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800dc84:	9901      	ldr	r1, [sp, #4]
 800dc86:	f104 0010 	add.w	r0, r4, #16
 800dc8a:	f000 fec1 	bl	800ea10 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800dc8e:	4620      	mov	r0, r4
 800dc90:	f7ff fe62 	bl	800d958 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800dc94:	f000 fd76 	bl	800e784 <xTaskResumeAll>
 800dc98:	b360      	cbz	r0, 800dcf4 <xQueueGenericSend+0x144>
 800dc9a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800dc9c:	f7ff fcc2 	bl	800d624 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dca0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dca2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dca4:	429a      	cmp	r2, r3
 800dca6:	d301      	bcc.n	800dcac <xQueueGenericSend+0xfc>
 800dca8:	2f02      	cmp	r7, #2
 800dcaa:	d1bf      	bne.n	800dc2c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dcac:	463a      	mov	r2, r7
 800dcae:	4641      	mov	r1, r8
 800dcb0:	4620      	mov	r0, r4
 800dcb2:	f7ff fe06 	bl	800d8c2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dcb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dcb8:	b11b      	cbz	r3, 800dcc2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800dcba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800dcbe:	f000 fedf 	bl	800ea80 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800dcc2:	b148      	cbz	r0, 800dcd8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800dcc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dccc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dcd0:	f3bf 8f4f 	dsb	sy
 800dcd4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800dcd8:	f7ff fcc4 	bl	800d664 <vPortExitCritical>
				return pdPASS;
 800dcdc:	2001      	movs	r0, #1
}
 800dcde:	b005      	add	sp, #20
 800dce0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800dce4:	f7ff fcbe 	bl	800d664 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800dce8:	4620      	mov	r0, r4
 800dcea:	f7ff fe35 	bl	800d958 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dcee:	f000 fd49 	bl	800e784 <xTaskResumeAll>
 800dcf2:	e7d2      	b.n	800dc9a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800dcf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800dcf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800dcfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800dd00:	f3bf 8f4f 	dsb	sy
 800dd04:	f3bf 8f6f 	isb	sy
 800dd08:	e7c7      	b.n	800dc9a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800dd0a:	4620      	mov	r0, r4
 800dd0c:	f7ff fe24 	bl	800d958 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dd10:	f000 fd38 	bl	800e784 <xTaskResumeAll>
 800dd14:	e78e      	b.n	800dc34 <xQueueGenericSend+0x84>

0800dd16 <xQueueGenericSendFromISR>:
{
 800dd16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dd1a:	4689      	mov	r9, r1
 800dd1c:	4690      	mov	r8, r2
 800dd1e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800dd20:	4604      	mov	r4, r0
 800dd22:	b940      	cbnz	r0, 800dd36 <xQueueGenericSendFromISR+0x20>
 800dd24:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd28:	f383 8811 	msr	BASEPRI, r3
 800dd2c:	f3bf 8f6f 	isb	sy
 800dd30:	f3bf 8f4f 	dsb	sy
 800dd34:	e7fe      	b.n	800dd34 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dd36:	b951      	cbnz	r1, 800dd4e <xQueueGenericSendFromISR+0x38>
 800dd38:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dd3a:	b143      	cbz	r3, 800dd4e <xQueueGenericSendFromISR+0x38>
 800dd3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd40:	f383 8811 	msr	BASEPRI, r3
 800dd44:	f3bf 8f6f 	isb	sy
 800dd48:	f3bf 8f4f 	dsb	sy
 800dd4c:	e7fe      	b.n	800dd4c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800dd4e:	2f02      	cmp	r7, #2
 800dd50:	d10b      	bne.n	800dd6a <xQueueGenericSendFromISR+0x54>
 800dd52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd54:	2b01      	cmp	r3, #1
 800dd56:	d008      	beq.n	800dd6a <xQueueGenericSendFromISR+0x54>
 800dd58:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd5c:	f383 8811 	msr	BASEPRI, r3
 800dd60:	f3bf 8f6f 	isb	sy
 800dd64:	f3bf 8f4f 	dsb	sy
 800dd68:	e7fe      	b.n	800dd68 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800dd6a:	f7ff fd71 	bl	800d850 <vPortValidateInterruptPriority>
	__asm volatile
 800dd6e:	f3ef 8611 	mrs	r6, BASEPRI
 800dd72:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dd76:	f383 8811 	msr	BASEPRI, r3
 800dd7a:	f3bf 8f6f 	isb	sy
 800dd7e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800dd82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800dd84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800dd86:	429a      	cmp	r2, r3
 800dd88:	d301      	bcc.n	800dd8e <xQueueGenericSendFromISR+0x78>
 800dd8a:	2f02      	cmp	r7, #2
 800dd8c:	d123      	bne.n	800ddd6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd8e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800dd92:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800dd94:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800dd96:	463a      	mov	r2, r7
 800dd98:	4649      	mov	r1, r9
 800dd9a:	4620      	mov	r0, r4
 800dd9c:	f7ff fd91 	bl	800d8c2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800dda0:	1c6b      	adds	r3, r5, #1
 800dda2:	d113      	bne.n	800ddcc <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800dda4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800dda6:	b90b      	cbnz	r3, 800ddac <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800dda8:	2001      	movs	r0, #1
 800ddaa:	e00b      	b.n	800ddc4 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800ddac:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800ddb0:	f000 fe66 	bl	800ea80 <xTaskRemoveFromEventList>
 800ddb4:	2800      	cmp	r0, #0
 800ddb6:	d0f7      	beq.n	800dda8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800ddb8:	f1b8 0f00 	cmp.w	r8, #0
 800ddbc:	d0f4      	beq.n	800dda8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800ddbe:	2001      	movs	r0, #1
 800ddc0:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800ddc4:	f386 8811 	msr	BASEPRI, r6
}
 800ddc8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800ddcc:	3501      	adds	r5, #1
 800ddce:	b26d      	sxtb	r5, r5
 800ddd0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800ddd4:	e7e8      	b.n	800dda8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800ddd6:	2000      	movs	r0, #0
 800ddd8:	e7f4      	b.n	800ddc4 <xQueueGenericSendFromISR+0xae>

0800ddda <xQueueGiveFromISR>:
{
 800ddda:	b570      	push	{r4, r5, r6, lr}
 800dddc:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800ddde:	4604      	mov	r4, r0
 800dde0:	b940      	cbnz	r0, 800ddf4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800dde2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dde6:	f383 8811 	msr	BASEPRI, r3
 800ddea:	f3bf 8f6f 	isb	sy
 800ddee:	f3bf 8f4f 	dsb	sy
 800ddf2:	e7fe      	b.n	800ddf2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800ddf4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800ddf6:	b143      	cbz	r3, 800de0a <xQueueGiveFromISR+0x30>
 800ddf8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ddfc:	f383 8811 	msr	BASEPRI, r3
 800de00:	f3bf 8f6f 	isb	sy
 800de04:	f3bf 8f4f 	dsb	sy
 800de08:	e7fe      	b.n	800de08 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800de0a:	6803      	ldr	r3, [r0, #0]
 800de0c:	b953      	cbnz	r3, 800de24 <xQueueGiveFromISR+0x4a>
 800de0e:	6883      	ldr	r3, [r0, #8]
 800de10:	b143      	cbz	r3, 800de24 <xQueueGiveFromISR+0x4a>
 800de12:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de16:	f383 8811 	msr	BASEPRI, r3
 800de1a:	f3bf 8f6f 	isb	sy
 800de1e:	f3bf 8f4f 	dsb	sy
 800de22:	e7fe      	b.n	800de22 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800de24:	f7ff fd14 	bl	800d850 <vPortValidateInterruptPriority>
	__asm volatile
 800de28:	f3ef 8611 	mrs	r6, BASEPRI
 800de2c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de30:	f383 8811 	msr	BASEPRI, r3
 800de34:	f3bf 8f6f 	isb	sy
 800de38:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800de3c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800de3e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800de40:	4293      	cmp	r3, r2
 800de42:	d91c      	bls.n	800de7e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800de44:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de48:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800de4a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800de4c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800de4e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800de50:	d110      	bne.n	800de74 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800de52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800de54:	b90b      	cbnz	r3, 800de5a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800de56:	2001      	movs	r0, #1
 800de58:	e009      	b.n	800de6e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800de5a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800de5e:	f000 fe0f 	bl	800ea80 <xTaskRemoveFromEventList>
 800de62:	2800      	cmp	r0, #0
 800de64:	d0f7      	beq.n	800de56 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800de66:	2d00      	cmp	r5, #0
 800de68:	d0f5      	beq.n	800de56 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800de6a:	2001      	movs	r0, #1
 800de6c:	6028      	str	r0, [r5, #0]
	__asm volatile
 800de6e:	f386 8811 	msr	BASEPRI, r6
}
 800de72:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800de74:	3301      	adds	r3, #1
 800de76:	b25b      	sxtb	r3, r3
 800de78:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800de7c:	e7eb      	b.n	800de56 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800de7e:	2000      	movs	r0, #0
 800de80:	e7f5      	b.n	800de6e <xQueueGiveFromISR+0x94>

0800de82 <xQueueReceive>:
{
 800de82:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800de86:	460f      	mov	r7, r1
 800de88:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800de8a:	4604      	mov	r4, r0
 800de8c:	b940      	cbnz	r0, 800dea0 <xQueueReceive+0x1e>
	__asm volatile
 800de8e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800de92:	f383 8811 	msr	BASEPRI, r3
 800de96:	f3bf 8f6f 	isb	sy
 800de9a:	f3bf 8f4f 	dsb	sy
 800de9e:	e7fe      	b.n	800de9e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800dea0:	b951      	cbnz	r1, 800deb8 <xQueueReceive+0x36>
 800dea2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800dea4:	b143      	cbz	r3, 800deb8 <xQueueReceive+0x36>
 800dea6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800deaa:	f383 8811 	msr	BASEPRI, r3
 800deae:	f3bf 8f6f 	isb	sy
 800deb2:	f3bf 8f4f 	dsb	sy
 800deb6:	e7fe      	b.n	800deb6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800deb8:	f000 fe74 	bl	800eba4 <xTaskGetSchedulerState>
 800debc:	4606      	mov	r6, r0
 800debe:	b950      	cbnz	r0, 800ded6 <xQueueReceive+0x54>
 800dec0:	9b01      	ldr	r3, [sp, #4]
 800dec2:	b14b      	cbz	r3, 800ded8 <xQueueReceive+0x56>
 800dec4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dec8:	f383 8811 	msr	BASEPRI, r3
 800decc:	f3bf 8f6f 	isb	sy
 800ded0:	f3bf 8f4f 	dsb	sy
 800ded4:	e7fe      	b.n	800ded4 <xQueueReceive+0x52>
 800ded6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800ded8:	f04f 0800 	mov.w	r8, #0
 800dedc:	e03d      	b.n	800df5a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800dede:	9d01      	ldr	r5, [sp, #4]
 800dee0:	b91d      	cbnz	r5, 800deea <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800dee2:	f7ff fbbf 	bl	800d664 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800dee6:	2000      	movs	r0, #0
 800dee8:	e056      	b.n	800df98 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800deea:	b916      	cbnz	r6, 800def2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800deec:	a802      	add	r0, sp, #8
 800deee:	f000 fe0b 	bl	800eb08 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800def2:	f7ff fbb7 	bl	800d664 <vPortExitCritical>
		vTaskSuspendAll();
 800def6:	f000 fba1 	bl	800e63c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800defa:	f7ff fb93 	bl	800d624 <vPortEnterCritical>
 800defe:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800df02:	2bff      	cmp	r3, #255	; 0xff
 800df04:	bf08      	it	eq
 800df06:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800df0a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800df0e:	2bff      	cmp	r3, #255	; 0xff
 800df10:	bf08      	it	eq
 800df12:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800df16:	f7ff fba5 	bl	800d664 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800df1a:	a901      	add	r1, sp, #4
 800df1c:	a802      	add	r0, sp, #8
 800df1e:	f000 fdff 	bl	800eb20 <xTaskCheckForTimeOut>
 800df22:	2800      	cmp	r0, #0
 800df24:	d141      	bne.n	800dfaa <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800df26:	4620      	mov	r0, r4
 800df28:	f7ff fcc0 	bl	800d8ac <prvIsQueueEmpty>
 800df2c:	b3b8      	cbz	r0, 800df9e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800df2e:	9901      	ldr	r1, [sp, #4]
 800df30:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800df34:	f000 fd6c 	bl	800ea10 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800df38:	4620      	mov	r0, r4
 800df3a:	f7ff fd0d 	bl	800d958 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800df3e:	f000 fc21 	bl	800e784 <xTaskResumeAll>
 800df42:	b948      	cbnz	r0, 800df58 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800df44:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df4c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df50:	f3bf 8f4f 	dsb	sy
 800df54:	f3bf 8f6f 	isb	sy
 800df58:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800df5a:	f7ff fb63 	bl	800d624 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800df5e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800df60:	2d00      	cmp	r5, #0
 800df62:	d0bc      	beq.n	800dede <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800df64:	4639      	mov	r1, r7
 800df66:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df68:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800df6a:	f7ff fcdf 	bl	800d92c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800df6e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800df70:	6923      	ldr	r3, [r4, #16]
 800df72:	b173      	cbz	r3, 800df92 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800df74:	f104 0010 	add.w	r0, r4, #16
 800df78:	f000 fd82 	bl	800ea80 <xTaskRemoveFromEventList>
 800df7c:	b148      	cbz	r0, 800df92 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800df7e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800df82:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800df86:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800df8a:	f3bf 8f4f 	dsb	sy
 800df8e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800df92:	f7ff fb67 	bl	800d664 <vPortExitCritical>
				return pdPASS;
 800df96:	2001      	movs	r0, #1
}
 800df98:	b004      	add	sp, #16
 800df9a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800df9e:	4620      	mov	r0, r4
 800dfa0:	f7ff fcda 	bl	800d958 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800dfa4:	f000 fbee 	bl	800e784 <xTaskResumeAll>
 800dfa8:	e7d6      	b.n	800df58 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800dfaa:	4620      	mov	r0, r4
 800dfac:	f7ff fcd4 	bl	800d958 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800dfb0:	f000 fbe8 	bl	800e784 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800dfb4:	4620      	mov	r0, r4
 800dfb6:	f7ff fc79 	bl	800d8ac <prvIsQueueEmpty>
 800dfba:	2800      	cmp	r0, #0
 800dfbc:	d0cc      	beq.n	800df58 <xQueueReceive+0xd6>
 800dfbe:	e792      	b.n	800dee6 <xQueueReceive+0x64>

0800dfc0 <xQueueSemaphoreTake>:
{
 800dfc0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dfc2:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800dfc4:	4604      	mov	r4, r0
{
 800dfc6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800dfc8:	b940      	cbnz	r0, 800dfdc <xQueueSemaphoreTake+0x1c>
 800dfca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfce:	f383 8811 	msr	BASEPRI, r3
 800dfd2:	f3bf 8f6f 	isb	sy
 800dfd6:	f3bf 8f4f 	dsb	sy
 800dfda:	e7fe      	b.n	800dfda <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800dfdc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800dfde:	b145      	cbz	r5, 800dff2 <xQueueSemaphoreTake+0x32>
 800dfe0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfe4:	f383 8811 	msr	BASEPRI, r3
 800dfe8:	f3bf 8f6f 	isb	sy
 800dfec:	f3bf 8f4f 	dsb	sy
 800dff0:	e7fe      	b.n	800dff0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800dff2:	f000 fdd7 	bl	800eba4 <xTaskGetSchedulerState>
 800dff6:	4606      	mov	r6, r0
 800dff8:	b950      	cbnz	r0, 800e010 <xQueueSemaphoreTake+0x50>
 800dffa:	9b01      	ldr	r3, [sp, #4]
 800dffc:	b15b      	cbz	r3, 800e016 <xQueueSemaphoreTake+0x56>
 800dffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e002:	f383 8811 	msr	BASEPRI, r3
 800e006:	f3bf 8f6f 	isb	sy
 800e00a:	f3bf 8f4f 	dsb	sy
 800e00e:	e7fe      	b.n	800e00e <xQueueSemaphoreTake+0x4e>
 800e010:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800e012:	2700      	movs	r7, #0
 800e014:	e053      	b.n	800e0be <xQueueSemaphoreTake+0xfe>
 800e016:	4605      	mov	r5, r0
 800e018:	e7fb      	b.n	800e012 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800e01a:	9b01      	ldr	r3, [sp, #4]
 800e01c:	b963      	cbnz	r3, 800e038 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800e01e:	b145      	cbz	r5, 800e032 <xQueueSemaphoreTake+0x72>
 800e020:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e024:	f383 8811 	msr	BASEPRI, r3
 800e028:	f3bf 8f6f 	isb	sy
 800e02c:	f3bf 8f4f 	dsb	sy
 800e030:	e7fe      	b.n	800e030 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800e032:	f7ff fb17 	bl	800d664 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800e036:	e062      	b.n	800e0fe <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800e038:	b916      	cbnz	r6, 800e040 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800e03a:	a802      	add	r0, sp, #8
 800e03c:	f000 fd64 	bl	800eb08 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800e040:	f7ff fb10 	bl	800d664 <vPortExitCritical>
		vTaskSuspendAll();
 800e044:	f000 fafa 	bl	800e63c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800e048:	f7ff faec 	bl	800d624 <vPortEnterCritical>
 800e04c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e050:	2bff      	cmp	r3, #255	; 0xff
 800e052:	bf08      	it	eq
 800e054:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800e058:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e05c:	2bff      	cmp	r3, #255	; 0xff
 800e05e:	bf08      	it	eq
 800e060:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800e064:	f7ff fafe 	bl	800d664 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800e068:	a901      	add	r1, sp, #4
 800e06a:	a802      	add	r0, sp, #8
 800e06c:	f000 fd58 	bl	800eb20 <xTaskCheckForTimeOut>
 800e070:	2800      	cmp	r0, #0
 800e072:	d14d      	bne.n	800e110 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e074:	4620      	mov	r0, r4
 800e076:	f7ff fc19 	bl	800d8ac <prvIsQueueEmpty>
 800e07a:	2800      	cmp	r0, #0
 800e07c:	d042      	beq.n	800e104 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e07e:	6823      	ldr	r3, [r4, #0]
 800e080:	b93b      	cbnz	r3, 800e092 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800e082:	f7ff facf 	bl	800d624 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800e086:	68a0      	ldr	r0, [r4, #8]
 800e088:	f000 fd9c 	bl	800ebc4 <xTaskPriorityInherit>
 800e08c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800e08e:	f7ff fae9 	bl	800d664 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800e092:	9901      	ldr	r1, [sp, #4]
 800e094:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e098:	f000 fcba 	bl	800ea10 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800e09c:	4620      	mov	r0, r4
 800e09e:	f7ff fc5b 	bl	800d958 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800e0a2:	f000 fb6f 	bl	800e784 <xTaskResumeAll>
 800e0a6:	b948      	cbnz	r0, 800e0bc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800e0a8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0ac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0b0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0b4:	f3bf 8f4f 	dsb	sy
 800e0b8:	f3bf 8f6f 	isb	sy
 800e0bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800e0be:	f7ff fab1 	bl	800d624 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800e0c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800e0c4:	2b00      	cmp	r3, #0
 800e0c6:	d0a8      	beq.n	800e01a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800e0c8:	3b01      	subs	r3, #1
 800e0ca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800e0cc:	6823      	ldr	r3, [r4, #0]
 800e0ce:	b913      	cbnz	r3, 800e0d6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800e0d0:	f000 fe50 	bl	800ed74 <pvTaskIncrementMutexHeldCount>
 800e0d4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e0d6:	6923      	ldr	r3, [r4, #16]
 800e0d8:	b173      	cbz	r3, 800e0f8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e0da:	f104 0010 	add.w	r0, r4, #16
 800e0de:	f000 fccf 	bl	800ea80 <xTaskRemoveFromEventList>
 800e0e2:	b148      	cbz	r0, 800e0f8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800e0e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e0e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e0ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e0f0:	f3bf 8f4f 	dsb	sy
 800e0f4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800e0f8:	f7ff fab4 	bl	800d664 <vPortExitCritical>
				return pdPASS;
 800e0fc:	2501      	movs	r5, #1
}
 800e0fe:	4628      	mov	r0, r5
 800e100:	b005      	add	sp, #20
 800e102:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800e104:	4620      	mov	r0, r4
 800e106:	f7ff fc27 	bl	800d958 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800e10a:	f000 fb3b 	bl	800e784 <xTaskResumeAll>
 800e10e:	e7d5      	b.n	800e0bc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800e110:	4620      	mov	r0, r4
 800e112:	f7ff fc21 	bl	800d958 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800e116:	f000 fb35 	bl	800e784 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800e11a:	4620      	mov	r0, r4
 800e11c:	f7ff fbc6 	bl	800d8ac <prvIsQueueEmpty>
 800e120:	2800      	cmp	r0, #0
 800e122:	d0cb      	beq.n	800e0bc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800e124:	2d00      	cmp	r5, #0
 800e126:	d0ea      	beq.n	800e0fe <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800e128:	f7ff fa7c 	bl	800d624 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800e12c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800e12e:	b119      	cbz	r1, 800e138 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800e130:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e132:	6819      	ldr	r1, [r3, #0]
 800e134:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800e138:	68a0      	ldr	r0, [r4, #8]
 800e13a:	f000 fdc9 	bl	800ecd0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800e13e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800e140:	f7ff fa90 	bl	800d664 <vPortExitCritical>
 800e144:	e7db      	b.n	800e0fe <xQueueSemaphoreTake+0x13e>

0800e146 <xQueueReceiveFromISR>:
{
 800e146:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e14a:	4689      	mov	r9, r1
 800e14c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800e14e:	4605      	mov	r5, r0
 800e150:	b940      	cbnz	r0, 800e164 <xQueueReceiveFromISR+0x1e>
 800e152:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e156:	f383 8811 	msr	BASEPRI, r3
 800e15a:	f3bf 8f6f 	isb	sy
 800e15e:	f3bf 8f4f 	dsb	sy
 800e162:	e7fe      	b.n	800e162 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800e164:	b951      	cbnz	r1, 800e17c <xQueueReceiveFromISR+0x36>
 800e166:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800e168:	b143      	cbz	r3, 800e17c <xQueueReceiveFromISR+0x36>
 800e16a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e16e:	f383 8811 	msr	BASEPRI, r3
 800e172:	f3bf 8f6f 	isb	sy
 800e176:	f3bf 8f4f 	dsb	sy
 800e17a:	e7fe      	b.n	800e17a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800e17c:	f7ff fb68 	bl	800d850 <vPortValidateInterruptPriority>
	__asm volatile
 800e180:	f3ef 8711 	mrs	r7, BASEPRI
 800e184:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e188:	f383 8811 	msr	BASEPRI, r3
 800e18c:	f3bf 8f6f 	isb	sy
 800e190:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800e194:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800e196:	b31c      	cbz	r4, 800e1e0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800e198:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e19c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800e19e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800e1a0:	4628      	mov	r0, r5
 800e1a2:	f7ff fbc3 	bl	800d92c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e1a6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800e1a8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800e1aa:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800e1ac:	d113      	bne.n	800e1d6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800e1ae:	692b      	ldr	r3, [r5, #16]
 800e1b0:	b90b      	cbnz	r3, 800e1b6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800e1b2:	2001      	movs	r0, #1
 800e1b4:	e00b      	b.n	800e1ce <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800e1b6:	f105 0010 	add.w	r0, r5, #16
 800e1ba:	f000 fc61 	bl	800ea80 <xTaskRemoveFromEventList>
 800e1be:	2800      	cmp	r0, #0
 800e1c0:	d0f7      	beq.n	800e1b2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800e1c2:	f1b8 0f00 	cmp.w	r8, #0
 800e1c6:	d0f4      	beq.n	800e1b2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800e1c8:	2001      	movs	r0, #1
 800e1ca:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800e1ce:	f387 8811 	msr	BASEPRI, r7
}
 800e1d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800e1d6:	3601      	adds	r6, #1
 800e1d8:	b276      	sxtb	r6, r6
 800e1da:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800e1de:	e7e8      	b.n	800e1b2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800e1e0:	4620      	mov	r0, r4
 800e1e2:	e7f4      	b.n	800e1ce <xQueueReceiveFromISR+0x88>

0800e1e4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800e1e4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e1e6:	4a07      	ldr	r2, [pc, #28]	; (800e204 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1e8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800e1ea:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800e1ee:	b92c      	cbnz	r4, 800e1fc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800e1f0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800e1f4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800e1f8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800e1fa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e1fc:	3301      	adds	r3, #1
 800e1fe:	2b08      	cmp	r3, #8
 800e200:	d1f3      	bne.n	800e1ea <vQueueAddToRegistry+0x6>
 800e202:	e7fa      	b.n	800e1fa <vQueueAddToRegistry+0x16>
 800e204:	2000e8a8 	.word	0x2000e8a8

0800e208 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800e208:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e20a:	4a08      	ldr	r2, [pc, #32]	; (800e22c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e20c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800e20e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800e212:	684c      	ldr	r4, [r1, #4]
 800e214:	4284      	cmp	r4, r0
 800e216:	d104      	bne.n	800e222 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800e218:	2000      	movs	r0, #0
 800e21a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800e21e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800e220:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800e222:	3301      	adds	r3, #1
 800e224:	2b08      	cmp	r3, #8
 800e226:	d1f2      	bne.n	800e20e <vQueueUnregisterQueue+0x6>
 800e228:	e7fa      	b.n	800e220 <vQueueUnregisterQueue+0x18>
 800e22a:	bf00      	nop
 800e22c:	2000e8a8 	.word	0x2000e8a8

0800e230 <vQueueDelete>:
{
 800e230:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800e232:	4604      	mov	r4, r0
 800e234:	b940      	cbnz	r0, 800e248 <vQueueDelete+0x18>
	__asm volatile
 800e236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e23a:	f383 8811 	msr	BASEPRI, r3
 800e23e:	f3bf 8f6f 	isb	sy
 800e242:	f3bf 8f4f 	dsb	sy
 800e246:	e7fe      	b.n	800e246 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800e248:	f7ff ffde 	bl	800e208 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800e24c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800e250:	b923      	cbnz	r3, 800e25c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800e252:	4620      	mov	r0, r4
}
 800e254:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800e258:	f7ff b8fc 	b.w	800d454 <vPortFree>
}
 800e25c:	bd10      	pop	{r4, pc}

0800e25e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800e25e:	b570      	push	{r4, r5, r6, lr}
 800e260:	4604      	mov	r4, r0
 800e262:	460d      	mov	r5, r1
 800e264:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800e266:	f7ff f9dd 	bl	800d624 <vPortEnterCritical>
 800e26a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e26e:	2bff      	cmp	r3, #255	; 0xff
 800e270:	bf04      	itt	eq
 800e272:	2300      	moveq	r3, #0
 800e274:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800e278:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800e27c:	2bff      	cmp	r3, #255	; 0xff
 800e27e:	bf04      	itt	eq
 800e280:	2300      	moveq	r3, #0
 800e282:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800e286:	f7ff f9ed 	bl	800d664 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800e28a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800e28c:	b92b      	cbnz	r3, 800e29a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800e28e:	4632      	mov	r2, r6
 800e290:	4629      	mov	r1, r5
 800e292:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800e296:	f000 fbd5 	bl	800ea44 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800e29a:	4620      	mov	r0, r4
	}
 800e29c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800e2a0:	f7ff bb5a 	b.w	800d958 <prvUnlockQueue>

0800e2a4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800e2a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e2a8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800e2aa:	f7ff f9bb 	bl	800d624 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800e2ae:	4b30      	ldr	r3, [pc, #192]	; (800e370 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800e2b0:	4e30      	ldr	r6, [pc, #192]	; (800e374 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800e2b2:	681a      	ldr	r2, [r3, #0]
 800e2b4:	4f30      	ldr	r7, [pc, #192]	; (800e378 <prvAddNewTaskToReadyList+0xd4>)
 800e2b6:	3201      	adds	r2, #1
 800e2b8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800e2ba:	6835      	ldr	r5, [r6, #0]
 800e2bc:	2d00      	cmp	r5, #0
 800e2be:	d14b      	bne.n	800e358 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800e2c0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800e2c2:	681b      	ldr	r3, [r3, #0]
 800e2c4:	2b01      	cmp	r3, #1
 800e2c6:	d11f      	bne.n	800e308 <prvAddNewTaskToReadyList+0x64>
 800e2c8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2ca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2cc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800e2ce:	f7ff f8ff 	bl	800d4d0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800e2d2:	2d38      	cmp	r5, #56	; 0x38
 800e2d4:	f108 0814 	add.w	r8, r8, #20
 800e2d8:	d1f7      	bne.n	800e2ca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800e2da:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800e3a0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800e2de:	4d27      	ldr	r5, [pc, #156]	; (800e37c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800e2e0:	4640      	mov	r0, r8
 800e2e2:	f7ff f8f5 	bl	800d4d0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800e2e6:	4628      	mov	r0, r5
 800e2e8:	f7ff f8f2 	bl	800d4d0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800e2ec:	4824      	ldr	r0, [pc, #144]	; (800e380 <prvAddNewTaskToReadyList+0xdc>)
 800e2ee:	f7ff f8ef 	bl	800d4d0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800e2f2:	4824      	ldr	r0, [pc, #144]	; (800e384 <prvAddNewTaskToReadyList+0xe0>)
 800e2f4:	f7ff f8ec 	bl	800d4d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800e2f8:	4823      	ldr	r0, [pc, #140]	; (800e388 <prvAddNewTaskToReadyList+0xe4>)
 800e2fa:	f7ff f8e9 	bl	800d4d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800e2fe:	4b23      	ldr	r3, [pc, #140]	; (800e38c <prvAddNewTaskToReadyList+0xe8>)
 800e300:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800e304:	4b22      	ldr	r3, [pc, #136]	; (800e390 <prvAddNewTaskToReadyList+0xec>)
 800e306:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800e308:	4a22      	ldr	r2, [pc, #136]	; (800e394 <prvAddNewTaskToReadyList+0xf0>)
 800e30a:	6813      	ldr	r3, [r2, #0]
 800e30c:	3301      	adds	r3, #1
 800e30e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800e310:	4a21      	ldr	r2, [pc, #132]	; (800e398 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800e312:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800e314:	6811      	ldr	r1, [r2, #0]
 800e316:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e318:	2014      	movs	r0, #20
 800e31a:	428b      	cmp	r3, r1
 800e31c:	fb00 7003 	mla	r0, r0, r3, r7
 800e320:	f104 0104 	add.w	r1, r4, #4
 800e324:	bf88      	it	hi
 800e326:	6013      	strhi	r3, [r2, #0]
 800e328:	f7ff f8e0 	bl	800d4ec <vListInsertEnd>
	taskEXIT_CRITICAL();
 800e32c:	f7ff f99a 	bl	800d664 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800e330:	4b1a      	ldr	r3, [pc, #104]	; (800e39c <prvAddNewTaskToReadyList+0xf8>)
 800e332:	681b      	ldr	r3, [r3, #0]
 800e334:	b173      	cbz	r3, 800e354 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800e336:	6833      	ldr	r3, [r6, #0]
 800e338:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e33a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e33c:	429a      	cmp	r2, r3
 800e33e:	d209      	bcs.n	800e354 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800e340:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e344:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e348:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e34c:	f3bf 8f4f 	dsb	sy
 800e350:	f3bf 8f6f 	isb	sy
}
 800e354:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800e358:	4b10      	ldr	r3, [pc, #64]	; (800e39c <prvAddNewTaskToReadyList+0xf8>)
 800e35a:	681b      	ldr	r3, [r3, #0]
 800e35c:	2b00      	cmp	r3, #0
 800e35e:	d1d3      	bne.n	800e308 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800e360:	6833      	ldr	r3, [r6, #0]
 800e362:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800e364:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e366:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800e368:	bf98      	it	ls
 800e36a:	6034      	strls	r4, [r6, #0]
 800e36c:	e7cc      	b.n	800e308 <prvAddNewTaskToReadyList+0x64>
 800e36e:	bf00      	nop
 800e370:	2000ed54 	.word	0x2000ed54
 800e374:	2000e8e8 	.word	0x2000e8e8
 800e378:	2000e8f4 	.word	0x2000e8f4
 800e37c:	2000ed7c 	.word	0x2000ed7c
 800e380:	2000ed9c 	.word	0x2000ed9c
 800e384:	2000edc8 	.word	0x2000edc8
 800e388:	2000edb4 	.word	0x2000edb4
 800e38c:	2000e8ec 	.word	0x2000e8ec
 800e390:	2000e8f0 	.word	0x2000e8f0
 800e394:	2000ed60 	.word	0x2000ed60
 800e398:	2000ed64 	.word	0x2000ed64
 800e39c:	2000edb0 	.word	0x2000edb0
 800e3a0:	2000ed68 	.word	0x2000ed68

0800e3a4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800e3a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800e3a6:	4b15      	ldr	r3, [pc, #84]	; (800e3fc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e3a8:	4e15      	ldr	r6, [pc, #84]	; (800e400 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800e3aa:	681d      	ldr	r5, [r3, #0]
{
 800e3ac:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e3ae:	6830      	ldr	r0, [r6, #0]
 800e3b0:	3004      	adds	r0, #4
{
 800e3b2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800e3b4:	f7ff f8bd 	bl	800d532 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800e3b8:	1c63      	adds	r3, r4, #1
 800e3ba:	d107      	bne.n	800e3cc <prvAddCurrentTaskToDelayedList+0x28>
 800e3bc:	b137      	cbz	r7, 800e3cc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3be:	6831      	ldr	r1, [r6, #0]
 800e3c0:	4810      	ldr	r0, [pc, #64]	; (800e404 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800e3c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3c6:	3104      	adds	r1, #4
 800e3c8:	f7ff b890 	b.w	800d4ec <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800e3cc:	6833      	ldr	r3, [r6, #0]
 800e3ce:	192c      	adds	r4, r5, r4
 800e3d0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800e3d2:	d307      	bcc.n	800e3e4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3d4:	4b0c      	ldr	r3, [pc, #48]	; (800e408 <prvAddCurrentTaskToDelayedList+0x64>)
 800e3d6:	6818      	ldr	r0, [r3, #0]
 800e3d8:	6831      	ldr	r1, [r6, #0]
}
 800e3da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3de:	3104      	adds	r1, #4
 800e3e0:	f7ff b890 	b.w	800d504 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800e3e4:	4b09      	ldr	r3, [pc, #36]	; (800e40c <prvAddCurrentTaskToDelayedList+0x68>)
 800e3e6:	6818      	ldr	r0, [r3, #0]
 800e3e8:	6831      	ldr	r1, [r6, #0]
 800e3ea:	3104      	adds	r1, #4
 800e3ec:	f7ff f88a 	bl	800d504 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800e3f0:	4b07      	ldr	r3, [pc, #28]	; (800e410 <prvAddCurrentTaskToDelayedList+0x6c>)
 800e3f2:	681a      	ldr	r2, [r3, #0]
 800e3f4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800e3f6:	bf88      	it	hi
 800e3f8:	601c      	strhi	r4, [r3, #0]
}
 800e3fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e3fc:	2000eddc 	.word	0x2000eddc
 800e400:	2000e8e8 	.word	0x2000e8e8
 800e404:	2000edb4 	.word	0x2000edb4
 800e408:	2000e8f0 	.word	0x2000e8f0
 800e40c:	2000e8ec 	.word	0x2000e8ec
 800e410:	2000ed90 	.word	0x2000ed90

0800e414 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e414:	4a06      	ldr	r2, [pc, #24]	; (800e430 <prvResetNextTaskUnblockTime+0x1c>)
 800e416:	6813      	ldr	r3, [r2, #0]
 800e418:	6819      	ldr	r1, [r3, #0]
 800e41a:	4b06      	ldr	r3, [pc, #24]	; (800e434 <prvResetNextTaskUnblockTime+0x20>)
 800e41c:	b919      	cbnz	r1, 800e426 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800e41e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e422:	601a      	str	r2, [r3, #0]
}
 800e424:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e426:	6812      	ldr	r2, [r2, #0]
 800e428:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800e42a:	68d2      	ldr	r2, [r2, #12]
 800e42c:	6852      	ldr	r2, [r2, #4]
 800e42e:	e7f8      	b.n	800e422 <prvResetNextTaskUnblockTime+0xe>
 800e430:	2000e8ec 	.word	0x2000e8ec
 800e434:	2000ed90 	.word	0x2000ed90

0800e438 <prvDeleteTCB>:
	{
 800e438:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e43a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800e43e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800e440:	b93b      	cbnz	r3, 800e452 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800e442:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800e444:	f7ff f806 	bl	800d454 <vPortFree>
				vPortFree( pxTCB );
 800e448:	4620      	mov	r0, r4
	}
 800e44a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800e44e:	f7ff b801 	b.w	800d454 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800e452:	2b01      	cmp	r3, #1
 800e454:	d0f9      	beq.n	800e44a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800e456:	2b02      	cmp	r3, #2
 800e458:	d008      	beq.n	800e46c <prvDeleteTCB+0x34>
 800e45a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e45e:	f383 8811 	msr	BASEPRI, r3
 800e462:	f3bf 8f6f 	isb	sy
 800e466:	f3bf 8f4f 	dsb	sy
 800e46a:	e7fe      	b.n	800e46a <prvDeleteTCB+0x32>
	}
 800e46c:	bd10      	pop	{r4, pc}
	...

0800e470 <prvIdleTask>:
{
 800e470:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e472:	4c14      	ldr	r4, [pc, #80]	; (800e4c4 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e474:	4f14      	ldr	r7, [pc, #80]	; (800e4c8 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800e476:	4d15      	ldr	r5, [pc, #84]	; (800e4cc <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800e478:	6823      	ldr	r3, [r4, #0]
 800e47a:	b983      	cbnz	r3, 800e49e <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800e47c:	4b14      	ldr	r3, [pc, #80]	; (800e4d0 <prvIdleTask+0x60>)
 800e47e:	681b      	ldr	r3, [r3, #0]
 800e480:	2b01      	cmp	r3, #1
 800e482:	d909      	bls.n	800e498 <prvIdleTask+0x28>
				taskYIELD();
 800e484:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e488:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e48c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e490:	f3bf 8f4f 	dsb	sy
 800e494:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800e498:	f7f3 fc30 	bl	8001cfc <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800e49c:	e7eb      	b.n	800e476 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800e49e:	f7ff f8c1 	bl	800d624 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e4a2:	68fb      	ldr	r3, [r7, #12]
 800e4a4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e4a6:	1d30      	adds	r0, r6, #4
 800e4a8:	f7ff f843 	bl	800d532 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800e4ac:	682b      	ldr	r3, [r5, #0]
 800e4ae:	3b01      	subs	r3, #1
 800e4b0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800e4b2:	6823      	ldr	r3, [r4, #0]
 800e4b4:	3b01      	subs	r3, #1
 800e4b6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800e4b8:	f7ff f8d4 	bl	800d664 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800e4bc:	4630      	mov	r0, r6
 800e4be:	f7ff ffbb 	bl	800e438 <prvDeleteTCB>
 800e4c2:	e7d9      	b.n	800e478 <prvIdleTask+0x8>
 800e4c4:	2000ed58 	.word	0x2000ed58
 800e4c8:	2000edc8 	.word	0x2000edc8
 800e4cc:	2000ed54 	.word	0x2000ed54
 800e4d0:	2000e8f4 	.word	0x2000e8f4

0800e4d4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e4d8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4dc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800e4e0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4e2:	4606      	mov	r6, r0
 800e4e4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800e4e8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800e4ea:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800e4ec:	f018 f92a 	bl	8026744 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800e4f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800e4f2:	f1a9 0904 	sub.w	r9, r9, #4
 800e4f6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800e4f8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800e4fc:	b3b5      	cbz	r5, 800e56c <prvInitialiseNewTask.constprop.0+0x98>
 800e4fe:	1e6b      	subs	r3, r5, #1
 800e500:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800e504:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800e506:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800e50a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800e50e:	b108      	cbz	r0, 800e514 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800e510:	42ab      	cmp	r3, r5
 800e512:	d1f8      	bne.n	800e506 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800e514:	2300      	movs	r3, #0
 800e516:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800e51a:	9d08      	ldr	r5, [sp, #32]
 800e51c:	2d37      	cmp	r5, #55	; 0x37
 800e51e:	bf28      	it	cs
 800e520:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800e522:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800e526:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800e528:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e52a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800e52c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800e530:	f7fe ffd9 	bl	800d4e6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e534:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800e538:	f104 0018 	add.w	r0, r4, #24
 800e53c:	f7fe ffd3 	bl	800d4e6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800e540:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800e544:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e546:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800e548:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800e54a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800e54e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800e552:	463a      	mov	r2, r7
 800e554:	4631      	mov	r1, r6
 800e556:	4648      	mov	r0, r9
 800e558:	f7ff f83a 	bl	800d5d0 <pxPortInitialiseStack>
 800e55c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800e55e:	f1b8 0f00 	cmp.w	r8, #0
 800e562:	d001      	beq.n	800e568 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800e564:	f8c8 4000 	str.w	r4, [r8]
}
 800e568:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800e56c:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800e570:	e7d3      	b.n	800e51a <prvInitialiseNewTask.constprop.0+0x46>

0800e572 <xTaskCreateStatic>:
	{
 800e572:	b570      	push	{r4, r5, r6, lr}
 800e574:	b086      	sub	sp, #24
 800e576:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800e57a:	b945      	cbnz	r5, 800e58e <xTaskCreateStatic+0x1c>
 800e57c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e580:	f383 8811 	msr	BASEPRI, r3
 800e584:	f3bf 8f6f 	isb	sy
 800e588:	f3bf 8f4f 	dsb	sy
 800e58c:	e7fe      	b.n	800e58c <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800e58e:	b944      	cbnz	r4, 800e5a2 <xTaskCreateStatic+0x30>
 800e590:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e594:	f383 8811 	msr	BASEPRI, r3
 800e598:	f3bf 8f6f 	isb	sy
 800e59c:	f3bf 8f4f 	dsb	sy
 800e5a0:	e7fe      	b.n	800e5a0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800e5a2:	2660      	movs	r6, #96	; 0x60
 800e5a4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800e5a6:	9e05      	ldr	r6, [sp, #20]
 800e5a8:	2e60      	cmp	r6, #96	; 0x60
 800e5aa:	d008      	beq.n	800e5be <xTaskCreateStatic+0x4c>
 800e5ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e5b0:	f383 8811 	msr	BASEPRI, r3
 800e5b4:	f3bf 8f6f 	isb	sy
 800e5b8:	f3bf 8f4f 	dsb	sy
 800e5bc:	e7fe      	b.n	800e5bc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800e5be:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800e5c0:	2502      	movs	r5, #2
 800e5c2:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e5c6:	ad04      	add	r5, sp, #16
 800e5c8:	9501      	str	r5, [sp, #4]
 800e5ca:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800e5cc:	9402      	str	r4, [sp, #8]
 800e5ce:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800e5d0:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800e5d2:	f7ff ff7f 	bl	800e4d4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e5d6:	4620      	mov	r0, r4
 800e5d8:	f7ff fe64 	bl	800e2a4 <prvAddNewTaskToReadyList>
	}
 800e5dc:	9804      	ldr	r0, [sp, #16]
 800e5de:	b006      	add	sp, #24
 800e5e0:	bd70      	pop	{r4, r5, r6, pc}

0800e5e2 <xTaskCreate>:
	{
 800e5e2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e5e6:	4607      	mov	r7, r0
 800e5e8:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e5ea:	0090      	lsls	r0, r2, #2
	{
 800e5ec:	4688      	mov	r8, r1
 800e5ee:	4616      	mov	r6, r2
 800e5f0:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800e5f2:	f7fe fe97 	bl	800d324 <pvPortMalloc>
			if( pxStack != NULL )
 800e5f6:	4605      	mov	r5, r0
 800e5f8:	b1e8      	cbz	r0, 800e636 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800e5fa:	2060      	movs	r0, #96	; 0x60
 800e5fc:	f7fe fe92 	bl	800d324 <pvPortMalloc>
				if( pxNewTCB != NULL )
 800e600:	4604      	mov	r4, r0
 800e602:	b1a8      	cbz	r0, 800e630 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800e604:	2300      	movs	r3, #0
 800e606:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e60a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800e60c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800e60e:	9301      	str	r3, [sp, #4]
 800e610:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e612:	9002      	str	r0, [sp, #8]
 800e614:	9300      	str	r3, [sp, #0]
 800e616:	4632      	mov	r2, r6
 800e618:	464b      	mov	r3, r9
 800e61a:	4641      	mov	r1, r8
 800e61c:	4638      	mov	r0, r7
 800e61e:	f7ff ff59 	bl	800e4d4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800e622:	4620      	mov	r0, r4
 800e624:	f7ff fe3e 	bl	800e2a4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800e628:	2001      	movs	r0, #1
	}
 800e62a:	b005      	add	sp, #20
 800e62c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800e630:	4628      	mov	r0, r5
 800e632:	f7fe ff0f 	bl	800d454 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800e636:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800e63a:	e7f6      	b.n	800e62a <xTaskCreate+0x48>

0800e63c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800e63c:	4a02      	ldr	r2, [pc, #8]	; (800e648 <vTaskSuspendAll+0xc>)
 800e63e:	6813      	ldr	r3, [r2, #0]
 800e640:	3301      	adds	r3, #1
 800e642:	6013      	str	r3, [r2, #0]
}
 800e644:	4770      	bx	lr
 800e646:	bf00      	nop
 800e648:	2000ed5c 	.word	0x2000ed5c

0800e64c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800e64c:	4b01      	ldr	r3, [pc, #4]	; (800e654 <xTaskGetTickCount+0x8>)
 800e64e:	6818      	ldr	r0, [r3, #0]
}
 800e650:	4770      	bx	lr
 800e652:	bf00      	nop
 800e654:	2000eddc 	.word	0x2000eddc

0800e658 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e658:	4b3f      	ldr	r3, [pc, #252]	; (800e758 <xTaskIncrementTick+0x100>)
 800e65a:	681b      	ldr	r3, [r3, #0]
{
 800e65c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e660:	2b00      	cmp	r3, #0
 800e662:	d173      	bne.n	800e74c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800e664:	4b3d      	ldr	r3, [pc, #244]	; (800e75c <xTaskIncrementTick+0x104>)
 800e666:	681d      	ldr	r5, [r3, #0]
 800e668:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800e66a:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800e66c:	b9bd      	cbnz	r5, 800e69e <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800e66e:	4b3c      	ldr	r3, [pc, #240]	; (800e760 <xTaskIncrementTick+0x108>)
 800e670:	681a      	ldr	r2, [r3, #0]
 800e672:	6812      	ldr	r2, [r2, #0]
 800e674:	b142      	cbz	r2, 800e688 <xTaskIncrementTick+0x30>
 800e676:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e67a:	f383 8811 	msr	BASEPRI, r3
 800e67e:	f3bf 8f6f 	isb	sy
 800e682:	f3bf 8f4f 	dsb	sy
 800e686:	e7fe      	b.n	800e686 <xTaskIncrementTick+0x2e>
 800e688:	4a36      	ldr	r2, [pc, #216]	; (800e764 <xTaskIncrementTick+0x10c>)
 800e68a:	6819      	ldr	r1, [r3, #0]
 800e68c:	6810      	ldr	r0, [r2, #0]
 800e68e:	6018      	str	r0, [r3, #0]
 800e690:	6011      	str	r1, [r2, #0]
 800e692:	4a35      	ldr	r2, [pc, #212]	; (800e768 <xTaskIncrementTick+0x110>)
 800e694:	6813      	ldr	r3, [r2, #0]
 800e696:	3301      	adds	r3, #1
 800e698:	6013      	str	r3, [r2, #0]
 800e69a:	f7ff febb 	bl	800e414 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e69e:	4e33      	ldr	r6, [pc, #204]	; (800e76c <xTaskIncrementTick+0x114>)
 800e6a0:	4f33      	ldr	r7, [pc, #204]	; (800e770 <xTaskIncrementTick+0x118>)
 800e6a2:	6833      	ldr	r3, [r6, #0]
 800e6a4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800e77c <xTaskIncrementTick+0x124>
 800e6a8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800e6aa:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800e6ae:	d211      	bcs.n	800e6d4 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800e6b0:	f8d8 3000 	ldr.w	r3, [r8]
 800e6b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6b6:	2214      	movs	r2, #20
 800e6b8:	4353      	muls	r3, r2
 800e6ba:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800e6bc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800e6be:	4b2d      	ldr	r3, [pc, #180]	; (800e774 <xTaskIncrementTick+0x11c>)
 800e6c0:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800e6c2:	bf28      	it	cs
 800e6c4:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800e6c6:	2b00      	cmp	r3, #0
 800e6c8:	bf18      	it	ne
 800e6ca:	2401      	movne	r4, #1
}
 800e6cc:	4620      	mov	r0, r4
 800e6ce:	b003      	add	sp, #12
 800e6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6d4:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800e760 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800e6d8:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800e780 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800e6dc:	f8d9 3000 	ldr.w	r3, [r9]
 800e6e0:	681b      	ldr	r3, [r3, #0]
 800e6e2:	b91b      	cbnz	r3, 800e6ec <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800e6e4:	f04f 33ff 	mov.w	r3, #4294967295
 800e6e8:	6033      	str	r3, [r6, #0]
					break;
 800e6ea:	e7e1      	b.n	800e6b0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e6ec:	f8d9 3000 	ldr.w	r3, [r9]
 800e6f0:	68db      	ldr	r3, [r3, #12]
 800e6f2:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800e6f6:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800e6fa:	4295      	cmp	r5, r2
 800e6fc:	d201      	bcs.n	800e702 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800e6fe:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800e700:	e7d6      	b.n	800e6b0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e702:	f10b 0104 	add.w	r1, fp, #4
 800e706:	4608      	mov	r0, r1
 800e708:	9101      	str	r1, [sp, #4]
 800e70a:	f7fe ff12 	bl	800d532 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800e70e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800e712:	9901      	ldr	r1, [sp, #4]
 800e714:	b122      	cbz	r2, 800e720 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e716:	f10b 0018 	add.w	r0, fp, #24
 800e71a:	f7fe ff0a 	bl	800d532 <uxListRemove>
 800e71e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800e720:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800e724:	f8da 2000 	ldr.w	r2, [sl]
 800e728:	2314      	movs	r3, #20
 800e72a:	4290      	cmp	r0, r2
 800e72c:	bf88      	it	hi
 800e72e:	f8ca 0000 	strhi.w	r0, [sl]
 800e732:	fb03 7000 	mla	r0, r3, r0, r7
 800e736:	f7fe fed9 	bl	800d4ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e73a:	f8d8 1000 	ldr.w	r1, [r8]
 800e73e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800e742:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800e744:	429a      	cmp	r2, r3
 800e746:	bf28      	it	cs
 800e748:	2401      	movcs	r4, #1
 800e74a:	e7c7      	b.n	800e6dc <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800e74c:	4a0a      	ldr	r2, [pc, #40]	; (800e778 <xTaskIncrementTick+0x120>)
 800e74e:	6813      	ldr	r3, [r2, #0]
 800e750:	3301      	adds	r3, #1
 800e752:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800e754:	2400      	movs	r4, #0
	return xSwitchRequired;
 800e756:	e7b9      	b.n	800e6cc <xTaskIncrementTick+0x74>
 800e758:	2000ed5c 	.word	0x2000ed5c
 800e75c:	2000eddc 	.word	0x2000eddc
 800e760:	2000e8ec 	.word	0x2000e8ec
 800e764:	2000e8f0 	.word	0x2000e8f0
 800e768:	2000ed94 	.word	0x2000ed94
 800e76c:	2000ed90 	.word	0x2000ed90
 800e770:	2000e8f4 	.word	0x2000e8f4
 800e774:	2000ede0 	.word	0x2000ede0
 800e778:	2000ed98 	.word	0x2000ed98
 800e77c:	2000e8e8 	.word	0x2000e8e8
 800e780:	2000ed64 	.word	0x2000ed64

0800e784 <xTaskResumeAll>:
{
 800e784:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800e786:	4c31      	ldr	r4, [pc, #196]	; (800e84c <xTaskResumeAll+0xc8>)
 800e788:	6823      	ldr	r3, [r4, #0]
 800e78a:	b943      	cbnz	r3, 800e79e <xTaskResumeAll+0x1a>
 800e78c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e790:	f383 8811 	msr	BASEPRI, r3
 800e794:	f3bf 8f6f 	isb	sy
 800e798:	f3bf 8f4f 	dsb	sy
 800e79c:	e7fe      	b.n	800e79c <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800e79e:	f7fe ff41 	bl	800d624 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800e7a2:	6823      	ldr	r3, [r4, #0]
 800e7a4:	3b01      	subs	r3, #1
 800e7a6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800e7a8:	6824      	ldr	r4, [r4, #0]
 800e7aa:	b12c      	cbz	r4, 800e7b8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800e7ac:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800e7ae:	f7fe ff59 	bl	800d664 <vPortExitCritical>
}
 800e7b2:	4620      	mov	r0, r4
 800e7b4:	b003      	add	sp, #12
 800e7b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800e7b8:	4b25      	ldr	r3, [pc, #148]	; (800e850 <xTaskResumeAll+0xcc>)
 800e7ba:	681b      	ldr	r3, [r3, #0]
 800e7bc:	2b00      	cmp	r3, #0
 800e7be:	d0f5      	beq.n	800e7ac <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e7c0:	4d24      	ldr	r5, [pc, #144]	; (800e854 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800e7c2:	4e25      	ldr	r6, [pc, #148]	; (800e858 <xTaskResumeAll+0xd4>)
 800e7c4:	4f25      	ldr	r7, [pc, #148]	; (800e85c <xTaskResumeAll+0xd8>)
 800e7c6:	e01e      	b.n	800e806 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e7c8:	68eb      	ldr	r3, [r5, #12]
 800e7ca:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800e7cc:	f104 0018 	add.w	r0, r4, #24
 800e7d0:	f7fe feaf 	bl	800d532 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800e7d4:	1d21      	adds	r1, r4, #4
 800e7d6:	4608      	mov	r0, r1
 800e7d8:	9101      	str	r1, [sp, #4]
 800e7da:	f7fe feaa 	bl	800d532 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800e7de:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800e7e0:	6832      	ldr	r2, [r6, #0]
 800e7e2:	9901      	ldr	r1, [sp, #4]
 800e7e4:	2014      	movs	r0, #20
 800e7e6:	4293      	cmp	r3, r2
 800e7e8:	fb00 7003 	mla	r0, r0, r3, r7
 800e7ec:	bf88      	it	hi
 800e7ee:	6033      	strhi	r3, [r6, #0]
 800e7f0:	f7fe fe7c 	bl	800d4ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800e7f4:	4b1a      	ldr	r3, [pc, #104]	; (800e860 <xTaskResumeAll+0xdc>)
 800e7f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e7f8:	681b      	ldr	r3, [r3, #0]
 800e7fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7fc:	429a      	cmp	r2, r3
 800e7fe:	d302      	bcc.n	800e806 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800e800:	4b18      	ldr	r3, [pc, #96]	; (800e864 <xTaskResumeAll+0xe0>)
 800e802:	2201      	movs	r2, #1
 800e804:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800e806:	682b      	ldr	r3, [r5, #0]
 800e808:	2b00      	cmp	r3, #0
 800e80a:	d1dd      	bne.n	800e7c8 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800e80c:	b10c      	cbz	r4, 800e812 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800e80e:	f7ff fe01 	bl	800e414 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800e812:	4d15      	ldr	r5, [pc, #84]	; (800e868 <xTaskResumeAll+0xe4>)
 800e814:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800e816:	b144      	cbz	r4, 800e82a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800e818:	4e12      	ldr	r6, [pc, #72]	; (800e864 <xTaskResumeAll+0xe0>)
 800e81a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800e81c:	f7ff ff1c 	bl	800e658 <xTaskIncrementTick>
 800e820:	b100      	cbz	r0, 800e824 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800e822:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800e824:	3c01      	subs	r4, #1
 800e826:	d1f9      	bne.n	800e81c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800e828:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800e82a:	4b0e      	ldr	r3, [pc, #56]	; (800e864 <xTaskResumeAll+0xe0>)
 800e82c:	681b      	ldr	r3, [r3, #0]
 800e82e:	2b00      	cmp	r3, #0
 800e830:	d0bc      	beq.n	800e7ac <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800e832:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e836:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e83a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e83e:	f3bf 8f4f 	dsb	sy
 800e842:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800e846:	2401      	movs	r4, #1
 800e848:	e7b1      	b.n	800e7ae <xTaskResumeAll+0x2a>
 800e84a:	bf00      	nop
 800e84c:	2000ed5c 	.word	0x2000ed5c
 800e850:	2000ed54 	.word	0x2000ed54
 800e854:	2000ed9c 	.word	0x2000ed9c
 800e858:	2000ed64 	.word	0x2000ed64
 800e85c:	2000e8f4 	.word	0x2000e8f4
 800e860:	2000e8e8 	.word	0x2000e8e8
 800e864:	2000ede0 	.word	0x2000ede0
 800e868:	2000ed98 	.word	0x2000ed98

0800e86c <vTaskDelay>:
	{
 800e86c:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800e86e:	b950      	cbnz	r0, 800e886 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800e870:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800e874:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e878:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800e87c:	f3bf 8f4f 	dsb	sy
 800e880:	f3bf 8f6f 	isb	sy
	}
 800e884:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800e886:	4b0a      	ldr	r3, [pc, #40]	; (800e8b0 <vTaskDelay+0x44>)
 800e888:	6819      	ldr	r1, [r3, #0]
 800e88a:	b141      	cbz	r1, 800e89e <vTaskDelay+0x32>
 800e88c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e890:	f383 8811 	msr	BASEPRI, r3
 800e894:	f3bf 8f6f 	isb	sy
 800e898:	f3bf 8f4f 	dsb	sy
 800e89c:	e7fe      	b.n	800e89c <vTaskDelay+0x30>
			vTaskSuspendAll();
 800e89e:	f7ff fecd 	bl	800e63c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800e8a2:	f7ff fd7f 	bl	800e3a4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800e8a6:	f7ff ff6d 	bl	800e784 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800e8aa:	2800      	cmp	r0, #0
 800e8ac:	d0e0      	beq.n	800e870 <vTaskDelay+0x4>
 800e8ae:	e7e9      	b.n	800e884 <vTaskDelay+0x18>
 800e8b0:	2000ed5c 	.word	0x2000ed5c

0800e8b4 <vTaskSetApplicationTaskTag>:
	{
 800e8b4:	b538      	push	{r3, r4, r5, lr}
 800e8b6:	460d      	mov	r5, r1
		if( xTask == NULL )
 800e8b8:	4604      	mov	r4, r0
 800e8ba:	b908      	cbnz	r0, 800e8c0 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800e8bc:	4b04      	ldr	r3, [pc, #16]	; (800e8d0 <vTaskSetApplicationTaskTag+0x1c>)
 800e8be:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800e8c0:	f7fe feb0 	bl	800d624 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800e8c4:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800e8c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800e8ca:	f7fe becb 	b.w	800d664 <vPortExitCritical>
 800e8ce:	bf00      	nop
 800e8d0:	2000e8e8 	.word	0x2000e8e8

0800e8d4 <xTaskCallApplicationTaskHook>:
	{
 800e8d4:	4603      	mov	r3, r0
 800e8d6:	4608      	mov	r0, r1
		if( xTask == NULL )
 800e8d8:	b90b      	cbnz	r3, 800e8de <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800e8da:	4b03      	ldr	r3, [pc, #12]	; (800e8e8 <xTaskCallApplicationTaskHook+0x14>)
 800e8dc:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800e8de:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800e8e0:	b103      	cbz	r3, 800e8e4 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800e8e2:	4718      	bx	r3
	}
 800e8e4:	4618      	mov	r0, r3
 800e8e6:	4770      	bx	lr
 800e8e8:	2000e8e8 	.word	0x2000e8e8

0800e8ec <vTaskStartScheduler>:
{
 800e8ec:	b510      	push	{r4, lr}
 800e8ee:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800e8f0:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8f2:	aa07      	add	r2, sp, #28
 800e8f4:	a906      	add	r1, sp, #24
 800e8f6:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800e8f8:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800e8fc:	f7fe fcd6 	bl	800d2ac <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800e900:	9b05      	ldr	r3, [sp, #20]
 800e902:	9302      	str	r3, [sp, #8]
 800e904:	9b06      	ldr	r3, [sp, #24]
 800e906:	9a07      	ldr	r2, [sp, #28]
 800e908:	4919      	ldr	r1, [pc, #100]	; (800e970 <vTaskStartScheduler+0x84>)
 800e90a:	481a      	ldr	r0, [pc, #104]	; (800e974 <vTaskStartScheduler+0x88>)
 800e90c:	e9cd 4300 	strd	r4, r3, [sp]
 800e910:	4623      	mov	r3, r4
 800e912:	f7ff fe2e 	bl	800e572 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800e916:	b340      	cbz	r0, 800e96a <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800e918:	f000 fa8a 	bl	800ee30 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800e91c:	2801      	cmp	r0, #1
 800e91e:	d119      	bne.n	800e954 <vTaskStartScheduler+0x68>
 800e920:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e924:	f383 8811 	msr	BASEPRI, r3
 800e928:	f3bf 8f6f 	isb	sy
 800e92c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800e930:	4b11      	ldr	r3, [pc, #68]	; (800e978 <vTaskStartScheduler+0x8c>)
 800e932:	f04f 32ff 	mov.w	r2, #4294967295
 800e936:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800e938:	4b10      	ldr	r3, [pc, #64]	; (800e97c <vTaskStartScheduler+0x90>)
 800e93a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800e93c:	4b10      	ldr	r3, [pc, #64]	; (800e980 <vTaskStartScheduler+0x94>)
 800e93e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800e940:	4b10      	ldr	r3, [pc, #64]	; (800e984 <vTaskStartScheduler+0x98>)
 800e942:	4621      	mov	r1, r4
 800e944:	6818      	ldr	r0, [r3, #0]
 800e946:	f7ff ffc5 	bl	800e8d4 <xTaskCallApplicationTaskHook>
}
 800e94a:	b008      	add	sp, #32
 800e94c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800e950:	f7fe bef8 	b.w	800d744 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800e954:	3001      	adds	r0, #1
 800e956:	d108      	bne.n	800e96a <vTaskStartScheduler+0x7e>
 800e958:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e95c:	f383 8811 	msr	BASEPRI, r3
 800e960:	f3bf 8f6f 	isb	sy
 800e964:	f3bf 8f4f 	dsb	sy
 800e968:	e7fe      	b.n	800e968 <vTaskStartScheduler+0x7c>
}
 800e96a:	b008      	add	sp, #32
 800e96c:	bd10      	pop	{r4, pc}
 800e96e:	bf00      	nop
 800e970:	08029c45 	.word	0x08029c45
 800e974:	0800e471 	.word	0x0800e471
 800e978:	2000ed90 	.word	0x2000ed90
 800e97c:	2000edb0 	.word	0x2000edb0
 800e980:	2000eddc 	.word	0x2000eddc
 800e984:	2000e8e8 	.word	0x2000e8e8

0800e988 <vTaskSwitchContext>:
{
 800e988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800e98a:	4b1c      	ldr	r3, [pc, #112]	; (800e9fc <vTaskSwitchContext+0x74>)
 800e98c:	681a      	ldr	r2, [r3, #0]
 800e98e:	4b1c      	ldr	r3, [pc, #112]	; (800ea00 <vTaskSwitchContext+0x78>)
 800e990:	b112      	cbz	r2, 800e998 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800e992:	2201      	movs	r2, #1
 800e994:	601a      	str	r2, [r3, #0]
}
 800e996:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800e998:	4c1a      	ldr	r4, [pc, #104]	; (800ea04 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800e99a:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e99c:	4e1a      	ldr	r6, [pc, #104]	; (800ea08 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800e99e:	6820      	ldr	r0, [r4, #0]
 800e9a0:	2101      	movs	r1, #1
 800e9a2:	f7ff ff97 	bl	800e8d4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9a6:	6832      	ldr	r2, [r6, #0]
 800e9a8:	4918      	ldr	r1, [pc, #96]	; (800ea0c <vTaskSwitchContext+0x84>)
 800e9aa:	2714      	movs	r7, #20
 800e9ac:	fb07 f302 	mul.w	r3, r7, r2
 800e9b0:	18c8      	adds	r0, r1, r3
 800e9b2:	58cd      	ldr	r5, [r1, r3]
 800e9b4:	b1ad      	cbz	r5, 800e9e2 <vTaskSwitchContext+0x5a>
 800e9b6:	6845      	ldr	r5, [r0, #4]
 800e9b8:	3308      	adds	r3, #8
 800e9ba:	686d      	ldr	r5, [r5, #4]
 800e9bc:	6045      	str	r5, [r0, #4]
 800e9be:	440b      	add	r3, r1
 800e9c0:	429d      	cmp	r5, r3
 800e9c2:	bf04      	itt	eq
 800e9c4:	686b      	ldreq	r3, [r5, #4]
 800e9c6:	6043      	streq	r3, [r0, #4]
 800e9c8:	2314      	movs	r3, #20
 800e9ca:	fb03 1102 	mla	r1, r3, r2, r1
 800e9ce:	684b      	ldr	r3, [r1, #4]
 800e9d0:	68db      	ldr	r3, [r3, #12]
 800e9d2:	6023      	str	r3, [r4, #0]
 800e9d4:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800e9d6:	6820      	ldr	r0, [r4, #0]
 800e9d8:	2100      	movs	r1, #0
}
 800e9da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800e9de:	f7ff bf79 	b.w	800e8d4 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800e9e2:	b942      	cbnz	r2, 800e9f6 <vTaskSwitchContext+0x6e>
 800e9e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e9e8:	f383 8811 	msr	BASEPRI, r3
 800e9ec:	f3bf 8f6f 	isb	sy
 800e9f0:	f3bf 8f4f 	dsb	sy
 800e9f4:	e7fe      	b.n	800e9f4 <vTaskSwitchContext+0x6c>
 800e9f6:	3a01      	subs	r2, #1
 800e9f8:	e7d8      	b.n	800e9ac <vTaskSwitchContext+0x24>
 800e9fa:	bf00      	nop
 800e9fc:	2000ed5c 	.word	0x2000ed5c
 800ea00:	2000ede0 	.word	0x2000ede0
 800ea04:	2000e8e8 	.word	0x2000e8e8
 800ea08:	2000ed64 	.word	0x2000ed64
 800ea0c:	2000e8f4 	.word	0x2000e8f4

0800ea10 <vTaskPlaceOnEventList>:
{
 800ea10:	b510      	push	{r4, lr}
 800ea12:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800ea14:	b940      	cbnz	r0, 800ea28 <vTaskPlaceOnEventList+0x18>
 800ea16:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea1a:	f383 8811 	msr	BASEPRI, r3
 800ea1e:	f3bf 8f6f 	isb	sy
 800ea22:	f3bf 8f4f 	dsb	sy
 800ea26:	e7fe      	b.n	800ea26 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ea28:	4b05      	ldr	r3, [pc, #20]	; (800ea40 <vTaskPlaceOnEventList+0x30>)
 800ea2a:	6819      	ldr	r1, [r3, #0]
 800ea2c:	3118      	adds	r1, #24
 800ea2e:	f7fe fd69 	bl	800d504 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ea32:	4620      	mov	r0, r4
 800ea34:	2101      	movs	r1, #1
}
 800ea36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ea3a:	f7ff bcb3 	b.w	800e3a4 <prvAddCurrentTaskToDelayedList>
 800ea3e:	bf00      	nop
 800ea40:	2000e8e8 	.word	0x2000e8e8

0800ea44 <vTaskPlaceOnEventListRestricted>:
	{
 800ea44:	b538      	push	{r3, r4, r5, lr}
 800ea46:	460d      	mov	r5, r1
 800ea48:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800ea4a:	b940      	cbnz	r0, 800ea5e <vTaskPlaceOnEventListRestricted+0x1a>
 800ea4c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea50:	f383 8811 	msr	BASEPRI, r3
 800ea54:	f3bf 8f6f 	isb	sy
 800ea58:	f3bf 8f4f 	dsb	sy
 800ea5c:	e7fe      	b.n	800ea5c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ea5e:	4b07      	ldr	r3, [pc, #28]	; (800ea7c <vTaskPlaceOnEventListRestricted+0x38>)
 800ea60:	6819      	ldr	r1, [r3, #0]
 800ea62:	3118      	adds	r1, #24
 800ea64:	f7fe fd42 	bl	800d4ec <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800ea68:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ea6a:	4621      	mov	r1, r4
 800ea6c:	bf0c      	ite	eq
 800ea6e:	4628      	moveq	r0, r5
 800ea70:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800ea74:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ea78:	f7ff bc94 	b.w	800e3a4 <prvAddCurrentTaskToDelayedList>
 800ea7c:	2000e8e8 	.word	0x2000e8e8

0800ea80 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea80:	68c3      	ldr	r3, [r0, #12]
{
 800ea82:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ea84:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800ea86:	b944      	cbnz	r4, 800ea9a <xTaskRemoveFromEventList+0x1a>
 800ea88:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ea8c:	f383 8811 	msr	BASEPRI, r3
 800ea90:	f3bf 8f6f 	isb	sy
 800ea94:	f3bf 8f4f 	dsb	sy
 800ea98:	e7fe      	b.n	800ea98 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800ea9a:	f104 0118 	add.w	r1, r4, #24
 800ea9e:	4608      	mov	r0, r1
 800eaa0:	9101      	str	r1, [sp, #4]
 800eaa2:	f7fe fd46 	bl	800d532 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800eaa6:	4b12      	ldr	r3, [pc, #72]	; (800eaf0 <xTaskRemoveFromEventList+0x70>)
 800eaa8:	9901      	ldr	r1, [sp, #4]
 800eaaa:	681b      	ldr	r3, [r3, #0]
 800eaac:	b9eb      	cbnz	r3, 800eaea <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800eaae:	1d21      	adds	r1, r4, #4
 800eab0:	4608      	mov	r0, r1
 800eab2:	9101      	str	r1, [sp, #4]
 800eab4:	f7fe fd3d 	bl	800d532 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800eab8:	4a0e      	ldr	r2, [pc, #56]	; (800eaf4 <xTaskRemoveFromEventList+0x74>)
 800eaba:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800eabc:	6810      	ldr	r0, [r2, #0]
 800eabe:	9901      	ldr	r1, [sp, #4]
 800eac0:	4283      	cmp	r3, r0
 800eac2:	bf88      	it	hi
 800eac4:	6013      	strhi	r3, [r2, #0]
 800eac6:	4a0c      	ldr	r2, [pc, #48]	; (800eaf8 <xTaskRemoveFromEventList+0x78>)
 800eac8:	2014      	movs	r0, #20
 800eaca:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eace:	f7fe fd0d 	bl	800d4ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ead2:	4b0a      	ldr	r3, [pc, #40]	; (800eafc <xTaskRemoveFromEventList+0x7c>)
 800ead4:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ead6:	681b      	ldr	r3, [r3, #0]
 800ead8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eada:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800eadc:	bf85      	ittet	hi
 800eade:	4b08      	ldrhi	r3, [pc, #32]	; (800eb00 <xTaskRemoveFromEventList+0x80>)
 800eae0:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800eae2:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800eae4:	6018      	strhi	r0, [r3, #0]
}
 800eae6:	b002      	add	sp, #8
 800eae8:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800eaea:	4806      	ldr	r0, [pc, #24]	; (800eb04 <xTaskRemoveFromEventList+0x84>)
 800eaec:	e7ef      	b.n	800eace <xTaskRemoveFromEventList+0x4e>
 800eaee:	bf00      	nop
 800eaf0:	2000ed5c 	.word	0x2000ed5c
 800eaf4:	2000ed64 	.word	0x2000ed64
 800eaf8:	2000e8f4 	.word	0x2000e8f4
 800eafc:	2000e8e8 	.word	0x2000e8e8
 800eb00:	2000ede0 	.word	0x2000ede0
 800eb04:	2000ed9c 	.word	0x2000ed9c

0800eb08 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800eb08:	4b03      	ldr	r3, [pc, #12]	; (800eb18 <vTaskInternalSetTimeOutState+0x10>)
 800eb0a:	681b      	ldr	r3, [r3, #0]
 800eb0c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800eb0e:	4b03      	ldr	r3, [pc, #12]	; (800eb1c <vTaskInternalSetTimeOutState+0x14>)
 800eb10:	681b      	ldr	r3, [r3, #0]
 800eb12:	6043      	str	r3, [r0, #4]
}
 800eb14:	4770      	bx	lr
 800eb16:	bf00      	nop
 800eb18:	2000ed94 	.word	0x2000ed94
 800eb1c:	2000eddc 	.word	0x2000eddc

0800eb20 <xTaskCheckForTimeOut>:
{
 800eb20:	b570      	push	{r4, r5, r6, lr}
 800eb22:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800eb24:	4605      	mov	r5, r0
 800eb26:	b940      	cbnz	r0, 800eb3a <xTaskCheckForTimeOut+0x1a>
 800eb28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb2c:	f383 8811 	msr	BASEPRI, r3
 800eb30:	f3bf 8f6f 	isb	sy
 800eb34:	f3bf 8f4f 	dsb	sy
 800eb38:	e7fe      	b.n	800eb38 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800eb3a:	b941      	cbnz	r1, 800eb4e <xTaskCheckForTimeOut+0x2e>
 800eb3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eb40:	f383 8811 	msr	BASEPRI, r3
 800eb44:	f3bf 8f6f 	isb	sy
 800eb48:	f3bf 8f4f 	dsb	sy
 800eb4c:	e7fe      	b.n	800eb4c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800eb4e:	f7fe fd69 	bl	800d624 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800eb52:	4b0f      	ldr	r3, [pc, #60]	; (800eb90 <xTaskCheckForTimeOut+0x70>)
 800eb54:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800eb56:	6823      	ldr	r3, [r4, #0]
 800eb58:	1c5a      	adds	r2, r3, #1
 800eb5a:	d010      	beq.n	800eb7e <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb5c:	480d      	ldr	r0, [pc, #52]	; (800eb94 <xTaskCheckForTimeOut+0x74>)
 800eb5e:	682e      	ldr	r6, [r5, #0]
 800eb60:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb62:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800eb64:	4286      	cmp	r6, r0
 800eb66:	d001      	beq.n	800eb6c <xTaskCheckForTimeOut+0x4c>
 800eb68:	428a      	cmp	r2, r1
 800eb6a:	d90f      	bls.n	800eb8c <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800eb6c:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800eb6e:	4283      	cmp	r3, r0
 800eb70:	d90a      	bls.n	800eb88 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800eb72:	1a5b      	subs	r3, r3, r1
 800eb74:	4413      	add	r3, r2
 800eb76:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800eb78:	4628      	mov	r0, r5
 800eb7a:	f7ff ffc5 	bl	800eb08 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800eb7e:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800eb80:	f7fe fd70 	bl	800d664 <vPortExitCritical>
}
 800eb84:	4620      	mov	r0, r4
 800eb86:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800eb88:	2300      	movs	r3, #0
 800eb8a:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800eb8c:	2401      	movs	r4, #1
 800eb8e:	e7f7      	b.n	800eb80 <xTaskCheckForTimeOut+0x60>
 800eb90:	2000eddc 	.word	0x2000eddc
 800eb94:	2000ed94 	.word	0x2000ed94

0800eb98 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800eb98:	4b01      	ldr	r3, [pc, #4]	; (800eba0 <vTaskMissedYield+0x8>)
 800eb9a:	2201      	movs	r2, #1
 800eb9c:	601a      	str	r2, [r3, #0]
}
 800eb9e:	4770      	bx	lr
 800eba0:	2000ede0 	.word	0x2000ede0

0800eba4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800eba4:	4b05      	ldr	r3, [pc, #20]	; (800ebbc <xTaskGetSchedulerState+0x18>)
 800eba6:	681b      	ldr	r3, [r3, #0]
 800eba8:	b133      	cbz	r3, 800ebb8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ebaa:	4b05      	ldr	r3, [pc, #20]	; (800ebc0 <xTaskGetSchedulerState+0x1c>)
 800ebac:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800ebae:	2b00      	cmp	r3, #0
 800ebb0:	bf0c      	ite	eq
 800ebb2:	2002      	moveq	r0, #2
 800ebb4:	2000      	movne	r0, #0
 800ebb6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800ebb8:	2001      	movs	r0, #1
	}
 800ebba:	4770      	bx	lr
 800ebbc:	2000edb0 	.word	0x2000edb0
 800ebc0:	2000ed5c 	.word	0x2000ed5c

0800ebc4 <xTaskPriorityInherit>:
	{
 800ebc4:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800ebc6:	4604      	mov	r4, r0
 800ebc8:	b348      	cbz	r0, 800ec1e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800ebca:	4d1c      	ldr	r5, [pc, #112]	; (800ec3c <xTaskPriorityInherit+0x78>)
 800ebcc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ebce:	682a      	ldr	r2, [r5, #0]
 800ebd0:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ebd2:	4293      	cmp	r3, r2
 800ebd4:	d229      	bcs.n	800ec2a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebd6:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebd8:	4e19      	ldr	r6, [pc, #100]	; (800ec40 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ebda:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ebdc:	bfa1      	itttt	ge
 800ebde:	682a      	ldrge	r2, [r5, #0]
 800ebe0:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800ebe2:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800ebe6:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800ebe8:	2214      	movs	r2, #20
 800ebea:	fb02 6303 	mla	r3, r2, r3, r6
 800ebee:	6942      	ldr	r2, [r0, #20]
 800ebf0:	429a      	cmp	r2, r3
 800ebf2:	d116      	bne.n	800ec22 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ebf4:	1d01      	adds	r1, r0, #4
 800ebf6:	4608      	mov	r0, r1
 800ebf8:	9101      	str	r1, [sp, #4]
 800ebfa:	f7fe fc9a 	bl	800d532 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ebfe:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec00:	4a10      	ldr	r2, [pc, #64]	; (800ec44 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec04:	6810      	ldr	r0, [r2, #0]
 800ec06:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec08:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800ec0a:	4283      	cmp	r3, r0
 800ec0c:	f04f 0014 	mov.w	r0, #20
 800ec10:	fb00 6003 	mla	r0, r0, r3, r6
 800ec14:	bf88      	it	hi
 800ec16:	6013      	strhi	r3, [r2, #0]
 800ec18:	f7fe fc68 	bl	800d4ec <vListInsertEnd>
				xReturn = pdTRUE;
 800ec1c:	2001      	movs	r0, #1
	}
 800ec1e:	b002      	add	sp, #8
 800ec20:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800ec22:	682b      	ldr	r3, [r5, #0]
 800ec24:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec26:	62c3      	str	r3, [r0, #44]	; 0x2c
 800ec28:	e7f8      	b.n	800ec1c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800ec2a:	682b      	ldr	r3, [r5, #0]
 800ec2c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800ec2e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800ec30:	42a0      	cmp	r0, r4
 800ec32:	bf2c      	ite	cs
 800ec34:	2000      	movcs	r0, #0
 800ec36:	2001      	movcc	r0, #1
 800ec38:	e7f1      	b.n	800ec1e <xTaskPriorityInherit+0x5a>
 800ec3a:	bf00      	nop
 800ec3c:	2000e8e8 	.word	0x2000e8e8
 800ec40:	2000e8f4 	.word	0x2000e8f4
 800ec44:	2000ed64 	.word	0x2000ed64

0800ec48 <xTaskPriorityDisinherit>:
	{
 800ec48:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800ec4a:	b910      	cbnz	r0, 800ec52 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800ec4c:	2000      	movs	r0, #0
	}
 800ec4e:	b002      	add	sp, #8
 800ec50:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800ec52:	4b1c      	ldr	r3, [pc, #112]	; (800ecc4 <xTaskPriorityDisinherit+0x7c>)
 800ec54:	681c      	ldr	r4, [r3, #0]
 800ec56:	4284      	cmp	r4, r0
 800ec58:	d008      	beq.n	800ec6c <xTaskPriorityDisinherit+0x24>
 800ec5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec5e:	f383 8811 	msr	BASEPRI, r3
 800ec62:	f3bf 8f6f 	isb	sy
 800ec66:	f3bf 8f4f 	dsb	sy
 800ec6a:	e7fe      	b.n	800ec6a <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800ec6c:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800ec6e:	b943      	cbnz	r3, 800ec82 <xTaskPriorityDisinherit+0x3a>
 800ec70:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec74:	f383 8811 	msr	BASEPRI, r3
 800ec78:	f3bf 8f6f 	isb	sy
 800ec7c:	f3bf 8f4f 	dsb	sy
 800ec80:	e7fe      	b.n	800ec80 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec82:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ec84:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800ec86:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec88:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800ec8a:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800ec8c:	d0de      	beq.n	800ec4c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800ec8e:	2b00      	cmp	r3, #0
 800ec90:	d1dc      	bne.n	800ec4c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ec92:	1d21      	adds	r1, r4, #4
 800ec94:	4608      	mov	r0, r1
 800ec96:	9101      	str	r1, [sp, #4]
 800ec98:	f7fe fc4b 	bl	800d532 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800ec9c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800ec9e:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800eca0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800eca2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800eca6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800eca8:	4a07      	ldr	r2, [pc, #28]	; (800ecc8 <xTaskPriorityDisinherit+0x80>)
 800ecaa:	6810      	ldr	r0, [r2, #0]
 800ecac:	4283      	cmp	r3, r0
 800ecae:	bf88      	it	hi
 800ecb0:	6013      	strhi	r3, [r2, #0]
 800ecb2:	4a06      	ldr	r2, [pc, #24]	; (800eccc <xTaskPriorityDisinherit+0x84>)
 800ecb4:	2014      	movs	r0, #20
 800ecb6:	fb00 2003 	mla	r0, r0, r3, r2
 800ecba:	f7fe fc17 	bl	800d4ec <vListInsertEnd>
					xReturn = pdTRUE;
 800ecbe:	2001      	movs	r0, #1
		return xReturn;
 800ecc0:	e7c5      	b.n	800ec4e <xTaskPriorityDisinherit+0x6>
 800ecc2:	bf00      	nop
 800ecc4:	2000e8e8 	.word	0x2000e8e8
 800ecc8:	2000ed64 	.word	0x2000ed64
 800eccc:	2000e8f4 	.word	0x2000e8f4

0800ecd0 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800ecd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800ecd2:	4604      	mov	r4, r0
 800ecd4:	2800      	cmp	r0, #0
 800ecd6:	d044      	beq.n	800ed62 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800ecd8:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800ecda:	b942      	cbnz	r2, 800ecee <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800ecdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ece0:	f383 8811 	msr	BASEPRI, r3
 800ece4:	f3bf 8f6f 	isb	sy
 800ece8:	f3bf 8f4f 	dsb	sy
 800ecec:	e7fe      	b.n	800ecec <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800ecee:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800ecf0:	4299      	cmp	r1, r3
 800ecf2:	bf38      	it	cc
 800ecf4:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800ecf6:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ecf8:	428b      	cmp	r3, r1
 800ecfa:	d032      	beq.n	800ed62 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800ecfc:	2a01      	cmp	r2, #1
 800ecfe:	d130      	bne.n	800ed62 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800ed00:	4a19      	ldr	r2, [pc, #100]	; (800ed68 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800ed02:	6812      	ldr	r2, [r2, #0]
 800ed04:	4282      	cmp	r2, r0
 800ed06:	d108      	bne.n	800ed1a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800ed08:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed0c:	f383 8811 	msr	BASEPRI, r3
 800ed10:	f3bf 8f6f 	isb	sy
 800ed14:	f3bf 8f4f 	dsb	sy
 800ed18:	e7fe      	b.n	800ed18 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed1a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed1c:	4d13      	ldr	r5, [pc, #76]	; (800ed6c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800ed1e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800ed20:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed22:	f04f 0214 	mov.w	r2, #20
 800ed26:	fb02 5303 	mla	r3, r2, r3, r5
 800ed2a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ed2c:	bfa4      	itt	ge
 800ed2e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800ed32:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800ed34:	429a      	cmp	r2, r3
 800ed36:	d114      	bne.n	800ed62 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800ed38:	1d01      	adds	r1, r0, #4
 800ed3a:	4608      	mov	r0, r1
 800ed3c:	9101      	str	r1, [sp, #4]
 800ed3e:	f7fe fbf8 	bl	800d532 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800ed42:	4a0b      	ldr	r2, [pc, #44]	; (800ed70 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800ed44:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ed46:	6810      	ldr	r0, [r2, #0]
 800ed48:	9901      	ldr	r1, [sp, #4]
 800ed4a:	4283      	cmp	r3, r0
 800ed4c:	f04f 0014 	mov.w	r0, #20
 800ed50:	fb00 5003 	mla	r0, r0, r3, r5
 800ed54:	bf88      	it	hi
 800ed56:	6013      	strhi	r3, [r2, #0]
	}
 800ed58:	b003      	add	sp, #12
 800ed5a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800ed5e:	f7fe bbc5 	b.w	800d4ec <vListInsertEnd>
	}
 800ed62:	b003      	add	sp, #12
 800ed64:	bd30      	pop	{r4, r5, pc}
 800ed66:	bf00      	nop
 800ed68:	2000e8e8 	.word	0x2000e8e8
 800ed6c:	2000e8f4 	.word	0x2000e8f4
 800ed70:	2000ed64 	.word	0x2000ed64

0800ed74 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800ed74:	4b04      	ldr	r3, [pc, #16]	; (800ed88 <pvTaskIncrementMutexHeldCount+0x14>)
 800ed76:	681a      	ldr	r2, [r3, #0]
 800ed78:	b11a      	cbz	r2, 800ed82 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800ed7a:	6819      	ldr	r1, [r3, #0]
 800ed7c:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800ed7e:	3201      	adds	r2, #1
 800ed80:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800ed82:	6818      	ldr	r0, [r3, #0]
	}
 800ed84:	4770      	bx	lr
 800ed86:	bf00      	nop
 800ed88:	2000e8e8 	.word	0x2000e8e8

0800ed8c <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800ed8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800ed8e:	4c11      	ldr	r4, [pc, #68]	; (800edd4 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800ed90:	f7fe fc48 	bl	800d624 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800ed94:	6825      	ldr	r5, [r4, #0]
 800ed96:	b9bd      	cbnz	r5, 800edc8 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800ed98:	4f0f      	ldr	r7, [pc, #60]	; (800edd8 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800ed9a:	4e10      	ldr	r6, [pc, #64]	; (800eddc <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800ed9c:	4638      	mov	r0, r7
 800ed9e:	f7fe fb97 	bl	800d4d0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800eda2:	4630      	mov	r0, r6
 800eda4:	f7fe fb94 	bl	800d4d0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800eda8:	4b0d      	ldr	r3, [pc, #52]	; (800ede0 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800edaa:	4a0e      	ldr	r2, [pc, #56]	; (800ede4 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800edac:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800edae:	4b0e      	ldr	r3, [pc, #56]	; (800ede8 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800edb0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800edb2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800edb4:	200a      	movs	r0, #10
 800edb6:	4b0d      	ldr	r3, [pc, #52]	; (800edec <prvCheckForValidListAndQueue+0x60>)
 800edb8:	9500      	str	r5, [sp, #0]
 800edba:	f7fe fe44 	bl	800da46 <xQueueGenericCreateStatic>
 800edbe:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800edc0:	b110      	cbz	r0, 800edc8 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800edc2:	490b      	ldr	r1, [pc, #44]	; (800edf0 <prvCheckForValidListAndQueue+0x64>)
 800edc4:	f7ff fa0e 	bl	800e1e4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800edc8:	b003      	add	sp, #12
 800edca:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800edce:	f7fe bc49 	b.w	800d664 <vPortExitCritical>
 800edd2:	bf00      	nop
 800edd4:	2000ef08 	.word	0x2000ef08
 800edd8:	2000ee8c 	.word	0x2000ee8c
 800eddc:	2000eea0 	.word	0x2000eea0
 800ede0:	2000ede4 	.word	0x2000ede4
 800ede4:	2000edec 	.word	0x2000edec
 800ede8:	2000ede8 	.word	0x2000ede8
 800edec:	2000eeb8 	.word	0x2000eeb8
 800edf0:	08029c4a 	.word	0x08029c4a

0800edf4 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800edf4:	4291      	cmp	r1, r2
{
 800edf6:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800edf8:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800edfa:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800edfc:	d80a      	bhi.n	800ee14 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800edfe:	1ad2      	subs	r2, r2, r3
 800ee00:	6983      	ldr	r3, [r0, #24]
 800ee02:	429a      	cmp	r2, r3
 800ee04:	d20d      	bcs.n	800ee22 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800ee06:	4b08      	ldr	r3, [pc, #32]	; (800ee28 <prvInsertTimerInActiveList+0x34>)
 800ee08:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee0a:	6818      	ldr	r0, [r3, #0]
 800ee0c:	f7fe fb7a 	bl	800d504 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800ee10:	2000      	movs	r0, #0
}
 800ee12:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800ee14:	429a      	cmp	r2, r3
 800ee16:	d201      	bcs.n	800ee1c <prvInsertTimerInActiveList+0x28>
 800ee18:	4299      	cmp	r1, r3
 800ee1a:	d202      	bcs.n	800ee22 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ee1c:	4b03      	ldr	r3, [pc, #12]	; (800ee2c <prvInsertTimerInActiveList+0x38>)
 800ee1e:	1d01      	adds	r1, r0, #4
 800ee20:	e7f3      	b.n	800ee0a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800ee22:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800ee24:	e7f5      	b.n	800ee12 <prvInsertTimerInActiveList+0x1e>
 800ee26:	bf00      	nop
 800ee28:	2000ede8 	.word	0x2000ede8
 800ee2c:	2000ede4 	.word	0x2000ede4

0800ee30 <xTimerCreateTimerTask>:
{
 800ee30:	b510      	push	{r4, lr}
 800ee32:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800ee34:	f7ff ffaa 	bl	800ed8c <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800ee38:	4b12      	ldr	r3, [pc, #72]	; (800ee84 <xTimerCreateTimerTask+0x54>)
 800ee3a:	681b      	ldr	r3, [r3, #0]
 800ee3c:	b1b3      	cbz	r3, 800ee6c <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800ee3e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ee40:	aa07      	add	r2, sp, #28
 800ee42:	a906      	add	r1, sp, #24
 800ee44:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800ee46:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800ee4a:	f7fe fa3b 	bl	800d2c4 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800ee4e:	9b05      	ldr	r3, [sp, #20]
 800ee50:	9302      	str	r3, [sp, #8]
 800ee52:	9b06      	ldr	r3, [sp, #24]
 800ee54:	9301      	str	r3, [sp, #4]
 800ee56:	2302      	movs	r3, #2
 800ee58:	9300      	str	r3, [sp, #0]
 800ee5a:	9a07      	ldr	r2, [sp, #28]
 800ee5c:	490a      	ldr	r1, [pc, #40]	; (800ee88 <xTimerCreateTimerTask+0x58>)
 800ee5e:	480b      	ldr	r0, [pc, #44]	; (800ee8c <xTimerCreateTimerTask+0x5c>)
 800ee60:	4623      	mov	r3, r4
 800ee62:	f7ff fb86 	bl	800e572 <xTaskCreateStatic>
 800ee66:	4b0a      	ldr	r3, [pc, #40]	; (800ee90 <xTimerCreateTimerTask+0x60>)
 800ee68:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800ee6a:	b940      	cbnz	r0, 800ee7e <xTimerCreateTimerTask+0x4e>
 800ee6c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ee70:	f383 8811 	msr	BASEPRI, r3
 800ee74:	f3bf 8f6f 	isb	sy
 800ee78:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800ee7c:	e7fe      	b.n	800ee7c <xTimerCreateTimerTask+0x4c>
}
 800ee7e:	2001      	movs	r0, #1
 800ee80:	b008      	add	sp, #32
 800ee82:	bd10      	pop	{r4, pc}
 800ee84:	2000ef08 	.word	0x2000ef08
 800ee88:	08029c4f 	.word	0x08029c4f
 800ee8c:	0800ef99 	.word	0x0800ef99
 800ee90:	2000ef0c 	.word	0x2000ef0c

0800ee94 <xTimerGenericCommand>:
{
 800ee94:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee96:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800ee98:	4604      	mov	r4, r0
{
 800ee9a:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800ee9c:	b940      	cbnz	r0, 800eeb0 <xTimerGenericCommand+0x1c>
 800ee9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eea2:	f383 8811 	msr	BASEPRI, r3
 800eea6:	f3bf 8f6f 	isb	sy
 800eeaa:	f3bf 8f4f 	dsb	sy
 800eeae:	e7fe      	b.n	800eeae <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800eeb0:	4d0d      	ldr	r5, [pc, #52]	; (800eee8 <xTimerGenericCommand+0x54>)
 800eeb2:	6828      	ldr	r0, [r5, #0]
 800eeb4:	b180      	cbz	r0, 800eed8 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eeb6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800eeb8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800eebc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800eebe:	dc0d      	bgt.n	800eedc <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eec0:	f7ff fe70 	bl	800eba4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eec4:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800eec6:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800eec8:	bf08      	it	eq
 800eeca:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800eecc:	6828      	ldr	r0, [r5, #0]
 800eece:	bf18      	it	ne
 800eed0:	461a      	movne	r2, r3
 800eed2:	4669      	mov	r1, sp
 800eed4:	f7fe fe6c 	bl	800dbb0 <xQueueGenericSend>
}
 800eed8:	b004      	add	sp, #16
 800eeda:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800eedc:	2300      	movs	r3, #0
 800eede:	4669      	mov	r1, sp
 800eee0:	f7fe ff19 	bl	800dd16 <xQueueGenericSendFromISR>
 800eee4:	e7f8      	b.n	800eed8 <xTimerGenericCommand+0x44>
 800eee6:	bf00      	nop
 800eee8:	2000ef08 	.word	0x2000ef08

0800eeec <prvSampleTimeNow>:
{
 800eeec:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800eef0:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800ef94 <prvSampleTimeNow+0xa8>
{
 800eef4:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800eef6:	f7ff fba9 	bl	800e64c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800eefa:	f8d8 3000 	ldr.w	r3, [r8]
 800eefe:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800ef00:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800ef02:	d940      	bls.n	800ef86 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ef04:	4f21      	ldr	r7, [pc, #132]	; (800ef8c <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ef06:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800ef0a:	683b      	ldr	r3, [r7, #0]
 800ef0c:	681a      	ldr	r2, [r3, #0]
 800ef0e:	b95a      	cbnz	r2, 800ef28 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800ef10:	4a1f      	ldr	r2, [pc, #124]	; (800ef90 <prvSampleTimeNow+0xa4>)
 800ef12:	6811      	ldr	r1, [r2, #0]
 800ef14:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800ef16:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800ef18:	2301      	movs	r3, #1
}
 800ef1a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800ef1c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800ef1e:	f8c8 5000 	str.w	r5, [r8]
}
 800ef22:	b004      	add	sp, #16
 800ef24:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef28:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ef2a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800ef2c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800ef30:	1d21      	adds	r1, r4, #4
 800ef32:	4608      	mov	r0, r1
 800ef34:	9103      	str	r1, [sp, #12]
 800ef36:	f7fe fafc 	bl	800d532 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800ef3a:	6a23      	ldr	r3, [r4, #32]
 800ef3c:	4620      	mov	r0, r4
 800ef3e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800ef40:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800ef44:	9903      	ldr	r1, [sp, #12]
 800ef46:	f013 0f04 	tst.w	r3, #4
 800ef4a:	d0de      	beq.n	800ef0a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800ef4c:	69a3      	ldr	r3, [r4, #24]
 800ef4e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800ef50:	459a      	cmp	sl, r3
 800ef52:	d205      	bcs.n	800ef60 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef54:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800ef56:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800ef58:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800ef5a:	f7fe fad3 	bl	800d504 <vListInsert>
 800ef5e:	e7d4      	b.n	800ef0a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800ef60:	2300      	movs	r3, #0
 800ef62:	f8cd 9000 	str.w	r9, [sp]
 800ef66:	4652      	mov	r2, sl
 800ef68:	4619      	mov	r1, r3
 800ef6a:	4620      	mov	r0, r4
 800ef6c:	f7ff ff92 	bl	800ee94 <xTimerGenericCommand>
				configASSERT( xResult );
 800ef70:	2800      	cmp	r0, #0
 800ef72:	d1ca      	bne.n	800ef0a <prvSampleTimeNow+0x1e>
 800ef74:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef78:	f383 8811 	msr	BASEPRI, r3
 800ef7c:	f3bf 8f6f 	isb	sy
 800ef80:	f3bf 8f4f 	dsb	sy
 800ef84:	e7fe      	b.n	800ef84 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800ef86:	2300      	movs	r3, #0
 800ef88:	e7c7      	b.n	800ef1a <prvSampleTimeNow+0x2e>
 800ef8a:	bf00      	nop
 800ef8c:	2000ede4 	.word	0x2000ede4
 800ef90:	2000ede8 	.word	0x2000ede8
 800ef94:	2000eeb4 	.word	0x2000eeb4

0800ef98 <prvTimerTask>:
{
 800ef98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800ef9c:	4d6e      	ldr	r5, [pc, #440]	; (800f158 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800ef9e:	4e6f      	ldr	r6, [pc, #444]	; (800f15c <prvTimerTask+0x1c4>)
{
 800efa0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800efa2:	682b      	ldr	r3, [r5, #0]
 800efa4:	f8d3 8000 	ldr.w	r8, [r3]
 800efa8:	f1b8 0f00 	cmp.w	r8, #0
 800efac:	d035      	beq.n	800f01a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800efae:	68db      	ldr	r3, [r3, #12]
 800efb0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800efb4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800efb6:	f7ff fb41 	bl	800e63c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800efba:	a804      	add	r0, sp, #16
 800efbc:	f7ff ff96 	bl	800eeec <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800efc0:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800efc2:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800efc4:	2b00      	cmp	r3, #0
 800efc6:	d169      	bne.n	800f09c <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800efc8:	2c00      	cmp	r4, #0
 800efca:	d14c      	bne.n	800f066 <prvTimerTask+0xce>
 800efcc:	4540      	cmp	r0, r8
 800efce:	d350      	bcc.n	800f072 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800efd0:	f7ff fbd8 	bl	800e784 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800efd4:	682b      	ldr	r3, [r5, #0]
 800efd6:	68db      	ldr	r3, [r3, #12]
 800efd8:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800efda:	1d38      	adds	r0, r7, #4
 800efdc:	f7fe faa9 	bl	800d532 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800efe0:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800efe4:	0758      	lsls	r0, r3, #29
 800efe6:	d51a      	bpl.n	800f01e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800efe8:	69b9      	ldr	r1, [r7, #24]
 800efea:	4643      	mov	r3, r8
 800efec:	464a      	mov	r2, r9
 800efee:	4441      	add	r1, r8
 800eff0:	4638      	mov	r0, r7
 800eff2:	f7ff feff 	bl	800edf4 <prvInsertTimerInActiveList>
 800eff6:	b1b0      	cbz	r0, 800f026 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800eff8:	9400      	str	r4, [sp, #0]
 800effa:	4623      	mov	r3, r4
 800effc:	4642      	mov	r2, r8
 800effe:	4621      	mov	r1, r4
 800f000:	4638      	mov	r0, r7
 800f002:	f7ff ff47 	bl	800ee94 <xTimerGenericCommand>
			configASSERT( xResult );
 800f006:	b970      	cbnz	r0, 800f026 <prvTimerTask+0x8e>
 800f008:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f00c:	f383 8811 	msr	BASEPRI, r3
 800f010:	f3bf 8f6f 	isb	sy
 800f014:	f3bf 8f4f 	dsb	sy
 800f018:	e7fe      	b.n	800f018 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800f01a:	2401      	movs	r4, #1
 800f01c:	e7cb      	b.n	800efb6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f01e:	f023 0301 	bic.w	r3, r3, #1
 800f022:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f026:	6a3b      	ldr	r3, [r7, #32]
 800f028:	4638      	mov	r0, r7
 800f02a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800f02c:	6830      	ldr	r0, [r6, #0]
 800f02e:	2200      	movs	r2, #0
 800f030:	a904      	add	r1, sp, #16
 800f032:	f7fe ff26 	bl	800de82 <xQueueReceive>
 800f036:	2800      	cmp	r0, #0
 800f038:	d0b3      	beq.n	800efa2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f03a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f03c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800f03e:	2b00      	cmp	r3, #0
 800f040:	db2f      	blt.n	800f0a2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800f042:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800f044:	6963      	ldr	r3, [r4, #20]
 800f046:	2b00      	cmp	r3, #0
 800f048:	d132      	bne.n	800f0b0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800f04a:	a803      	add	r0, sp, #12
 800f04c:	f7ff ff4e 	bl	800eeec <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800f050:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800f052:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800f054:	2b09      	cmp	r3, #9
 800f056:	d8e9      	bhi.n	800f02c <prvTimerTask+0x94>
 800f058:	e8df f003 	tbb	[pc, r3]
 800f05c:	572e2e2e 	.word	0x572e2e2e
 800f060:	2e2e765e 	.word	0x2e2e765e
 800f064:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800f066:	4b3e      	ldr	r3, [pc, #248]	; (800f160 <prvTimerTask+0x1c8>)
 800f068:	681b      	ldr	r3, [r3, #0]
 800f06a:	681c      	ldr	r4, [r3, #0]
 800f06c:	fab4 f484 	clz	r4, r4
 800f070:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800f072:	6830      	ldr	r0, [r6, #0]
 800f074:	4622      	mov	r2, r4
 800f076:	eba8 0109 	sub.w	r1, r8, r9
 800f07a:	f7ff f8f0 	bl	800e25e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800f07e:	f7ff fb81 	bl	800e784 <xTaskResumeAll>
 800f082:	2800      	cmp	r0, #0
 800f084:	d1d2      	bne.n	800f02c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800f086:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800f08a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f08e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800f092:	f3bf 8f4f 	dsb	sy
 800f096:	f3bf 8f6f 	isb	sy
 800f09a:	e7c7      	b.n	800f02c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800f09c:	f7ff fb72 	bl	800e784 <xTaskResumeAll>
}
 800f0a0:	e7c4      	b.n	800f02c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800f0a2:	9b05      	ldr	r3, [sp, #20]
 800f0a4:	9907      	ldr	r1, [sp, #28]
 800f0a6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800f0a8:	9b04      	ldr	r3, [sp, #16]
 800f0aa:	2b00      	cmp	r3, #0
 800f0ac:	dbbe      	blt.n	800f02c <prvTimerTask+0x94>
 800f0ae:	e7c8      	b.n	800f042 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800f0b0:	1d20      	adds	r0, r4, #4
 800f0b2:	f7fe fa3e 	bl	800d532 <uxListRemove>
 800f0b6:	e7c8      	b.n	800f04a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f0b8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f0bc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f0be:	f043 0301 	orr.w	r3, r3, #1
 800f0c2:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800f0c6:	9b05      	ldr	r3, [sp, #20]
 800f0c8:	4620      	mov	r0, r4
 800f0ca:	4419      	add	r1, r3
 800f0cc:	f7ff fe92 	bl	800edf4 <prvInsertTimerInActiveList>
 800f0d0:	2800      	cmp	r0, #0
 800f0d2:	d0ab      	beq.n	800f02c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800f0d4:	6a23      	ldr	r3, [r4, #32]
 800f0d6:	4620      	mov	r0, r4
 800f0d8:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800f0da:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f0de:	0759      	lsls	r1, r3, #29
 800f0e0:	d5a4      	bpl.n	800f02c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800f0e2:	69a2      	ldr	r2, [r4, #24]
 800f0e4:	9905      	ldr	r1, [sp, #20]
 800f0e6:	2300      	movs	r3, #0
 800f0e8:	440a      	add	r2, r1
 800f0ea:	9300      	str	r3, [sp, #0]
 800f0ec:	4619      	mov	r1, r3
 800f0ee:	4620      	mov	r0, r4
 800f0f0:	f7ff fed0 	bl	800ee94 <xTimerGenericCommand>
							configASSERT( xResult );
 800f0f4:	2800      	cmp	r0, #0
 800f0f6:	d199      	bne.n	800f02c <prvTimerTask+0x94>
 800f0f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0fc:	f383 8811 	msr	BASEPRI, r3
 800f100:	f3bf 8f6f 	isb	sy
 800f104:	f3bf 8f4f 	dsb	sy
 800f108:	e7fe      	b.n	800f108 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f10a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800f10e:	f023 0301 	bic.w	r3, r3, #1
 800f112:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800f116:	e789      	b.n	800f02c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800f118:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f11c:	f043 0301 	orr.w	r3, r3, #1
 800f120:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800f124:	9905      	ldr	r1, [sp, #20]
 800f126:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800f128:	b941      	cbnz	r1, 800f13c <prvTimerTask+0x1a4>
 800f12a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f12e:	f383 8811 	msr	BASEPRI, r3
 800f132:	f3bf 8f6f 	isb	sy
 800f136:	f3bf 8f4f 	dsb	sy
 800f13a:	e7fe      	b.n	800f13a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800f13c:	4603      	mov	r3, r0
 800f13e:	4401      	add	r1, r0
 800f140:	4620      	mov	r0, r4
 800f142:	f7ff fe57 	bl	800edf4 <prvInsertTimerInActiveList>
					break;
 800f146:	e771      	b.n	800f02c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800f148:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f14c:	079a      	lsls	r2, r3, #30
 800f14e:	d4de      	bmi.n	800f10e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800f150:	4620      	mov	r0, r4
 800f152:	f7fe f97f 	bl	800d454 <vPortFree>
 800f156:	e769      	b.n	800f02c <prvTimerTask+0x94>
 800f158:	2000ede4 	.word	0x2000ede4
 800f15c:	2000ef08 	.word	0x2000ef08
 800f160:	2000ede8 	.word	0x2000ede8

0800f164 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800f164:	8880      	ldrh	r0, [r0, #4]
 800f166:	4770      	bx	lr

0800f168 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800f168:	b570      	push	{r4, r5, r6, lr}
 800f16a:	6803      	ldr	r3, [r0, #0]
 800f16c:	4605      	mov	r5, r0
 800f16e:	460c      	mov	r4, r1
 800f170:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f172:	2100      	movs	r1, #0
 800f174:	4798      	blx	r3
 800f176:	682b      	ldr	r3, [r5, #0]
 800f178:	4606      	mov	r6, r0
 800f17a:	6a1b      	ldr	r3, [r3, #32]
 800f17c:	4628      	mov	r0, r5
 800f17e:	4798      	blx	r3
 800f180:	1ba4      	subs	r4, r4, r6
 800f182:	b2a4      	uxth	r4, r4
 800f184:	fbb4 f0f0 	udiv	r0, r4, r0
 800f188:	bd70      	pop	{r4, r5, r6, pc}

0800f18a <_ZN8touchgfx17AbstractPartition5clearEv>:
 800f18a:	2300      	movs	r3, #0
 800f18c:	8083      	strh	r3, [r0, #4]
 800f18e:	4770      	bx	lr

0800f190 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800f190:	b510      	push	{r4, lr}
 800f192:	6803      	ldr	r3, [r0, #0]
 800f194:	8881      	ldrh	r1, [r0, #4]
 800f196:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f198:	4604      	mov	r4, r0
 800f19a:	4798      	blx	r3
 800f19c:	88a3      	ldrh	r3, [r4, #4]
 800f19e:	3301      	adds	r3, #1
 800f1a0:	80a3      	strh	r3, [r4, #4]
 800f1a2:	bd10      	pop	{r4, pc}

0800f1a4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800f1a4:	6803      	ldr	r3, [r0, #0]
 800f1a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f1a8:	4718      	bx	r3

0800f1aa <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800f1aa:	4770      	bx	lr

0800f1ac <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800f1ac:	4a02      	ldr	r2, [pc, #8]	; (800f1b8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800f1ae:	6002      	str	r2, [r0, #0]
 800f1b0:	2200      	movs	r2, #0
 800f1b2:	8082      	strh	r2, [r0, #4]
 800f1b4:	4770      	bx	lr
 800f1b6:	bf00      	nop
 800f1b8:	08029c60 	.word	0x08029c60

0800f1bc <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800f1bc:	b510      	push	{r4, lr}
 800f1be:	6803      	ldr	r3, [r0, #0]
 800f1c0:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800f1c4:	4604      	mov	r4, r0
 800f1c6:	4798      	blx	r3
 800f1c8:	b110      	cbz	r0, 800f1d0 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800f1ca:	4620      	mov	r0, r4
 800f1cc:	f7f2 fd51 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800f1d0:	bd10      	pop	{r4, pc}

0800f1d2 <_ZN8touchgfx11BoxProgress8setColorENS_9colortypeE>:
 800f1d2:	f8c0 10e0 	str.w	r1, [r0, #224]	; 0xe0
 800f1d6:	4770      	bx	lr

0800f1d8 <_ZNK8touchgfx11BoxProgress8getColorEv>:
 800f1d8:	f8d0 00e0 	ldr.w	r0, [r0, #224]	; 0xe0
 800f1dc:	4770      	bx	lr

0800f1de <_ZN8touchgfx11BoxProgressD1Ev>:
 800f1de:	4770      	bx	lr

0800f1e0 <_ZN8touchgfx11BoxProgressD0Ev>:
 800f1e0:	b510      	push	{r4, lr}
 800f1e2:	21e4      	movs	r1, #228	; 0xe4
 800f1e4:	4604      	mov	r4, r0
 800f1e6:	f017 f9f3 	bl	80265d0 <_ZdlPvj>
 800f1ea:	4620      	mov	r0, r4
 800f1ec:	bd10      	pop	{r4, pc}

0800f1ee <_ZN8touchgfx11BoxProgress8setAlphaEh>:
 800f1ee:	b538      	push	{r3, r4, r5, lr}
 800f1f0:	4604      	mov	r4, r0
 800f1f2:	460d      	mov	r5, r1
 800f1f4:	f000 f960 	bl	800f4b8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800f1f8:	f884 50de 	strb.w	r5, [r4, #222]	; 0xde
 800f1fc:	bd38      	pop	{r3, r4, r5, pc}

0800f1fe <_ZN8touchgfx11BoxProgress28setProgressIndicatorPositionEssss>:
 800f1fe:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800f202:	4617      	mov	r7, r2
 800f204:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 800f208:	9500      	str	r5, [sp, #0]
 800f20a:	2200      	movs	r2, #0
 800f20c:	4604      	mov	r4, r0
 800f20e:	460e      	mov	r6, r1
 800f210:	30b8      	adds	r0, #184	; 0xb8
 800f212:	4611      	mov	r1, r2
 800f214:	4698      	mov	r8, r3
 800f216:	f7f3 fd6e 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f21a:	4643      	mov	r3, r8
 800f21c:	463a      	mov	r2, r7
 800f21e:	4631      	mov	r1, r6
 800f220:	4620      	mov	r0, r4
 800f222:	9508      	str	r5, [sp, #32]
 800f224:	b002      	add	sp, #8
 800f226:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f22a:	f000 ba14 	b.w	800f656 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>

0800f22e <_ZN8touchgfx11BoxProgress8setValueEi>:
 800f22e:	b530      	push	{r4, r5, lr}
 800f230:	4604      	mov	r4, r0
 800f232:	b085      	sub	sp, #20
 800f234:	f000 f993 	bl	800f55e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800f238:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800f23c:	2b03      	cmp	r3, #3
 800f23e:	d814      	bhi.n	800f26a <_ZN8touchgfx11BoxProgress8setValueEi+0x3c>
 800f240:	e8df f003 	tbb	[pc, r3]
 800f244:	10100202 	.word	0x10100202
 800f248:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800f24c:	4620      	mov	r0, r4
 800f24e:	f000 f9a8 	bl	800f5a2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800f252:	b200      	sxth	r0, r0
 800f254:	f894 30b4 	ldrb.w	r3, [r4, #180]	; 0xb4
 800f258:	2b03      	cmp	r3, #3
 800f25a:	d82f      	bhi.n	800f2bc <_ZN8touchgfx11BoxProgress8setValueEi+0x8e>
 800f25c:	e8df f003 	tbb	[pc, r3]
 800f260:	63413007 	.word	0x63413007
 800f264:	f8b4 1062 	ldrh.w	r1, [r4, #98]	; 0x62
 800f268:	e7f0      	b.n	800f24c <_ZN8touchgfx11BoxProgress8setValueEi+0x1e>
 800f26a:	2000      	movs	r0, #0
 800f26c:	e7f2      	b.n	800f254 <_ZN8touchgfx11BoxProgress8setValueEi+0x26>
 800f26e:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800f272:	9300      	str	r3, [sp, #0]
 800f274:	2200      	movs	r2, #0
 800f276:	4603      	mov	r3, r0
 800f278:	4611      	mov	r1, r2
 800f27a:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f27e:	f9b4 50c0 	ldrsh.w	r5, [r4, #192]	; 0xc0
 800f282:	f7f3 fd38 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f286:	f9b4 30c0 	ldrsh.w	r3, [r4, #192]	; 0xc0
 800f28a:	f9b4 20c2 	ldrsh.w	r2, [r4, #194]	; 0xc2
 800f28e:	f8ad 200e 	strh.w	r2, [sp, #14]
 800f292:	4629      	mov	r1, r5
 800f294:	429d      	cmp	r5, r3
 800f296:	eba5 0503 	sub.w	r5, r5, r3
 800f29a:	bfa8      	it	ge
 800f29c:	4619      	movge	r1, r3
 800f29e:	2d00      	cmp	r5, #0
 800f2a0:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f2a4:	bfb8      	it	lt
 800f2a6:	426d      	neglt	r5, r5
 800f2a8:	2100      	movs	r1, #0
 800f2aa:	f8ad 100a 	strh.w	r1, [sp, #10]
 800f2ae:	f8ad 500c 	strh.w	r5, [sp, #12]
 800f2b2:	a902      	add	r1, sp, #8
 800f2b4:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f2b8:	f006 ff30 	bl	801611c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>
 800f2bc:	b005      	add	sp, #20
 800f2be:	bd30      	pop	{r4, r5, pc}
 800f2c0:	8921      	ldrh	r1, [r4, #8]
 800f2c2:	f9b4 3062 	ldrsh.w	r3, [r4, #98]	; 0x62
 800f2c6:	9300      	str	r3, [sp, #0]
 800f2c8:	1a09      	subs	r1, r1, r0
 800f2ca:	4603      	mov	r3, r0
 800f2cc:	2200      	movs	r2, #0
 800f2ce:	b209      	sxth	r1, r1
 800f2d0:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f2d4:	f9b4 50bc 	ldrsh.w	r5, [r4, #188]	; 0xbc
 800f2d8:	f7f3 fd0d 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f2dc:	f9b4 30bc 	ldrsh.w	r3, [r4, #188]	; 0xbc
 800f2e0:	e7d3      	b.n	800f28a <_ZN8touchgfx11BoxProgress8setValueEi+0x5c>
 800f2e2:	2200      	movs	r2, #0
 800f2e4:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f2e8:	9000      	str	r0, [sp, #0]
 800f2ea:	4611      	mov	r1, r2
 800f2ec:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f2f0:	f9b4 50c2 	ldrsh.w	r5, [r4, #194]	; 0xc2
 800f2f4:	f7f3 fcff 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f2f8:	f9b4 30c2 	ldrsh.w	r3, [r4, #194]	; 0xc2
 800f2fc:	f9b4 20c0 	ldrsh.w	r2, [r4, #192]	; 0xc0
 800f300:	f8ad 200c 	strh.w	r2, [sp, #12]
 800f304:	2100      	movs	r1, #0
 800f306:	429d      	cmp	r5, r3
 800f308:	f8ad 1008 	strh.w	r1, [sp, #8]
 800f30c:	4629      	mov	r1, r5
 800f30e:	eba5 0503 	sub.w	r5, r5, r3
 800f312:	bfa8      	it	ge
 800f314:	4619      	movge	r1, r3
 800f316:	2d00      	cmp	r5, #0
 800f318:	bfb8      	it	lt
 800f31a:	426d      	neglt	r5, r5
 800f31c:	f8ad 100a 	strh.w	r1, [sp, #10]
 800f320:	f8ad 500e 	strh.w	r5, [sp, #14]
 800f324:	e7c5      	b.n	800f2b2 <_ZN8touchgfx11BoxProgress8setValueEi+0x84>
 800f326:	f8b4 2062 	ldrh.w	r2, [r4, #98]	; 0x62
 800f32a:	f9b4 3060 	ldrsh.w	r3, [r4, #96]	; 0x60
 800f32e:	9000      	str	r0, [sp, #0]
 800f330:	1a12      	subs	r2, r2, r0
 800f332:	b212      	sxth	r2, r2
 800f334:	2100      	movs	r1, #0
 800f336:	f104 00b8 	add.w	r0, r4, #184	; 0xb8
 800f33a:	f9b4 50be 	ldrsh.w	r5, [r4, #190]	; 0xbe
 800f33e:	f7f3 fcda 	bl	8002cf6 <_ZN8touchgfx8Drawable11setPositionEssss>
 800f342:	f9b4 30be 	ldrsh.w	r3, [r4, #190]	; 0xbe
 800f346:	e7d9      	b.n	800f2fc <_ZN8touchgfx11BoxProgress8setValueEi+0xce>

0800f348 <_ZN8touchgfx11BoxProgressC1Ev>:
 800f348:	b510      	push	{r4, lr}
 800f34a:	4604      	mov	r4, r0
 800f34c:	f000 f85a 	bl	800f404 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>
 800f350:	2201      	movs	r2, #1
 800f352:	f884 20dd 	strb.w	r2, [r4, #221]	; 0xdd
 800f356:	4b16      	ldr	r3, [pc, #88]	; (800f3b0 <_ZN8touchgfx11BoxProgressC1Ev+0x68>)
 800f358:	4a16      	ldr	r2, [pc, #88]	; (800f3b4 <_ZN8touchgfx11BoxProgressC1Ev+0x6c>)
 800f35a:	6023      	str	r3, [r4, #0]
 800f35c:	f8c4 20b8 	str.w	r2, [r4, #184]	; 0xb8
 800f360:	2300      	movs	r3, #0
 800f362:	22ff      	movs	r2, #255	; 0xff
 800f364:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800f368:	f8a4 30bc 	strh.w	r3, [r4, #188]	; 0xbc
 800f36c:	f8a4 30be 	strh.w	r3, [r4, #190]	; 0xbe
 800f370:	f8a4 30c0 	strh.w	r3, [r4, #192]	; 0xc0
 800f374:	f8a4 30c2 	strh.w	r3, [r4, #194]	; 0xc2
 800f378:	f8a4 30c4 	strh.w	r3, [r4, #196]	; 0xc4
 800f37c:	f8a4 30c6 	strh.w	r3, [r4, #198]	; 0xc6
 800f380:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 800f384:	f8a4 30ca 	strh.w	r3, [r4, #202]	; 0xca
 800f388:	e9c4 3333 	strd	r3, r3, [r4, #204]	; 0xcc
 800f38c:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 800f390:	f8a4 30d8 	strh.w	r3, [r4, #216]	; 0xd8
 800f394:	f8a4 30da 	strh.w	r3, [r4, #218]	; 0xda
 800f398:	f884 30dc 	strb.w	r3, [r4, #220]	; 0xdc
 800f39c:	f884 20de 	strb.w	r2, [r4, #222]	; 0xde
 800f3a0:	f8c4 30e0 	str.w	r3, [r4, #224]	; 0xe0
 800f3a4:	f104 01b8 	add.w	r1, r4, #184	; 0xb8
 800f3a8:	f000 f9e2 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f3ac:	4620      	mov	r0, r4
 800f3ae:	bd10      	pop	{r4, pc}
 800f3b0:	08029c94 	.word	0x08029c94
 800f3b4:	0802a398 	.word	0x0802a398

0800f3b8 <_ZNK8touchgfx25AbstractDirectionProgress12getDirectionEv>:
 800f3b8:	f890 00b4 	ldrb.w	r0, [r0, #180]	; 0xb4
 800f3bc:	4770      	bx	lr

0800f3be <_ZN8touchgfx25AbstractDirectionProgressD1Ev>:
 800f3be:	4770      	bx	lr

0800f3c0 <_ZN8touchgfx25AbstractDirectionProgressD0Ev>:
 800f3c0:	b510      	push	{r4, lr}
 800f3c2:	21b8      	movs	r1, #184	; 0xb8
 800f3c4:	4604      	mov	r4, r0
 800f3c6:	f017 f903 	bl	80265d0 <_ZdlPvj>
 800f3ca:	4620      	mov	r0, r4
 800f3cc:	bd10      	pop	{r4, pc}

0800f3ce <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>:
 800f3ce:	b570      	push	{r4, r5, r6, lr}
 800f3d0:	4604      	mov	r4, r0
 800f3d2:	f880 10b4 	strb.w	r1, [r0, #180]	; 0xb4
 800f3d6:	3058      	adds	r0, #88	; 0x58
 800f3d8:	f006 fe4e 	bl	8016078 <_ZNK8touchgfx8Drawable10invalidateEv>
 800f3dc:	6823      	ldr	r3, [r4, #0]
 800f3de:	4620      	mov	r0, r4
 800f3e0:	f8d3 50b0 	ldr.w	r5, [r3, #176]	; 0xb0
 800f3e4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f3e8:	4798      	blx	r3
 800f3ea:	462b      	mov	r3, r5
 800f3ec:	4601      	mov	r1, r0
 800f3ee:	4620      	mov	r0, r4
 800f3f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f3f4:	4718      	bx	r3

0800f3f6 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE>:
 800f3f6:	f890 30b4 	ldrb.w	r3, [r0, #180]	; 0xb4
 800f3fa:	428b      	cmp	r3, r1
 800f3fc:	d001      	beq.n	800f402 <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE+0xc>
 800f3fe:	f7ff bfe6 	b.w	800f3ce <_ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE.part.0>
 800f402:	4770      	bx	lr

0800f404 <_ZN8touchgfx25AbstractDirectionProgressC1Ev>:
 800f404:	b510      	push	{r4, lr}
 800f406:	4604      	mov	r4, r0
 800f408:	f000 f952 	bl	800f6b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800f40c:	4b03      	ldr	r3, [pc, #12]	; (800f41c <_ZN8touchgfx25AbstractDirectionProgressC1Ev+0x18>)
 800f40e:	6023      	str	r3, [r4, #0]
 800f410:	2300      	movs	r3, #0
 800f412:	f884 30b4 	strb.w	r3, [r4, #180]	; 0xb4
 800f416:	4620      	mov	r0, r4
 800f418:	bd10      	pop	{r4, pc}
 800f41a:	bf00      	nop
 800f41c:	08029d78 	.word	0x08029d78

0800f420 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800f420:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800f424:	4770      	bx	lr

0800f426 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800f426:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800f42a:	4770      	bx	lr

0800f42c <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800f42c:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800f430:	4770      	bx	lr

0800f432 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800f432:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800f436:	4770      	bx	lr

0800f438 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800f438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f43a:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800f43e:	461e      	mov	r6, r3
 800f440:	6803      	ldr	r3, [r0, #0]
 800f442:	460f      	mov	r7, r1
 800f444:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f448:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800f44c:	4604      	mov	r4, r0
 800f44e:	4615      	mov	r5, r2
 800f450:	4798      	blx	r3
 800f452:	b93e      	cbnz	r6, 800f464 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800f454:	1bed      	subs	r5, r5, r7
 800f456:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800f45a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f45e:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800f462:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800f464:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800f468:	e7f7      	b.n	800f45a <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800f46a <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800f46a:	b510      	push	{r4, lr}
 800f46c:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f470:	600c      	str	r4, [r1, #0]
 800f472:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f476:	6011      	str	r1, [r2, #0]
 800f478:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f47c:	801a      	strh	r2, [r3, #0]
 800f47e:	9b02      	ldr	r3, [sp, #8]
 800f480:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800f484:	801a      	strh	r2, [r3, #0]
 800f486:	bd10      	pop	{r4, pc}

0800f488 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800f488:	b510      	push	{r4, lr}
 800f48a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800f48e:	600c      	str	r4, [r1, #0]
 800f490:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f494:	6011      	str	r1, [r2, #0]
 800f496:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800f49a:	801a      	strh	r2, [r3, #0]
 800f49c:	bd10      	pop	{r4, pc}

0800f49e <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800f49e:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f4a2:	600b      	str	r3, [r1, #0]
 800f4a4:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f4a8:	6013      	str	r3, [r2, #0]
 800f4aa:	4770      	bx	lr

0800f4ac <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800f4ac:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800f4b0:	4770      	bx	lr

0800f4b2 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800f4b2:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800f4b6:	4770      	bx	lr

0800f4b8 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800f4b8:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800f4bc:	4770      	bx	lr

0800f4be <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800f4be:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800f4c2:	4770      	bx	lr

0800f4c4 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800f4c4:	4770      	bx	lr

0800f4c6 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800f4c6:	b510      	push	{r4, lr}
 800f4c8:	21b4      	movs	r1, #180	; 0xb4
 800f4ca:	4604      	mov	r4, r0
 800f4cc:	f017 f880 	bl	80265d0 <_ZdlPvj>
 800f4d0:	4620      	mov	r0, r4
 800f4d2:	bd10      	pop	{r4, pc}

0800f4d4 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800f4d4:	b570      	push	{r4, r5, r6, lr}
 800f4d6:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800f4da:	428d      	cmp	r5, r1
 800f4dc:	bfb8      	it	lt
 800f4de:	460d      	movlt	r5, r1
 800f4e0:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800f4e4:	428d      	cmp	r5, r1
 800f4e6:	4604      	mov	r4, r0
 800f4e8:	bfa8      	it	ge
 800f4ea:	460d      	movge	r5, r1
 800f4ec:	4616      	mov	r6, r2
 800f4ee:	b99a      	cbnz	r2, 800f518 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800f4f0:	6803      	ldr	r3, [r0, #0]
 800f4f2:	4629      	mov	r1, r5
 800f4f4:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f4f8:	4798      	blx	r3
 800f4fa:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f4fe:	b368      	cbz	r0, 800f55c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f500:	6803      	ldr	r3, [r0, #0]
 800f502:	68db      	ldr	r3, [r3, #12]
 800f504:	4798      	blx	r3
 800f506:	b348      	cbz	r0, 800f55c <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800f508:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f50c:	6803      	ldr	r3, [r0, #0]
 800f50e:	4621      	mov	r1, r4
 800f510:	689b      	ldr	r3, [r3, #8]
 800f512:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f516:	4718      	bx	r3
 800f518:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	dd08      	ble.n	800f532 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800f520:	f005 fcc2 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800f524:	4621      	mov	r1, r4
 800f526:	3004      	adds	r0, #4
 800f528:	f005 fd0b 	bl	8014f42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f52c:	2300      	movs	r3, #0
 800f52e:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f532:	6823      	ldr	r3, [r4, #0]
 800f534:	4620      	mov	r0, r4
 800f536:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800f53a:	4798      	blx	r3
 800f53c:	2300      	movs	r3, #0
 800f53e:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800f542:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800f546:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800f54a:	f005 fcad 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800f54e:	4621      	mov	r1, r4
 800f550:	3004      	adds	r0, #4
 800f552:	f005 fd9f 	bl	8015094 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800f556:	2301      	movs	r3, #1
 800f558:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800f55c:	bd70      	pop	{r4, r5, r6, pc}

0800f55e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800f55e:	b510      	push	{r4, lr}
 800f560:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800f564:	4299      	cmp	r1, r3
 800f566:	bfb8      	it	lt
 800f568:	4619      	movlt	r1, r3
 800f56a:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800f56e:	4299      	cmp	r1, r3
 800f570:	bfa8      	it	ge
 800f572:	4619      	movge	r1, r3
 800f574:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800f578:	428b      	cmp	r3, r1
 800f57a:	4604      	mov	r4, r0
 800f57c:	d010      	beq.n	800f5a0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f57e:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800f582:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800f586:	b158      	cbz	r0, 800f5a0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f588:	6803      	ldr	r3, [r0, #0]
 800f58a:	68db      	ldr	r3, [r3, #12]
 800f58c:	4798      	blx	r3
 800f58e:	b138      	cbz	r0, 800f5a0 <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800f590:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800f594:	6803      	ldr	r3, [r0, #0]
 800f596:	4621      	mov	r1, r4
 800f598:	689b      	ldr	r3, [r3, #8]
 800f59a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f59e:	4718      	bx	r3
 800f5a0:	bd10      	pop	{r4, pc}

0800f5a2 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800f5a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f5a4:	4604      	mov	r4, r0
 800f5a6:	460d      	mov	r5, r1
 800f5a8:	b1a9      	cbz	r1, 800f5d6 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800f5aa:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800f5ae:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800f5b2:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800f5b6:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800f5ba:	ab01      	add	r3, sp, #4
 800f5bc:	1a12      	subs	r2, r2, r0
 800f5be:	1b89      	subs	r1, r1, r6
 800f5c0:	1a38      	subs	r0, r7, r0
 800f5c2:	f006 ff27 	bl	8016414 <_ZN8touchgfx6muldivElllRl>
 800f5c6:	4629      	mov	r1, r5
 800f5c8:	ab01      	add	r3, sp, #4
 800f5ca:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800f5ce:	4430      	add	r0, r6
 800f5d0:	f006 ff20 	bl	8016414 <_ZN8touchgfx6muldivElllRl>
 800f5d4:	b285      	uxth	r5, r0
 800f5d6:	4628      	mov	r0, r5
 800f5d8:	b003      	add	sp, #12
 800f5da:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f5dc <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800f5dc:	b570      	push	{r4, r5, r6, lr}
 800f5de:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800f5e2:	4604      	mov	r4, r0
 800f5e4:	2b00      	cmp	r3, #0
 800f5e6:	d035      	beq.n	800f654 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f5e8:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800f5ec:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800f5f0:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800f5f4:	3001      	adds	r0, #1
 800f5f6:	1ad2      	subs	r2, r2, r3
 800f5f8:	b212      	sxth	r2, r2
 800f5fa:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800f5fe:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800f602:	2100      	movs	r1, #0
 800f604:	b280      	uxth	r0, r0
 800f606:	47a8      	blx	r5
 800f608:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800f60c:	6823      	ldr	r3, [r4, #0]
 800f60e:	4401      	add	r1, r0
 800f610:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800f614:	4620      	mov	r0, r4
 800f616:	4798      	blx	r3
 800f618:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800f61c:	429a      	cmp	r2, r3
 800f61e:	db19      	blt.n	800f654 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f620:	2500      	movs	r5, #0
 800f622:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f626:	f005 fc3f 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800f62a:	4621      	mov	r1, r4
 800f62c:	3004      	adds	r0, #4
 800f62e:	f005 fc88 	bl	8014f42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800f632:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f636:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f63a:	b158      	cbz	r0, 800f654 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f63c:	6803      	ldr	r3, [r0, #0]
 800f63e:	68db      	ldr	r3, [r3, #12]
 800f640:	4798      	blx	r3
 800f642:	b138      	cbz	r0, 800f654 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800f644:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800f648:	6803      	ldr	r3, [r0, #0]
 800f64a:	4621      	mov	r1, r4
 800f64c:	689b      	ldr	r3, [r3, #8]
 800f64e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f652:	4718      	bx	r3
 800f654:	bd70      	pop	{r4, r5, r6, pc}

0800f656 <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800f656:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f65a:	4604      	mov	r4, r0
 800f65c:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800f660:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800f664:	460e      	mov	r6, r1
 800f666:	4615      	mov	r5, r2
 800f668:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800f66c:	4619      	mov	r1, r3
 800f66e:	463a      	mov	r2, r7
 800f670:	3058      	adds	r0, #88	; 0x58
 800f672:	4698      	mov	r8, r3
 800f674:	f7f7 feaa 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f678:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800f67c:	4446      	add	r6, r8
 800f67e:	42b3      	cmp	r3, r6
 800f680:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f684:	bfb8      	it	lt
 800f686:	8126      	strhlt	r6, [r4, #8]
 800f688:	443d      	add	r5, r7
 800f68a:	42ab      	cmp	r3, r5
 800f68c:	bfb8      	it	lt
 800f68e:	8165      	strhlt	r5, [r4, #10]
 800f690:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f694 <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800f694:	b510      	push	{r4, lr}
 800f696:	4604      	mov	r4, r0
 800f698:	302c      	adds	r0, #44	; 0x2c
 800f69a:	f002 ff05 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f69e:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800f6a2:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800f6a6:	4620      	mov	r0, r4
 800f6a8:	f7f7 fe90 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f6ac:	bd10      	pop	{r4, pc}
	...

0800f6b0 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800f6b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f6b2:	4604      	mov	r4, r0
 800f6b4:	4626      	mov	r6, r4
 800f6b6:	2500      	movs	r5, #0
 800f6b8:	f7f8 fd88 	bl	80081cc <_ZN8touchgfx8DrawableC1Ev>
 800f6bc:	4b23      	ldr	r3, [pc, #140]	; (800f74c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800f6be:	62a5      	str	r5, [r4, #40]	; 0x28
 800f6c0:	f846 3b2c 	str.w	r3, [r6], #44
 800f6c4:	2226      	movs	r2, #38	; 0x26
 800f6c6:	4629      	mov	r1, r5
 800f6c8:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800f6cc:	4630      	mov	r0, r6
 800f6ce:	f8ad 7004 	strh.w	r7, [sp, #4]
 800f6d2:	f017 f837 	bl	8026744 <memset>
 800f6d6:	4630      	mov	r0, r6
 800f6d8:	f7f8 fd78 	bl	80081cc <_ZN8touchgfx8DrawableC1Ev>
 800f6dc:	a902      	add	r1, sp, #8
 800f6de:	4b1c      	ldr	r3, [pc, #112]	; (800f750 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800f6e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 800f6e2:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800f6e6:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800f6ea:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800f6ee:	4630      	mov	r0, r6
 800f6f0:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800f6f4:	f002 fed8 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800f6f8:	4638      	mov	r0, r7
 800f6fa:	f7f8 fd67 	bl	80081cc <_ZN8touchgfx8DrawableC1Ev>
 800f6fe:	4b15      	ldr	r3, [pc, #84]	; (800f754 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800f700:	65a3      	str	r3, [r4, #88]	; 0x58
 800f702:	2364      	movs	r3, #100	; 0x64
 800f704:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800f708:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800f70c:	4b12      	ldr	r3, [pc, #72]	; (800f758 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800f70e:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800f712:	4629      	mov	r1, r5
 800f714:	4630      	mov	r0, r6
 800f716:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800f71a:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800f71e:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800f722:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800f726:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800f72a:	f7f2 fa2b 	bl	8001b84 <_ZN8touchgfx8Drawable4setXEs>
 800f72e:	4629      	mov	r1, r5
 800f730:	4630      	mov	r0, r6
 800f732:	f7f2 fa29 	bl	8001b88 <_ZN8touchgfx8Drawable4setYEs>
 800f736:	4631      	mov	r1, r6
 800f738:	4620      	mov	r0, r4
 800f73a:	f000 f819 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f73e:	4620      	mov	r0, r4
 800f740:	4639      	mov	r1, r7
 800f742:	f000 f815 	bl	800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800f746:	4620      	mov	r0, r4
 800f748:	b003      	add	sp, #12
 800f74a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800f74c:	08029e54 	.word	0x08029e54
 800f750:	0802a4dc 	.word	0x0802a4dc
 800f754:	08029f28 	.word	0x08029f28
 800f758:	08016b73 	.word	0x08016b73

0800f75c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800f75c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f75e:	2000      	movs	r0, #0
 800f760:	b12b      	cbz	r3, 800f76e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f762:	b920      	cbnz	r0, 800f76e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800f764:	1a5a      	subs	r2, r3, r1
 800f766:	4250      	negs	r0, r2
 800f768:	4150      	adcs	r0, r2
 800f76a:	699b      	ldr	r3, [r3, #24]
 800f76c:	e7f8      	b.n	800f760 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800f76e:	4770      	bx	lr

0800f770 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800f770:	2300      	movs	r3, #0
 800f772:	6148      	str	r0, [r1, #20]
 800f774:	618b      	str	r3, [r1, #24]
 800f776:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f778:	b913      	cbnz	r3, 800f780 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800f77a:	6281      	str	r1, [r0, #40]	; 0x28
 800f77c:	4770      	bx	lr
 800f77e:	4613      	mov	r3, r2
 800f780:	699a      	ldr	r2, [r3, #24]
 800f782:	2a00      	cmp	r2, #0
 800f784:	d1fb      	bne.n	800f77e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800f786:	6199      	str	r1, [r3, #24]
 800f788:	4770      	bx	lr

0800f78a <_ZN8touchgfx9Container9removeAllEv>:
 800f78a:	2200      	movs	r2, #0
 800f78c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f78e:	b123      	cbz	r3, 800f79a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800f790:	6999      	ldr	r1, [r3, #24]
 800f792:	6281      	str	r1, [r0, #40]	; 0x28
 800f794:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800f798:	e7f8      	b.n	800f78c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800f79a:	4770      	bx	lr

0800f79c <_ZN8touchgfx9Container6unlinkEv>:
 800f79c:	2300      	movs	r3, #0
 800f79e:	6283      	str	r3, [r0, #40]	; 0x28
 800f7a0:	4770      	bx	lr

0800f7a2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800f7a2:	2200      	movs	r2, #0
 800f7a4:	8002      	strh	r2, [r0, #0]
 800f7a6:	8042      	strh	r2, [r0, #2]
 800f7a8:	8082      	strh	r2, [r0, #4]
 800f7aa:	80c2      	strh	r2, [r0, #6]
 800f7ac:	4770      	bx	lr

0800f7ae <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800f7ae:	b570      	push	{r4, r5, r6, lr}
 800f7b0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f7b2:	460d      	mov	r5, r1
 800f7b4:	4616      	mov	r6, r2
 800f7b6:	b13c      	cbz	r4, 800f7c8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800f7b8:	6823      	ldr	r3, [r4, #0]
 800f7ba:	4620      	mov	r0, r4
 800f7bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800f7be:	4632      	mov	r2, r6
 800f7c0:	4629      	mov	r1, r5
 800f7c2:	4798      	blx	r3
 800f7c4:	69a4      	ldr	r4, [r4, #24]
 800f7c6:	e7f6      	b.n	800f7b6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800f7c8:	bd70      	pop	{r4, r5, r6, pc}

0800f7ca <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800f7ca:	b538      	push	{r3, r4, r5, lr}
 800f7cc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f7ce:	460d      	mov	r5, r1
 800f7d0:	b134      	cbz	r4, 800f7e0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800f7d2:	682b      	ldr	r3, [r5, #0]
 800f7d4:	4621      	mov	r1, r4
 800f7d6:	689b      	ldr	r3, [r3, #8]
 800f7d8:	4628      	mov	r0, r5
 800f7da:	4798      	blx	r3
 800f7dc:	69a4      	ldr	r4, [r4, #24]
 800f7de:	e7f7      	b.n	800f7d0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800f7e0:	bd38      	pop	{r3, r4, r5, pc}

0800f7e2 <_ZN8touchgfx9ContainerD1Ev>:
 800f7e2:	4770      	bx	lr

0800f7e4 <_ZN8touchgfx9ContainerD0Ev>:
 800f7e4:	b510      	push	{r4, lr}
 800f7e6:	212c      	movs	r1, #44	; 0x2c
 800f7e8:	4604      	mov	r4, r0
 800f7ea:	f016 fef1 	bl	80265d0 <_ZdlPvj>
 800f7ee:	4620      	mov	r0, r4
 800f7f0:	bd10      	pop	{r4, pc}

0800f7f2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800f7f2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f7f4:	b19b      	cbz	r3, 800f81e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f7f6:	428b      	cmp	r3, r1
 800f7f8:	d109      	bne.n	800f80e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800f7fa:	699a      	ldr	r2, [r3, #24]
 800f7fc:	2100      	movs	r1, #0
 800f7fe:	6159      	str	r1, [r3, #20]
 800f800:	6282      	str	r2, [r0, #40]	; 0x28
 800f802:	b902      	cbnz	r2, 800f806 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800f804:	4770      	bx	lr
 800f806:	6199      	str	r1, [r3, #24]
 800f808:	4770      	bx	lr
 800f80a:	4613      	mov	r3, r2
 800f80c:	b13a      	cbz	r2, 800f81e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800f80e:	699a      	ldr	r2, [r3, #24]
 800f810:	428a      	cmp	r2, r1
 800f812:	d1fa      	bne.n	800f80a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800f814:	698a      	ldr	r2, [r1, #24]
 800f816:	619a      	str	r2, [r3, #24]
 800f818:	2300      	movs	r3, #0
 800f81a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800f81e:	4770      	bx	lr

0800f820 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800f820:	b410      	push	{r4}
 800f822:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800f824:	4604      	mov	r4, r0
 800f826:	b92b      	cbnz	r3, 800f834 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800f828:	6803      	ldr	r3, [r0, #0]
 800f82a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f82e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800f830:	4611      	mov	r1, r2
 800f832:	4718      	bx	r3
 800f834:	b941      	cbnz	r1, 800f848 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800f836:	6193      	str	r3, [r2, #24]
 800f838:	6282      	str	r2, [r0, #40]	; 0x28
 800f83a:	6154      	str	r4, [r2, #20]
 800f83c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800f840:	4770      	bx	lr
 800f842:	4603      	mov	r3, r0
 800f844:	2800      	cmp	r0, #0
 800f846:	d0f9      	beq.n	800f83c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800f848:	4299      	cmp	r1, r3
 800f84a:	6998      	ldr	r0, [r3, #24]
 800f84c:	d1f9      	bne.n	800f842 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800f84e:	6190      	str	r0, [r2, #24]
 800f850:	618a      	str	r2, [r1, #24]
 800f852:	e7f2      	b.n	800f83a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800f854 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800f854:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f858:	461f      	mov	r7, r3
 800f85a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800f85e:	460d      	mov	r5, r1
 800f860:	4616      	mov	r6, r2
 800f862:	b103      	cbz	r3, 800f866 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800f864:	6038      	str	r0, [r7, #0]
 800f866:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800f868:	b314      	cbz	r4, 800f8b0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800f86a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800f86e:	b1eb      	cbz	r3, 800f8ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f870:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800f874:	428d      	cmp	r5, r1
 800f876:	db19      	blt.n	800f8ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f878:	8923      	ldrh	r3, [r4, #8]
 800f87a:	b289      	uxth	r1, r1
 800f87c:	440b      	add	r3, r1
 800f87e:	b21b      	sxth	r3, r3
 800f880:	429d      	cmp	r5, r3
 800f882:	da13      	bge.n	800f8ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f884:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800f888:	4296      	cmp	r6, r2
 800f88a:	db0f      	blt.n	800f8ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f88c:	8963      	ldrh	r3, [r4, #10]
 800f88e:	b292      	uxth	r2, r2
 800f890:	4413      	add	r3, r2
 800f892:	b21b      	sxth	r3, r3
 800f894:	429e      	cmp	r6, r3
 800f896:	da09      	bge.n	800f8ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800f898:	6823      	ldr	r3, [r4, #0]
 800f89a:	1ab2      	subs	r2, r6, r2
 800f89c:	1a69      	subs	r1, r5, r1
 800f89e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800f8a2:	b212      	sxth	r2, r2
 800f8a4:	463b      	mov	r3, r7
 800f8a6:	b209      	sxth	r1, r1
 800f8a8:	4620      	mov	r0, r4
 800f8aa:	47c0      	blx	r8
 800f8ac:	69a4      	ldr	r4, [r4, #24]
 800f8ae:	e7db      	b.n	800f868 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800f8b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800f8b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800f8b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f8b8:	4c6e      	ldr	r4, [pc, #440]	; (800fa74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800f8ba:	b0a1      	sub	sp, #132	; 0x84
 800f8bc:	6824      	ldr	r4, [r4, #0]
 800f8be:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800f8c0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800f8c4:	9303      	str	r3, [sp, #12]
 800f8c6:	2400      	movs	r4, #0
 800f8c8:	802c      	strh	r4, [r5, #0]
 800f8ca:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800f8cc:	802c      	strh	r4, [r5, #0]
 800f8ce:	601c      	str	r4, [r3, #0]
 800f8d0:	4606      	mov	r6, r0
 800f8d2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800f8d6:	f7ff ffbd 	bl	800f854 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f8da:	f1b9 0f03 	cmp.w	r9, #3
 800f8de:	f340 80c2 	ble.w	800fa66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800f8e2:	4631      	mov	r1, r6
 800f8e4:	a80c      	add	r0, sp, #48	; 0x30
 800f8e6:	f006 fc63 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f8ea:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800f8ee:	9306      	str	r3, [sp, #24]
 800f8f0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800f8f4:	9307      	str	r3, [sp, #28]
 800f8f6:	9b03      	ldr	r3, [sp, #12]
 800f8f8:	f8d3 a000 	ldr.w	sl, [r3]
 800f8fc:	f1ba 0f00 	cmp.w	sl, #0
 800f900:	f000 80b4 	beq.w	800fa6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800f904:	4651      	mov	r1, sl
 800f906:	a810      	add	r0, sp, #64	; 0x40
 800f908:	f006 fc52 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f90c:	9b01      	ldr	r3, [sp, #4]
 800f90e:	9a06      	ldr	r2, [sp, #24]
 800f910:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800f914:	189d      	adds	r5, r3, r2
 800f916:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800f91a:	9a07      	ldr	r2, [sp, #28]
 800f91c:	2002      	movs	r0, #2
 800f91e:	fb91 f1f0 	sdiv	r1, r1, r0
 800f922:	4419      	add	r1, r3
 800f924:	1a6d      	subs	r5, r5, r1
 800f926:	9b02      	ldr	r3, [sp, #8]
 800f928:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800f92c:	4413      	add	r3, r2
 800f92e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800f932:	fb92 f2f0 	sdiv	r2, r2, r0
 800f936:	440a      	add	r2, r1
 800f938:	1a9b      	subs	r3, r3, r2
 800f93a:	435b      	muls	r3, r3
 800f93c:	fb05 3505 	mla	r5, r5, r5, r3
 800f940:	4f4d      	ldr	r7, [pc, #308]	; (800fa78 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800f942:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f944:	ac10      	add	r4, sp, #64	; 0x40
 800f946:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f948:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f94a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f94c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800f94e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800f950:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800f954:	f1b9 0f0c 	cmp.w	r9, #12
 800f958:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800f95c:	f04f 0303 	mov.w	r3, #3
 800f960:	bfc8      	it	gt
 800f962:	4698      	movgt	r8, r3
 800f964:	f8cd 9000 	str.w	r9, [sp]
 800f968:	f04f 0400 	mov.w	r4, #0
 800f96c:	bfdc      	itt	le
 800f96e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800f972:	fb92 f8f3 	sdivle	r8, r2, r3
 800f976:	1c63      	adds	r3, r4, #1
 800f978:	aa10      	add	r2, sp, #64	; 0x40
 800f97a:	f004 0401 	and.w	r4, r4, #1
 800f97e:	9308      	str	r3, [sp, #32]
 800f980:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800f984:	9b00      	ldr	r3, [sp, #0]
 800f986:	fb93 f3f8 	sdiv	r3, r3, r8
 800f98a:	b29b      	uxth	r3, r3
 800f98c:	3404      	adds	r4, #4
 800f98e:	f04f 0b00 	mov.w	fp, #0
 800f992:	9304      	str	r3, [sp, #16]
 800f994:	9a04      	ldr	r2, [sp, #16]
 800f996:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800f99a:	fb13 f302 	smulbb	r3, r3, r2
 800f99e:	9a01      	ldr	r2, [sp, #4]
 800f9a0:	b29b      	uxth	r3, r3
 800f9a2:	1899      	adds	r1, r3, r2
 800f9a4:	9305      	str	r3, [sp, #20]
 800f9a6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800f9aa:	b209      	sxth	r1, r1
 800f9ac:	4299      	cmp	r1, r3
 800f9ae:	db4d      	blt.n	800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9b0:	8932      	ldrh	r2, [r6, #8]
 800f9b2:	4413      	add	r3, r2
 800f9b4:	b21b      	sxth	r3, r3
 800f9b6:	4299      	cmp	r1, r3
 800f9b8:	da48      	bge.n	800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9ba:	9b04      	ldr	r3, [sp, #16]
 800f9bc:	6827      	ldr	r7, [r4, #0]
 800f9be:	fb17 f703 	smulbb	r7, r7, r3
 800f9c2:	9b02      	ldr	r3, [sp, #8]
 800f9c4:	b2bf      	uxth	r7, r7
 800f9c6:	18fa      	adds	r2, r7, r3
 800f9c8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800f9cc:	b212      	sxth	r2, r2
 800f9ce:	429a      	cmp	r2, r3
 800f9d0:	db3c      	blt.n	800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9d2:	8970      	ldrh	r0, [r6, #10]
 800f9d4:	4403      	add	r3, r0
 800f9d6:	b21b      	sxth	r3, r3
 800f9d8:	429a      	cmp	r2, r3
 800f9da:	da37      	bge.n	800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9dc:	2300      	movs	r3, #0
 800f9de:	930b      	str	r3, [sp, #44]	; 0x2c
 800f9e0:	4630      	mov	r0, r6
 800f9e2:	ab0b      	add	r3, sp, #44	; 0x2c
 800f9e4:	f7ff ff36 	bl	800f854 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800f9e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800f9ea:	b37a      	cbz	r2, 800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9ec:	4552      	cmp	r2, sl
 800f9ee:	d02d      	beq.n	800fa4c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800f9f0:	4611      	mov	r1, r2
 800f9f2:	a80e      	add	r0, sp, #56	; 0x38
 800f9f4:	9209      	str	r2, [sp, #36]	; 0x24
 800f9f6:	f006 fbdb 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f9fa:	9a06      	ldr	r2, [sp, #24]
 800f9fc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800fa00:	9b01      	ldr	r3, [sp, #4]
 800fa02:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800fa06:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800fa0a:	4413      	add	r3, r2
 800fa0c:	f04f 0e02 	mov.w	lr, #2
 800fa10:	fb91 f1fe 	sdiv	r1, r1, lr
 800fa14:	4401      	add	r1, r0
 800fa16:	1a58      	subs	r0, r3, r1
 800fa18:	9a07      	ldr	r2, [sp, #28]
 800fa1a:	9b02      	ldr	r3, [sp, #8]
 800fa1c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800fa20:	fb9c fcfe 	sdiv	ip, ip, lr
 800fa24:	4413      	add	r3, r2
 800fa26:	448c      	add	ip, r1
 800fa28:	eba3 030c 	sub.w	r3, r3, ip
 800fa2c:	435b      	muls	r3, r3
 800fa2e:	fb00 3300 	mla	r3, r0, r0, r3
 800fa32:	42ab      	cmp	r3, r5
 800fa34:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800fa36:	d208      	bcs.n	800fa4a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800fa38:	9803      	ldr	r0, [sp, #12]
 800fa3a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800fa3c:	6001      	str	r1, [r0, #0]
 800fa3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800fa40:	9805      	ldr	r0, [sp, #20]
 800fa42:	8008      	strh	r0, [r1, #0]
 800fa44:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fa46:	461d      	mov	r5, r3
 800fa48:	800f      	strh	r7, [r1, #0]
 800fa4a:	4692      	mov	sl, r2
 800fa4c:	f10b 0b01 	add.w	fp, fp, #1
 800fa50:	f1bb 0f04 	cmp.w	fp, #4
 800fa54:	f104 0408 	add.w	r4, r4, #8
 800fa58:	d19c      	bne.n	800f994 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800fa5a:	9b00      	ldr	r3, [sp, #0]
 800fa5c:	9c08      	ldr	r4, [sp, #32]
 800fa5e:	444b      	add	r3, r9
 800fa60:	4544      	cmp	r4, r8
 800fa62:	9300      	str	r3, [sp, #0]
 800fa64:	d187      	bne.n	800f976 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800fa66:	b021      	add	sp, #132	; 0x84
 800fa68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fa6c:	f04f 35ff 	mov.w	r5, #4294967295
 800fa70:	e766      	b.n	800f940 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800fa72:	bf00      	nop
 800fa74:	2000ef1c 	.word	0x2000ef1c
 800fa78:	08027878 	.word	0x08027878

0800fa7c <_ZN8touchgfx4RectaNERKS0_>:
 800fa7c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fa80:	f9b1 7000 	ldrsh.w	r7, [r1]
 800fa84:	888c      	ldrh	r4, [r1, #4]
 800fa86:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fa8a:	443c      	add	r4, r7
 800fa8c:	b2a4      	uxth	r4, r4
 800fa8e:	fa0f f884 	sxth.w	r8, r4
 800fa92:	45c1      	cmp	r9, r8
 800fa94:	da2f      	bge.n	800faf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fa96:	8882      	ldrh	r2, [r0, #4]
 800fa98:	444a      	add	r2, r9
 800fa9a:	b292      	uxth	r2, r2
 800fa9c:	fa0f fe82 	sxth.w	lr, r2
 800faa0:	4577      	cmp	r7, lr
 800faa2:	da28      	bge.n	800faf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800faa4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800faa8:	88cb      	ldrh	r3, [r1, #6]
 800faaa:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800faae:	442b      	add	r3, r5
 800fab0:	b21b      	sxth	r3, r3
 800fab2:	429e      	cmp	r6, r3
 800fab4:	da1f      	bge.n	800faf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fab6:	88c3      	ldrh	r3, [r0, #6]
 800fab8:	4433      	add	r3, r6
 800faba:	b29b      	uxth	r3, r3
 800fabc:	fa0f fc83 	sxth.w	ip, r3
 800fac0:	4565      	cmp	r5, ip
 800fac2:	da18      	bge.n	800faf6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800fac4:	454f      	cmp	r7, r9
 800fac6:	bfb8      	it	lt
 800fac8:	464f      	movlt	r7, r9
 800faca:	42b5      	cmp	r5, r6
 800facc:	bfb8      	it	lt
 800face:	4635      	movlt	r5, r6
 800fad0:	45f0      	cmp	r8, lr
 800fad2:	bfd8      	it	le
 800fad4:	4622      	movle	r2, r4
 800fad6:	1bd2      	subs	r2, r2, r7
 800fad8:	8082      	strh	r2, [r0, #4]
 800fada:	884a      	ldrh	r2, [r1, #2]
 800fadc:	88c9      	ldrh	r1, [r1, #6]
 800fade:	8007      	strh	r7, [r0, #0]
 800fae0:	440a      	add	r2, r1
 800fae2:	b292      	uxth	r2, r2
 800fae4:	b211      	sxth	r1, r2
 800fae6:	458c      	cmp	ip, r1
 800fae8:	bfa8      	it	ge
 800faea:	4613      	movge	r3, r2
 800faec:	1b5b      	subs	r3, r3, r5
 800faee:	80c3      	strh	r3, [r0, #6]
 800faf0:	8045      	strh	r5, [r0, #2]
 800faf2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800faf6:	2300      	movs	r3, #0
 800faf8:	8003      	strh	r3, [r0, #0]
 800fafa:	8043      	strh	r3, [r0, #2]
 800fafc:	8083      	strh	r3, [r0, #4]
 800fafe:	80c3      	strh	r3, [r0, #6]
 800fb00:	e7f7      	b.n	800faf2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800fb02:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800fb06:	2b00      	cmp	r3, #0
 800fb08:	dd06      	ble.n	800fb18 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800fb0a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800fb0e:	2800      	cmp	r0, #0
 800fb10:	bfcc      	ite	gt
 800fb12:	2000      	movgt	r0, #0
 800fb14:	2001      	movle	r0, #1
 800fb16:	4770      	bx	lr
 800fb18:	2001      	movs	r0, #1
 800fb1a:	4770      	bx	lr

0800fb1c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800fb1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb20:	2300      	movs	r3, #0
 800fb22:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800fb24:	8003      	strh	r3, [r0, #0]
 800fb26:	4604      	mov	r4, r0
 800fb28:	8043      	strh	r3, [r0, #2]
 800fb2a:	8083      	strh	r3, [r0, #4]
 800fb2c:	80c3      	strh	r3, [r0, #6]
 800fb2e:	2d00      	cmp	r5, #0
 800fb30:	d040      	beq.n	800fbb4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800fb32:	1d28      	adds	r0, r5, #4
 800fb34:	f7ff ffe5 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb38:	b988      	cbnz	r0, 800fb5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fb3a:	4620      	mov	r0, r4
 800fb3c:	f7ff ffe1 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fb40:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800fb44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800fb48:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800fb4c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800fb50:	b138      	cbz	r0, 800fb62 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800fb52:	8022      	strh	r2, [r4, #0]
 800fb54:	8063      	strh	r3, [r4, #2]
 800fb56:	f8a4 e004 	strh.w	lr, [r4, #4]
 800fb5a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800fb5e:	69ad      	ldr	r5, [r5, #24]
 800fb60:	e7e5      	b.n	800fb2e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800fb62:	f9b4 0000 	ldrsh.w	r0, [r4]
 800fb66:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800fb6a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800fb6e:	4290      	cmp	r0, r2
 800fb70:	4607      	mov	r7, r0
 800fb72:	bfa8      	it	ge
 800fb74:	4617      	movge	r7, r2
 800fb76:	4472      	add	r2, lr
 800fb78:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800fb7c:	8027      	strh	r7, [r4, #0]
 800fb7e:	4299      	cmp	r1, r3
 800fb80:	460e      	mov	r6, r1
 800fb82:	4440      	add	r0, r8
 800fb84:	bfa8      	it	ge
 800fb86:	461e      	movge	r6, r3
 800fb88:	4471      	add	r1, lr
 800fb8a:	4463      	add	r3, ip
 800fb8c:	b200      	sxth	r0, r0
 800fb8e:	b212      	sxth	r2, r2
 800fb90:	b209      	sxth	r1, r1
 800fb92:	b21b      	sxth	r3, r3
 800fb94:	4290      	cmp	r0, r2
 800fb96:	bfac      	ite	ge
 800fb98:	ebc7 0200 	rsbge	r2, r7, r0
 800fb9c:	ebc7 0202 	rsblt	r2, r7, r2
 800fba0:	4299      	cmp	r1, r3
 800fba2:	bfac      	ite	ge
 800fba4:	ebc6 0301 	rsbge	r3, r6, r1
 800fba8:	ebc6 0303 	rsblt	r3, r6, r3
 800fbac:	8066      	strh	r6, [r4, #2]
 800fbae:	80a2      	strh	r2, [r4, #4]
 800fbb0:	80e3      	strh	r3, [r4, #6]
 800fbb2:	e7d4      	b.n	800fb5e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800fbb4:	4620      	mov	r0, r4
 800fbb6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fbba <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800fbba:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800fbbe:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fbc2:	b383      	cbz	r3, 800fc26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fbc4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fbc6:	b374      	cbz	r4, 800fc26 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800fbc8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800fbcc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800fbd0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800fbd4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800fbd8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fbdc:	b303      	cbz	r3, 800fc20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fbde:	4668      	mov	r0, sp
 800fbe0:	1d21      	adds	r1, r4, #4
 800fbe2:	f8ad 5000 	strh.w	r5, [sp]
 800fbe6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800fbea:	f8ad 7004 	strh.w	r7, [sp, #4]
 800fbee:	f8ad 8006 	strh.w	r8, [sp, #6]
 800fbf2:	f7ff ff43 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 800fbf6:	4668      	mov	r0, sp
 800fbf8:	f7ff ff83 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fbfc:	b980      	cbnz	r0, 800fc20 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800fbfe:	f8bd 3000 	ldrh.w	r3, [sp]
 800fc02:	88a2      	ldrh	r2, [r4, #4]
 800fc04:	1a9b      	subs	r3, r3, r2
 800fc06:	f8ad 3000 	strh.w	r3, [sp]
 800fc0a:	88e2      	ldrh	r2, [r4, #6]
 800fc0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc10:	1a9b      	subs	r3, r3, r2
 800fc12:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc16:	6823      	ldr	r3, [r4, #0]
 800fc18:	4669      	mov	r1, sp
 800fc1a:	689b      	ldr	r3, [r3, #8]
 800fc1c:	4620      	mov	r0, r4
 800fc1e:	4798      	blx	r3
 800fc20:	69a4      	ldr	r4, [r4, #24]
 800fc22:	2c00      	cmp	r4, #0
 800fc24:	d1d8      	bne.n	800fbd8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800fc26:	b002      	add	sp, #8
 800fc28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800fc2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800fc2c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800fc2e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800fc32:	460d      	mov	r5, r1
 800fc34:	4616      	mov	r6, r2
 800fc36:	b323      	cbz	r3, 800fc82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fc38:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800fc3a:	b314      	cbz	r4, 800fc82 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800fc3c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800fc40:	b1eb      	cbz	r3, 800fc7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fc42:	6828      	ldr	r0, [r5, #0]
 800fc44:	6869      	ldr	r1, [r5, #4]
 800fc46:	466b      	mov	r3, sp
 800fc48:	c303      	stmia	r3!, {r0, r1}
 800fc4a:	4668      	mov	r0, sp
 800fc4c:	1d21      	adds	r1, r4, #4
 800fc4e:	f7ff ff15 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 800fc52:	4668      	mov	r0, sp
 800fc54:	f7ff ff55 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 800fc58:	b988      	cbnz	r0, 800fc7e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800fc5a:	f8bd 3000 	ldrh.w	r3, [sp]
 800fc5e:	88a2      	ldrh	r2, [r4, #4]
 800fc60:	1a9b      	subs	r3, r3, r2
 800fc62:	f8ad 3000 	strh.w	r3, [sp]
 800fc66:	88e2      	ldrh	r2, [r4, #6]
 800fc68:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800fc6c:	1a9b      	subs	r3, r3, r2
 800fc6e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800fc72:	6823      	ldr	r3, [r4, #0]
 800fc74:	4632      	mov	r2, r6
 800fc76:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800fc78:	4669      	mov	r1, sp
 800fc7a:	4620      	mov	r0, r4
 800fc7c:	4798      	blx	r3
 800fc7e:	69a4      	ldr	r4, [r4, #24]
 800fc80:	e7db      	b.n	800fc3a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800fc82:	b002      	add	sp, #8
 800fc84:	bd70      	pop	{r4, r5, r6, pc}

0800fc86 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800fc86:	b513      	push	{r0, r1, r4, lr}
 800fc88:	6803      	ldr	r3, [r0, #0]
 800fc8a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800fc8e:	2300      	movs	r3, #0
 800fc90:	e9cd 3300 	strd	r3, r3, [sp]
 800fc94:	466b      	mov	r3, sp
 800fc96:	47a0      	blx	r4
 800fc98:	b002      	add	sp, #8
 800fc9a:	bd10      	pop	{r4, pc}

0800fc9c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800fc9c:	2301      	movs	r3, #1
 800fc9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fca2:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fca6:	4770      	bx	lr

0800fca8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800fca8:	2301      	movs	r3, #1
 800fcaa:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800fcae:	f880 306d 	strb.w	r3, [r0, #109]	; 0x6d
 800fcb2:	4770      	bx	lr

0800fcb4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800fcb4:	6843      	ldr	r3, [r0, #4]
 800fcb6:	2201      	movs	r2, #1
 800fcb8:	725a      	strb	r2, [r3, #9]
 800fcba:	6840      	ldr	r0, [r0, #4]
 800fcbc:	6803      	ldr	r3, [r0, #0]
 800fcbe:	691b      	ldr	r3, [r3, #16]
 800fcc0:	4718      	bx	r3

0800fcc2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800fcc2:	6840      	ldr	r0, [r0, #4]
 800fcc4:	6803      	ldr	r3, [r0, #0]
 800fcc6:	689b      	ldr	r3, [r3, #8]
 800fcc8:	4718      	bx	r3

0800fcca <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800fcca:	b530      	push	{r4, r5, lr}
 800fccc:	b08b      	sub	sp, #44	; 0x2c
 800fcce:	6804      	ldr	r4, [r0, #0]
 800fcd0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800fcd4:	9509      	str	r5, [sp, #36]	; 0x24
 800fcd6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800fcda:	9508      	str	r5, [sp, #32]
 800fcdc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800fce0:	9507      	str	r5, [sp, #28]
 800fce2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800fce6:	9506      	str	r5, [sp, #24]
 800fce8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800fcec:	9505      	str	r5, [sp, #20]
 800fcee:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800fcf2:	9504      	str	r5, [sp, #16]
 800fcf4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800fcf8:	9503      	str	r5, [sp, #12]
 800fcfa:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800fcfe:	9502      	str	r5, [sp, #8]
 800fd00:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800fd04:	e9cd 3500 	strd	r3, r5, [sp]
 800fd08:	4613      	mov	r3, r2
 800fd0a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800fd0c:	2200      	movs	r2, #0
 800fd0e:	47a0      	blx	r4
 800fd10:	b00b      	add	sp, #44	; 0x2c
 800fd12:	bd30      	pop	{r4, r5, pc}

0800fd14 <_ZN8touchgfx3HAL10beginFrameEv>:
 800fd14:	4b04      	ldr	r3, [pc, #16]	; (800fd28 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800fd16:	781b      	ldrb	r3, [r3, #0]
 800fd18:	b123      	cbz	r3, 800fd24 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800fd1a:	f890 006e 	ldrb.w	r0, [r0, #110]	; 0x6e
 800fd1e:	f080 0001 	eor.w	r0, r0, #1
 800fd22:	4770      	bx	lr
 800fd24:	2001      	movs	r0, #1
 800fd26:	4770      	bx	lr
 800fd28:	2000ef1a 	.word	0x2000ef1a

0800fd2c <_ZN8touchgfx3HAL8endFrameEv>:
 800fd2c:	b510      	push	{r4, lr}
 800fd2e:	4604      	mov	r4, r0
 800fd30:	6840      	ldr	r0, [r0, #4]
 800fd32:	6803      	ldr	r3, [r0, #0]
 800fd34:	689b      	ldr	r3, [r3, #8]
 800fd36:	4798      	blx	r3
 800fd38:	f894 306d 	ldrb.w	r3, [r4, #109]	; 0x6d
 800fd3c:	b113      	cbz	r3, 800fd44 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800fd3e:	2301      	movs	r3, #1
 800fd40:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 800fd44:	bd10      	pop	{r4, pc}

0800fd46 <_ZN8touchgfx3HAL10initializeEv>:
 800fd46:	b510      	push	{r4, lr}
 800fd48:	4604      	mov	r4, r0
 800fd4a:	f7f1 fb7d 	bl	8001448 <_ZN8touchgfx10OSWrappers10initializeEv>
 800fd4e:	f7f1 f935 	bl	8000fbc <_ZN8touchgfx4GPIO4initEv>
 800fd52:	6860      	ldr	r0, [r4, #4]
 800fd54:	6803      	ldr	r3, [r0, #0]
 800fd56:	68db      	ldr	r3, [r3, #12]
 800fd58:	4798      	blx	r3
 800fd5a:	68e0      	ldr	r0, [r4, #12]
 800fd5c:	6803      	ldr	r3, [r0, #0]
 800fd5e:	689b      	ldr	r3, [r3, #8]
 800fd60:	4798      	blx	r3
 800fd62:	6823      	ldr	r3, [r4, #0]
 800fd64:	4620      	mov	r0, r4
 800fd66:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800fd68:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fd6c:	4718      	bx	r3
	...

0800fd70 <_ZN8touchgfx3HAL4tickEv>:
 800fd70:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800fd72:	6803      	ldr	r3, [r0, #0]
 800fd74:	4d5b      	ldr	r5, [pc, #364]	; (800fee4 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800fd76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800fd7a:	4604      	mov	r4, r0
 800fd7c:	4798      	blx	r3
 800fd7e:	2800      	cmp	r0, #0
 800fd80:	f000 8095 	beq.w	800feae <_ZN8touchgfx3HAL4tickEv+0x13e>
 800fd84:	2001      	movs	r0, #1
 800fd86:	f7f1 f887 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800fd8a:	f894 306a 	ldrb.w	r3, [r4, #106]	; 0x6a
 800fd8e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fd92:	f894 3079 	ldrb.w	r3, [r4, #121]	; 0x79
 800fd96:	2600      	movs	r6, #0
 800fd98:	f884 606a 	strb.w	r6, [r4, #106]	; 0x6a
 800fd9c:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800fda0:	b133      	cbz	r3, 800fdb0 <_ZN8touchgfx3HAL4tickEv+0x40>
 800fda2:	6823      	ldr	r3, [r4, #0]
 800fda4:	4620      	mov	r0, r4
 800fda6:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800fdaa:	4798      	blx	r3
 800fdac:	f884 6079 	strb.w	r6, [r4, #121]	; 0x79
 800fdb0:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800fdb4:	6862      	ldr	r2, [r4, #4]
 800fdb6:	f083 0301 	eor.w	r3, r3, #1
 800fdba:	7253      	strb	r3, [r2, #9]
 800fdbc:	2601      	movs	r6, #1
 800fdbe:	702e      	strb	r6, [r5, #0]
 800fdc0:	f005 f872 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800fdc4:	6803      	ldr	r3, [r0, #0]
 800fdc6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800fdc8:	4798      	blx	r3
 800fdca:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fdce:	b90b      	cbnz	r3, 800fdd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fdd0:	f884 606b 	strb.w	r6, [r4, #107]	; 0x6b
 800fdd4:	f005 f868 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800fdd8:	6803      	ldr	r3, [r0, #0]
 800fdda:	695b      	ldr	r3, [r3, #20]
 800fddc:	4798      	blx	r3
 800fdde:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fde0:	6803      	ldr	r3, [r0, #0]
 800fde2:	691b      	ldr	r3, [r3, #16]
 800fde4:	4798      	blx	r3
 800fde6:	f894 306b 	ldrb.w	r3, [r4, #107]	; 0x6b
 800fdea:	f894 206c 	ldrb.w	r2, [r4, #108]	; 0x6c
 800fdee:	3b01      	subs	r3, #1
 800fdf0:	b2db      	uxtb	r3, r3
 800fdf2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800fdf6:	b10a      	cbz	r2, 800fdfc <_ZN8touchgfx3HAL4tickEv+0x8c>
 800fdf8:	2b00      	cmp	r3, #0
 800fdfa:	d1eb      	bne.n	800fdd4 <_ZN8touchgfx3HAL4tickEv+0x64>
 800fdfc:	4a3a      	ldr	r2, [pc, #232]	; (800fee8 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800fdfe:	f994 1068 	ldrsb.w	r1, [r4, #104]	; 0x68
 800fe02:	7813      	ldrb	r3, [r2, #0]
 800fe04:	3301      	adds	r3, #1
 800fe06:	b25b      	sxtb	r3, r3
 800fe08:	4299      	cmp	r1, r3
 800fe0a:	7013      	strb	r3, [r2, #0]
 800fe0c:	dc10      	bgt.n	800fe30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fe0e:	68e0      	ldr	r0, [r4, #12]
 800fe10:	2300      	movs	r3, #0
 800fe12:	7013      	strb	r3, [r2, #0]
 800fe14:	6803      	ldr	r3, [r0, #0]
 800fe16:	aa03      	add	r2, sp, #12
 800fe18:	68db      	ldr	r3, [r3, #12]
 800fe1a:	a902      	add	r1, sp, #8
 800fe1c:	4798      	blx	r3
 800fe1e:	6823      	ldr	r3, [r4, #0]
 800fe20:	2800      	cmp	r0, #0
 800fe22:	d050      	beq.n	800fec6 <_ZN8touchgfx3HAL4tickEv+0x156>
 800fe24:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800fe28:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800fe2c:	4620      	mov	r0, r4
 800fe2e:	4798      	blx	r3
 800fe30:	6960      	ldr	r0, [r4, #20]
 800fe32:	2300      	movs	r3, #0
 800fe34:	f88d 3007 	strb.w	r3, [sp, #7]
 800fe38:	b158      	cbz	r0, 800fe52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fe3a:	6803      	ldr	r3, [r0, #0]
 800fe3c:	f10d 0107 	add.w	r1, sp, #7
 800fe40:	68db      	ldr	r3, [r3, #12]
 800fe42:	4798      	blx	r3
 800fe44:	b128      	cbz	r0, 800fe52 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800fe46:	6de0      	ldr	r0, [r4, #92]	; 0x5c
 800fe48:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800fe4c:	6803      	ldr	r3, [r0, #0]
 800fe4e:	68db      	ldr	r3, [r3, #12]
 800fe50:	4798      	blx	r3
 800fe52:	f104 001c 	add.w	r0, r4, #28
 800fe56:	f015 ffbd 	bl	8025dd4 <_ZN8touchgfx8Gestures4tickEv>
 800fe5a:	f894 3070 	ldrb.w	r3, [r4, #112]	; 0x70
 800fe5e:	b30b      	cbz	r3, 800fea4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe60:	6920      	ldr	r0, [r4, #16]
 800fe62:	6803      	ldr	r3, [r0, #0]
 800fe64:	691b      	ldr	r3, [r3, #16]
 800fe66:	4798      	blx	r3
 800fe68:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe6a:	4606      	mov	r6, r0
 800fe6c:	b903      	cbnz	r3, 800fe70 <_ZN8touchgfx3HAL4tickEv+0x100>
 800fe6e:	6760      	str	r0, [r4, #116]	; 0x74
 800fe70:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe72:	4a1e      	ldr	r2, [pc, #120]	; (800feec <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800fe74:	1af3      	subs	r3, r6, r3
 800fe76:	4293      	cmp	r3, r2
 800fe78:	d914      	bls.n	800fea4 <_ZN8touchgfx3HAL4tickEv+0x134>
 800fe7a:	6920      	ldr	r0, [r4, #16]
 800fe7c:	6803      	ldr	r3, [r0, #0]
 800fe7e:	699b      	ldr	r3, [r3, #24]
 800fe80:	4798      	blx	r3
 800fe82:	6f63      	ldr	r3, [r4, #116]	; 0x74
 800fe84:	2264      	movs	r2, #100	; 0x64
 800fe86:	1af3      	subs	r3, r6, r3
 800fe88:	fbb3 f3f2 	udiv	r3, r3, r2
 800fe8c:	fbb0 f0f3 	udiv	r0, r0, r3
 800fe90:	2800      	cmp	r0, #0
 800fe92:	dc1d      	bgt.n	800fed0 <_ZN8touchgfx3HAL4tickEv+0x160>
 800fe94:	f884 2069 	strb.w	r2, [r4, #105]	; 0x69
 800fe98:	6920      	ldr	r0, [r4, #16]
 800fe9a:	6803      	ldr	r3, [r0, #0]
 800fe9c:	2100      	movs	r1, #0
 800fe9e:	69db      	ldr	r3, [r3, #28]
 800fea0:	4798      	blx	r3
 800fea2:	6766      	str	r6, [r4, #116]	; 0x74
 800fea4:	f005 f800 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 800fea8:	6803      	ldr	r3, [r0, #0]
 800feaa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800feac:	4798      	blx	r3
 800feae:	6823      	ldr	r3, [r4, #0]
 800feb0:	4620      	mov	r0, r4
 800feb2:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800feb6:	4798      	blx	r3
 800feb8:	2001      	movs	r0, #1
 800feba:	f7f1 f81b 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800febe:	2300      	movs	r3, #0
 800fec0:	702b      	strb	r3, [r5, #0]
 800fec2:	b004      	add	sp, #16
 800fec4:	bd70      	pop	{r4, r5, r6, pc}
 800fec6:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800feca:	4620      	mov	r0, r4
 800fecc:	4798      	blx	r3
 800fece:	e7af      	b.n	800fe30 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800fed0:	2863      	cmp	r0, #99	; 0x63
 800fed2:	bfcb      	itete	gt
 800fed4:	2300      	movgt	r3, #0
 800fed6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800feda:	f884 3069 	strbgt.w	r3, [r4, #105]	; 0x69
 800fede:	f884 0069 	strble.w	r0, [r4, #105]	; 0x69
 800fee2:	e7d9      	b.n	800fe98 <_ZN8touchgfx3HAL4tickEv+0x128>
 800fee4:	2000ef20 	.word	0x2000ef20
 800fee8:	2000ef21 	.word	0x2000ef21
 800feec:	05f5e100 	.word	0x05f5e100

0800fef0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800fef0:	b510      	push	{r4, lr}
 800fef2:	4604      	mov	r4, r0
 800fef4:	f7f1 fad8 	bl	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 800fef8:	6863      	ldr	r3, [r4, #4]
 800fefa:	2200      	movs	r2, #0
 800fefc:	729a      	strb	r2, [r3, #10]
 800fefe:	bd10      	pop	{r4, pc}

0800ff00 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800ff00:	65c1      	str	r1, [r0, #92]	; 0x5c
 800ff02:	301c      	adds	r0, #28
 800ff04:	f015 bf64 	b.w	8025dd0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800ff08 <_ZN8touchgfx3HAL5touchEll>:
 800ff08:	b530      	push	{r4, r5, lr}
 800ff0a:	b087      	sub	sp, #28
 800ff0c:	4604      	mov	r4, r0
 800ff0e:	a804      	add	r0, sp, #16
 800ff10:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800ff14:	f004 fd94 	bl	8014a40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800ff18:	9b04      	ldr	r3, [sp, #16]
 800ff1a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ff1e:	a906      	add	r1, sp, #24
 800ff20:	9b05      	ldr	r3, [sp, #20]
 800ff22:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800ff26:	a803      	add	r0, sp, #12
 800ff28:	f004 fddc 	bl	8014ae4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800ff2c:	f894 106f 	ldrb.w	r1, [r4, #111]	; 0x6f
 800ff30:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800ff34:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800ff38:	f104 001c 	add.w	r0, r4, #28
 800ff3c:	b189      	cbz	r1, 800ff62 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800ff3e:	f8b4 5064 	ldrh.w	r5, [r4, #100]	; 0x64
 800ff42:	9300      	str	r3, [sp, #0]
 800ff44:	f8b4 1060 	ldrh.w	r1, [r4, #96]	; 0x60
 800ff48:	4613      	mov	r3, r2
 800ff4a:	462a      	mov	r2, r5
 800ff4c:	f015 ff50 	bl	8025df0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800ff50:	b128      	cbz	r0, 800ff5e <_ZN8touchgfx3HAL5touchEll+0x56>
 800ff52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800ff56:	6623      	str	r3, [r4, #96]	; 0x60
 800ff58:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800ff5c:	6663      	str	r3, [r4, #100]	; 0x64
 800ff5e:	b007      	add	sp, #28
 800ff60:	bd30      	pop	{r4, r5, pc}
 800ff62:	f015 ff85 	bl	8025e70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800ff66:	2301      	movs	r3, #1
 800ff68:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 800ff6c:	e7f1      	b.n	800ff52 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800ff6e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800ff6e:	b510      	push	{r4, lr}
 800ff70:	2b00      	cmp	r3, #0
 800ff72:	d046      	beq.n	8010002 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff74:	ea81 0002 	eor.w	r0, r1, r2
 800ff78:	07c4      	lsls	r4, r0, #31
 800ff7a:	d508      	bpl.n	800ff8e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800ff7c:	440b      	add	r3, r1
 800ff7e:	3a01      	subs	r2, #1
 800ff80:	428b      	cmp	r3, r1
 800ff82:	d93e      	bls.n	8010002 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ff84:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ff88:	f801 0b01 	strb.w	r0, [r1], #1
 800ff8c:	e7f8      	b.n	800ff80 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800ff8e:	07d0      	lsls	r0, r2, #31
 800ff90:	bf42      	ittt	mi
 800ff92:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800ff96:	f801 0b01 	strbmi.w	r0, [r1], #1
 800ff9a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800ff9e:	2b01      	cmp	r3, #1
 800ffa0:	d911      	bls.n	800ffc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800ffa2:	ea81 0402 	eor.w	r4, r1, r2
 800ffa6:	07a4      	lsls	r4, r4, #30
 800ffa8:	4610      	mov	r0, r2
 800ffaa:	d022      	beq.n	800fff2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800ffac:	f023 0401 	bic.w	r4, r3, #1
 800ffb0:	440c      	add	r4, r1
 800ffb2:	428c      	cmp	r4, r1
 800ffb4:	4602      	mov	r2, r0
 800ffb6:	d904      	bls.n	800ffc2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800ffb8:	8812      	ldrh	r2, [r2, #0]
 800ffba:	f821 2b02 	strh.w	r2, [r1], #2
 800ffbe:	3002      	adds	r0, #2
 800ffc0:	e7f7      	b.n	800ffb2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800ffc2:	f003 0301 	and.w	r3, r3, #1
 800ffc6:	f023 0003 	bic.w	r0, r3, #3
 800ffca:	4408      	add	r0, r1
 800ffcc:	4288      	cmp	r0, r1
 800ffce:	4614      	mov	r4, r2
 800ffd0:	d904      	bls.n	800ffdc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800ffd2:	6824      	ldr	r4, [r4, #0]
 800ffd4:	f841 4b04 	str.w	r4, [r1], #4
 800ffd8:	3204      	adds	r2, #4
 800ffda:	e7f7      	b.n	800ffcc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800ffdc:	f003 0303 	and.w	r3, r3, #3
 800ffe0:	440b      	add	r3, r1
 800ffe2:	3a01      	subs	r2, #1
 800ffe4:	428b      	cmp	r3, r1
 800ffe6:	d90c      	bls.n	8010002 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800ffe8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800ffec:	f801 0b01 	strb.w	r0, [r1], #1
 800fff0:	e7f8      	b.n	800ffe4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800fff2:	0790      	lsls	r0, r2, #30
 800fff4:	d0e7      	beq.n	800ffc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800fff6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800fffa:	f821 0b02 	strh.w	r0, [r1], #2
 800fffe:	3b02      	subs	r3, #2
 8010000:	e7e1      	b.n	800ffc6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8010002:	2001      	movs	r0, #1
 8010004:	bd10      	pop	{r4, pc}

08010006 <_ZN8touchgfx3HAL7noTouchEv>:
 8010006:	b510      	push	{r4, lr}
 8010008:	f890 306f 	ldrb.w	r3, [r0, #111]	; 0x6f
 801000c:	4604      	mov	r4, r0
 801000e:	b153      	cbz	r3, 8010026 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8010010:	f8b0 3064 	ldrh.w	r3, [r0, #100]	; 0x64
 8010014:	f8b0 2060 	ldrh.w	r2, [r0, #96]	; 0x60
 8010018:	2101      	movs	r1, #1
 801001a:	301c      	adds	r0, #28
 801001c:	f015 ff28 	bl	8025e70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8010020:	2300      	movs	r3, #0
 8010022:	f884 306f 	strb.w	r3, [r4, #111]	; 0x6f
 8010026:	bd10      	pop	{r4, pc}

08010028 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8010028:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801002c:	b085      	sub	sp, #20
 801002e:	ad04      	add	r5, sp, #16
 8010030:	4604      	mov	r4, r0
 8010032:	2000      	movs	r0, #0
 8010034:	f845 0d04 	str.w	r0, [r5, #-4]!
 8010038:	69a0      	ldr	r0, [r4, #24]
 801003a:	6806      	ldr	r6, [r0, #0]
 801003c:	9501      	str	r5, [sp, #4]
 801003e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8010042:	9500      	str	r5, [sp, #0]
 8010044:	6835      	ldr	r5, [r6, #0]
 8010046:	4699      	mov	r9, r3
 8010048:	460f      	mov	r7, r1
 801004a:	4690      	mov	r8, r2
 801004c:	47a8      	blx	r5
 801004e:	4d10      	ldr	r5, [pc, #64]	; (8010090 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8010050:	4606      	mov	r6, r0
 8010052:	f8a5 9000 	strh.w	r9, [r5]
 8010056:	f7f4 fb2d 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 801005a:	6803      	ldr	r3, [r0, #0]
 801005c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801005e:	4798      	blx	r3
 8010060:	b128      	cbz	r0, 801006e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8010062:	2801      	cmp	r0, #1
 8010064:	d00b      	beq.n	801007e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8010066:	4630      	mov	r0, r6
 8010068:	b005      	add	sp, #20
 801006a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801006e:	882b      	ldrh	r3, [r5, #0]
 8010070:	fb08 7203 	mla	r2, r8, r3, r7
 8010074:	9b03      	ldr	r3, [sp, #12]
 8010076:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 801007a:	63e3      	str	r3, [r4, #60]	; 0x3c
 801007c:	e7f3      	b.n	8010066 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 801007e:	882a      	ldrh	r2, [r5, #0]
 8010080:	9b03      	ldr	r3, [sp, #12]
 8010082:	fb08 7202 	mla	r2, r8, r2, r7
 8010086:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801008a:	1a9a      	subs	r2, r3, r2
 801008c:	63e2      	str	r2, [r4, #60]	; 0x3c
 801008e:	e7ea      	b.n	8010066 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8010090:	2000ef16 	.word	0x2000ef16

08010094 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8010094:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010096:	b08b      	sub	sp, #44	; 0x2c
 8010098:	4617      	mov	r7, r2
 801009a:	4604      	mov	r4, r0
 801009c:	460e      	mov	r6, r1
 801009e:	461d      	mov	r5, r3
 80100a0:	f7f4 fb08 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80100a4:	6803      	ldr	r3, [r0, #0]
 80100a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80100a8:	4798      	blx	r3
 80100aa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80100ae:	9007      	str	r0, [sp, #28]
 80100b0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80100b4:	4b0d      	ldr	r3, [pc, #52]	; (80100ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80100b6:	6822      	ldr	r2, [r4, #0]
 80100b8:	881b      	ldrh	r3, [r3, #0]
 80100ba:	9306      	str	r3, [sp, #24]
 80100bc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80100c0:	9305      	str	r3, [sp, #20]
 80100c2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80100c6:	9304      	str	r3, [sp, #16]
 80100c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80100cc:	9303      	str	r3, [sp, #12]
 80100ce:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80100d2:	9302      	str	r3, [sp, #8]
 80100d4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80100d8:	e9cd 5300 	strd	r5, r3, [sp]
 80100dc:	4631      	mov	r1, r6
 80100de:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 80100e0:	463b      	mov	r3, r7
 80100e2:	2200      	movs	r2, #0
 80100e4:	4620      	mov	r0, r4
 80100e6:	47a8      	blx	r5
 80100e8:	b00b      	add	sp, #44	; 0x2c
 80100ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80100ec:	2000ef16 	.word	0x2000ef16

080100f0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 80100f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80100f4:	4698      	mov	r8, r3
 80100f6:	6803      	ldr	r3, [r0, #0]
 80100f8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 80100fa:	4b15      	ldr	r3, [pc, #84]	; (8010150 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 80100fc:	b08b      	sub	sp, #44	; 0x2c
 80100fe:	4617      	mov	r7, r2
 8010100:	f8b3 9000 	ldrh.w	r9, [r3]
 8010104:	460e      	mov	r6, r1
 8010106:	4604      	mov	r4, r0
 8010108:	f7f4 fad4 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 801010c:	6803      	ldr	r3, [r0, #0]
 801010e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010110:	4798      	blx	r3
 8010112:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8010116:	e9cd 0308 	strd	r0, r3, [sp, #32]
 801011a:	2302      	movs	r3, #2
 801011c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8010120:	2301      	movs	r3, #1
 8010122:	9305      	str	r3, [sp, #20]
 8010124:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8010128:	9304      	str	r3, [sp, #16]
 801012a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801012e:	9303      	str	r3, [sp, #12]
 8010130:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8010134:	9302      	str	r3, [sp, #8]
 8010136:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801013a:	2200      	movs	r2, #0
 801013c:	e9cd 8300 	strd	r8, r3, [sp]
 8010140:	4631      	mov	r1, r6
 8010142:	463b      	mov	r3, r7
 8010144:	4620      	mov	r0, r4
 8010146:	47a8      	blx	r5
 8010148:	b00b      	add	sp, #44	; 0x2c
 801014a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801014e:	bf00      	nop
 8010150:	2000ef16 	.word	0x2000ef16

08010154 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8010154:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010158:	4698      	mov	r8, r3
 801015a:	6803      	ldr	r3, [r0, #0]
 801015c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 801015e:	4b11      	ldr	r3, [pc, #68]	; (80101a4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8010160:	b087      	sub	sp, #28
 8010162:	f8b3 9000 	ldrh.w	r9, [r3]
 8010166:	460e      	mov	r6, r1
 8010168:	4617      	mov	r7, r2
 801016a:	4604      	mov	r4, r0
 801016c:	f7f4 faa2 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8010170:	6803      	ldr	r3, [r0, #0]
 8010172:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010174:	4798      	blx	r3
 8010176:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 801017a:	f8cd 900c 	str.w	r9, [sp, #12]
 801017e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8010182:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8010186:	9302      	str	r3, [sp, #8]
 8010188:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801018c:	9301      	str	r3, [sp, #4]
 801018e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8010192:	9300      	str	r3, [sp, #0]
 8010194:	463a      	mov	r2, r7
 8010196:	4643      	mov	r3, r8
 8010198:	4631      	mov	r1, r6
 801019a:	4620      	mov	r0, r4
 801019c:	47a8      	blx	r5
 801019e:	b007      	add	sp, #28
 80101a0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80101a4:	2000ef16 	.word	0x2000ef16

080101a8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80101a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101ac:	4604      	mov	r4, r0
 80101ae:	b08f      	sub	sp, #60	; 0x3c
 80101b0:	4610      	mov	r0, r2
 80101b2:	460d      	mov	r5, r1
 80101b4:	4691      	mov	r9, r2
 80101b6:	461e      	mov	r6, r3
 80101b8:	f008 f9f4 	bl	80185a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80101bc:	2800      	cmp	r0, #0
 80101be:	f000 809d 	beq.w	80102fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80101c2:	6823      	ldr	r3, [r4, #0]
 80101c4:	f8df b198 	ldr.w	fp, [pc, #408]	; 8010360 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 80101c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80101ca:	f8df a198 	ldr.w	sl, [pc, #408]	; 8010364 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 80101ce:	4f61      	ldr	r7, [pc, #388]	; (8010354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80101d0:	4620      	mov	r0, r4
 80101d2:	4798      	blx	r3
 80101d4:	6823      	ldr	r3, [r4, #0]
 80101d6:	4620      	mov	r0, r4
 80101d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80101da:	4798      	blx	r3
 80101dc:	f8bb 3000 	ldrh.w	r3, [fp]
 80101e0:	9301      	str	r3, [sp, #4]
 80101e2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 80101e6:	f8ba 3000 	ldrh.w	r3, [sl]
 80101ea:	9302      	str	r3, [sp, #8]
 80101ec:	883b      	ldrh	r3, [r7, #0]
 80101ee:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 80101f2:	9303      	str	r3, [sp, #12]
 80101f4:	4b58      	ldr	r3, [pc, #352]	; (8010358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80101f6:	9305      	str	r3, [sp, #20]
 80101f8:	881a      	ldrh	r2, [r3, #0]
 80101fa:	9204      	str	r2, [sp, #16]
 80101fc:	4640      	mov	r0, r8
 80101fe:	f008 fa65 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010202:	8038      	strh	r0, [r7, #0]
 8010204:	4640      	mov	r0, r8
 8010206:	f008 fa95 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801020a:	9b05      	ldr	r3, [sp, #20]
 801020c:	b280      	uxth	r0, r0
 801020e:	8018      	strh	r0, [r3, #0]
 8010210:	4b52      	ldr	r3, [pc, #328]	; (801035c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8010212:	781b      	ldrb	r3, [r3, #0]
 8010214:	2b00      	cmp	r3, #0
 8010216:	d174      	bne.n	8010302 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8010218:	883b      	ldrh	r3, [r7, #0]
 801021a:	f8ab 3000 	strh.w	r3, [fp]
 801021e:	f8aa 0000 	strh.w	r0, [sl]
 8010222:	4648      	mov	r0, r9
 8010224:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8010228:	f008 f9bc 	bl	80185a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 801022c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8010230:	2200      	movs	r2, #0
 8010232:	4611      	mov	r1, r2
 8010234:	4628      	mov	r0, r5
 8010236:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 801023a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801023e:	f7f2 fd4d 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 8010242:	2301      	movs	r3, #1
 8010244:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8010248:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 801024c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010250:	2b00      	cmp	r3, #0
 8010252:	dd5c      	ble.n	801030e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8010254:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010258:	2b00      	cmp	r3, #0
 801025a:	dd58      	ble.n	801030e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 801025c:	462a      	mov	r2, r5
 801025e:	ab0a      	add	r3, sp, #40	; 0x28
 8010260:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010264:	6851      	ldr	r1, [r2, #4]
 8010266:	c303      	stmia	r3!, {r0, r1}
 8010268:	4631      	mov	r1, r6
 801026a:	a80a      	add	r0, sp, #40	; 0x28
 801026c:	f7ff fc06 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8010270:	4b38      	ldr	r3, [pc, #224]	; (8010354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8010272:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010276:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801027a:	2100      	movs	r1, #0
 801027c:	aa0a      	add	r2, sp, #40	; 0x28
 801027e:	4b36      	ldr	r3, [pc, #216]	; (8010358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8010280:	910c      	str	r1, [sp, #48]	; 0x30
 8010282:	e892 0003 	ldmia.w	r2, {r0, r1}
 8010286:	f9b3 3000 	ldrsh.w	r3, [r3]
 801028a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801028e:	ab08      	add	r3, sp, #32
 8010290:	e883 0003 	stmia.w	r3, {r0, r1}
 8010294:	4618      	mov	r0, r3
 8010296:	a90c      	add	r1, sp, #48	; 0x30
 8010298:	f7ff fbf0 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801029c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 801029e:	2b00      	cmp	r3, #0
 80102a0:	d13c      	bne.n	801031c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80102a2:	2000      	movs	r0, #0
 80102a4:	f884 0058 	strb.w	r0, [r4, #88]	; 0x58
 80102a8:	2600      	movs	r6, #0
 80102aa:	682a      	ldr	r2, [r5, #0]
 80102ac:	696b      	ldr	r3, [r5, #20]
 80102ae:	616e      	str	r6, [r5, #20]
 80102b0:	9305      	str	r3, [sp, #20]
 80102b2:	6892      	ldr	r2, [r2, #8]
 80102b4:	a908      	add	r1, sp, #32
 80102b6:	4628      	mov	r0, r5
 80102b8:	4790      	blx	r2
 80102ba:	9b05      	ldr	r3, [sp, #20]
 80102bc:	616b      	str	r3, [r5, #20]
 80102be:	4652      	mov	r2, sl
 80102c0:	f884 6058 	strb.w	r6, [r4, #88]	; 0x58
 80102c4:	4649      	mov	r1, r9
 80102c6:	4628      	mov	r0, r5
 80102c8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 80102cc:	f7f2 fd06 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80102d0:	4b23      	ldr	r3, [pc, #140]	; (8010360 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 80102d2:	9a01      	ldr	r2, [sp, #4]
 80102d4:	801a      	strh	r2, [r3, #0]
 80102d6:	4b23      	ldr	r3, [pc, #140]	; (8010364 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 80102d8:	9a02      	ldr	r2, [sp, #8]
 80102da:	801a      	strh	r2, [r3, #0]
 80102dc:	4b1d      	ldr	r3, [pc, #116]	; (8010354 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80102de:	9a03      	ldr	r2, [sp, #12]
 80102e0:	801a      	strh	r2, [r3, #0]
 80102e2:	4b1d      	ldr	r3, [pc, #116]	; (8010358 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80102e4:	9a04      	ldr	r2, [sp, #16]
 80102e6:	801a      	strh	r2, [r3, #0]
 80102e8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 80102ec:	6823      	ldr	r3, [r4, #0]
 80102ee:	4620      	mov	r0, r4
 80102f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80102f2:	4798      	blx	r3
 80102f4:	6823      	ldr	r3, [r4, #0]
 80102f6:	4620      	mov	r0, r4
 80102f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80102fa:	4798      	blx	r3
 80102fc:	b00f      	add	sp, #60	; 0x3c
 80102fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010302:	883b      	ldrh	r3, [r7, #0]
 8010304:	f8ab 0000 	strh.w	r0, [fp]
 8010308:	f8aa 3000 	strh.w	r3, [sl]
 801030c:	e789      	b.n	8010222 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801030e:	462a      	mov	r2, r5
 8010310:	ab0a      	add	r3, sp, #40	; 0x28
 8010312:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8010316:	6851      	ldr	r1, [r2, #4]
 8010318:	c303      	stmia	r3!, {r0, r1}
 801031a:	e7a9      	b.n	8010270 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 801031c:	a807      	add	r0, sp, #28
 801031e:	f008 fb45 	bl	80189ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010322:	4606      	mov	r6, r0
 8010324:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8010326:	6803      	ldr	r3, [r0, #0]
 8010328:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801032a:	4798      	blx	r3
 801032c:	4286      	cmp	r6, r0
 801032e:	d1b8      	bne.n	80102a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8010330:	f7f4 f9c0 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8010334:	6803      	ldr	r3, [r0, #0]
 8010336:	4606      	mov	r6, r0
 8010338:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801033a:	9305      	str	r3, [sp, #20]
 801033c:	a807      	add	r0, sp, #28
 801033e:	f008 fb35 	bl	80189ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8010342:	9b05      	ldr	r3, [sp, #20]
 8010344:	4601      	mov	r1, r0
 8010346:	4630      	mov	r0, r6
 8010348:	4798      	blx	r3
 801034a:	f080 0001 	eor.w	r0, r0, #1
 801034e:	b2c0      	uxtb	r0, r0
 8010350:	e7a8      	b.n	80102a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8010352:	bf00      	nop
 8010354:	2000ef10 	.word	0x2000ef10
 8010358:	2000ef12 	.word	0x2000ef12
 801035c:	2000ef14 	.word	0x2000ef14
 8010360:	2000ef16 	.word	0x2000ef16
 8010364:	2000ef18 	.word	0x2000ef18

08010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8010368:	b510      	push	{r4, lr}
 801036a:	4b07      	ldr	r3, [pc, #28]	; (8010388 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 801036c:	781b      	ldrb	r3, [r3, #0]
 801036e:	4604      	mov	r4, r0
 8010370:	b13b      	cbz	r3, 8010382 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8010372:	6803      	ldr	r3, [r0, #0]
 8010374:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010376:	4798      	blx	r3
 8010378:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 801037a:	4283      	cmp	r3, r0
 801037c:	d101      	bne.n	8010382 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 801037e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8010380:	bd10      	pop	{r4, pc}
 8010382:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8010384:	e7fc      	b.n	8010380 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8010386:	bf00      	nop
 8010388:	2000ef1a 	.word	0x2000ef1a

0801038c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 801038c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010390:	b08a      	sub	sp, #40	; 0x28
 8010392:	461d      	mov	r5, r3
 8010394:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8010398:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801039c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80103a0:	f8ad 3018 	strh.w	r3, [sp, #24]
 80103a4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80103a8:	f8ad 301a 	strh.w	r3, [sp, #26]
 80103ac:	2400      	movs	r4, #0
 80103ae:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80103b2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 80103b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80103ba:	4690      	mov	r8, r2
 80103bc:	4607      	mov	r7, r0
 80103be:	9404      	str	r4, [sp, #16]
 80103c0:	f88d 4020 	strb.w	r4, [sp, #32]
 80103c4:	f7ff ffd0 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80103c8:	fb06 8505 	mla	r5, r6, r5, r8
 80103cc:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80103d0:	6878      	ldr	r0, [r7, #4]
 80103d2:	9505      	str	r5, [sp, #20]
 80103d4:	f8ad 601e 	strh.w	r6, [sp, #30]
 80103d8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80103dc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 80103e0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 80103e4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 80103e8:	6803      	ldr	r3, [r0, #0]
 80103ea:	a901      	add	r1, sp, #4
 80103ec:	685b      	ldr	r3, [r3, #4]
 80103ee:	4798      	blx	r3
 80103f0:	b00a      	add	sp, #40	; 0x28
 80103f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080103f6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 80103f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80103fa:	b08b      	sub	sp, #44	; 0x2c
 80103fc:	2400      	movs	r4, #0
 80103fe:	461d      	mov	r5, r3
 8010400:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8010404:	4688      	mov	r8, r1
 8010406:	4691      	mov	r9, r2
 8010408:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 801040c:	9404      	str	r4, [sp, #16]
 801040e:	4607      	mov	r7, r0
 8010410:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8010414:	f7ff ffa8 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010418:	fb06 9505 	mla	r5, r6, r5, r9
 801041c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010420:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010424:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010428:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 801042c:	6878      	ldr	r0, [r7, #4]
 801042e:	9505      	str	r5, [sp, #20]
 8010430:	f8ad 301a 	strh.w	r3, [sp, #26]
 8010434:	f8ad 401c 	strh.w	r4, [sp, #28]
 8010438:	f8ad 601e 	strh.w	r6, [sp, #30]
 801043c:	f8cd 8010 	str.w	r8, [sp, #16]
 8010440:	f8ad 4020 	strh.w	r4, [sp, #32]
 8010444:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8010448:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 801044c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8010450:	6803      	ldr	r3, [r0, #0]
 8010452:	a901      	add	r1, sp, #4
 8010454:	685b      	ldr	r3, [r3, #4]
 8010456:	4798      	blx	r3
 8010458:	b00b      	add	sp, #44	; 0x2c
 801045a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08010460 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8010460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010464:	b08a      	sub	sp, #40	; 0x28
 8010466:	4698      	mov	r8, r3
 8010468:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 801046c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8010470:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8010474:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8010478:	2300      	movs	r3, #0
 801047a:	2d0b      	cmp	r5, #11
 801047c:	4606      	mov	r6, r0
 801047e:	9304      	str	r3, [sp, #16]
 8010480:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8010484:	d138      	bne.n	80104f8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8010486:	2380      	movs	r3, #128	; 0x80
 8010488:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801048c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010490:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010494:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010498:	f8ad 301a 	strh.w	r3, [sp, #26]
 801049c:	f88d 0020 	strb.w	r0, [sp, #32]
 80104a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 80104a4:	f8ad 301c 	strh.w	r3, [sp, #28]
 80104a8:	4630      	mov	r0, r6
 80104aa:	9203      	str	r2, [sp, #12]
 80104ac:	f7ff ff5c 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80104b0:	2c0b      	cmp	r4, #11
 80104b2:	bf98      	it	ls
 80104b4:	4b1b      	ldrls	r3, [pc, #108]	; (8010524 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80104b6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 80104ba:	bf98      	it	ls
 80104bc:	5d19      	ldrbls	r1, [r3, r4]
 80104be:	f8ad 701e 	strh.w	r7, [sp, #30]
 80104c2:	bf88      	it	hi
 80104c4:	2100      	movhi	r1, #0
 80104c6:	fb02 8307 	mla	r3, r2, r7, r8
 80104ca:	10c9      	asrs	r1, r1, #3
 80104cc:	fb01 0003 	mla	r0, r1, r3, r0
 80104d0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 80104d4:	9005      	str	r0, [sp, #20]
 80104d6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 80104da:	6870      	ldr	r0, [r6, #4]
 80104dc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 80104e0:	2300      	movs	r3, #0
 80104e2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 80104e6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80104ea:	6803      	ldr	r3, [r0, #0]
 80104ec:	a901      	add	r1, sp, #4
 80104ee:	685b      	ldr	r3, [r3, #4]
 80104f0:	4798      	blx	r3
 80104f2:	b00a      	add	sp, #40	; 0x28
 80104f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80104f8:	2d02      	cmp	r5, #2
 80104fa:	d109      	bne.n	8010510 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 80104fc:	28ff      	cmp	r0, #255	; 0xff
 80104fe:	d105      	bne.n	801050c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8010500:	f1bc 0f00 	cmp.w	ip, #0
 8010504:	bf14      	ite	ne
 8010506:	2340      	movne	r3, #64	; 0x40
 8010508:	2320      	moveq	r3, #32
 801050a:	e7bd      	b.n	8010488 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801050c:	2340      	movs	r3, #64	; 0x40
 801050e:	e7bb      	b.n	8010488 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010510:	28ff      	cmp	r0, #255	; 0xff
 8010512:	d105      	bne.n	8010520 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8010514:	f1bc 0f00 	cmp.w	ip, #0
 8010518:	bf14      	ite	ne
 801051a:	2304      	movne	r3, #4
 801051c:	2301      	moveq	r3, #1
 801051e:	e7b3      	b.n	8010488 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010520:	2304      	movs	r3, #4
 8010522:	e7b1      	b.n	8010488 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8010524:	08029fb0 	.word	0x08029fb0

08010528 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8010528:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801052c:	b08b      	sub	sp, #44	; 0x2c
 801052e:	461d      	mov	r5, r3
 8010530:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8010534:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8010538:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 801053c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010540:	bf14      	ite	ne
 8010542:	2308      	movne	r3, #8
 8010544:	2302      	moveq	r3, #2
 8010546:	2400      	movs	r4, #0
 8010548:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801054c:	4688      	mov	r8, r1
 801054e:	4693      	mov	fp, r2
 8010550:	9404      	str	r4, [sp, #16]
 8010552:	4607      	mov	r7, r0
 8010554:	f7ff ff08 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010558:	2e0b      	cmp	r6, #11
 801055a:	bf98      	it	ls
 801055c:	4b15      	ldrls	r3, [pc, #84]	; (80105b4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801055e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8010562:	bf98      	it	ls
 8010564:	5d9c      	ldrbls	r4, [r3, r6]
 8010566:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 801056a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801056e:	fb05 b50a 	mla	r5, r5, sl, fp
 8010572:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8010576:	f8ad 301a 	strh.w	r3, [sp, #26]
 801057a:	10e4      	asrs	r4, r4, #3
 801057c:	fb04 0405 	mla	r4, r4, r5, r0
 8010580:	2300      	movs	r3, #0
 8010582:	6878      	ldr	r0, [r7, #4]
 8010584:	9405      	str	r4, [sp, #20]
 8010586:	f8ad 301c 	strh.w	r3, [sp, #28]
 801058a:	f8ad a01e 	strh.w	sl, [sp, #30]
 801058e:	f8cd 8010 	str.w	r8, [sp, #16]
 8010592:	f88d 9020 	strb.w	r9, [sp, #32]
 8010596:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 801059a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 801059e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 80105a2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 80105a6:	6803      	ldr	r3, [r0, #0]
 80105a8:	a901      	add	r1, sp, #4
 80105aa:	685b      	ldr	r3, [r3, #4]
 80105ac:	4798      	blx	r3
 80105ae:	b00b      	add	sp, #44	; 0x2c
 80105b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80105b4:	08029fb0 	.word	0x08029fb0

080105b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80105b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80105bc:	461e      	mov	r6, r3
 80105be:	4b0a      	ldr	r3, [pc, #40]	; (80105e8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80105c0:	460f      	mov	r7, r1
 80105c2:	881d      	ldrh	r5, [r3, #0]
 80105c4:	4690      	mov	r8, r2
 80105c6:	f7f4 f875 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80105ca:	6803      	ldr	r3, [r0, #0]
 80105cc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105ce:	4798      	blx	r3
 80105d0:	280b      	cmp	r0, #11
 80105d2:	bf9a      	itte	ls
 80105d4:	4b05      	ldrls	r3, [pc, #20]	; (80105ec <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 80105d6:	5c1c      	ldrbls	r4, [r3, r0]
 80105d8:	2400      	movhi	r4, #0
 80105da:	fb08 7005 	mla	r0, r8, r5, r7
 80105de:	10e4      	asrs	r4, r4, #3
 80105e0:	fb04 6000 	mla	r0, r4, r0, r6
 80105e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80105e8:	2000ef16 	.word	0x2000ef16
 80105ec:	08029fb0 	.word	0x08029fb0

080105f0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 80105f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80105f2:	b08b      	sub	sp, #44	; 0x2c
 80105f4:	461f      	mov	r7, r3
 80105f6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80105fa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80105fe:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010602:	f8ad 3018 	strh.w	r3, [sp, #24]
 8010606:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801060a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801060e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8010612:	f8ad 301c 	strh.w	r3, [sp, #28]
 8010616:	2500      	movs	r5, #0
 8010618:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 801061c:	f88d 3020 	strb.w	r3, [sp, #32]
 8010620:	4604      	mov	r4, r0
 8010622:	4616      	mov	r6, r2
 8010624:	9504      	str	r5, [sp, #16]
 8010626:	f7ff fe9f 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801062a:	463a      	mov	r2, r7
 801062c:	4631      	mov	r1, r6
 801062e:	4603      	mov	r3, r0
 8010630:	4620      	mov	r0, r4
 8010632:	f7ff ffc1 	bl	80105b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8010636:	4b0e      	ldr	r3, [pc, #56]	; (8010670 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8010638:	9005      	str	r0, [sp, #20]
 801063a:	881b      	ldrh	r3, [r3, #0]
 801063c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8010640:	f7f4 f838 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8010644:	6803      	ldr	r3, [r0, #0]
 8010646:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010648:	4798      	blx	r3
 801064a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801064c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8010650:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8010654:	9304      	str	r3, [sp, #16]
 8010656:	6860      	ldr	r0, [r4, #4]
 8010658:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 801065c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8010660:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8010664:	6803      	ldr	r3, [r0, #0]
 8010666:	a901      	add	r1, sp, #4
 8010668:	685b      	ldr	r3, [r3, #4]
 801066a:	4798      	blx	r3
 801066c:	b00b      	add	sp, #44	; 0x2c
 801066e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8010670:	2000ef16 	.word	0x2000ef16

08010674 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8010674:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010676:	b08d      	sub	sp, #52	; 0x34
 8010678:	466b      	mov	r3, sp
 801067a:	e883 0006 	stmia.w	r3, {r1, r2}
 801067e:	2300      	movs	r3, #0
 8010680:	9306      	str	r3, [sp, #24]
 8010682:	6803      	ldr	r3, [r0, #0]
 8010684:	f8bd 6000 	ldrh.w	r6, [sp]
 8010688:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801068a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 801068e:	2501      	movs	r5, #1
 8010690:	9503      	str	r5, [sp, #12]
 8010692:	4604      	mov	r4, r0
 8010694:	4798      	blx	r3
 8010696:	463a      	mov	r2, r7
 8010698:	4631      	mov	r1, r6
 801069a:	4603      	mov	r3, r0
 801069c:	4620      	mov	r0, r4
 801069e:	f7ff ff8b 	bl	80105b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80106a2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 80106a4:	9307      	str	r3, [sp, #28]
 80106a6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80106aa:	f8ad 3020 	strh.w	r3, [sp, #32]
 80106ae:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80106b2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80106b6:	4b0f      	ldr	r3, [pc, #60]	; (80106f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80106b8:	9004      	str	r0, [sp, #16]
 80106ba:	881b      	ldrh	r3, [r3, #0]
 80106bc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80106c0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 80106c4:	f7f3 fff6 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80106c8:	6803      	ldr	r3, [r0, #0]
 80106ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80106cc:	4798      	blx	r3
 80106ce:	23ff      	movs	r3, #255	; 0xff
 80106d0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80106d4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80106d8:	6860      	ldr	r0, [r4, #4]
 80106da:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80106de:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80106e2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80106e6:	6803      	ldr	r3, [r0, #0]
 80106e8:	a903      	add	r1, sp, #12
 80106ea:	685b      	ldr	r3, [r3, #4]
 80106ec:	4798      	blx	r3
 80106ee:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80106f0:	b00d      	add	sp, #52	; 0x34
 80106f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80106f4:	2000ef16 	.word	0x2000ef16

080106f8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80106f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80106fc:	b08c      	sub	sp, #48	; 0x30
 80106fe:	461e      	mov	r6, r3
 8010700:	466d      	mov	r5, sp
 8010702:	2300      	movs	r3, #0
 8010704:	e885 0006 	stmia.w	r5, {r1, r2}
 8010708:	9306      	str	r3, [sp, #24]
 801070a:	6803      	ldr	r3, [r0, #0]
 801070c:	f8bd 7000 	ldrh.w	r7, [sp]
 8010710:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010712:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8010716:	2501      	movs	r5, #1
 8010718:	9503      	str	r5, [sp, #12]
 801071a:	4604      	mov	r4, r0
 801071c:	4798      	blx	r3
 801071e:	4642      	mov	r2, r8
 8010720:	4639      	mov	r1, r7
 8010722:	4603      	mov	r3, r0
 8010724:	4620      	mov	r0, r4
 8010726:	f7ff ff47 	bl	80105b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801072a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801072e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8010732:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8010736:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801073a:	4b11      	ldr	r3, [pc, #68]	; (8010780 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801073c:	9004      	str	r0, [sp, #16]
 801073e:	881b      	ldrh	r3, [r3, #0]
 8010740:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8010744:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010746:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801074a:	9607      	str	r6, [sp, #28]
 801074c:	f7f3 ffb2 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8010750:	6803      	ldr	r3, [r0, #0]
 8010752:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010754:	4798      	blx	r3
 8010756:	23ff      	movs	r3, #255	; 0xff
 8010758:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 801075c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8010760:	6860      	ldr	r0, [r4, #4]
 8010762:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 8010766:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 801076a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 801076e:	6803      	ldr	r3, [r0, #0]
 8010770:	a903      	add	r1, sp, #12
 8010772:	685b      	ldr	r3, [r3, #4]
 8010774:	4798      	blx	r3
 8010776:	4630      	mov	r0, r6
 8010778:	b00c      	add	sp, #48	; 0x30
 801077a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801077e:	bf00      	nop
 8010780:	2000ef16 	.word	0x2000ef16

08010784 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 8010784:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010786:	b085      	sub	sp, #20
 8010788:	ac02      	add	r4, sp, #8
 801078a:	e884 0006 	stmia.w	r4, {r1, r2}
 801078e:	4605      	mov	r5, r0
 8010790:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8010794:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 8010798:	f7ff fde6 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801079c:	463a      	mov	r2, r7
 801079e:	4603      	mov	r3, r0
 80107a0:	4631      	mov	r1, r6
 80107a2:	4628      	mov	r0, r5
 80107a4:	f7ff ff08 	bl	80105b8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80107a8:	4a05      	ldr	r2, [pc, #20]	; (80107c0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80107aa:	682b      	ldr	r3, [r5, #0]
 80107ac:	8812      	ldrh	r2, [r2, #0]
 80107ae:	9200      	str	r2, [sp, #0]
 80107b0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 80107b2:	e894 0006 	ldmia.w	r4, {r1, r2}
 80107b6:	4603      	mov	r3, r0
 80107b8:	4628      	mov	r0, r5
 80107ba:	47b0      	blx	r6
 80107bc:	b005      	add	sp, #20
 80107be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80107c0:	2000ef16 	.word	0x2000ef16

080107c4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 80107c4:	b570      	push	{r4, r5, r6, lr}
 80107c6:	f890 306e 	ldrb.w	r3, [r0, #110]	; 0x6e
 80107ca:	4604      	mov	r4, r0
 80107cc:	b19b      	cbz	r3, 80107f6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 80107ce:	2002      	movs	r0, #2
 80107d0:	f7f0 fbbe 	bl	8000f50 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 80107d4:	2300      	movs	r3, #0
 80107d6:	f884 306e 	strb.w	r3, [r4, #110]	; 0x6e
 80107da:	f884 306d 	strb.w	r3, [r4, #109]	; 0x6d
 80107de:	6823      	ldr	r3, [r4, #0]
 80107e0:	4620      	mov	r0, r4
 80107e2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 80107e6:	f7ff fdbf 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80107ea:	462b      	mov	r3, r5
 80107ec:	4601      	mov	r1, r0
 80107ee:	4620      	mov	r0, r4
 80107f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80107f4:	4718      	bx	r3
 80107f6:	bd70      	pop	{r4, r5, r6, pc}

080107f8 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 80107f8:	b570      	push	{r4, r5, r6, lr}
 80107fa:	4605      	mov	r5, r0
 80107fc:	460c      	mov	r4, r1
 80107fe:	2003      	movs	r0, #3
 8010800:	b149      	cbz	r1, 8010816 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8010802:	f7f0 fb49 	bl	8000e98 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010806:	6928      	ldr	r0, [r5, #16]
 8010808:	b168      	cbz	r0, 8010826 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801080a:	6803      	ldr	r3, [r0, #0]
 801080c:	695b      	ldr	r3, [r3, #20]
 801080e:	2101      	movs	r1, #1
 8010810:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010814:	4718      	bx	r3
 8010816:	f7f0 fb6d 	bl	8000ef4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801081a:	6928      	ldr	r0, [r5, #16]
 801081c:	b118      	cbz	r0, 8010826 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 801081e:	6803      	ldr	r3, [r0, #0]
 8010820:	4621      	mov	r1, r4
 8010822:	695b      	ldr	r3, [r3, #20]
 8010824:	e7f4      	b.n	8010810 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8010826:	bd70      	pop	{r4, r5, r6, pc}

08010828 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8010828:	b538      	push	{r3, r4, r5, lr}
 801082a:	f890 307b 	ldrb.w	r3, [r0, #123]	; 0x7b
 801082e:	428b      	cmp	r3, r1
 8010830:	4604      	mov	r4, r0
 8010832:	460d      	mov	r5, r1
 8010834:	d006      	beq.n	8010844 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8010836:	6803      	ldr	r3, [r0, #0]
 8010838:	b929      	cbnz	r1, 8010846 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801083a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801083e:	4798      	blx	r3
 8010840:	f884 507b 	strb.w	r5, [r4, #123]	; 0x7b
 8010844:	bd38      	pop	{r3, r4, r5, pc}
 8010846:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801084a:	e7f8      	b.n	801083e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801084c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801084c:	b510      	push	{r4, lr}
 801084e:	4b0d      	ldr	r3, [pc, #52]	; (8010884 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8010850:	781b      	ldrb	r3, [r3, #0]
 8010852:	4604      	mov	r4, r0
 8010854:	b95b      	cbnz	r3, 801086e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010856:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801085a:	2b02      	cmp	r3, #2
 801085c:	d007      	beq.n	801086e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801085e:	6840      	ldr	r0, [r0, #4]
 8010860:	f000 f92c 	bl	8010abc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8010864:	b118      	cbz	r0, 801086e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8010866:	6862      	ldr	r2, [r4, #4]
 8010868:	7a53      	ldrb	r3, [r2, #9]
 801086a:	2b00      	cmp	r3, #0
 801086c:	d0fc      	beq.n	8010868 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801086e:	f7f0 fe13 	bl	8001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010872:	4620      	mov	r0, r4
 8010874:	2100      	movs	r1, #0
 8010876:	f7ff ffd7 	bl	8010828 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801087a:	4620      	mov	r0, r4
 801087c:	f7ff fd74 	bl	8010368 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8010880:	bd10      	pop	{r4, pc}
 8010882:	bf00      	nop
 8010884:	2000ef1a 	.word	0x2000ef1a

08010888 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 8010888:	b570      	push	{r4, r5, r6, lr}
 801088a:	4604      	mov	r4, r0
 801088c:	6803      	ldr	r3, [r0, #0]
 801088e:	b919      	cbnz	r1, 8010898 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 8010890:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010892:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010896:	4718      	bx	r3
 8010898:	2200      	movs	r2, #0
 801089a:	f890 607b 	ldrb.w	r6, [r0, #123]	; 0x7b
 801089e:	f880 207b 	strb.w	r2, [r0, #123]	; 0x7b
 80108a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80108a4:	4798      	blx	r3
 80108a6:	6863      	ldr	r3, [r4, #4]
 80108a8:	2101      	movs	r1, #1
 80108aa:	4605      	mov	r5, r0
 80108ac:	7299      	strb	r1, [r3, #10]
 80108ae:	4620      	mov	r0, r4
 80108b0:	f884 607b 	strb.w	r6, [r4, #123]	; 0x7b
 80108b4:	f7ff ffb8 	bl	8010828 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80108b8:	4628      	mov	r0, r5
 80108ba:	bd70      	pop	{r4, r5, r6, pc}

080108bc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80108bc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80108c0:	1a13      	subs	r3, r2, r0
 80108c2:	4258      	negs	r0, r3
 80108c4:	4158      	adcs	r0, r3
 80108c6:	4770      	bx	lr

080108c8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80108c8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80108cc:	1a9b      	subs	r3, r3, r2
 80108ce:	2b00      	cmp	r3, #0
 80108d0:	bfdc      	itt	le
 80108d2:	6882      	ldrle	r2, [r0, #8]
 80108d4:	189b      	addle	r3, r3, r2
 80108d6:	2b01      	cmp	r3, #1
 80108d8:	bfcc      	ite	gt
 80108da:	2000      	movgt	r0, #0
 80108dc:	2001      	movle	r0, #1
 80108de:	4770      	bx	lr

080108e0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80108e0:	6902      	ldr	r2, [r0, #16]
 80108e2:	6843      	ldr	r3, [r0, #4]
 80108e4:	2024      	movs	r0, #36	; 0x24
 80108e6:	fb00 3002 	mla	r0, r0, r2, r3
 80108ea:	4770      	bx	lr

080108ec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80108ec:	6803      	ldr	r3, [r0, #0]
 80108ee:	691b      	ldr	r3, [r3, #16]
 80108f0:	4718      	bx	r3

080108f2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80108f2:	b570      	push	{r4, r5, r6, lr}
 80108f4:	2301      	movs	r3, #1
 80108f6:	7203      	strb	r3, [r0, #8]
 80108f8:	4604      	mov	r4, r0
 80108fa:	6840      	ldr	r0, [r0, #4]
 80108fc:	6803      	ldr	r3, [r0, #0]
 80108fe:	699b      	ldr	r3, [r3, #24]
 8010900:	4798      	blx	r3
 8010902:	6803      	ldr	r3, [r0, #0]
 8010904:	2b40      	cmp	r3, #64	; 0x40
 8010906:	4605      	mov	r5, r0
 8010908:	d00c      	beq.n	8010924 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801090a:	d810      	bhi.n	801092e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 801090c:	2b04      	cmp	r3, #4
 801090e:	d01d      	beq.n	801094c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8010910:	d804      	bhi.n	801091c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8010912:	2b01      	cmp	r3, #1
 8010914:	d006      	beq.n	8010924 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010916:	2b02      	cmp	r3, #2
 8010918:	d02c      	beq.n	8010974 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 801091a:	bd70      	pop	{r4, r5, r6, pc}
 801091c:	2b08      	cmp	r3, #8
 801091e:	d01d      	beq.n	801095c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8010920:	2b20      	cmp	r3, #32
 8010922:	d1fa      	bne.n	801091a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8010924:	6823      	ldr	r3, [r4, #0]
 8010926:	4620      	mov	r0, r4
 8010928:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801092a:	4798      	blx	r3
 801092c:	e013      	b.n	8010956 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801092e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8010932:	d0f7      	beq.n	8010924 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010934:	d804      	bhi.n	8010940 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8010936:	2b80      	cmp	r3, #128	; 0x80
 8010938:	d0f4      	beq.n	8010924 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801093a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801093e:	e7f0      	b.n	8010922 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8010940:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8010944:	d0ee      	beq.n	8010924 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8010946:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 801094a:	e7e5      	b.n	8010918 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 801094c:	6823      	ldr	r3, [r4, #0]
 801094e:	7f01      	ldrb	r1, [r0, #28]
 8010950:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010952:	4620      	mov	r0, r4
 8010954:	4798      	blx	r3
 8010956:	6823      	ldr	r3, [r4, #0]
 8010958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801095a:	e006      	b.n	801096a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 801095c:	6823      	ldr	r3, [r4, #0]
 801095e:	7f01      	ldrb	r1, [r0, #28]
 8010960:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010962:	4620      	mov	r0, r4
 8010964:	4798      	blx	r3
 8010966:	6823      	ldr	r3, [r4, #0]
 8010968:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801096a:	4629      	mov	r1, r5
 801096c:	4620      	mov	r0, r4
 801096e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010972:	4718      	bx	r3
 8010974:	6823      	ldr	r3, [r4, #0]
 8010976:	4620      	mov	r0, r4
 8010978:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801097a:	4798      	blx	r3
 801097c:	e7f3      	b.n	8010966 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801097e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801097e:	4770      	bx	lr

08010980 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8010980:	4770      	bx	lr

08010982 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8010982:	4770      	bx	lr

08010984 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8010984:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8010988:	1ad2      	subs	r2, r2, r3
 801098a:	2a00      	cmp	r2, #0
 801098c:	b510      	push	{r4, lr}
 801098e:	bfdc      	itt	le
 8010990:	6884      	ldrle	r4, [r0, #8]
 8010992:	1912      	addle	r2, r2, r4
 8010994:	2a01      	cmp	r2, #1
 8010996:	dd16      	ble.n	80109c6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8010998:	6842      	ldr	r2, [r0, #4]
 801099a:	2424      	movs	r4, #36	; 0x24
 801099c:	fb04 2303 	mla	r3, r4, r3, r2
 80109a0:	f101 0220 	add.w	r2, r1, #32
 80109a4:	f851 4b04 	ldr.w	r4, [r1], #4
 80109a8:	f843 4b04 	str.w	r4, [r3], #4
 80109ac:	4291      	cmp	r1, r2
 80109ae:	d1f9      	bne.n	80109a4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80109b0:	780a      	ldrb	r2, [r1, #0]
 80109b2:	701a      	strb	r2, [r3, #0]
 80109b4:	68c3      	ldr	r3, [r0, #12]
 80109b6:	6882      	ldr	r2, [r0, #8]
 80109b8:	f3bf 8f5b 	dmb	ish
 80109bc:	3301      	adds	r3, #1
 80109be:	429a      	cmp	r2, r3
 80109c0:	bfd8      	it	le
 80109c2:	1a9b      	suble	r3, r3, r2
 80109c4:	60c3      	str	r3, [r0, #12]
 80109c6:	bd10      	pop	{r4, pc}

080109c8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80109c8:	6903      	ldr	r3, [r0, #16]
 80109ca:	6882      	ldr	r2, [r0, #8]
 80109cc:	f3bf 8f5b 	dmb	ish
 80109d0:	3301      	adds	r3, #1
 80109d2:	429a      	cmp	r2, r3
 80109d4:	bfd8      	it	le
 80109d6:	1a9b      	suble	r3, r3, r2
 80109d8:	6103      	str	r3, [r0, #16]
 80109da:	4770      	bx	lr

080109dc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80109dc:	b570      	push	{r4, r5, r6, lr}
 80109de:	4604      	mov	r4, r0
 80109e0:	460e      	mov	r6, r1
 80109e2:	6860      	ldr	r0, [r4, #4]
 80109e4:	6803      	ldr	r3, [r0, #0]
 80109e6:	685b      	ldr	r3, [r3, #4]
 80109e8:	4798      	blx	r3
 80109ea:	2800      	cmp	r0, #0
 80109ec:	d1f9      	bne.n	80109e2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 80109ee:	4d0d      	ldr	r5, [pc, #52]	; (8010a24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 80109f0:	6828      	ldr	r0, [r5, #0]
 80109f2:	6803      	ldr	r3, [r0, #0]
 80109f4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80109f6:	4798      	blx	r3
 80109f8:	f7f0 fd5c 	bl	80014b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 80109fc:	6828      	ldr	r0, [r5, #0]
 80109fe:	2101      	movs	r1, #1
 8010a00:	f7ff ff12 	bl	8010828 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8010a04:	6860      	ldr	r0, [r4, #4]
 8010a06:	6803      	ldr	r3, [r0, #0]
 8010a08:	4631      	mov	r1, r6
 8010a0a:	689b      	ldr	r3, [r3, #8]
 8010a0c:	4798      	blx	r3
 8010a0e:	6823      	ldr	r3, [r4, #0]
 8010a10:	4620      	mov	r0, r4
 8010a12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010a14:	4798      	blx	r3
 8010a16:	6828      	ldr	r0, [r5, #0]
 8010a18:	6803      	ldr	r3, [r0, #0]
 8010a1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a1e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8010a20:	4718      	bx	r3
 8010a22:	bf00      	nop
 8010a24:	2000ef1c 	.word	0x2000ef1c

08010a28 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8010a28:	b508      	push	{r3, lr}
 8010a2a:	f7f0 fd35 	bl	8001498 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8010a2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8010a32:	f7f0 bd39 	b.w	80014a8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08010a36 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8010a36:	b510      	push	{r4, lr}
 8010a38:	2114      	movs	r1, #20
 8010a3a:	4604      	mov	r4, r0
 8010a3c:	f015 fdc8 	bl	80265d0 <_ZdlPvj>
 8010a40:	4620      	mov	r0, r4
 8010a42:	bd10      	pop	{r4, pc}

08010a44 <_ZN8touchgfx13DMA_Interface5startEv>:
 8010a44:	b510      	push	{r4, lr}
 8010a46:	4604      	mov	r4, r0
 8010a48:	6840      	ldr	r0, [r0, #4]
 8010a4a:	6803      	ldr	r3, [r0, #0]
 8010a4c:	681b      	ldr	r3, [r3, #0]
 8010a4e:	4798      	blx	r3
 8010a50:	b948      	cbnz	r0, 8010a66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a52:	7a63      	ldrb	r3, [r4, #9]
 8010a54:	b13b      	cbz	r3, 8010a66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a56:	7a23      	ldrb	r3, [r4, #8]
 8010a58:	b92b      	cbnz	r3, 8010a66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8010a5a:	6823      	ldr	r3, [r4, #0]
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010a64:	4718      	bx	r3
 8010a66:	bd10      	pop	{r4, pc}

08010a68 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8010a68:	b570      	push	{r4, r5, r6, lr}
 8010a6a:	4604      	mov	r4, r0
 8010a6c:	6840      	ldr	r0, [r0, #4]
 8010a6e:	6803      	ldr	r3, [r0, #0]
 8010a70:	681b      	ldr	r3, [r3, #0]
 8010a72:	4798      	blx	r3
 8010a74:	4605      	mov	r5, r0
 8010a76:	b930      	cbnz	r0, 8010a86 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010a78:	7a23      	ldrb	r3, [r4, #8]
 8010a7a:	b123      	cbz	r3, 8010a86 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8010a7c:	6860      	ldr	r0, [r4, #4]
 8010a7e:	6803      	ldr	r3, [r0, #0]
 8010a80:	695b      	ldr	r3, [r3, #20]
 8010a82:	4798      	blx	r3
 8010a84:	7225      	strb	r5, [r4, #8]
 8010a86:	6860      	ldr	r0, [r4, #4]
 8010a88:	6803      	ldr	r3, [r0, #0]
 8010a8a:	681b      	ldr	r3, [r3, #0]
 8010a8c:	4798      	blx	r3
 8010a8e:	b928      	cbnz	r0, 8010a9c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8010a90:	6823      	ldr	r3, [r4, #0]
 8010a92:	4620      	mov	r0, r4
 8010a94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010a96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010a9a:	4718      	bx	r3
 8010a9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010aa0:	f7f0 bd10 	b.w	80014c4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08010aa4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8010aa4:	b510      	push	{r4, lr}
 8010aa6:	4c04      	ldr	r4, [pc, #16]	; (8010ab8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8010aa8:	6082      	str	r2, [r0, #8]
 8010aaa:	2200      	movs	r2, #0
 8010aac:	e9c0 4100 	strd	r4, r1, [r0]
 8010ab0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8010ab4:	bd10      	pop	{r4, pc}
 8010ab6:	bf00      	nop
 8010ab8:	08029fc4 	.word	0x08029fc4

08010abc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8010abc:	6840      	ldr	r0, [r0, #4]
 8010abe:	6803      	ldr	r3, [r0, #0]
 8010ac0:	681b      	ldr	r3, [r3, #0]
 8010ac2:	4718      	bx	r3

08010ac4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010ac4:	4b06      	ldr	r3, [pc, #24]	; (8010ae0 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 8010ac6:	60c1      	str	r1, [r0, #12]
 8010ac8:	094a      	lsrs	r2, r1, #5
 8010aca:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8010ace:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8010ad2:	4313      	orrs	r3, r2
 8010ad4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8010ad8:	4319      	orrs	r1, r3
 8010ada:	8201      	strh	r1, [r0, #16]
 8010adc:	4770      	bx	lr
 8010ade:	bf00      	nop
 8010ae0:	fffff800 	.word	0xfffff800

08010ae4 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 8010ae4:	f1a0 0008 	sub.w	r0, r0, #8
 8010ae8:	e7ec      	b.n	8010ac4 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8010aea:	bf00      	nop

08010aec <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 8010aec:	b508      	push	{r3, lr}
 8010aee:	4b05      	ldr	r3, [pc, #20]	; (8010b04 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 8010af0:	6818      	ldr	r0, [r3, #0]
 8010af2:	6803      	ldr	r3, [r0, #0]
 8010af4:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8010af8:	4798      	blx	r3
 8010afa:	1e43      	subs	r3, r0, #1
 8010afc:	4258      	negs	r0, r3
 8010afe:	4158      	adcs	r0, r3
 8010b00:	bd08      	pop	{r3, pc}
 8010b02:	bf00      	nop
 8010b04:	2000ef1c 	.word	0x2000ef1c

08010b08 <_ZN8touchgfx13PainterRGB565D1Ev>:
 8010b08:	4770      	bx	lr

08010b0a <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 8010b0a:	3808      	subs	r0, #8
 8010b0c:	4770      	bx	lr

08010b0e <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8010b0e:	b430      	push	{r4, r5}
 8010b10:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8010b14:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 8010b18:	8a02      	ldrh	r2, [r0, #16]
 8010b1a:	9202      	str	r2, [sp, #8]
 8010b1c:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8010b20:	68c2      	ldr	r2, [r0, #12]
 8010b22:	4629      	mov	r1, r5
 8010b24:	4620      	mov	r0, r4
 8010b26:	bc30      	pop	{r4, r5}
 8010b28:	f7f0 be8a 	b.w	8001840 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08010b2c <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8010b2c:	f7f0 be7e 	b.w	800182c <_ZN8touchgfx5paint8tearDownEv>

08010b30 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8010b30:	b510      	push	{r4, lr}
 8010b32:	2114      	movs	r1, #20
 8010b34:	4604      	mov	r4, r0
 8010b36:	f015 fd4b 	bl	80265d0 <_ZdlPvj>
 8010b3a:	4620      	mov	r0, r4
 8010b3c:	bd10      	pop	{r4, pc}

08010b3e <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8010b3e:	f1a0 0008 	sub.w	r0, r0, #8
 8010b42:	e7f5      	b.n	8010b30 <_ZN8touchgfx13PainterRGB565D0Ev>

08010b44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8010b44:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010b46:	6803      	ldr	r3, [r0, #0]
 8010b48:	460d      	mov	r5, r1
 8010b4a:	4604      	mov	r4, r0
 8010b4c:	4601      	mov	r1, r0
 8010b4e:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010b50:	a802      	add	r0, sp, #8
 8010b52:	4798      	blx	r3
 8010b54:	6828      	ldr	r0, [r5, #0]
 8010b56:	6869      	ldr	r1, [r5, #4]
 8010b58:	466b      	mov	r3, sp
 8010b5a:	c303      	stmia	r3!, {r0, r1}
 8010b5c:	4668      	mov	r0, sp
 8010b5e:	4619      	mov	r1, r3
 8010b60:	f7fe ff8c 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8010b64:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8010b66:	b188      	cbz	r0, 8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b68:	6803      	ldr	r3, [r0, #0]
 8010b6a:	1d21      	adds	r1, r4, #4
 8010b6c:	68db      	ldr	r3, [r3, #12]
 8010b6e:	4798      	blx	r3
 8010b70:	b160      	cbz	r0, 8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b72:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010b76:	2b00      	cmp	r3, #0
 8010b78:	dd08      	ble.n	8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b7a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8010b7e:	2d00      	cmp	r5, #0
 8010b80:	dd04      	ble.n	8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010b82:	4a2b      	ldr	r2, [pc, #172]	; (8010c30 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
 8010b84:	7812      	ldrb	r2, [r2, #0]
 8010b86:	b11a      	cbz	r2, 8010b90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
 8010b88:	2a01      	cmp	r2, #1
 8010b8a:	d029      	beq.n	8010be0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
 8010b8c:	b004      	add	sp, #16
 8010b8e:	bd70      	pop	{r4, r5, r6, pc}
 8010b90:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010b94:	441d      	add	r5, r3
 8010b96:	b2ad      	uxth	r5, r5
 8010b98:	b22e      	sxth	r6, r5
 8010b9a:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8010b9e:	42b3      	cmp	r3, r6
 8010ba0:	daf4      	bge.n	8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010ba2:	6823      	ldr	r3, [r4, #0]
 8010ba4:	4669      	mov	r1, sp
 8010ba6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010ba8:	4620      	mov	r0, r4
 8010baa:	4798      	blx	r3
 8010bac:	b940      	cbnz	r0, 8010bc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010bae:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8010bb2:	2b01      	cmp	r3, #1
 8010bb4:	d004      	beq.n	8010bc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
 8010bb6:	3301      	adds	r3, #1
 8010bb8:	105b      	asrs	r3, r3, #1
 8010bba:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010bbe:	e7f0      	b.n	8010ba2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 8010bc0:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8010bc4:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010bc8:	4413      	add	r3, r2
 8010bca:	b29b      	uxth	r3, r3
 8010bcc:	441a      	add	r2, r3
 8010bce:	b212      	sxth	r2, r2
 8010bd0:	4296      	cmp	r6, r2
 8010bd2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010bd6:	dae0      	bge.n	8010b9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010bd8:	1aeb      	subs	r3, r5, r3
 8010bda:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010bde:	e7dc      	b.n	8010b9a <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
 8010be0:	f8bd 5000 	ldrh.w	r5, [sp]
 8010be4:	441d      	add	r5, r3
 8010be6:	b2ad      	uxth	r5, r5
 8010be8:	b22e      	sxth	r6, r5
 8010bea:	f9bd 3000 	ldrsh.w	r3, [sp]
 8010bee:	42b3      	cmp	r3, r6
 8010bf0:	dacc      	bge.n	8010b8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 8010bf2:	6823      	ldr	r3, [r4, #0]
 8010bf4:	4669      	mov	r1, sp
 8010bf6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8010bf8:	4620      	mov	r0, r4
 8010bfa:	4798      	blx	r3
 8010bfc:	b940      	cbnz	r0, 8010c10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010bfe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8010c02:	2b01      	cmp	r3, #1
 8010c04:	d004      	beq.n	8010c10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
 8010c06:	3301      	adds	r3, #1
 8010c08:	105b      	asrs	r3, r3, #1
 8010c0a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010c0e:	e7f0      	b.n	8010bf2 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8010c10:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8010c14:	f8bd 3000 	ldrh.w	r3, [sp]
 8010c18:	4413      	add	r3, r2
 8010c1a:	b29b      	uxth	r3, r3
 8010c1c:	441a      	add	r2, r3
 8010c1e:	b212      	sxth	r2, r2
 8010c20:	4296      	cmp	r6, r2
 8010c22:	f8ad 3000 	strh.w	r3, [sp]
 8010c26:	dae0      	bge.n	8010bea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010c28:	1aeb      	subs	r3, r5, r3
 8010c2a:	f8ad 3004 	strh.w	r3, [sp, #4]
 8010c2e:	e7dc      	b.n	8010bea <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
 8010c30:	2000ef14 	.word	0x2000ef14

08010c34 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8010c34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8010c36:	6803      	ldr	r3, [r0, #0]
 8010c38:	4604      	mov	r4, r0
 8010c3a:	4601      	mov	r1, r0
 8010c3c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010c3e:	4668      	mov	r0, sp
 8010c40:	4798      	blx	r3
 8010c42:	2100      	movs	r1, #0
 8010c44:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8010c48:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8010c4c:	9102      	str	r1, [sp, #8]
 8010c4e:	4668      	mov	r0, sp
 8010c50:	a902      	add	r1, sp, #8
 8010c52:	f8ad 200c 	strh.w	r2, [sp, #12]
 8010c56:	f8ad 300e 	strh.w	r3, [sp, #14]
 8010c5a:	f7fe ff0f 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8010c5e:	6823      	ldr	r3, [r4, #0]
 8010c60:	4669      	mov	r1, sp
 8010c62:	691b      	ldr	r3, [r3, #16]
 8010c64:	4620      	mov	r0, r4
 8010c66:	4798      	blx	r3
 8010c68:	b004      	add	sp, #16
 8010c6a:	bd10      	pop	{r4, pc}

08010c6c <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8010c6c:	2101      	movs	r1, #1
 8010c6e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8010c72:	490b      	ldr	r1, [pc, #44]	; (8010ca0 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8010c74:	6001      	str	r1, [r0, #0]
 8010c76:	2200      	movs	r2, #0
 8010c78:	21ff      	movs	r1, #255	; 0xff
 8010c7a:	8082      	strh	r2, [r0, #4]
 8010c7c:	80c2      	strh	r2, [r0, #6]
 8010c7e:	8102      	strh	r2, [r0, #8]
 8010c80:	8142      	strh	r2, [r0, #10]
 8010c82:	8182      	strh	r2, [r0, #12]
 8010c84:	81c2      	strh	r2, [r0, #14]
 8010c86:	8202      	strh	r2, [r0, #16]
 8010c88:	8242      	strh	r2, [r0, #18]
 8010c8a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8010c8e:	61c2      	str	r2, [r0, #28]
 8010c90:	8402      	strh	r2, [r0, #32]
 8010c92:	8442      	strh	r2, [r0, #34]	; 0x22
 8010c94:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8010c98:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8010c9c:	6282      	str	r2, [r0, #40]	; 0x28
 8010c9e:	4770      	bx	lr
 8010ca0:	0802a020 	.word	0x0802a020

08010ca4 <_ZNK8touchgfx4Line14getMinimalRectEv>:
 8010ca4:	f101 0364 	add.w	r3, r1, #100	; 0x64
 8010ca8:	4602      	mov	r2, r0
 8010caa:	cb03      	ldmia	r3!, {r0, r1}
 8010cac:	6010      	str	r0, [r2, #0]
 8010cae:	6051      	str	r1, [r2, #4]
 8010cb0:	4610      	mov	r0, r2
 8010cb2:	4770      	bx	lr

08010cb4 <_ZN8touchgfx4LineD1Ev>:
 8010cb4:	4770      	bx	lr

08010cb6 <_ZN8touchgfx4LineD0Ev>:
 8010cb6:	b510      	push	{r4, lr}
 8010cb8:	2170      	movs	r1, #112	; 0x70
 8010cba:	4604      	mov	r4, r0
 8010cbc:	f015 fc88 	bl	80265d0 <_ZdlPvj>
 8010cc0:	4620      	mov	r0, r4
 8010cc2:	bd10      	pop	{r4, pc}

08010cc4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 8010cc4:	b507      	push	{r0, r1, r2, lr}
 8010cc6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8010cca:	ab01      	add	r3, sp, #4
 8010ccc:	6809      	ldr	r1, [r1, #0]
 8010cce:	6800      	ldr	r0, [r0, #0]
 8010cd0:	f005 fba0 	bl	8016414 <_ZN8touchgfx6muldivElllRl>
 8010cd4:	b003      	add	sp, #12
 8010cd6:	f85d fb04 	ldr.w	pc, [sp], #4

08010cda <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8010cda:	6800      	ldr	r0, [r0, #0]
 8010cdc:	2800      	cmp	r0, #0
 8010cde:	bfb9      	ittee	lt
 8010ce0:	2320      	movlt	r3, #32
 8010ce2:	fb90 f0f3 	sdivlt	r0, r0, r3
 8010ce6:	301f      	addge	r0, #31
 8010ce8:	1140      	asrge	r0, r0, #5
 8010cea:	4770      	bx	lr

08010cec <_ZNK8touchgfx4Line17invalidateContentEv>:
 8010cec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010cf0:	f890 3026 	ldrb.w	r3, [r0, #38]	; 0x26
 8010cf4:	b089      	sub	sp, #36	; 0x24
 8010cf6:	4604      	mov	r4, r0
 8010cf8:	b353      	cbz	r3, 8010d50 <_ZNK8touchgfx4Line17invalidateContentEv+0x64>
 8010cfa:	6803      	ldr	r3, [r0, #0]
 8010cfc:	4601      	mov	r1, r0
 8010cfe:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8010d00:	a802      	add	r0, sp, #8
 8010d02:	4798      	blx	r3
 8010d04:	2220      	movs	r2, #32
 8010d06:	f8d4 a02c 	ldr.w	sl, [r4, #44]	; 0x2c
 8010d0a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8010d0c:	fb9a f0f2 	sdiv	r0, sl, r2
 8010d10:	fb91 f5f2 	sdiv	r5, r1, r2
 8010d14:	1b40      	subs	r0, r0, r5
 8010d16:	2800      	cmp	r0, #0
 8010d18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8010d1a:	fb93 f6f2 	sdiv	r6, r3, r2
 8010d1e:	bfb8      	it	lt
 8010d20:	4240      	neglt	r0, r0
 8010d22:	0076      	lsls	r6, r6, #1
 8010d24:	4286      	cmp	r6, r0
 8010d26:	f8d4 b000 	ldr.w	fp, [r4]
 8010d2a:	dc0c      	bgt.n	8010d46 <_ZNK8touchgfx4Line17invalidateContentEv+0x5a>
 8010d2c:	6b25      	ldr	r5, [r4, #48]	; 0x30
 8010d2e:	f8d4 8038 	ldr.w	r8, [r4, #56]	; 0x38
 8010d32:	fb95 f0f2 	sdiv	r0, r5, r2
 8010d36:	fb98 f7f2 	sdiv	r7, r8, r2
 8010d3a:	1bc0      	subs	r0, r0, r7
 8010d3c:	2800      	cmp	r0, #0
 8010d3e:	bfb8      	it	lt
 8010d40:	4240      	neglt	r0, r0
 8010d42:	4286      	cmp	r6, r0
 8010d44:	dd07      	ble.n	8010d56 <_ZNK8touchgfx4Line17invalidateContentEv+0x6a>
 8010d46:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010d4a:	a902      	add	r1, sp, #8
 8010d4c:	4620      	mov	r0, r4
 8010d4e:	4798      	blx	r3
 8010d50:	b009      	add	sp, #36	; 0x24
 8010d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010d56:	3301      	adds	r3, #1
 8010d58:	2002      	movs	r0, #2
 8010d5a:	f10d 0920 	add.w	r9, sp, #32
 8010d5e:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8010d62:	4103      	asrs	r3, r0
 8010d64:	f849 3d08 	str.w	r3, [r9, #-8]!
 8010d68:	eb01 060a 	add.w	r6, r1, sl
 8010d6c:	eb08 0705 	add.w	r7, r8, r5
 8010d70:	fb96 f6f0 	sdiv	r6, r6, r0
 8010d74:	fb97 f7f0 	sdiv	r7, r7, r0
 8010d78:	4648      	mov	r0, r9
 8010d7a:	9101      	str	r1, [sp, #4]
 8010d7c:	b236      	sxth	r6, r6
 8010d7e:	b23f      	sxth	r7, r7
 8010d80:	fb96 f6f2 	sdiv	r6, r6, r2
 8010d84:	fb97 f7f2 	sdiv	r7, r7, r2
 8010d88:	f7ff ffa7 	bl	8010cda <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 8010d8c:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010d90:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 8010d94:	9901      	ldr	r1, [sp, #4]
 8010d96:	4293      	cmp	r3, r2
 8010d98:	fa1f fe87 	uxth.w	lr, r7
 8010d9c:	fa1f fc86 	uxth.w	ip, r6
 8010da0:	eba1 0a0a 	sub.w	sl, r1, sl
 8010da4:	b280      	uxth	r0, r0
 8010da6:	da54      	bge.n	8010e52 <_ZNK8touchgfx4Line17invalidateContentEv+0x166>
 8010da8:	ebac 0100 	sub.w	r1, ip, r0
 8010dac:	b289      	uxth	r1, r1
 8010dae:	4460      	add	r0, ip
 8010db0:	f1ba 0f00 	cmp.w	sl, #0
 8010db4:	b20e      	sxth	r6, r1
 8010db6:	b280      	uxth	r0, r0
 8010db8:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 8010dbc:	f9bd c00a 	ldrsh.w	ip, [sp, #10]
 8010dc0:	da29      	bge.n	8010e16 <_ZNK8touchgfx4Line17invalidateContentEv+0x12a>
 8010dc2:	eba8 0505 	sub.w	r5, r8, r5
 8010dc6:	2d00      	cmp	r5, #0
 8010dc8:	da2a      	bge.n	8010e20 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010dca:	fa1f f88a 	uxth.w	r8, sl
 8010dce:	eba0 0008 	sub.w	r0, r0, r8
 8010dd2:	fa1f f58c 	uxth.w	r5, ip
 8010dd6:	4443      	add	r3, r8
 8010dd8:	f8ad 0014 	strh.w	r0, [sp, #20]
 8010ddc:	1a59      	subs	r1, r3, r1
 8010dde:	ebae 0005 	sub.w	r0, lr, r5
 8010de2:	f8ad a010 	strh.w	sl, [sp, #16]
 8010de6:	f8ad c012 	strh.w	ip, [sp, #18]
 8010dea:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010dee:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010df2:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010df6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8010dfa:	442a      	add	r2, r5
 8010dfc:	eba2 0e0e 	sub.w	lr, r2, lr
 8010e00:	f8ad e01e 	strh.w	lr, [sp, #30]
 8010e04:	f8db 3010 	ldr.w	r3, [fp, #16]
 8010e08:	a904      	add	r1, sp, #16
 8010e0a:	4620      	mov	r0, r4
 8010e0c:	4798      	blx	r3
 8010e0e:	6823      	ldr	r3, [r4, #0]
 8010e10:	4649      	mov	r1, r9
 8010e12:	691b      	ldr	r3, [r3, #16]
 8010e14:	e79a      	b.n	8010d4c <_ZNK8touchgfx4Line17invalidateContentEv+0x60>
 8010e16:	d003      	beq.n	8010e20 <_ZNK8touchgfx4Line17invalidateContentEv+0x134>
 8010e18:	eba8 0505 	sub.w	r5, r8, r5
 8010e1c:	2d00      	cmp	r5, #0
 8010e1e:	dcd4      	bgt.n	8010dca <_ZNK8touchgfx4Line17invalidateContentEv+0xde>
 8010e20:	fa1f f88a 	uxth.w	r8, sl
 8010e24:	4443      	add	r3, r8
 8010e26:	fa1f f58c 	uxth.w	r5, ip
 8010e2a:	1a59      	subs	r1, r3, r1
 8010e2c:	eba0 0008 	sub.w	r0, r0, r8
 8010e30:	ebae 0305 	sub.w	r3, lr, r5
 8010e34:	f8ad 6010 	strh.w	r6, [sp, #16]
 8010e38:	f8ad c012 	strh.w	ip, [sp, #18]
 8010e3c:	f8ad 1014 	strh.w	r1, [sp, #20]
 8010e40:	f8ad 3016 	strh.w	r3, [sp, #22]
 8010e44:	f8ad a018 	strh.w	sl, [sp, #24]
 8010e48:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010e4c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8010e50:	e7d3      	b.n	8010dfa <_ZNK8touchgfx4Line17invalidateContentEv+0x10e>
 8010e52:	ebae 0100 	sub.w	r1, lr, r0
 8010e56:	b289      	uxth	r1, r1
 8010e58:	4470      	add	r0, lr
 8010e5a:	f1ba 0f00 	cmp.w	sl, #0
 8010e5e:	b20f      	sxth	r7, r1
 8010e60:	b280      	uxth	r0, r0
 8010e62:	f9bd e008 	ldrsh.w	lr, [sp, #8]
 8010e66:	f9bd a00a 	ldrsh.w	sl, [sp, #10]
 8010e6a:	da20      	bge.n	8010eae <_ZNK8touchgfx4Line17invalidateContentEv+0x1c2>
 8010e6c:	eba8 0505 	sub.w	r5, r8, r5
 8010e70:	2d00      	cmp	r5, #0
 8010e72:	da21      	bge.n	8010eb8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010e74:	fa1f f88e 	uxth.w	r8, lr
 8010e78:	fa1f f58a 	uxth.w	r5, sl
 8010e7c:	4443      	add	r3, r8
 8010e7e:	442a      	add	r2, r5
 8010e80:	f8ad e010 	strh.w	lr, [sp, #16]
 8010e84:	1b40      	subs	r0, r0, r5
 8010e86:	ebac 0e08 	sub.w	lr, ip, r8
 8010e8a:	1a51      	subs	r1, r2, r1
 8010e8c:	eba3 0c0c 	sub.w	ip, r3, ip
 8010e90:	f8ad a012 	strh.w	sl, [sp, #18]
 8010e94:	f8ad e014 	strh.w	lr, [sp, #20]
 8010e98:	f8ad 0016 	strh.w	r0, [sp, #22]
 8010e9c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010ea0:	f8ad 701a 	strh.w	r7, [sp, #26]
 8010ea4:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010ea8:	f8ad 101e 	strh.w	r1, [sp, #30]
 8010eac:	e7aa      	b.n	8010e04 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>
 8010eae:	d003      	beq.n	8010eb8 <_ZNK8touchgfx4Line17invalidateContentEv+0x1cc>
 8010eb0:	eba8 0505 	sub.w	r5, r8, r5
 8010eb4:	2d00      	cmp	r5, #0
 8010eb6:	dcdd      	bgt.n	8010e74 <_ZNK8touchgfx4Line17invalidateContentEv+0x188>
 8010eb8:	fa1f f58e 	uxth.w	r5, lr
 8010ebc:	fa1f f88a 	uxth.w	r8, sl
 8010ec0:	4442      	add	r2, r8
 8010ec2:	442b      	add	r3, r5
 8010ec4:	f8ad 7012 	strh.w	r7, [sp, #18]
 8010ec8:	1a51      	subs	r1, r2, r1
 8010eca:	ebac 0705 	sub.w	r7, ip, r5
 8010ece:	eba0 0008 	sub.w	r0, r0, r8
 8010ed2:	eba3 0c0c 	sub.w	ip, r3, ip
 8010ed6:	f8ad e010 	strh.w	lr, [sp, #16]
 8010eda:	f8ad 7014 	strh.w	r7, [sp, #20]
 8010ede:	f8ad 1016 	strh.w	r1, [sp, #22]
 8010ee2:	f8ad 6018 	strh.w	r6, [sp, #24]
 8010ee6:	f8ad a01a 	strh.w	sl, [sp, #26]
 8010eea:	f8ad c01c 	strh.w	ip, [sp, #28]
 8010eee:	f8ad 001e 	strh.w	r0, [sp, #30]
 8010ef2:	e787      	b.n	8010e04 <_ZNK8touchgfx4Line17invalidateContentEv+0x118>

08010ef4 <_ZN8touchgfx7CWRUtil4sineEi>:
 8010ef4:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8010ef8:	fb90 f2f3 	sdiv	r2, r0, r3
 8010efc:	fb02 0013 	mls	r0, r2, r3, r0
 8010f00:	2800      	cmp	r0, #0
 8010f02:	bfb8      	it	lt
 8010f04:	18c0      	addlt	r0, r0, r3
 8010f06:	285a      	cmp	r0, #90	; 0x5a
 8010f08:	4b09      	ldr	r3, [pc, #36]	; (8010f30 <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 8010f0a:	dc02      	bgt.n	8010f12 <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 8010f0c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010f10:	4770      	bx	lr
 8010f12:	28b4      	cmp	r0, #180	; 0xb4
 8010f14:	dc02      	bgt.n	8010f1c <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 8010f16:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 8010f1a:	e7f7      	b.n	8010f0c <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 8010f1c:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 8010f20:	bfd4      	ite	le
 8010f22:	38b4      	suble	r0, #180	; 0xb4
 8010f24:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 8010f28:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8010f2c:	4240      	negs	r0, r0
 8010f2e:	4770      	bx	lr
 8010f30:	0802a0ec 	.word	0x0802a0ec

08010f34 <_ZN8touchgfx7CWRUtil5isqrtEm>:
 8010f34:	f5b0 3f80 	cmp.w	r0, #65536	; 0x10000
 8010f38:	bf2c      	ite	cs
 8010f3a:	f04f 4280 	movcs.w	r2, #1073741824	; 0x40000000
 8010f3e:	f44f 4280 	movcc.w	r2, #16384	; 0x4000
 8010f42:	2300      	movs	r3, #0
 8010f44:	1899      	adds	r1, r3, r2
 8010f46:	4288      	cmp	r0, r1
 8010f48:	bf24      	itt	cs
 8010f4a:	1853      	addcs	r3, r2, r1
 8010f4c:	1a40      	subcs	r0, r0, r1
 8010f4e:	0892      	lsrs	r2, r2, #2
 8010f50:	ea4f 0353 	mov.w	r3, r3, lsr #1
 8010f54:	d1f6      	bne.n	8010f44 <_ZN8touchgfx7CWRUtil5isqrtEm+0x10>
 8010f56:	4618      	mov	r0, r3
 8010f58:	4770      	bx	lr

08010f5a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 8010f5a:	b510      	push	{r4, lr}
 8010f5c:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 8010f60:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 8010f64:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 8010f68:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 8010f6c:	13a4      	asrs	r4, r4, #14
 8010f6e:	139b      	asrs	r3, r3, #14
 8010f70:	429c      	cmp	r4, r3
 8010f72:	bfb8      	it	lt
 8010f74:	461c      	movlt	r4, r3
 8010f76:	2c01      	cmp	r4, #1
 8010f78:	dd07      	ble.n	8010f8a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 8010f7a:	fb91 f1f4 	sdiv	r1, r1, r4
 8010f7e:	fb90 f0f4 	sdiv	r0, r0, r4
 8010f82:	f7ff ffea 	bl	8010f5a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010f86:	4360      	muls	r0, r4
 8010f88:	bd10      	pop	{r4, pc}
 8010f8a:	4340      	muls	r0, r0
 8010f8c:	fb01 0001 	mla	r0, r1, r1, r0
 8010f90:	f7ff ffd0 	bl	8010f34 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010f94:	e7f8      	b.n	8010f88 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>
	...

08010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>:
 8010f98:	2800      	cmp	r0, #0
 8010f9a:	b508      	push	{r3, lr}
 8010f9c:	da05      	bge.n	8010faa <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x12>
 8010f9e:	4240      	negs	r0, r0
 8010fa0:	f7ff fffa 	bl	8010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010fa4:	4240      	negs	r0, r0
 8010fa6:	b240      	sxtb	r0, r0
 8010fa8:	bd08      	pop	{r3, pc}
 8010faa:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8010fae:	dc11      	bgt.n	8010fd4 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x3c>
 8010fb0:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 8010fb4:	dd09      	ble.n	8010fca <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x32>
 8010fb6:	4340      	muls	r0, r0
 8010fb8:	f5c0 1080 	rsb	r0, r0, #1048576	; 0x100000
 8010fbc:	f7ff ffba 	bl	8010f34 <_ZN8touchgfx7CWRUtil5isqrtEm>
 8010fc0:	f7ff ffea 	bl	8010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8010fc4:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010fc8:	e7ed      	b.n	8010fa6 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0xe>
 8010fca:	3003      	adds	r0, #3
 8010fcc:	10c0      	asrs	r0, r0, #3
 8010fce:	4b02      	ldr	r3, [pc, #8]	; (8010fd8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x40>)
 8010fd0:	5618      	ldrsb	r0, [r3, r0]
 8010fd2:	e7e9      	b.n	8010fa8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010fd4:	2000      	movs	r0, #0
 8010fd6:	e7e7      	b.n	8010fa8 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E+0x10>
 8010fd8:	0802a090 	.word	0x0802a090

08010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>:
 8010fdc:	4281      	cmp	r1, r0
 8010fde:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010fe0:	460c      	mov	r4, r1
 8010fe2:	4615      	mov	r5, r2
 8010fe4:	dd07      	ble.n	8010ff6 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x1a>
 8010fe6:	4601      	mov	r1, r0
 8010fe8:	4620      	mov	r0, r4
 8010fea:	f7ff fff7 	bl	8010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8010fee:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 8010ff2:	b003      	add	sp, #12
 8010ff4:	bd30      	pop	{r4, r5, pc}
 8010ff6:	f7ff ffb0 	bl	8010f5a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8010ffa:	6028      	str	r0, [r5, #0]
 8010ffc:	2800      	cmp	r0, #0
 8010ffe:	d0f8      	beq.n	8010ff2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>
 8011000:	4602      	mov	r2, r0
 8011002:	ab01      	add	r3, sp, #4
 8011004:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8011008:	4620      	mov	r0, r4
 801100a:	f005 fa03 	bl	8016414 <_ZN8touchgfx6muldivElllRl>
 801100e:	f7ff ffc3 	bl	8010f98 <_ZN8touchgfx7CWRUtil7arcsineENS0_3Q10E>
 8011012:	e7ee      	b.n	8010ff2 <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_+0x16>

08011014 <_ZN8touchgfx4LineC1Ev>:
 8011014:	b510      	push	{r4, lr}
 8011016:	4604      	mov	r4, r0
 8011018:	f7ff fe28 	bl	8010c6c <_ZN8touchgfx12CanvasWidgetC1Ev>
 801101c:	4b0c      	ldr	r3, [pc, #48]	; (8011050 <_ZN8touchgfx4LineC1Ev+0x3c>)
 801101e:	6023      	str	r3, [r4, #0]
 8011020:	2220      	movs	r2, #32
 8011022:	2300      	movs	r3, #0
 8011024:	63e2      	str	r2, [r4, #60]	; 0x3c
 8011026:	2212      	movs	r2, #18
 8011028:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 801102c:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 8011030:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8011034:	e9c4 3311 	strd	r3, r3, [r4, #68]	; 0x44
 8011038:	e9c4 3313 	strd	r3, r3, [r4, #76]	; 0x4c
 801103c:	e9c4 3315 	strd	r3, r3, [r4, #84]	; 0x54
 8011040:	e9c4 3317 	strd	r3, r3, [r4, #92]	; 0x5c
 8011044:	e9c4 3319 	strd	r3, r3, [r4, #100]	; 0x64
 8011048:	66e2      	str	r2, [r4, #108]	; 0x6c
 801104a:	60a3      	str	r3, [r4, #8]
 801104c:	4620      	mov	r0, r4
 801104e:	bd10      	pop	{r4, pc}
 8011050:	0802a1ac 	.word	0x0802a1ac

08011054 <_ZN8touchgfx4Line17updateCachedShapeEv>:
 8011054:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8011058:	6b47      	ldr	r7, [r0, #52]	; 0x34
 801105a:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801105c:	6b85      	ldr	r5, [r0, #56]	; 0x38
 801105e:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8011060:	1aff      	subs	r7, r7, r3
 8011062:	4604      	mov	r4, r0
 8011064:	eba5 0502 	sub.w	r5, r5, r2
 8011068:	d142      	bne.n	80110f0 <_ZN8touchgfx4Line17updateCachedShapeEv+0x9c>
 801106a:	b955      	cbnz	r5, 8011082 <_ZN8touchgfx4Line17updateCachedShapeEv+0x2e>
 801106c:	e9c0 3313 	strd	r3, r3, [r0, #76]	; 0x4c
 8011070:	e9c0 3311 	strd	r3, r3, [r0, #68]	; 0x44
 8011074:	e9c0 2217 	strd	r2, r2, [r0, #92]	; 0x5c
 8011078:	e9c0 2215 	strd	r2, r2, [r0, #84]	; 0x54
 801107c:	b002      	add	sp, #8
 801107e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011082:	ea85 78e5 	eor.w	r8, r5, r5, asr #31
 8011086:	eba8 78e5 	sub.w	r8, r8, r5, asr #31
 801108a:	4629      	mov	r1, r5
 801108c:	4642      	mov	r2, r8
 801108e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8011090:	f005 f9df 	bl	8016452 <_ZN8touchgfx6muldivElll>
 8011094:	2502      	movs	r5, #2
 8011096:	4642      	mov	r2, r8
 8011098:	fb90 f6f5 	sdiv	r6, r0, r5
 801109c:	4639      	mov	r1, r7
 801109e:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80110a0:	f005 f9d7 	bl	8016452 <_ZN8touchgfx6muldivElll>
 80110a4:	f894 9040 	ldrb.w	r9, [r4, #64]	; 0x40
 80110a8:	fb90 f5f5 	sdiv	r5, r0, r5
 80110ac:	f1b9 0f00 	cmp.w	r9, #0
 80110b0:	d067      	beq.n	8011182 <_ZN8touchgfx4Line17updateCachedShapeEv+0x12e>
 80110b2:	f1b9 0f02 	cmp.w	r9, #2
 80110b6:	d878      	bhi.n	80111aa <_ZN8touchgfx4Line17updateCachedShapeEv+0x156>
 80110b8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80110ba:	6b60      	ldr	r0, [r4, #52]	; 0x34
 80110bc:	1b93      	subs	r3, r2, r6
 80110be:	1b5b      	subs	r3, r3, r5
 80110c0:	6463      	str	r3, [r4, #68]	; 0x44
 80110c2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80110c4:	18e9      	adds	r1, r5, r3
 80110c6:	1b89      	subs	r1, r1, r6
 80110c8:	6561      	str	r1, [r4, #84]	; 0x54
 80110ca:	1b81      	subs	r1, r0, r6
 80110cc:	4429      	add	r1, r5
 80110ce:	64a1      	str	r1, [r4, #72]	; 0x48
 80110d0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80110d2:	4430      	add	r0, r6
 80110d4:	186f      	adds	r7, r5, r1
 80110d6:	4432      	add	r2, r6
 80110d8:	1b49      	subs	r1, r1, r5
 80110da:	4437      	add	r7, r6
 80110dc:	4428      	add	r0, r5
 80110de:	4431      	add	r1, r6
 80110e0:	1b52      	subs	r2, r2, r5
 80110e2:	1b5b      	subs	r3, r3, r5
 80110e4:	65a7      	str	r7, [r4, #88]	; 0x58
 80110e6:	64e0      	str	r0, [r4, #76]	; 0x4c
 80110e8:	65e1      	str	r1, [r4, #92]	; 0x5c
 80110ea:	6522      	str	r2, [r4, #80]	; 0x50
 80110ec:	1b9b      	subs	r3, r3, r6
 80110ee:	e05b      	b.n	80111a8 <_ZN8touchgfx4Line17updateCachedShapeEv+0x154>
 80110f0:	ea87 78e7 	eor.w	r8, r7, r7, asr #31
 80110f4:	eba8 78e7 	sub.w	r8, r8, r7, asr #31
 80110f8:	2d00      	cmp	r5, #0
 80110fa:	d0c6      	beq.n	801108a <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 80110fc:	ea85 73e5 	eor.w	r3, r5, r5, asr #31
 8011100:	eba3 73e5 	sub.w	r3, r3, r5, asr #31
 8011104:	fb93 f2f8 	sdiv	r2, r3, r8
 8011108:	fb08 3312 	mls	r3, r8, r2, r3
 801110c:	b353      	cbz	r3, 8011164 <_ZN8touchgfx4Line17updateCachedShapeEv+0x110>
 801110e:	fb98 f2f3 	sdiv	r2, r8, r3
 8011112:	fb03 8812 	mls	r8, r3, r2, r8
 8011116:	f1b8 0f00 	cmp.w	r8, #0
 801111a:	d1f3      	bne.n	8011104 <_ZN8touchgfx4Line17updateCachedShapeEv+0xb0>
 801111c:	2b01      	cmp	r3, #1
 801111e:	bf1c      	itt	ne
 8011120:	fb95 f5f3 	sdivne	r5, r5, r3
 8011124:	fb97 f7f3 	sdivne	r7, r7, r3
 8011128:	ea87 73e7 	eor.w	r3, r7, r7, asr #31
 801112c:	f24b 5104 	movw	r1, #46340	; 0xb504
 8011130:	eba3 73e7 	sub.w	r3, r3, r7, asr #31
 8011134:	ea85 72e5 	eor.w	r2, r5, r5, asr #31
 8011138:	428b      	cmp	r3, r1
 801113a:	eba2 72e5 	sub.w	r2, r2, r5, asr #31
 801113e:	4608      	mov	r0, r1
 8011140:	dd01      	ble.n	8011146 <_ZN8touchgfx4Line17updateCachedShapeEv+0xf2>
 8011142:	428a      	cmp	r2, r1
 8011144:	dc10      	bgt.n	8011168 <_ZN8touchgfx4Line17updateCachedShapeEv+0x114>
 8011146:	fb90 f3f3 	sdiv	r3, r0, r3
 801114a:	fb90 f2f2 	sdiv	r2, r0, r2
 801114e:	4293      	cmp	r3, r2
 8011150:	bfa8      	it	ge
 8011152:	4613      	movge	r3, r2
 8011154:	435f      	muls	r7, r3
 8011156:	435d      	muls	r5, r3
 8011158:	4629      	mov	r1, r5
 801115a:	4638      	mov	r0, r7
 801115c:	f7ff fefd 	bl	8010f5a <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 8011160:	4680      	mov	r8, r0
 8011162:	e792      	b.n	801108a <_ZN8touchgfx4Line17updateCachedShapeEv+0x36>
 8011164:	4643      	mov	r3, r8
 8011166:	e7d9      	b.n	801111c <_ZN8touchgfx4Line17updateCachedShapeEv+0xc8>
 8011168:	fb93 f3f1 	sdiv	r3, r3, r1
 801116c:	fb92 f2f1 	sdiv	r2, r2, r1
 8011170:	4293      	cmp	r3, r2
 8011172:	bfcc      	ite	gt
 8011174:	3301      	addgt	r3, #1
 8011176:	1c53      	addle	r3, r2, #1
 8011178:	fb97 f7f3 	sdiv	r7, r7, r3
 801117c:	fb95 f5f3 	sdiv	r5, r5, r3
 8011180:	e7ea      	b.n	8011158 <_ZN8touchgfx4Line17updateCachedShapeEv+0x104>
 8011182:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8011184:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8011186:	1b93      	subs	r3, r2, r6
 8011188:	6463      	str	r3, [r4, #68]	; 0x44
 801118a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801118c:	18e9      	adds	r1, r5, r3
 801118e:	6561      	str	r1, [r4, #84]	; 0x54
 8011190:	1b81      	subs	r1, r0, r6
 8011192:	64a1      	str	r1, [r4, #72]	; 0x48
 8011194:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8011196:	4430      	add	r0, r6
 8011198:	186f      	adds	r7, r5, r1
 801119a:	4432      	add	r2, r6
 801119c:	1b49      	subs	r1, r1, r5
 801119e:	65a7      	str	r7, [r4, #88]	; 0x58
 80111a0:	64e0      	str	r0, [r4, #76]	; 0x4c
 80111a2:	65e1      	str	r1, [r4, #92]	; 0x5c
 80111a4:	6522      	str	r2, [r4, #80]	; 0x50
 80111a6:	1b5b      	subs	r3, r3, r5
 80111a8:	6623      	str	r3, [r4, #96]	; 0x60
 80111aa:	6c62      	ldr	r2, [r4, #68]	; 0x44
 80111ac:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80111ae:	9200      	str	r2, [sp, #0]
 80111b0:	9301      	str	r3, [sp, #4]
 80111b2:	f104 0148 	add.w	r1, r4, #72	; 0x48
 80111b6:	f104 0c54 	add.w	ip, r4, #84	; 0x54
 80111ba:	680f      	ldr	r7, [r1, #0]
 80111bc:	9800      	ldr	r0, [sp, #0]
 80111be:	42ba      	cmp	r2, r7
 80111c0:	bfa8      	it	ge
 80111c2:	463a      	movge	r2, r7
 80111c4:	4287      	cmp	r7, r0
 80111c6:	bfc8      	it	gt
 80111c8:	9700      	strgt	r7, [sp, #0]
 80111ca:	690f      	ldr	r7, [r1, #16]
 80111cc:	9801      	ldr	r0, [sp, #4]
 80111ce:	42bb      	cmp	r3, r7
 80111d0:	bfa8      	it	ge
 80111d2:	463b      	movge	r3, r7
 80111d4:	3104      	adds	r1, #4
 80111d6:	4287      	cmp	r7, r0
 80111d8:	bfc8      	it	gt
 80111da:	9701      	strgt	r7, [sp, #4]
 80111dc:	458c      	cmp	ip, r1
 80111de:	d1ec      	bne.n	80111ba <_ZN8touchgfx4Line17updateCachedShapeEv+0x166>
 80111e0:	4668      	mov	r0, sp
 80111e2:	2720      	movs	r7, #32
 80111e4:	fb92 f8f7 	sdiv	r8, r2, r7
 80111e8:	fb93 f7f7 	sdiv	r7, r3, r7
 80111ec:	f7ff fd75 	bl	8010cda <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80111f0:	4682      	mov	sl, r0
 80111f2:	a801      	add	r0, sp, #4
 80111f4:	f7ff fd71 	bl	8010cda <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 80111f8:	ebaa 0208 	sub.w	r2, sl, r8
 80111fc:	1bc0      	subs	r0, r0, r7
 80111fe:	f1b9 0f01 	cmp.w	r9, #1
 8011202:	f8a4 8064 	strh.w	r8, [r4, #100]	; 0x64
 8011206:	f8a4 7066 	strh.w	r7, [r4, #102]	; 0x66
 801120a:	f8a4 2068 	strh.w	r2, [r4, #104]	; 0x68
 801120e:	f8a4 006a 	strh.w	r0, [r4, #106]	; 0x6a
 8011212:	f47f af33 	bne.w	801107c <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>
 8011216:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
 8011218:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801121a:	1b83      	subs	r3, r0, r6
 801121c:	6463      	str	r3, [r4, #68]	; 0x44
 801121e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8011220:	18ea      	adds	r2, r5, r3
 8011222:	6562      	str	r2, [r4, #84]	; 0x54
 8011224:	1b8a      	subs	r2, r1, r6
 8011226:	64a2      	str	r2, [r4, #72]	; 0x48
 8011228:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 801122a:	4431      	add	r1, r6
 801122c:	18af      	adds	r7, r5, r2
 801122e:	4406      	add	r6, r0
 8011230:	1b52      	subs	r2, r2, r5
 8011232:	1b5d      	subs	r5, r3, r5
 8011234:	65a7      	str	r7, [r4, #88]	; 0x58
 8011236:	64e1      	str	r1, [r4, #76]	; 0x4c
 8011238:	65e2      	str	r2, [r4, #92]	; 0x5c
 801123a:	6526      	str	r6, [r4, #80]	; 0x50
 801123c:	6625      	str	r5, [r4, #96]	; 0x60
 801123e:	e71d      	b.n	801107c <_ZN8touchgfx4Line17updateCachedShapeEv+0x28>

08011240 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_>:
 8011240:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8011242:	428b      	cmp	r3, r1
 8011244:	d102      	bne.n	801124c <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0xc>
 8011246:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8011248:	4293      	cmp	r3, r2
 801124a:	d003      	beq.n	8011254 <_ZN8touchgfx4Line8setStartENS_7CWRUtil2Q5ES2_+0x14>
 801124c:	e9c0 120b 	strd	r1, r2, [r0, #44]	; 0x2c
 8011250:	f7ff bf00 	b.w	8011054 <_ZN8touchgfx4Line17updateCachedShapeEv>
 8011254:	4770      	bx	lr

08011256 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_>:
 8011256:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8011258:	428b      	cmp	r3, r1
 801125a:	d102      	bne.n	8011262 <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0xc>
 801125c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 801125e:	4293      	cmp	r3, r2
 8011260:	d003      	beq.n	801126a <_ZN8touchgfx4Line6setEndENS_7CWRUtil2Q5ES2_+0x14>
 8011262:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 8011266:	f7ff bef5 	b.w	8011054 <_ZN8touchgfx4Line17updateCachedShapeEv>
 801126a:	4770      	bx	lr

0801126c <_ZN8touchgfx4Line18setLineEndingStyleENS0_17LINE_ENDING_STYLEE>:
 801126c:	f880 1040 	strb.w	r1, [r0, #64]	; 0x40
 8011270:	f7ff bef0 	b.w	8011054 <_ZN8touchgfx4Line17updateCachedShapeEv>

08011274 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE>:
 8011274:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011278:	b0a0      	sub	sp, #128	; 0x80
 801127a:	4604      	mov	r4, r0
 801127c:	460a      	mov	r2, r1
 801127e:	4601      	mov	r1, r0
 8011280:	a804      	add	r0, sp, #16
 8011282:	f014 ff45 	bl	8026110 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 8011286:	2300      	movs	r3, #0
 8011288:	9301      	str	r3, [sp, #4]
 801128a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801128e:	2b01      	cmp	r3, #1
 8011290:	d17c      	bne.n	801138c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x118>
 8011292:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8011294:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8011296:	6d61      	ldr	r1, [r4, #84]	; 0x54
 8011298:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801129a:	1ac0      	subs	r0, r0, r3
 801129c:	eba1 0102 	sub.w	r1, r1, r2
 80112a0:	d437      	bmi.n	8011312 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x9e>
 80112a2:	2900      	cmp	r1, #0
 80112a4:	aa01      	add	r2, sp, #4
 80112a6:	db2e      	blt.n	8011306 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x92>
 80112a8:	f7ff fe98 	bl	8010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 80112ac:	f100 065a 	add.w	r6, r0, #90	; 0x5a
 80112b0:	6d62      	ldr	r2, [r4, #84]	; 0x54
 80112b2:	6c61      	ldr	r1, [r4, #68]	; 0x44
 80112b4:	a804      	add	r0, sp, #16
 80112b6:	f015 f8ab 	bl	8026410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 80112ba:	6da2      	ldr	r2, [r4, #88]	; 0x58
 80112bc:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80112be:	a804      	add	r0, sp, #16
 80112c0:	f015 f8f3 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80112c4:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 80112c6:	2db3      	cmp	r5, #179	; 0xb3
 80112c8:	dc33      	bgt.n	8011332 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xbe>
 80112ca:	eba6 0805 	sub.w	r8, r6, r5
 80112ce:	4640      	mov	r0, r8
 80112d0:	f7ff fe10 	bl	8010ef4 <_ZN8touchgfx7CWRUtil4sineEi>
 80112d4:	a902      	add	r1, sp, #8
 80112d6:	9002      	str	r0, [sp, #8]
 80112d8:	a801      	add	r0, sp, #4
 80112da:	f7ff fcf3 	bl	8010cc4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80112de:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80112e0:	1847      	adds	r7, r0, r1
 80112e2:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 80112e6:	f7ff fe05 	bl	8010ef4 <_ZN8touchgfx7CWRUtil4sineEi>
 80112ea:	a903      	add	r1, sp, #12
 80112ec:	9003      	str	r0, [sp, #12]
 80112ee:	a801      	add	r0, sp, #4
 80112f0:	f7ff fce8 	bl	8010cc4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 80112f4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80112f6:	4639      	mov	r1, r7
 80112f8:	1a12      	subs	r2, r2, r0
 80112fa:	a804      	add	r0, sp, #16
 80112fc:	f015 f8d5 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011300:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011302:	441d      	add	r5, r3
 8011304:	e7df      	b.n	80112c6 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x52>
 8011306:	4249      	negs	r1, r1
 8011308:	f7ff fe68 	bl	8010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801130c:	f1c0 065a 	rsb	r6, r0, #90	; 0x5a
 8011310:	e7ce      	b.n	80112b0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011312:	2900      	cmp	r1, #0
 8011314:	f1c0 0000 	rsb	r0, r0, #0
 8011318:	aa01      	add	r2, sp, #4
 801131a:	db04      	blt.n	8011326 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xb2>
 801131c:	f7ff fe5e 	bl	8010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 8011320:	f5c0 7687 	rsb	r6, r0, #270	; 0x10e
 8011324:	e7c4      	b.n	80112b0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011326:	4249      	negs	r1, r1
 8011328:	f7ff fe58 	bl	8010fdc <_ZN8touchgfx7CWRUtil6_angleENS0_2Q5ES1_RS1_>
 801132c:	f500 7687 	add.w	r6, r0, #270	; 0x10e
 8011330:	e7be      	b.n	80112b0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x3c>
 8011332:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8011334:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8011336:	a804      	add	r0, sp, #16
 8011338:	f015 f8b7 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801133c:	6e22      	ldr	r2, [r4, #96]	; 0x60
 801133e:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8011340:	a804      	add	r0, sp, #16
 8011342:	f015 f8b2 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011346:	6ee5      	ldr	r5, [r4, #108]	; 0x6c
 8011348:	f1c5 05b4 	rsb	r5, r5, #180	; 0xb4
 801134c:	2d00      	cmp	r5, #0
 801134e:	dd31      	ble.n	80113b4 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x140>
 8011350:	eb05 0806 	add.w	r8, r5, r6
 8011354:	4640      	mov	r0, r8
 8011356:	f7ff fdcd 	bl	8010ef4 <_ZN8touchgfx7CWRUtil4sineEi>
 801135a:	a902      	add	r1, sp, #8
 801135c:	9002      	str	r0, [sp, #8]
 801135e:	a801      	add	r0, sp, #4
 8011360:	f7ff fcb0 	bl	8010cc4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 8011364:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8011366:	1847      	adds	r7, r0, r1
 8011368:	f1c8 005a 	rsb	r0, r8, #90	; 0x5a
 801136c:	f7ff fdc2 	bl	8010ef4 <_ZN8touchgfx7CWRUtil4sineEi>
 8011370:	a903      	add	r1, sp, #12
 8011372:	9003      	str	r0, [sp, #12]
 8011374:	a801      	add	r0, sp, #4
 8011376:	f7ff fca5 	bl	8010cc4 <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 801137a:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801137c:	4639      	mov	r1, r7
 801137e:	1a12      	subs	r2, r2, r0
 8011380:	a804      	add	r0, sp, #16
 8011382:	f015 f892 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 8011386:	6ee3      	ldr	r3, [r4, #108]	; 0x6c
 8011388:	1aed      	subs	r5, r5, r3
 801138a:	e7df      	b.n	801134c <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0xd8>
 801138c:	6d62      	ldr	r2, [r4, #84]	; 0x54
 801138e:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8011390:	a804      	add	r0, sp, #16
 8011392:	f015 f83d 	bl	8026410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 8011396:	6da2      	ldr	r2, [r4, #88]	; 0x58
 8011398:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 801139a:	a804      	add	r0, sp, #16
 801139c:	f015 f885 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80113a0:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80113a2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80113a4:	a804      	add	r0, sp, #16
 80113a6:	f015 f880 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80113aa:	6e22      	ldr	r2, [r4, #96]	; 0x60
 80113ac:	6d21      	ldr	r1, [r4, #80]	; 0x50
 80113ae:	a804      	add	r0, sp, #16
 80113b0:	f015 f87b 	bl	80264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 80113b4:	21ff      	movs	r1, #255	; 0xff
 80113b6:	a804      	add	r0, sp, #16
 80113b8:	f014 ff66 	bl	8026288 <_ZN8touchgfx6Canvas6renderEh>
 80113bc:	4b04      	ldr	r3, [pc, #16]	; (80113d0 <_ZNK8touchgfx4Line16drawCanvasWidgetERKNS_4RectE+0x15c>)
 80113be:	9304      	str	r3, [sp, #16]
 80113c0:	4604      	mov	r4, r0
 80113c2:	a80c      	add	r0, sp, #48	; 0x30
 80113c4:	f001 f9d6 	bl	8012774 <_ZN8touchgfx7OutlineD1Ev>
 80113c8:	4620      	mov	r0, r4
 80113ca:	b020      	add	sp, #128	; 0x80
 80113cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80113d0:	0802aa34 	.word	0x0802aa34

080113d4 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 80113d4:	b508      	push	{r3, lr}
 80113d6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80113da:	b10b      	cbz	r3, 80113e0 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 80113dc:	f7f0 fc49 	bl	8001c72 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 80113e0:	bd08      	pop	{r3, pc}

080113e2 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 80113e2:	6803      	ldr	r3, [r0, #0]
 80113e4:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 80113e8:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80113ea:	4718      	bx	r3

080113ec <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 80113ec:	4770      	bx	lr

080113ee <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 80113ee:	b510      	push	{r4, lr}
 80113f0:	212c      	movs	r1, #44	; 0x2c
 80113f2:	4604      	mov	r4, r0
 80113f4:	f015 f8ec 	bl	80265d0 <_ZdlPvj>
 80113f8:	4620      	mov	r0, r4
 80113fa:	bd10      	pop	{r4, pc}

080113fc <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 80113fc:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 8011400:	2bff      	cmp	r3, #255	; 0xff
 8011402:	b510      	push	{r4, lr}
 8011404:	d104      	bne.n	8011410 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 8011406:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 8011408:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801140c:	429a      	cmp	r2, r3
 801140e:	d105      	bne.n	801141c <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 8011410:	2300      	movs	r3, #0
 8011412:	8003      	strh	r3, [r0, #0]
 8011414:	8043      	strh	r3, [r0, #2]
 8011416:	8083      	strh	r3, [r0, #4]
 8011418:	80c3      	strh	r3, [r0, #6]
 801141a:	bd10      	pop	{r4, pc}
 801141c:	2300      	movs	r3, #0
 801141e:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8011422:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 8011426:	8003      	strh	r3, [r0, #0]
 8011428:	8043      	strh	r3, [r0, #2]
 801142a:	8084      	strh	r4, [r0, #4]
 801142c:	80c2      	strh	r2, [r0, #6]
 801142e:	e7f4      	b.n	801141a <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

08011430 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 8011430:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011434:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8011438:	b087      	sub	sp, #28
 801143a:	4604      	mov	r4, r0
 801143c:	4689      	mov	r9, r1
 801143e:	b363      	cbz	r3, 801149a <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 8011440:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 8011442:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011446:	429a      	cmp	r2, r3
 8011448:	d027      	beq.n	801149a <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 801144a:	ad06      	add	r5, sp, #24
 801144c:	2700      	movs	r7, #0
 801144e:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 8011452:	4628      	mov	r0, r5
 8011454:	f007 f93a 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011458:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801145c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8011460:	6823      	ldr	r3, [r4, #0]
 8011462:	f8ad 0014 	strh.w	r0, [sp, #20]
 8011466:	a904      	add	r1, sp, #16
 8011468:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801146a:	9704      	str	r7, [sp, #16]
 801146c:	4620      	mov	r0, r4
 801146e:	4798      	blx	r3
 8011470:	f7f3 f920 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8011474:	6803      	ldr	r3, [r0, #0]
 8011476:	4606      	mov	r6, r0
 8011478:	f8d3 800c 	ldr.w	r8, [r3, #12]
 801147c:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 801147e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011482:	4628      	mov	r0, r5
 8011484:	f007 fa0e 	bl	80188a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011488:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801148c:	9300      	str	r3, [sp, #0]
 801148e:	4601      	mov	r1, r0
 8011490:	9701      	str	r7, [sp, #4]
 8011492:	464b      	mov	r3, r9
 8011494:	aa04      	add	r2, sp, #16
 8011496:	4630      	mov	r0, r6
 8011498:	47c0      	blx	r8
 801149a:	b007      	add	sp, #28
 801149c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

080114a0 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 80114a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80114a2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80114a6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80114aa:	6803      	ldr	r3, [r0, #0]
 80114ac:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 80114b0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80114b4:	460d      	mov	r5, r1
 80114b6:	2100      	movs	r1, #0
 80114b8:	4604      	mov	r4, r0
 80114ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80114bc:	9100      	str	r1, [sp, #0]
 80114be:	4669      	mov	r1, sp
 80114c0:	4798      	blx	r3
 80114c2:	4621      	mov	r1, r4
 80114c4:	a802      	add	r0, sp, #8
 80114c6:	f004 fe73 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80114ca:	f7f3 f8f3 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80114ce:	6803      	ldr	r3, [r0, #0]
 80114d0:	aa02      	add	r2, sp, #8
 80114d2:	695e      	ldr	r6, [r3, #20]
 80114d4:	4669      	mov	r1, sp
 80114d6:	462b      	mov	r3, r5
 80114d8:	47b0      	blx	r6
 80114da:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80114de:	2800      	cmp	r0, #0
 80114e0:	bf08      	it	eq
 80114e2:	461d      	moveq	r5, r3
 80114e4:	84e5      	strh	r5, [r4, #38]	; 0x26
 80114e6:	b004      	add	sp, #16
 80114e8:	bd70      	pop	{r4, r5, r6, pc}
	...

080114ec <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 80114ec:	2200      	movs	r2, #0
 80114ee:	8082      	strh	r2, [r0, #4]
 80114f0:	80c2      	strh	r2, [r0, #6]
 80114f2:	8102      	strh	r2, [r0, #8]
 80114f4:	8142      	strh	r2, [r0, #10]
 80114f6:	8182      	strh	r2, [r0, #12]
 80114f8:	81c2      	strh	r2, [r0, #14]
 80114fa:	8202      	strh	r2, [r0, #16]
 80114fc:	8242      	strh	r2, [r0, #18]
 80114fe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8011502:	61c2      	str	r2, [r0, #28]
 8011504:	8402      	strh	r2, [r0, #32]
 8011506:	8442      	strh	r2, [r0, #34]	; 0x22
 8011508:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 801150c:	2201      	movs	r2, #1
 801150e:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 8011512:	4a04      	ldr	r2, [pc, #16]	; (8011524 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 8011514:	6002      	str	r2, [r0, #0]
 8011516:	f64f 72ff 	movw	r2, #65535	; 0xffff
 801151a:	84c2      	strh	r2, [r0, #38]	; 0x26
 801151c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 8011520:	4770      	bx	lr
 8011522:	bf00      	nop
 8011524:	0802a224 	.word	0x0802a224

08011528 <_ZNK8touchgfx5Image17invalidateContentEv>:
 8011528:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801152c:	b12a      	cbz	r2, 801153a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801152e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8011532:	b112      	cbz	r2, 801153a <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 8011534:	6803      	ldr	r3, [r0, #0]
 8011536:	695b      	ldr	r3, [r3, #20]
 8011538:	4718      	bx	r3
 801153a:	4770      	bx	lr

0801153c <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 801153c:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 8011540:	4770      	bx	lr

08011542 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 8011542:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 8011546:	4770      	bx	lr

08011548 <_ZN8touchgfx13ScalableImageD1Ev>:
 8011548:	4770      	bx	lr

0801154a <_ZN8touchgfx13ScalableImageD0Ev>:
 801154a:	b510      	push	{r4, lr}
 801154c:	212c      	movs	r1, #44	; 0x2c
 801154e:	4604      	mov	r4, r0
 8011550:	f015 f83e 	bl	80265d0 <_ZdlPvj>
 8011554:	4620      	mov	r0, r4
 8011556:	bd10      	pop	{r4, pc}

08011558 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 8011558:	b5f0      	push	{r4, r5, r6, r7, lr}
 801155a:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801155e:	2bff      	cmp	r3, #255	; 0xff
 8011560:	b085      	sub	sp, #20
 8011562:	4604      	mov	r4, r0
 8011564:	460d      	mov	r5, r1
 8011566:	d128      	bne.n	80115ba <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011568:	f101 0626 	add.w	r6, r1, #38	; 0x26
 801156c:	4631      	mov	r1, r6
 801156e:	4668      	mov	r0, sp
 8011570:	f007 f914 	bl	801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8011574:	4630      	mov	r0, r6
 8011576:	f9bd 7004 	ldrsh.w	r7, [sp, #4]
 801157a:	f007 f8a7 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801157e:	4287      	cmp	r7, r0
 8011580:	d11b      	bne.n	80115ba <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011582:	4630      	mov	r0, r6
 8011584:	f9bd 7006 	ldrsh.w	r7, [sp, #6]
 8011588:	f007 f8d4 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801158c:	4287      	cmp	r7, r0
 801158e:	d114      	bne.n	80115ba <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x62>
 8011590:	f9b5 300a 	ldrsh.w	r3, [r5, #10]
 8011594:	f8ad 300e 	strh.w	r3, [sp, #14]
 8011598:	2100      	movs	r1, #0
 801159a:	466b      	mov	r3, sp
 801159c:	9102      	str	r1, [sp, #8]
 801159e:	cb03      	ldmia	r3!, {r0, r1}
 80115a0:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 80115a4:	6020      	str	r0, [r4, #0]
 80115a6:	6061      	str	r1, [r4, #4]
 80115a8:	4620      	mov	r0, r4
 80115aa:	4619      	mov	r1, r3
 80115ac:	f8ad 200c 	strh.w	r2, [sp, #12]
 80115b0:	f7fe fa64 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 80115b4:	4620      	mov	r0, r4
 80115b6:	b005      	add	sp, #20
 80115b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80115ba:	2300      	movs	r3, #0
 80115bc:	8023      	strh	r3, [r4, #0]
 80115be:	8063      	strh	r3, [r4, #2]
 80115c0:	80a3      	strh	r3, [r4, #4]
 80115c2:	80e3      	strh	r3, [r4, #6]
 80115c4:	e7f6      	b.n	80115b4 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x5c>
	...

080115c8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 80115c8:	b538      	push	{r3, r4, r5, lr}
 80115ca:	2300      	movs	r3, #0
 80115cc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80115d0:	8083      	strh	r3, [r0, #4]
 80115d2:	80c3      	strh	r3, [r0, #6]
 80115d4:	8103      	strh	r3, [r0, #8]
 80115d6:	8143      	strh	r3, [r0, #10]
 80115d8:	8183      	strh	r3, [r0, #12]
 80115da:	81c3      	strh	r3, [r0, #14]
 80115dc:	8203      	strh	r3, [r0, #16]
 80115de:	8243      	strh	r3, [r0, #18]
 80115e0:	61c3      	str	r3, [r0, #28]
 80115e2:	8403      	strh	r3, [r0, #32]
 80115e4:	8443      	strh	r3, [r0, #34]	; 0x22
 80115e6:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 80115ea:	2501      	movs	r5, #1
 80115ec:	4b08      	ldr	r3, [pc, #32]	; (8011610 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 80115ee:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 80115f2:	6003      	str	r3, [r0, #0]
 80115f4:	880b      	ldrh	r3, [r1, #0]
 80115f6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80115f8:	23ff      	movs	r3, #255	; 0xff
 80115fa:	4604      	mov	r4, r0
 80115fc:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8011600:	f000 ff52 	bl	80124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8011604:	4b03      	ldr	r3, [pc, #12]	; (8011614 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 8011606:	6023      	str	r3, [r4, #0]
 8011608:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 801160c:	4620      	mov	r0, r4
 801160e:	bd38      	pop	{r3, r4, r5, pc}
 8011610:	0802a4dc 	.word	0x0802a4dc
 8011614:	0802a294 	.word	0x0802a294

08011618 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 8011618:	4603      	mov	r3, r0
 801161a:	3026      	adds	r0, #38	; 0x26
 801161c:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 8011620:	b90b      	cbnz	r3, 8011626 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 8011622:	f004 be69 	b.w	80162f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 8011626:	f004 be77 	b.w	8016318 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0801162c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 801162c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011630:	4604      	mov	r4, r0
 8011632:	b0b3      	sub	sp, #204	; 0xcc
 8011634:	469b      	mov	fp, r3
 8011636:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801163a:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
 801163e:	f8ad 304a 	strh.w	r3, [sp, #74]	; 0x4a
 8011642:	ab11      	add	r3, sp, #68	; 0x44
 8011644:	2500      	movs	r5, #0
 8011646:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 801164a:	4618      	mov	r0, r3
 801164c:	9206      	str	r2, [sp, #24]
 801164e:	9511      	str	r5, [sp, #68]	; 0x44
 8011650:	9307      	str	r3, [sp, #28]
 8011652:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 8011656:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 801165a:	f7fe fa0f 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801165e:	9b07      	ldr	r3, [sp, #28]
 8011660:	e893 0003 	ldmia.w	r3, {r0, r1}
 8011664:	ad13      	add	r5, sp, #76	; 0x4c
 8011666:	e885 0003 	stmia.w	r5, {r0, r1}
 801166a:	6821      	ldr	r1, [r4, #0]
 801166c:	4620      	mov	r0, r4
 801166e:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8011670:	4629      	mov	r1, r5
 8011672:	47b0      	blx	r6
 8011674:	4621      	mov	r1, r4
 8011676:	a815      	add	r0, sp, #84	; 0x54
 8011678:	f004 fd9a 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801167c:	a815      	add	r0, sp, #84	; 0x54
 801167e:	f003 fa5f 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011682:	9b07      	ldr	r3, [sp, #28]
 8011684:	1d26      	adds	r6, r4, #4
 8011686:	4618      	mov	r0, r3
 8011688:	4631      	mov	r1, r6
 801168a:	f003 fa9d 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801168e:	4628      	mov	r0, r5
 8011690:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8011694:	f003 fa54 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011698:	4628      	mov	r0, r5
 801169a:	f007 f903 	bl	80188a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801169e:	9007      	str	r0, [sp, #28]
 80116a0:	2800      	cmp	r0, #0
 80116a2:	f000 80ce 	beq.w	8011842 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x216>
 80116a6:	f8db 200c 	ldr.w	r2, [fp, #12]
 80116aa:	920c      	str	r2, [sp, #48]	; 0x30
 80116ac:	f8da 2000 	ldr.w	r2, [sl]
 80116b0:	f8db 1000 	ldr.w	r1, [fp]
 80116b4:	920d      	str	r2, [sp, #52]	; 0x34
 80116b6:	f8da 2004 	ldr.w	r2, [sl, #4]
 80116ba:	9109      	str	r1, [sp, #36]	; 0x24
 80116bc:	920e      	str	r2, [sp, #56]	; 0x38
 80116be:	f8db 1004 	ldr.w	r1, [fp, #4]
 80116c2:	f8da 2008 	ldr.w	r2, [sl, #8]
 80116c6:	910a      	str	r1, [sp, #40]	; 0x28
 80116c8:	920f      	str	r2, [sp, #60]	; 0x3c
 80116ca:	f8db 1008 	ldr.w	r1, [fp, #8]
 80116ce:	f8da 200c 	ldr.w	r2, [sl, #12]
 80116d2:	910b      	str	r1, [sp, #44]	; 0x2c
 80116d4:	9210      	str	r2, [sp, #64]	; 0x40
 80116d6:	a90d      	add	r1, sp, #52	; 0x34
 80116d8:	4632      	mov	r2, r6
 80116da:	a809      	add	r0, sp, #36	; 0x24
 80116dc:	f003 fa58 	bl	8014b90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116e0:	4632      	mov	r2, r6
 80116e2:	a90e      	add	r1, sp, #56	; 0x38
 80116e4:	a80a      	add	r0, sp, #40	; 0x28
 80116e6:	f003 fa53 	bl	8014b90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116ea:	4632      	mov	r2, r6
 80116ec:	a90f      	add	r1, sp, #60	; 0x3c
 80116ee:	a80b      	add	r0, sp, #44	; 0x2c
 80116f0:	f003 fa4e 	bl	8014b90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116f4:	4632      	mov	r2, r6
 80116f6:	a910      	add	r1, sp, #64	; 0x40
 80116f8:	a80c      	add	r0, sp, #48	; 0x30
 80116fa:	f003 fa49 	bl	8014b90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80116fe:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8011702:	ed97 3a00 	vldr	s6, [r7]
 8011706:	edd7 4a01 	vldr	s9, [r7, #4]
 801170a:	ed99 2a00 	vldr	s4, [r9]
 801170e:	edd8 2a00 	vldr	s5, [r8]
 8011712:	edd9 3a01 	vldr	s7, [r9, #4]
 8011716:	ed98 4a01 	vldr	s8, [r8, #4]
 801171a:	ed99 5a02 	vldr	s10, [r9, #8]
 801171e:	edd8 5a02 	vldr	s11, [r8, #8]
 8011722:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8011726:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 801172a:	ed8d 2a20 	vstr	s4, [sp, #128]	; 0x80
 801172e:	eef0 6a67 	vmov.f32	s13, s15
 8011732:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8011736:	edcd 2a21 	vstr	s5, [sp, #132]	; 0x84
 801173a:	eeb0 7a67 	vmov.f32	s14, s15
 801173e:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8011742:	ed8d 3a22 	vstr	s6, [sp, #136]	; 0x88
 8011746:	eeb0 6a67 	vmov.f32	s12, s15
 801174a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801174e:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8011752:	edcd 3a25 	vstr	s7, [sp, #148]	; 0x94
 8011756:	ee16 6a10 	vmov	r6, s12
 801175a:	eeb0 6a67 	vmov.f32	s12, s15
 801175e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8011762:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8011766:	ed8d 4a26 	vstr	s8, [sp, #152]	; 0x98
 801176a:	ee16 0a10 	vmov	r0, s12
 801176e:	eeb0 6a67 	vmov.f32	s12, s15
 8011772:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8011776:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 801177a:	edcd 4a27 	vstr	s9, [sp, #156]	; 0x9c
 801177e:	ee16 1a10 	vmov	r1, s12
 8011782:	eeb0 6a67 	vmov.f32	s12, s15
 8011786:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 801178a:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 801178e:	ee16 2a10 	vmov	r2, s12
 8011792:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8011796:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 801179a:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801179e:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 80117a2:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 80117a6:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 80117aa:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 80117ae:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 80117b2:	f8d7 a008 	ldr.w	sl, [r7, #8]
 80117b6:	9624      	str	r6, [sp, #144]	; 0x90
 80117b8:	68ff      	ldr	r7, [r7, #12]
 80117ba:	ed8d 5a2a 	vstr	s10, [sp, #168]	; 0xa8
 80117be:	922d      	str	r2, [sp, #180]	; 0xb4
 80117c0:	4a21      	ldr	r2, [pc, #132]	; (8011848 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x21c>)
 80117c2:	9b06      	ldr	r3, [sp, #24]
 80117c4:	8812      	ldrh	r2, [r2, #0]
 80117c6:	9317      	str	r3, [sp, #92]	; 0x5c
 80117c8:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 80117cc:	9b07      	ldr	r3, [sp, #28]
 80117ce:	9218      	str	r2, [sp, #96]	; 0x60
 80117d0:	4628      	mov	r0, r5
 80117d2:	9319      	str	r3, [sp, #100]	; 0x64
 80117d4:	edcd 5a2b 	vstr	s11, [sp, #172]	; 0xac
 80117d8:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 80117dc:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 80117e0:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 80117e4:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 80117e8:	9731      	str	r7, [sp, #196]	; 0xc4
 80117ea:	f007 f88b 	bl	8018904 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 80117ee:	901a      	str	r0, [sp, #104]	; 0x68
 80117f0:	4628      	mov	r0, r5
 80117f2:	f006 ff6b 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80117f6:	901b      	str	r0, [sp, #108]	; 0x6c
 80117f8:	4628      	mov	r0, r5
 80117fa:	f006 ff9b 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80117fe:	901c      	str	r0, [sp, #112]	; 0x70
 8011800:	4628      	mov	r0, r5
 8011802:	f006 ff63 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011806:	4b11      	ldr	r3, [pc, #68]	; (801184c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x220>)
 8011808:	901d      	str	r0, [sp, #116]	; 0x74
 801180a:	681b      	ldr	r3, [r3, #0]
 801180c:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011810:	b10a      	cbz	r2, 8011816 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ea>
 8011812:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8011814:	b905      	cbnz	r5, 8011818 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1ec>
 8011816:	689d      	ldr	r5, [r3, #8]
 8011818:	682b      	ldr	r3, [r5, #0]
 801181a:	4620      	mov	r0, r4
 801181c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 801181e:	f7ff fefb 	bl	8011618 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 8011822:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011826:	9304      	str	r3, [sp, #16]
 8011828:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 801182c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8011830:	ab13      	add	r3, sp, #76	; 0x4c
 8011832:	9301      	str	r3, [sp, #4]
 8011834:	ab15      	add	r3, sp, #84	; 0x54
 8011836:	9300      	str	r3, [sp, #0]
 8011838:	aa1e      	add	r2, sp, #120	; 0x78
 801183a:	ab19      	add	r3, sp, #100	; 0x64
 801183c:	a917      	add	r1, sp, #92	; 0x5c
 801183e:	4628      	mov	r0, r5
 8011840:	47b0      	blx	r6
 8011842:	b033      	add	sp, #204	; 0xcc
 8011844:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011848:	2000ef16 	.word	0x2000ef16
 801184c:	2000ef1c 	.word	0x2000ef1c

08011850 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 8011850:	b570      	push	{r4, r5, r6, lr}
 8011852:	ed2d 8b04 	vpush	{d8-d9}
 8011856:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 801185a:	b098      	sub	sp, #96	; 0x60
 801185c:	4604      	mov	r4, r0
 801185e:	460e      	mov	r6, r1
 8011860:	2b00      	cmp	r3, #0
 8011862:	d065      	beq.n	8011930 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 8011864:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011868:	ed9f 8a38 	vldr	s16, [pc, #224]	; 801194c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 801186c:	ee09 3a10 	vmov	s18, r3
 8011870:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011874:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8011878:	ee08 3a90 	vmov	s17, r3
 801187c:	4628      	mov	r0, r5
 801187e:	4b34      	ldr	r3, [pc, #208]	; (8011950 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 8011880:	930c      	str	r3, [sp, #48]	; 0x30
 8011882:	930d      	str	r3, [sp, #52]	; 0x34
 8011884:	930e      	str	r3, [sp, #56]	; 0x38
 8011886:	930f      	str	r3, [sp, #60]	; 0x3c
 8011888:	f006 ff20 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801188c:	ee07 0a90 	vmov	s15, r0
 8011890:	4628      	mov	r0, r5
 8011892:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 8011896:	f006 ff4d 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801189a:	4b2e      	ldr	r3, [pc, #184]	; (8011954 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 801189c:	781b      	ldrb	r3, [r3, #0]
 801189e:	ee07 0a90 	vmov	s15, r0
 80118a2:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 80118a6:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 80118aa:	2b01      	cmp	r3, #1
 80118ac:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80118b0:	ee39 9a08 	vadd.f32	s18, s18, s16
 80118b4:	ee78 8a88 	vadd.f32	s17, s17, s16
 80118b8:	eef0 7a48 	vmov.f32	s15, s16
 80118bc:	d13c      	bne.n	8011938 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 80118be:	eef0 6a69 	vmov.f32	s13, s19
 80118c2:	eeb0 6a47 	vmov.f32	s12, s14
 80118c6:	eef0 5a47 	vmov.f32	s11, s14
 80118ca:	ee19 3a90 	vmov	r3, s19
 80118ce:	eeb0 7a48 	vmov.f32	s14, s16
 80118d2:	eef0 9a48 	vmov.f32	s19, s16
 80118d6:	9314      	str	r3, [sp, #80]	; 0x50
 80118d8:	ab14      	add	r3, sp, #80	; 0x50
 80118da:	9303      	str	r3, [sp, #12]
 80118dc:	ab10      	add	r3, sp, #64	; 0x40
 80118de:	9302      	str	r3, [sp, #8]
 80118e0:	ab0c      	add	r3, sp, #48	; 0x30
 80118e2:	9301      	str	r3, [sp, #4]
 80118e4:	ab08      	add	r3, sp, #32
 80118e6:	9300      	str	r3, [sp, #0]
 80118e8:	2200      	movs	r2, #0
 80118ea:	ab04      	add	r3, sp, #16
 80118ec:	4631      	mov	r1, r6
 80118ee:	4620      	mov	r0, r4
 80118f0:	edcd 7a04 	vstr	s15, [sp, #16]
 80118f4:	ed8d 9a05 	vstr	s18, [sp, #20]
 80118f8:	ed8d 9a06 	vstr	s18, [sp, #24]
 80118fc:	edcd 7a07 	vstr	s15, [sp, #28]
 8011900:	edcd 7a08 	vstr	s15, [sp, #32]
 8011904:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 8011908:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 801190c:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 8011910:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8011914:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 8011918:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 801191c:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 8011920:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8011924:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 8011928:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 801192c:	f7ff fe7e 	bl	801162c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8011930:	b018      	add	sp, #96	; 0x60
 8011932:	ecbd 8b04 	vpop	{d8-d9}
 8011936:	bd70      	pop	{r4, r5, r6, pc}
 8011938:	eef0 6a47 	vmov.f32	s13, s14
 801193c:	eef0 5a69 	vmov.f32	s11, s19
 8011940:	eeb0 6a48 	vmov.f32	s12, s16
 8011944:	ee18 3a10 	vmov	r3, s16
 8011948:	e7c5      	b.n	80118d6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 801194a:	bf00      	nop
 801194c:	00000000 	.word	0x00000000
 8011950:	42c80000 	.word	0x42c80000
 8011954:	2000ef14 	.word	0x2000ef14

08011958 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011958:	2000      	movs	r0, #0
 801195a:	4770      	bx	lr

0801195c <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801195c:	4b07      	ldr	r3, [pc, #28]	; (801197c <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801195e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011960:	881b      	ldrh	r3, [r3, #0]
 8011962:	4293      	cmp	r3, r2
 8011964:	bf81      	itttt	hi
 8011966:	4b06      	ldrhi	r3, [pc, #24]	; (8011980 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011968:	681b      	ldrhi	r3, [r3, #0]
 801196a:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801196e:	7858      	ldrbhi	r0, [r3, #1]
 8011970:	bf8c      	ite	hi
 8011972:	f000 0003 	andhi.w	r0, r0, #3
 8011976:	2000      	movls	r0, #0
 8011978:	4770      	bx	lr
 801197a:	bf00      	nop
 801197c:	2000ef78 	.word	0x2000ef78
 8011980:	2000ef74 	.word	0x2000ef74

08011984 <_ZN8touchgfx8TextAreaD1Ev>:
 8011984:	4770      	bx	lr
	...

08011988 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011988:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801198c:	4b10      	ldr	r3, [pc, #64]	; (80119d0 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801198e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011990:	881b      	ldrh	r3, [r3, #0]
 8011992:	428b      	cmp	r3, r1
 8011994:	4604      	mov	r4, r0
 8011996:	d918      	bls.n	80119ca <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011998:	6803      	ldr	r3, [r0, #0]
 801199a:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801199c:	4b0d      	ldr	r3, [pc, #52]	; (80119d4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801199e:	6818      	ldr	r0, [r3, #0]
 80119a0:	f7f6 fbe0 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80119a4:	6823      	ldr	r3, [r4, #0]
 80119a6:	4606      	mov	r6, r0
 80119a8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80119aa:	4620      	mov	r0, r4
 80119ac:	4798      	blx	r3
 80119ae:	6823      	ldr	r3, [r4, #0]
 80119b0:	4607      	mov	r7, r0
 80119b2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80119b6:	4620      	mov	r0, r4
 80119b8:	4798      	blx	r3
 80119ba:	463a      	mov	r2, r7
 80119bc:	4603      	mov	r3, r0
 80119be:	4631      	mov	r1, r6
 80119c0:	4620      	mov	r0, r4
 80119c2:	46ac      	mov	ip, r5
 80119c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80119c8:	4760      	bx	ip
 80119ca:	2000      	movs	r0, #0
 80119cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80119d0:	2000ef78 	.word	0x2000ef78
 80119d4:	2000ef80 	.word	0x2000ef80

080119d8 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 80119d8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80119dc:	4b17      	ldr	r3, [pc, #92]	; (8011a3c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 80119de:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 80119e0:	881b      	ldrh	r3, [r3, #0]
 80119e2:	428b      	cmp	r3, r1
 80119e4:	4604      	mov	r4, r0
 80119e6:	d926      	bls.n	8011a36 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 80119e8:	4b15      	ldr	r3, [pc, #84]	; (8011a40 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 80119ea:	681b      	ldr	r3, [r3, #0]
 80119ec:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 80119f0:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 80119f4:	4b13      	ldr	r3, [pc, #76]	; (8011a44 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 80119f6:	7855      	ldrb	r5, [r2, #1]
 80119f8:	681b      	ldr	r3, [r3, #0]
 80119fa:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 80119fe:	6833      	ldr	r3, [r6, #0]
 8011a00:	69df      	ldr	r7, [r3, #28]
 8011a02:	4b11      	ldr	r3, [pc, #68]	; (8011a48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011a04:	6818      	ldr	r0, [r3, #0]
 8011a06:	f7f6 fbad 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011a0a:	6823      	ldr	r3, [r4, #0]
 8011a0c:	4680      	mov	r8, r0
 8011a0e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011a10:	4620      	mov	r0, r4
 8011a12:	4798      	blx	r3
 8011a14:	6823      	ldr	r3, [r4, #0]
 8011a16:	4681      	mov	r9, r0
 8011a18:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011a1c:	4620      	mov	r0, r4
 8011a1e:	4798      	blx	r3
 8011a20:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011a24:	9000      	str	r0, [sp, #0]
 8011a26:	464b      	mov	r3, r9
 8011a28:	4642      	mov	r2, r8
 8011a2a:	4629      	mov	r1, r5
 8011a2c:	4630      	mov	r0, r6
 8011a2e:	47b8      	blx	r7
 8011a30:	b003      	add	sp, #12
 8011a32:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011a36:	2000      	movs	r0, #0
 8011a38:	e7fa      	b.n	8011a30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011a3a:	bf00      	nop
 8011a3c:	2000ef78 	.word	0x2000ef78
 8011a40:	2000ef74 	.word	0x2000ef74
 8011a44:	2000ef7c 	.word	0x2000ef7c
 8011a48:	2000ef80 	.word	0x2000ef80

08011a4c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011a4c:	b40e      	push	{r1, r2, r3}
 8011a4e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011a52:	4b2f      	ldr	r3, [pc, #188]	; (8011b10 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011a54:	881a      	ldrh	r2, [r3, #0]
 8011a56:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 8011a58:	429a      	cmp	r2, r3
 8011a5a:	b09d      	sub	sp, #116	; 0x74
 8011a5c:	4604      	mov	r4, r0
 8011a5e:	d954      	bls.n	8011b0a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011a60:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 8011b14 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011a64:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8011b18 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011a68:	aa26      	add	r2, sp, #152	; 0x98
 8011a6a:	9202      	str	r2, [sp, #8]
 8011a6c:	f8d9 2000 	ldr.w	r2, [r9]
 8011a70:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011a74:	f8d8 3000 	ldr.w	r3, [r8]
 8011a78:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011a7c:	682b      	ldr	r3, [r5, #0]
 8011a7e:	4628      	mov	r0, r5
 8011a80:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011a82:	4798      	blx	r3
 8011a84:	b207      	sxth	r7, r0
 8011a86:	4606      	mov	r6, r0
 8011a88:	a803      	add	r0, sp, #12
 8011a8a:	f005 f89f 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8011a8e:	682b      	ldr	r3, [r5, #0]
 8011a90:	4628      	mov	r0, r5
 8011a92:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011a94:	4798      	blx	r3
 8011a96:	682b      	ldr	r3, [r5, #0]
 8011a98:	4682      	mov	sl, r0
 8011a9a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011a9c:	4628      	mov	r0, r5
 8011a9e:	4798      	blx	r3
 8011aa0:	4653      	mov	r3, sl
 8011aa2:	9000      	str	r0, [sp, #0]
 8011aa4:	9a02      	ldr	r2, [sp, #8]
 8011aa6:	9925      	ldr	r1, [sp, #148]	; 0x94
 8011aa8:	a803      	add	r0, sp, #12
 8011aaa:	f005 f8ea 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011aae:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011ab0:	f8d9 3000 	ldr.w	r3, [r9]
 8011ab4:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 8011ab8:	8925      	ldrh	r5, [r4, #8]
 8011aba:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011abe:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011ac2:	eba5 050c 	sub.w	r5, r5, ip
 8011ac6:	784a      	ldrb	r2, [r1, #1]
 8011ac8:	f8d8 3000 	ldr.w	r3, [r8]
 8011acc:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 8011ad0:	b22d      	sxth	r5, r5
 8011ad2:	9500      	str	r5, [sp, #0]
 8011ad4:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011ad8:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011adc:	a803      	add	r0, sp, #12
 8011ade:	f002 fd35 	bl	801454c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011ae2:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 8011ae6:	18b9      	adds	r1, r7, r2
 8011ae8:	2900      	cmp	r1, #0
 8011aea:	b203      	sxth	r3, r0
 8011aec:	dd0b      	ble.n	8011b06 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011aee:	3b01      	subs	r3, #1
 8011af0:	fb13 f302 	smulbb	r3, r3, r2
 8011af4:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011af8:	b21f      	sxth	r7, r3
 8011afa:	4638      	mov	r0, r7
 8011afc:	b01d      	add	sp, #116	; 0x74
 8011afe:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011b02:	b003      	add	sp, #12
 8011b04:	4770      	bx	lr
 8011b06:	2b00      	cmp	r3, #0
 8011b08:	dcf7      	bgt.n	8011afa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b0a:	2700      	movs	r7, #0
 8011b0c:	e7f5      	b.n	8011afa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011b0e:	bf00      	nop
 8011b10:	2000ef78 	.word	0x2000ef78
 8011b14:	2000ef74 	.word	0x2000ef74
 8011b18:	2000ef7c 	.word	0x2000ef7c

08011b1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011b1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b20:	4bbc      	ldr	r3, [pc, #752]	; (8011e14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011b22:	460c      	mov	r4, r1
 8011b24:	881b      	ldrh	r3, [r3, #0]
 8011b26:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 8011b28:	428b      	cmp	r3, r1
 8011b2a:	b0a9      	sub	sp, #164	; 0xa4
 8011b2c:	4680      	mov	r8, r0
 8011b2e:	d809      	bhi.n	8011b44 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011b30:	2300      	movs	r3, #0
 8011b32:	f04f 32ff 	mov.w	r2, #4294967295
 8011b36:	e9c0 3200 	strd	r3, r2, [r0]
 8011b3a:	6083      	str	r3, [r0, #8]
 8011b3c:	4640      	mov	r0, r8
 8011b3e:	b029      	add	sp, #164	; 0xa4
 8011b40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011b44:	4eb4      	ldr	r6, [pc, #720]	; (8011e18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011b46:	6833      	ldr	r3, [r6, #0]
 8011b48:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011b4c:	4bb3      	ldr	r3, [pc, #716]	; (8011e1c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011b4e:	681b      	ldr	r3, [r3, #0]
 8011b50:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011b54:	4bb2      	ldr	r3, [pc, #712]	; (8011e20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011b56:	6818      	ldr	r0, [r3, #0]
 8011b58:	f7f6 fb04 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011b5c:	682b      	ldr	r3, [r5, #0]
 8011b5e:	4681      	mov	r9, r0
 8011b60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011b62:	4628      	mov	r0, r5
 8011b64:	4798      	blx	r3
 8011b66:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 8011b68:	b203      	sxth	r3, r0
 8011b6a:	4407      	add	r7, r0
 8011b6c:	9304      	str	r3, [sp, #16]
 8011b6e:	b2bb      	uxth	r3, r7
 8011b70:	9303      	str	r3, [sp, #12]
 8011b72:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 8011b76:	4682      	mov	sl, r0
 8011b78:	a80f      	add	r0, sp, #60	; 0x3c
 8011b7a:	2b00      	cmp	r3, #0
 8011b7c:	f040 80a6 	bne.w	8011ccc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011b80:	f005 f824 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8011b84:	682b      	ldr	r3, [r5, #0]
 8011b86:	4628      	mov	r0, r5
 8011b88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011b8a:	4798      	blx	r3
 8011b8c:	682b      	ldr	r3, [r5, #0]
 8011b8e:	4606      	mov	r6, r0
 8011b90:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011b92:	4628      	mov	r0, r5
 8011b94:	4798      	blx	r3
 8011b96:	6823      	ldr	r3, [r4, #0]
 8011b98:	4607      	mov	r7, r0
 8011b9a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	4798      	blx	r3
 8011ba0:	6823      	ldr	r3, [r4, #0]
 8011ba2:	4683      	mov	fp, r0
 8011ba4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011ba8:	4620      	mov	r0, r4
 8011baa:	4798      	blx	r3
 8011bac:	463b      	mov	r3, r7
 8011bae:	e9cd b000 	strd	fp, r0, [sp]
 8011bb2:	4649      	mov	r1, r9
 8011bb4:	4632      	mov	r2, r6
 8011bb6:	a80f      	add	r0, sp, #60	; 0x3c
 8011bb8:	f005 f878 	bl	8016cac <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011bbc:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011bc0:	f8df b254 	ldr.w	fp, [pc, #596]	; 8011e18 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011bc4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011bc8:	f04f 0600 	mov.w	r6, #0
 8011bcc:	bf0c      	ite	eq
 8011bce:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011bd2:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011bd6:	4637      	mov	r7, r6
 8011bd8:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011bda:	f8db 3000 	ldr.w	r3, [fp]
 8011bde:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011be2:	4629      	mov	r1, r5
 8011be4:	785b      	ldrb	r3, [r3, #1]
 8011be6:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011bea:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011bee:	a80f      	add	r0, sp, #60	; 0x3c
 8011bf0:	f002 f9c7 	bl	8013f82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011bf4:	9b03      	ldr	r3, [sp, #12]
 8011bf6:	4286      	cmp	r6, r0
 8011bf8:	bfb8      	it	lt
 8011bfa:	4606      	movlt	r6, r0
 8011bfc:	3701      	adds	r7, #1
 8011bfe:	eba9 0903 	sub.w	r9, r9, r3
 8011c02:	a80f      	add	r0, sp, #60	; 0x3c
 8011c04:	b236      	sxth	r6, r6
 8011c06:	b2bf      	uxth	r7, r7
 8011c08:	fa0f f989 	sxth.w	r9, r9
 8011c0c:	f005 f805 	bl	8016c1a <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011c10:	b918      	cbnz	r0, 8011c1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011c12:	7a2b      	ldrb	r3, [r5, #8]
 8011c14:	444b      	add	r3, r9
 8011c16:	2b00      	cmp	r3, #0
 8011c18:	dcde      	bgt.n	8011bd8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011c1a:	9b03      	ldr	r3, [sp, #12]
 8011c1c:	9a04      	ldr	r2, [sp, #16]
 8011c1e:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011c22:	fb13 f707 	smulbb	r7, r3, r7
 8011c26:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8011c28:	1aff      	subs	r7, r7, r3
 8011c2a:	b2bf      	uxth	r7, r7
 8011c2c:	b23b      	sxth	r3, r7
 8011c2e:	429a      	cmp	r2, r3
 8011c30:	bfa8      	it	ge
 8011c32:	4657      	movge	r7, sl
 8011c34:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011c38:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011c3c:	6823      	ldr	r3, [r4, #0]
 8011c3e:	bf08      	it	eq
 8011c40:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011c44:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011c46:	bf18      	it	ne
 8011c48:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	4798      	blx	r3
 8011c50:	444f      	add	r7, r9
 8011c52:	fa1f f987 	uxth.w	r9, r7
 8011c56:	2801      	cmp	r0, #1
 8011c58:	fa0f f789 	sxth.w	r7, r9
 8011c5c:	b2b3      	uxth	r3, r6
 8011c5e:	f000 80e1 	beq.w	8011e24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011c62:	2802      	cmp	r0, #2
 8011c64:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 8011c68:	f000 80e2 	beq.w	8011e30 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011c6c:	7aea      	ldrb	r2, [r5, #11]
 8011c6e:	7b2d      	ldrb	r5, [r5, #12]
 8011c70:	b236      	sxth	r6, r6
 8011c72:	1ab6      	subs	r6, r6, r2
 8011c74:	442a      	add	r2, r5
 8011c76:	4413      	add	r3, r2
 8011c78:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 8011c7c:	fa1f fa86 	uxth.w	sl, r6
 8011c80:	b29b      	uxth	r3, r3
 8011c82:	2a02      	cmp	r2, #2
 8011c84:	fa0f fb8a 	sxth.w	fp, sl
 8011c88:	b21e      	sxth	r6, r3
 8011c8a:	f000 80d5 	beq.w	8011e38 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011c8e:	2a03      	cmp	r2, #3
 8011c90:	f000 80dd 	beq.w	8011e4e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011c94:	2a01      	cmp	r2, #1
 8011c96:	f040 80e5 	bne.w	8011e64 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011c9a:	8925      	ldrh	r5, [r4, #8]
 8011c9c:	4633      	mov	r3, r6
 8011c9e:	eba5 0909 	sub.w	r9, r5, r9
 8011ca2:	463e      	mov	r6, r7
 8011ca4:	465d      	mov	r5, fp
 8011ca6:	461f      	mov	r7, r3
 8011ca8:	fa0f fb89 	sxth.w	fp, r9
 8011cac:	4b5c      	ldr	r3, [pc, #368]	; (8011e20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011cae:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011cb0:	6818      	ldr	r0, [r3, #0]
 8011cb2:	f7f6 fa57 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011cb6:	f8a8 b000 	strh.w	fp, [r8]
 8011cba:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011cbe:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011cc2:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011cc6:	f8c8 0008 	str.w	r0, [r8, #8]
 8011cca:	e737      	b.n	8011b3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011ccc:	f004 ff7e 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8011cd0:	682b      	ldr	r3, [r5, #0]
 8011cd2:	4628      	mov	r0, r5
 8011cd4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8011cd6:	4798      	blx	r3
 8011cd8:	682b      	ldr	r3, [r5, #0]
 8011cda:	4607      	mov	r7, r0
 8011cdc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011cde:	4628      	mov	r0, r5
 8011ce0:	4798      	blx	r3
 8011ce2:	6823      	ldr	r3, [r4, #0]
 8011ce4:	4683      	mov	fp, r0
 8011ce6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011ce8:	4620      	mov	r0, r4
 8011cea:	4798      	blx	r3
 8011cec:	6822      	ldr	r2, [r4, #0]
 8011cee:	9005      	str	r0, [sp, #20]
 8011cf0:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 8011cf4:	4620      	mov	r0, r4
 8011cf6:	4790      	blx	r2
 8011cf8:	9b05      	ldr	r3, [sp, #20]
 8011cfa:	9001      	str	r0, [sp, #4]
 8011cfc:	463a      	mov	r2, r7
 8011cfe:	4649      	mov	r1, r9
 8011d00:	9300      	str	r3, [sp, #0]
 8011d02:	a80f      	add	r0, sp, #60	; 0x3c
 8011d04:	465b      	mov	r3, fp
 8011d06:	f004 ffd1 	bl	8016cac <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011d0a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8011d0e:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011d12:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011d14:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 8011d18:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8011d1c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8011d20:	bf0a      	itet	eq
 8011d22:	464a      	moveq	r2, r9
 8011d24:	461a      	movne	r2, r3
 8011d26:	4699      	moveq	r9, r3
 8011d28:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 8011d2c:	1ad2      	subs	r2, r2, r3
 8011d2e:	6833      	ldr	r3, [r6, #0]
 8011d30:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 8011d34:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8011d38:	af0f      	add	r7, sp, #60	; 0x3c
 8011d3a:	7859      	ldrb	r1, [r3, #1]
 8011d3c:	9707      	str	r7, [sp, #28]
 8011d3e:	2300      	movs	r3, #0
 8011d40:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8011d44:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011d48:	f88d 1020 	strb.w	r1, [sp, #32]
 8011d4c:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8011d50:	9509      	str	r5, [sp, #36]	; 0x24
 8011d52:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011d56:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011d5a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 8011d5e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011d62:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8011d66:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011d6a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8011d6e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011d72:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011d76:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 8011d7a:	b350      	cbz	r0, 8011dd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d7c:	682b      	ldr	r3, [r5, #0]
 8011d7e:	4628      	mov	r0, r5
 8011d80:	695b      	ldr	r3, [r3, #20]
 8011d82:	4798      	blx	r3
 8011d84:	4607      	mov	r7, r0
 8011d86:	b320      	cbz	r0, 8011dd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d88:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011d8a:	6803      	ldr	r3, [r0, #0]
 8011d8c:	4639      	mov	r1, r7
 8011d8e:	68db      	ldr	r3, [r3, #12]
 8011d90:	4798      	blx	r3
 8011d92:	4606      	mov	r6, r0
 8011d94:	b1e8      	cbz	r0, 8011dd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011d96:	7b43      	ldrb	r3, [r0, #13]
 8011d98:	7a82      	ldrb	r2, [r0, #10]
 8011d9a:	005b      	lsls	r3, r3, #1
 8011d9c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011da0:	4313      	orrs	r3, r2
 8011da2:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8011da6:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 8011daa:	2b06      	cmp	r3, #6
 8011dac:	d111      	bne.n	8011dd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8011dae:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011db0:	6803      	ldr	r3, [r0, #0]
 8011db2:	4632      	mov	r2, r6
 8011db4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011db6:	4639      	mov	r1, r7
 8011db8:	4798      	blx	r3
 8011dba:	7b73      	ldrb	r3, [r6, #13]
 8011dbc:	005b      	lsls	r3, r3, #1
 8011dbe:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8011dc2:	7ab3      	ldrb	r3, [r6, #10]
 8011dc4:	4313      	orrs	r3, r2
 8011dc6:	4418      	add	r0, r3
 8011dc8:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011dcc:	4418      	add	r0, r3
 8011dce:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 8011dd2:	2600      	movs	r6, #0
 8011dd4:	4637      	mov	r7, r6
 8011dd6:	a806      	add	r0, sp, #24
 8011dd8:	f002 fab4 	bl	8014344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011ddc:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 8011de0:	9b03      	ldr	r3, [sp, #12]
 8011de2:	4286      	cmp	r6, r0
 8011de4:	eba9 0903 	sub.w	r9, r9, r3
 8011de8:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 8011dec:	bfb8      	it	lt
 8011dee:	4606      	movlt	r6, r0
 8011df0:	3701      	adds	r7, #1
 8011df2:	b236      	sxth	r6, r6
 8011df4:	b2bf      	uxth	r7, r7
 8011df6:	fa0f f989 	sxth.w	r9, r9
 8011dfa:	2b00      	cmp	r3, #0
 8011dfc:	f43f af0d 	beq.w	8011c1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e00:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 8011e04:	2b00      	cmp	r3, #0
 8011e06:	f47f af08 	bne.w	8011c1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e0a:	7a2b      	ldrb	r3, [r5, #8]
 8011e0c:	444b      	add	r3, r9
 8011e0e:	2b00      	cmp	r3, #0
 8011e10:	dce1      	bgt.n	8011dd6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 8011e12:	e702      	b.n	8011c1a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011e14:	2000ef78 	.word	0x2000ef78
 8011e18:	2000ef74 	.word	0x2000ef74
 8011e1c:	2000ef7c 	.word	0x2000ef7c
 8011e20:	2000ef80 	.word	0x2000ef80
 8011e24:	ebaa 0606 	sub.w	r6, sl, r6
 8011e28:	2002      	movs	r0, #2
 8011e2a:	fb96 f6f0 	sdiv	r6, r6, r0
 8011e2e:	e71d      	b.n	8011c6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e30:	441e      	add	r6, r3
 8011e32:	ebaa 0606 	sub.w	r6, sl, r6
 8011e36:	e719      	b.n	8011c6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8011e38:	8925      	ldrh	r5, [r4, #8]
 8011e3a:	1aed      	subs	r5, r5, r3
 8011e3c:	eba5 050a 	sub.w	r5, r5, sl
 8011e40:	fa0f fb85 	sxth.w	fp, r5
 8011e44:	8965      	ldrh	r5, [r4, #10]
 8011e46:	eba5 0509 	sub.w	r5, r5, r9
 8011e4a:	b22d      	sxth	r5, r5
 8011e4c:	e72e      	b.n	8011cac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e4e:	8965      	ldrh	r5, [r4, #10]
 8011e50:	1aed      	subs	r5, r5, r3
 8011e52:	eba5 050a 	sub.w	r5, r5, sl
 8011e56:	4633      	mov	r3, r6
 8011e58:	b22d      	sxth	r5, r5
 8011e5a:	463e      	mov	r6, r7
 8011e5c:	f04f 0b00 	mov.w	fp, #0
 8011e60:	461f      	mov	r7, r3
 8011e62:	e723      	b.n	8011cac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8011e64:	2500      	movs	r5, #0
 8011e66:	e721      	b.n	8011cac <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

08011e68 <_ZN8touchgfx8TextAreaD0Ev>:
 8011e68:	b510      	push	{r4, lr}
 8011e6a:	2148      	movs	r1, #72	; 0x48
 8011e6c:	4604      	mov	r4, r0
 8011e6e:	f014 fbaf 	bl	80265d0 <_ZdlPvj>
 8011e72:	4620      	mov	r0, r4
 8011e74:	bd10      	pop	{r4, pc}
	...

08011e78 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 8011e78:	b513      	push	{r0, r1, r4, lr}
 8011e7a:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 8011e7e:	4604      	mov	r4, r0
 8011e80:	b1fb      	cbz	r3, 8011ec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e82:	4b16      	ldr	r3, [pc, #88]	; (8011edc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8011e84:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8011e86:	881b      	ldrh	r3, [r3, #0]
 8011e88:	428b      	cmp	r3, r1
 8011e8a:	d91a      	bls.n	8011ec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e8c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8011e90:	2b00      	cmp	r3, #0
 8011e92:	dd16      	ble.n	8011ec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e94:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8011e98:	2b00      	cmp	r3, #0
 8011e9a:	dd12      	ble.n	8011ec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011e9c:	4b10      	ldr	r3, [pc, #64]	; (8011ee0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8011e9e:	6818      	ldr	r0, [r3, #0]
 8011ea0:	f7f6 f960 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011ea4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011ea8:	6822      	ldr	r2, [r4, #0]
 8011eaa:	2b00      	cmp	r3, #0
 8011eac:	db06      	blt.n	8011ebc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011eae:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011eb2:	2b00      	cmp	r3, #0
 8011eb4:	db02      	blt.n	8011ebc <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8011eb6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011eb8:	4298      	cmp	r0, r3
 8011eba:	d004      	beq.n	8011ec6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8011ebc:	6953      	ldr	r3, [r2, #20]
 8011ebe:	4620      	mov	r0, r4
 8011ec0:	4798      	blx	r3
 8011ec2:	b002      	add	sp, #8
 8011ec4:	bd10      	pop	{r4, pc}
 8011ec6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 8011eca:	c903      	ldmia	r1, {r0, r1}
 8011ecc:	466b      	mov	r3, sp
 8011ece:	e883 0003 	stmia.w	r3, {r0, r1}
 8011ed2:	6912      	ldr	r2, [r2, #16]
 8011ed4:	4619      	mov	r1, r3
 8011ed6:	4620      	mov	r0, r4
 8011ed8:	4790      	blx	r2
 8011eda:	e7f2      	b.n	8011ec2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8011edc:	2000ef78 	.word	0x2000ef78
 8011ee0:	2000ef80 	.word	0x2000ef80

08011ee4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 8011ee4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011ee8:	4b44      	ldr	r3, [pc, #272]	; (8011ffc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 8011eea:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8011eec:	881b      	ldrh	r3, [r3, #0]
 8011eee:	4293      	cmp	r3, r2
 8011ef0:	b08e      	sub	sp, #56	; 0x38
 8011ef2:	4604      	mov	r4, r0
 8011ef4:	d97e      	bls.n	8011ff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011ef6:	6808      	ldr	r0, [r1, #0]
 8011ef8:	4d41      	ldr	r5, [pc, #260]	; (8012000 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 8011efa:	6849      	ldr	r1, [r1, #4]
 8011efc:	ab05      	add	r3, sp, #20
 8011efe:	c303      	stmia	r3!, {r0, r1}
 8011f00:	4611      	mov	r1, r2
 8011f02:	6828      	ldr	r0, [r5, #0]
 8011f04:	f7f6 f92e 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011f08:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 8011f0c:	2b00      	cmp	r3, #0
 8011f0e:	db11      	blt.n	8011f34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f10:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8011f14:	2b00      	cmp	r3, #0
 8011f16:	db0d      	blt.n	8011f34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f18:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8011f1a:	4298      	cmp	r0, r3
 8011f1c:	d10a      	bne.n	8011f34 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 8011f1e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 8011f22:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f26:	ab09      	add	r3, sp, #36	; 0x24
 8011f28:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f2c:	4619      	mov	r1, r3
 8011f2e:	a805      	add	r0, sp, #20
 8011f30:	f7fd fda4 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8011f34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8011f38:	2b00      	cmp	r3, #0
 8011f3a:	dd5b      	ble.n	8011ff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8011f40:	2b00      	cmp	r3, #0
 8011f42:	dd57      	ble.n	8011ff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f44:	4f2f      	ldr	r7, [pc, #188]	; (8012004 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 8011f46:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011f48:	683b      	ldr	r3, [r7, #0]
 8011f4a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8011f4e:	4b2e      	ldr	r3, [pc, #184]	; (8012008 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8011f50:	681b      	ldr	r3, [r3, #0]
 8011f52:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8011f56:	2e00      	cmp	r6, #0
 8011f58:	d04c      	beq.n	8011ff4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8011f5a:	6823      	ldr	r3, [r4, #0]
 8011f5c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 8011f60:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8011f62:	4620      	mov	r0, r4
 8011f64:	4798      	blx	r3
 8011f66:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 8011f68:	683b      	ldr	r3, [r7, #0]
 8011f6a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 8011f6e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 8011f72:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 8011f76:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8011f78:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011f7c:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 8011f80:	785b      	ldrb	r3, [r3, #1]
 8011f82:	9609      	str	r6, [sp, #36]	; 0x24
 8011f84:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011f88:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8011f8c:	4b1f      	ldr	r3, [pc, #124]	; (801200c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8011f8e:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 8011f92:	681b      	ldr	r3, [r3, #0]
 8011f94:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 8011f98:	910b      	str	r1, [sp, #44]	; 0x2c
 8011f9a:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 8011f9e:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 8011fa2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 8011fa6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 8011faa:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8011fae:	b10a      	cbz	r2, 8011fb4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8011fb0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 8011fb2:	b906      	cbnz	r6, 8011fb6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8011fb4:	689e      	ldr	r6, [r3, #8]
 8011fb6:	af07      	add	r7, sp, #28
 8011fb8:	4621      	mov	r1, r4
 8011fba:	4638      	mov	r0, r7
 8011fbc:	f004 f8f8 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011fc0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8011fc2:	6828      	ldr	r0, [r5, #0]
 8011fc4:	f7f6 f8ce 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8011fc8:	6823      	ldr	r3, [r4, #0]
 8011fca:	4605      	mov	r5, r0
 8011fcc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8011fce:	4620      	mov	r0, r4
 8011fd0:	4798      	blx	r3
 8011fd2:	6823      	ldr	r3, [r4, #0]
 8011fd4:	4680      	mov	r8, r0
 8011fd6:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8011fda:	4620      	mov	r0, r4
 8011fdc:	4798      	blx	r3
 8011fde:	e9cd 8002 	strd	r8, r0, [sp, #8]
 8011fe2:	ab09      	add	r3, sp, #36	; 0x24
 8011fe4:	9300      	str	r3, [sp, #0]
 8011fe6:	9501      	str	r5, [sp, #4]
 8011fe8:	ab05      	add	r3, sp, #20
 8011fea:	e897 0006 	ldmia.w	r7, {r1, r2}
 8011fee:	4630      	mov	r0, r6
 8011ff0:	f7f6 f86a 	bl	80080c8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8011ff4:	b00e      	add	sp, #56	; 0x38
 8011ff6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011ffa:	bf00      	nop
 8011ffc:	2000ef78 	.word	0x2000ef78
 8012000:	2000ef80 	.word	0x2000ef80
 8012004:	2000ef74 	.word	0x2000ef74
 8012008:	2000ef7c 	.word	0x2000ef7c
 801200c:	2000ef1c 	.word	0x2000ef1c

08012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 8012010:	b538      	push	{r3, r4, r5, lr}
 8012012:	4b0e      	ldr	r3, [pc, #56]	; (801204c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 8012014:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 8012016:	881b      	ldrh	r3, [r3, #0]
 8012018:	429a      	cmp	r2, r3
 801201a:	4604      	mov	r4, r0
 801201c:	d214      	bcs.n	8012048 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801201e:	6803      	ldr	r3, [r0, #0]
 8012020:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8012022:	4798      	blx	r3
 8012024:	6823      	ldr	r3, [r4, #0]
 8012026:	4605      	mov	r5, r0
 8012028:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801202a:	4620      	mov	r0, r4
 801202c:	4798      	blx	r3
 801202e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012032:	b22d      	sxth	r5, r5
 8012034:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 8012038:	4601      	mov	r1, r0
 801203a:	bf06      	itte	eq
 801203c:	4602      	moveq	r2, r0
 801203e:	4629      	moveq	r1, r5
 8012040:	462a      	movne	r2, r5
 8012042:	4620      	mov	r0, r4
 8012044:	f7f5 f9c2 	bl	80073cc <_ZN8touchgfx8Drawable14setWidthHeightEss>
 8012048:	bd38      	pop	{r3, r4, r5, pc}
 801204a:	bf00      	nop
 801204c:	2000ef78 	.word	0x2000ef78

08012050 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012050:	b530      	push	{r4, r5, lr}
 8012052:	888b      	ldrh	r3, [r1, #4]
 8012054:	8583      	strh	r3, [r0, #44]	; 0x2c
 8012056:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801205a:	b085      	sub	sp, #20
 801205c:	4604      	mov	r4, r0
 801205e:	b923      	cbnz	r3, 801206a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012060:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012064:	b90b      	cbnz	r3, 801206a <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012066:	f7ff ffd3 	bl	8012010 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801206a:	6823      	ldr	r3, [r4, #0]
 801206c:	466d      	mov	r5, sp
 801206e:	4621      	mov	r1, r4
 8012070:	4628      	mov	r0, r5
 8012072:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8012076:	4798      	blx	r3
 8012078:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801207c:	343c      	adds	r4, #60	; 0x3c
 801207e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012082:	b005      	add	sp, #20
 8012084:	bd30      	pop	{r4, r5, pc}

08012086 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8012086:	2300      	movs	r3, #0
 8012088:	8083      	strh	r3, [r0, #4]
 801208a:	80c3      	strh	r3, [r0, #6]
 801208c:	8003      	strh	r3, [r0, #0]
 801208e:	8043      	strh	r3, [r0, #2]
 8012090:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8012094:	2bff      	cmp	r3, #255	; 0xff
 8012096:	bf01      	itttt	eq
 8012098:	890b      	ldrheq	r3, [r1, #8]
 801209a:	8083      	strheq	r3, [r0, #4]
 801209c:	894b      	ldrheq	r3, [r1, #10]
 801209e:	80c3      	strheq	r3, [r0, #6]
 80120a0:	4770      	bx	lr
	...

080120a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 80120a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80120a6:	4604      	mov	r4, r0
 80120a8:	6808      	ldr	r0, [r1, #0]
 80120aa:	6849      	ldr	r1, [r1, #4]
 80120ac:	466b      	mov	r3, sp
 80120ae:	c303      	stmia	r3!, {r0, r1}
 80120b0:	6823      	ldr	r3, [r4, #0]
 80120b2:	4669      	mov	r1, sp
 80120b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120b6:	4620      	mov	r0, r4
 80120b8:	4798      	blx	r3
 80120ba:	4b08      	ldr	r3, [pc, #32]	; (80120dc <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 80120bc:	681b      	ldr	r3, [r3, #0]
 80120be:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 80120c2:	b10a      	cbz	r2, 80120c8 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 80120c4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80120c6:	b900      	cbnz	r0, 80120ca <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 80120c8:	6898      	ldr	r0, [r3, #8]
 80120ca:	6803      	ldr	r3, [r0, #0]
 80120cc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80120ce:	6a1d      	ldr	r5, [r3, #32]
 80120d0:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 80120d4:	4669      	mov	r1, sp
 80120d6:	47a8      	blx	r5
 80120d8:	b003      	add	sp, #12
 80120da:	bd30      	pop	{r4, r5, pc}
 80120dc:	2000ef1c 	.word	0x2000ef1c

080120e0 <_ZN8touchgfx3BoxD1Ev>:
 80120e0:	4770      	bx	lr

080120e2 <_ZN8touchgfx3BoxD0Ev>:
 80120e2:	b510      	push	{r4, lr}
 80120e4:	212c      	movs	r1, #44	; 0x2c
 80120e6:	4604      	mov	r4, r0
 80120e8:	f014 fa72 	bl	80265d0 <_ZdlPvj>
 80120ec:	4620      	mov	r0, r4
 80120ee:	bd10      	pop	{r4, pc}

080120f0 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80120f0:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 80120f4:	b12a      	cbz	r2, 8012102 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80120f6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80120fa:	b112      	cbz	r2, 8012102 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80120fc:	6803      	ldr	r3, [r0, #0]
 80120fe:	695b      	ldr	r3, [r3, #20]
 8012100:	4718      	bx	r3
 8012102:	4770      	bx	lr

08012104 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8012104:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 8012108:	4770      	bx	lr

0801210a <_ZN8touchgfx6ButtonD1Ev>:
 801210a:	4770      	bx	lr

0801210c <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801210c:	b570      	push	{r4, r5, r6, lr}
 801210e:	880b      	ldrh	r3, [r1, #0]
 8012110:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8012112:	4605      	mov	r5, r0
 8012114:	8813      	ldrh	r3, [r2, #0]
 8012116:	f825 3f30 	strh.w	r3, [r5, #48]!
 801211a:	4604      	mov	r4, r0
 801211c:	4628      	mov	r0, r5
 801211e:	f006 fad5 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012122:	4606      	mov	r6, r0
 8012124:	4628      	mov	r0, r5
 8012126:	f006 fb05 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801212a:	6823      	ldr	r3, [r4, #0]
 801212c:	4605      	mov	r5, r0
 801212e:	4631      	mov	r1, r6
 8012130:	4620      	mov	r0, r4
 8012132:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012134:	4798      	blx	r3
 8012136:	6823      	ldr	r3, [r4, #0]
 8012138:	4629      	mov	r1, r5
 801213a:	4620      	mov	r0, r4
 801213c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801213e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012142:	4718      	bx	r3

08012144 <_ZN8touchgfx6ButtonD0Ev>:
 8012144:	b510      	push	{r4, lr}
 8012146:	2134      	movs	r1, #52	; 0x34
 8012148:	4604      	mov	r4, r0
 801214a:	f014 fa41 	bl	80265d0 <_ZdlPvj>
 801214e:	4620      	mov	r0, r4
 8012150:	bd10      	pop	{r4, pc}

08012152 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8012152:	b510      	push	{r4, lr}
 8012154:	4604      	mov	r4, r0
 8012156:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8012158:	b150      	cbz	r0, 8012170 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801215a:	6803      	ldr	r3, [r0, #0]
 801215c:	68db      	ldr	r3, [r3, #12]
 801215e:	4798      	blx	r3
 8012160:	b130      	cbz	r0, 8012170 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8012162:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8012164:	6803      	ldr	r3, [r0, #0]
 8012166:	4621      	mov	r1, r4
 8012168:	689b      	ldr	r3, [r3, #8]
 801216a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801216e:	4718      	bx	r3
 8012170:	bd10      	pop	{r4, pc}

08012172 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012172:	b510      	push	{r4, lr}
 8012174:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 8012178:	2bff      	cmp	r3, #255	; 0xff
 801217a:	4604      	mov	r4, r0
 801217c:	d006      	beq.n	801218c <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801217e:	2300      	movs	r3, #0
 8012180:	8003      	strh	r3, [r0, #0]
 8012182:	8043      	strh	r3, [r0, #2]
 8012184:	8083      	strh	r3, [r0, #4]
 8012186:	80c3      	strh	r3, [r0, #6]
 8012188:	4620      	mov	r0, r4
 801218a:	bd10      	pop	{r4, pc}
 801218c:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 8012190:	b11b      	cbz	r3, 801219a <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012192:	3130      	adds	r1, #48	; 0x30
 8012194:	f006 fb02 	bl	801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012198:	e7f6      	b.n	8012188 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801219a:	312e      	adds	r1, #46	; 0x2e
 801219c:	e7fa      	b.n	8012194 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

080121a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80121a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121a4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80121a8:	b08a      	sub	sp, #40	; 0x28
 80121aa:	4604      	mov	r4, r0
 80121ac:	4688      	mov	r8, r1
 80121ae:	2b00      	cmp	r3, #0
 80121b0:	d066      	beq.n	8012280 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80121b2:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80121b4:	f8ad 3014 	strh.w	r3, [sp, #20]
 80121b8:	a805      	add	r0, sp, #20
 80121ba:	f006 fa87 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80121be:	4607      	mov	r7, r0
 80121c0:	a805      	add	r0, sp, #20
 80121c2:	f006 fab7 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80121c6:	f9b8 6000 	ldrsh.w	r6, [r8]
 80121ca:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80121ce:	4432      	add	r2, r6
 80121d0:	b292      	uxth	r2, r2
 80121d2:	2300      	movs	r3, #0
 80121d4:	fa0f fc82 	sxth.w	ip, r2
 80121d8:	459c      	cmp	ip, r3
 80121da:	9306      	str	r3, [sp, #24]
 80121dc:	dd52      	ble.n	8012284 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121de:	42b7      	cmp	r7, r6
 80121e0:	dd50      	ble.n	8012284 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121e2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 80121e6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80121ea:	442b      	add	r3, r5
 80121ec:	b29b      	uxth	r3, r3
 80121ee:	b219      	sxth	r1, r3
 80121f0:	2900      	cmp	r1, #0
 80121f2:	dd47      	ble.n	8012284 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121f4:	42a8      	cmp	r0, r5
 80121f6:	dd45      	ble.n	8012284 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 80121f8:	4567      	cmp	r7, ip
 80121fa:	bfb8      	it	lt
 80121fc:	b2ba      	uxthlt	r2, r7
 80121fe:	4288      	cmp	r0, r1
 8012200:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012204:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012208:	bfb8      	it	lt
 801220a:	b283      	uxthlt	r3, r0
 801220c:	1b92      	subs	r2, r2, r6
 801220e:	1b5b      	subs	r3, r3, r5
 8012210:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012214:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012218:	f8ad 6018 	strh.w	r6, [sp, #24]
 801221c:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012220:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012224:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8012228:	429a      	cmp	r2, r3
 801222a:	d026      	beq.n	801227a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801222c:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012230:	2b00      	cmp	r3, #0
 8012232:	dd22      	ble.n	801227a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012234:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012238:	2b00      	cmp	r3, #0
 801223a:	dd1e      	ble.n	801227a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801223c:	2300      	movs	r3, #0
 801223e:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012242:	6823      	ldr	r3, [r4, #0]
 8012244:	a908      	add	r1, sp, #32
 8012246:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012248:	4620      	mov	r0, r4
 801224a:	4798      	blx	r3
 801224c:	4b0f      	ldr	r3, [pc, #60]	; (801228c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801224e:	681b      	ldr	r3, [r3, #0]
 8012250:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012254:	b10a      	cbz	r2, 801225a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012256:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012258:	b900      	cbnz	r0, 801225c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801225a:	6898      	ldr	r0, [r3, #8]
 801225c:	6801      	ldr	r1, [r0, #0]
 801225e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8012262:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012266:	2501      	movs	r5, #1
 8012268:	9502      	str	r5, [sp, #8]
 801226a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801226e:	9401      	str	r4, [sp, #4]
 8012270:	ac06      	add	r4, sp, #24
 8012272:	9400      	str	r4, [sp, #0]
 8012274:	688c      	ldr	r4, [r1, #8]
 8012276:	a905      	add	r1, sp, #20
 8012278:	47a0      	blx	r4
 801227a:	b00a      	add	sp, #40	; 0x28
 801227c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012280:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8012282:	e797      	b.n	80121b4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012284:	2300      	movs	r3, #0
 8012286:	9307      	str	r3, [sp, #28]
 8012288:	e7ca      	b.n	8012220 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801228a:	bf00      	nop
 801228c:	2000ef1c 	.word	0x2000ef1c

08012290 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012290:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 8012294:	b12a      	cbz	r2, 80122a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012296:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801229a:	b112      	cbz	r2, 80122a2 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801229c:	6803      	ldr	r3, [r0, #0]
 801229e:	695b      	ldr	r3, [r3, #20]
 80122a0:	4718      	bx	r3
 80122a2:	4770      	bx	lr

080122a4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 80122a4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80122a8:	4b2f      	ldr	r3, [pc, #188]	; (8012368 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 80122aa:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 80122ac:	881b      	ldrh	r3, [r3, #0]
 80122ae:	4293      	cmp	r3, r2
 80122b0:	b08d      	sub	sp, #52	; 0x34
 80122b2:	4604      	mov	r4, r0
 80122b4:	460f      	mov	r7, r1
 80122b6:	d954      	bls.n	8012362 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122b8:	4b2c      	ldr	r3, [pc, #176]	; (801236c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 80122ba:	6819      	ldr	r1, [r3, #0]
 80122bc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 80122c0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 80122c4:	4a2a      	ldr	r2, [pc, #168]	; (8012370 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 80122c6:	6812      	ldr	r2, [r2, #0]
 80122c8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 80122cc:	2900      	cmp	r1, #0
 80122ce:	d048      	beq.n	8012362 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 80122d0:	785a      	ldrb	r2, [r3, #1]
 80122d2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 80122d6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80122da:	4b26      	ldr	r3, [pc, #152]	; (8012374 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 80122dc:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 80122e0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 80122e4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 80122e8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 80122ea:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 80122ee:	9107      	str	r1, [sp, #28]
 80122f0:	f3c2 0801 	ubfx	r8, r2, #0, #2
 80122f4:	f3c2 0281 	ubfx	r2, r2, #2, #2
 80122f8:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 80122fc:	681a      	ldr	r2, [r3, #0]
 80122fe:	f88d 8020 	strb.w	r8, [sp, #32]
 8012302:	f892 3058 	ldrb.w	r3, [r2, #88]	; 0x58
 8012306:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801230a:	9609      	str	r6, [sp, #36]	; 0x24
 801230c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 8012310:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 8012314:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 8012318:	b10b      	cbz	r3, 801231e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801231a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801231c:	b905      	cbnz	r5, 8012320 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801231e:	6895      	ldr	r5, [r2, #8]
 8012320:	ae05      	add	r6, sp, #20
 8012322:	4621      	mov	r1, r4
 8012324:	4630      	mov	r0, r6
 8012326:	f003 ff43 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801232a:	4b13      	ldr	r3, [pc, #76]	; (8012378 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801232c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801232e:	6818      	ldr	r0, [r3, #0]
 8012330:	f7f5 ff18 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 8012334:	6823      	ldr	r3, [r4, #0]
 8012336:	4680      	mov	r8, r0
 8012338:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801233a:	4620      	mov	r0, r4
 801233c:	4798      	blx	r3
 801233e:	6823      	ldr	r3, [r4, #0]
 8012340:	4681      	mov	r9, r0
 8012342:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8012346:	4620      	mov	r0, r4
 8012348:	4798      	blx	r3
 801234a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801234e:	ab07      	add	r3, sp, #28
 8012350:	9300      	str	r3, [sp, #0]
 8012352:	f8cd 8004 	str.w	r8, [sp, #4]
 8012356:	463b      	mov	r3, r7
 8012358:	e896 0006 	ldmia.w	r6, {r1, r2}
 801235c:	4628      	mov	r0, r5
 801235e:	f7f5 feb3 	bl	80080c8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012362:	b00d      	add	sp, #52	; 0x34
 8012364:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012368:	2000ef78 	.word	0x2000ef78
 801236c:	2000ef74 	.word	0x2000ef74
 8012370:	2000ef7c 	.word	0x2000ef7c
 8012374:	2000ef1c 	.word	0x2000ef1c
 8012378:	2000ef80 	.word	0x2000ef80

0801237c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 801237c:	4770      	bx	lr

0801237e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 801237e:	b510      	push	{r4, lr}
 8012380:	2134      	movs	r1, #52	; 0x34
 8012382:	4604      	mov	r4, r0
 8012384:	f014 f924 	bl	80265d0 <_ZdlPvj>
 8012388:	4620      	mov	r0, r4
 801238a:	bd10      	pop	{r4, pc}

0801238c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801238c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012390:	4604      	mov	r4, r0
 8012392:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 8012394:	8962      	ldrh	r2, [r4, #10]
 8012396:	b218      	sxth	r0, r3
 8012398:	460e      	mov	r6, r1
 801239a:	005b      	lsls	r3, r3, #1
 801239c:	8921      	ldrh	r1, [r4, #8]
 801239e:	b29b      	uxth	r3, r3
 80123a0:	1ac9      	subs	r1, r1, r3
 80123a2:	b08e      	sub	sp, #56	; 0x38
 80123a4:	b209      	sxth	r1, r1
 80123a6:	1ad3      	subs	r3, r2, r3
 80123a8:	b21b      	sxth	r3, r3
 80123aa:	2900      	cmp	r1, #0
 80123ac:	f8ad 0000 	strh.w	r0, [sp]
 80123b0:	f8ad 0002 	strh.w	r0, [sp, #2]
 80123b4:	f8ad 1004 	strh.w	r1, [sp, #4]
 80123b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80123bc:	dd5e      	ble.n	801247c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123be:	2b00      	cmp	r3, #0
 80123c0:	dd5c      	ble.n	801247c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 80123c2:	6830      	ldr	r0, [r6, #0]
 80123c4:	6871      	ldr	r1, [r6, #4]
 80123c6:	ab02      	add	r3, sp, #8
 80123c8:	c303      	stmia	r3!, {r0, r1}
 80123ca:	4669      	mov	r1, sp
 80123cc:	a802      	add	r0, sp, #8
 80123ce:	f7fd fb55 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 80123d2:	4620      	mov	r0, r4
 80123d4:	a902      	add	r1, sp, #8
 80123d6:	f7ff fe65 	bl	80120a4 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 80123da:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 80123dc:	2800      	cmp	r0, #0
 80123de:	d05f      	beq.n	80124a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80123e0:	8963      	ldrh	r3, [r4, #10]
 80123e2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80123e6:	f8ad 101c 	strh.w	r1, [sp, #28]
 80123ea:	1a1f      	subs	r7, r3, r0
 80123ec:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 80123f0:	b202      	sxth	r2, r0
 80123f2:	2500      	movs	r5, #0
 80123f4:	b21b      	sxth	r3, r3
 80123f6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 80123fa:	1a09      	subs	r1, r1, r0
 80123fc:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012400:	9506      	str	r5, [sp, #24]
 8012402:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012406:	f8ad 5020 	strh.w	r5, [sp, #32]
 801240a:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801240e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8012412:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8012416:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801241a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801241e:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 8012422:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8012426:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801242a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801242e:	af04      	add	r7, sp, #16
 8012430:	ab06      	add	r3, sp, #24
 8012432:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012436:	e893 0003 	ldmia.w	r3, {r0, r1}
 801243a:	e887 0003 	stmia.w	r7, {r0, r1}
 801243e:	4631      	mov	r1, r6
 8012440:	4638      	mov	r0, r7
 8012442:	f7fd fb1b 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8012446:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801244a:	2b00      	cmp	r3, #0
 801244c:	dd12      	ble.n	8012474 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801244e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012452:	2b00      	cmp	r3, #0
 8012454:	dd0e      	ble.n	8012474 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012456:	6823      	ldr	r3, [r4, #0]
 8012458:	4639      	mov	r1, r7
 801245a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801245c:	4620      	mov	r0, r4
 801245e:	4798      	blx	r3
 8012460:	f7f2 f928 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8012464:	6803      	ldr	r3, [r0, #0]
 8012466:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012468:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801246c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8012470:	4639      	mov	r1, r7
 8012472:	47c0      	blx	r8
 8012474:	3501      	adds	r5, #1
 8012476:	2d04      	cmp	r5, #4
 8012478:	d1da      	bne.n	8012430 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801247a:	e011      	b.n	80124a0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801247c:	6830      	ldr	r0, [r6, #0]
 801247e:	6871      	ldr	r1, [r6, #4]
 8012480:	ab06      	add	r3, sp, #24
 8012482:	c303      	stmia	r3!, {r0, r1}
 8012484:	6823      	ldr	r3, [r4, #0]
 8012486:	a906      	add	r1, sp, #24
 8012488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801248a:	4620      	mov	r0, r4
 801248c:	4798      	blx	r3
 801248e:	f7f2 f911 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 8012492:	6803      	ldr	r3, [r0, #0]
 8012494:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8012496:	6a1d      	ldr	r5, [r3, #32]
 8012498:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801249c:	a906      	add	r1, sp, #24
 801249e:	47a8      	blx	r5
 80124a0:	b00e      	add	sp, #56	; 0x38
 80124a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080124a6 <_ZN8touchgfx5ImageD1Ev>:
 80124a6:	4770      	bx	lr

080124a8 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 80124a8:	b570      	push	{r4, r5, r6, lr}
 80124aa:	880b      	ldrh	r3, [r1, #0]
 80124ac:	84c3      	strh	r3, [r0, #38]	; 0x26
 80124ae:	4604      	mov	r4, r0
 80124b0:	4608      	mov	r0, r1
 80124b2:	460d      	mov	r5, r1
 80124b4:	f006 f90a 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 80124b8:	4606      	mov	r6, r0
 80124ba:	4628      	mov	r0, r5
 80124bc:	f006 f93a 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80124c0:	6823      	ldr	r3, [r4, #0]
 80124c2:	4605      	mov	r5, r0
 80124c4:	4631      	mov	r1, r6
 80124c6:	4620      	mov	r0, r4
 80124c8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80124ca:	4798      	blx	r3
 80124cc:	6823      	ldr	r3, [r4, #0]
 80124ce:	4629      	mov	r1, r5
 80124d0:	4620      	mov	r0, r4
 80124d2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80124d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80124d8:	4718      	bx	r3

080124da <_ZN8touchgfx5ImageD0Ev>:
 80124da:	b510      	push	{r4, lr}
 80124dc:	212c      	movs	r1, #44	; 0x2c
 80124de:	4604      	mov	r4, r0
 80124e0:	f014 f876 	bl	80265d0 <_ZdlPvj>
 80124e4:	4620      	mov	r0, r4
 80124e6:	bd10      	pop	{r4, pc}

080124e8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 80124e8:	b510      	push	{r4, lr}
 80124ea:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 80124ee:	2bff      	cmp	r3, #255	; 0xff
 80124f0:	4604      	mov	r4, r0
 80124f2:	d006      	beq.n	8012502 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 80124f4:	2300      	movs	r3, #0
 80124f6:	8003      	strh	r3, [r0, #0]
 80124f8:	8043      	strh	r3, [r0, #2]
 80124fa:	8083      	strh	r3, [r0, #4]
 80124fc:	80c3      	strh	r3, [r0, #6]
 80124fe:	4620      	mov	r0, r4
 8012500:	bd10      	pop	{r4, pc}
 8012502:	3126      	adds	r1, #38	; 0x26
 8012504:	f006 f94a 	bl	801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012508:	e7f9      	b.n	80124fe <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0801250c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801250c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012510:	4604      	mov	r4, r0
 8012512:	b088      	sub	sp, #32
 8012514:	f854 3b26 	ldr.w	r3, [r4], #38
 8012518:	2500      	movs	r5, #0
 801251a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801251c:	460f      	mov	r7, r1
 801251e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012522:	a904      	add	r1, sp, #16
 8012524:	4606      	mov	r6, r0
 8012526:	4798      	blx	r3
 8012528:	4620      	mov	r0, r4
 801252a:	f006 f8cf 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801252e:	4680      	mov	r8, r0
 8012530:	4620      	mov	r0, r4
 8012532:	f006 f8ff 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012536:	9506      	str	r5, [sp, #24]
 8012538:	ad06      	add	r5, sp, #24
 801253a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801253e:	4639      	mov	r1, r7
 8012540:	4628      	mov	r0, r5
 8012542:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012546:	f7fd fa99 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801254a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801254e:	2b00      	cmp	r3, #0
 8012550:	dd19      	ble.n	8012586 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012552:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012556:	2b00      	cmp	r3, #0
 8012558:	dd15      	ble.n	8012586 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801255a:	4b0c      	ldr	r3, [pc, #48]	; (801258c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801255c:	681b      	ldr	r3, [r3, #0]
 801255e:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012562:	b10a      	cbz	r2, 8012568 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012564:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8012566:	b900      	cbnz	r0, 801256a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012568:	6898      	ldr	r0, [r3, #8]
 801256a:	6801      	ldr	r1, [r0, #0]
 801256c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012570:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012574:	2701      	movs	r7, #1
 8012576:	9702      	str	r7, [sp, #8]
 8012578:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 801257c:	e9cd 5600 	strd	r5, r6, [sp]
 8012580:	688d      	ldr	r5, [r1, #8]
 8012582:	4621      	mov	r1, r4
 8012584:	47a8      	blx	r5
 8012586:	b008      	add	sp, #32
 8012588:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801258c:	2000ef1c 	.word	0x2000ef1c

08012590 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 8012590:	4770      	bx	lr

08012592 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 8012592:	b510      	push	{r4, lr}
 8012594:	2148      	movs	r1, #72	; 0x48
 8012596:	4604      	mov	r4, r0
 8012598:	f014 f81a 	bl	80265d0 <_ZdlPvj>
 801259c:	4620      	mov	r0, r4
 801259e:	bd10      	pop	{r4, pc}

080125a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 80125a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80125a4:	b08d      	sub	sp, #52	; 0x34
 80125a6:	4604      	mov	r4, r0
 80125a8:	460f      	mov	r7, r1
 80125aa:	f7ff fdf9 	bl	80121a0 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 80125ae:	4a55      	ldr	r2, [pc, #340]	; (8012704 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 80125b0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80125b2:	8812      	ldrh	r2, [r2, #0]
 80125b4:	429a      	cmp	r2, r3
 80125b6:	f240 8082 	bls.w	80126be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 80125ba:	4d53      	ldr	r5, [pc, #332]	; (8012708 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 80125bc:	682a      	ldr	r2, [r5, #0]
 80125be:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 80125c2:	4b52      	ldr	r3, [pc, #328]	; (801270c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 80125c4:	681b      	ldr	r3, [r3, #0]
 80125c6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 80125ca:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 80125ce:	2200      	movs	r2, #0
 80125d0:	e9cd 2203 	strd	r2, r2, [sp, #12]
 80125d4:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 80125d8:	2a03      	cmp	r2, #3
 80125da:	d811      	bhi.n	8012600 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80125dc:	e8df f002 	tbb	[pc, r2]
 80125e0:	89727902 	.word	0x89727902
 80125e4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80125e8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80125ec:	1ad2      	subs	r2, r2, r3
 80125ee:	2002      	movs	r0, #2
 80125f0:	f8ad 1010 	strh.w	r1, [sp, #16]
 80125f4:	fb92 f2f0 	sdiv	r2, r2, r0
 80125f8:	f8ad 3012 	strh.w	r3, [sp, #18]
 80125fc:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012600:	f10d 080c 	add.w	r8, sp, #12
 8012604:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012608:	f10d 0914 	add.w	r9, sp, #20
 801260c:	e889 0003 	stmia.w	r9, {r0, r1}
 8012610:	4639      	mov	r1, r7
 8012612:	4648      	mov	r0, r9
 8012614:	f7fd fa32 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8012618:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801261c:	2b00      	cmp	r3, #0
 801261e:	dd4e      	ble.n	80126be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012620:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012624:	2b00      	cmp	r3, #0
 8012626:	dd4a      	ble.n	80126be <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012628:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801262c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012630:	1a9b      	subs	r3, r3, r2
 8012632:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012636:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801263a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801263e:	1a9b      	subs	r3, r3, r2
 8012640:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012644:	6823      	ldr	r3, [r4, #0]
 8012646:	4641      	mov	r1, r8
 8012648:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801264a:	4620      	mov	r0, r4
 801264c:	4798      	blx	r3
 801264e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8012652:	2b00      	cmp	r3, #0
 8012654:	d053      	beq.n	80126fe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012656:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8012658:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801265a:	682b      	ldr	r3, [r5, #0]
 801265c:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 8012660:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 8012664:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012668:	785b      	ldrb	r3, [r3, #1]
 801266a:	9209      	str	r2, [sp, #36]	; 0x24
 801266c:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012670:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012674:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 8012678:	2300      	movs	r3, #0
 801267a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801267e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8012682:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8012686:	4b22      	ldr	r3, [pc, #136]	; (8012710 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012688:	9607      	str	r6, [sp, #28]
 801268a:	681b      	ldr	r3, [r3, #0]
 801268c:	f88d 5020 	strb.w	r5, [sp, #32]
 8012690:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8012694:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8012698:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801269c:	b10a      	cbz	r2, 80126a2 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801269e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 80126a0:	b904      	cbnz	r4, 80126a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 80126a2:	689c      	ldr	r4, [r3, #8]
 80126a4:	4b1b      	ldr	r3, [pc, #108]	; (8012714 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 80126a6:	6818      	ldr	r0, [r3, #0]
 80126a8:	f7f5 fd5c 	bl	8008164 <_ZNK8touchgfx5Texts7getTextEt>
 80126ac:	ab07      	add	r3, sp, #28
 80126ae:	9001      	str	r0, [sp, #4]
 80126b0:	9300      	str	r3, [sp, #0]
 80126b2:	e898 0006 	ldmia.w	r8, {r1, r2}
 80126b6:	464b      	mov	r3, r9
 80126b8:	4620      	mov	r0, r4
 80126ba:	f7f5 fd05 	bl	80080c8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80126be:	b00d      	add	sp, #52	; 0x34
 80126c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80126c4:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 80126c8:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 80126cc:	1ad2      	subs	r2, r2, r3
 80126ce:	3201      	adds	r2, #1
 80126d0:	e78d      	b.n	80125ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 80126d2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126d6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126da:	1ad2      	subs	r2, r2, r3
 80126dc:	3201      	adds	r2, #1
 80126de:	2002      	movs	r0, #2
 80126e0:	f8ad 3010 	strh.w	r3, [sp, #16]
 80126e4:	fb92 f2f0 	sdiv	r2, r2, r0
 80126e8:	f8ad 1012 	strh.w	r1, [sp, #18]
 80126ec:	f8ad 200c 	strh.w	r2, [sp, #12]
 80126f0:	e786      	b.n	8012600 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 80126f2:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 80126f6:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 80126fa:	1ad2      	subs	r2, r2, r3
 80126fc:	e7ef      	b.n	80126de <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 80126fe:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8012700:	e7aa      	b.n	8012658 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012702:	bf00      	nop
 8012704:	2000ef78 	.word	0x2000ef78
 8012708:	2000ef74 	.word	0x2000ef74
 801270c:	2000ef7c 	.word	0x2000ef7c
 8012710:	2000ef1c 	.word	0x2000ef1c
 8012714:	2000ef80 	.word	0x2000ef80

08012718 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012718:	b510      	push	{r4, lr}
 801271a:	2101      	movs	r1, #1
 801271c:	4c13      	ldr	r4, [pc, #76]	; (801276c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801271e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8012722:	2200      	movs	r2, #0
 8012724:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 8012728:	6004      	str	r4, [r0, #0]
 801272a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801272e:	4c10      	ldr	r4, [pc, #64]	; (8012770 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012730:	8082      	strh	r2, [r0, #4]
 8012732:	80c2      	strh	r2, [r0, #6]
 8012734:	8102      	strh	r2, [r0, #8]
 8012736:	8142      	strh	r2, [r0, #10]
 8012738:	8182      	strh	r2, [r0, #12]
 801273a:	81c2      	strh	r2, [r0, #14]
 801273c:	8202      	strh	r2, [r0, #16]
 801273e:	8242      	strh	r2, [r0, #18]
 8012740:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012744:	61c2      	str	r2, [r0, #28]
 8012746:	8402      	strh	r2, [r0, #32]
 8012748:	8442      	strh	r2, [r0, #34]	; 0x22
 801274a:	6282      	str	r2, [r0, #40]	; 0x28
 801274c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 8012750:	85c1      	strh	r1, [r0, #46]	; 0x2e
 8012752:	8601      	strh	r1, [r0, #48]	; 0x30
 8012754:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 8012758:	6344      	str	r4, [r0, #52]	; 0x34
 801275a:	8701      	strh	r1, [r0, #56]	; 0x38
 801275c:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 8012760:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 8012764:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 8012768:	bd10      	pop	{r4, pc}
 801276a:	bf00      	nop
 801276c:	0802a548 	.word	0x0802a548
 8012770:	080284b8 	.word	0x080284b8

08012774 <_ZN8touchgfx7OutlineD1Ev>:
 8012774:	4770      	bx	lr

08012776 <_ZN8touchgfx7OutlineD0Ev>:
 8012776:	b510      	push	{r4, lr}
 8012778:	2130      	movs	r1, #48	; 0x30
 801277a:	4604      	mov	r4, r0
 801277c:	f013 ff28 	bl	80265d0 <_ZdlPvj>
 8012780:	4620      	mov	r0, r4
 8012782:	bd10      	pop	{r4, pc}

08012784 <_ZN8touchgfx7Outline5resetEv>:
 8012784:	b510      	push	{r4, lr}
 8012786:	4604      	mov	r4, r0
 8012788:	f000 fe96 	bl	80134b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801278c:	60e0      	str	r0, [r4, #12]
 801278e:	f000 fe99 	bl	80134c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 8012792:	68e3      	ldr	r3, [r4, #12]
 8012794:	6123      	str	r3, [r4, #16]
 8012796:	08c0      	lsrs	r0, r0, #3
 8012798:	2200      	movs	r2, #0
 801279a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801279e:	3801      	subs	r0, #1
 80127a0:	6060      	str	r0, [r4, #4]
 80127a2:	60a2      	str	r2, [r4, #8]
 80127a4:	8019      	strh	r1, [r3, #0]
 80127a6:	8059      	strh	r1, [r3, #2]
 80127a8:	809a      	strh	r2, [r3, #4]
 80127aa:	80da      	strh	r2, [r3, #6]
 80127ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80127ae:	f023 0301 	bic.w	r3, r3, #1
 80127b2:	f043 0302 	orr.w	r3, r3, #2
 80127b6:	6263      	str	r3, [r4, #36]	; 0x24
 80127b8:	bd10      	pop	{r4, pc}
	...

080127bc <_ZN8touchgfx7OutlineC1Ev>:
 80127bc:	b510      	push	{r4, lr}
 80127be:	4b0a      	ldr	r3, [pc, #40]	; (80127e8 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 80127c0:	6003      	str	r3, [r0, #0]
 80127c2:	2300      	movs	r3, #0
 80127c4:	e9c0 3301 	strd	r3, r3, [r0, #4]
 80127c8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80127cc:	e9c0 3305 	strd	r3, r3, [r0, #20]
 80127d0:	e9c0 3307 	strd	r3, r3, [r0, #28]
 80127d4:	6243      	str	r3, [r0, #36]	; 0x24
 80127d6:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 80127da:	4604      	mov	r4, r0
 80127dc:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 80127e0:	f7ff ffd0 	bl	8012784 <_ZN8touchgfx7Outline5resetEv>
 80127e4:	4620      	mov	r0, r4
 80127e6:	bd10      	pop	{r4, pc}
 80127e8:	0802a5bc 	.word	0x0802a5bc

080127ec <_ZN8touchgfx7Outline10renderLineEiiii>:
 80127ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80127f0:	b093      	sub	sp, #76	; 0x4c
 80127f2:	1156      	asrs	r6, r2, #5
 80127f4:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80127f6:	9305      	str	r3, [sp, #20]
 80127f8:	f004 051f 	and.w	r5, r4, #31
 80127fc:	1153      	asrs	r3, r2, #5
 80127fe:	9504      	str	r5, [sp, #16]
 8012800:	1165      	asrs	r5, r4, #5
 8012802:	9303      	str	r3, [sp, #12]
 8012804:	42ae      	cmp	r6, r5
 8012806:	ea4f 1364 	mov.w	r3, r4, asr #5
 801280a:	9306      	str	r3, [sp, #24]
 801280c:	f002 031f 	and.w	r3, r2, #31
 8012810:	f040 80f8 	bne.w	8012a04 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 8012814:	9c04      	ldr	r4, [sp, #16]
 8012816:	9a05      	ldr	r2, [sp, #20]
 8012818:	42a3      	cmp	r3, r4
 801281a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801281e:	6902      	ldr	r2, [r0, #16]
 8012820:	d125      	bne.n	801286e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 8012822:	f9b2 3000 	ldrsh.w	r3, [r2]
 8012826:	459e      	cmp	lr, r3
 8012828:	d103      	bne.n	8012832 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801282a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801282e:	429e      	cmp	r6, r3
 8012830:	d035      	beq.n	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012832:	88d1      	ldrh	r1, [r2, #6]
 8012834:	8893      	ldrh	r3, [r2, #4]
 8012836:	430b      	orrs	r3, r1
 8012838:	d010      	beq.n	801285c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801283a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801283e:	2b00      	cmp	r3, #0
 8012840:	db0c      	blt.n	801285c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012842:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012844:	428b      	cmp	r3, r1
 8012846:	da09      	bge.n	801285c <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 8012848:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801284c:	428b      	cmp	r3, r1
 801284e:	bf38      	it	cc
 8012850:	3208      	addcc	r2, #8
 8012852:	f103 0301 	add.w	r3, r3, #1
 8012856:	bf38      	it	cc
 8012858:	6102      	strcc	r2, [r0, #16]
 801285a:	6083      	str	r3, [r0, #8]
 801285c:	6903      	ldr	r3, [r0, #16]
 801285e:	9a03      	ldr	r2, [sp, #12]
 8012860:	f8a3 e000 	strh.w	lr, [r3]
 8012864:	805a      	strh	r2, [r3, #2]
 8012866:	2200      	movs	r2, #0
 8012868:	809a      	strh	r2, [r3, #4]
 801286a:	80da      	strh	r2, [r3, #6]
 801286c:	e017      	b.n	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801286e:	9c05      	ldr	r4, [sp, #20]
 8012870:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 8012874:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 8012878:	f004 041f 	and.w	r4, r4, #31
 801287c:	114e      	asrs	r6, r1, #5
 801287e:	9402      	str	r4, [sp, #8]
 8012880:	9c04      	ldr	r4, [sp, #16]
 8012882:	4576      	cmp	r6, lr
 8012884:	f001 0c1f 	and.w	ip, r1, #31
 8012888:	eba4 0403 	sub.w	r4, r4, r3
 801288c:	d10a      	bne.n	80128a4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801288e:	9b02      	ldr	r3, [sp, #8]
 8012890:	449c      	add	ip, r3
 8012892:	44a0      	add	r8, r4
 8012894:	fb04 a40c 	mla	r4, r4, ip, sl
 8012898:	f8a2 8004 	strh.w	r8, [r2, #4]
 801289c:	80d4      	strh	r4, [r2, #6]
 801289e:	b013      	add	sp, #76	; 0x4c
 80128a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128a4:	9d05      	ldr	r5, [sp, #20]
 80128a6:	1a69      	subs	r1, r5, r1
 80128a8:	bf5b      	ittet	pl
 80128aa:	f1cc 0520 	rsbpl	r5, ip, #32
 80128ae:	436c      	mulpl	r4, r5
 80128b0:	2500      	movmi	r5, #0
 80128b2:	2520      	movpl	r5, #32
 80128b4:	bf44      	itt	mi
 80128b6:	fb04 f40c 	mulmi.w	r4, r4, ip
 80128ba:	4249      	negmi	r1, r1
 80128bc:	9501      	str	r5, [sp, #4]
 80128be:	9f01      	ldr	r7, [sp, #4]
 80128c0:	fb94 f5f1 	sdiv	r5, r4, r1
 80128c4:	fb01 4415 	mls	r4, r1, r5, r4
 80128c8:	bf54      	ite	pl
 80128ca:	f04f 0901 	movpl.w	r9, #1
 80128ce:	f04f 39ff 	movmi.w	r9, #4294967295
 80128d2:	2c00      	cmp	r4, #0
 80128d4:	bfb8      	it	lt
 80128d6:	f105 35ff 	addlt.w	r5, r5, #4294967295
 80128da:	44bc      	add	ip, r7
 80128dc:	44a8      	add	r8, r5
 80128de:	fb05 ac0c 	mla	ip, r5, ip, sl
 80128e2:	f8a2 8004 	strh.w	r8, [r2, #4]
 80128e6:	f8a2 c006 	strh.w	ip, [r2, #6]
 80128ea:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80128ee:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 80128f2:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 80128f6:	bfb8      	it	lt
 80128f8:	1864      	addlt	r4, r4, r1
 80128fa:	ea58 0202 	orrs.w	r2, r8, r2
 80128fe:	444e      	add	r6, r9
 8012900:	d011      	beq.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012902:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8012906:	f1b8 0f00 	cmp.w	r8, #0
 801290a:	db0c      	blt.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801290c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801290e:	4590      	cmp	r8, r2
 8012910:	da09      	bge.n	8012926 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 8012912:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 8012916:	4590      	cmp	r8, r2
 8012918:	bf3c      	itt	cc
 801291a:	f10c 0208 	addcc.w	r2, ip, #8
 801291e:	6102      	strcc	r2, [r0, #16]
 8012920:	f108 0201 	add.w	r2, r8, #1
 8012924:	6082      	str	r2, [r0, #8]
 8012926:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801292a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801292e:	f8ac 6000 	strh.w	r6, [ip]
 8012932:	2700      	movs	r7, #0
 8012934:	45b6      	cmp	lr, r6
 8012936:	f8ac 2002 	strh.w	r2, [ip, #2]
 801293a:	f8ac 7004 	strh.w	r7, [ip, #4]
 801293e:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012942:	442b      	add	r3, r5
 8012944:	d04d      	beq.n	80129e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 8012946:	9f04      	ldr	r7, [sp, #16]
 8012948:	1aff      	subs	r7, r7, r3
 801294a:	443d      	add	r5, r7
 801294c:	016d      	lsls	r5, r5, #5
 801294e:	fb95 f8f1 	sdiv	r8, r5, r1
 8012952:	fb01 5518 	mls	r5, r1, r8, r5
 8012956:	2d00      	cmp	r5, #0
 8012958:	bfb8      	it	lt
 801295a:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801295e:	f108 0701 	add.w	r7, r8, #1
 8012962:	bfb8      	it	lt
 8012964:	186d      	addlt	r5, r5, r1
 8012966:	1a64      	subs	r4, r4, r1
 8012968:	9703      	str	r7, [sp, #12]
 801296a:	f04f 0a00 	mov.w	sl, #0
 801296e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012972:	1964      	adds	r4, r4, r5
 8012974:	bf58      	it	pl
 8012976:	9f03      	ldrpl	r7, [sp, #12]
 8012978:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801297c:	bf48      	it	mi
 801297e:	4647      	movmi	r7, r8
 8012980:	44bb      	add	fp, r7
 8012982:	f8ac b004 	strh.w	fp, [ip, #4]
 8012986:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801298a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801298e:	f8ac b006 	strh.w	fp, [ip, #6]
 8012992:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012996:	443b      	add	r3, r7
 8012998:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801299c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80129a0:	bf58      	it	pl
 80129a2:	1a64      	subpl	r4, r4, r1
 80129a4:	ea5b 0707 	orrs.w	r7, fp, r7
 80129a8:	444e      	add	r6, r9
 80129aa:	d011      	beq.n	80129d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129ac:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80129b0:	f1bb 0f00 	cmp.w	fp, #0
 80129b4:	db0c      	blt.n	80129d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129b6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80129b8:	45bb      	cmp	fp, r7
 80129ba:	da09      	bge.n	80129d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 80129bc:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 80129c0:	45bb      	cmp	fp, r7
 80129c2:	bf3c      	itt	cc
 80129c4:	f10c 0708 	addcc.w	r7, ip, #8
 80129c8:	6107      	strcc	r7, [r0, #16]
 80129ca:	f10b 0701 	add.w	r7, fp, #1
 80129ce:	6087      	str	r7, [r0, #8]
 80129d0:	6907      	ldr	r7, [r0, #16]
 80129d2:	45b6      	cmp	lr, r6
 80129d4:	803e      	strh	r6, [r7, #0]
 80129d6:	807a      	strh	r2, [r7, #2]
 80129d8:	f8a7 a004 	strh.w	sl, [r7, #4]
 80129dc:	f8a7 a006 	strh.w	sl, [r7, #6]
 80129e0:	d1c5      	bne.n	801296e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 80129e2:	9a04      	ldr	r2, [sp, #16]
 80129e4:	1ad3      	subs	r3, r2, r3
 80129e6:	6902      	ldr	r2, [r0, #16]
 80129e8:	8891      	ldrh	r1, [r2, #4]
 80129ea:	88d6      	ldrh	r6, [r2, #6]
 80129ec:	4419      	add	r1, r3
 80129ee:	8091      	strh	r1, [r2, #4]
 80129f0:	9902      	ldr	r1, [sp, #8]
 80129f2:	f101 0c20 	add.w	ip, r1, #32
 80129f6:	9901      	ldr	r1, [sp, #4]
 80129f8:	ebac 0c01 	sub.w	ip, ip, r1
 80129fc:	fb03 630c 	mla	r3, r3, ip, r6
 8012a00:	80d3      	strh	r3, [r2, #6]
 8012a02:	e74c      	b.n	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a04:	9d05      	ldr	r5, [sp, #20]
 8012a06:	1aa2      	subs	r2, r4, r2
 8012a08:	eba5 0501 	sub.w	r5, r5, r1
 8012a0c:	9508      	str	r5, [sp, #32]
 8012a0e:	9202      	str	r2, [sp, #8]
 8012a10:	f140 8128 	bpl.w	8012c64 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 8012a14:	9a03      	ldr	r2, [sp, #12]
 8012a16:	2a00      	cmp	r2, #0
 8012a18:	f6ff af41 	blt.w	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012a1c:	9a02      	ldr	r2, [sp, #8]
 8012a1e:	4252      	negs	r2, r2
 8012a20:	9202      	str	r2, [sp, #8]
 8012a22:	9a06      	ldr	r2, [sp, #24]
 8012a24:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 8012a28:	f04f 34ff 	mov.w	r4, #4294967295
 8012a2c:	9206      	str	r2, [sp, #24]
 8012a2e:	462a      	mov	r2, r5
 8012a30:	940b      	str	r4, [sp, #44]	; 0x2c
 8012a32:	435a      	muls	r2, r3
 8012a34:	2400      	movs	r4, #0
 8012a36:	9d02      	ldr	r5, [sp, #8]
 8012a38:	9401      	str	r4, [sp, #4]
 8012a3a:	9c02      	ldr	r4, [sp, #8]
 8012a3c:	fb92 f4f4 	sdiv	r4, r2, r4
 8012a40:	fb05 2214 	mls	r2, r5, r4, r2
 8012a44:	2a00      	cmp	r2, #0
 8012a46:	9207      	str	r2, [sp, #28]
 8012a48:	bfbc      	itt	lt
 8012a4a:	1952      	addlt	r2, r2, r5
 8012a4c:	9207      	strlt	r2, [sp, #28]
 8012a4e:	9a01      	ldr	r2, [sp, #4]
 8012a50:	6905      	ldr	r5, [r0, #16]
 8012a52:	bfb8      	it	lt
 8012a54:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012a58:	eb04 0901 	add.w	r9, r4, r1
 8012a5c:	429a      	cmp	r2, r3
 8012a5e:	ea4f 1669 	mov.w	r6, r9, asr #5
 8012a62:	f040 8112 	bne.w	8012c8a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 8012a66:	f9b5 3000 	ldrsh.w	r3, [r5]
 8012a6a:	429e      	cmp	r6, r3
 8012a6c:	d104      	bne.n	8012a78 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 8012a6e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8012a72:	9a03      	ldr	r2, [sp, #12]
 8012a74:	429a      	cmp	r2, r3
 8012a76:	d01b      	beq.n	8012ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012a78:	88ea      	ldrh	r2, [r5, #6]
 8012a7a:	88ab      	ldrh	r3, [r5, #4]
 8012a7c:	4313      	orrs	r3, r2
 8012a7e:	d010      	beq.n	8012aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a80:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8012a84:	2a00      	cmp	r2, #0
 8012a86:	db0c      	blt.n	8012aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a88:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012a8a:	429a      	cmp	r2, r3
 8012a8c:	da09      	bge.n	8012aa2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 8012a8e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 8012a92:	429a      	cmp	r2, r3
 8012a94:	bf38      	it	cc
 8012a96:	3508      	addcc	r5, #8
 8012a98:	f102 0201 	add.w	r2, r2, #1
 8012a9c:	bf38      	it	cc
 8012a9e:	6105      	strcc	r5, [r0, #16]
 8012aa0:	6082      	str	r2, [r0, #8]
 8012aa2:	6903      	ldr	r3, [r0, #16]
 8012aa4:	9a03      	ldr	r2, [sp, #12]
 8012aa6:	805a      	strh	r2, [r3, #2]
 8012aa8:	2200      	movs	r2, #0
 8012aaa:	801e      	strh	r6, [r3, #0]
 8012aac:	809a      	strh	r2, [r3, #4]
 8012aae:	80da      	strh	r2, [r3, #6]
 8012ab0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012ab2:	9a03      	ldr	r2, [sp, #12]
 8012ab4:	6901      	ldr	r1, [r0, #16]
 8012ab6:	441a      	add	r2, r3
 8012ab8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8012abc:	42b3      	cmp	r3, r6
 8012abe:	d103      	bne.n	8012ac8 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 8012ac0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8012ac4:	429a      	cmp	r2, r3
 8012ac6:	d01a      	beq.n	8012afe <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 8012ac8:	88cc      	ldrh	r4, [r1, #6]
 8012aca:	888b      	ldrh	r3, [r1, #4]
 8012acc:	4323      	orrs	r3, r4
 8012ace:	d010      	beq.n	8012af2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ad0:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012ad4:	2c00      	cmp	r4, #0
 8012ad6:	db0c      	blt.n	8012af2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ad8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012ada:	429c      	cmp	r4, r3
 8012adc:	da09      	bge.n	8012af2 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 8012ade:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012ae2:	429c      	cmp	r4, r3
 8012ae4:	bf38      	it	cc
 8012ae6:	3108      	addcc	r1, #8
 8012ae8:	f104 0401 	add.w	r4, r4, #1
 8012aec:	bf38      	it	cc
 8012aee:	6101      	strcc	r1, [r0, #16]
 8012af0:	6084      	str	r4, [r0, #8]
 8012af2:	6903      	ldr	r3, [r0, #16]
 8012af4:	2100      	movs	r1, #0
 8012af6:	801e      	strh	r6, [r3, #0]
 8012af8:	805a      	strh	r2, [r3, #2]
 8012afa:	8099      	strh	r1, [r3, #4]
 8012afc:	80d9      	strh	r1, [r3, #6]
 8012afe:	9b06      	ldr	r3, [sp, #24]
 8012b00:	4293      	cmp	r3, r2
 8012b02:	f000 8082 	beq.w	8012c0a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 8012b06:	9b08      	ldr	r3, [sp, #32]
 8012b08:	9c02      	ldr	r4, [sp, #8]
 8012b0a:	9902      	ldr	r1, [sp, #8]
 8012b0c:	015b      	lsls	r3, r3, #5
 8012b0e:	fb93 f1f1 	sdiv	r1, r3, r1
 8012b12:	fb04 3311 	mls	r3, r4, r1, r3
 8012b16:	2b00      	cmp	r3, #0
 8012b18:	9103      	str	r1, [sp, #12]
 8012b1a:	9308      	str	r3, [sp, #32]
 8012b1c:	da04      	bge.n	8012b28 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 8012b1e:	1e4b      	subs	r3, r1, #1
 8012b20:	9303      	str	r3, [sp, #12]
 8012b22:	9b08      	ldr	r3, [sp, #32]
 8012b24:	4423      	add	r3, r4
 8012b26:	9308      	str	r3, [sp, #32]
 8012b28:	9b07      	ldr	r3, [sp, #28]
 8012b2a:	9902      	ldr	r1, [sp, #8]
 8012b2c:	1a5b      	subs	r3, r3, r1
 8012b2e:	9307      	str	r3, [sp, #28]
 8012b30:	9b01      	ldr	r3, [sp, #4]
 8012b32:	f1c3 0320 	rsb	r3, r3, #32
 8012b36:	930e      	str	r3, [sp, #56]	; 0x38
 8012b38:	990e      	ldr	r1, [sp, #56]	; 0x38
 8012b3a:	9b01      	ldr	r3, [sp, #4]
 8012b3c:	1a5b      	subs	r3, r3, r1
 8012b3e:	464f      	mov	r7, r9
 8012b40:	930a      	str	r3, [sp, #40]	; 0x28
 8012b42:	2600      	movs	r6, #0
 8012b44:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 8012b48:	185b      	adds	r3, r3, r1
 8012b4a:	bf58      	it	pl
 8012b4c:	9902      	ldrpl	r1, [sp, #8]
 8012b4e:	9307      	str	r3, [sp, #28]
 8012b50:	bf5d      	ittte	pl
 8012b52:	1a5b      	subpl	r3, r3, r1
 8012b54:	9307      	strpl	r3, [sp, #28]
 8012b56:	9b03      	ldrpl	r3, [sp, #12]
 8012b58:	9903      	ldrmi	r1, [sp, #12]
 8012b5a:	bf58      	it	pl
 8012b5c:	1c59      	addpl	r1, r3, #1
 8012b5e:	4489      	add	r9, r1
 8012b60:	2a00      	cmp	r2, #0
 8012b62:	ea4f 1a69 	mov.w	sl, r9, asr #5
 8012b66:	db2e      	blt.n	8012bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b68:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012b6a:	4293      	cmp	r3, r2
 8012b6c:	dd2b      	ble.n	8012bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b6e:	9c01      	ldr	r4, [sp, #4]
 8012b70:	6905      	ldr	r5, [r0, #16]
 8012b72:	46a0      	mov	r8, r4
 8012b74:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8012b76:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 8012b7a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 8012b7e:	45a0      	cmp	r8, r4
 8012b80:	f040 814f 	bne.w	8012e22 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 8012b84:	f9b5 1000 	ldrsh.w	r1, [r5]
 8012b88:	4551      	cmp	r1, sl
 8012b8a:	d103      	bne.n	8012b94 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 8012b8c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b90:	4291      	cmp	r1, r2
 8012b92:	d018      	beq.n	8012bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012b94:	ea5c 010e 	orrs.w	r1, ip, lr
 8012b98:	d00f      	beq.n	8012bba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012b9a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 8012b9e:	2900      	cmp	r1, #0
 8012ba0:	db0b      	blt.n	8012bba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012ba2:	428b      	cmp	r3, r1
 8012ba4:	dd09      	ble.n	8012bba <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 8012ba6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 8012baa:	4299      	cmp	r1, r3
 8012bac:	bf38      	it	cc
 8012bae:	3508      	addcc	r5, #8
 8012bb0:	f101 0101 	add.w	r1, r1, #1
 8012bb4:	bf38      	it	cc
 8012bb6:	6105      	strcc	r5, [r0, #16]
 8012bb8:	6081      	str	r1, [r0, #8]
 8012bba:	6903      	ldr	r3, [r0, #16]
 8012bbc:	f8a3 a000 	strh.w	sl, [r3]
 8012bc0:	805a      	strh	r2, [r3, #2]
 8012bc2:	809e      	strh	r6, [r3, #4]
 8012bc4:	80de      	strh	r6, [r3, #6]
 8012bc6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012bc8:	6901      	ldr	r1, [r0, #16]
 8012bca:	441a      	add	r2, r3
 8012bcc:	88cc      	ldrh	r4, [r1, #6]
 8012bce:	888b      	ldrh	r3, [r1, #4]
 8012bd0:	4323      	orrs	r3, r4
 8012bd2:	d010      	beq.n	8012bf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bd4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 8012bd8:	2c00      	cmp	r4, #0
 8012bda:	db0c      	blt.n	8012bf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012bdc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8012bde:	429c      	cmp	r4, r3
 8012be0:	da09      	bge.n	8012bf6 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 8012be2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8012be6:	429c      	cmp	r4, r3
 8012be8:	bf38      	it	cc
 8012bea:	3108      	addcc	r1, #8
 8012bec:	f104 0401 	add.w	r4, r4, #1
 8012bf0:	bf38      	it	cc
 8012bf2:	6101      	strcc	r1, [r0, #16]
 8012bf4:	6084      	str	r4, [r0, #8]
 8012bf6:	6903      	ldr	r3, [r0, #16]
 8012bf8:	f8a3 a000 	strh.w	sl, [r3]
 8012bfc:	805a      	strh	r2, [r3, #2]
 8012bfe:	809e      	strh	r6, [r3, #4]
 8012c00:	80de      	strh	r6, [r3, #6]
 8012c02:	9b06      	ldr	r3, [sp, #24]
 8012c04:	4293      	cmp	r3, r2
 8012c06:	464f      	mov	r7, r9
 8012c08:	d19c      	bne.n	8012b44 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 8012c0a:	9b01      	ldr	r3, [sp, #4]
 8012c0c:	6907      	ldr	r7, [r0, #16]
 8012c0e:	f1c3 0620 	rsb	r6, r3, #32
 8012c12:	9b05      	ldr	r3, [sp, #20]
 8012c14:	ea4f 1e63 	mov.w	lr, r3, asr #5
 8012c18:	9b04      	ldr	r3, [sp, #16]
 8012c1a:	429e      	cmp	r6, r3
 8012c1c:	f040 81cc 	bne.w	8012fb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 8012c20:	f9b7 3000 	ldrsh.w	r3, [r7]
 8012c24:	459e      	cmp	lr, r3
 8012c26:	d104      	bne.n	8012c32 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 8012c28:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c2c:	429a      	cmp	r2, r3
 8012c2e:	f43f ae36 	beq.w	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c32:	88f9      	ldrh	r1, [r7, #6]
 8012c34:	88bb      	ldrh	r3, [r7, #4]
 8012c36:	430b      	orrs	r3, r1
 8012c38:	d010      	beq.n	8012c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c3a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8012c3e:	2b00      	cmp	r3, #0
 8012c40:	db0c      	blt.n	8012c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c42:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8012c44:	428b      	cmp	r3, r1
 8012c46:	da09      	bge.n	8012c5c <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 8012c48:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 8012c4c:	428b      	cmp	r3, r1
 8012c4e:	bf38      	it	cc
 8012c50:	3708      	addcc	r7, #8
 8012c52:	f103 0301 	add.w	r3, r3, #1
 8012c56:	bf38      	it	cc
 8012c58:	6107      	strcc	r7, [r0, #16]
 8012c5a:	6083      	str	r3, [r0, #8]
 8012c5c:	6903      	ldr	r3, [r0, #16]
 8012c5e:	f8a3 e000 	strh.w	lr, [r3]
 8012c62:	e5ff      	b.n	8012864 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 8012c64:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 8012c66:	9c03      	ldr	r4, [sp, #12]
 8012c68:	42a2      	cmp	r2, r4
 8012c6a:	f6ff ae18 	blt.w	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012c6e:	9c06      	ldr	r4, [sp, #24]
 8012c70:	42a2      	cmp	r2, r4
 8012c72:	bfb8      	it	lt
 8012c74:	3201      	addlt	r2, #1
 8012c76:	9c08      	ldr	r4, [sp, #32]
 8012c78:	bfb8      	it	lt
 8012c7a:	9206      	strlt	r2, [sp, #24]
 8012c7c:	f1c3 0220 	rsb	r2, r3, #32
 8012c80:	4362      	muls	r2, r4
 8012c82:	2401      	movs	r4, #1
 8012c84:	940b      	str	r4, [sp, #44]	; 0x2c
 8012c86:	2420      	movs	r4, #32
 8012c88:	e6d5      	b.n	8012a36 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 8012c8a:	f009 021f 	and.w	r2, r9, #31
 8012c8e:	ea4f 1861 	mov.w	r8, r1, asr #5
 8012c92:	920c      	str	r2, [sp, #48]	; 0x30
 8012c94:	9a01      	ldr	r2, [sp, #4]
 8012c96:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 8012c9a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 8012c9e:	45b0      	cmp	r8, r6
 8012ca0:	f001 011f 	and.w	r1, r1, #31
 8012ca4:	eba2 0203 	sub.w	r2, r2, r3
 8012ca8:	d108      	bne.n	8012cbc <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 8012caa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012cac:	4419      	add	r1, r3
 8012cae:	4496      	add	lr, r2
 8012cb0:	fb02 a101 	mla	r1, r2, r1, sl
 8012cb4:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012cb8:	80e9      	strh	r1, [r5, #6]
 8012cba:	e6f9      	b.n	8012ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012cbc:	2c00      	cmp	r4, #0
 8012cbe:	f2c0 80a9 	blt.w	8012e14 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 8012cc2:	2701      	movs	r7, #1
 8012cc4:	f1c1 0c20 	rsb	ip, r1, #32
 8012cc8:	970a      	str	r7, [sp, #40]	; 0x28
 8012cca:	fb02 f20c 	mul.w	r2, r2, ip
 8012cce:	2720      	movs	r7, #32
 8012cd0:	9709      	str	r7, [sp, #36]	; 0x24
 8012cd2:	fb92 fcf4 	sdiv	ip, r2, r4
 8012cd6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8012cd8:	fb04 221c 	mls	r2, r4, ip, r2
 8012cdc:	2a00      	cmp	r2, #0
 8012cde:	bfb8      	it	lt
 8012ce0:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 8012ce4:	4439      	add	r1, r7
 8012ce6:	fb0c a101 	mla	r1, ip, r1, sl
 8012cea:	80e9      	strh	r1, [r5, #6]
 8012cec:	44e6      	add	lr, ip
 8012cee:	990a      	ldr	r1, [sp, #40]	; 0x28
 8012cf0:	f8a5 e004 	strh.w	lr, [r5, #4]
 8012cf4:	eb08 0501 	add.w	r5, r8, r1
 8012cf8:	6901      	ldr	r1, [r0, #16]
 8012cfa:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8012cfe:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 8012d02:	bfb8      	it	lt
 8012d04:	1912      	addlt	r2, r2, r4
 8012d06:	ea58 070e 	orrs.w	r7, r8, lr
 8012d0a:	d010      	beq.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d0c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 8012d10:	f1be 0f00 	cmp.w	lr, #0
 8012d14:	db0b      	blt.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d16:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012d18:	45be      	cmp	lr, r7
 8012d1a:	da08      	bge.n	8012d2e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 8012d1c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012d20:	45be      	cmp	lr, r7
 8012d22:	bf3c      	itt	cc
 8012d24:	3108      	addcc	r1, #8
 8012d26:	6101      	strcc	r1, [r0, #16]
 8012d28:	f10e 0101 	add.w	r1, lr, #1
 8012d2c:	6081      	str	r1, [r0, #8]
 8012d2e:	6901      	ldr	r1, [r0, #16]
 8012d30:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8012d34:	800d      	strh	r5, [r1, #0]
 8012d36:	f04f 0e00 	mov.w	lr, #0
 8012d3a:	42ae      	cmp	r6, r5
 8012d3c:	f8a1 8002 	strh.w	r8, [r1, #2]
 8012d40:	f8a1 e004 	strh.w	lr, [r1, #4]
 8012d44:	f8a1 e006 	strh.w	lr, [r1, #6]
 8012d48:	4463      	add	r3, ip
 8012d4a:	d054      	beq.n	8012df6 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 8012d4c:	9901      	ldr	r1, [sp, #4]
 8012d4e:	1ac9      	subs	r1, r1, r3
 8012d50:	4461      	add	r1, ip
 8012d52:	0149      	lsls	r1, r1, #5
 8012d54:	fb91 fef4 	sdiv	lr, r1, r4
 8012d58:	fb04 111e 	mls	r1, r4, lr, r1
 8012d5c:	2900      	cmp	r1, #0
 8012d5e:	bfb8      	it	lt
 8012d60:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 8012d64:	f10e 0701 	add.w	r7, lr, #1
 8012d68:	bfb8      	it	lt
 8012d6a:	1909      	addlt	r1, r1, r4
 8012d6c:	1b12      	subs	r2, r2, r4
 8012d6e:	970d      	str	r7, [sp, #52]	; 0x34
 8012d70:	f8d0 a010 	ldr.w	sl, [r0, #16]
 8012d74:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012d76:	f8ba b004 	ldrh.w	fp, [sl, #4]
 8012d7a:	1852      	adds	r2, r2, r1
 8012d7c:	bf54      	ite	pl
 8012d7e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 8012d82:	46f4      	movmi	ip, lr
 8012d84:	44e3      	add	fp, ip
 8012d86:	f8aa b004 	strh.w	fp, [sl, #4]
 8012d8a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 8012d8e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 8012d92:	f8aa b006 	strh.w	fp, [sl, #6]
 8012d96:	4463      	add	r3, ip
 8012d98:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012d9c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 8012da0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 8012da4:	bf58      	it	pl
 8012da6:	1b12      	subpl	r2, r2, r4
 8012da8:	443d      	add	r5, r7
 8012daa:	ea5b 070a 	orrs.w	r7, fp, sl
 8012dae:	d014      	beq.n	8012dda <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012db0:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 8012db4:	f1ba 0f00 	cmp.w	sl, #0
 8012db8:	db0f      	blt.n	8012dda <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012dba:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012dbc:	45ba      	cmp	sl, r7
 8012dbe:	da0c      	bge.n	8012dda <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 8012dc0:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 8012dc4:	45ba      	cmp	sl, r7
 8012dc6:	bf38      	it	cc
 8012dc8:	f10c 0c08 	addcc.w	ip, ip, #8
 8012dcc:	f10a 0a01 	add.w	sl, sl, #1
 8012dd0:	bf38      	it	cc
 8012dd2:	f8c0 c010 	strcc.w	ip, [r0, #16]
 8012dd6:	f8c0 a008 	str.w	sl, [r0, #8]
 8012dda:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012dde:	f04f 0700 	mov.w	r7, #0
 8012de2:	42ae      	cmp	r6, r5
 8012de4:	f8ac 5000 	strh.w	r5, [ip]
 8012de8:	f8ac 8002 	strh.w	r8, [ip, #2]
 8012dec:	f8ac 7004 	strh.w	r7, [ip, #4]
 8012df0:	f8ac 7006 	strh.w	r7, [ip, #6]
 8012df4:	d1bc      	bne.n	8012d70 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 8012df6:	6904      	ldr	r4, [r0, #16]
 8012df8:	9a01      	ldr	r2, [sp, #4]
 8012dfa:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012dfc:	1ad3      	subs	r3, r2, r3
 8012dfe:	88a2      	ldrh	r2, [r4, #4]
 8012e00:	441a      	add	r2, r3
 8012e02:	80a2      	strh	r2, [r4, #4]
 8012e04:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012e06:	3120      	adds	r1, #32
 8012e08:	1a89      	subs	r1, r1, r2
 8012e0a:	88e2      	ldrh	r2, [r4, #6]
 8012e0c:	fb03 2301 	mla	r3, r3, r1, r2
 8012e10:	80e3      	strh	r3, [r4, #6]
 8012e12:	e64d      	b.n	8012ab0 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 8012e14:	f04f 37ff 	mov.w	r7, #4294967295
 8012e18:	970a      	str	r7, [sp, #40]	; 0x28
 8012e1a:	434a      	muls	r2, r1
 8012e1c:	4264      	negs	r4, r4
 8012e1e:	2700      	movs	r7, #0
 8012e20:	e756      	b.n	8012cd0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 8012e22:	ea4f 1867 	mov.w	r8, r7, asr #5
 8012e26:	f009 031f 	and.w	r3, r9, #31
 8012e2a:	45d0      	cmp	r8, sl
 8012e2c:	f007 071f 	and.w	r7, r7, #31
 8012e30:	930f      	str	r3, [sp, #60]	; 0x3c
 8012e32:	fa1f fc8c 	uxth.w	ip, ip
 8012e36:	fa1f fe8e 	uxth.w	lr, lr
 8012e3a:	d10a      	bne.n	8012e52 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 8012e3c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e3e:	449c      	add	ip, r3
 8012e40:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012e42:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e46:	441f      	add	r7, r3
 8012e48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012e4a:	fb03 e707 	mla	r7, r3, r7, lr
 8012e4e:	80ef      	strh	r7, [r5, #6]
 8012e50:	e6b9      	b.n	8012bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012e52:	2900      	cmp	r1, #0
 8012e54:	f2c0 80a8 	blt.w	8012fa8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 8012e58:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012e5a:	f1c7 0320 	rsb	r3, r7, #32
 8012e5e:	4363      	muls	r3, r4
 8012e60:	2401      	movs	r4, #1
 8012e62:	940d      	str	r4, [sp, #52]	; 0x34
 8012e64:	2420      	movs	r4, #32
 8012e66:	940c      	str	r4, [sp, #48]	; 0x30
 8012e68:	fb93 f4f1 	sdiv	r4, r3, r1
 8012e6c:	fb01 3b14 	mls	fp, r1, r4, r3
 8012e70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012e72:	f1bb 0f00 	cmp.w	fp, #0
 8012e76:	bfb8      	it	lt
 8012e78:	f104 34ff 	addlt.w	r4, r4, #4294967295
 8012e7c:	441f      	add	r7, r3
 8012e7e:	fb04 e707 	mla	r7, r4, r7, lr
 8012e82:	44a4      	add	ip, r4
 8012e84:	f8a5 c004 	strh.w	ip, [r5, #4]
 8012e88:	80ef      	strh	r7, [r5, #6]
 8012e8a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8012e8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012e90:	f8bc e006 	ldrh.w	lr, [ip, #6]
 8012e94:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8012e98:	bfb8      	it	lt
 8012e9a:	448b      	addlt	fp, r1
 8012e9c:	eb08 0503 	add.w	r5, r8, r3
 8012ea0:	ea5e 0307 	orrs.w	r3, lr, r7
 8012ea4:	d011      	beq.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012ea6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 8012eaa:	f1be 0f00 	cmp.w	lr, #0
 8012eae:	db0c      	blt.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012eb0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012eb2:	45be      	cmp	lr, r7
 8012eb4:	da09      	bge.n	8012eca <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 8012eb6:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 8012eba:	45be      	cmp	lr, r7
 8012ebc:	bf3c      	itt	cc
 8012ebe:	f10c 0708 	addcc.w	r7, ip, #8
 8012ec2:	6107      	strcc	r7, [r0, #16]
 8012ec4:	f10e 0701 	add.w	r7, lr, #1
 8012ec8:	6087      	str	r7, [r0, #8]
 8012eca:	6907      	ldr	r7, [r0, #16]
 8012ecc:	b213      	sxth	r3, r2
 8012ece:	9310      	str	r3, [sp, #64]	; 0x40
 8012ed0:	807b      	strh	r3, [r7, #2]
 8012ed2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012ed4:	803d      	strh	r5, [r7, #0]
 8012ed6:	4555      	cmp	r5, sl
 8012ed8:	80be      	strh	r6, [r7, #4]
 8012eda:	80fe      	strh	r6, [r7, #6]
 8012edc:	eb04 0c03 	add.w	ip, r4, r3
 8012ee0:	d051      	beq.n	8012f86 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 8012ee2:	9b01      	ldr	r3, [sp, #4]
 8012ee4:	eba3 070c 	sub.w	r7, r3, ip
 8012ee8:	443c      	add	r4, r7
 8012eea:	0164      	lsls	r4, r4, #5
 8012eec:	fb94 f8f1 	sdiv	r8, r4, r1
 8012ef0:	fb01 4418 	mls	r4, r1, r8, r4
 8012ef4:	2c00      	cmp	r4, #0
 8012ef6:	bfb8      	it	lt
 8012ef8:	f108 38ff 	addlt.w	r8, r8, #4294967295
 8012efc:	ebab 0301 	sub.w	r3, fp, r1
 8012f00:	f108 0701 	add.w	r7, r8, #1
 8012f04:	bfb8      	it	lt
 8012f06:	1864      	addlt	r4, r4, r1
 8012f08:	9309      	str	r3, [sp, #36]	; 0x24
 8012f0a:	9711      	str	r7, [sp, #68]	; 0x44
 8012f0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012f0e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f12:	191b      	adds	r3, r3, r4
 8012f14:	bf58      	it	pl
 8012f16:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 8012f18:	f8be b004 	ldrh.w	fp, [lr, #4]
 8012f1c:	9309      	str	r3, [sp, #36]	; 0x24
 8012f1e:	bf48      	it	mi
 8012f20:	4647      	movmi	r7, r8
 8012f22:	44bb      	add	fp, r7
 8012f24:	f8ae b004 	strh.w	fp, [lr, #4]
 8012f28:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f2c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 8012f30:	f8ae b006 	strh.w	fp, [lr, #6]
 8012f34:	f8d0 e010 	ldr.w	lr, [r0, #16]
 8012f38:	44bc      	add	ip, r7
 8012f3a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8012f3c:	f8be b006 	ldrh.w	fp, [lr, #6]
 8012f40:	443d      	add	r5, r7
 8012f42:	f8be 7004 	ldrh.w	r7, [lr, #4]
 8012f46:	bf5c      	itt	pl
 8012f48:	1a5b      	subpl	r3, r3, r1
 8012f4a:	9309      	strpl	r3, [sp, #36]	; 0x24
 8012f4c:	ea5b 0307 	orrs.w	r3, fp, r7
 8012f50:	d011      	beq.n	8012f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f52:	f9be b002 	ldrsh.w	fp, [lr, #2]
 8012f56:	f1bb 0f00 	cmp.w	fp, #0
 8012f5a:	db0c      	blt.n	8012f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f5c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 8012f5e:	45bb      	cmp	fp, r7
 8012f60:	da09      	bge.n	8012f76 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 8012f62:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8012f66:	45bb      	cmp	fp, r7
 8012f68:	bf3c      	itt	cc
 8012f6a:	f10e 0708 	addcc.w	r7, lr, #8
 8012f6e:	6107      	strcc	r7, [r0, #16]
 8012f70:	f10b 0701 	add.w	r7, fp, #1
 8012f74:	6087      	str	r7, [r0, #8]
 8012f76:	6907      	ldr	r7, [r0, #16]
 8012f78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8012f7a:	803d      	strh	r5, [r7, #0]
 8012f7c:	4555      	cmp	r5, sl
 8012f7e:	807b      	strh	r3, [r7, #2]
 8012f80:	80be      	strh	r6, [r7, #4]
 8012f82:	80fe      	strh	r6, [r7, #6]
 8012f84:	d1c2      	bne.n	8012f0c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 8012f86:	9b01      	ldr	r3, [sp, #4]
 8012f88:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8012f8a:	eba3 0c0c 	sub.w	ip, r3, ip
 8012f8e:	6903      	ldr	r3, [r0, #16]
 8012f90:	8899      	ldrh	r1, [r3, #4]
 8012f92:	4461      	add	r1, ip
 8012f94:	8099      	strh	r1, [r3, #4]
 8012f96:	990c      	ldr	r1, [sp, #48]	; 0x30
 8012f98:	3720      	adds	r7, #32
 8012f9a:	1a7f      	subs	r7, r7, r1
 8012f9c:	88d9      	ldrh	r1, [r3, #6]
 8012f9e:	fb0c 1c07 	mla	ip, ip, r7, r1
 8012fa2:	f8a3 c006 	strh.w	ip, [r3, #6]
 8012fa6:	e60e      	b.n	8012bc6 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 8012fa8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012faa:	f04f 34ff 	mov.w	r4, #4294967295
 8012fae:	940d      	str	r4, [sp, #52]	; 0x34
 8012fb0:	437b      	muls	r3, r7
 8012fb2:	4249      	negs	r1, r1
 8012fb4:	2400      	movs	r4, #0
 8012fb6:	e756      	b.n	8012e66 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 8012fb8:	9905      	ldr	r1, [sp, #20]
 8012fba:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 8012fbe:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 8012fc2:	f001 011f 	and.w	r1, r1, #31
 8012fc6:	ea4f 1b69 	mov.w	fp, r9, asr #5
 8012fca:	9102      	str	r1, [sp, #8]
 8012fcc:	9904      	ldr	r1, [sp, #16]
 8012fce:	45f3      	cmp	fp, lr
 8012fd0:	f009 0c1f 	and.w	ip, r9, #31
 8012fd4:	eba1 0406 	sub.w	r4, r1, r6
 8012fd8:	d108      	bne.n	8012fec <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 8012fda:	9b02      	ldr	r3, [sp, #8]
 8012fdc:	449c      	add	ip, r3
 8012fde:	44a0      	add	r8, r4
 8012fe0:	fb04 a40c 	mla	r4, r4, ip, sl
 8012fe4:	f8a7 8004 	strh.w	r8, [r7, #4]
 8012fe8:	80fc      	strh	r4, [r7, #6]
 8012fea:	e458      	b.n	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 8012fec:	9905      	ldr	r1, [sp, #20]
 8012fee:	ebb1 0109 	subs.w	r1, r1, r9
 8012ff2:	bf5b      	ittet	pl
 8012ff4:	f1cc 0520 	rsbpl	r5, ip, #32
 8012ff8:	436c      	mulpl	r4, r5
 8012ffa:	2500      	movmi	r5, #0
 8012ffc:	2520      	movpl	r5, #32
 8012ffe:	bf44      	itt	mi
 8013000:	fb04 f40c 	mulmi.w	r4, r4, ip
 8013004:	4249      	negmi	r1, r1
 8013006:	9501      	str	r5, [sp, #4]
 8013008:	9b01      	ldr	r3, [sp, #4]
 801300a:	fb94 f5f1 	sdiv	r5, r4, r1
 801300e:	fb01 4415 	mls	r4, r1, r5, r4
 8013012:	bf54      	ite	pl
 8013014:	f04f 0901 	movpl.w	r9, #1
 8013018:	f04f 39ff 	movmi.w	r9, #4294967295
 801301c:	2c00      	cmp	r4, #0
 801301e:	bfb8      	it	lt
 8013020:	f105 35ff 	addlt.w	r5, r5, #4294967295
 8013024:	449c      	add	ip, r3
 8013026:	44a8      	add	r8, r5
 8013028:	fb05 ac0c 	mla	ip, r5, ip, sl
 801302c:	f8a7 8004 	strh.w	r8, [r7, #4]
 8013030:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013034:	f8d0 c010 	ldr.w	ip, [r0, #16]
 8013038:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801303c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 8013040:	bfb8      	it	lt
 8013042:	1864      	addlt	r4, r4, r1
 8013044:	ea58 0707 	orrs.w	r7, r8, r7
 8013048:	eb0b 0309 	add.w	r3, fp, r9
 801304c:	d011      	beq.n	8013072 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801304e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 8013052:	f1b8 0f00 	cmp.w	r8, #0
 8013056:	db0c      	blt.n	8013072 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 8013058:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801305a:	45b8      	cmp	r8, r7
 801305c:	da09      	bge.n	8013072 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801305e:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 8013062:	45b8      	cmp	r8, r7
 8013064:	bf3c      	itt	cc
 8013066:	f10c 0708 	addcc.w	r7, ip, #8
 801306a:	6107      	strcc	r7, [r0, #16]
 801306c:	f108 0701 	add.w	r7, r8, #1
 8013070:	6087      	str	r7, [r0, #8]
 8013072:	6907      	ldr	r7, [r0, #16]
 8013074:	f04f 0c00 	mov.w	ip, #0
 8013078:	b212      	sxth	r2, r2
 801307a:	459e      	cmp	lr, r3
 801307c:	803b      	strh	r3, [r7, #0]
 801307e:	807a      	strh	r2, [r7, #2]
 8013080:	f8a7 c004 	strh.w	ip, [r7, #4]
 8013084:	f8a7 c006 	strh.w	ip, [r7, #6]
 8013088:	442e      	add	r6, r5
 801308a:	d04d      	beq.n	8013128 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801308c:	9f04      	ldr	r7, [sp, #16]
 801308e:	1bbf      	subs	r7, r7, r6
 8013090:	443d      	add	r5, r7
 8013092:	016d      	lsls	r5, r5, #5
 8013094:	fb95 f8f1 	sdiv	r8, r5, r1
 8013098:	fb01 5518 	mls	r5, r1, r8, r5
 801309c:	4565      	cmp	r5, ip
 801309e:	bfb8      	it	lt
 80130a0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 80130a4:	f108 0701 	add.w	r7, r8, #1
 80130a8:	bfb8      	it	lt
 80130aa:	186d      	addlt	r5, r5, r1
 80130ac:	1a64      	subs	r4, r4, r1
 80130ae:	9703      	str	r7, [sp, #12]
 80130b0:	f04f 0a00 	mov.w	sl, #0
 80130b4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130b8:	1964      	adds	r4, r4, r5
 80130ba:	bf58      	it	pl
 80130bc:	9f03      	ldrpl	r7, [sp, #12]
 80130be:	f8bc b004 	ldrh.w	fp, [ip, #4]
 80130c2:	bf48      	it	mi
 80130c4:	4647      	movmi	r7, r8
 80130c6:	44bb      	add	fp, r7
 80130c8:	f8ac b004 	strh.w	fp, [ip, #4]
 80130cc:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130d0:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 80130d4:	f8ac b006 	strh.w	fp, [ip, #6]
 80130d8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 80130dc:	443e      	add	r6, r7
 80130de:	f8bc b006 	ldrh.w	fp, [ip, #6]
 80130e2:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 80130e6:	bf58      	it	pl
 80130e8:	1a64      	subpl	r4, r4, r1
 80130ea:	ea5b 0707 	orrs.w	r7, fp, r7
 80130ee:	444b      	add	r3, r9
 80130f0:	d011      	beq.n	8013116 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130f2:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 80130f6:	f1bb 0f00 	cmp.w	fp, #0
 80130fa:	db0c      	blt.n	8013116 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 80130fc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 80130fe:	45bb      	cmp	fp, r7
 8013100:	da09      	bge.n	8013116 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 8013102:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 8013106:	45bb      	cmp	fp, r7
 8013108:	bf3c      	itt	cc
 801310a:	f10c 0708 	addcc.w	r7, ip, #8
 801310e:	6107      	strcc	r7, [r0, #16]
 8013110:	f10b 0701 	add.w	r7, fp, #1
 8013114:	6087      	str	r7, [r0, #8]
 8013116:	6907      	ldr	r7, [r0, #16]
 8013118:	459e      	cmp	lr, r3
 801311a:	803b      	strh	r3, [r7, #0]
 801311c:	807a      	strh	r2, [r7, #2]
 801311e:	f8a7 a004 	strh.w	sl, [r7, #4]
 8013122:	f8a7 a006 	strh.w	sl, [r7, #6]
 8013126:	d1c5      	bne.n	80130b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 8013128:	9b04      	ldr	r3, [sp, #16]
 801312a:	1b9e      	subs	r6, r3, r6
 801312c:	6903      	ldr	r3, [r0, #16]
 801312e:	889a      	ldrh	r2, [r3, #4]
 8013130:	4432      	add	r2, r6
 8013132:	809a      	strh	r2, [r3, #4]
 8013134:	9a02      	ldr	r2, [sp, #8]
 8013136:	f102 0c20 	add.w	ip, r2, #32
 801313a:	9a01      	ldr	r2, [sp, #4]
 801313c:	ebac 0c02 	sub.w	ip, ip, r2
 8013140:	88da      	ldrh	r2, [r3, #6]
 8013142:	fb06 260c 	mla	r6, r6, ip, r2
 8013146:	80de      	strh	r6, [r3, #6]
 8013148:	f7ff bba9 	b.w	801289e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801314c <_ZN8touchgfx7Outline6lineToEii>:
 801314c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801314e:	079b      	lsls	r3, r3, #30
 8013150:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8013152:	460e      	mov	r6, r1
 8013154:	4615      	mov	r5, r2
 8013156:	d511      	bpl.n	801317c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013158:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801315c:	ea86 0701 	eor.w	r7, r6, r1
 8013160:	ea85 0302 	eor.w	r3, r5, r2
 8013164:	433b      	orrs	r3, r7
 8013166:	d009      	beq.n	801317c <_ZN8touchgfx7Outline6lineToEii+0x30>
 8013168:	4633      	mov	r3, r6
 801316a:	9500      	str	r5, [sp, #0]
 801316c:	f7ff fb3e 	bl	80127ec <_ZN8touchgfx7Outline10renderLineEiiii>
 8013170:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013172:	e9c0 6505 	strd	r6, r5, [r0, #20]
 8013176:	f043 0301 	orr.w	r3, r3, #1
 801317a:	6243      	str	r3, [r0, #36]	; 0x24
 801317c:	b003      	add	sp, #12
 801317e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013180 <_ZN8touchgfx7Outline6moveToEii>:
 8013180:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8013182:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8013184:	4615      	mov	r5, r2
 8013186:	079a      	lsls	r2, r3, #30
 8013188:	4604      	mov	r4, r0
 801318a:	460e      	mov	r6, r1
 801318c:	d401      	bmi.n	8013192 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801318e:	f7ff faf9 	bl	8012784 <_ZN8touchgfx7Outline5resetEv>
 8013192:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013194:	07db      	lsls	r3, r3, #31
 8013196:	d504      	bpl.n	80131a2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 8013198:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801319c:	4620      	mov	r0, r4
 801319e:	f7ff ffd5 	bl	801314c <_ZN8touchgfx7Outline6lineToEii>
 80131a2:	6923      	ldr	r3, [r4, #16]
 80131a4:	f9b3 2000 	ldrsh.w	r2, [r3]
 80131a8:	1170      	asrs	r0, r6, #5
 80131aa:	4290      	cmp	r0, r2
 80131ac:	ea4f 1165 	mov.w	r1, r5, asr #5
 80131b0:	d103      	bne.n	80131ba <_ZN8touchgfx7Outline6moveToEii+0x3a>
 80131b2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131b6:	4291      	cmp	r1, r2
 80131b8:	d01a      	beq.n	80131f0 <_ZN8touchgfx7Outline6moveToEii+0x70>
 80131ba:	88df      	ldrh	r7, [r3, #6]
 80131bc:	889a      	ldrh	r2, [r3, #4]
 80131be:	433a      	orrs	r2, r7
 80131c0:	d010      	beq.n	80131e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131c2:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 80131c6:	2a00      	cmp	r2, #0
 80131c8:	db0c      	blt.n	80131e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131ca:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 80131cc:	42ba      	cmp	r2, r7
 80131ce:	da09      	bge.n	80131e4 <_ZN8touchgfx7Outline6moveToEii+0x64>
 80131d0:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 80131d4:	42ba      	cmp	r2, r7
 80131d6:	bf38      	it	cc
 80131d8:	3308      	addcc	r3, #8
 80131da:	f102 0201 	add.w	r2, r2, #1
 80131de:	bf38      	it	cc
 80131e0:	6123      	strcc	r3, [r4, #16]
 80131e2:	60a2      	str	r2, [r4, #8]
 80131e4:	6923      	ldr	r3, [r4, #16]
 80131e6:	2200      	movs	r2, #0
 80131e8:	8018      	strh	r0, [r3, #0]
 80131ea:	8059      	strh	r1, [r3, #2]
 80131ec:	809a      	strh	r2, [r3, #4]
 80131ee:	80da      	strh	r2, [r3, #6]
 80131f0:	6166      	str	r6, [r4, #20]
 80131f2:	e9c4 5606 	strd	r5, r6, [r4, #24]
 80131f6:	6225      	str	r5, [r4, #32]
 80131f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080131fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 80131fa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80131fe:	b0d0      	sub	sp, #320	; 0x140
 8013200:	466c      	mov	r4, sp
 8013202:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 8013206:	4627      	mov	r7, r4
 8013208:	1a0d      	subs	r5, r1, r0
 801320a:	2d48      	cmp	r5, #72	; 0x48
 801320c:	f100 0308 	add.w	r3, r0, #8
 8013210:	f340 80d5 	ble.w	80133be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013214:	112d      	asrs	r5, r5, #4
 8013216:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 801321a:	f9b0 9000 	ldrsh.w	r9, [r0]
 801321e:	6816      	ldr	r6, [r2, #0]
 8013220:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 8013224:	6006      	str	r6, [r0, #0]
 8013226:	6856      	ldr	r6, [r2, #4]
 8013228:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801322c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 8013230:	6046      	str	r6, [r0, #4]
 8013232:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8013236:	f8a2 8002 	strh.w	r8, [r2, #2]
 801323a:	f8a2 e004 	strh.w	lr, [r2, #4]
 801323e:	f8a2 c006 	strh.w	ip, [r2, #6]
 8013242:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 8013246:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801324a:	4565      	cmp	r5, ip
 801324c:	f1a1 0208 	sub.w	r2, r1, #8
 8013250:	db06      	blt.n	8013260 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 8013252:	d119      	bne.n	8013288 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013254:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 8013258:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801325c:	42ae      	cmp	r6, r5
 801325e:	dd13      	ble.n	8013288 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 8013260:	460e      	mov	r6, r1
 8013262:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 8013266:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801326a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801326e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 8013272:	601d      	str	r5, [r3, #0]
 8013274:	6875      	ldr	r5, [r6, #4]
 8013276:	605d      	str	r5, [r3, #4]
 8013278:	f821 9c08 	strh.w	r9, [r1, #-8]
 801327c:	f821 cc06 	strh.w	ip, [r1, #-6]
 8013280:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013284:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013288:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801328c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 8013290:	42ae      	cmp	r6, r5
 8013292:	db06      	blt.n	80132a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 8013294:	d116      	bne.n	80132c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 8013296:	f9b0 c000 	ldrsh.w	ip, [r0]
 801329a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801329e:	45ac      	cmp	ip, r5
 80132a0:	da10      	bge.n	80132c4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 80132a2:	681d      	ldr	r5, [r3, #0]
 80132a4:	f9b0 8000 	ldrsh.w	r8, [r0]
 80132a8:	6005      	str	r5, [r0, #0]
 80132aa:	685d      	ldr	r5, [r3, #4]
 80132ac:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 80132b0:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 80132b4:	f8a0 8008 	strh.w	r8, [r0, #8]
 80132b8:	6045      	str	r5, [r0, #4]
 80132ba:	8146      	strh	r6, [r0, #10]
 80132bc:	f8a0 e00c 	strh.w	lr, [r0, #12]
 80132c0:	f8a0 c00e 	strh.w	ip, [r0, #14]
 80132c4:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 80132c8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 80132cc:	4565      	cmp	r5, ip
 80132ce:	db06      	blt.n	80132de <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 80132d0:	d119      	bne.n	8013306 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132d2:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 80132d6:	f9b0 5000 	ldrsh.w	r5, [r0]
 80132da:	42ae      	cmp	r6, r5
 80132dc:	da13      	bge.n	8013306 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 80132de:	460e      	mov	r6, r1
 80132e0:	f9b0 9000 	ldrsh.w	r9, [r0]
 80132e4:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 80132e8:	6005      	str	r5, [r0, #0]
 80132ea:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 80132ee:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 80132f2:	6875      	ldr	r5, [r6, #4]
 80132f4:	6045      	str	r5, [r0, #4]
 80132f6:	f821 9c08 	strh.w	r9, [r1, #-8]
 80132fa:	f821 cc06 	strh.w	ip, [r1, #-6]
 80132fe:	f821 8c04 	strh.w	r8, [r1, #-4]
 8013302:	f821 ec02 	strh.w	lr, [r1, #-2]
 8013306:	3308      	adds	r3, #8
 8013308:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801330c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 8013310:	45e6      	cmp	lr, ip
 8013312:	dbf8      	blt.n	8013306 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013314:	d105      	bne.n	8013322 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 8013316:	f9b3 6000 	ldrsh.w	r6, [r3]
 801331a:	f9b0 5000 	ldrsh.w	r5, [r0]
 801331e:	42ae      	cmp	r6, r5
 8013320:	dbf1      	blt.n	8013306 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013322:	4615      	mov	r5, r2
 8013324:	3a08      	subs	r2, #8
 8013326:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801332a:	45b4      	cmp	ip, r6
 801332c:	dbf9      	blt.n	8013322 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801332e:	d105      	bne.n	801333c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 8013330:	f9b0 8000 	ldrsh.w	r8, [r0]
 8013334:	f9b2 6000 	ldrsh.w	r6, [r2]
 8013338:	45b0      	cmp	r8, r6
 801333a:	dbf2      	blt.n	8013322 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801333c:	4293      	cmp	r3, r2
 801333e:	f1a5 0608 	sub.w	r6, r5, #8
 8013342:	d816      	bhi.n	8013372 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 8013344:	f8d6 c000 	ldr.w	ip, [r6]
 8013348:	f9b3 a000 	ldrsh.w	sl, [r3]
 801334c:	f8c3 c000 	str.w	ip, [r3]
 8013350:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 8013354:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 8013358:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801335c:	f8c3 c004 	str.w	ip, [r3, #4]
 8013360:	f825 ac08 	strh.w	sl, [r5, #-8]
 8013364:	f825 ec06 	strh.w	lr, [r5, #-6]
 8013368:	f825 9c04 	strh.w	r9, [r5, #-4]
 801336c:	f825 8c02 	strh.w	r8, [r5, #-2]
 8013370:	e7c9      	b.n	8013306 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 8013372:	f8d6 e000 	ldr.w	lr, [r6]
 8013376:	f9b0 a000 	ldrsh.w	sl, [r0]
 801337a:	f8c0 e000 	str.w	lr, [r0]
 801337e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 8013382:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 8013386:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801338a:	f8c0 e004 	str.w	lr, [r0, #4]
 801338e:	f825 ac08 	strh.w	sl, [r5, #-8]
 8013392:	f825 cc06 	strh.w	ip, [r5, #-6]
 8013396:	f825 9c04 	strh.w	r9, [r5, #-4]
 801339a:	f825 8c02 	strh.w	r8, [r5, #-2]
 801339e:	1acd      	subs	r5, r1, r3
 80133a0:	1a16      	subs	r6, r2, r0
 80133a2:	10ed      	asrs	r5, r5, #3
 80133a4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 80133a8:	bfb5      	itete	lt
 80133aa:	e9c4 0200 	strdlt	r0, r2, [r4]
 80133ae:	e9c4 3100 	strdge	r3, r1, [r4]
 80133b2:	460a      	movlt	r2, r1
 80133b4:	4603      	movge	r3, r0
 80133b6:	3408      	adds	r4, #8
 80133b8:	4618      	mov	r0, r3
 80133ba:	4611      	mov	r1, r2
 80133bc:	e724      	b.n	8013208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 80133be:	4299      	cmp	r1, r3
 80133c0:	d928      	bls.n	8013414 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 80133c2:	f1a3 0210 	sub.w	r2, r3, #16
 80133c6:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 80133ca:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 80133ce:	45ac      	cmp	ip, r5
 80133d0:	db06      	blt.n	80133e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 80133d2:	d11d      	bne.n	8013410 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133d4:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 80133d8:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 80133dc:	42ae      	cmp	r6, r5
 80133de:	da17      	bge.n	8013410 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 80133e0:	4615      	mov	r5, r2
 80133e2:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 80133e6:	f855 6f08 	ldr.w	r6, [r5, #8]!
 80133ea:	6116      	str	r6, [r2, #16]
 80133ec:	686e      	ldr	r6, [r5, #4]
 80133ee:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 80133f2:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 80133f6:	f8a2 9008 	strh.w	r9, [r2, #8]
 80133fa:	42a8      	cmp	r0, r5
 80133fc:	6156      	str	r6, [r2, #20]
 80133fe:	f8a2 c00a 	strh.w	ip, [r2, #10]
 8013402:	f8a2 800c 	strh.w	r8, [r2, #12]
 8013406:	f8a2 e00e 	strh.w	lr, [r2, #14]
 801340a:	f1a2 0208 	sub.w	r2, r2, #8
 801340e:	d1da      	bne.n	80133c6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 8013410:	3308      	adds	r3, #8
 8013412:	e7d4      	b.n	80133be <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 8013414:	42bc      	cmp	r4, r7
 8013416:	d903      	bls.n	8013420 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 8013418:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801341c:	3c08      	subs	r4, #8
 801341e:	e6f3      	b.n	8013208 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 8013420:	b050      	add	sp, #320	; 0x140
 8013422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08013426 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 8013426:	b510      	push	{r4, lr}
 8013428:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801342a:	07da      	lsls	r2, r3, #31
 801342c:	4604      	mov	r4, r0
 801342e:	d507      	bpl.n	8013440 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 8013430:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 8013434:	f7ff fe8a 	bl	801314c <_ZN8touchgfx7Outline6lineToEii>
 8013438:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801343a:	f023 0301 	bic.w	r3, r3, #1
 801343e:	6243      	str	r3, [r0, #36]	; 0x24
 8013440:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013442:	079b      	lsls	r3, r3, #30
 8013444:	d521      	bpl.n	801348a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 8013446:	6923      	ldr	r3, [r4, #16]
 8013448:	88d9      	ldrh	r1, [r3, #6]
 801344a:	889a      	ldrh	r2, [r3, #4]
 801344c:	430a      	orrs	r2, r1
 801344e:	d010      	beq.n	8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013450:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8013454:	2a00      	cmp	r2, #0
 8013456:	db0c      	blt.n	8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 8013458:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801345a:	428a      	cmp	r2, r1
 801345c:	da09      	bge.n	8013472 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801345e:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 8013462:	4291      	cmp	r1, r2
 8013464:	bf88      	it	hi
 8013466:	3308      	addhi	r3, #8
 8013468:	f102 0201 	add.w	r2, r2, #1
 801346c:	bf88      	it	hi
 801346e:	6123      	strhi	r3, [r4, #16]
 8013470:	60a2      	str	r2, [r4, #8]
 8013472:	68a1      	ldr	r1, [r4, #8]
 8013474:	b129      	cbz	r1, 8013482 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 8013476:	6863      	ldr	r3, [r4, #4]
 8013478:	4299      	cmp	r1, r3
 801347a:	d802      	bhi.n	8013482 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801347c:	68e0      	ldr	r0, [r4, #12]
 801347e:	f7ff febc 	bl	80131fa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 8013482:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8013484:	f023 0302 	bic.w	r3, r3, #2
 8013488:	6263      	str	r3, [r4, #36]	; 0x24
 801348a:	68e0      	ldr	r0, [r4, #12]
 801348c:	bd10      	pop	{r4, pc}
	...

08013490 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 8013490:	4b02      	ldr	r3, [pc, #8]	; (801349c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 8013492:	6018      	str	r0, [r3, #0]
 8013494:	4b02      	ldr	r3, [pc, #8]	; (80134a0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 8013496:	6019      	str	r1, [r3, #0]
 8013498:	4770      	bx	lr
 801349a:	bf00      	nop
 801349c:	2000ef24 	.word	0x2000ef24
 80134a0:	2000ef28 	.word	0x2000ef28

080134a4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 80134a4:	4a02      	ldr	r2, [pc, #8]	; (80134b0 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 80134a6:	2300      	movs	r3, #0
 80134a8:	6013      	str	r3, [r2, #0]
 80134aa:	4a02      	ldr	r2, [pc, #8]	; (80134b4 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 80134ac:	6013      	str	r3, [r2, #0]
 80134ae:	4770      	bx	lr
 80134b0:	2000ef24 	.word	0x2000ef24
 80134b4:	2000ef28 	.word	0x2000ef28

080134b8 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 80134b8:	4b01      	ldr	r3, [pc, #4]	; (80134c0 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 80134ba:	6818      	ldr	r0, [r3, #0]
 80134bc:	4770      	bx	lr
 80134be:	bf00      	nop
 80134c0:	2000ef24 	.word	0x2000ef24

080134c4 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 80134c4:	4b01      	ldr	r3, [pc, #4]	; (80134cc <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 80134c6:	6818      	ldr	r0, [r3, #0]
 80134c8:	4770      	bx	lr
 80134ca:	bf00      	nop
 80134cc:	2000ef28 	.word	0x2000ef28

080134d0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 80134d0:	b510      	push	{r4, lr}
 80134d2:	6803      	ldr	r3, [r0, #0]
 80134d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80134d6:	460c      	mov	r4, r1
 80134d8:	4798      	blx	r3
 80134da:	1b03      	subs	r3, r0, r4
 80134dc:	4258      	negs	r0, r3
 80134de:	4158      	adcs	r0, r3
 80134e0:	bd10      	pop	{r4, pc}
	...

080134e4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 80134e4:	4b01      	ldr	r3, [pc, #4]	; (80134ec <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 80134e6:	6019      	str	r1, [r3, #0]
 80134e8:	4770      	bx	lr
 80134ea:	bf00      	nop
 80134ec:	2000ef2c 	.word	0x2000ef2c

080134f0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80134f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80134f4:	4696      	mov	lr, r2
 80134f6:	4605      	mov	r5, r0
 80134f8:	4614      	mov	r4, r2
 80134fa:	460e      	mov	r6, r1
 80134fc:	461f      	mov	r7, r3
 80134fe:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013502:	b097      	sub	sp, #92	; 0x5c
 8013504:	f10d 0c1c 	add.w	ip, sp, #28
 8013508:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801350c:	f8de 3000 	ldr.w	r3, [lr]
 8013510:	f8cc 3000 	str.w	r3, [ip]
 8013514:	f104 0e14 	add.w	lr, r4, #20
 8013518:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801351c:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013520:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013524:	f8de 3000 	ldr.w	r3, [lr]
 8013528:	f8cc 3000 	str.w	r3, [ip]
 801352c:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8013530:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013534:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8013538:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801353c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8013540:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8013544:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8013548:	f8de 3000 	ldr.w	r3, [lr]
 801354c:	f8cc 3000 	str.w	r3, [ip]
 8013550:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8013552:	682b      	ldr	r3, [r5, #0]
 8013554:	9201      	str	r2, [sp, #4]
 8013556:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801355a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801355c:	9200      	str	r2, [sp, #0]
 801355e:	f8cd 8008 	str.w	r8, [sp, #8]
 8013562:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8013566:	aa07      	add	r2, sp, #28
 8013568:	463b      	mov	r3, r7
 801356a:	4631      	mov	r1, r6
 801356c:	4628      	mov	r0, r5
 801356e:	47d8      	blx	fp
 8013570:	46a6      	mov	lr, r4
 8013572:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8013576:	f10d 0c1c 	add.w	ip, sp, #28
 801357a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801357e:	f8de 3000 	ldr.w	r3, [lr]
 8013582:	f8cc 3000 	str.w	r3, [ip]
 8013586:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801358a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801358e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8013592:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8013596:	343c      	adds	r4, #60	; 0x3c
 8013598:	f8de 3000 	ldr.w	r3, [lr]
 801359c:	f8cc 3000 	str.w	r3, [ip]
 80135a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80135a2:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 80135a6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80135aa:	6823      	ldr	r3, [r4, #0]
 80135ac:	f8cc 3000 	str.w	r3, [ip]
 80135b0:	682b      	ldr	r3, [r5, #0]
 80135b2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 80135b6:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80135b8:	9201      	str	r2, [sp, #4]
 80135ba:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80135bc:	9200      	str	r2, [sp, #0]
 80135be:	f8cd 8008 	str.w	r8, [sp, #8]
 80135c2:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 80135c4:	aa07      	add	r2, sp, #28
 80135c6:	463b      	mov	r3, r7
 80135c8:	4631      	mov	r1, r6
 80135ca:	4628      	mov	r0, r5
 80135cc:	47a0      	blx	r4
 80135ce:	b017      	add	sp, #92	; 0x5c
 80135d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080135d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 80135d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80135d8:	b08d      	sub	sp, #52	; 0x34
 80135da:	4688      	mov	r8, r1
 80135dc:	9916      	ldr	r1, [sp, #88]	; 0x58
 80135de:	f8d3 c000 	ldr.w	ip, [r3]
 80135e2:	680f      	ldr	r7, [r1, #0]
 80135e4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 80135e8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 80135ec:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 80135f0:	edd3 6a07 	vldr	s13, [r3, #28]
 80135f4:	9918      	ldr	r1, [sp, #96]	; 0x60
 80135f6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 80135fa:	f9b1 9000 	ldrsh.w	r9, [r1]
 80135fe:	f9ba 1000 	ldrsh.w	r1, [sl]
 8013602:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8013606:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801360a:	eba7 070c 	sub.w	r7, r7, ip
 801360e:	42bc      	cmp	r4, r7
 8013610:	bfa8      	it	ge
 8013612:	463c      	movge	r4, r7
 8013614:	ee07 4a90 	vmov	s15, r4
 8013618:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801361c:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8013620:	ee25 4a04 	vmul.f32	s8, s10, s8
 8013624:	ee65 4a24 	vmul.f32	s9, s10, s9
 8013628:	ee25 5a27 	vmul.f32	s10, s10, s15
 801362c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8013630:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013634:	eb09 0e0c 	add.w	lr, r9, ip
 8013638:	4571      	cmp	r1, lr
 801363a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801363e:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013642:	ee36 0a84 	vadd.f32	s0, s13, s8
 8013646:	ee61 1a87 	vmul.f32	s3, s3, s14
 801364a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801364e:	f340 808d 	ble.w	801376c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8013652:	eba1 060e 	sub.w	r6, r1, lr
 8013656:	fb96 f5f4 	sdiv	r5, r6, r4
 801365a:	ee07 5a10 	vmov	s14, r5
 801365e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013662:	2d00      	cmp	r5, #0
 8013664:	fb04 6615 	mls	r6, r4, r5, r6
 8013668:	eea7 0a04 	vfma.f32	s0, s14, s8
 801366c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013670:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013674:	dd13      	ble.n	801369e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8013676:	ee70 6a44 	vsub.f32	s13, s0, s8
 801367a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801367e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8013682:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013686:	bf18      	it	ne
 8013688:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801368c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013690:	bf08      	it	eq
 8013692:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013696:	ee61 1a87 	vmul.f32	s3, s3, s14
 801369a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801369e:	fb05 f204 	mul.w	r2, r5, r4
 80136a2:	1abf      	subs	r7, r7, r2
 80136a4:	4494      	add	ip, r2
 80136a6:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 80136aa:	4411      	add	r1, r2
 80136ac:	eb09 020c 	add.w	r2, r9, ip
 80136b0:	443a      	add	r2, r7
 80136b2:	b209      	sxth	r1, r1
 80136b4:	428a      	cmp	r2, r1
 80136b6:	bfc4      	itt	gt
 80136b8:	eba1 0209 	subgt.w	r2, r1, r9
 80136bc:	eba2 070c 	subgt.w	r7, r2, ip
 80136c0:	2f00      	cmp	r7, #0
 80136c2:	dd50      	ble.n	8013766 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 80136c4:	fb97 f1f4 	sdiv	r1, r7, r4
 80136c8:	fb04 7211 	mls	r2, r4, r1, r7
 80136cc:	b90a      	cbnz	r2, 80136d2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 80136ce:	3901      	subs	r1, #1
 80136d0:	4622      	mov	r2, r4
 80136d2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 80136d6:	6840      	ldr	r0, [r0, #4]
 80136d8:	900b      	str	r0, [sp, #44]	; 0x2c
 80136da:	f8d0 a000 	ldr.w	sl, [r0]
 80136de:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80136e0:	9008      	str	r0, [sp, #32]
 80136e2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 80136e6:	9818      	ldr	r0, [sp, #96]	; 0x60
 80136e8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 80136ec:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80136f0:	695b      	ldr	r3, [r3, #20]
 80136f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80136f4:	445b      	add	r3, fp
 80136f6:	eef0 6a42 	vmov.f32	s13, s4
 80136fa:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80136fe:	ee21 3a23 	vmul.f32	s6, s2, s7
 8013702:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8013706:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801370a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801370e:	9307      	str	r3, [sp, #28]
 8013710:	ee17 7a90 	vmov	r7, s15
 8013714:	ee73 7a42 	vsub.f32	s15, s6, s4
 8013718:	eeb0 7a61 	vmov.f32	s14, s3
 801371c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013720:	ee16 3a90 	vmov	r3, s13
 8013724:	fb97 f7f4 	sdiv	r7, r7, r4
 8013728:	ee17 ca90 	vmov	ip, s15
 801372c:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8013730:	fb9c fcf4 	sdiv	ip, ip, r4
 8013734:	fb0c 3306 	mla	r3, ip, r6, r3
 8013738:	9302      	str	r3, [sp, #8]
 801373a:	ee17 3a10 	vmov	r3, s14
 801373e:	44b6      	add	lr, r6
 8013740:	fb04 e505 	mla	r5, r4, r5, lr
 8013744:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013748:	fb07 3706 	mla	r7, r7, r6, r3
 801374c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8013750:	e9cd 4700 	strd	r4, r7, [sp]
 8013754:	2900      	cmp	r1, #0
 8013756:	bfcc      	ite	gt
 8013758:	46a1      	movgt	r9, r4
 801375a:	4691      	movle	r9, r2
 801375c:	eba9 0306 	sub.w	r3, r9, r6
 8013760:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013764:	47a0      	blx	r4
 8013766:	b00d      	add	sp, #52	; 0x34
 8013768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801376c:	2500      	movs	r5, #0
 801376e:	462e      	mov	r6, r5
 8013770:	e799      	b.n	80136a6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08013774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013774:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013778:	b0db      	sub	sp, #364	; 0x16c
 801377a:	461d      	mov	r5, r3
 801377c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8013780:	930a      	str	r3, [sp, #40]	; 0x28
 8013782:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8013786:	930b      	str	r3, [sp, #44]	; 0x2c
 8013788:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801378c:	9310      	str	r3, [sp, #64]	; 0x40
 801378e:	6803      	ldr	r3, [r0, #0]
 8013790:	910f      	str	r1, [sp, #60]	; 0x3c
 8013792:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8013794:	9009      	str	r0, [sp, #36]	; 0x24
 8013796:	4614      	mov	r4, r2
 8013798:	4629      	mov	r1, r5
 801379a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801379e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80137a2:	47b8      	blx	r7
 80137a4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137a6:	6058      	str	r0, [r3, #4]
 80137a8:	2800      	cmp	r0, #0
 80137aa:	f000 83a1 	beq.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137ae:	682b      	ldr	r3, [r5, #0]
 80137b0:	9314      	str	r3, [sp, #80]	; 0x50
 80137b2:	686b      	ldr	r3, [r5, #4]
 80137b4:	9315      	str	r3, [sp, #84]	; 0x54
 80137b6:	4bc4      	ldr	r3, [pc, #784]	; (8013ac8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 80137b8:	ed94 7a02 	vldr	s14, [r4, #8]
 80137bc:	7819      	ldrb	r1, [r3, #0]
 80137be:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 80137c2:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 80137c6:	2900      	cmp	r1, #0
 80137c8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137cc:	bf16      	itet	ne
 80137ce:	4619      	movne	r1, r3
 80137d0:	4611      	moveq	r1, r2
 80137d2:	4613      	movne	r3, r2
 80137d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137d8:	9116      	str	r1, [sp, #88]	; 0x58
 80137da:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 80137de:	f240 8387 	bls.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137e2:	ed94 7a07 	vldr	s14, [r4, #28]
 80137e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137ee:	f240 837f 	bls.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80137f2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 80137f6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80137fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137fe:	f240 8377 	bls.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013802:	6822      	ldr	r2, [r4, #0]
 8013804:	4bb1      	ldr	r3, [pc, #708]	; (8013acc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8013806:	429a      	cmp	r2, r3
 8013808:	f2c0 8372 	blt.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801380c:	49b0      	ldr	r1, [pc, #704]	; (8013ad0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801380e:	6963      	ldr	r3, [r4, #20]
 8013810:	428a      	cmp	r2, r1
 8013812:	f300 836d 	bgt.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013816:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801381a:	48ae      	ldr	r0, [pc, #696]	; (8013ad4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801381c:	33ff      	adds	r3, #255	; 0xff
 801381e:	4283      	cmp	r3, r0
 8013820:	f200 8366 	bhi.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013824:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8013826:	4dac      	ldr	r5, [pc, #688]	; (8013ad8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8013828:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801382c:	33ff      	adds	r3, #255	; 0xff
 801382e:	42ab      	cmp	r3, r5
 8013830:	f200 835e 	bhi.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013834:	6862      	ldr	r2, [r4, #4]
 8013836:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801383a:	33ff      	adds	r3, #255	; 0xff
 801383c:	4283      	cmp	r3, r0
 801383e:	f200 8357 	bhi.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013842:	69a1      	ldr	r1, [r4, #24]
 8013844:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 8013848:	33ff      	adds	r3, #255	; 0xff
 801384a:	4283      	cmp	r3, r0
 801384c:	f200 8350 	bhi.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013850:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8013852:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 8013856:	30ff      	adds	r0, #255	; 0xff
 8013858:	42a8      	cmp	r0, r5
 801385a:	f200 8349 	bhi.w	8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801385e:	428a      	cmp	r2, r1
 8013860:	f280 8110 	bge.w	8013a84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013864:	429a      	cmp	r2, r3
 8013866:	f300 8119 	bgt.w	8013a9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801386a:	4299      	cmp	r1, r3
 801386c:	f280 811d 	bge.w	8013aaa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013870:	2502      	movs	r5, #2
 8013872:	2701      	movs	r7, #1
 8013874:	46a9      	mov	r9, r5
 8013876:	46b8      	mov	r8, r7
 8013878:	f04f 0a00 	mov.w	sl, #0
 801387c:	4621      	mov	r1, r4
 801387e:	a849      	add	r0, sp, #292	; 0x124
 8013880:	f003 feec 	bl	801765c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013884:	4622      	mov	r2, r4
 8013886:	4653      	mov	r3, sl
 8013888:	a949      	add	r1, sp, #292	; 0x124
 801388a:	f8cd 9000 	str.w	r9, [sp]
 801388e:	a819      	add	r0, sp, #100	; 0x64
 8013890:	f004 f814 	bl	80178bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013894:	4622      	mov	r2, r4
 8013896:	4653      	mov	r3, sl
 8013898:	a949      	add	r1, sp, #292	; 0x124
 801389a:	f8cd 8000 	str.w	r8, [sp]
 801389e:	a829      	add	r0, sp, #164	; 0xa4
 80138a0:	f004 f80c 	bl	80178bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80138a4:	4643      	mov	r3, r8
 80138a6:	4622      	mov	r2, r4
 80138a8:	a949      	add	r1, sp, #292	; 0x124
 80138aa:	f8cd 9000 	str.w	r9, [sp]
 80138ae:	a839      	add	r0, sp, #228	; 0xe4
 80138b0:	f004 f804 	bl	80178bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80138b4:	42af      	cmp	r7, r5
 80138b6:	bfb5      	itete	lt
 80138b8:	2300      	movlt	r3, #0
 80138ba:	2301      	movge	r3, #1
 80138bc:	930e      	strlt	r3, [sp, #56]	; 0x38
 80138be:	930e      	strge	r3, [sp, #56]	; 0x38
 80138c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80138c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 80138c6:	af12      	add	r7, sp, #72	; 0x48
 80138c8:	bfb9      	ittee	lt
 80138ca:	ad29      	addlt	r5, sp, #164	; 0xa4
 80138cc:	ac19      	addlt	r4, sp, #100	; 0x64
 80138ce:	ad19      	addge	r5, sp, #100	; 0x64
 80138d0:	ac29      	addge	r4, sp, #164	; 0xa4
 80138d2:	e887 0003 	stmia.w	r7, {r0, r1}
 80138d6:	b928      	cbnz	r0, 80138e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 80138d8:	4b80      	ldr	r3, [pc, #512]	; (8013adc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 80138da:	6818      	ldr	r0, [r3, #0]
 80138dc:	6803      	ldr	r3, [r0, #0]
 80138de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80138e0:	4798      	blx	r3
 80138e2:	6038      	str	r0, [r7, #0]
 80138e4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80138e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80138ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80138ee:	930c      	str	r3, [sp, #48]	; 0x30
 80138f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80138f2:	6963      	ldr	r3, [r4, #20]
 80138f4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80138f6:	440b      	add	r3, r1
 80138f8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80138fc:	4408      	add	r0, r1
 80138fe:	b200      	sxth	r0, r0
 8013900:	4283      	cmp	r3, r0
 8013902:	900d      	str	r0, [sp, #52]	; 0x34
 8013904:	f280 80dd 	bge.w	8013ac2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8013908:	428b      	cmp	r3, r1
 801390a:	da08      	bge.n	801391e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801390c:	2a00      	cmp	r2, #0
 801390e:	dd06      	ble.n	801391e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013910:	1acb      	subs	r3, r1, r3
 8013912:	429a      	cmp	r2, r3
 8013914:	f2c0 80e4 	blt.w	8013ae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8013918:	2b00      	cmp	r3, #0
 801391a:	f300 80e2 	bgt.w	8013ae2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801391e:	6967      	ldr	r7, [r4, #20]
 8013920:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013922:	443b      	add	r3, r7
 8013924:	461f      	mov	r7, r3
 8013926:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013928:	1bdf      	subs	r7, r3, r7
 801392a:	4297      	cmp	r7, r2
 801392c:	bfa8      	it	ge
 801392e:	4617      	movge	r7, r2
 8013930:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013934:	2f00      	cmp	r7, #0
 8013936:	f340 8166 	ble.w	8013c06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801393a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801393c:	6829      	ldr	r1, [r5, #0]
 801393e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013942:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013946:	6820      	ldr	r0, [r4, #0]
 8013948:	4411      	add	r1, r2
 801394a:	4299      	cmp	r1, r3
 801394c:	dd1a      	ble.n	8013984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801394e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013952:	440b      	add	r3, r1
 8013954:	4402      	add	r2, r0
 8013956:	b21b      	sxth	r3, r3
 8013958:	429a      	cmp	r2, r3
 801395a:	dc13      	bgt.n	8013984 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801395c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801395e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013960:	681b      	ldr	r3, [r3, #0]
 8013962:	9206      	str	r2, [sp, #24]
 8013964:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013966:	9205      	str	r2, [sp, #20]
 8013968:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801396a:	9500      	str	r5, [sp, #0]
 801396c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013970:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013972:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013974:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013978:	a912      	add	r1, sp, #72	; 0x48
 801397a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801397e:	aa49      	add	r2, sp, #292	; 0x124
 8013980:	4623      	mov	r3, r4
 8013982:	47c8      	blx	r9
 8013984:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013988:	441a      	add	r2, r3
 801398a:	6963      	ldr	r3, [r4, #20]
 801398c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013990:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013994:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013998:	68a1      	ldr	r1, [r4, #8]
 801399a:	ed94 6a08 	vldr	s12, [r4, #32]
 801399e:	6022      	str	r2, [r4, #0]
 80139a0:	3301      	adds	r3, #1
 80139a2:	6163      	str	r3, [r4, #20]
 80139a4:	69a3      	ldr	r3, [r4, #24]
 80139a6:	ee37 7a27 	vadd.f32	s14, s14, s15
 80139aa:	3b01      	subs	r3, #1
 80139ac:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 80139b0:	61a3      	str	r3, [r4, #24]
 80139b2:	6923      	ldr	r3, [r4, #16]
 80139b4:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80139bc:	edd4 6a07 	vldr	s13, [r4, #28]
 80139c0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80139c4:	440b      	add	r3, r1
 80139c6:	68e1      	ldr	r1, [r4, #12]
 80139c8:	6123      	str	r3, [r4, #16]
 80139ca:	ee76 6a86 	vadd.f32	s13, s13, s12
 80139ce:	428b      	cmp	r3, r1
 80139d0:	edc4 6a07 	vstr	s13, [r4, #28]
 80139d4:	db15      	blt.n	8013a02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 80139d6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80139da:	ee76 6a26 	vadd.f32	s13, s12, s13
 80139de:	3201      	adds	r2, #1
 80139e0:	edc4 6a07 	vstr	s13, [r4, #28]
 80139e4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80139e8:	6022      	str	r2, [r4, #0]
 80139ea:	ee36 7a87 	vadd.f32	s14, s13, s14
 80139ee:	1a5b      	subs	r3, r3, r1
 80139f0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80139f4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80139f8:	6123      	str	r3, [r4, #16]
 80139fa:	ee77 7a27 	vadd.f32	s15, s14, s15
 80139fe:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013a02:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013a06:	441a      	add	r2, r3
 8013a08:	696b      	ldr	r3, [r5, #20]
 8013a0a:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013a0e:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013a12:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013a16:	68a9      	ldr	r1, [r5, #8]
 8013a18:	ed95 6a08 	vldr	s12, [r5, #32]
 8013a1c:	602a      	str	r2, [r5, #0]
 8013a1e:	3301      	adds	r3, #1
 8013a20:	616b      	str	r3, [r5, #20]
 8013a22:	69ab      	ldr	r3, [r5, #24]
 8013a24:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013a28:	3b01      	subs	r3, #1
 8013a2a:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013a2e:	61ab      	str	r3, [r5, #24]
 8013a30:	692b      	ldr	r3, [r5, #16]
 8013a32:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013a3a:	edd5 6a07 	vldr	s13, [r5, #28]
 8013a3e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a42:	440b      	add	r3, r1
 8013a44:	68e9      	ldr	r1, [r5, #12]
 8013a46:	612b      	str	r3, [r5, #16]
 8013a48:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013a4c:	428b      	cmp	r3, r1
 8013a4e:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a52:	db15      	blt.n	8013a80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013a54:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013a58:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013a5c:	3201      	adds	r2, #1
 8013a5e:	edc5 6a07 	vstr	s13, [r5, #28]
 8013a62:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013a66:	602a      	str	r2, [r5, #0]
 8013a68:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013a6c:	1a5b      	subs	r3, r3, r1
 8013a6e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013a72:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013a76:	612b      	str	r3, [r5, #16]
 8013a78:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013a7c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013a80:	3f01      	subs	r7, #1
 8013a82:	e757      	b.n	8013934 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013a84:	4299      	cmp	r1, r3
 8013a86:	dc13      	bgt.n	8013ab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013a88:	429a      	cmp	r2, r3
 8013a8a:	da14      	bge.n	8013ab6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8013a8c:	2502      	movs	r5, #2
 8013a8e:	2703      	movs	r7, #3
 8013a90:	46a9      	mov	r9, r5
 8013a92:	f04f 0800 	mov.w	r8, #0
 8013a96:	f04f 0a01 	mov.w	sl, #1
 8013a9a:	e6ef      	b.n	801387c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013a9c:	2501      	movs	r5, #1
 8013a9e:	2700      	movs	r7, #0
 8013aa0:	46a9      	mov	r9, r5
 8013aa2:	46b8      	mov	r8, r7
 8013aa4:	f04f 0a02 	mov.w	sl, #2
 8013aa8:	e6e8      	b.n	801387c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8013aaa:	2501      	movs	r5, #1
 8013aac:	2702      	movs	r7, #2
 8013aae:	e6e1      	b.n	8013874 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013ab0:	2500      	movs	r5, #0
 8013ab2:	2701      	movs	r7, #1
 8013ab4:	e7f4      	b.n	8013aa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013ab6:	2702      	movs	r7, #2
 8013ab8:	2503      	movs	r5, #3
 8013aba:	f04f 0900 	mov.w	r9, #0
 8013abe:	46b8      	mov	r8, r7
 8013ac0:	e7e9      	b.n	8013a96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013ac2:	4613      	mov	r3, r2
 8013ac4:	e728      	b.n	8013918 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013ac6:	bf00      	nop
 8013ac8:	2000ef14 	.word	0x2000ef14
 8013acc:	fffd8f01 	.word	0xfffd8f01
 8013ad0:	00027100 	.word	0x00027100
 8013ad4:	0004e1ff 	.word	0x0004e1ff
 8013ad8:	0004e1fe 	.word	0x0004e1fe
 8013adc:	2000ef1c 	.word	0x2000ef1c
 8013ae0:	4613      	mov	r3, r2
 8013ae2:	992b      	ldr	r1, [sp, #172]	; 0xac
 8013ae4:	9111      	str	r1, [sp, #68]	; 0x44
 8013ae6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8013aea:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 8013aee:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8013af0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8013af4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8013af8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8013afc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 8013b00:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8013b04:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8013b08:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8013b0c:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 8013b10:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8013b14:	469e      	mov	lr, r3
 8013b16:	469c      	mov	ip, r3
 8013b18:	f04f 0900 	mov.w	r9, #0
 8013b1c:	f1bc 0f00 	cmp.w	ip, #0
 8013b20:	d147      	bne.n	8013bb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8013b22:	eb03 0c07 	add.w	ip, r3, r7
 8013b26:	1ad7      	subs	r7, r2, r3
 8013b28:	f1b9 0f00 	cmp.w	r9, #0
 8013b2c:	d009      	beq.n	8013b42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8013b2e:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 8013b32:	9029      	str	r0, [sp, #164]	; 0xa4
 8013b34:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8013b38:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8013b3c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 8013b40:	912d      	str	r1, [sp, #180]	; 0xb4
 8013b42:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013b44:	9111      	str	r1, [sp, #68]	; 0x44
 8013b46:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013b4a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013b4e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013b52:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013b56:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013b5a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013b5e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013b62:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013b66:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013b6a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013b6e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013b72:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013b76:	f04f 0800 	mov.w	r8, #0
 8013b7a:	f1be 0f00 	cmp.w	lr, #0
 8013b7e:	d031      	beq.n	8013be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013b80:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013b82:	4431      	add	r1, r6
 8013b84:	4549      	cmp	r1, r9
 8013b86:	4450      	add	r0, sl
 8013b88:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013b8c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013b90:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013b94:	db08      	blt.n	8013ba8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013b96:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013b9a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013b9e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013ba2:	3001      	adds	r0, #1
 8013ba4:	eba1 0109 	sub.w	r1, r1, r9
 8013ba8:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013bac:	f04f 0801 	mov.w	r8, #1
 8013bb0:	e7e3      	b.n	8013b7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013bb2:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8013bb4:	4431      	add	r1, r6
 8013bb6:	4541      	cmp	r1, r8
 8013bb8:	4450      	add	r0, sl
 8013bba:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013bbe:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013bc2:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013bc6:	db08      	blt.n	8013bda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013bc8:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013bcc:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013bd0:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013bd4:	3001      	adds	r0, #1
 8013bd6:	eba1 0108 	sub.w	r1, r1, r8
 8013bda:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013bde:	f04f 0901 	mov.w	r9, #1
 8013be2:	e79b      	b.n	8013b1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8013be4:	449c      	add	ip, r3
 8013be6:	1aff      	subs	r7, r7, r3
 8013be8:	f1b8 0f00 	cmp.w	r8, #0
 8013bec:	d009      	beq.n	8013c02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8013bee:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013bf2:	9019      	str	r0, [sp, #100]	; 0x64
 8013bf4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013bf8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013bfc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013c00:	911d      	str	r1, [sp, #116]	; 0x74
 8013c02:	1ad2      	subs	r2, r2, r3
 8013c04:	e68b      	b.n	801391e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8013c06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c08:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8013c0a:	2b00      	cmp	r3, #0
 8013c0c:	f000 80d1 	beq.w	8013db2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8013c10:	ad19      	add	r5, sp, #100	; 0x64
 8013c12:	ac39      	add	r4, sp, #228	; 0xe4
 8013c14:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c16:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8013c1a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8013c1e:	930c      	str	r3, [sp, #48]	; 0x30
 8013c20:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013c22:	6963      	ldr	r3, [r4, #20]
 8013c24:	440b      	add	r3, r1
 8013c26:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8013c2a:	4408      	add	r0, r1
 8013c2c:	b200      	sxth	r0, r0
 8013c2e:	4283      	cmp	r3, r0
 8013c30:	900d      	str	r0, [sp, #52]	; 0x34
 8013c32:	f280 80c1 	bge.w	8013db8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8013c36:	428b      	cmp	r3, r1
 8013c38:	da08      	bge.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c3a:	2a00      	cmp	r2, #0
 8013c3c:	dd06      	ble.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013c3e:	1acb      	subs	r3, r1, r3
 8013c40:	429a      	cmp	r2, r3
 8013c42:	f2c0 80bb 	blt.w	8013dbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013c46:	2b00      	cmp	r3, #0
 8013c48:	f300 80b9 	bgt.w	8013dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013c4c:	6967      	ldr	r7, [r4, #20]
 8013c4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013c50:	443b      	add	r3, r7
 8013c52:	461f      	mov	r7, r3
 8013c54:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c56:	1bdf      	subs	r7, r3, r7
 8013c58:	4297      	cmp	r7, r2
 8013c5a:	bfa8      	it	ge
 8013c5c:	4617      	movge	r7, r2
 8013c5e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8013c62:	2f00      	cmp	r7, #0
 8013c64:	f340 813c 	ble.w	8013ee0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013c68:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8013c6a:	6829      	ldr	r1, [r5, #0]
 8013c6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013c70:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013c74:	6820      	ldr	r0, [r4, #0]
 8013c76:	4411      	add	r1, r2
 8013c78:	4299      	cmp	r1, r3
 8013c7a:	dd1a      	ble.n	8013cb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c7c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013c80:	440b      	add	r3, r1
 8013c82:	4402      	add	r2, r0
 8013c84:	b21b      	sxth	r3, r3
 8013c86:	429a      	cmp	r2, r3
 8013c88:	dc13      	bgt.n	8013cb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013c8a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c8c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8013c8e:	681b      	ldr	r3, [r3, #0]
 8013c90:	9206      	str	r2, [sp, #24]
 8013c92:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8013c94:	9205      	str	r2, [sp, #20]
 8013c96:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013c98:	9500      	str	r5, [sp, #0]
 8013c9a:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013c9e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8013ca0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8013ca2:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013ca6:	a912      	add	r1, sp, #72	; 0x48
 8013ca8:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8013cac:	aa49      	add	r2, sp, #292	; 0x124
 8013cae:	4623      	mov	r3, r4
 8013cb0:	47c8      	blx	r9
 8013cb2:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013cb6:	441a      	add	r2, r3
 8013cb8:	6963      	ldr	r3, [r4, #20]
 8013cba:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8013cbe:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8013cc2:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8013cc6:	68a1      	ldr	r1, [r4, #8]
 8013cc8:	ed94 6a08 	vldr	s12, [r4, #32]
 8013ccc:	6022      	str	r2, [r4, #0]
 8013cce:	3301      	adds	r3, #1
 8013cd0:	6163      	str	r3, [r4, #20]
 8013cd2:	69a3      	ldr	r3, [r4, #24]
 8013cd4:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013cd8:	3b01      	subs	r3, #1
 8013cda:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8013cde:	61a3      	str	r3, [r4, #24]
 8013ce0:	6923      	ldr	r3, [r4, #16]
 8013ce2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013ce6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013cea:	edd4 6a07 	vldr	s13, [r4, #28]
 8013cee:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013cf2:	440b      	add	r3, r1
 8013cf4:	68e1      	ldr	r1, [r4, #12]
 8013cf6:	6123      	str	r3, [r4, #16]
 8013cf8:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013cfc:	428b      	cmp	r3, r1
 8013cfe:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d02:	db15      	blt.n	8013d30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8013d04:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8013d08:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d0c:	3201      	adds	r2, #1
 8013d0e:	edc4 6a07 	vstr	s13, [r4, #28]
 8013d12:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8013d16:	6022      	str	r2, [r4, #0]
 8013d18:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d1c:	1a5b      	subs	r3, r3, r1
 8013d1e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8013d22:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8013d26:	6123      	str	r3, [r4, #16]
 8013d28:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013d2c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8013d30:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013d34:	441a      	add	r2, r3
 8013d36:	696b      	ldr	r3, [r5, #20]
 8013d38:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8013d3c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 8013d40:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8013d44:	68a9      	ldr	r1, [r5, #8]
 8013d46:	ed95 6a08 	vldr	s12, [r5, #32]
 8013d4a:	602a      	str	r2, [r5, #0]
 8013d4c:	3301      	adds	r3, #1
 8013d4e:	616b      	str	r3, [r5, #20]
 8013d50:	69ab      	ldr	r3, [r5, #24]
 8013d52:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013d56:	3b01      	subs	r3, #1
 8013d58:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 8013d5c:	61ab      	str	r3, [r5, #24]
 8013d5e:	692b      	ldr	r3, [r5, #16]
 8013d60:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013d64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013d68:	edd5 6a07 	vldr	s13, [r5, #28]
 8013d6c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013d70:	440b      	add	r3, r1
 8013d72:	68e9      	ldr	r1, [r5, #12]
 8013d74:	612b      	str	r3, [r5, #16]
 8013d76:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013d7a:	428b      	cmp	r3, r1
 8013d7c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d80:	db15      	blt.n	8013dae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013d82:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8013d86:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013d8a:	3201      	adds	r2, #1
 8013d8c:	edc5 6a07 	vstr	s13, [r5, #28]
 8013d90:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8013d94:	602a      	str	r2, [r5, #0]
 8013d96:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013d9a:	1a5b      	subs	r3, r3, r1
 8013d9c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8013da0:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8013da4:	612b      	str	r3, [r5, #16]
 8013da6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013daa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8013dae:	3f01      	subs	r7, #1
 8013db0:	e757      	b.n	8013c62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013db2:	ad39      	add	r5, sp, #228	; 0xe4
 8013db4:	ac19      	add	r4, sp, #100	; 0x64
 8013db6:	e72d      	b.n	8013c14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013db8:	4613      	mov	r3, r2
 8013dba:	e744      	b.n	8013c46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013dbc:	4613      	mov	r3, r2
 8013dbe:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8013dc2:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8013dc4:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8013dc8:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8013dcc:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8013dd0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8013dd4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8013dd8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8013ddc:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8013de0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8013de2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8013de6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8013dea:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 8013dee:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8013df2:	960e      	str	r6, [sp, #56]	; 0x38
 8013df4:	469e      	mov	lr, r3
 8013df6:	461f      	mov	r7, r3
 8013df8:	f04f 0900 	mov.w	r9, #0
 8013dfc:	2f00      	cmp	r7, #0
 8013dfe:	d146      	bne.n	8013e8e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 8013e00:	449c      	add	ip, r3
 8013e02:	1ad7      	subs	r7, r2, r3
 8013e04:	f1b9 0f00 	cmp.w	r9, #0
 8013e08:	d009      	beq.n	8013e1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8013e0a:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 8013e0e:	9039      	str	r0, [sp, #228]	; 0xe4
 8013e10:	913d      	str	r1, [sp, #244]	; 0xf4
 8013e12:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8013e16:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8013e1a:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 8013e1e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 8013e20:	910e      	str	r1, [sp, #56]	; 0x38
 8013e22:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8013e26:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8013e2a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 8013e2e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 8013e32:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8013e36:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8013e3a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8013e3e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8013e42:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8013e46:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8013e4a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8013e4e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8013e52:	f04f 0800 	mov.w	r8, #0
 8013e56:	f1be 0f00 	cmp.w	lr, #0
 8013e5a:	d030      	beq.n	8013ebe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013e5c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e5e:	4431      	add	r1, r6
 8013e60:	4549      	cmp	r1, r9
 8013e62:	4450      	add	r0, sl
 8013e64:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013e68:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013e6c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013e70:	db08      	blt.n	8013e84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013e72:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013e76:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013e7a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013e7e:	3001      	adds	r0, #1
 8013e80:	eba1 0109 	sub.w	r1, r1, r9
 8013e84:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013e88:	f04f 0801 	mov.w	r8, #1
 8013e8c:	e7e3      	b.n	8013e56 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 8013e8e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8013e90:	4431      	add	r1, r6
 8013e92:	4541      	cmp	r1, r8
 8013e94:	4450      	add	r0, sl
 8013e96:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013e9a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013e9e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013ea2:	db08      	blt.n	8013eb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013ea4:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013ea8:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013eac:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013eb0:	3001      	adds	r0, #1
 8013eb2:	eba1 0108 	sub.w	r1, r1, r8
 8013eb6:	3f01      	subs	r7, #1
 8013eb8:	f04f 0901 	mov.w	r9, #1
 8013ebc:	e79e      	b.n	8013dfc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 8013ebe:	449c      	add	ip, r3
 8013ec0:	1aff      	subs	r7, r7, r3
 8013ec2:	f1b8 0f00 	cmp.w	r8, #0
 8013ec6:	d009      	beq.n	8013edc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013ec8:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8013ecc:	9019      	str	r0, [sp, #100]	; 0x64
 8013ece:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8013ed2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8013ed6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8013eda:	911d      	str	r1, [sp, #116]	; 0x74
 8013edc:	1ad2      	subs	r2, r2, r3
 8013ede:	e6b5      	b.n	8013c4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8013ee0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013ee2:	681b      	ldr	r3, [r3, #0]
 8013ee4:	b923      	cbnz	r3, 8013ef0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013ee6:	4b04      	ldr	r3, [pc, #16]	; (8013ef8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8013ee8:	6818      	ldr	r0, [r3, #0]
 8013eea:	6803      	ldr	r3, [r0, #0]
 8013eec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8013eee:	4798      	blx	r3
 8013ef0:	b05b      	add	sp, #364	; 0x16c
 8013ef2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ef6:	bf00      	nop
 8013ef8:	2000ef1c 	.word	0x2000ef1c

08013efc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8013efc:	b570      	push	{r4, r5, r6, lr}
 8013efe:	4604      	mov	r4, r0
 8013f00:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8013f04:	9805      	ldr	r0, [sp, #20]
 8013f06:	6061      	str	r1, [r4, #4]
 8013f08:	2500      	movs	r5, #0
 8013f0a:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8013f0e:	8263      	strh	r3, [r4, #18]
 8013f10:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8013f14:	8025      	strh	r5, [r4, #0]
 8013f16:	7221      	strb	r1, [r4, #8]
 8013f18:	7266      	strb	r6, [r4, #9]
 8013f1a:	60e0      	str	r0, [r4, #12]
 8013f1c:	8222      	strh	r2, [r4, #16]
 8013f1e:	82a3      	strh	r3, [r4, #20]
 8013f20:	82e5      	strh	r5, [r4, #22]
 8013f22:	8325      	strh	r5, [r4, #24]
 8013f24:	8365      	strh	r5, [r4, #26]
 8013f26:	83a5      	strh	r5, [r4, #28]
 8013f28:	83e5      	strh	r5, [r4, #30]
 8013f2a:	8425      	strh	r5, [r4, #32]
 8013f2c:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 8013f30:	b32e      	cbz	r6, 8013f7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f32:	6803      	ldr	r3, [r0, #0]
 8013f34:	695b      	ldr	r3, [r3, #20]
 8013f36:	4798      	blx	r3
 8013f38:	4606      	mov	r6, r0
 8013f3a:	b300      	cbz	r0, 8013f7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f3c:	68e0      	ldr	r0, [r4, #12]
 8013f3e:	6803      	ldr	r3, [r0, #0]
 8013f40:	4631      	mov	r1, r6
 8013f42:	68db      	ldr	r3, [r3, #12]
 8013f44:	4798      	blx	r3
 8013f46:	4605      	mov	r5, r0
 8013f48:	b1c8      	cbz	r0, 8013f7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f4a:	7b43      	ldrb	r3, [r0, #13]
 8013f4c:	7a82      	ldrb	r2, [r0, #10]
 8013f4e:	005b      	lsls	r3, r3, #1
 8013f50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013f54:	4313      	orrs	r3, r2
 8013f56:	8423      	strh	r3, [r4, #32]
 8013f58:	7a63      	ldrb	r3, [r4, #9]
 8013f5a:	2b06      	cmp	r3, #6
 8013f5c:	d10f      	bne.n	8013f7e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013f5e:	68e0      	ldr	r0, [r4, #12]
 8013f60:	6803      	ldr	r3, [r0, #0]
 8013f62:	462a      	mov	r2, r5
 8013f64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013f66:	4631      	mov	r1, r6
 8013f68:	4798      	blx	r3
 8013f6a:	7b6b      	ldrb	r3, [r5, #13]
 8013f6c:	005b      	lsls	r3, r3, #1
 8013f6e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013f72:	7aab      	ldrb	r3, [r5, #10]
 8013f74:	4313      	orrs	r3, r2
 8013f76:	4418      	add	r0, r3
 8013f78:	8c23      	ldrh	r3, [r4, #32]
 8013f7a:	4418      	add	r0, r3
 8013f7c:	8420      	strh	r0, [r4, #32]
 8013f7e:	4620      	mov	r0, r4
 8013f80:	bd70      	pop	{r4, r5, r6, pc}

08013f82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013f82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f86:	2400      	movs	r4, #0
 8013f88:	b085      	sub	sp, #20
 8013f8a:	4681      	mov	r9, r0
 8013f8c:	4688      	mov	r8, r1
 8013f8e:	4692      	mov	sl, r2
 8013f90:	469b      	mov	fp, r3
 8013f92:	4627      	mov	r7, r4
 8013f94:	4625      	mov	r5, r4
 8013f96:	4626      	mov	r6, r4
 8013f98:	4554      	cmp	r4, sl
 8013f9a:	da2a      	bge.n	8013ff2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013f9c:	2300      	movs	r3, #0
 8013f9e:	9303      	str	r3, [sp, #12]
 8013fa0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8013fa4:	429d      	cmp	r5, r3
 8013fa6:	d004      	beq.n	8013fb2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013fa8:	f242 030b 	movw	r3, #8203	; 0x200b
 8013fac:	429d      	cmp	r5, r3
 8013fae:	bf18      	it	ne
 8013fb0:	462f      	movne	r7, r5
 8013fb2:	ab03      	add	r3, sp, #12
 8013fb4:	4642      	mov	r2, r8
 8013fb6:	4659      	mov	r1, fp
 8013fb8:	4648      	mov	r0, r9
 8013fba:	f003 f965 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013fbe:	4605      	mov	r5, r0
 8013fc0:	b1b8      	cbz	r0, 8013ff2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013fc2:	280a      	cmp	r0, #10
 8013fc4:	d015      	beq.n	8013ff2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013fc6:	9a03      	ldr	r2, [sp, #12]
 8013fc8:	b18a      	cbz	r2, 8013fee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013fca:	7b50      	ldrb	r0, [r2, #13]
 8013fcc:	7a93      	ldrb	r3, [r2, #10]
 8013fce:	8895      	ldrh	r5, [r2, #4]
 8013fd0:	0040      	lsls	r0, r0, #1
 8013fd2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8013fd6:	4303      	orrs	r3, r0
 8013fd8:	9301      	str	r3, [sp, #4]
 8013fda:	f8d8 3000 	ldr.w	r3, [r8]
 8013fde:	4639      	mov	r1, r7
 8013fe0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013fe2:	4640      	mov	r0, r8
 8013fe4:	4798      	blx	r3
 8013fe6:	9b01      	ldr	r3, [sp, #4]
 8013fe8:	4418      	add	r0, r3
 8013fea:	4406      	add	r6, r0
 8013fec:	b2b6      	uxth	r6, r6
 8013fee:	3401      	adds	r4, #1
 8013ff0:	e7d2      	b.n	8013f98 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8013ff2:	4630      	mov	r0, r6
 8013ff4:	b005      	add	sp, #20
 8013ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013ffa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8013ffa:	2a02      	cmp	r2, #2
 8013ffc:	b530      	push	{r4, r5, lr}
 8013ffe:	d011      	beq.n	8014024 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8014000:	2a03      	cmp	r2, #3
 8014002:	d01c      	beq.n	801403e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8014004:	2a01      	cmp	r2, #1
 8014006:	d10c      	bne.n	8014022 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8014008:	888b      	ldrh	r3, [r1, #4]
 801400a:	8801      	ldrh	r1, [r0, #0]
 801400c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8014010:	8844      	ldrh	r4, [r0, #2]
 8014012:	8004      	strh	r4, [r0, #0]
 8014014:	1a5b      	subs	r3, r3, r1
 8014016:	1a9b      	subs	r3, r3, r2
 8014018:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801401c:	8043      	strh	r3, [r0, #2]
 801401e:	8081      	strh	r1, [r0, #4]
 8014020:	80c2      	strh	r2, [r0, #6]
 8014022:	bd30      	pop	{r4, r5, pc}
 8014024:	88cb      	ldrh	r3, [r1, #6]
 8014026:	8842      	ldrh	r2, [r0, #2]
 8014028:	1a9b      	subs	r3, r3, r2
 801402a:	88c2      	ldrh	r2, [r0, #6]
 801402c:	1a9b      	subs	r3, r3, r2
 801402e:	888a      	ldrh	r2, [r1, #4]
 8014030:	8801      	ldrh	r1, [r0, #0]
 8014032:	8043      	strh	r3, [r0, #2]
 8014034:	1a52      	subs	r2, r2, r1
 8014036:	8881      	ldrh	r1, [r0, #4]
 8014038:	1a52      	subs	r2, r2, r1
 801403a:	8002      	strh	r2, [r0, #0]
 801403c:	e7f1      	b.n	8014022 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801403e:	88cb      	ldrh	r3, [r1, #6]
 8014040:	8841      	ldrh	r1, [r0, #2]
 8014042:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8014046:	f9b0 5000 	ldrsh.w	r5, [r0]
 801404a:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801404e:	8045      	strh	r5, [r0, #2]
 8014050:	1a5b      	subs	r3, r3, r1
 8014052:	1a9b      	subs	r3, r3, r2
 8014054:	8003      	strh	r3, [r0, #0]
 8014056:	8082      	strh	r2, [r0, #4]
 8014058:	80c4      	strh	r4, [r0, #6]
 801405a:	e7e2      	b.n	8014022 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801405c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801405c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014060:	b09f      	sub	sp, #124	; 0x7c
 8014062:	9116      	str	r1, [sp, #88]	; 0x58
 8014064:	9317      	str	r3, [sp, #92]	; 0x5c
 8014066:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014068:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801406a:	8809      	ldrh	r1, [r1, #0]
 801406c:	889b      	ldrh	r3, [r3, #4]
 801406e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8014072:	9212      	str	r2, [sp, #72]	; 0x48
 8014074:	440b      	add	r3, r1
 8014076:	b21b      	sxth	r3, r3
 8014078:	9310      	str	r3, [sp, #64]	; 0x40
 801407a:	f8d8 3000 	ldr.w	r3, [r8]
 801407e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8014082:	7b19      	ldrb	r1, [r3, #12]
 8014084:	7adb      	ldrb	r3, [r3, #11]
 8014086:	9011      	str	r0, [sp, #68]	; 0x44
 8014088:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801408c:	9114      	str	r1, [sp, #80]	; 0x50
 801408e:	9315      	str	r3, [sp, #84]	; 0x54
 8014090:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8014094:	2a00      	cmp	r2, #0
 8014096:	d06a      	beq.n	801416e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8014098:	f898 3010 	ldrb.w	r3, [r8, #16]
 801409c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801409e:	2b06      	cmp	r3, #6
 80140a0:	bf14      	ite	ne
 80140a2:	2301      	movne	r3, #1
 80140a4:	2302      	moveq	r3, #2
 80140a6:	4413      	add	r3, r2
 80140a8:	f04f 0900 	mov.w	r9, #0
 80140ac:	930f      	str	r3, [sp, #60]	; 0x3c
 80140ae:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80140b2:	464c      	mov	r4, r9
 80140b4:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80140b8:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80140bc:	4293      	cmp	r3, r2
 80140be:	f280 808f 	bge.w	80141e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80140c2:	2300      	movs	r3, #0
 80140c4:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80140c8:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80140cc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80140d0:	429c      	cmp	r4, r3
 80140d2:	d006      	beq.n	80140e2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 80140d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140d6:	f242 020b 	movw	r2, #8203	; 0x200b
 80140da:	4294      	cmp	r4, r2
 80140dc:	bf18      	it	ne
 80140de:	4623      	movne	r3, r4
 80140e0:	930d      	str	r3, [sp, #52]	; 0x34
 80140e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80140e4:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80140e6:	f8d8 2000 	ldr.w	r2, [r8]
 80140ea:	428b      	cmp	r3, r1
 80140ec:	db41      	blt.n	8014172 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80140ee:	6813      	ldr	r3, [r2, #0]
 80140f0:	4610      	mov	r0, r2
 80140f2:	695b      	ldr	r3, [r3, #20]
 80140f4:	4798      	blx	r3
 80140f6:	4604      	mov	r4, r0
 80140f8:	f8d8 0000 	ldr.w	r0, [r8]
 80140fc:	6803      	ldr	r3, [r0, #0]
 80140fe:	aa1d      	add	r2, sp, #116	; 0x74
 8014100:	689d      	ldr	r5, [r3, #8]
 8014102:	4621      	mov	r1, r4
 8014104:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014108:	47a8      	blx	r5
 801410a:	901c      	str	r0, [sp, #112]	; 0x70
 801410c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014110:	429c      	cmp	r4, r3
 8014112:	f000 80eb 	beq.w	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014116:	f242 030b 	movw	r3, #8203	; 0x200b
 801411a:	429c      	cmp	r4, r3
 801411c:	f000 80e6 	beq.w	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014120:	2c00      	cmp	r4, #0
 8014122:	f000 80f8 	beq.w	8014316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014126:	2c0a      	cmp	r4, #10
 8014128:	d060      	beq.n	80141ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801412a:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801412c:	b36a      	cbz	r2, 801418a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801412e:	8894      	ldrh	r4, [r2, #4]
 8014130:	f1bb 0f00 	cmp.w	fp, #0
 8014134:	d03b      	beq.n	80141ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8014136:	f892 900d 	ldrb.w	r9, [r2, #13]
 801413a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801413e:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8014142:	f892 900a 	ldrb.w	r9, [r2, #10]
 8014146:	f1bb 0f01 	cmp.w	fp, #1
 801414a:	ea49 0903 	orr.w	r9, r9, r3
 801414e:	d134      	bne.n	80141ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8014150:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014152:	eba6 0609 	sub.w	r6, r6, r9
 8014156:	2b00      	cmp	r3, #0
 8014158:	d14f      	bne.n	80141fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801415a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801415c:	eb09 0306 	add.w	r3, r9, r6
 8014160:	4413      	add	r3, r2
 8014162:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014164:	f9b2 2000 	ldrsh.w	r2, [r2]
 8014168:	4293      	cmp	r3, r2
 801416a:	da51      	bge.n	8014210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801416c:	e038      	b.n	80141e0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801416e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014170:	e79a      	b.n	80140a8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8014172:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8014176:	9301      	str	r3, [sp, #4]
 8014178:	ab1d      	add	r3, sp, #116	; 0x74
 801417a:	9300      	str	r3, [sp, #0]
 801417c:	4659      	mov	r1, fp
 801417e:	ab1c      	add	r3, sp, #112	; 0x70
 8014180:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014182:	f003 f8ca 	bl	801731a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8014186:	4604      	mov	r4, r0
 8014188:	e7c0      	b.n	801410c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801418a:	f8d8 0000 	ldr.w	r0, [r8]
 801418e:	6803      	ldr	r3, [r0, #0]
 8014190:	691b      	ldr	r3, [r3, #16]
 8014192:	4798      	blx	r3
 8014194:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014198:	4298      	cmp	r0, r3
 801419a:	f000 80a7 	beq.w	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801419e:	f242 030b 	movw	r3, #8203	; 0x200b
 80141a2:	4298      	cmp	r0, r3
 80141a4:	f000 80a2 	beq.w	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141a8:	f1bb 0f00 	cmp.w	fp, #0
 80141ac:	d100      	bne.n	80141b0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80141ae:	444e      	add	r6, r9
 80141b0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80141b2:	2a00      	cmp	r2, #0
 80141b4:	d1bf      	bne.n	8014136 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80141b6:	4691      	mov	r9, r2
 80141b8:	e098      	b.n	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 80141ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80141bc:	2b00      	cmp	r3, #0
 80141be:	f000 80ac 	beq.w	801431a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 80141c2:	f1bb 0f00 	cmp.w	fp, #0
 80141c6:	d118      	bne.n	80141fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80141c8:	f8d8 0000 	ldr.w	r0, [r8]
 80141cc:	990d      	ldr	r1, [sp, #52]	; 0x34
 80141ce:	6803      	ldr	r3, [r0, #0]
 80141d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80141d2:	4798      	blx	r3
 80141d4:	4406      	add	r6, r0
 80141d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80141d8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80141da:	1af3      	subs	r3, r6, r3
 80141dc:	4293      	cmp	r3, r2
 80141de:	dd17      	ble.n	8014210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80141e0:	2c00      	cmp	r4, #0
 80141e2:	f000 8098 	beq.w	8014316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80141e6:	2c0a      	cmp	r4, #10
 80141e8:	f040 8086 	bne.w	80142f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 80141ec:	240a      	movs	r4, #10
 80141ee:	fab4 f084 	clz	r0, r4
 80141f2:	0940      	lsrs	r0, r0, #5
 80141f4:	b01f      	add	sp, #124	; 0x7c
 80141f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80141fa:	f8d8 0000 	ldr.w	r0, [r8]
 80141fe:	990d      	ldr	r1, [sp, #52]	; 0x34
 8014200:	6803      	ldr	r3, [r0, #0]
 8014202:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014204:	4798      	blx	r3
 8014206:	f1bb 0f01 	cmp.w	fp, #1
 801420a:	eba6 0600 	sub.w	r6, r6, r0
 801420e:	d0a4      	beq.n	801415a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8014210:	981c      	ldr	r0, [sp, #112]	; 0x70
 8014212:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014214:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8014218:	f9b3 7000 	ldrsh.w	r7, [r3]
 801421c:	7b43      	ldrb	r3, [r0, #13]
 801421e:	015b      	lsls	r3, r3, #5
 8014220:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8014224:	7983      	ldrb	r3, [r0, #6]
 8014226:	4431      	add	r1, r6
 8014228:	4313      	orrs	r3, r2
 801422a:	440b      	add	r3, r1
 801422c:	42bb      	cmp	r3, r7
 801422e:	db5d      	blt.n	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014230:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014232:	4299      	cmp	r1, r3
 8014234:	da5a      	bge.n	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8014236:	f8d8 0000 	ldr.w	r0, [r8]
 801423a:	6803      	ldr	r3, [r0, #0]
 801423c:	42b7      	cmp	r7, r6
 801423e:	bfc8      	it	gt
 8014240:	1bbf      	subgt	r7, r7, r6
 8014242:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8014244:	bfcc      	ite	gt
 8014246:	b2bf      	uxthgt	r7, r7
 8014248:	2700      	movle	r7, #0
 801424a:	4798      	blx	r3
 801424c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801424e:	7b5a      	ldrb	r2, [r3, #13]
 8014250:	00d1      	lsls	r1, r2, #3
 8014252:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8014256:	7a19      	ldrb	r1, [r3, #8]
 8014258:	4329      	orrs	r1, r5
 801425a:	0655      	lsls	r5, r2, #25
 801425c:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 801425e:	bf44      	itt	mi
 8014260:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8014264:	b209      	sxthmi	r1, r1
 8014266:	1945      	adds	r5, r0, r5
 8014268:	1a6d      	subs	r5, r5, r1
 801426a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801426c:	b2ad      	uxth	r5, r5
 801426e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8014272:	fa0f fa85 	sxth.w	sl, r5
 8014276:	4551      	cmp	r1, sl
 8014278:	dd3c      	ble.n	80142f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801427a:	0112      	lsls	r2, r2, #4
 801427c:	79d8      	ldrb	r0, [r3, #7]
 801427e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8014282:	4302      	orrs	r2, r0
 8014284:	4492      	add	sl, r2
 8014286:	4551      	cmp	r1, sl
 8014288:	dc30      	bgt.n	80142ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 801428a:	1b4d      	subs	r5, r1, r5
 801428c:	b22d      	sxth	r5, r5
 801428e:	468a      	mov	sl, r1
 8014290:	9319      	str	r3, [sp, #100]	; 0x64
 8014292:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014294:	f8d8 0000 	ldr.w	r0, [r8]
 8014298:	681a      	ldr	r2, [r3, #0]
 801429a:	6801      	ldr	r1, [r0, #0]
 801429c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801429e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80142a0:	9313      	str	r3, [sp, #76]	; 0x4c
 80142a2:	9218      	str	r2, [sp, #96]	; 0x60
 80142a4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 80142a6:	4788      	blx	r1
 80142a8:	f898 1006 	ldrb.w	r1, [r8, #6]
 80142ac:	910b      	str	r1, [sp, #44]	; 0x2c
 80142ae:	f898 100e 	ldrb.w	r1, [r8, #14]
 80142b2:	910a      	str	r1, [sp, #40]	; 0x28
 80142b4:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80142b8:	9109      	str	r1, [sp, #36]	; 0x24
 80142ba:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80142be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80142c0:	9305      	str	r3, [sp, #20]
 80142c2:	b2ad      	uxth	r5, r5
 80142c4:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80142c8:	e9cd 7502 	strd	r7, r5, [sp, #8]
 80142cc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80142ce:	9304      	str	r3, [sp, #16]
 80142d0:	4437      	add	r7, r6
 80142d2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80142d4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80142d6:	9206      	str	r2, [sp, #24]
 80142d8:	b23f      	sxth	r7, r7
 80142da:	f8cd a004 	str.w	sl, [sp, #4]
 80142de:	9700      	str	r7, [sp, #0]
 80142e0:	681a      	ldr	r2, [r3, #0]
 80142e2:	9916      	ldr	r1, [sp, #88]	; 0x58
 80142e4:	685b      	ldr	r3, [r3, #4]
 80142e6:	9811      	ldr	r0, [sp, #68]	; 0x44
 80142e8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80142ea:	47a8      	blx	r5
 80142ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80142ee:	3301      	adds	r3, #1
 80142f0:	930e      	str	r3, [sp, #56]	; 0x38
 80142f2:	e6e1      	b.n	80140b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 80142f4:	2500      	movs	r5, #0
 80142f6:	e7cb      	b.n	8014290 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 80142f8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80142fa:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80142fc:	3501      	adds	r5, #1
 80142fe:	429d      	cmp	r5, r3
 8014300:	f6bf af75 	bge.w	80141ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8014304:	4659      	mov	r1, fp
 8014306:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8014308:	f7f3 fe9a 	bl	8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801430c:	4604      	mov	r4, r0
 801430e:	b110      	cbz	r0, 8014316 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8014310:	280a      	cmp	r0, #10
 8014312:	d1f2      	bne.n	80142fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8014314:	e76a      	b.n	80141ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8014316:	2400      	movs	r4, #0
 8014318:	e769      	b.n	80141ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801431a:	f1bb 0f00 	cmp.w	fp, #0
 801431e:	f43f af5a 	beq.w	80141d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8014322:	e775      	b.n	8014210 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08014324 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8014324:	b530      	push	{r4, r5, lr}
 8014326:	8ac4      	ldrh	r4, [r0, #22]
 8014328:	8b45      	ldrh	r5, [r0, #26]
 801432a:	8343      	strh	r3, [r0, #26]
 801432c:	442c      	add	r4, r5
 801432e:	1ae4      	subs	r4, r4, r3
 8014330:	82c4      	strh	r4, [r0, #22]
 8014332:	8b83      	ldrh	r3, [r0, #28]
 8014334:	8b04      	ldrh	r4, [r0, #24]
 8014336:	4422      	add	r2, r4
 8014338:	440c      	add	r4, r1
 801433a:	1a59      	subs	r1, r3, r1
 801433c:	83c2      	strh	r2, [r0, #30]
 801433e:	8304      	strh	r4, [r0, #24]
 8014340:	8381      	strh	r1, [r0, #28]
 8014342:	bd30      	pop	{r4, r5, pc}

08014344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8014344:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014348:	4604      	mov	r4, r0
 801434a:	8a47      	ldrh	r7, [r0, #18]
 801434c:	68c0      	ldr	r0, [r0, #12]
 801434e:	6803      	ldr	r3, [r0, #0]
 8014350:	b085      	sub	sp, #20
 8014352:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014354:	4798      	blx	r3
 8014356:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801435a:	7a63      	ldrb	r3, [r4, #9]
 801435c:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8014360:	42b7      	cmp	r7, r6
 8014362:	f103 33ff 	add.w	r3, r3, #4294967295
 8014366:	bfac      	ite	ge
 8014368:	f04f 0900 	movge.w	r9, #0
 801436c:	f04f 0901 	movlt.w	r9, #1
 8014370:	2b05      	cmp	r3, #5
 8014372:	d804      	bhi.n	801437e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8014374:	e8df f003 	tbb	[pc, r3]
 8014378:	470e0854 	.word	0x470e0854
 801437c:	4c4c      	.short	0x4c4c
 801437e:	2500      	movs	r5, #0
 8014380:	46a9      	mov	r9, r5
 8014382:	462e      	mov	r6, r5
 8014384:	462f      	mov	r7, r5
 8014386:	e00d      	b.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014388:	42b7      	cmp	r7, r6
 801438a:	bfb4      	ite	lt
 801438c:	2600      	movlt	r6, #0
 801438e:	2601      	movge	r6, #1
 8014390:	2500      	movs	r5, #0
 8014392:	e7f7      	b.n	8014384 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014394:	42b7      	cmp	r7, r6
 8014396:	464d      	mov	r5, r9
 8014398:	f04f 0900 	mov.w	r9, #0
 801439c:	bfb4      	ite	lt
 801439e:	2600      	movlt	r6, #0
 80143a0:	2601      	movge	r6, #1
 80143a2:	464f      	mov	r7, r9
 80143a4:	f04f 0800 	mov.w	r8, #0
 80143a8:	f8a4 8016 	strh.w	r8, [r4, #22]
 80143ac:	f8a4 8018 	strh.w	r8, [r4, #24]
 80143b0:	f8cd 8004 	str.w	r8, [sp, #4]
 80143b4:	2300      	movs	r3, #0
 80143b6:	9303      	str	r3, [sp, #12]
 80143b8:	8823      	ldrh	r3, [r4, #0]
 80143ba:	2b20      	cmp	r3, #32
 80143bc:	d034      	beq.n	8014428 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80143be:	f242 010b 	movw	r1, #8203	; 0x200b
 80143c2:	1a5a      	subs	r2, r3, r1
 80143c4:	f1d2 0a00 	rsbs	sl, r2, #0
 80143c8:	eb4a 0a02 	adc.w	sl, sl, r2
 80143cc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80143d0:	4293      	cmp	r3, r2
 80143d2:	d009      	beq.n	80143e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80143d4:	428b      	cmp	r3, r1
 80143d6:	9a01      	ldr	r2, [sp, #4]
 80143d8:	bf18      	it	ne
 80143da:	461a      	movne	r2, r3
 80143dc:	9201      	str	r2, [sp, #4]
 80143de:	bf0c      	ite	eq
 80143e0:	f04f 0a01 	moveq.w	sl, #1
 80143e4:	f04f 0a00 	movne.w	sl, #0
 80143e8:	ab03      	add	r3, sp, #12
 80143ea:	68e2      	ldr	r2, [r4, #12]
 80143ec:	7a21      	ldrb	r1, [r4, #8]
 80143ee:	6860      	ldr	r0, [r4, #4]
 80143f0:	f002 ff4a 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80143f4:	8020      	strh	r0, [r4, #0]
 80143f6:	b9d8      	cbnz	r0, 8014430 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80143f8:	8ba2      	ldrh	r2, [r4, #28]
 80143fa:	2300      	movs	r3, #0
 80143fc:	4611      	mov	r1, r2
 80143fe:	4620      	mov	r0, r4
 8014400:	f7ff ff90 	bl	8014324 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014404:	e06e      	b.n	80144e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014406:	2500      	movs	r5, #0
 8014408:	46a9      	mov	r9, r5
 801440a:	462e      	mov	r6, r5
 801440c:	2701      	movs	r7, #1
 801440e:	e7c9      	b.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014410:	42b7      	cmp	r7, r6
 8014412:	f04f 0500 	mov.w	r5, #0
 8014416:	bfb4      	ite	lt
 8014418:	2700      	movlt	r7, #0
 801441a:	2701      	movge	r7, #1
 801441c:	462e      	mov	r6, r5
 801441e:	e7c1      	b.n	80143a4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8014420:	2500      	movs	r5, #0
 8014422:	46a9      	mov	r9, r5
 8014424:	2601      	movs	r6, #1
 8014426:	e7ad      	b.n	8014384 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8014428:	9301      	str	r3, [sp, #4]
 801442a:	f04f 0a01 	mov.w	sl, #1
 801442e:	e7db      	b.n	80143e8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8014430:	8b63      	ldrh	r3, [r4, #26]
 8014432:	280a      	cmp	r0, #10
 8014434:	f103 0301 	add.w	r3, r3, #1
 8014438:	8363      	strh	r3, [r4, #26]
 801443a:	d0dd      	beq.n	80143f8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 801443c:	9a03      	ldr	r2, [sp, #12]
 801443e:	bb62      	cbnz	r2, 801449a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8014440:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8014444:	4298      	cmp	r0, r3
 8014446:	d003      	beq.n	8014450 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8014448:	f242 030b 	movw	r3, #8203	; 0x200b
 801444c:	4298      	cmp	r0, r3
 801444e:	d1b1      	bne.n	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014450:	8823      	ldrh	r3, [r4, #0]
 8014452:	8ba1      	ldrh	r1, [r4, #28]
 8014454:	2b20      	cmp	r3, #32
 8014456:	d003      	beq.n	8014460 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8014458:	f242 000b 	movw	r0, #8203	; 0x200b
 801445c:	4283      	cmp	r3, r0
 801445e:	d131      	bne.n	80144c4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8014460:	f1ba 0f00 	cmp.w	sl, #0
 8014464:	bf0a      	itet	eq
 8014466:	4688      	moveq	r8, r1
 8014468:	4650      	movne	r0, sl
 801446a:	2001      	moveq	r0, #1
 801446c:	440a      	add	r2, r1
 801446e:	8b23      	ldrh	r3, [r4, #24]
 8014470:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8014474:	b292      	uxth	r2, r2
 8014476:	83a2      	strh	r2, [r4, #28]
 8014478:	4413      	add	r3, r2
 801447a:	f1b9 0f00 	cmp.w	r9, #0
 801447e:	d102      	bne.n	8014486 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8014480:	2d00      	cmp	r5, #0
 8014482:	d042      	beq.n	801450a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8014484:	b300      	cbz	r0, 80144c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8014486:	8c21      	ldrh	r1, [r4, #32]
 8014488:	4419      	add	r1, r3
 801448a:	458c      	cmp	ip, r1
 801448c:	da37      	bge.n	80144fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 801448e:	8ae1      	ldrh	r1, [r4, #22]
 8014490:	2900      	cmp	r1, #0
 8014492:	d034      	beq.n	80144fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8014494:	4563      	cmp	r3, ip
 8014496:	dd8d      	ble.n	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014498:	e01d      	b.n	80144d6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801449a:	8893      	ldrh	r3, [r2, #4]
 801449c:	8023      	strh	r3, [r4, #0]
 801449e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 80144a2:	9901      	ldr	r1, [sp, #4]
 80144a4:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 80144a8:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 80144ac:	f892 b00a 	ldrb.w	fp, [r2, #10]
 80144b0:	ea4b 0b00 	orr.w	fp, fp, r0
 80144b4:	68e0      	ldr	r0, [r4, #12]
 80144b6:	6803      	ldr	r3, [r0, #0]
 80144b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80144ba:	4798      	blx	r3
 80144bc:	eb0b 0200 	add.w	r2, fp, r0
 80144c0:	b292      	uxth	r2, r2
 80144c2:	e7c5      	b.n	8014450 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80144c4:	2000      	movs	r0, #0
 80144c6:	e7d1      	b.n	801446c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80144c8:	4563      	cmp	r3, ip
 80144ca:	f77f af73 	ble.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144ce:	8ae3      	ldrh	r3, [r4, #22]
 80144d0:	2b00      	cmp	r3, #0
 80144d2:	f43f af6f 	beq.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80144d6:	2301      	movs	r3, #1
 80144d8:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 80144dc:	8c22      	ldrh	r2, [r4, #32]
 80144de:	8be3      	ldrh	r3, [r4, #30]
 80144e0:	4413      	add	r3, r2
 80144e2:	83e3      	strh	r3, [r4, #30]
 80144e4:	68e0      	ldr	r0, [r4, #12]
 80144e6:	6803      	ldr	r3, [r0, #0]
 80144e8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80144ea:	4798      	blx	r3
 80144ec:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80144f0:	4418      	add	r0, r3
 80144f2:	8a63      	ldrh	r3, [r4, #18]
 80144f4:	1a18      	subs	r0, r3, r0
 80144f6:	8260      	strh	r0, [r4, #18]
 80144f8:	b005      	add	sp, #20
 80144fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80144fe:	2300      	movs	r3, #0
 8014500:	4611      	mov	r1, r2
 8014502:	4620      	mov	r0, r4
 8014504:	f7ff ff0e 	bl	8014324 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8014508:	e754      	b.n	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801450a:	4563      	cmp	r3, ip
 801450c:	dd14      	ble.n	8014538 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 801450e:	b117      	cbz	r7, 8014516 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8014510:	2301      	movs	r3, #1
 8014512:	460a      	mov	r2, r1
 8014514:	e772      	b.n	80143fc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8014516:	2e00      	cmp	r6, #0
 8014518:	f43f af4c 	beq.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801451c:	2800      	cmp	r0, #0
 801451e:	f47f af49 	bne.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014522:	f1ba 0f00 	cmp.w	sl, #0
 8014526:	d002      	beq.n	801452e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8014528:	2301      	movs	r3, #1
 801452a:	4642      	mov	r2, r8
 801452c:	e767      	b.n	80143fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 801452e:	8ae3      	ldrh	r3, [r4, #22]
 8014530:	2b00      	cmp	r3, #0
 8014532:	f43f af3f 	beq.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014536:	e7d5      	b.n	80144e4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8014538:	2800      	cmp	r0, #0
 801453a:	f47f af3b 	bne.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801453e:	f1ba 0f00 	cmp.w	sl, #0
 8014542:	f43f af37 	beq.w	80143b4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8014546:	2301      	movs	r3, #1
 8014548:	4642      	mov	r2, r8
 801454a:	e7da      	b.n	8014502 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

0801454c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801454c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801454e:	4605      	mov	r5, r0
 8014550:	b08f      	sub	sp, #60	; 0x3c
 8014552:	4617      	mov	r7, r2
 8014554:	461c      	mov	r4, r3
 8014556:	460e      	mov	r6, r1
 8014558:	b1d1      	cbz	r1, 8014590 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801455a:	681b      	ldr	r3, [r3, #0]
 801455c:	4620      	mov	r0, r4
 801455e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014560:	4798      	blx	r3
 8014562:	4240      	negs	r0, r0
 8014564:	b200      	sxth	r0, r0
 8014566:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801456a:	9603      	str	r6, [sp, #12]
 801456c:	9700      	str	r7, [sp, #0]
 801456e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8014572:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014576:	4629      	mov	r1, r5
 8014578:	a805      	add	r0, sp, #20
 801457a:	f7ff fcbf 	bl	8013efc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801457e:	2401      	movs	r4, #1
 8014580:	a805      	add	r0, sp, #20
 8014582:	f7ff fedf 	bl	8014344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014586:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801458a:	b163      	cbz	r3, 80145a6 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801458c:	3401      	adds	r4, #1
 801458e:	e7f7      	b.n	8014580 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8014590:	f002 ff48 	bl	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8014594:	2401      	movs	r4, #1
 8014596:	280a      	cmp	r0, #10
 8014598:	4628      	mov	r0, r5
 801459a:	bf08      	it	eq
 801459c:	3401      	addeq	r4, #1
 801459e:	f002 ff41 	bl	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80145a2:	2800      	cmp	r0, #0
 80145a4:	d1f7      	bne.n	8014596 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 80145a6:	b2a0      	uxth	r0, r4
 80145a8:	b00f      	add	sp, #60	; 0x3c
 80145aa:	bdf0      	pop	{r4, r5, r6, r7, pc}

080145ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 80145ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145b0:	b0e3      	sub	sp, #396	; 0x18c
 80145b2:	461c      	mov	r4, r3
 80145b4:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 80145b6:	4683      	mov	fp, r0
 80145b8:	4688      	mov	r8, r1
 80145ba:	2b00      	cmp	r3, #0
 80145bc:	f000 8112 	beq.w	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145c0:	6823      	ldr	r3, [r4, #0]
 80145c2:	2b00      	cmp	r3, #0
 80145c4:	f000 810e 	beq.w	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145c8:	7ba3      	ldrb	r3, [r4, #14]
 80145ca:	2b00      	cmp	r3, #0
 80145cc:	f000 810a 	beq.w	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80145d0:	6810      	ldr	r0, [r2, #0]
 80145d2:	6851      	ldr	r1, [r2, #4]
 80145d4:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80145d8:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80145dc:	ad0a      	add	r5, sp, #40	; 0x28
 80145de:	462b      	mov	r3, r5
 80145e0:	c303      	stmia	r3!, {r0, r1}
 80145e2:	2100      	movs	r1, #0
 80145e4:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80145e8:	910c      	str	r1, [sp, #48]	; 0x30
 80145ea:	79a2      	ldrb	r2, [r4, #6]
 80145ec:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80145f0:	a90c      	add	r1, sp, #48	; 0x30
 80145f2:	4628      	mov	r0, r5
 80145f4:	f7ff fd01 	bl	8013ffa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80145f8:	a90c      	add	r1, sp, #48	; 0x30
 80145fa:	4608      	mov	r0, r1
 80145fc:	79a2      	ldrb	r2, [r4, #6]
 80145fe:	f7ff fcfc 	bl	8013ffa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8014602:	a817      	add	r0, sp, #92	; 0x5c
 8014604:	f002 fae2 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8014608:	6820      	ldr	r0, [r4, #0]
 801460a:	6803      	ldr	r3, [r0, #0]
 801460c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801460e:	4798      	blx	r3
 8014610:	4606      	mov	r6, r0
 8014612:	6820      	ldr	r0, [r4, #0]
 8014614:	6803      	ldr	r3, [r0, #0]
 8014616:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014618:	4798      	blx	r3
 801461a:	4633      	mov	r3, r6
 801461c:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801461e:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014620:	9000      	str	r0, [sp, #0]
 8014622:	a817      	add	r0, sp, #92	; 0x5c
 8014624:	f002 fb2d 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8014628:	6820      	ldr	r0, [r4, #0]
 801462a:	f894 a004 	ldrb.w	sl, [r4, #4]
 801462e:	6803      	ldr	r3, [r0, #0]
 8014630:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8014632:	4798      	blx	r3
 8014634:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8014638:	6823      	ldr	r3, [r4, #0]
 801463a:	4607      	mov	r7, r0
 801463c:	4406      	add	r6, r0
 801463e:	a830      	add	r0, sp, #192	; 0xc0
 8014640:	f893 9009 	ldrb.w	r9, [r3, #9]
 8014644:	f002 fac2 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8014648:	7c23      	ldrb	r3, [r4, #16]
 801464a:	b17b      	cbz	r3, 801466c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 801464c:	6820      	ldr	r0, [r4, #0]
 801464e:	6803      	ldr	r3, [r0, #0]
 8014650:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8014652:	4798      	blx	r3
 8014654:	9009      	str	r0, [sp, #36]	; 0x24
 8014656:	6820      	ldr	r0, [r4, #0]
 8014658:	6802      	ldr	r2, [r0, #0]
 801465a:	6d12      	ldr	r2, [r2, #80]	; 0x50
 801465c:	4790      	blx	r2
 801465e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014660:	9000      	str	r0, [sp, #0]
 8014662:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8014664:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8014666:	a830      	add	r0, sp, #192	; 0xc0
 8014668:	f002 fb0b 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801466c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8014670:	7be2      	ldrb	r2, [r4, #15]
 8014672:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8014676:	1a8a      	subs	r2, r1, r2
 8014678:	7c21      	ldrb	r1, [r4, #16]
 801467a:	9103      	str	r1, [sp, #12]
 801467c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8014680:	9102      	str	r1, [sp, #8]
 8014682:	6821      	ldr	r1, [r4, #0]
 8014684:	9101      	str	r1, [sp, #4]
 8014686:	7961      	ldrb	r1, [r4, #5]
 8014688:	9100      	str	r1, [sp, #0]
 801468a:	b292      	uxth	r2, r2
 801468c:	a930      	add	r1, sp, #192	; 0xc0
 801468e:	a80e      	add	r0, sp, #56	; 0x38
 8014690:	f7ff fc34 	bl	8013efc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8014694:	2e00      	cmp	r6, #0
 8014696:	dc5b      	bgt.n	8014750 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014698:	af17      	add	r7, sp, #92	; 0x5c
 801469a:	f04f 0900 	mov.w	r9, #0
 801469e:	7c23      	ldrb	r3, [r4, #16]
 80146a0:	2b00      	cmp	r3, #0
 80146a2:	f000 80b1 	beq.w	8014808 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 80146a6:	a80e      	add	r0, sp, #56	; 0x38
 80146a8:	f7ff fe4c 	bl	8014344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80146ac:	f1ba 0f00 	cmp.w	sl, #0
 80146b0:	f000 80a5 	beq.w	80147fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 80146b4:	7c23      	ldrb	r3, [r4, #16]
 80146b6:	9309      	str	r3, [sp, #36]	; 0x24
 80146b8:	2264      	movs	r2, #100	; 0x64
 80146ba:	4639      	mov	r1, r7
 80146bc:	a849      	add	r0, sp, #292	; 0x124
 80146be:	f012 f833 	bl	8026728 <memcpy>
 80146c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80146c4:	2b00      	cmp	r3, #0
 80146c6:	f000 80a7 	beq.w	8014818 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 80146ca:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80146ce:	7922      	ldrb	r2, [r4, #4]
 80146d0:	2a01      	cmp	r2, #1
 80146d2:	f040 808a 	bne.w	80147ea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 80146d6:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 80146da:	1ac0      	subs	r0, r0, r3
 80146dc:	2302      	movs	r3, #2
 80146de:	fb90 f0f3 	sdiv	r0, r0, r3
 80146e2:	b200      	sxth	r0, r0
 80146e4:	7c23      	ldrb	r3, [r4, #16]
 80146e6:	2b00      	cmp	r3, #0
 80146e8:	f000 808b 	beq.w	8014802 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80146ec:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 80146f0:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 80146f4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80146f8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80146fc:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8014700:	4410      	add	r0, r2
 8014702:	b200      	sxth	r0, r0
 8014704:	9000      	str	r0, [sp, #0]
 8014706:	e9cd 9703 	strd	r9, r7, [sp, #12]
 801470a:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801470e:	4642      	mov	r2, r8
 8014710:	2100      	movs	r1, #0
 8014712:	4658      	mov	r0, fp
 8014714:	f7ff fca2 	bl	801405c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8014718:	2800      	cmp	r0, #0
 801471a:	d163      	bne.n	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801471c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8014720:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8014724:	b2b2      	uxth	r2, r6
 8014726:	4413      	add	r3, r2
 8014728:	1a8a      	subs	r2, r1, r2
 801472a:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801472e:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 8014732:	b21b      	sxth	r3, r3
 8014734:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014738:	2a00      	cmp	r2, #0
 801473a:	d153      	bne.n	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801473c:	6822      	ldr	r2, [r4, #0]
 801473e:	8869      	ldrh	r1, [r5, #2]
 8014740:	7a12      	ldrb	r2, [r2, #8]
 8014742:	1a9b      	subs	r3, r3, r2
 8014744:	88ea      	ldrh	r2, [r5, #6]
 8014746:	440a      	add	r2, r1
 8014748:	b212      	sxth	r2, r2
 801474a:	4293      	cmp	r3, r2
 801474c:	dda7      	ble.n	801469e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 801474e:	e049      	b.n	80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014750:	7c23      	ldrb	r3, [r4, #16]
 8014752:	444f      	add	r7, r9
 8014754:	b1c3      	cbz	r3, 8014788 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8014756:	f64f 79ff 	movw	r9, #65535	; 0xffff
 801475a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801475e:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014762:	443b      	add	r3, r7
 8014764:	4293      	cmp	r3, r2
 8014766:	da97      	bge.n	8014698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014768:	a80e      	add	r0, sp, #56	; 0x38
 801476a:	f7ff fdeb 	bl	8014344 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801476e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8014772:	3b01      	subs	r3, #1
 8014774:	b29b      	uxth	r3, r3
 8014776:	454b      	cmp	r3, r9
 8014778:	9309      	str	r3, [sp, #36]	; 0x24
 801477a:	d021      	beq.n	80147c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801477c:	7961      	ldrb	r1, [r4, #5]
 801477e:	a817      	add	r0, sp, #92	; 0x5c
 8014780:	f7f3 fc5e 	bl	8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8014784:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014786:	e7f4      	b.n	8014772 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014788:	fa1f f986 	uxth.w	r9, r6
 801478c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8014790:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014794:	443b      	add	r3, r7
 8014796:	4293      	cmp	r3, r2
 8014798:	f6bf af7e 	bge.w	8014698 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801479c:	a817      	add	r0, sp, #92	; 0x5c
 801479e:	f002 fe41 	bl	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80147a2:	b1f8      	cbz	r0, 80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147a4:	280a      	cmp	r0, #10
 80147a6:	d1f1      	bne.n	801478c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80147a8:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80147ac:	444b      	add	r3, r9
 80147ae:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80147b2:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80147b6:	eba3 0309 	sub.w	r3, r3, r9
 80147ba:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147be:	e7e5      	b.n	801478c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 80147c0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80147c4:	b2b3      	uxth	r3, r6
 80147c6:	441a      	add	r2, r3
 80147c8:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 80147cc:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 80147d0:	1ad3      	subs	r3, r2, r3
 80147d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80147d6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80147da:	b11b      	cbz	r3, 80147e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80147dc:	f89d 305a 	ldrb.w	r3, [sp, #90]	; 0x5a
 80147e0:	2b00      	cmp	r3, #0
 80147e2:	d0ba      	beq.n	801475a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 80147e4:	b063      	add	sp, #396	; 0x18c
 80147e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80147ea:	2a02      	cmp	r2, #2
 80147ec:	d105      	bne.n	80147fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 80147ee:	7be2      	ldrb	r2, [r4, #15]
 80147f0:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80147f4:	1a80      	subs	r0, r0, r2
 80147f6:	1ac0      	subs	r0, r0, r3
 80147f8:	e773      	b.n	80146e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 80147fa:	2000      	movs	r0, #0
 80147fc:	e772      	b.n	80146e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 80147fe:	7be0      	ldrb	r0, [r4, #15]
 8014800:	e770      	b.n	80146e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014802:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8014806:	e773      	b.n	80146f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014808:	f1ba 0f00 	cmp.w	sl, #0
 801480c:	d0f7      	beq.n	80147fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801480e:	2264      	movs	r2, #100	; 0x64
 8014810:	4639      	mov	r1, r7
 8014812:	a849      	add	r0, sp, #292	; 0x124
 8014814:	f011 ff88 	bl	8026728 <memcpy>
 8014818:	2300      	movs	r3, #0
 801481a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801481e:	6821      	ldr	r1, [r4, #0]
 8014820:	a849      	add	r0, sp, #292	; 0x124
 8014822:	f7ff fbae 	bl	8013f82 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8014826:	b203      	sxth	r3, r0
 8014828:	e751      	b.n	80146ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

0801482a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801482a:	2b03      	cmp	r3, #3
 801482c:	d818      	bhi.n	8014860 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801482e:	e8df f003 	tbb	[pc, r3]
 8014832:	0602      	.short	0x0602
 8014834:	130d      	.short	0x130d
 8014836:	f9b0 2000 	ldrsh.w	r2, [r0]
 801483a:	1850      	adds	r0, r2, r1
 801483c:	4770      	bx	lr
 801483e:	8803      	ldrh	r3, [r0, #0]
 8014840:	8880      	ldrh	r0, [r0, #4]
 8014842:	4418      	add	r0, r3
 8014844:	b200      	sxth	r0, r0
 8014846:	1a80      	subs	r0, r0, r2
 8014848:	3801      	subs	r0, #1
 801484a:	4770      	bx	lr
 801484c:	8803      	ldrh	r3, [r0, #0]
 801484e:	8880      	ldrh	r0, [r0, #4]
 8014850:	4418      	add	r0, r3
 8014852:	b200      	sxth	r0, r0
 8014854:	1a40      	subs	r0, r0, r1
 8014856:	e7f7      	b.n	8014848 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8014858:	f9b0 0000 	ldrsh.w	r0, [r0]
 801485c:	4410      	add	r0, r2
 801485e:	4770      	bx	lr
 8014860:	2000      	movs	r0, #0
 8014862:	4770      	bx	lr

08014864 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8014864:	2b03      	cmp	r3, #3
 8014866:	d817      	bhi.n	8014898 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8014868:	e8df f003 	tbb	[pc, r3]
 801486c:	10090602 	.word	0x10090602
 8014870:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014874:	1850      	adds	r0, r2, r1
 8014876:	4770      	bx	lr
 8014878:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801487c:	e7fa      	b.n	8014874 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801487e:	8843      	ldrh	r3, [r0, #2]
 8014880:	88c0      	ldrh	r0, [r0, #6]
 8014882:	4418      	add	r0, r3
 8014884:	b200      	sxth	r0, r0
 8014886:	1a80      	subs	r0, r0, r2
 8014888:	3801      	subs	r0, #1
 801488a:	4770      	bx	lr
 801488c:	8843      	ldrh	r3, [r0, #2]
 801488e:	88c0      	ldrh	r0, [r0, #6]
 8014890:	4418      	add	r0, r3
 8014892:	b200      	sxth	r0, r0
 8014894:	1a40      	subs	r0, r0, r1
 8014896:	e7f7      	b.n	8014888 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014898:	2000      	movs	r0, #0
 801489a:	4770      	bx	lr

0801489c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801489c:	4b01      	ldr	r3, [pc, #4]	; (80148a4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801489e:	2200      	movs	r2, #0
 80148a0:	601a      	str	r2, [r3, #0]
 80148a2:	4770      	bx	lr
 80148a4:	2000ef2c 	.word	0x2000ef2c

080148a8 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 80148a8:	4603      	mov	r3, r0
 80148aa:	b1c8      	cbz	r0, 80148e0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 80148ac:	0c02      	lsrs	r2, r0, #16
 80148ae:	0412      	lsls	r2, r2, #16
 80148b0:	b9a2      	cbnz	r2, 80148dc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 80148b2:	0403      	lsls	r3, r0, #16
 80148b4:	2010      	movs	r0, #16
 80148b6:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 80148ba:	bf04      	itt	eq
 80148bc:	021b      	lsleq	r3, r3, #8
 80148be:	3008      	addeq	r0, #8
 80148c0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 80148c4:	bf04      	itt	eq
 80148c6:	011b      	lsleq	r3, r3, #4
 80148c8:	3004      	addeq	r0, #4
 80148ca:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 80148ce:	bf04      	itt	eq
 80148d0:	009b      	lsleq	r3, r3, #2
 80148d2:	3002      	addeq	r0, #2
 80148d4:	2b00      	cmp	r3, #0
 80148d6:	db04      	blt.n	80148e2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 80148d8:	3001      	adds	r0, #1
 80148da:	4770      	bx	lr
 80148dc:	2000      	movs	r0, #0
 80148de:	e7ea      	b.n	80148b6 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 80148e0:	2020      	movs	r0, #32
 80148e2:	4770      	bx	lr

080148e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 80148e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80148e8:	b087      	sub	sp, #28
 80148ea:	460d      	mov	r5, r1
 80148ec:	4616      	mov	r6, r2
 80148ee:	4698      	mov	r8, r3
 80148f0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 80148f4:	4601      	mov	r1, r0
 80148f6:	b120      	cbz	r0, 8014902 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148f8:	b11a      	cbz	r2, 8014902 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148fa:	2d1f      	cmp	r5, #31
 80148fc:	d801      	bhi.n	8014902 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 80148fe:	2b1f      	cmp	r3, #31
 8014900:	d904      	bls.n	801490c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8014902:	2000      	movs	r0, #0
 8014904:	6038      	str	r0, [r7, #0]
 8014906:	b007      	add	sp, #28
 8014908:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801490c:	b97d      	cbnz	r5, 801492e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 801490e:	b143      	cbz	r3, 8014922 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014910:	4602      	mov	r2, r0
 8014912:	e9cd 4700 	strd	r4, r7, [sp]
 8014916:	462b      	mov	r3, r5
 8014918:	4641      	mov	r1, r8
 801491a:	4630      	mov	r0, r6
 801491c:	f7ff ffe2 	bl	80148e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014920:	e7f1      	b.n	8014906 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014922:	f04f 33ff 	mov.w	r3, #4294967295
 8014926:	603b      	str	r3, [r7, #0]
 8014928:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801492c:	e7eb      	b.n	8014906 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 801492e:	fa32 fa05 	lsrs.w	sl, r2, r5
 8014932:	d106      	bne.n	8014942 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8014934:	4346      	muls	r6, r0
 8014936:	fbb6 f0f4 	udiv	r0, r6, r4
 801493a:	fb04 6610 	mls	r6, r4, r0, r6
 801493e:	603e      	str	r6, [r7, #0]
 8014940:	e7e1      	b.n	8014906 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8014942:	2201      	movs	r2, #1
 8014944:	40aa      	lsls	r2, r5
 8014946:	3a01      	subs	r2, #1
 8014948:	4016      	ands	r6, r2
 801494a:	fa00 fb05 	lsl.w	fp, r0, r5
 801494e:	4630      	mov	r0, r6
 8014950:	fbbb f9f4 	udiv	r9, fp, r4
 8014954:	fb0a f309 	mul.w	r3, sl, r9
 8014958:	9303      	str	r3, [sp, #12]
 801495a:	f7ff ffa5 	bl	80148a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801495e:	462b      	mov	r3, r5
 8014960:	460a      	mov	r2, r1
 8014962:	e9cd 4700 	strd	r4, r7, [sp]
 8014966:	4601      	mov	r1, r0
 8014968:	4630      	mov	r0, r6
 801496a:	f7ff ffbb 	bl	80148e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801496e:	fb04 b919 	mls	r9, r4, r9, fp
 8014972:	4606      	mov	r6, r0
 8014974:	4648      	mov	r0, r9
 8014976:	eb05 0108 	add.w	r1, r5, r8
 801497a:	f7ff ff95 	bl	80148a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801497e:	ab05      	add	r3, sp, #20
 8014980:	e9cd 4300 	strd	r4, r3, [sp]
 8014984:	464a      	mov	r2, r9
 8014986:	4603      	mov	r3, r0
 8014988:	4650      	mov	r0, sl
 801498a:	f7ff ffab 	bl	80148e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801498e:	6839      	ldr	r1, [r7, #0]
 8014990:	9a05      	ldr	r2, [sp, #20]
 8014992:	9b03      	ldr	r3, [sp, #12]
 8014994:	4411      	add	r1, r2
 8014996:	fbb1 f2f4 	udiv	r2, r1, r4
 801499a:	18d3      	adds	r3, r2, r3
 801499c:	441e      	add	r6, r3
 801499e:	fb04 1412 	mls	r4, r4, r2, r1
 80149a2:	4430      	add	r0, r6
 80149a4:	603c      	str	r4, [r7, #0]
 80149a6:	e7ae      	b.n	8014906 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

080149a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80149a8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80149ac:	b085      	sub	sp, #20
 80149ae:	f1b0 0900 	subs.w	r9, r0, #0
 80149b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80149b4:	461d      	mov	r5, r3
 80149b6:	bfbf      	itttt	lt
 80149b8:	6823      	ldrlt	r3, [r4, #0]
 80149ba:	425b      	neglt	r3, r3
 80149bc:	f1c9 0900 	rsblt	r9, r9, #0
 80149c0:	6023      	strlt	r3, [r4, #0]
 80149c2:	bfb4      	ite	lt
 80149c4:	f04f 36ff 	movlt.w	r6, #4294967295
 80149c8:	2601      	movge	r6, #1
 80149ca:	2a00      	cmp	r2, #0
 80149cc:	4617      	mov	r7, r2
 80149ce:	da04      	bge.n	80149da <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 80149d0:	6823      	ldr	r3, [r4, #0]
 80149d2:	425b      	negs	r3, r3
 80149d4:	4257      	negs	r7, r2
 80149d6:	4276      	negs	r6, r6
 80149d8:	6023      	str	r3, [r4, #0]
 80149da:	2d00      	cmp	r5, #0
 80149dc:	4638      	mov	r0, r7
 80149de:	bfba      	itte	lt
 80149e0:	426d      	neglt	r5, r5
 80149e2:	f04f 38ff 	movlt.w	r8, #4294967295
 80149e6:	f04f 0801 	movge.w	r8, #1
 80149ea:	f7ff ff5d 	bl	80148a8 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80149ee:	ab03      	add	r3, sp, #12
 80149f0:	e9cd 5300 	strd	r5, r3, [sp]
 80149f4:	463a      	mov	r2, r7
 80149f6:	4603      	mov	r3, r0
 80149f8:	4648      	mov	r0, r9
 80149fa:	f7ff ff73 	bl	80148e4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80149fe:	6823      	ldr	r3, [r4, #0]
 8014a00:	9a03      	ldr	r2, [sp, #12]
 8014a02:	4546      	cmp	r6, r8
 8014a04:	441a      	add	r2, r3
 8014a06:	fb92 f3f5 	sdiv	r3, r2, r5
 8014a0a:	4418      	add	r0, r3
 8014a0c:	bf18      	it	ne
 8014a0e:	4240      	negne	r0, r0
 8014a10:	fb05 2313 	mls	r3, r5, r3, r2
 8014a14:	1c72      	adds	r2, r6, #1
 8014a16:	6023      	str	r3, [r4, #0]
 8014a18:	d105      	bne.n	8014a26 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8014a1a:	2b00      	cmp	r3, #0
 8014a1c:	f1c3 0200 	rsb	r2, r3, #0
 8014a20:	db0b      	blt.n	8014a3a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8014a22:	6022      	str	r2, [r4, #0]
 8014a24:	e006      	b.n	8014a34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a26:	2e01      	cmp	r6, #1
 8014a28:	d104      	bne.n	8014a34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a2a:	2b00      	cmp	r3, #0
 8014a2c:	da02      	bge.n	8014a34 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8014a2e:	442b      	add	r3, r5
 8014a30:	3801      	subs	r0, #1
 8014a32:	6023      	str	r3, [r4, #0]
 8014a34:	b005      	add	sp, #20
 8014a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8014a3a:	3801      	subs	r0, #1
 8014a3c:	1b52      	subs	r2, r2, r5
 8014a3e:	e7f0      	b.n	8014a22 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08014a40 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8014a40:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8014a44:	4c1c      	ldr	r4, [pc, #112]	; (8014ab8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8014a46:	6807      	ldr	r7, [r0, #0]
 8014a48:	69a3      	ldr	r3, [r4, #24]
 8014a4a:	4605      	mov	r5, r0
 8014a4c:	b92b      	cbnz	r3, 8014a5a <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8014a4e:	6840      	ldr	r0, [r0, #4]
 8014a50:	e9c5 7000 	strd	r7, r0, [r5]
 8014a54:	b004      	add	sp, #16
 8014a56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8014a5a:	68a2      	ldr	r2, [r4, #8]
 8014a5c:	6820      	ldr	r0, [r4, #0]
 8014a5e:	ae04      	add	r6, sp, #16
 8014a60:	f04f 0802 	mov.w	r8, #2
 8014a64:	fb93 f1f8 	sdiv	r1, r3, r8
 8014a68:	440a      	add	r2, r1
 8014a6a:	f846 2d04 	str.w	r2, [r6, #-4]!
 8014a6e:	69e1      	ldr	r1, [r4, #28]
 8014a70:	9600      	str	r6, [sp, #0]
 8014a72:	463a      	mov	r2, r7
 8014a74:	f7ff ff98 	bl	80149a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a78:	69a3      	ldr	r3, [r4, #24]
 8014a7a:	686a      	ldr	r2, [r5, #4]
 8014a7c:	6a21      	ldr	r1, [r4, #32]
 8014a7e:	9600      	str	r6, [sp, #0]
 8014a80:	4607      	mov	r7, r0
 8014a82:	6860      	ldr	r0, [r4, #4]
 8014a84:	f7ff ff90 	bl	80149a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014a88:	6962      	ldr	r2, [r4, #20]
 8014a8a:	69a3      	ldr	r3, [r4, #24]
 8014a8c:	fb93 f8f8 	sdiv	r8, r3, r8
 8014a90:	4442      	add	r2, r8
 8014a92:	9203      	str	r2, [sp, #12]
 8014a94:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014a96:	682a      	ldr	r2, [r5, #0]
 8014a98:	9600      	str	r6, [sp, #0]
 8014a9a:	4407      	add	r7, r0
 8014a9c:	68e0      	ldr	r0, [r4, #12]
 8014a9e:	f7ff ff83 	bl	80149a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014aa2:	9600      	str	r6, [sp, #0]
 8014aa4:	4680      	mov	r8, r0
 8014aa6:	69a3      	ldr	r3, [r4, #24]
 8014aa8:	686a      	ldr	r2, [r5, #4]
 8014aaa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8014aac:	6920      	ldr	r0, [r4, #16]
 8014aae:	f7ff ff7b 	bl	80149a8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014ab2:	4440      	add	r0, r8
 8014ab4:	e7cc      	b.n	8014a50 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8014ab6:	bf00      	nop
 8014ab8:	2000ef30 	.word	0x2000ef30

08014abc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014abc:	4b07      	ldr	r3, [pc, #28]	; (8014adc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014abe:	781b      	ldrb	r3, [r3, #0]
 8014ac0:	2b01      	cmp	r3, #1
 8014ac2:	d109      	bne.n	8014ad8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8014ac4:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014ac8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014acc:	8003      	strh	r3, [r0, #0]
 8014ace:	4b04      	ldr	r3, [pc, #16]	; (8014ae0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014ad0:	881b      	ldrh	r3, [r3, #0]
 8014ad2:	3b01      	subs	r3, #1
 8014ad4:	1a9b      	subs	r3, r3, r2
 8014ad6:	800b      	strh	r3, [r1, #0]
 8014ad8:	4770      	bx	lr
 8014ada:	bf00      	nop
 8014adc:	2000ef14 	.word	0x2000ef14
 8014ae0:	2000ef10 	.word	0x2000ef10

08014ae4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8014ae4:	b510      	push	{r4, lr}
 8014ae6:	4b07      	ldr	r3, [pc, #28]	; (8014b04 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8014ae8:	781b      	ldrb	r3, [r3, #0]
 8014aea:	2b01      	cmp	r3, #1
 8014aec:	d108      	bne.n	8014b00 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014aee:	4b06      	ldr	r3, [pc, #24]	; (8014b08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014af0:	880c      	ldrh	r4, [r1, #0]
 8014af2:	881b      	ldrh	r3, [r3, #0]
 8014af4:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014af8:	3b01      	subs	r3, #1
 8014afa:	1b1b      	subs	r3, r3, r4
 8014afc:	8003      	strh	r3, [r0, #0]
 8014afe:	800a      	strh	r2, [r1, #0]
 8014b00:	bd10      	pop	{r4, pc}
 8014b02:	bf00      	nop
 8014b04:	2000ef14 	.word	0x2000ef14
 8014b08:	2000ef10 	.word	0x2000ef10

08014b0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014b0c:	b510      	push	{r4, lr}
 8014b0e:	4b0a      	ldr	r3, [pc, #40]	; (8014b38 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014b10:	781b      	ldrb	r3, [r3, #0]
 8014b12:	2b01      	cmp	r3, #1
 8014b14:	d10e      	bne.n	8014b34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8014b16:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8014b1a:	8843      	ldrh	r3, [r0, #2]
 8014b1c:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b20:	8044      	strh	r4, [r0, #2]
 8014b22:	18ca      	adds	r2, r1, r3
 8014b24:	4b05      	ldr	r3, [pc, #20]	; (8014b3c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8014b26:	881b      	ldrh	r3, [r3, #0]
 8014b28:	1a9b      	subs	r3, r3, r2
 8014b2a:	8003      	strh	r3, [r0, #0]
 8014b2c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014b30:	80c3      	strh	r3, [r0, #6]
 8014b32:	8081      	strh	r1, [r0, #4]
 8014b34:	bd10      	pop	{r4, pc}
 8014b36:	bf00      	nop
 8014b38:	2000ef14 	.word	0x2000ef14
 8014b3c:	2000ef10 	.word	0x2000ef10

08014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8014b40:	4b08      	ldr	r3, [pc, #32]	; (8014b64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8014b42:	781b      	ldrb	r3, [r3, #0]
 8014b44:	2b01      	cmp	r3, #1
 8014b46:	d10c      	bne.n	8014b62 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8014b48:	8803      	ldrh	r3, [r0, #0]
 8014b4a:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8014b4e:	8842      	ldrh	r2, [r0, #2]
 8014b50:	8002      	strh	r2, [r0, #0]
 8014b52:	185a      	adds	r2, r3, r1
 8014b54:	4b04      	ldr	r3, [pc, #16]	; (8014b68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8014b56:	881b      	ldrh	r3, [r3, #0]
 8014b58:	1a9b      	subs	r3, r3, r2
 8014b5a:	8043      	strh	r3, [r0, #2]
 8014b5c:	88c3      	ldrh	r3, [r0, #6]
 8014b5e:	8083      	strh	r3, [r0, #4]
 8014b60:	80c1      	strh	r1, [r0, #6]
 8014b62:	4770      	bx	lr
 8014b64:	2000ef14 	.word	0x2000ef14
 8014b68:	2000ef10 	.word	0x2000ef10

08014b6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8014b6c:	b510      	push	{r4, lr}
 8014b6e:	4b07      	ldr	r3, [pc, #28]	; (8014b8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8014b70:	781b      	ldrb	r3, [r3, #0]
 8014b72:	2b01      	cmp	r3, #1
 8014b74:	d108      	bne.n	8014b88 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8014b76:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014b7a:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014b7e:	8003      	strh	r3, [r0, #0]
 8014b80:	8893      	ldrh	r3, [r2, #4]
 8014b82:	3b01      	subs	r3, #1
 8014b84:	1b1b      	subs	r3, r3, r4
 8014b86:	800b      	strh	r3, [r1, #0]
 8014b88:	bd10      	pop	{r4, pc}
 8014b8a:	bf00      	nop
 8014b8c:	2000ef14 	.word	0x2000ef14

08014b90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8014b90:	4b0b      	ldr	r3, [pc, #44]	; (8014bc0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8014b92:	781b      	ldrb	r3, [r3, #0]
 8014b94:	2b01      	cmp	r3, #1
 8014b96:	d111      	bne.n	8014bbc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8014b98:	680b      	ldr	r3, [r1, #0]
 8014b9a:	ed90 7a00 	vldr	s14, [r0]
 8014b9e:	6003      	str	r3, [r0, #0]
 8014ba0:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8014ba4:	eddf 6a07 	vldr	s13, [pc, #28]	; 8014bc4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8014ba8:	ee07 3a90 	vmov	s15, r3
 8014bac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014bb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014bb4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014bb8:	edc1 7a00 	vstr	s15, [r1]
 8014bbc:	4770      	bx	lr
 8014bbe:	bf00      	nop
 8014bc0:	2000ef14 	.word	0x2000ef14
 8014bc4:	38d1b717 	.word	0x38d1b717

08014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014bc8:	b510      	push	{r4, lr}
 8014bca:	4b0a      	ldr	r3, [pc, #40]	; (8014bf4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8014bcc:	781b      	ldrb	r3, [r3, #0]
 8014bce:	2b01      	cmp	r3, #1
 8014bd0:	460a      	mov	r2, r1
 8014bd2:	d10d      	bne.n	8014bf0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014bd4:	8881      	ldrh	r1, [r0, #4]
 8014bd6:	8803      	ldrh	r3, [r0, #0]
 8014bd8:	440b      	add	r3, r1
 8014bda:	4601      	mov	r1, r0
 8014bdc:	3b01      	subs	r3, #1
 8014bde:	f821 3b02 	strh.w	r3, [r1], #2
 8014be2:	f7ff ffc3 	bl	8014b6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014be6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014bea:	88c2      	ldrh	r2, [r0, #6]
 8014bec:	8082      	strh	r2, [r0, #4]
 8014bee:	80c3      	strh	r3, [r0, #6]
 8014bf0:	bd10      	pop	{r4, pc}
 8014bf2:	bf00      	nop
 8014bf4:	2000ef14 	.word	0x2000ef14

08014bf8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014bf8:	4b06      	ldr	r3, [pc, #24]	; (8014c14 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8014bfa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014bfe:	4b06      	ldr	r3, [pc, #24]	; (8014c18 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014c00:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8014c04:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c08:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8014c0c:	2100      	movs	r1, #0
 8014c0e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 8014c12:	4770      	bx	lr
 8014c14:	2000ef10 	.word	0x2000ef10
 8014c18:	2000ef12 	.word	0x2000ef12

08014c1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8014c1c:	4b03      	ldr	r3, [pc, #12]	; (8014c2c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8014c1e:	6818      	ldr	r0, [r3, #0]
 8014c20:	b110      	cbz	r0, 8014c28 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014c22:	6803      	ldr	r3, [r0, #0]
 8014c24:	699b      	ldr	r3, [r3, #24]
 8014c26:	4718      	bx	r3
 8014c28:	4770      	bx	lr
 8014c2a:	bf00      	nop
 8014c2c:	2000ef60 	.word	0x2000ef60

08014c30 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014c30:	4770      	bx	lr
	...

08014c34 <_ZN8touchgfx11Application4drawEv>:
 8014c34:	b507      	push	{r0, r1, r2, lr}
 8014c36:	4b09      	ldr	r3, [pc, #36]	; (8014c5c <_ZN8touchgfx11Application4drawEv+0x28>)
 8014c38:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c3c:	4b08      	ldr	r3, [pc, #32]	; (8014c60 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014c3e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c42:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c46:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c4a:	6803      	ldr	r3, [r0, #0]
 8014c4c:	2100      	movs	r1, #0
 8014c4e:	9100      	str	r1, [sp, #0]
 8014c50:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8014c52:	4669      	mov	r1, sp
 8014c54:	4798      	blx	r3
 8014c56:	b003      	add	sp, #12
 8014c58:	f85d fb04 	ldr.w	pc, [sp], #4
 8014c5c:	2000ef10 	.word	0x2000ef10
 8014c60:	2000ef12 	.word	0x2000ef12

08014c64 <_ZN8touchgfx11Application10invalidateEv>:
 8014c64:	4b09      	ldr	r3, [pc, #36]	; (8014c8c <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014c66:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014c6a:	4b09      	ldr	r3, [pc, #36]	; (8014c90 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014c6c:	b082      	sub	sp, #8
 8014c6e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014c72:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014c76:	2100      	movs	r1, #0
 8014c78:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014c7c:	9100      	str	r1, [sp, #0]
 8014c7e:	6803      	ldr	r3, [r0, #0]
 8014c80:	aa02      	add	r2, sp, #8
 8014c82:	e912 0006 	ldmdb	r2, {r1, r2}
 8014c86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014c88:	b002      	add	sp, #8
 8014c8a:	4718      	bx	r3
 8014c8c:	2000ef10 	.word	0x2000ef10
 8014c90:	2000ef12 	.word	0x2000ef12

08014c94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014c94:	4b03      	ldr	r3, [pc, #12]	; (8014ca4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014c96:	6818      	ldr	r0, [r3, #0]
 8014c98:	b110      	cbz	r0, 8014ca0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014c9a:	6803      	ldr	r3, [r0, #0]
 8014c9c:	69db      	ldr	r3, [r3, #28]
 8014c9e:	4718      	bx	r3
 8014ca0:	4770      	bx	lr
 8014ca2:	bf00      	nop
 8014ca4:	2000ef60 	.word	0x2000ef60

08014ca8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014ca8:	4b03      	ldr	r3, [pc, #12]	; (8014cb8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014caa:	6818      	ldr	r0, [r3, #0]
 8014cac:	b110      	cbz	r0, 8014cb4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8014cae:	6803      	ldr	r3, [r0, #0]
 8014cb0:	6a1b      	ldr	r3, [r3, #32]
 8014cb2:	4718      	bx	r3
 8014cb4:	4770      	bx	lr
 8014cb6:	bf00      	nop
 8014cb8:	2000ef60 	.word	0x2000ef60

08014cbc <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014cbc:	2300      	movs	r3, #0
 8014cbe:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8014cc2:	4770      	bx	lr

08014cc4 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014cc4:	4b03      	ldr	r3, [pc, #12]	; (8014cd4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014cc6:	6818      	ldr	r0, [r3, #0]
 8014cc8:	b110      	cbz	r0, 8014cd0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014cca:	6803      	ldr	r3, [r0, #0]
 8014ccc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8014cce:	4718      	bx	r3
 8014cd0:	4770      	bx	lr
 8014cd2:	bf00      	nop
 8014cd4:	2000ef60 	.word	0x2000ef60

08014cd8 <_ZN8touchgfx11ApplicationD1Ev>:
 8014cd8:	4770      	bx	lr

08014cda <_ZN8touchgfx11ApplicationD0Ev>:
 8014cda:	b510      	push	{r4, lr}
 8014cdc:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8014ce0:	4604      	mov	r4, r0
 8014ce2:	f011 fc75 	bl	80265d0 <_ZdlPvj>
 8014ce6:	4620      	mov	r0, r4
 8014ce8:	bd10      	pop	{r4, pc}

08014cea <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014cea:	b510      	push	{r4, lr}
 8014cec:	f9b1 4000 	ldrsh.w	r4, [r1]
 8014cf0:	888a      	ldrh	r2, [r1, #4]
 8014cf2:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014cf6:	4422      	add	r2, r4
 8014cf8:	b212      	sxth	r2, r2
 8014cfa:	4293      	cmp	r3, r2
 8014cfc:	da15      	bge.n	8014d2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014cfe:	8882      	ldrh	r2, [r0, #4]
 8014d00:	4413      	add	r3, r2
 8014d02:	b21b      	sxth	r3, r3
 8014d04:	429c      	cmp	r4, r3
 8014d06:	da10      	bge.n	8014d2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d08:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8014d0c:	88c9      	ldrh	r1, [r1, #6]
 8014d0e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014d12:	4419      	add	r1, r3
 8014d14:	b209      	sxth	r1, r1
 8014d16:	428a      	cmp	r2, r1
 8014d18:	da07      	bge.n	8014d2a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014d1a:	88c0      	ldrh	r0, [r0, #6]
 8014d1c:	4410      	add	r0, r2
 8014d1e:	b200      	sxth	r0, r0
 8014d20:	4283      	cmp	r3, r0
 8014d22:	bfac      	ite	ge
 8014d24:	2000      	movge	r0, #0
 8014d26:	2001      	movlt	r0, #1
 8014d28:	bd10      	pop	{r4, pc}
 8014d2a:	2000      	movs	r0, #0
 8014d2c:	e7fc      	b.n	8014d28 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08014d2e <_ZN8touchgfx4Rect10restrictToEss>:
 8014d2e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014d32:	2b00      	cmp	r3, #0
 8014d34:	b510      	push	{r4, lr}
 8014d36:	da04      	bge.n	8014d42 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014d38:	8884      	ldrh	r4, [r0, #4]
 8014d3a:	4423      	add	r3, r4
 8014d3c:	8083      	strh	r3, [r0, #4]
 8014d3e:	2300      	movs	r3, #0
 8014d40:	8003      	strh	r3, [r0, #0]
 8014d42:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014d46:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014d4a:	1b09      	subs	r1, r1, r4
 8014d4c:	428b      	cmp	r3, r1
 8014d4e:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014d52:	bfc8      	it	gt
 8014d54:	8081      	strhgt	r1, [r0, #4]
 8014d56:	2b00      	cmp	r3, #0
 8014d58:	da04      	bge.n	8014d64 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014d5a:	88c1      	ldrh	r1, [r0, #6]
 8014d5c:	440b      	add	r3, r1
 8014d5e:	80c3      	strh	r3, [r0, #6]
 8014d60:	2300      	movs	r3, #0
 8014d62:	8043      	strh	r3, [r0, #2]
 8014d64:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014d68:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014d6c:	1a52      	subs	r2, r2, r1
 8014d6e:	4293      	cmp	r3, r2
 8014d70:	bfc8      	it	gt
 8014d72:	80c2      	strhgt	r2, [r0, #6]
 8014d74:	bd10      	pop	{r4, pc}
	...

08014d78 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014d78:	b510      	push	{r4, lr}
 8014d7a:	4b10      	ldr	r3, [pc, #64]	; (8014dbc <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014d7c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014d80:	4b0f      	ldr	r3, [pc, #60]	; (8014dc0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8014d82:	460c      	mov	r4, r1
 8014d84:	4620      	mov	r0, r4
 8014d86:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014d8a:	f7ff ffd0 	bl	8014d2e <_ZN8touchgfx4Rect10restrictToEss>
 8014d8e:	4b0d      	ldr	r3, [pc, #52]	; (8014dc4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014d90:	6818      	ldr	r0, [r3, #0]
 8014d92:	b190      	cbz	r0, 8014dba <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8014d94:	6803      	ldr	r3, [r0, #0]
 8014d96:	4621      	mov	r1, r4
 8014d98:	689b      	ldr	r3, [r3, #8]
 8014d9a:	4798      	blx	r3
 8014d9c:	4b0a      	ldr	r3, [pc, #40]	; (8014dc8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014d9e:	6818      	ldr	r0, [r3, #0]
 8014da0:	b118      	cbz	r0, 8014daa <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8014da2:	6803      	ldr	r3, [r0, #0]
 8014da4:	4621      	mov	r1, r4
 8014da6:	689b      	ldr	r3, [r3, #8]
 8014da8:	4798      	blx	r3
 8014daa:	4b08      	ldr	r3, [pc, #32]	; (8014dcc <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014dac:	6818      	ldr	r0, [r3, #0]
 8014dae:	6803      	ldr	r3, [r0, #0]
 8014db0:	4621      	mov	r1, r4
 8014db2:	69db      	ldr	r3, [r3, #28]
 8014db4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014db8:	4718      	bx	r3
 8014dba:	bd10      	pop	{r4, pc}
 8014dbc:	2000ef12 	.word	0x2000ef12
 8014dc0:	2000ef10 	.word	0x2000ef10
 8014dc4:	2000ef60 	.word	0x2000ef60
 8014dc8:	2000ef5c 	.word	0x2000ef5c
 8014dcc:	2000ef1c 	.word	0x2000ef1c

08014dd0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014dd0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014dd2:	4606      	mov	r6, r0
 8014dd4:	4608      	mov	r0, r1
 8014dd6:	460f      	mov	r7, r1
 8014dd8:	f7fa fe93 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ddc:	b9e8      	cbnz	r0, 8014e1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dde:	f9b7 5000 	ldrsh.w	r5, [r7]
 8014de2:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014de6:	42a5      	cmp	r5, r4
 8014de8:	db17      	blt.n	8014e1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014dea:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014dee:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8014df2:	429a      	cmp	r2, r3
 8014df4:	db11      	blt.n	8014e1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014df6:	88b9      	ldrh	r1, [r7, #4]
 8014df8:	440d      	add	r5, r1
 8014dfa:	88b1      	ldrh	r1, [r6, #4]
 8014dfc:	440c      	add	r4, r1
 8014dfe:	b22d      	sxth	r5, r5
 8014e00:	b224      	sxth	r4, r4
 8014e02:	42a5      	cmp	r5, r4
 8014e04:	dc09      	bgt.n	8014e1a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014e06:	88f8      	ldrh	r0, [r7, #6]
 8014e08:	4410      	add	r0, r2
 8014e0a:	88f2      	ldrh	r2, [r6, #6]
 8014e0c:	4413      	add	r3, r2
 8014e0e:	b200      	sxth	r0, r0
 8014e10:	b21b      	sxth	r3, r3
 8014e12:	4298      	cmp	r0, r3
 8014e14:	bfcc      	ite	gt
 8014e16:	2000      	movgt	r0, #0
 8014e18:	2001      	movle	r0, #1
 8014e1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014e1c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014e1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014e1e:	4604      	mov	r4, r0
 8014e20:	4608      	mov	r0, r1
 8014e22:	460d      	mov	r5, r1
 8014e24:	f7fa fe6d 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e28:	b978      	cbnz	r0, 8014e4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014e2a:	4620      	mov	r0, r4
 8014e2c:	f7fa fe69 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014e30:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014e34:	b150      	cbz	r0, 8014e4c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014e36:	8026      	strh	r6, [r4, #0]
 8014e38:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014e3c:	8063      	strh	r3, [r4, #2]
 8014e3e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8014e42:	80a3      	strh	r3, [r4, #4]
 8014e44:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014e48:	80e3      	strh	r3, [r4, #6]
 8014e4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014e4c:	f9b4 1000 	ldrsh.w	r1, [r4]
 8014e50:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014e54:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014e58:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8014e5c:	88ed      	ldrh	r5, [r5, #6]
 8014e5e:	42b1      	cmp	r1, r6
 8014e60:	460f      	mov	r7, r1
 8014e62:	bfa8      	it	ge
 8014e64:	4637      	movge	r7, r6
 8014e66:	4293      	cmp	r3, r2
 8014e68:	4618      	mov	r0, r3
 8014e6a:	4466      	add	r6, ip
 8014e6c:	bfa8      	it	ge
 8014e6e:	4610      	movge	r0, r2
 8014e70:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014e74:	8027      	strh	r7, [r4, #0]
 8014e76:	442a      	add	r2, r5
 8014e78:	88e5      	ldrh	r5, [r4, #6]
 8014e7a:	8060      	strh	r0, [r4, #2]
 8014e7c:	4461      	add	r1, ip
 8014e7e:	442b      	add	r3, r5
 8014e80:	b236      	sxth	r6, r6
 8014e82:	b209      	sxth	r1, r1
 8014e84:	b212      	sxth	r2, r2
 8014e86:	b21b      	sxth	r3, r3
 8014e88:	428e      	cmp	r6, r1
 8014e8a:	bfac      	ite	ge
 8014e8c:	ebc7 0106 	rsbge	r1, r7, r6
 8014e90:	ebc7 0101 	rsblt	r1, r7, r1
 8014e94:	429a      	cmp	r2, r3
 8014e96:	bfac      	ite	ge
 8014e98:	ebc0 0202 	rsbge	r2, r0, r2
 8014e9c:	ebc0 0203 	rsblt	r2, r0, r3
 8014ea0:	80a1      	strh	r1, [r4, #4]
 8014ea2:	80e2      	strh	r2, [r4, #6]
 8014ea4:	e7d1      	b.n	8014e4a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014ea8 <_ZN8touchgfx11Application11getInstanceEv>:
 8014ea8:	4b01      	ldr	r3, [pc, #4]	; (8014eb0 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014eaa:	6818      	ldr	r0, [r3, #0]
 8014eac:	4770      	bx	lr
 8014eae:	bf00      	nop
 8014eb0:	2000ef70 	.word	0x2000ef70

08014eb4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8014eb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014eb6:	4b10      	ldr	r3, [pc, #64]	; (8014ef8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8014eb8:	781b      	ldrb	r3, [r3, #0]
 8014eba:	4605      	mov	r5, r0
 8014ebc:	b1d3      	cbz	r3, 8014ef4 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 8014ebe:	4b0f      	ldr	r3, [pc, #60]	; (8014efc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8014ec0:	4f0f      	ldr	r7, [pc, #60]	; (8014f00 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8014ec2:	881c      	ldrh	r4, [r3, #0]
 8014ec4:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8014ec8:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 8014ecc:	42a3      	cmp	r3, r4
 8014ece:	d90e      	bls.n	8014eee <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8014ed0:	683b      	ldr	r3, [r7, #0]
 8014ed2:	f893 2058 	ldrb.w	r2, [r3, #88]	; 0x58
 8014ed6:	b10a      	cbz	r2, 8014edc <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8014ed8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8014eda:	b900      	cbnz	r0, 8014ede <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 8014edc:	6898      	ldr	r0, [r3, #8]
 8014ede:	6803      	ldr	r3, [r0, #0]
 8014ee0:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8014ee4:	69db      	ldr	r3, [r3, #28]
 8014ee6:	3401      	adds	r4, #1
 8014ee8:	4798      	blx	r3
 8014eea:	b2a4      	uxth	r4, r4
 8014eec:	e7ec      	b.n	8014ec8 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 8014eee:	2300      	movs	r3, #0
 8014ef0:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8014ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014ef6:	bf00      	nop
 8014ef8:	2000ef1a 	.word	0x2000ef1a
 8014efc:	20000060 	.word	0x20000060
 8014f00:	2000ef1c 	.word	0x2000ef1c

08014f04 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8014f04:	b510      	push	{r4, lr}
 8014f06:	2300      	movs	r3, #0
 8014f08:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 8014f0c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8014f10:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8014f14:	4604      	mov	r4, r0
 8014f16:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f1a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 8014f1e:	429a      	cmp	r2, r3
 8014f20:	d90e      	bls.n	8014f40 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8014f22:	18e2      	adds	r2, r4, r3
 8014f24:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8014f28:	b122      	cbz	r2, 8014f34 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014f2a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014f2e:	6803      	ldr	r3, [r0, #0]
 8014f30:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8014f32:	4798      	blx	r3
 8014f34:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8014f38:	3301      	adds	r3, #1
 8014f3a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8014f3e:	e7ea      	b.n	8014f16 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014f40:	bd10      	pop	{r4, pc}

08014f42 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 8014f42:	b530      	push	{r4, r5, lr}
 8014f44:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 8014f48:	2200      	movs	r2, #0
 8014f4a:	b293      	uxth	r3, r2
 8014f4c:	429d      	cmp	r5, r3
 8014f4e:	d90e      	bls.n	8014f6e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f50:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014f54:	428b      	cmp	r3, r1
 8014f56:	d10b      	bne.n	8014f70 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f58:	1884      	adds	r4, r0, r2
 8014f5a:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 8014f5e:	b13b      	cbz	r3, 8014f70 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014f60:	3b01      	subs	r3, #1
 8014f62:	b2db      	uxtb	r3, r3
 8014f64:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 8014f68:	b90b      	cbnz	r3, 8014f6e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014f6a:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014f6e:	bd30      	pop	{r4, r5, pc}
 8014f70:	3201      	adds	r2, #1
 8014f72:	e7ea      	b.n	8014f4a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014f74:	2300      	movs	r3, #0
 8014f76:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8014f7a:	f100 0284 	add.w	r2, r0, #132	; 0x84
 8014f7e:	30a4      	adds	r0, #164	; 0xa4
 8014f80:	f802 3b01 	strb.w	r3, [r2], #1
 8014f84:	4282      	cmp	r2, r0
 8014f86:	d1fb      	bne.n	8014f80 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014f88:	4770      	bx	lr
	...

08014f8c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014f8c:	b570      	push	{r4, r5, r6, lr}
 8014f8e:	4c0b      	ldr	r4, [pc, #44]	; (8014fbc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8014f90:	4605      	mov	r5, r0
 8014f92:	6820      	ldr	r0, [r4, #0]
 8014f94:	460e      	mov	r6, r1
 8014f96:	b110      	cbz	r0, 8014f9e <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014f98:	6803      	ldr	r3, [r0, #0]
 8014f9a:	695b      	ldr	r3, [r3, #20]
 8014f9c:	4798      	blx	r3
 8014f9e:	1d28      	adds	r0, r5, #4
 8014fa0:	f7ff ffe8 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014fa4:	6026      	str	r6, [r4, #0]
 8014fa6:	6833      	ldr	r3, [r6, #0]
 8014fa8:	4630      	mov	r0, r6
 8014faa:	68db      	ldr	r3, [r3, #12]
 8014fac:	4798      	blx	r3
 8014fae:	682b      	ldr	r3, [r5, #0]
 8014fb0:	4628      	mov	r0, r5
 8014fb2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8014fb4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014fb8:	4718      	bx	r3
 8014fba:	bf00      	nop
 8014fbc:	2000ef60 	.word	0x2000ef60

08014fc0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8014fc0:	2300      	movs	r3, #0
 8014fc2:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8014fc6:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8014fca:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014fcc:	461a      	mov	r2, r3
 8014fce:	461c      	mov	r4, r3
 8014fd0:	461d      	mov	r5, r3
 8014fd2:	459c      	cmp	ip, r3
 8014fd4:	dd1a      	ble.n	801500c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8014fd6:	18c6      	adds	r6, r0, r3
 8014fd8:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8014fdc:	b16e      	cbz	r6, 8014ffa <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8014fde:	429a      	cmp	r2, r3
 8014fe0:	d008      	beq.n	8014ff4 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8014fe2:	fa1f fe82 	uxth.w	lr, r2
 8014fe6:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8014fea:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014fee:	1887      	adds	r7, r0, r2
 8014ff0:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8014ff4:	3201      	adds	r2, #1
 8014ff6:	3301      	adds	r3, #1
 8014ff8:	e7eb      	b.n	8014fd2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8014ffa:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8014ffe:	4299      	cmp	r1, r3
 8015000:	bfa8      	it	ge
 8015002:	3501      	addge	r5, #1
 8015004:	429e      	cmp	r6, r3
 8015006:	bfc8      	it	gt
 8015008:	3401      	addgt	r4, #1
 801500a:	e7f4      	b.n	8014ff6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 801500c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8015010:	1b49      	subs	r1, r1, r5
 8015012:	1b1b      	subs	r3, r3, r4
 8015014:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8015018:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 801501c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8015020:	4293      	cmp	r3, r2
 8015022:	dd03      	ble.n	801502c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8015024:	3b01      	subs	r3, #1
 8015026:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 801502a:	e7f7      	b.n	801501c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 801502c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08015030 <_ZN8touchgfx11Application15handleTickEventEv>:
 8015030:	b570      	push	{r4, r5, r6, lr}
 8015032:	4d16      	ldr	r5, [pc, #88]	; (801508c <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8015034:	4604      	mov	r4, r0
 8015036:	6828      	ldr	r0, [r5, #0]
 8015038:	b140      	cbz	r0, 801504c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801503a:	7a03      	ldrb	r3, [r0, #8]
 801503c:	b933      	cbnz	r3, 801504c <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801503e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015042:	6803      	ldr	r3, [r0, #0]
 8015044:	689b      	ldr	r3, [r3, #8]
 8015046:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801504a:	4718      	bx	r3
 801504c:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8015050:	4e0f      	ldr	r6, [pc, #60]	; (8015090 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8015052:	b973      	cbnz	r3, 8015072 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015054:	b168      	cbz	r0, 8015072 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8015056:	7a03      	ldrb	r3, [r0, #8]
 8015058:	b15b      	cbz	r3, 8015072 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801505a:	6830      	ldr	r0, [r6, #0]
 801505c:	b110      	cbz	r0, 8015064 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801505e:	6803      	ldr	r3, [r0, #0]
 8015060:	691b      	ldr	r3, [r3, #16]
 8015062:	4798      	blx	r3
 8015064:	6828      	ldr	r0, [r5, #0]
 8015066:	6803      	ldr	r3, [r0, #0]
 8015068:	68db      	ldr	r3, [r3, #12]
 801506a:	4798      	blx	r3
 801506c:	2301      	movs	r3, #1
 801506e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8015072:	3404      	adds	r4, #4
 8015074:	4620      	mov	r0, r4
 8015076:	f7ff ff45 	bl	8014f04 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801507a:	4620      	mov	r0, r4
 801507c:	f7ff ffa0 	bl	8014fc0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8015080:	6830      	ldr	r0, [r6, #0]
 8015082:	b110      	cbz	r0, 801508a <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8015084:	6803      	ldr	r3, [r0, #0]
 8015086:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015088:	e7dd      	b.n	8015046 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801508a:	bd70      	pop	{r4, r5, r6, pc}
 801508c:	2000ef64 	.word	0x2000ef64
 8015090:	2000ef60 	.word	0x2000ef60

08015094 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8015094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015096:	2300      	movs	r3, #0
 8015098:	4604      	mov	r4, r0
 801509a:	460d      	mov	r5, r1
 801509c:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 80150a0:	4618      	mov	r0, r3
 80150a2:	b29a      	uxth	r2, r3
 80150a4:	4291      	cmp	r1, r2
 80150a6:	d911      	bls.n	80150cc <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 80150a8:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 80150ac:	18e6      	adds	r6, r4, r3
 80150ae:	42af      	cmp	r7, r5
 80150b0:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 80150b4:	d105      	bne.n	80150c2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80150b6:	2aff      	cmp	r2, #255	; 0xff
 80150b8:	d002      	beq.n	80150c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150ba:	3201      	adds	r2, #1
 80150bc:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 80150c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80150c2:	2a00      	cmp	r2, #0
 80150c4:	bf08      	it	eq
 80150c6:	2001      	moveq	r0, #1
 80150c8:	3301      	adds	r3, #1
 80150ca:	e7ea      	b.n	80150a2 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80150cc:	b120      	cbz	r0, 80150d8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150ce:	2920      	cmp	r1, #32
 80150d0:	d102      	bne.n	80150d8 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 80150d2:	4620      	mov	r0, r4
 80150d4:	f7ff ff74 	bl	8014fc0 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80150d8:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 80150dc:	2b1f      	cmp	r3, #31
 80150de:	d8ef      	bhi.n	80150c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80150e0:	18e2      	adds	r2, r4, r3
 80150e2:	2101      	movs	r1, #1
 80150e4:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 80150e8:	185a      	adds	r2, r3, r1
 80150ea:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 80150ee:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80150f2:	e7e5      	b.n	80150c0 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080150f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80150f4:	4603      	mov	r3, r0
 80150f6:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80150fa:	2200      	movs	r2, #0
 80150fc:	801a      	strh	r2, [r3, #0]
 80150fe:	805a      	strh	r2, [r3, #2]
 8015100:	809a      	strh	r2, [r3, #4]
 8015102:	80da      	strh	r2, [r3, #6]
 8015104:	3308      	adds	r3, #8
 8015106:	428b      	cmp	r3, r1
 8015108:	d1f8      	bne.n	80150fc <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801510a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801510e:	4770      	bx	lr

08015110 <_ZN8touchgfx11ApplicationC1Ev>:
 8015110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015112:	4606      	mov	r6, r0
 8015114:	4b1c      	ldr	r3, [pc, #112]	; (8015188 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8015116:	f846 3b04 	str.w	r3, [r6], #4
 801511a:	4604      	mov	r4, r0
 801511c:	2500      	movs	r5, #0
 801511e:	22a8      	movs	r2, #168	; 0xa8
 8015120:	2100      	movs	r1, #0
 8015122:	4630      	mov	r0, r6
 8015124:	f011 fb0e 	bl	8026744 <memset>
 8015128:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 801512c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8015130:	f7ff ffe0 	bl	80150f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015134:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015138:	f7ff ffdc 	bl	80150f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801513c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8015140:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8015144:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8015148:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 801514c:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8015150:	490e      	ldr	r1, [pc, #56]	; (801518c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8015152:	480f      	ldr	r0, [pc, #60]	; (8015190 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8015154:	4f0f      	ldr	r7, [pc, #60]	; (8015194 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8015156:	f010 fde9 	bl	8025d2c <CRC_Lock>
 801515a:	4b0f      	ldr	r3, [pc, #60]	; (8015198 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 801515c:	b158      	cbz	r0, 8015176 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 801515e:	801d      	strh	r5, [r3, #0]
 8015160:	4a0e      	ldr	r2, [pc, #56]	; (801519c <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8015162:	2300      	movs	r3, #0
 8015164:	6013      	str	r3, [r2, #0]
 8015166:	4a0e      	ldr	r2, [pc, #56]	; (80151a0 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8015168:	603b      	str	r3, [r7, #0]
 801516a:	4630      	mov	r0, r6
 801516c:	6013      	str	r3, [r2, #0]
 801516e:	f7ff ff01 	bl	8014f74 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8015172:	4620      	mov	r0, r4
 8015174:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015176:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801517a:	2002      	movs	r0, #2
 801517c:	801a      	strh	r2, [r3, #0]
 801517e:	6038      	str	r0, [r7, #0]
 8015180:	f001 fb4a 	bl	8016818 <_ZN8touchgfx6Screen4drawEv>
 8015184:	e7ec      	b.n	8015160 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8015186:	bf00      	nop
 8015188:	0802a5cc 	.word	0x0802a5cc
 801518c:	b5e8b5cd 	.word	0xb5e8b5cd
 8015190:	f407a5c2 	.word	0xf407a5c2
 8015194:	2000ef60 	.word	0x2000ef60
 8015198:	20000060 	.word	0x20000060
 801519c:	2000ef70 	.word	0x2000ef70
 80151a0:	2000ef64 	.word	0x2000ef64

080151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 80151a4:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 80151a8:	3b01      	subs	r3, #1
 80151aa:	b29b      	uxth	r3, r3
 80151ac:	428b      	cmp	r3, r1
 80151ae:	b510      	push	{r4, lr}
 80151b0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 80151b4:	d908      	bls.n	80151c8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 80151b6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 80151ba:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 80151be:	681a      	ldr	r2, [r3, #0]
 80151c0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 80151c4:	685a      	ldr	r2, [r3, #4]
 80151c6:	6062      	str	r2, [r4, #4]
 80151c8:	bd10      	pop	{r4, pc}
	...

080151cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 80151cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d0:	4b8f      	ldr	r3, [pc, #572]	; (8015410 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 80151d2:	b08f      	sub	sp, #60	; 0x3c
 80151d4:	ac0a      	add	r4, sp, #40	; 0x28
 80151d6:	e884 0006 	stmia.w	r4, {r1, r2}
 80151da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80151de:	4b8d      	ldr	r3, [pc, #564]	; (8015414 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 80151e0:	4683      	mov	fp, r0
 80151e2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80151e6:	4620      	mov	r0, r4
 80151e8:	f7ff fda1 	bl	8014d2e <_ZN8touchgfx4Rect10restrictToEss>
 80151ec:	4620      	mov	r0, r4
 80151ee:	f7fa fc88 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151f2:	2800      	cmp	r0, #0
 80151f4:	d16a      	bne.n	80152cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80151f6:	9403      	str	r4, [sp, #12]
 80151f8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80151fc:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8015200:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8015204:	35a4      	adds	r5, #164	; 0xa4
 8015206:	9301      	str	r3, [sp, #4]
 8015208:	b15c      	cbz	r4, 8015222 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 801520a:	4629      	mov	r1, r5
 801520c:	9803      	ldr	r0, [sp, #12]
 801520e:	f7ff fddf 	bl	8014dd0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015212:	3c01      	subs	r4, #1
 8015214:	b118      	cbz	r0, 801521e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8015216:	b2a1      	uxth	r1, r4
 8015218:	9801      	ldr	r0, [sp, #4]
 801521a:	f7ff ffc3 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801521e:	3d08      	subs	r5, #8
 8015220:	e7f2      	b.n	8015208 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8015222:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	; 0xec
 8015226:	f8cd a010 	str.w	sl, [sp, #16]
 801522a:	f10a 33ff 	add.w	r3, sl, #4294967295
 801522e:	9302      	str	r3, [sp, #8]
 8015230:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8015234:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8015238:	9306      	str	r3, [sp, #24]
 801523a:	445c      	add	r4, fp
 801523c:	2500      	movs	r5, #0
 801523e:	4626      	mov	r6, r4
 8015240:	f8cd a014 	str.w	sl, [sp, #20]
 8015244:	462f      	mov	r7, r5
 8015246:	9b05      	ldr	r3, [sp, #20]
 8015248:	2b00      	cmp	r3, #0
 801524a:	d073      	beq.n	8015334 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801524c:	9903      	ldr	r1, [sp, #12]
 801524e:	4630      	mov	r0, r6
 8015250:	f7ff fd4b 	bl	8014cea <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015254:	b350      	cbz	r0, 80152ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015256:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801525a:	f9b6 c000 	ldrsh.w	ip, [r6]
 801525e:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	; 0x2a
 8015262:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8015266:	45e6      	cmp	lr, ip
 8015268:	db33      	blt.n	80152d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801526a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801526e:	88b3      	ldrh	r3, [r6, #4]
 8015270:	4472      	add	r2, lr
 8015272:	4463      	add	r3, ip
 8015274:	b212      	sxth	r2, r2
 8015276:	b21b      	sxth	r3, r3
 8015278:	429a      	cmp	r2, r3
 801527a:	dc2a      	bgt.n	80152d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801527c:	88f3      	ldrh	r3, [r6, #6]
 801527e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015282:	fa1f f289 	uxth.w	r2, r9
 8015286:	4413      	add	r3, r2
 8015288:	b29b      	uxth	r3, r3
 801528a:	45c8      	cmp	r8, r9
 801528c:	fa1f fc88 	uxth.w	ip, r8
 8015290:	fa0f fe83 	sxth.w	lr, r3
 8015294:	db0f      	blt.n	80152b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8015296:	eba3 030c 	sub.w	r3, r3, ip
 801529a:	1ac9      	subs	r1, r1, r3
 801529c:	b209      	sxth	r1, r1
 801529e:	2900      	cmp	r1, #0
 80152a0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80152a4:	dd12      	ble.n	80152cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80152a6:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 80152aa:	4605      	mov	r5, r0
 80152ac:	9b05      	ldr	r3, [sp, #20]
 80152ae:	3b01      	subs	r3, #1
 80152b0:	9305      	str	r3, [sp, #20]
 80152b2:	3e08      	subs	r6, #8
 80152b4:	e7c7      	b.n	8015246 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 80152b6:	4461      	add	r1, ip
 80152b8:	b209      	sxth	r1, r1
 80152ba:	4571      	cmp	r1, lr
 80152bc:	dc38      	bgt.n	8015330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152be:	eba2 020c 	sub.w	r2, r2, ip
 80152c2:	b212      	sxth	r2, r2
 80152c4:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80152c8:	2a00      	cmp	r2, #0
 80152ca:	dcee      	bgt.n	80152aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80152cc:	b00f      	add	sp, #60	; 0x3c
 80152ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80152d2:	45c8      	cmp	r8, r9
 80152d4:	db2c      	blt.n	8015330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152d6:	88f3      	ldrh	r3, [r6, #6]
 80152d8:	4499      	add	r9, r3
 80152da:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 80152de:	4498      	add	r8, r3
 80152e0:	fa0f f989 	sxth.w	r9, r9
 80152e4:	fa0f f888 	sxth.w	r8, r8
 80152e8:	45c1      	cmp	r9, r8
 80152ea:	db21      	blt.n	8015330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80152ec:	88b3      	ldrh	r3, [r6, #4]
 80152ee:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80152f2:	fa1f f28c 	uxth.w	r2, ip
 80152f6:	4413      	add	r3, r2
 80152f8:	b29b      	uxth	r3, r3
 80152fa:	45e6      	cmp	lr, ip
 80152fc:	fa1f f88e 	uxth.w	r8, lr
 8015300:	fa0f f983 	sxth.w	r9, r3
 8015304:	db0a      	blt.n	801531c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8015306:	eba3 0308 	sub.w	r3, r3, r8
 801530a:	1ac9      	subs	r1, r1, r3
 801530c:	b209      	sxth	r1, r1
 801530e:	2900      	cmp	r1, #0
 8015310:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8015314:	ddda      	ble.n	80152cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8015316:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801531a:	e7c6      	b.n	80152aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801531c:	4441      	add	r1, r8
 801531e:	b209      	sxth	r1, r1
 8015320:	4549      	cmp	r1, r9
 8015322:	dc05      	bgt.n	8015330 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8015324:	eba2 0208 	sub.w	r2, r2, r8
 8015328:	b212      	sxth	r2, r2
 801532a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801532e:	e7cb      	b.n	80152c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8015330:	4607      	mov	r7, r0
 8015332:	e7bb      	b.n	80152ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8015334:	2d00      	cmp	r5, #0
 8015336:	d181      	bne.n	801523c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8015338:	2f00      	cmp	r7, #0
 801533a:	f000 81dd 	beq.w	80156f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801533e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8015342:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8015346:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 801534a:	b2b3      	uxth	r3, r6
 801534c:	9305      	str	r3, [sp, #20]
 801534e:	9a05      	ldr	r2, [sp, #20]
 8015350:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8015354:	4413      	add	r3, r2
 8015356:	b2ba      	uxth	r2, r7
 8015358:	4492      	add	sl, r2
 801535a:	b29b      	uxth	r3, r3
 801535c:	fa1f fa8a 	uxth.w	sl, sl
 8015360:	fa0f f883 	sxth.w	r8, r3
 8015364:	fa0f f98a 	sxth.w	r9, sl
 8015368:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801536c:	9b04      	ldr	r3, [sp, #16]
 801536e:	2b00      	cmp	r3, #0
 8015370:	d052      	beq.n	8015418 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8015372:	9903      	ldr	r1, [sp, #12]
 8015374:	4620      	mov	r0, r4
 8015376:	f7ff fcb8 	bl	8014cea <_ZNK8touchgfx4Rect9intersectERKS0_>
 801537a:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801537e:	b1c0      	cbz	r0, 80153b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015380:	f9b4 e000 	ldrsh.w	lr, [r4]
 8015384:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8015388:	4576      	cmp	r6, lr
 801538a:	dc22      	bgt.n	80153d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801538c:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8015390:	44f4      	add	ip, lr
 8015392:	fa0f fc8c 	sxth.w	ip, ip
 8015396:	45e0      	cmp	r8, ip
 8015398:	db1b      	blt.n	80153d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801539a:	428f      	cmp	r7, r1
 801539c:	fa1f fc81 	uxth.w	ip, r1
 80153a0:	88e1      	ldrh	r1, [r4, #6]
 80153a2:	dc0d      	bgt.n	80153c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 80153a4:	ebaa 0c0c 	sub.w	ip, sl, ip
 80153a8:	eba1 010c 	sub.w	r1, r1, ip
 80153ac:	f8a4 9002 	strh.w	r9, [r4, #2]
 80153b0:	80e1      	strh	r1, [r4, #6]
 80153b2:	4628      	mov	r0, r5
 80153b4:	9904      	ldr	r1, [sp, #16]
 80153b6:	3901      	subs	r1, #1
 80153b8:	9104      	str	r1, [sp, #16]
 80153ba:	3c08      	subs	r4, #8
 80153bc:	4605      	mov	r5, r0
 80153be:	e7d3      	b.n	8015368 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 80153c0:	4461      	add	r1, ip
 80153c2:	b209      	sxth	r1, r1
 80153c4:	4549      	cmp	r1, r9
 80153c6:	dcf5      	bgt.n	80153b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153c8:	eba2 0c0c 	sub.w	ip, r2, ip
 80153cc:	f8a4 c006 	strh.w	ip, [r4, #6]
 80153d0:	e7ef      	b.n	80153b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153d2:	428f      	cmp	r7, r1
 80153d4:	dcee      	bgt.n	80153b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153d6:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 80153da:	4461      	add	r1, ip
 80153dc:	b209      	sxth	r1, r1
 80153de:	4589      	cmp	r9, r1
 80153e0:	dbe8      	blt.n	80153b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80153e2:	4576      	cmp	r6, lr
 80153e4:	fa1f fc8e 	uxth.w	ip, lr
 80153e8:	88a1      	ldrh	r1, [r4, #4]
 80153ea:	dc07      	bgt.n	80153fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80153ec:	eba3 0c0c 	sub.w	ip, r3, ip
 80153f0:	eba1 010c 	sub.w	r1, r1, ip
 80153f4:	f8a4 8000 	strh.w	r8, [r4]
 80153f8:	80a1      	strh	r1, [r4, #4]
 80153fa:	e7da      	b.n	80153b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80153fc:	4461      	add	r1, ip
 80153fe:	b209      	sxth	r1, r1
 8015400:	4588      	cmp	r8, r1
 8015402:	dbd7      	blt.n	80153b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8015404:	9905      	ldr	r1, [sp, #20]
 8015406:	eba1 0c0c 	sub.w	ip, r1, ip
 801540a:	f8a4 c004 	strh.w	ip, [r4, #4]
 801540e:	e7d0      	b.n	80153b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8015410:	2000ef12 	.word	0x2000ef12
 8015414:	2000ef10 	.word	0x2000ef10
 8015418:	2d00      	cmp	r5, #0
 801541a:	f000 816d 	beq.w	80156f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801541e:	9b06      	ldr	r3, [sp, #24]
 8015420:	445b      	add	r3, fp
 8015422:	461c      	mov	r4, r3
 8015424:	9b02      	ldr	r3, [sp, #8]
 8015426:	3301      	adds	r3, #1
 8015428:	f000 8166 	beq.w	80156f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 801542c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8015430:	4629      	mov	r1, r5
 8015432:	9803      	ldr	r0, [sp, #12]
 8015434:	f7ff fccc 	bl	8014dd0 <_ZNK8touchgfx4Rect8includesERKS0_>
 8015438:	b120      	cbz	r0, 8015444 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 801543a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801543e:	9801      	ldr	r0, [sp, #4]
 8015440:	f7ff feb0 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015444:	9903      	ldr	r1, [sp, #12]
 8015446:	4628      	mov	r0, r5
 8015448:	f7ff fc4f 	bl	8014cea <_ZNK8touchgfx4Rect9intersectERKS0_>
 801544c:	2800      	cmp	r0, #0
 801544e:	f000 809c 	beq.w	801558a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8015452:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8015456:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801545a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801545e:	9309      	str	r3, [sp, #36]	; 0x24
 8015460:	fa1f f189 	uxth.w	r1, r9
 8015464:	eb01 0c03 	add.w	ip, r1, r3
 8015468:	fa1f fa8c 	uxth.w	sl, ip
 801546c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8015470:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8015474:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8015478:	b283      	uxth	r3, r0
 801547a:	eb03 050c 	add.w	r5, r3, ip
 801547e:	b2ad      	uxth	r5, r5
 8015480:	9505      	str	r5, [sp, #20]
 8015482:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8015486:	9504      	str	r5, [sp, #16]
 8015488:	4548      	cmp	r0, r9
 801548a:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 801548e:	f340 8099 	ble.w	80155c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8015492:	1a5b      	subs	r3, r3, r1
 8015494:	b29b      	uxth	r3, r3
 8015496:	4596      	cmp	lr, r2
 8015498:	fa0f f08a 	sxth.w	r0, sl
 801549c:	b21e      	sxth	r6, r3
 801549e:	dd2e      	ble.n	80154fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 80154a0:	9f02      	ldr	r7, [sp, #8]
 80154a2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80154a6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 80154aa:	9f04      	ldr	r7, [sp, #16]
 80154ac:	1a3f      	subs	r7, r7, r0
 80154ae:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 80154b2:	fa1f fe8e 	uxth.w	lr, lr
 80154b6:	b292      	uxth	r2, r2
 80154b8:	ebae 0102 	sub.w	r1, lr, r2
 80154bc:	44a6      	add	lr, r4
 80154be:	4402      	add	r2, r0
 80154c0:	b289      	uxth	r1, r1
 80154c2:	fa0f fe8e 	sxth.w	lr, lr
 80154c6:	b212      	sxth	r2, r2
 80154c8:	b20d      	sxth	r5, r1
 80154ca:	ebae 0202 	sub.w	r2, lr, r2
 80154ce:	436f      	muls	r7, r5
 80154d0:	4372      	muls	r2, r6
 80154d2:	4297      	cmp	r7, r2
 80154d4:	db09      	blt.n	80154ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80154d6:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 80154da:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 80154de:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80154e2:	449c      	add	ip, r3
 80154e4:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80154e8:	e686      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154ea:	4421      	add	r1, r4
 80154ec:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 80154f0:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 80154f4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80154f8:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80154fc:	e67c      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80154fe:	9f04      	ldr	r7, [sp, #16]
 8015500:	42b8      	cmp	r0, r7
 8015502:	da27      	bge.n	8015554 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8015504:	9902      	ldr	r1, [sp, #8]
 8015506:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 801550a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 801550e:	eb05 010e 	add.w	r1, r5, lr
 8015512:	fa1f f881 	uxth.w	r8, r1
 8015516:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 801551a:	4411      	add	r1, r2
 801551c:	eba1 0108 	sub.w	r1, r1, r8
 8015520:	b289      	uxth	r1, r1
 8015522:	fa0f f988 	sxth.w	r9, r8
 8015526:	eba2 020e 	sub.w	r2, r2, lr
 801552a:	fa0f f881 	sxth.w	r8, r1
 801552e:	1a3f      	subs	r7, r7, r0
 8015530:	4372      	muls	r2, r6
 8015532:	fb08 f707 	mul.w	r7, r8, r7
 8015536:	42ba      	cmp	r2, r7
 8015538:	dc06      	bgt.n	8015548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 801553a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 801553e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8015542:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8015546:	e7ca      	b.n	80154de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8015548:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 801554c:	4429      	add	r1, r5
 801554e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8015552:	e651      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015554:	9805      	ldr	r0, [sp, #20]
 8015556:	ebaa 0000 	sub.w	r0, sl, r0
 801555a:	b280      	uxth	r0, r0
 801555c:	2d06      	cmp	r5, #6
 801555e:	fa0f fe80 	sxth.w	lr, r0
 8015562:	d817      	bhi.n	8015594 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8015564:	9b04      	ldr	r3, [sp, #16]
 8015566:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801556a:	1c6b      	adds	r3, r5, #1
 801556c:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8015570:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8015574:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8015578:	9b01      	ldr	r3, [sp, #4]
 801557a:	9801      	ldr	r0, [sp, #4]
 801557c:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8015580:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8015584:	805a      	strh	r2, [r3, #2]
 8015586:	809e      	strh	r6, [r3, #4]
 8015588:	80d9      	strh	r1, [r3, #6]
 801558a:	9b02      	ldr	r3, [sp, #8]
 801558c:	3b01      	subs	r3, #1
 801558e:	9302      	str	r3, [sp, #8]
 8015590:	3c08      	subs	r4, #8
 8015592:	e747      	b.n	8015424 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8015594:	9a02      	ldr	r2, [sp, #8]
 8015596:	45b6      	cmp	lr, r6
 8015598:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801559c:	db0d      	blt.n	80155ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 801559e:	449c      	add	ip, r3
 80155a0:	fa1f fc8c 	uxth.w	ip, ip
 80155a4:	445a      	add	r2, fp
 80155a6:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80155aa:	448c      	add	ip, r1
 80155ac:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80155b0:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 80155b4:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 80155b8:	e61e      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80155ba:	445a      	add	r2, fp
 80155bc:	4484      	add	ip, r0
 80155be:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 80155c2:	e78f      	b.n	80154e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80155c4:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 80155c8:	fa1f f18e 	uxth.w	r1, lr
 80155cc:	eb01 0806 	add.w	r8, r1, r6
 80155d0:	b293      	uxth	r3, r2
 80155d2:	fa1f f888 	uxth.w	r8, r8
 80155d6:	9306      	str	r3, [sp, #24]
 80155d8:	fa0f f388 	sxth.w	r3, r8
 80155dc:	9307      	str	r3, [sp, #28]
 80155de:	9f06      	ldr	r7, [sp, #24]
 80155e0:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 80155e4:	443b      	add	r3, r7
 80155e6:	b29b      	uxth	r3, r3
 80155e8:	4596      	cmp	lr, r2
 80155ea:	9308      	str	r3, [sp, #32]
 80155ec:	da24      	bge.n	8015638 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80155ee:	9905      	ldr	r1, [sp, #20]
 80155f0:	eba3 0308 	sub.w	r3, r3, r8
 80155f4:	ebaa 0401 	sub.w	r4, sl, r1
 80155f8:	b2a4      	uxth	r4, r4
 80155fa:	b29b      	uxth	r3, r3
 80155fc:	b225      	sxth	r5, r4
 80155fe:	b219      	sxth	r1, r3
 8015600:	eba2 020e 	sub.w	r2, r2, lr
 8015604:	eba9 0000 	sub.w	r0, r9, r0
 8015608:	436a      	muls	r2, r5
 801560a:	4348      	muls	r0, r1
 801560c:	4282      	cmp	r2, r0
 801560e:	9a02      	ldr	r2, [sp, #8]
 8015610:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8015614:	445a      	add	r2, fp
 8015616:	dc06      	bgt.n	8015626 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8015618:	9b07      	ldr	r3, [sp, #28]
 801561a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801561e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8015622:	44a4      	add	ip, r4
 8015624:	e75e      	b.n	80154e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8015626:	9904      	ldr	r1, [sp, #16]
 8015628:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801562c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8015630:	4433      	add	r3, r6
 8015632:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8015636:	e5df      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8015638:	9f06      	ldr	r7, [sp, #24]
 801563a:	9b04      	ldr	r3, [sp, #16]
 801563c:	1bc9      	subs	r1, r1, r7
 801563e:	fa0f f78a 	sxth.w	r7, sl
 8015642:	b289      	uxth	r1, r1
 8015644:	429f      	cmp	r7, r3
 8015646:	fa0f fe81 	sxth.w	lr, r1
 801564a:	dd23      	ble.n	8015694 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 801564c:	9a05      	ldr	r2, [sp, #20]
 801564e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015652:	9d07      	ldr	r5, [sp, #28]
 8015654:	ebaa 0202 	sub.w	r2, sl, r2
 8015658:	b292      	uxth	r2, r2
 801565a:	eba5 0a03 	sub.w	sl, r5, r3
 801565e:	b214      	sxth	r4, r2
 8015660:	eba9 0000 	sub.w	r0, r9, r0
 8015664:	9b02      	ldr	r3, [sp, #8]
 8015666:	fb0e f000 	mul.w	r0, lr, r0
 801566a:	fb04 fa0a 	mul.w	sl, r4, sl
 801566e:	00db      	lsls	r3, r3, #3
 8015670:	4550      	cmp	r0, sl
 8015672:	445b      	add	r3, fp
 8015674:	db03      	blt.n	801567e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8015676:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 801567a:	4494      	add	ip, r2
 801567c:	e732      	b.n	80154e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 801567e:	9a04      	ldr	r2, [sp, #16]
 8015680:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8015684:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8015688:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 801568c:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8015690:	4431      	add	r1, r6
 8015692:	e75c      	b.n	801554e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8015694:	9b08      	ldr	r3, [sp, #32]
 8015696:	eba3 0308 	sub.w	r3, r3, r8
 801569a:	b29b      	uxth	r3, r3
 801569c:	2d06      	cmp	r5, #6
 801569e:	b218      	sxth	r0, r3
 80156a0:	d813      	bhi.n	80156ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 80156a2:	9b07      	ldr	r3, [sp, #28]
 80156a4:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 80156a8:	1c6b      	adds	r3, r5, #1
 80156aa:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 80156ae:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 80156b2:	9b01      	ldr	r3, [sp, #4]
 80156b4:	9901      	ldr	r1, [sp, #4]
 80156b6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 80156ba:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 80156be:	805a      	strh	r2, [r3, #2]
 80156c0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80156c2:	809a      	strh	r2, [r3, #4]
 80156c4:	f8a3 e006 	strh.w	lr, [r3, #6]
 80156c8:	e75f      	b.n	801558a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 80156ca:	9c02      	ldr	r4, [sp, #8]
 80156cc:	4570      	cmp	r0, lr
 80156ce:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 80156d2:	db0d      	blt.n	80156f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 80156d4:	4431      	add	r1, r6
 80156d6:	9b06      	ldr	r3, [sp, #24]
 80156d8:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80156dc:	b289      	uxth	r1, r1
 80156de:	445c      	add	r4, fp
 80156e0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80156e4:	4419      	add	r1, r3
 80156e6:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 80156ea:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 80156ee:	e583      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80156f0:	445c      	add	r4, fp
 80156f2:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 80156f6:	e79b      	b.n	8015630 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80156f8:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 80156fc:	1e65      	subs	r5, r4, #1
 80156fe:	b2ad      	uxth	r5, r5
 8015700:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8015704:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8015708:	42b5      	cmp	r5, r6
 801570a:	d044      	beq.n	8015796 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 801570c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8015710:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	; 0xa6
 8015714:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8015718:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	; 0xa4
 801571c:	4282      	cmp	r2, r0
 801571e:	d11f      	bne.n	8015760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015720:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 8015724:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8015728:	459c      	cmp	ip, r3
 801572a:	d119      	bne.n	8015760 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801572c:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	; 0xa8
 8015730:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8015734:	19d8      	adds	r0, r3, r7
 8015736:	b200      	sxth	r0, r0
 8015738:	4288      	cmp	r0, r1
 801573a:	d109      	bne.n	8015750 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 801573c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8015740:	4413      	add	r3, r2
 8015742:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8015746:	4629      	mov	r1, r5
 8015748:	9801      	ldr	r0, [sp, #4]
 801574a:	f7ff fd2b 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801574e:	e003      	b.n	8015758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015750:	4411      	add	r1, r2
 8015752:	b209      	sxth	r1, r1
 8015754:	42b9      	cmp	r1, r7
 8015756:	d0f3      	beq.n	8015740 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8015758:	3d01      	subs	r5, #1
 801575a:	b2ad      	uxth	r5, r5
 801575c:	3c08      	subs	r4, #8
 801575e:	e7d3      	b.n	8015708 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015760:	42b9      	cmp	r1, r7
 8015762:	d1f9      	bne.n	8015758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015764:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	; 0x2c
 8015768:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801576c:	4299      	cmp	r1, r3
 801576e:	d1f3      	bne.n	8015758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015770:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8015774:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8015778:	181f      	adds	r7, r3, r0
 801577a:	b23f      	sxth	r7, r7
 801577c:	42ba      	cmp	r2, r7
 801577e:	d105      	bne.n	801578c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015780:	f8ad 002a 	strh.w	r0, [sp, #42]	; 0x2a
 8015784:	440b      	add	r3, r1
 8015786:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801578a:	e7dc      	b.n	8015746 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 801578c:	440a      	add	r2, r1
 801578e:	b212      	sxth	r2, r2
 8015790:	4290      	cmp	r0, r2
 8015792:	d1e1      	bne.n	8015758 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015794:	e7f6      	b.n	8015784 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8015796:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801579a:	2e07      	cmp	r6, #7
 801579c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80157a0:	d812      	bhi.n	80157c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 80157a2:	1c75      	adds	r5, r6, #1
 80157a4:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 80157a8:	9d01      	ldr	r5, [sp, #4]
 80157aa:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80157ae:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80157b2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80157b6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80157ba:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80157be:	442c      	add	r4, r5
 80157c0:	8061      	strh	r1, [r4, #2]
 80157c2:	80a2      	strh	r2, [r4, #4]
 80157c4:	80e3      	strh	r3, [r4, #6]
 80157c6:	e581      	b.n	80152cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80157c8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 80157cc:	3e01      	subs	r6, #1
 80157ce:	445c      	add	r4, fp
 80157d0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80157d4:	f04f 37ff 	mov.w	r7, #4294967295
 80157d8:	2500      	movs	r5, #0
 80157da:	9305      	str	r3, [sp, #20]
 80157dc:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80157e0:	9302      	str	r3, [sp, #8]
 80157e2:	1e72      	subs	r2, r6, #1
 80157e4:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80157e8:	9304      	str	r3, [sp, #16]
 80157ea:	4691      	mov	r9, r2
 80157ec:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80157f0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80157f4:	bf14      	ite	ne
 80157f6:	9905      	ldrne	r1, [sp, #20]
 80157f8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80157fc:	6818      	ldr	r0, [r3, #0]
 80157fe:	9207      	str	r2, [sp, #28]
 8015800:	bf18      	it	ne
 8015802:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8015806:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801580a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801580e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015812:	9306      	str	r3, [sp, #24]
 8015814:	fb18 f801 	smulbb	r8, r8, r1
 8015818:	6859      	ldr	r1, [r3, #4]
 801581a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801581e:	4671      	mov	r1, lr
 8015820:	a80c      	add	r0, sp, #48	; 0x30
 8015822:	f7ff fafb 	bl	8014e1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015826:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801582a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801582e:	9b04      	ldr	r3, [sp, #16]
 8015830:	9a02      	ldr	r2, [sp, #8]
 8015832:	fb10 f001 	smulbb	r0, r0, r1
 8015836:	fb02 8803 	mla	r8, r2, r3, r8
 801583a:	eba0 0108 	sub.w	r1, r0, r8
 801583e:	f04f 0c08 	mov.w	ip, #8
 8015842:	fb90 f0fc 	sdiv	r0, r0, ip
 8015846:	4288      	cmp	r0, r1
 8015848:	dc20      	bgt.n	801588c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 801584a:	4551      	cmp	r1, sl
 801584c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015850:	da03      	bge.n	801585a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8015852:	b1d9      	cbz	r1, 801588c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8015854:	468a      	mov	sl, r1
 8015856:	464f      	mov	r7, r9
 8015858:	4635      	mov	r5, r6
 801585a:	f109 39ff 	add.w	r9, r9, #4294967295
 801585e:	f119 0f02 	cmn.w	r9, #2
 8015862:	d1c5      	bne.n	80157f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015864:	4616      	mov	r6, r2
 8015866:	3201      	adds	r2, #1
 8015868:	f1a4 0408 	sub.w	r4, r4, #8
 801586c:	d1b6      	bne.n	80157dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 801586e:	9b01      	ldr	r3, [sp, #4]
 8015870:	b2ac      	uxth	r4, r5
 8015872:	00ed      	lsls	r5, r5, #3
 8015874:	1958      	adds	r0, r3, r5
 8015876:	1c7b      	adds	r3, r7, #1
 8015878:	d10b      	bne.n	8015892 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 801587a:	4601      	mov	r1, r0
 801587c:	9803      	ldr	r0, [sp, #12]
 801587e:	f7ff facd 	bl	8014e1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015882:	4621      	mov	r1, r4
 8015884:	9801      	ldr	r0, [sp, #4]
 8015886:	f7ff fc8d 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801588a:	e4b5      	b.n	80151f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801588c:	464f      	mov	r7, r9
 801588e:	4635      	mov	r5, r6
 8015890:	e7ed      	b.n	801586e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8015892:	9b01      	ldr	r3, [sp, #4]
 8015894:	00ff      	lsls	r7, r7, #3
 8015896:	19d9      	adds	r1, r3, r7
 8015898:	f7ff fac0 	bl	8014e1c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801589c:	9b03      	ldr	r3, [sp, #12]
 801589e:	cb03      	ldmia	r3!, {r0, r1}
 80158a0:	445f      	add	r7, fp
 80158a2:	445d      	add	r5, fp
 80158a4:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 80158a8:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 80158ac:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80158b0:	9b03      	ldr	r3, [sp, #12]
 80158b2:	6869      	ldr	r1, [r5, #4]
 80158b4:	c303      	stmia	r3!, {r0, r1}
 80158b6:	e7e4      	b.n	8015882 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

080158b8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80158b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158bc:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80158c0:	b09b      	sub	sp, #108	; 0x6c
 80158c2:	4604      	mov	r4, r0
 80158c4:	4630      	mov	r0, r6
 80158c6:	f7fa f91c 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158ca:	4605      	mov	r5, r0
 80158cc:	b948      	cbnz	r0, 80158e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80158ce:	6823      	ldr	r3, [r4, #0]
 80158d0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80158d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80158d6:	4620      	mov	r0, r4
 80158d8:	4798      	blx	r3
 80158da:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80158de:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80158e2:	4bc6      	ldr	r3, [pc, #792]	; (8015bfc <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80158e4:	681b      	ldr	r3, [r3, #0]
 80158e6:	2b00      	cmp	r3, #0
 80158e8:	d03f      	beq.n	801596a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158ea:	4dc5      	ldr	r5, [pc, #788]	; (8015c00 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 80158ec:	4628      	mov	r0, r5
 80158ee:	f7fa f908 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 80158f2:	4606      	mov	r6, r0
 80158f4:	2800      	cmp	r0, #0
 80158f6:	d138      	bne.n	801596a <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80158f8:	4628      	mov	r0, r5
 80158fa:	f7ff f907 	bl	8014b0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80158fe:	6823      	ldr	r3, [r4, #0]
 8015900:	6829      	ldr	r1, [r5, #0]
 8015902:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8015904:	686a      	ldr	r2, [r5, #4]
 8015906:	4620      	mov	r0, r4
 8015908:	4798      	blx	r3
 801590a:	802e      	strh	r6, [r5, #0]
 801590c:	806e      	strh	r6, [r5, #2]
 801590e:	80ae      	strh	r6, [r5, #4]
 8015910:	80ee      	strh	r6, [r5, #6]
 8015912:	f10d 0824 	add.w	r8, sp, #36	; 0x24
 8015916:	4dbb      	ldr	r5, [pc, #748]	; (8015c04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015918:	4640      	mov	r0, r8
 801591a:	f7ff fbeb 	bl	80150f4 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801591e:	882e      	ldrh	r6, [r5, #0]
 8015920:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8015924:	4633      	mov	r3, r6
 8015926:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801592a:	42bb      	cmp	r3, r7
 801592c:	d224      	bcs.n	8015978 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801592e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8015932:	2907      	cmp	r1, #7
 8015934:	d816      	bhi.n	8015964 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8015936:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801593a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 801593e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015942:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8015946:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801594a:	1c4a      	adds	r2, r1, #1
 801594c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8015950:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015954:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8015958:	f8a2 a002 	strh.w	sl, [r2, #2]
 801595c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015960:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015964:	3301      	adds	r3, #1
 8015966:	b29b      	uxth	r3, r3
 8015968:	e7df      	b.n	801592a <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 801596a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801596e:	2b00      	cmp	r3, #0
 8015970:	d1cf      	bne.n	8015912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015972:	b01b      	add	sp, #108	; 0x6c
 8015974:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015978:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 801597c:	42b3      	cmp	r3, r6
 801597e:	d90c      	bls.n	801599a <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015980:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015984:	6822      	ldr	r2, [r4, #0]
 8015986:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 801598a:	6c17      	ldr	r7, [r2, #64]	; 0x40
 801598c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8015990:	4620      	mov	r0, r4
 8015992:	3601      	adds	r6, #1
 8015994:	47b8      	blx	r7
 8015996:	b2b6      	uxth	r6, r6
 8015998:	e7ee      	b.n	8015978 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801599a:	4a9b      	ldr	r2, [pc, #620]	; (8015c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801599c:	6813      	ldr	r3, [r2, #0]
 801599e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80159a2:	2b01      	cmp	r3, #1
 80159a4:	4691      	mov	r9, r2
 80159a6:	f040 80e2 	bne.w	8015b6e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 80159aa:	8829      	ldrh	r1, [r5, #0]
 80159ac:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80159b0:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80159b4:	33ae      	adds	r3, #174	; 0xae
 80159b6:	2600      	movs	r6, #0
 80159b8:	428f      	cmp	r7, r1
 80159ba:	f103 0308 	add.w	r3, r3, #8
 80159be:	dd0a      	ble.n	80159d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80159c0:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80159c4:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80159c8:	4402      	add	r2, r0
 80159ca:	b212      	sxth	r2, r2
 80159cc:	4296      	cmp	r6, r2
 80159ce:	bfb8      	it	lt
 80159d0:	4616      	movlt	r6, r2
 80159d2:	3101      	adds	r1, #1
 80159d4:	e7f0      	b.n	80159b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80159d6:	4b8d      	ldr	r3, [pc, #564]	; (8015c0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80159d8:	f8df 922c 	ldr.w	r9, [pc, #556]	; 8015c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 80159dc:	881b      	ldrh	r3, [r3, #0]
 80159de:	2b0f      	cmp	r3, #15
 80159e0:	bf88      	it	hi
 80159e2:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80159e6:	f04f 0300 	mov.w	r3, #0
 80159ea:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80159ee:	bf98      	it	ls
 80159f0:	f04f 0b01 	movls.w	fp, #1
 80159f4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80159f8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80159fc:	4b82      	ldr	r3, [pc, #520]	; (8015c08 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80159fe:	4438      	add	r0, r7
 8015a00:	b207      	sxth	r7, r0
 8015a02:	6818      	ldr	r0, [r3, #0]
 8015a04:	42b7      	cmp	r7, r6
 8015a06:	6803      	ldr	r3, [r0, #0]
 8015a08:	f280 8083 	bge.w	8015b12 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015a0c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8015a10:	4798      	blx	r3
 8015a12:	eb07 030b 	add.w	r3, r7, fp
 8015a16:	4298      	cmp	r0, r3
 8015a18:	da07      	bge.n	8015a2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a1a:	42b0      	cmp	r0, r6
 8015a1c:	da05      	bge.n	8015a2a <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8015a1e:	4287      	cmp	r7, r0
 8015a20:	dd6c      	ble.n	8015afc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a22:	2f00      	cmp	r7, #0
 8015a24:	dd6a      	ble.n	8015afc <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8015a26:	4630      	mov	r0, r6
 8015a28:	e004      	b.n	8015a34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8015a2a:	4287      	cmp	r7, r0
 8015a2c:	dcfb      	bgt.n	8015a26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8015a2e:	42b0      	cmp	r0, r6
 8015a30:	bfa8      	it	ge
 8015a32:	4630      	movge	r0, r6
 8015a34:	4b76      	ldr	r3, [pc, #472]	; (8015c10 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015a36:	f8ad 7016 	strh.w	r7, [sp, #22]
 8015a3a:	1bc0      	subs	r0, r0, r7
 8015a3c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015a40:	882f      	ldrh	r7, [r5, #0]
 8015a42:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015a46:	2200      	movs	r2, #0
 8015a48:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015a4c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015a50:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015a54:	42bb      	cmp	r3, r7
 8015a56:	d9cd      	bls.n	80159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015a58:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8015a5c:	ab07      	add	r3, sp, #28
 8015a5e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015a62:	6851      	ldr	r1, [r2, #4]
 8015a64:	c303      	stmia	r3!, {r0, r1}
 8015a66:	a905      	add	r1, sp, #20
 8015a68:	a807      	add	r0, sp, #28
 8015a6a:	f7ff f93e 	bl	8014cea <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015a6e:	2800      	cmp	r0, #0
 8015a70:	d04c      	beq.n	8015b0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8015a72:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015a76:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8015a7a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8015a7e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015a82:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015a86:	9302      	str	r3, [sp, #8]
 8015a88:	4686      	mov	lr, r0
 8015a8a:	4290      	cmp	r0, r2
 8015a8c:	4450      	add	r0, sl
 8015a8e:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8015a92:	bfb8      	it	lt
 8015a94:	4696      	movlt	lr, r2
 8015a96:	4452      	add	r2, sl
 8015a98:	4299      	cmp	r1, r3
 8015a9a:	b280      	uxth	r0, r0
 8015a9c:	b292      	uxth	r2, r2
 8015a9e:	468c      	mov	ip, r1
 8015aa0:	fa0f fa82 	sxth.w	sl, r2
 8015aa4:	bfb8      	it	lt
 8015aa6:	469c      	movlt	ip, r3
 8015aa8:	b203      	sxth	r3, r0
 8015aaa:	4553      	cmp	r3, sl
 8015aac:	bfb8      	it	lt
 8015aae:	4602      	movlt	r2, r0
 8015ab0:	eba2 020e 	sub.w	r2, r2, lr
 8015ab4:	f8ad 2020 	strh.w	r2, [sp, #32]
 8015ab8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8015abc:	9b02      	ldr	r3, [sp, #8]
 8015abe:	f8ad e01c 	strh.w	lr, [sp, #28]
 8015ac2:	4411      	add	r1, r2
 8015ac4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8015ac8:	f8ad c01e 	strh.w	ip, [sp, #30]
 8015acc:	4413      	add	r3, r2
 8015ace:	b289      	uxth	r1, r1
 8015ad0:	b29b      	uxth	r3, r3
 8015ad2:	b208      	sxth	r0, r1
 8015ad4:	b21a      	sxth	r2, r3
 8015ad6:	4290      	cmp	r0, r2
 8015ad8:	bfb8      	it	lt
 8015ada:	460b      	movlt	r3, r1
 8015adc:	eba3 030c 	sub.w	r3, r3, ip
 8015ae0:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8015ae4:	a807      	add	r0, sp, #28
 8015ae6:	f7fa f80c 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015aea:	b920      	cbnz	r0, 8015af6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8015aec:	6823      	ldr	r3, [r4, #0]
 8015aee:	a907      	add	r1, sp, #28
 8015af0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015af2:	4620      	mov	r0, r4
 8015af4:	4798      	blx	r3
 8015af6:	3701      	adds	r7, #1
 8015af8:	b2bf      	uxth	r7, r7
 8015afa:	e7a9      	b.n	8015a50 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8015afc:	f8d9 0000 	ldr.w	r0, [r9]
 8015b00:	6803      	ldr	r3, [r0, #0]
 8015b02:	2101      	movs	r1, #1
 8015b04:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8015b08:	4798      	blx	r3
 8015b0a:	e773      	b.n	80159f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8015b0c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015b10:	e7e8      	b.n	8015ae4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8015b12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8015b14:	4798      	blx	r3
 8015b16:	4b3f      	ldr	r3, [pc, #252]	; (8015c14 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015b18:	781b      	ldrb	r3, [r3, #0]
 8015b1a:	2b00      	cmp	r3, #0
 8015b1c:	f43f af29 	beq.w	8015972 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b20:	2300      	movs	r3, #0
 8015b22:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 8015b26:	882b      	ldrh	r3, [r5, #0]
 8015b28:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8015b2c:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8015b30:	42ab      	cmp	r3, r5
 8015b32:	f4bf af1e 	bcs.w	8015972 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015b36:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8015b3a:	2907      	cmp	r1, #7
 8015b3c:	d814      	bhi.n	8015b68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8015b3e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015b42:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015b46:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8015b4a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8015b4e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015b52:	1c4a      	adds	r2, r1, #1
 8015b54:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 8015b58:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8015b5c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015b60:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015b64:	8097      	strh	r7, [r2, #4]
 8015b66:	80d6      	strh	r6, [r2, #6]
 8015b68:	3301      	adds	r3, #1
 8015b6a:	b29b      	uxth	r3, r3
 8015b6c:	e7e0      	b.n	8015b30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8015b6e:	2b02      	cmp	r3, #2
 8015b70:	f040 8133 	bne.w	8015dda <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8015b74:	4b28      	ldr	r3, [pc, #160]	; (8015c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8015b76:	781b      	ldrb	r3, [r3, #0]
 8015b78:	2b01      	cmp	r3, #1
 8015b7a:	f104 0aac 	add.w	sl, r4, #172	; 0xac
 8015b7e:	f000 8098 	beq.w	8015cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015b82:	882a      	ldrh	r2, [r5, #0]
 8015b84:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	; 0xec
 8015b88:	3201      	adds	r2, #1
 8015b8a:	b292      	uxth	r2, r2
 8015b8c:	2900      	cmp	r1, #0
 8015b8e:	d0c2      	beq.n	8015b16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015b90:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	; 0xae
 8015b94:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8015b98:	441e      	add	r6, r3
 8015b9a:	b236      	sxth	r6, r6
 8015b9c:	4694      	mov	ip, r2
 8015b9e:	f04f 0900 	mov.w	r9, #0
 8015ba2:	fa1f f38c 	uxth.w	r3, ip
 8015ba6:	4299      	cmp	r1, r3
 8015ba8:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8015bac:	f240 80bf 	bls.w	8015d2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8015bb0:	4427      	add	r7, r4
 8015bb2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8015bb6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8015bba:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	; 0xae
 8015bbe:	4283      	cmp	r3, r0
 8015bc0:	f340 80a1 	ble.w	8015d06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8015bc4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	; 0xb2
 8015bc8:	4406      	add	r6, r0
 8015bca:	b236      	sxth	r6, r6
 8015bcc:	429e      	cmp	r6, r3
 8015bce:	bfa8      	it	ge
 8015bd0:	461e      	movge	r6, r3
 8015bd2:	46e1      	mov	r9, ip
 8015bd4:	f10c 0c01 	add.w	ip, ip, #1
 8015bd8:	e7e3      	b.n	8015ba2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8015bda:	d10a      	bne.n	8015bf2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8015bdc:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	; 0xb2
 8015be0:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	; 0xb2
 8015be4:	4562      	cmp	r2, ip
 8015be6:	bfb8      	it	lt
 8015be8:	4662      	movlt	r2, ip
 8015bea:	4288      	cmp	r0, r1
 8015bec:	bfb8      	it	lt
 8015bee:	461f      	movlt	r7, r3
 8015bf0:	e087      	b.n	8015d02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015bf2:	428a      	cmp	r2, r1
 8015bf4:	bfb8      	it	lt
 8015bf6:	460a      	movlt	r2, r1
 8015bf8:	e083      	b.n	8015d02 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8015bfa:	bf00      	nop
 8015bfc:	2000ef5c 	.word	0x2000ef5c
 8015c00:	2000ef68 	.word	0x2000ef68
 8015c04:	20000060 	.word	0x20000060
 8015c08:	2000ef1c 	.word	0x2000ef1c
 8015c0c:	2000ef12 	.word	0x2000ef12
 8015c10:	2000ef10 	.word	0x2000ef10
 8015c14:	2000ef1a 	.word	0x2000ef1a
 8015c18:	2000ef14 	.word	0x2000ef14
 8015c1c:	19a1      	adds	r1, r4, r6
 8015c1e:	ab07      	add	r3, sp, #28
 8015c20:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015c24:	6849      	ldr	r1, [r1, #4]
 8015c26:	c303      	stmia	r3!, {r0, r1}
 8015c28:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8015c2c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c30:	2b13      	cmp	r3, #19
 8015c32:	bfd8      	it	le
 8015c34:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8015c38:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015c3c:	440b      	add	r3, r1
 8015c3e:	1a9b      	subs	r3, r3, r2
 8015c40:	a807      	add	r0, sp, #28
 8015c42:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015c46:	f7fe ff7b 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8015c4a:	a807      	add	r0, sp, #28
 8015c4c:	f7f9 ff59 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015c50:	bb78      	cbnz	r0, 8015cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015c52:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8015c56:	f8d9 0000 	ldr.w	r0, [r9]
 8015c5a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015c5e:	f8d0 e000 	ldr.w	lr, [r0]
 8015c62:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015c66:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015c6a:	f1bc 0f14 	cmp.w	ip, #20
 8015c6e:	bfa8      	it	ge
 8015c70:	f04f 0c14 	movge.w	ip, #20
 8015c74:	fa1f fc8c 	uxth.w	ip, ip
 8015c78:	f8cd c000 	str.w	ip, [sp]
 8015c7c:	f8de b090 	ldr.w	fp, [lr, #144]	; 0x90
 8015c80:	47d8      	blx	fp
 8015c82:	4683      	mov	fp, r0
 8015c84:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015c88:	a807      	add	r0, sp, #28
 8015c8a:	f7fe ff3f 	bl	8014b0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015c8e:	6823      	ldr	r3, [r4, #0]
 8015c90:	4426      	add	r6, r4
 8015c92:	4620      	mov	r0, r4
 8015c94:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015c96:	a907      	add	r1, sp, #28
 8015c98:	4798      	blx	r3
 8015c9a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015c9e:	eba0 000b 	sub.w	r0, r0, fp
 8015ca2:	b200      	sxth	r0, r0
 8015ca4:	f8a6 00b0 	strh.w	r0, [r6, #176]	; 0xb0
 8015ca8:	b918      	cbnz	r0, 8015cb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8015caa:	b2b9      	uxth	r1, r7
 8015cac:	4650      	mov	r0, sl
 8015cae:	f7ff fa79 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015cb2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8015cb6:	f1bb 0f00 	cmp.w	fp, #0
 8015cba:	f43f af2c 	beq.w	8015b16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015cbe:	882b      	ldrh	r3, [r5, #0]
 8015cc0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8015cc4:	3301      	adds	r3, #1
 8015cc6:	b29b      	uxth	r3, r3
 8015cc8:	2700      	movs	r7, #0
 8015cca:	b299      	uxth	r1, r3
 8015ccc:	458b      	cmp	fp, r1
 8015cce:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8015cd2:	d9a3      	bls.n	8015c1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8015cd4:	4426      	add	r6, r4
 8015cd6:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8015cda:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	; 0xac
 8015cde:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	; 0xb0
 8015ce2:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	; 0xac
 8015ce6:	4408      	add	r0, r1
 8015ce8:	f8be 10b0 	ldrh.w	r1, [lr, #176]	; 0xb0
 8015cec:	4461      	add	r1, ip
 8015cee:	b200      	sxth	r0, r0
 8015cf0:	b209      	sxth	r1, r1
 8015cf2:	4288      	cmp	r0, r1
 8015cf4:	f6bf af71 	bge.w	8015bda <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8015cf8:	4584      	cmp	ip, r0
 8015cfa:	4662      	mov	r2, ip
 8015cfc:	461f      	mov	r7, r3
 8015cfe:	bfb8      	it	lt
 8015d00:	4602      	movlt	r2, r0
 8015d02:	3301      	adds	r3, #1
 8015d04:	e7e1      	b.n	8015cca <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8015d06:	d10e      	bne.n	8015d26 <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8015d08:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8015d0c:	f8be e0b2 	ldrh.w	lr, [lr, #178]	; 0xb2
 8015d10:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8015d14:	4473      	add	r3, lr
 8015d16:	b21b      	sxth	r3, r3
 8015d18:	429e      	cmp	r6, r3
 8015d1a:	bfa8      	it	ge
 8015d1c:	461e      	movge	r6, r3
 8015d1e:	4287      	cmp	r7, r0
 8015d20:	bfb8      	it	lt
 8015d22:	46e1      	movlt	r9, ip
 8015d24:	e756      	b.n	8015bd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d26:	4286      	cmp	r6, r0
 8015d28:	bfa8      	it	ge
 8015d2a:	4606      	movge	r6, r0
 8015d2c:	e752      	b.n	8015bd4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8015d2e:	eb0a 0007 	add.w	r0, sl, r7
 8015d32:	4427      	add	r7, r4
 8015d34:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015d38:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	; 0xb2
 8015d3c:	f1bb 0f13 	cmp.w	fp, #19
 8015d40:	bfde      	ittt	le
 8015d42:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	; 0xae
 8015d46:	445e      	addle	r6, fp
 8015d48:	b236      	sxthle	r6, r6
 8015d4a:	f7f9 feda 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015d4e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015d52:	2800      	cmp	r0, #0
 8015d54:	f47f af1a 	bne.w	8015b8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 8015d58:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 8015d5c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015d60:	482a      	ldr	r0, [pc, #168]	; (8015e0c <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015d62:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8015d66:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8015d6a:	6800      	ldr	r0, [r0, #0]
 8015d6c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015d70:	1ab6      	subs	r6, r6, r2
 8015d72:	2e14      	cmp	r6, #20
 8015d74:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015d78:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015d7c:	bfa8      	it	ge
 8015d7e:	2614      	movge	r6, #20
 8015d80:	f8d0 c000 	ldr.w	ip, [r0]
 8015d84:	b2b6      	uxth	r6, r6
 8015d86:	fa1f fb8b 	uxth.w	fp, fp
 8015d8a:	455e      	cmp	r6, fp
 8015d8c:	bf94      	ite	ls
 8015d8e:	9600      	strls	r6, [sp, #0]
 8015d90:	f8cd b000 	strhi.w	fp, [sp]
 8015d94:	b292      	uxth	r2, r2
 8015d96:	f8dc 6090 	ldr.w	r6, [ip, #144]	; 0x90
 8015d9a:	b29b      	uxth	r3, r3
 8015d9c:	b289      	uxth	r1, r1
 8015d9e:	47b0      	blx	r6
 8015da0:	6823      	ldr	r3, [r4, #0]
 8015da2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8015da6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015da8:	a907      	add	r1, sp, #28
 8015daa:	4620      	mov	r0, r4
 8015dac:	4798      	blx	r3
 8015dae:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8015db2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8015db6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8015dba:	1a5b      	subs	r3, r3, r1
 8015dbc:	440a      	add	r2, r1
 8015dbe:	b21b      	sxth	r3, r3
 8015dc0:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 8015dc4:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8015dc8:	2b00      	cmp	r3, #0
 8015dca:	f47f aeda 	bne.w	8015b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015dce:	fa1f f189 	uxth.w	r1, r9
 8015dd2:	4650      	mov	r0, sl
 8015dd4:	f7ff f9e6 	bl	80151a4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015dd8:	e6d3      	b.n	8015b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015dda:	882e      	ldrh	r6, [r5, #0]
 8015ddc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8015de0:	42b3      	cmp	r3, r6
 8015de2:	f67f ae98 	bls.w	8015b16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8015de6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 8015dea:	ab07      	add	r3, sp, #28
 8015dec:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015df0:	6851      	ldr	r1, [r2, #4]
 8015df2:	c303      	stmia	r3!, {r0, r1}
 8015df4:	a807      	add	r0, sp, #28
 8015df6:	f7f9 fe84 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015dfa:	b920      	cbnz	r0, 8015e06 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 8015dfc:	6823      	ldr	r3, [r4, #0]
 8015dfe:	a907      	add	r1, sp, #28
 8015e00:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8015e02:	4620      	mov	r0, r4
 8015e04:	4798      	blx	r3
 8015e06:	3601      	adds	r6, #1
 8015e08:	b2b6      	uxth	r6, r6
 8015e0a:	e7e7      	b.n	8015ddc <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 8015e0c:	2000ef1c 	.word	0x2000ef1c

08015e10 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015e10:	4b03      	ldr	r3, [pc, #12]	; (8015e20 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015e12:	2200      	movs	r2, #0
 8015e14:	801a      	strh	r2, [r3, #0]
 8015e16:	805a      	strh	r2, [r3, #2]
 8015e18:	809a      	strh	r2, [r3, #4]
 8015e1a:	80da      	strh	r2, [r3, #6]
 8015e1c:	4770      	bx	lr
 8015e1e:	bf00      	nop
 8015e20:	2000ef68 	.word	0x2000ef68

08015e24 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015e24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e28:	4606      	mov	r6, r0
 8015e2a:	b09d      	sub	sp, #116	; 0x74
 8015e2c:	a803      	add	r0, sp, #12
 8015e2e:	4614      	mov	r4, r2
 8015e30:	468a      	mov	sl, r1
 8015e32:	461d      	mov	r5, r3
 8015e34:	f000 feca 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8015e38:	6833      	ldr	r3, [r6, #0]
 8015e3a:	4630      	mov	r0, r6
 8015e3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015e3e:	4798      	blx	r3
 8015e40:	6833      	ldr	r3, [r6, #0]
 8015e42:	4607      	mov	r7, r0
 8015e44:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015e46:	4630      	mov	r0, r6
 8015e48:	4798      	blx	r3
 8015e4a:	462a      	mov	r2, r5
 8015e4c:	9000      	str	r0, [sp, #0]
 8015e4e:	4621      	mov	r1, r4
 8015e50:	463b      	mov	r3, r7
 8015e52:	a803      	add	r0, sp, #12
 8015e54:	f000 ff15 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015e58:	2500      	movs	r5, #0
 8015e5a:	462c      	mov	r4, r5
 8015e5c:	46a9      	mov	r9, r5
 8015e5e:	46a8      	mov	r8, r5
 8015e60:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8015e64:	2300      	movs	r3, #0
 8015e66:	9302      	str	r3, [sp, #8]
 8015e68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8015e6c:	429c      	cmp	r4, r3
 8015e6e:	d002      	beq.n	8015e76 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015e70:	455c      	cmp	r4, fp
 8015e72:	bf18      	it	ne
 8015e74:	4625      	movne	r5, r4
 8015e76:	ab02      	add	r3, sp, #8
 8015e78:	4632      	mov	r2, r6
 8015e7a:	4651      	mov	r1, sl
 8015e7c:	a803      	add	r0, sp, #12
 8015e7e:	f001 fa03 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015e82:	4604      	mov	r4, r0
 8015e84:	b108      	cbz	r0, 8015e8a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015e86:	280a      	cmp	r0, #10
 8015e88:	d10a      	bne.n	8015ea0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8015e8a:	45c1      	cmp	r9, r8
 8015e8c:	bf38      	it	cc
 8015e8e:	46c1      	movcc	r9, r8
 8015e90:	f04f 0800 	mov.w	r8, #0
 8015e94:	2c00      	cmp	r4, #0
 8015e96:	d1e5      	bne.n	8015e64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015e98:	4648      	mov	r0, r9
 8015e9a:	b01d      	add	sp, #116	; 0x74
 8015e9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015ea0:	9a02      	ldr	r2, [sp, #8]
 8015ea2:	2a00      	cmp	r2, #0
 8015ea4:	d0de      	beq.n	8015e64 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015ea6:	7b57      	ldrb	r7, [r2, #13]
 8015ea8:	6833      	ldr	r3, [r6, #0]
 8015eaa:	8894      	ldrh	r4, [r2, #4]
 8015eac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8015eae:	007f      	lsls	r7, r7, #1
 8015eb0:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8015eb4:	7a97      	ldrb	r7, [r2, #10]
 8015eb6:	4629      	mov	r1, r5
 8015eb8:	4307      	orrs	r7, r0
 8015eba:	4630      	mov	r0, r6
 8015ebc:	4798      	blx	r3
 8015ebe:	4438      	add	r0, r7
 8015ec0:	4480      	add	r8, r0
 8015ec2:	fa1f f888 	uxth.w	r8, r8
 8015ec6:	e7e5      	b.n	8015e94 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08015ec8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8015ec8:	b508      	push	{r3, lr}
 8015eca:	6803      	ldr	r3, [r0, #0]
 8015ecc:	68db      	ldr	r3, [r3, #12]
 8015ece:	4798      	blx	r3
 8015ed0:	b128      	cbz	r0, 8015ede <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015ed2:	7b43      	ldrb	r3, [r0, #13]
 8015ed4:	7a80      	ldrb	r0, [r0, #10]
 8015ed6:	005b      	lsls	r3, r3, #1
 8015ed8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8015edc:	4318      	orrs	r0, r3
 8015ede:	bd08      	pop	{r3, pc}

08015ee0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015ee0:	b40e      	push	{r1, r2, r3}
 8015ee2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015ee4:	b09e      	sub	sp, #120	; 0x78
 8015ee6:	ab23      	add	r3, sp, #140	; 0x8c
 8015ee8:	4605      	mov	r5, r0
 8015eea:	f853 4b04 	ldr.w	r4, [r3], #4
 8015eee:	9303      	str	r3, [sp, #12]
 8015ef0:	a805      	add	r0, sp, #20
 8015ef2:	f000 fe6b 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8015ef6:	682b      	ldr	r3, [r5, #0]
 8015ef8:	4628      	mov	r0, r5
 8015efa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015efc:	4798      	blx	r3
 8015efe:	682b      	ldr	r3, [r5, #0]
 8015f00:	4606      	mov	r6, r0
 8015f02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015f04:	4628      	mov	r0, r5
 8015f06:	4798      	blx	r3
 8015f08:	4633      	mov	r3, r6
 8015f0a:	ae1e      	add	r6, sp, #120	; 0x78
 8015f0c:	4621      	mov	r1, r4
 8015f0e:	9000      	str	r0, [sp, #0]
 8015f10:	9a03      	ldr	r2, [sp, #12]
 8015f12:	2400      	movs	r4, #0
 8015f14:	a805      	add	r0, sp, #20
 8015f16:	f000 feb4 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015f1a:	f846 4d68 	str.w	r4, [r6, #-104]!
 8015f1e:	462a      	mov	r2, r5
 8015f20:	4633      	mov	r3, r6
 8015f22:	4621      	mov	r1, r4
 8015f24:	a805      	add	r0, sp, #20
 8015f26:	f001 f9af 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015f2a:	b1f0      	cbz	r0, 8015f6a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8015f2c:	280a      	cmp	r0, #10
 8015f2e:	d018      	beq.n	8015f62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f30:	9f04      	ldr	r7, [sp, #16]
 8015f32:	b1b7      	cbz	r7, 8015f62 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8015f34:	7b78      	ldrb	r0, [r7, #13]
 8015f36:	7a3b      	ldrb	r3, [r7, #8]
 8015f38:	88ea      	ldrh	r2, [r5, #6]
 8015f3a:	00c1      	lsls	r1, r0, #3
 8015f3c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8015f40:	4319      	orrs	r1, r3
 8015f42:	0643      	lsls	r3, r0, #25
 8015f44:	bf44      	itt	mi
 8015f46:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8015f4a:	b219      	sxthmi	r1, r3
 8015f4c:	0100      	lsls	r0, r0, #4
 8015f4e:	79fb      	ldrb	r3, [r7, #7]
 8015f50:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8015f54:	4303      	orrs	r3, r0
 8015f56:	4413      	add	r3, r2
 8015f58:	1a5b      	subs	r3, r3, r1
 8015f5a:	b21b      	sxth	r3, r3
 8015f5c:	429c      	cmp	r4, r3
 8015f5e:	bfb8      	it	lt
 8015f60:	461c      	movlt	r4, r3
 8015f62:	4633      	mov	r3, r6
 8015f64:	462a      	mov	r2, r5
 8015f66:	2100      	movs	r1, #0
 8015f68:	e7dc      	b.n	8015f24 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8015f6a:	b2a0      	uxth	r0, r4
 8015f6c:	b01e      	add	sp, #120	; 0x78
 8015f6e:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015f72:	b003      	add	sp, #12
 8015f74:	4770      	bx	lr

08015f76 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8015f76:	7a43      	ldrb	r3, [r0, #9]
 8015f78:	8880      	ldrh	r0, [r0, #4]
 8015f7a:	4418      	add	r0, r3
 8015f7c:	b280      	uxth	r0, r0
 8015f7e:	4770      	bx	lr

08015f80 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015f80:	6803      	ldr	r3, [r0, #0]
 8015f82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8015f84:	4718      	bx	r3

08015f86 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8015f86:	b40e      	push	{r1, r2, r3}
 8015f88:	b570      	push	{r4, r5, r6, lr}
 8015f8a:	b09d      	sub	sp, #116	; 0x74
 8015f8c:	ab21      	add	r3, sp, #132	; 0x84
 8015f8e:	4604      	mov	r4, r0
 8015f90:	f853 5b04 	ldr.w	r5, [r3], #4
 8015f94:	9302      	str	r3, [sp, #8]
 8015f96:	a803      	add	r0, sp, #12
 8015f98:	f000 fe18 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8015f9c:	6823      	ldr	r3, [r4, #0]
 8015f9e:	4620      	mov	r0, r4
 8015fa0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8015fa2:	4798      	blx	r3
 8015fa4:	6823      	ldr	r3, [r4, #0]
 8015fa6:	4606      	mov	r6, r0
 8015fa8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8015faa:	4620      	mov	r0, r4
 8015fac:	4798      	blx	r3
 8015fae:	4633      	mov	r3, r6
 8015fb0:	9000      	str	r0, [sp, #0]
 8015fb2:	9a02      	ldr	r2, [sp, #8]
 8015fb4:	4629      	mov	r1, r5
 8015fb6:	a803      	add	r0, sp, #12
 8015fb8:	f000 fe63 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015fbc:	a803      	add	r0, sp, #12
 8015fbe:	f001 fa31 	bl	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015fc2:	2401      	movs	r4, #1
 8015fc4:	b2a3      	uxth	r3, r4
 8015fc6:	b140      	cbz	r0, 8015fda <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8015fc8:	280a      	cmp	r0, #10
 8015fca:	bf08      	it	eq
 8015fcc:	3301      	addeq	r3, #1
 8015fce:	a803      	add	r0, sp, #12
 8015fd0:	bf08      	it	eq
 8015fd2:	b21c      	sxtheq	r4, r3
 8015fd4:	f001 fa26 	bl	8017424 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015fd8:	e7f4      	b.n	8015fc4 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8015fda:	4618      	mov	r0, r3
 8015fdc:	b01d      	add	sp, #116	; 0x74
 8015fde:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015fe2:	b003      	add	sp, #12
 8015fe4:	4770      	bx	lr

08015fe6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8015fe6:	b40e      	push	{r1, r2, r3}
 8015fe8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015fea:	b09e      	sub	sp, #120	; 0x78
 8015fec:	ab23      	add	r3, sp, #140	; 0x8c
 8015fee:	4604      	mov	r4, r0
 8015ff0:	f853 5b04 	ldr.w	r5, [r3], #4
 8015ff4:	9303      	str	r3, [sp, #12]
 8015ff6:	a805      	add	r0, sp, #20
 8015ff8:	f000 fde8 	bl	8016bcc <_ZN8touchgfx12TextProviderC1Ev>
 8015ffc:	6823      	ldr	r3, [r4, #0]
 8015ffe:	4620      	mov	r0, r4
 8016000:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8016002:	4798      	blx	r3
 8016004:	6823      	ldr	r3, [r4, #0]
 8016006:	4606      	mov	r6, r0
 8016008:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801600a:	4620      	mov	r0, r4
 801600c:	4798      	blx	r3
 801600e:	4633      	mov	r3, r6
 8016010:	4629      	mov	r1, r5
 8016012:	9000      	str	r0, [sp, #0]
 8016014:	9a03      	ldr	r2, [sp, #12]
 8016016:	a805      	add	r0, sp, #20
 8016018:	ad1e      	add	r5, sp, #120	; 0x78
 801601a:	f000 fe32 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801601e:	2100      	movs	r1, #0
 8016020:	f845 1d68 	str.w	r1, [r5, #-104]!
 8016024:	4622      	mov	r2, r4
 8016026:	462b      	mov	r3, r5
 8016028:	a805      	add	r0, sp, #20
 801602a:	f001 f92d 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801602e:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8016032:	b1d8      	cbz	r0, 801606c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8016034:	280a      	cmp	r0, #10
 8016036:	d012      	beq.n	801605e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8016038:	9804      	ldr	r0, [sp, #16]
 801603a:	b180      	cbz	r0, 801605e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801603c:	7b47      	ldrb	r7, [r0, #13]
 801603e:	88e2      	ldrh	r2, [r4, #6]
 8016040:	00fb      	lsls	r3, r7, #3
 8016042:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016046:	7a03      	ldrb	r3, [r0, #8]
 8016048:	430b      	orrs	r3, r1
 801604a:	0679      	lsls	r1, r7, #25
 801604c:	bf44      	itt	mi
 801604e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016052:	b21b      	sxthmi	r3, r3
 8016054:	1ad3      	subs	r3, r2, r3
 8016056:	b21b      	sxth	r3, r3
 8016058:	429e      	cmp	r6, r3
 801605a:	bfa8      	it	ge
 801605c:	461e      	movge	r6, r3
 801605e:	462b      	mov	r3, r5
 8016060:	4622      	mov	r2, r4
 8016062:	2100      	movs	r1, #0
 8016064:	a805      	add	r0, sp, #20
 8016066:	f001 f90f 	bl	8017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801606a:	e7e2      	b.n	8016032 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801606c:	4630      	mov	r0, r6
 801606e:	b01e      	add	sp, #120	; 0x78
 8016070:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8016074:	b003      	add	sp, #12
 8016076:	4770      	bx	lr

08016078 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8016078:	b513      	push	{r0, r1, r4, lr}
 801607a:	6803      	ldr	r3, [r0, #0]
 801607c:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016080:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016084:	f8ad 1004 	strh.w	r1, [sp, #4]
 8016088:	2400      	movs	r4, #0
 801608a:	9400      	str	r4, [sp, #0]
 801608c:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016090:	691b      	ldr	r3, [r3, #16]
 8016092:	4669      	mov	r1, sp
 8016094:	4798      	blx	r3
 8016096:	b002      	add	sp, #8
 8016098:	bd10      	pop	{r4, pc}

0801609a <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801609a:	b538      	push	{r3, r4, r5, lr}
 801609c:	680b      	ldr	r3, [r1, #0]
 801609e:	460c      	mov	r4, r1
 80160a0:	68db      	ldr	r3, [r3, #12]
 80160a2:	4605      	mov	r5, r0
 80160a4:	4798      	blx	r3
 80160a6:	6823      	ldr	r3, [r4, #0]
 80160a8:	4620      	mov	r0, r4
 80160aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80160ac:	4629      	mov	r1, r5
 80160ae:	4798      	blx	r3
 80160b0:	4628      	mov	r0, r5
 80160b2:	bd38      	pop	{r3, r4, r5, pc}

080160b4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80160b4:	b410      	push	{r4}
 80160b6:	880a      	ldrh	r2, [r1, #0]
 80160b8:	8884      	ldrh	r4, [r0, #4]
 80160ba:	4422      	add	r2, r4
 80160bc:	800a      	strh	r2, [r1, #0]
 80160be:	88c4      	ldrh	r4, [r0, #6]
 80160c0:	884a      	ldrh	r2, [r1, #2]
 80160c2:	4422      	add	r2, r4
 80160c4:	804a      	strh	r2, [r1, #2]
 80160c6:	6940      	ldr	r0, [r0, #20]
 80160c8:	b120      	cbz	r0, 80160d4 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80160ca:	6803      	ldr	r3, [r0, #0]
 80160cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80160d2:	4718      	bx	r3
 80160d4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80160d8:	4770      	bx	lr

080160da <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80160da:	b570      	push	{r4, r5, r6, lr}
 80160dc:	8882      	ldrh	r2, [r0, #4]
 80160de:	880b      	ldrh	r3, [r1, #0]
 80160e0:	4413      	add	r3, r2
 80160e2:	800b      	strh	r3, [r1, #0]
 80160e4:	88c2      	ldrh	r2, [r0, #6]
 80160e6:	884b      	ldrh	r3, [r1, #2]
 80160e8:	460c      	mov	r4, r1
 80160ea:	4413      	add	r3, r2
 80160ec:	804b      	strh	r3, [r1, #2]
 80160ee:	4605      	mov	r5, r0
 80160f0:	1d01      	adds	r1, r0, #4
 80160f2:	4620      	mov	r0, r4
 80160f4:	f7f9 fcc2 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 80160f8:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80160fc:	2b00      	cmp	r3, #0
 80160fe:	dd0b      	ble.n	8016118 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016100:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016104:	2b00      	cmp	r3, #0
 8016106:	dd07      	ble.n	8016118 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8016108:	6968      	ldr	r0, [r5, #20]
 801610a:	b128      	cbz	r0, 8016118 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801610c:	6803      	ldr	r3, [r0, #0]
 801610e:	4621      	mov	r1, r4
 8016110:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016112:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016116:	4718      	bx	r3
 8016118:	bd70      	pop	{r4, r5, r6, pc}
	...

0801611c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801611c:	b570      	push	{r4, r5, r6, lr}
 801611e:	8882      	ldrh	r2, [r0, #4]
 8016120:	880b      	ldrh	r3, [r1, #0]
 8016122:	4413      	add	r3, r2
 8016124:	800b      	strh	r3, [r1, #0]
 8016126:	88c2      	ldrh	r2, [r0, #6]
 8016128:	884b      	ldrh	r3, [r1, #2]
 801612a:	460c      	mov	r4, r1
 801612c:	4413      	add	r3, r2
 801612e:	804b      	strh	r3, [r1, #2]
 8016130:	4605      	mov	r5, r0
 8016132:	1d01      	adds	r1, r0, #4
 8016134:	4620      	mov	r0, r4
 8016136:	f7f9 fca1 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801613a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801613e:	2b00      	cmp	r3, #0
 8016140:	dd19      	ble.n	8016176 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016142:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8016146:	2b00      	cmp	r3, #0
 8016148:	dd15      	ble.n	8016176 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 801614a:	6968      	ldr	r0, [r5, #20]
 801614c:	b128      	cbz	r0, 801615a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801614e:	6803      	ldr	r3, [r0, #0]
 8016150:	4621      	mov	r1, r4
 8016152:	691b      	ldr	r3, [r3, #16]
 8016154:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016158:	4718      	bx	r3
 801615a:	4b07      	ldr	r3, [pc, #28]	; (8016178 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801615c:	681b      	ldr	r3, [r3, #0]
 801615e:	3304      	adds	r3, #4
 8016160:	429d      	cmp	r5, r3
 8016162:	d108      	bne.n	8016176 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8016164:	f7fe fea0 	bl	8014ea8 <_ZN8touchgfx11Application11getInstanceEv>
 8016168:	6803      	ldr	r3, [r0, #0]
 801616a:	6821      	ldr	r1, [r4, #0]
 801616c:	6862      	ldr	r2, [r4, #4]
 801616e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8016170:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8016174:	4718      	bx	r3
 8016176:	bd70      	pop	{r4, r5, r6, pc}
 8016178:	2000ef60 	.word	0x2000ef60

0801617c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801617c:	b570      	push	{r4, r5, r6, lr}
 801617e:	4604      	mov	r4, r0
 8016180:	4616      	mov	r6, r2
 8016182:	460d      	mov	r5, r1
 8016184:	b901      	cbnz	r1, 8016188 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8016186:	b192      	cbz	r2, 80161ae <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8016188:	6823      	ldr	r3, [r4, #0]
 801618a:	4620      	mov	r0, r4
 801618c:	699b      	ldr	r3, [r3, #24]
 801618e:	4798      	blx	r3
 8016190:	88e2      	ldrh	r2, [r4, #6]
 8016192:	88a1      	ldrh	r1, [r4, #4]
 8016194:	4432      	add	r2, r6
 8016196:	4429      	add	r1, r5
 8016198:	4620      	mov	r0, r4
 801619a:	b212      	sxth	r2, r2
 801619c:	b209      	sxth	r1, r1
 801619e:	f7ec fd9d 	bl	8002cdc <_ZN8touchgfx8Drawable5setXYEss>
 80161a2:	6823      	ldr	r3, [r4, #0]
 80161a4:	4620      	mov	r0, r4
 80161a6:	699b      	ldr	r3, [r3, #24]
 80161a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80161ac:	4718      	bx	r3
 80161ae:	bd70      	pop	{r4, r5, r6, pc}

080161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80161b0:	b510      	push	{r4, lr}
 80161b2:	4604      	mov	r4, r0
 80161b4:	4608      	mov	r0, r1
 80161b6:	2300      	movs	r3, #0
 80161b8:	8023      	strh	r3, [r4, #0]
 80161ba:	8063      	strh	r3, [r4, #2]
 80161bc:	6803      	ldr	r3, [r0, #0]
 80161be:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80161c2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80161c6:	80a1      	strh	r1, [r4, #4]
 80161c8:	80e2      	strh	r2, [r4, #6]
 80161ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80161cc:	4621      	mov	r1, r4
 80161ce:	4798      	blx	r3
 80161d0:	4620      	mov	r0, r4
 80161d2:	bd10      	pop	{r4, pc}

080161d4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 80161d4:	b530      	push	{r4, r5, lr}
 80161d6:	8083      	strh	r3, [r0, #4]
 80161d8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80161dc:	80c3      	strh	r3, [r0, #6]
 80161de:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80161e2:	7203      	strb	r3, [r0, #8]
 80161e4:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80161e8:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80161ec:	7243      	strb	r3, [r0, #9]
 80161ee:	7a83      	ldrb	r3, [r0, #10]
 80161f0:	6141      	str	r1, [r0, #20]
 80161f2:	f365 0306 	bfi	r3, r5, #0, #7
 80161f6:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80161fa:	8302      	strh	r2, [r0, #24]
 80161fc:	f365 13c7 	bfi	r3, r5, #7, #1
 8016200:	7283      	strb	r3, [r0, #10]
 8016202:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8016206:	72c3      	strb	r3, [r0, #11]
 8016208:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 801620c:	7303      	strb	r3, [r0, #12]
 801620e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8016212:	81c3      	strh	r3, [r0, #14]
 8016214:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8016218:	8203      	strh	r3, [r0, #16]
 801621a:	4b01      	ldr	r3, [pc, #4]	; (8016220 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 801621c:	6003      	str	r3, [r0, #0]
 801621e:	bd30      	pop	{r4, r5, pc}
 8016220:	0802a688 	.word	0x0802a688

08016224 <_ZNK8touchgfx9ConstFont4findEt>:
 8016224:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016226:	6944      	ldr	r4, [r0, #20]
 8016228:	b3bc      	cbz	r4, 801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801622a:	88a3      	ldrh	r3, [r4, #4]
 801622c:	8b02      	ldrh	r2, [r0, #24]
 801622e:	1acb      	subs	r3, r1, r3
 8016230:	f102 32ff 	add.w	r2, r2, #4294967295
 8016234:	d431      	bmi.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016236:	4293      	cmp	r3, r2
 8016238:	dd0c      	ble.n	8016254 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801623a:	230e      	movs	r3, #14
 801623c:	fb03 4302 	mla	r3, r3, r2, r4
 8016240:	889b      	ldrh	r3, [r3, #4]
 8016242:	1a5b      	subs	r3, r3, r1
 8016244:	1ad3      	subs	r3, r2, r3
 8016246:	429a      	cmp	r2, r3
 8016248:	db27      	blt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801624a:	2b00      	cmp	r3, #0
 801624c:	bfbc      	itt	lt
 801624e:	2302      	movlt	r3, #2
 8016250:	fb92 f3f3 	sdivlt	r3, r2, r3
 8016254:	2500      	movs	r5, #0
 8016256:	260e      	movs	r6, #14
 8016258:	4295      	cmp	r5, r2
 801625a:	dc1e      	bgt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801625c:	fb06 4003 	mla	r0, r6, r3, r4
 8016260:	8887      	ldrh	r7, [r0, #4]
 8016262:	42b9      	cmp	r1, r7
 8016264:	d01a      	beq.n	801629c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8016266:	d20d      	bcs.n	8016284 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8016268:	1e5a      	subs	r2, r3, #1
 801626a:	4295      	cmp	r5, r2
 801626c:	dc15      	bgt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801626e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8016272:	1a5b      	subs	r3, r3, r1
 8016274:	1ad3      	subs	r3, r2, r3
 8016276:	429a      	cmp	r2, r3
 8016278:	db0f      	blt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801627a:	429d      	cmp	r5, r3
 801627c:	ddec      	ble.n	8016258 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801627e:	1953      	adds	r3, r2, r5
 8016280:	105b      	asrs	r3, r3, #1
 8016282:	e7e9      	b.n	8016258 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016284:	1c5d      	adds	r5, r3, #1
 8016286:	42aa      	cmp	r2, r5
 8016288:	db07      	blt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801628a:	8a43      	ldrh	r3, [r0, #18]
 801628c:	1acb      	subs	r3, r1, r3
 801628e:	442b      	add	r3, r5
 8016290:	429d      	cmp	r5, r3
 8016292:	dc02      	bgt.n	801629a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8016294:	429a      	cmp	r2, r3
 8016296:	dadf      	bge.n	8016258 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8016298:	e7f1      	b.n	801627e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801629a:	2000      	movs	r0, #0
 801629c:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801629e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801629e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80162a0:	4604      	mov	r4, r0
 80162a2:	4617      	mov	r7, r2
 80162a4:	461e      	mov	r6, r3
 80162a6:	b911      	cbnz	r1, 80162ae <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80162a8:	2500      	movs	r5, #0
 80162aa:	4628      	mov	r0, r5
 80162ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80162ae:	290a      	cmp	r1, #10
 80162b0:	d0fa      	beq.n	80162a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162b2:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80162b6:	4291      	cmp	r1, r2
 80162b8:	d0f6      	beq.n	80162a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162ba:	f242 020b 	movw	r2, #8203	; 0x200b
 80162be:	4291      	cmp	r1, r2
 80162c0:	d0f2      	beq.n	80162a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162c2:	f7ff ffaf 	bl	8016224 <_ZNK8touchgfx9ConstFont4findEt>
 80162c6:	4605      	mov	r5, r0
 80162c8:	b950      	cbnz	r0, 80162e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80162ca:	6823      	ldr	r3, [r4, #0]
 80162cc:	4620      	mov	r0, r4
 80162ce:	691b      	ldr	r3, [r3, #16]
 80162d0:	4798      	blx	r3
 80162d2:	4601      	mov	r1, r0
 80162d4:	4620      	mov	r0, r4
 80162d6:	f7ff ffa5 	bl	8016224 <_ZNK8touchgfx9ConstFont4findEt>
 80162da:	4605      	mov	r5, r0
 80162dc:	2800      	cmp	r0, #0
 80162de:	d0e3      	beq.n	80162a8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80162e0:	6823      	ldr	r3, [r4, #0]
 80162e2:	4629      	mov	r1, r5
 80162e4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80162e6:	4620      	mov	r0, r4
 80162e8:	4798      	blx	r3
 80162ea:	6038      	str	r0, [r7, #0]
 80162ec:	6823      	ldr	r3, [r4, #0]
 80162ee:	4620      	mov	r0, r4
 80162f0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80162f2:	4798      	blx	r3
 80162f4:	7030      	strb	r0, [r6, #0]
 80162f6:	e7d8      	b.n	80162aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080162f8 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 80162f8:	b538      	push	{r3, r4, r5, lr}
 80162fa:	4605      	mov	r5, r0
 80162fc:	f002 fb56 	bl	80189ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016300:	4604      	mov	r4, r0
 8016302:	4628      	mov	r0, r5
 8016304:	f002 fa96 	bl	8018834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016308:	2800      	cmp	r0, #0
 801630a:	bf14      	ite	ne
 801630c:	2002      	movne	r0, #2
 801630e:	2000      	moveq	r0, #0
 8016310:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016314:	b280      	uxth	r0, r0
 8016316:	bd38      	pop	{r3, r4, r5, pc}

08016318 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8016318:	b538      	push	{r3, r4, r5, lr}
 801631a:	4605      	mov	r5, r0
 801631c:	f002 fb46 	bl	80189ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 8016320:	4604      	mov	r4, r0
 8016322:	4628      	mov	r0, r5
 8016324:	f002 fa86 	bl	8018834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8016328:	2800      	cmp	r0, #0
 801632a:	bf14      	ite	ne
 801632c:	2002      	movne	r0, #2
 801632e:	2000      	moveq	r0, #0
 8016330:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8016334:	f040 0001 	orr.w	r0, r0, #1
 8016338:	b280      	uxth	r0, r0
 801633a:	bd38      	pop	{r3, r4, r5, pc}

0801633c <_ZN8touchgfx4clzuEm>:
 801633c:	4603      	mov	r3, r0
 801633e:	b1c8      	cbz	r0, 8016374 <_ZN8touchgfx4clzuEm+0x38>
 8016340:	0c02      	lsrs	r2, r0, #16
 8016342:	0412      	lsls	r2, r2, #16
 8016344:	b9a2      	cbnz	r2, 8016370 <_ZN8touchgfx4clzuEm+0x34>
 8016346:	0403      	lsls	r3, r0, #16
 8016348:	2010      	movs	r0, #16
 801634a:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801634e:	bf04      	itt	eq
 8016350:	021b      	lsleq	r3, r3, #8
 8016352:	3008      	addeq	r0, #8
 8016354:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8016358:	bf04      	itt	eq
 801635a:	011b      	lsleq	r3, r3, #4
 801635c:	3004      	addeq	r0, #4
 801635e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8016362:	bf04      	itt	eq
 8016364:	009b      	lsleq	r3, r3, #2
 8016366:	3002      	addeq	r0, #2
 8016368:	2b00      	cmp	r3, #0
 801636a:	db04      	blt.n	8016376 <_ZN8touchgfx4clzuEm+0x3a>
 801636c:	3001      	adds	r0, #1
 801636e:	4770      	bx	lr
 8016370:	2000      	movs	r0, #0
 8016372:	e7ea      	b.n	801634a <_ZN8touchgfx4clzuEm+0xe>
 8016374:	2020      	movs	r0, #32
 8016376:	4770      	bx	lr

08016378 <_ZN8touchgfx7muldivuEmmmRm>:
 8016378:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 801637c:	460f      	mov	r7, r1
 801637e:	4615      	mov	r5, r2
 8016380:	461e      	mov	r6, r3
 8016382:	4601      	mov	r1, r0
 8016384:	b100      	cbz	r0, 8016388 <_ZN8touchgfx7muldivuEmmmRm+0x10>
 8016386:	b927      	cbnz	r7, 8016392 <_ZN8touchgfx7muldivuEmmmRm+0x1a>
 8016388:	2000      	movs	r0, #0
 801638a:	6030      	str	r0, [r6, #0]
 801638c:	b002      	add	sp, #8
 801638e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016392:	f7ff ffd3 	bl	801633c <_ZN8touchgfx4clzuEm>
 8016396:	b980      	cbnz	r0, 80163ba <_ZN8touchgfx7muldivuEmmmRm+0x42>
 8016398:	4638      	mov	r0, r7
 801639a:	f7ff ffcf 	bl	801633c <_ZN8touchgfx4clzuEm>
 801639e:	2800      	cmp	r0, #0
 80163a0:	dd05      	ble.n	80163ae <_ZN8touchgfx7muldivuEmmmRm+0x36>
 80163a2:	4633      	mov	r3, r6
 80163a4:	462a      	mov	r2, r5
 80163a6:	4638      	mov	r0, r7
 80163a8:	f7ff ffe6 	bl	8016378 <_ZN8touchgfx7muldivuEmmmRm>
 80163ac:	e7ee      	b.n	801638c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163ae:	f04f 33ff 	mov.w	r3, #4294967295
 80163b2:	6033      	str	r3, [r6, #0]
 80163b4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80163b8:	e7e8      	b.n	801638c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163ba:	fa37 f800 	lsrs.w	r8, r7, r0
 80163be:	fb07 f301 	mul.w	r3, r7, r1
 80163c2:	d105      	bne.n	80163d0 <_ZN8touchgfx7muldivuEmmmRm+0x58>
 80163c4:	fbb3 f0f5 	udiv	r0, r3, r5
 80163c8:	fb05 3510 	mls	r5, r5, r0, r3
 80163cc:	6035      	str	r5, [r6, #0]
 80163ce:	e7dd      	b.n	801638c <_ZN8touchgfx7muldivuEmmmRm+0x14>
 80163d0:	2301      	movs	r3, #1
 80163d2:	fa01 fa00 	lsl.w	sl, r1, r0
 80163d6:	fa03 f000 	lsl.w	r0, r3, r0
 80163da:	3801      	subs	r0, #1
 80163dc:	462a      	mov	r2, r5
 80163de:	4633      	mov	r3, r6
 80163e0:	4038      	ands	r0, r7
 80163e2:	f7ff ffc9 	bl	8016378 <_ZN8touchgfx7muldivuEmmmRm>
 80163e6:	fbba f9f5 	udiv	r9, sl, r5
 80163ea:	462a      	mov	r2, r5
 80163ec:	4607      	mov	r7, r0
 80163ee:	ab01      	add	r3, sp, #4
 80163f0:	fb05 a119 	mls	r1, r5, r9, sl
 80163f4:	4640      	mov	r0, r8
 80163f6:	f7ff ffbf 	bl	8016378 <_ZN8touchgfx7muldivuEmmmRm>
 80163fa:	9b01      	ldr	r3, [sp, #4]
 80163fc:	6832      	ldr	r2, [r6, #0]
 80163fe:	fb08 f409 	mul.w	r4, r8, r9
 8016402:	441a      	add	r2, r3
 8016404:	fbb2 f3f5 	udiv	r3, r2, r5
 8016408:	441c      	add	r4, r3
 801640a:	443c      	add	r4, r7
 801640c:	4420      	add	r0, r4
 801640e:	fb05 2513 	mls	r5, r5, r3, r2
 8016412:	e7db      	b.n	80163cc <_ZN8touchgfx7muldivuEmmmRm+0x54>

08016414 <_ZN8touchgfx6muldivElllRl>:
 8016414:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016416:	2800      	cmp	r0, #0
 8016418:	bfba      	itte	lt
 801641a:	4240      	neglt	r0, r0
 801641c:	f04f 34ff 	movlt.w	r4, #4294967295
 8016420:	2401      	movge	r4, #1
 8016422:	2900      	cmp	r1, #0
 8016424:	bfbc      	itt	lt
 8016426:	4249      	neglt	r1, r1
 8016428:	4264      	neglt	r4, r4
 801642a:	2a00      	cmp	r2, #0
 801642c:	bfb6      	itet	lt
 801642e:	4265      	neglt	r5, r4
 8016430:	4625      	movge	r5, r4
 8016432:	4252      	neglt	r2, r2
 8016434:	4288      	cmp	r0, r1
 8016436:	461e      	mov	r6, r3
 8016438:	bfc2      	ittt	gt
 801643a:	4603      	movgt	r3, r0
 801643c:	4608      	movgt	r0, r1
 801643e:	4619      	movgt	r1, r3
 8016440:	ab01      	add	r3, sp, #4
 8016442:	f7ff ff99 	bl	8016378 <_ZN8touchgfx7muldivuEmmmRm>
 8016446:	9b01      	ldr	r3, [sp, #4]
 8016448:	4368      	muls	r0, r5
 801644a:	435c      	muls	r4, r3
 801644c:	6034      	str	r4, [r6, #0]
 801644e:	b002      	add	sp, #8
 8016450:	bd70      	pop	{r4, r5, r6, pc}

08016452 <_ZN8touchgfx6muldivElll>:
 8016452:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016454:	4606      	mov	r6, r0
 8016456:	ab01      	add	r3, sp, #4
 8016458:	460d      	mov	r5, r1
 801645a:	4614      	mov	r4, r2
 801645c:	f7ff ffda 	bl	8016414 <_ZN8touchgfx6muldivElllRl>
 8016460:	2e00      	cmp	r6, #0
 8016462:	db20      	blt.n	80164a6 <_ZN8touchgfx6muldivElll+0x54>
 8016464:	bf14      	ite	ne
 8016466:	2301      	movne	r3, #1
 8016468:	2300      	moveq	r3, #0
 801646a:	2d00      	cmp	r5, #0
 801646c:	db1e      	blt.n	80164ac <_ZN8touchgfx6muldivElll+0x5a>
 801646e:	bf14      	ite	ne
 8016470:	2201      	movne	r2, #1
 8016472:	2200      	moveq	r2, #0
 8016474:	2c00      	cmp	r4, #0
 8016476:	fb03 f202 	mul.w	r2, r3, r2
 801647a:	db1a      	blt.n	80164b2 <_ZN8touchgfx6muldivElll+0x60>
 801647c:	bf14      	ite	ne
 801647e:	2301      	movne	r3, #1
 8016480:	2300      	moveq	r3, #0
 8016482:	4353      	muls	r3, r2
 8016484:	2b01      	cmp	r3, #1
 8016486:	d117      	bne.n	80164b8 <_ZN8touchgfx6muldivElll+0x66>
 8016488:	9b01      	ldr	r3, [sp, #4]
 801648a:	2c00      	cmp	r4, #0
 801648c:	bfb8      	it	lt
 801648e:	4264      	neglt	r4, r4
 8016490:	2b00      	cmp	r3, #0
 8016492:	f104 0401 	add.w	r4, r4, #1
 8016496:	bfb8      	it	lt
 8016498:	425b      	neglt	r3, r3
 801649a:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801649e:	db00      	blt.n	80164a2 <_ZN8touchgfx6muldivElll+0x50>
 80164a0:	3001      	adds	r0, #1
 80164a2:	b002      	add	sp, #8
 80164a4:	bd70      	pop	{r4, r5, r6, pc}
 80164a6:	f04f 33ff 	mov.w	r3, #4294967295
 80164aa:	e7de      	b.n	801646a <_ZN8touchgfx6muldivElll+0x18>
 80164ac:	f04f 32ff 	mov.w	r2, #4294967295
 80164b0:	e7e0      	b.n	8016474 <_ZN8touchgfx6muldivElll+0x22>
 80164b2:	f04f 33ff 	mov.w	r3, #4294967295
 80164b6:	e7e4      	b.n	8016482 <_ZN8touchgfx6muldivElll+0x30>
 80164b8:	3301      	adds	r3, #1
 80164ba:	d1f2      	bne.n	80164a2 <_ZN8touchgfx6muldivElll+0x50>
 80164bc:	9b01      	ldr	r3, [sp, #4]
 80164be:	2c00      	cmp	r4, #0
 80164c0:	bfb8      	it	lt
 80164c2:	4264      	neglt	r4, r4
 80164c4:	2b00      	cmp	r3, #0
 80164c6:	bfb8      	it	lt
 80164c8:	425b      	neglt	r3, r3
 80164ca:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80164ce:	bfc8      	it	gt
 80164d0:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80164d4:	e7e5      	b.n	80164a2 <_ZN8touchgfx6muldivElll+0x50>

080164d6 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80164d6:	2000      	movs	r0, #0
 80164d8:	4770      	bx	lr

080164da <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80164da:	2001      	movs	r0, #1
 80164dc:	4770      	bx	lr

080164de <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80164de:	2002      	movs	r0, #2
 80164e0:	4770      	bx	lr

080164e2 <_ZN8touchgfx6ScreenD1Ev>:
 80164e2:	4770      	bx	lr

080164e4 <_ZN8touchgfx12GestureEventD1Ev>:
 80164e4:	4770      	bx	lr

080164e6 <_ZN8touchgfx9DragEventD1Ev>:
 80164e6:	4770      	bx	lr

080164e8 <_ZN8touchgfx10ClickEventD1Ev>:
 80164e8:	4770      	bx	lr

080164ea <_ZN8touchgfx10ClickEventD0Ev>:
 80164ea:	b510      	push	{r4, lr}
 80164ec:	210c      	movs	r1, #12
 80164ee:	4604      	mov	r4, r0
 80164f0:	f010 f86e 	bl	80265d0 <_ZdlPvj>
 80164f4:	4620      	mov	r0, r4
 80164f6:	bd10      	pop	{r4, pc}

080164f8 <_ZN8touchgfx9DragEventD0Ev>:
 80164f8:	b510      	push	{r4, lr}
 80164fa:	2110      	movs	r1, #16
 80164fc:	4604      	mov	r4, r0
 80164fe:	f010 f867 	bl	80265d0 <_ZdlPvj>
 8016502:	4620      	mov	r0, r4
 8016504:	bd10      	pop	{r4, pc}

08016506 <_ZN8touchgfx12GestureEventD0Ev>:
 8016506:	b510      	push	{r4, lr}
 8016508:	210c      	movs	r1, #12
 801650a:	4604      	mov	r4, r0
 801650c:	f010 f860 	bl	80265d0 <_ZdlPvj>
 8016510:	4620      	mov	r0, r4
 8016512:	bd10      	pop	{r4, pc}

08016514 <_ZN8touchgfx6ScreenD0Ev>:
 8016514:	b510      	push	{r4, lr}
 8016516:	213c      	movs	r1, #60	; 0x3c
 8016518:	4604      	mov	r4, r0
 801651a:	f010 f859 	bl	80265d0 <_ZdlPvj>
 801651e:	4620      	mov	r0, r4
 8016520:	bd10      	pop	{r4, pc}
	...

08016524 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8016524:	b530      	push	{r4, r5, lr}
 8016526:	460d      	mov	r5, r1
 8016528:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801652a:	b087      	sub	sp, #28
 801652c:	4604      	mov	r4, r0
 801652e:	b301      	cbz	r1, 8016572 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8016530:	a801      	add	r0, sp, #4
 8016532:	f7ff fe3d 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016536:	892a      	ldrh	r2, [r5, #8]
 8016538:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801653c:	7928      	ldrb	r0, [r5, #4]
 801653e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8016542:	f88d 0010 	strb.w	r0, [sp, #16]
 8016546:	1ad2      	subs	r2, r2, r3
 8016548:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801654a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801654c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8016550:	441a      	add	r2, r3
 8016552:	896b      	ldrh	r3, [r5, #10]
 8016554:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8016558:	f8ad 2014 	strh.w	r2, [sp, #20]
 801655c:	1b5b      	subs	r3, r3, r5
 801655e:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8016560:	442b      	add	r3, r5
 8016562:	4d05      	ldr	r5, [pc, #20]	; (8016578 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8016564:	9503      	str	r5, [sp, #12]
 8016566:	f8ad 3016 	strh.w	r3, [sp, #22]
 801656a:	6803      	ldr	r3, [r0, #0]
 801656c:	a903      	add	r1, sp, #12
 801656e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8016570:	4798      	blx	r3
 8016572:	b007      	add	sp, #28
 8016574:	bd30      	pop	{r4, r5, pc}
 8016576:	bf00      	nop
 8016578:	0802a710 	.word	0x0802a710

0801657c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801657c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016580:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8016582:	b08a      	sub	sp, #40	; 0x28
 8016584:	4604      	mov	r4, r0
 8016586:	460d      	mov	r5, r1
 8016588:	b113      	cbz	r3, 8016590 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801658a:	790b      	ldrb	r3, [r1, #4]
 801658c:	2b00      	cmp	r3, #0
 801658e:	d044      	beq.n	801661a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016590:	f104 0804 	add.w	r8, r4, #4
 8016594:	4641      	mov	r1, r8
 8016596:	a803      	add	r0, sp, #12
 8016598:	f7ff fe0a 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801659c:	792b      	ldrb	r3, [r5, #4]
 801659e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80165a2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 80165a6:	b983      	cbnz	r3, 80165ca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 80165a8:	892a      	ldrh	r2, [r5, #8]
 80165aa:	88e9      	ldrh	r1, [r5, #6]
 80165ac:	f104 0336 	add.w	r3, r4, #54	; 0x36
 80165b0:	1b92      	subs	r2, r2, r6
 80165b2:	1bc9      	subs	r1, r1, r7
 80165b4:	9301      	str	r3, [sp, #4]
 80165b6:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80165ba:	9300      	str	r3, [sp, #0]
 80165bc:	b212      	sxth	r2, r2
 80165be:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80165c2:	b209      	sxth	r1, r1
 80165c4:	4640      	mov	r0, r8
 80165c6:	f7f9 f975 	bl	800f8b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80165ca:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80165cc:	b329      	cbz	r1, 801661a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80165ce:	a805      	add	r0, sp, #20
 80165d0:	f7ff fdee 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80165d4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80165d8:	792b      	ldrb	r3, [r5, #4]
 80165da:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80165dc:	f88d 3020 	strb.w	r3, [sp, #32]
 80165e0:	1abf      	subs	r7, r7, r2
 80165e2:	88ea      	ldrh	r2, [r5, #6]
 80165e4:	4417      	add	r7, r2
 80165e6:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80165e8:	4417      	add	r7, r2
 80165ea:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80165ee:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80165f2:	1ab6      	subs	r6, r6, r2
 80165f4:	892a      	ldrh	r2, [r5, #8]
 80165f6:	4416      	add	r6, r2
 80165f8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80165fa:	4416      	add	r6, r2
 80165fc:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8016600:	4a07      	ldr	r2, [pc, #28]	; (8016620 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8016602:	9207      	str	r2, [sp, #28]
 8016604:	2600      	movs	r6, #0
 8016606:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801660a:	6803      	ldr	r3, [r0, #0]
 801660c:	a907      	add	r1, sp, #28
 801660e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8016610:	4798      	blx	r3
 8016612:	792b      	ldrb	r3, [r5, #4]
 8016614:	b10b      	cbz	r3, 801661a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8016616:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801661a:	b00a      	add	sp, #40	; 0x28
 801661c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016620:	0802a6e8 	.word	0x0802a6e8

08016624 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8016624:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016628:	460c      	mov	r4, r1
 801662a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801662c:	b088      	sub	sp, #32
 801662e:	4605      	mov	r5, r0
 8016630:	2900      	cmp	r1, #0
 8016632:	d06d      	beq.n	8016710 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8016634:	4668      	mov	r0, sp
 8016636:	f7ff fdbb 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801663a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801663c:	88e3      	ldrh	r3, [r4, #6]
 801663e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8016642:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8016646:	440b      	add	r3, r1
 8016648:	b21b      	sxth	r3, r3
 801664a:	4543      	cmp	r3, r8
 801664c:	db31      	blt.n	80166b2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801664e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8016652:	44c4      	add	ip, r8
 8016654:	fa0f fc8c 	sxth.w	ip, ip
 8016658:	4563      	cmp	r3, ip
 801665a:	da2a      	bge.n	80166b2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801665c:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801665e:	8926      	ldrh	r6, [r4, #8]
 8016660:	4416      	add	r6, r2
 8016662:	b236      	sxth	r6, r6
 8016664:	42be      	cmp	r6, r7
 8016666:	db24      	blt.n	80166b2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016668:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801666c:	4438      	add	r0, r7
 801666e:	b200      	sxth	r0, r0
 8016670:	4286      	cmp	r6, r0
 8016672:	da1e      	bge.n	80166b2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016674:	8963      	ldrh	r3, [r4, #10]
 8016676:	4419      	add	r1, r3
 8016678:	b209      	sxth	r1, r1
 801667a:	4541      	cmp	r1, r8
 801667c:	db08      	blt.n	8016690 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801667e:	4561      	cmp	r1, ip
 8016680:	da06      	bge.n	8016690 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8016682:	89a3      	ldrh	r3, [r4, #12]
 8016684:	441a      	add	r2, r3
 8016686:	b212      	sxth	r2, r2
 8016688:	42ba      	cmp	r2, r7
 801668a:	db01      	blt.n	8016690 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801668c:	4282      	cmp	r2, r0
 801668e:	db10      	blt.n	80166b2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8016690:	4b21      	ldr	r3, [pc, #132]	; (8016718 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8016692:	9304      	str	r3, [sp, #16]
 8016694:	2302      	movs	r3, #2
 8016696:	f88d 3014 	strb.w	r3, [sp, #20]
 801669a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801669c:	2300      	movs	r3, #0
 801669e:	f8ad 3016 	strh.w	r3, [sp, #22]
 80166a2:	f8ad 3018 	strh.w	r3, [sp, #24]
 80166a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80166aa:	6803      	ldr	r3, [r0, #0]
 80166ac:	a904      	add	r1, sp, #16
 80166ae:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80166b0:	4798      	blx	r3
 80166b2:	1d29      	adds	r1, r5, #4
 80166b4:	a802      	add	r0, sp, #8
 80166b6:	f7ff fd7b 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80166ba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80166be:	88e0      	ldrh	r0, [r4, #6]
 80166c0:	7921      	ldrb	r1, [r4, #4]
 80166c2:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80166c6:	8922      	ldrh	r2, [r4, #8]
 80166c8:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80166ca:	f88d 1014 	strb.w	r1, [sp, #20]
 80166ce:	eba3 0808 	sub.w	r8, r3, r8
 80166d2:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80166d6:	1bdf      	subs	r7, r3, r7
 80166d8:	b2bb      	uxth	r3, r7
 80166da:	fa1f f888 	uxth.w	r8, r8
 80166de:	8967      	ldrh	r7, [r4, #10]
 80166e0:	89a4      	ldrh	r4, [r4, #12]
 80166e2:	4440      	add	r0, r8
 80166e4:	4460      	add	r0, ip
 80166e6:	441a      	add	r2, r3
 80166e8:	44b8      	add	r8, r7
 80166ea:	4423      	add	r3, r4
 80166ec:	f8ad 0016 	strh.w	r0, [sp, #22]
 80166f0:	4433      	add	r3, r6
 80166f2:	4432      	add	r2, r6
 80166f4:	44e0      	add	r8, ip
 80166f6:	4c09      	ldr	r4, [pc, #36]	; (801671c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80166f8:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80166fa:	9404      	str	r4, [sp, #16]
 80166fc:	f8ad 2018 	strh.w	r2, [sp, #24]
 8016700:	f8ad 801a 	strh.w	r8, [sp, #26]
 8016704:	f8ad 301c 	strh.w	r3, [sp, #28]
 8016708:	6803      	ldr	r3, [r0, #0]
 801670a:	a904      	add	r1, sp, #16
 801670c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801670e:	4798      	blx	r3
 8016710:	b008      	add	sp, #32
 8016712:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016716:	bf00      	nop
 8016718:	0802a6e8 	.word	0x0802a6e8
 801671c:	0802a6fc 	.word	0x0802a6fc

08016720 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8016720:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8016722:	4604      	mov	r4, r0
 8016724:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8016728:	3201      	adds	r2, #1
 801672a:	d112      	bne.n	8016752 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801672c:	6803      	ldr	r3, [r0, #0]
 801672e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8016732:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8016736:	f8ad 1004 	strh.w	r1, [sp, #4]
 801673a:	2500      	movs	r5, #0
 801673c:	9500      	str	r5, [sp, #0]
 801673e:	466d      	mov	r5, sp
 8016740:	4629      	mov	r1, r5
 8016742:	f8ad 2006 	strh.w	r2, [sp, #6]
 8016746:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016748:	4798      	blx	r3
 801674a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801674e:	e884 0003 	stmia.w	r4, {r0, r1}
 8016752:	4620      	mov	r0, r4
 8016754:	b003      	add	sp, #12
 8016756:	bd30      	pop	{r4, r5, pc}

08016758 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8016758:	b513      	push	{r0, r1, r4, lr}
 801675a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801675e:	3301      	adds	r3, #1
 8016760:	4604      	mov	r4, r0
 8016762:	d109      	bne.n	8016778 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8016764:	4601      	mov	r1, r0
 8016766:	4668      	mov	r0, sp
 8016768:	f7ff fd22 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801676c:	f8bd 3000 	ldrh.w	r3, [sp]
 8016770:	8423      	strh	r3, [r4, #32]
 8016772:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016776:	8463      	strh	r3, [r4, #34]	; 0x22
 8016778:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801677c:	b002      	add	sp, #8
 801677e:	bd10      	pop	{r4, pc}

08016780 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8016780:	b513      	push	{r0, r1, r4, lr}
 8016782:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8016786:	3301      	adds	r3, #1
 8016788:	4604      	mov	r4, r0
 801678a:	d109      	bne.n	80167a0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801678c:	4601      	mov	r1, r0
 801678e:	4668      	mov	r0, sp
 8016790:	f7ff fd0e 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016794:	f8bd 3000 	ldrh.w	r3, [sp]
 8016798:	8423      	strh	r3, [r4, #32]
 801679a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801679e:	8463      	strh	r3, [r4, #34]	; 0x22
 80167a0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 80167a4:	b002      	add	sp, #8
 80167a6:	bd10      	pop	{r4, pc}

080167a8 <_ZN8touchgfx6ScreenC1Ev>:
 80167a8:	b570      	push	{r4, r5, r6, lr}
 80167aa:	4605      	mov	r5, r0
 80167ac:	4b16      	ldr	r3, [pc, #88]	; (8016808 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 80167ae:	f845 3b04 	str.w	r3, [r5], #4
 80167b2:	2300      	movs	r3, #0
 80167b4:	8103      	strh	r3, [r0, #8]
 80167b6:	8143      	strh	r3, [r0, #10]
 80167b8:	8183      	strh	r3, [r0, #12]
 80167ba:	81c3      	strh	r3, [r0, #14]
 80167bc:	8203      	strh	r3, [r0, #16]
 80167be:	8243      	strh	r3, [r0, #18]
 80167c0:	8283      	strh	r3, [r0, #20]
 80167c2:	82c3      	strh	r3, [r0, #22]
 80167c4:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80167c8:	6203      	str	r3, [r0, #32]
 80167ca:	8483      	strh	r3, [r0, #36]	; 0x24
 80167cc:	84c3      	strh	r3, [r0, #38]	; 0x26
 80167ce:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80167d2:	4a0e      	ldr	r2, [pc, #56]	; (801680c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80167d4:	6343      	str	r3, [r0, #52]	; 0x34
 80167d6:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80167da:	4b0d      	ldr	r3, [pc, #52]	; (8016810 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80167dc:	6042      	str	r2, [r0, #4]
 80167de:	f9b3 6000 	ldrsh.w	r6, [r3]
 80167e2:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80167e4:	4a0b      	ldr	r2, [pc, #44]	; (8016814 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80167e6:	4604      	mov	r4, r0
 80167e8:	2101      	movs	r1, #1
 80167ea:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80167ee:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80167f2:	f9b2 1000 	ldrsh.w	r1, [r2]
 80167f6:	4628      	mov	r0, r5
 80167f8:	4798      	blx	r3
 80167fa:	6863      	ldr	r3, [r4, #4]
 80167fc:	4628      	mov	r0, r5
 80167fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8016800:	4631      	mov	r1, r6
 8016802:	4798      	blx	r3
 8016804:	4620      	mov	r0, r4
 8016806:	bd70      	pop	{r4, r5, r6, pc}
 8016808:	0802a724 	.word	0x0802a724
 801680c:	08029f28 	.word	0x08029f28
 8016810:	2000ef12 	.word	0x2000ef12
 8016814:	2000ef10 	.word	0x2000ef10

08016818 <_ZN8touchgfx6Screen4drawEv>:
 8016818:	b507      	push	{r0, r1, r2, lr}
 801681a:	4b09      	ldr	r3, [pc, #36]	; (8016840 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801681c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8016820:	4b08      	ldr	r3, [pc, #32]	; (8016844 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8016822:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016826:	f9b3 3000 	ldrsh.w	r3, [r3]
 801682a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801682e:	6803      	ldr	r3, [r0, #0]
 8016830:	2100      	movs	r1, #0
 8016832:	9100      	str	r1, [sp, #0]
 8016834:	689b      	ldr	r3, [r3, #8]
 8016836:	4669      	mov	r1, sp
 8016838:	4798      	blx	r3
 801683a:	b003      	add	sp, #12
 801683c:	f85d fb04 	ldr.w	pc, [sp], #4
 8016840:	2000ef10 	.word	0x2000ef10
 8016844:	2000ef12 	.word	0x2000ef12

08016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8016848:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801684c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8016850:	2b00      	cmp	r3, #0
 8016852:	b089      	sub	sp, #36	; 0x24
 8016854:	4680      	mov	r8, r0
 8016856:	460c      	mov	r4, r1
 8016858:	4615      	mov	r5, r2
 801685a:	dd0e      	ble.n	801687a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801685c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8016860:	2b00      	cmp	r3, #0
 8016862:	dd0a      	ble.n	801687a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016864:	4628      	mov	r0, r5
 8016866:	f7ff ff5b 	bl	8016720 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801686a:	4621      	mov	r1, r4
 801686c:	f7fe fa3d 	bl	8014cea <_ZNK8touchgfx4Rect9intersectERKS0_>
 8016870:	69eb      	ldr	r3, [r5, #28]
 8016872:	b928      	cbnz	r0, 8016880 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8016874:	461d      	mov	r5, r3
 8016876:	2b00      	cmp	r3, #0
 8016878:	d1f4      	bne.n	8016864 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801687a:	b009      	add	sp, #36	; 0x24
 801687c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016880:	ae04      	add	r6, sp, #16
 8016882:	2b00      	cmp	r3, #0
 8016884:	f000 80b5 	beq.w	80169f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016888:	682b      	ldr	r3, [r5, #0]
 801688a:	4629      	mov	r1, r5
 801688c:	68db      	ldr	r3, [r3, #12]
 801688e:	a802      	add	r0, sp, #8
 8016890:	4798      	blx	r3
 8016892:	4628      	mov	r0, r5
 8016894:	f7ff ff60 	bl	8016758 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016898:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801689c:	4407      	add	r7, r0
 801689e:	4628      	mov	r0, r5
 80168a0:	f7ff ff6e 	bl	8016780 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80168a4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80168a8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 80168ac:	f8ad 2014 	strh.w	r2, [sp, #20]
 80168b0:	4418      	add	r0, r3
 80168b2:	4621      	mov	r1, r4
 80168b4:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80168b8:	f8ad 0012 	strh.w	r0, [sp, #18]
 80168bc:	b23f      	sxth	r7, r7
 80168be:	4630      	mov	r0, r6
 80168c0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80168c4:	f8ad 7010 	strh.w	r7, [sp, #16]
 80168c8:	f7f9 f8d8 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 80168cc:	4628      	mov	r0, r5
 80168ce:	f7ff ff27 	bl	8016720 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80168d2:	4602      	mov	r2, r0
 80168d4:	e896 0003 	ldmia.w	r6, {r0, r1}
 80168d8:	ab06      	add	r3, sp, #24
 80168da:	e883 0003 	stmia.w	r3, {r0, r1}
 80168de:	4611      	mov	r1, r2
 80168e0:	4618      	mov	r0, r3
 80168e2:	f7f9 f8cb 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 80168e6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80168ea:	f9b4 1000 	ldrsh.w	r1, [r4]
 80168ee:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80168f2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80168f6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80168fa:	4299      	cmp	r1, r3
 80168fc:	d10b      	bne.n	8016916 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80168fe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016902:	4552      	cmp	r2, sl
 8016904:	d107      	bne.n	8016916 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016906:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801690a:	455a      	cmp	r2, fp
 801690c:	d103      	bne.n	8016916 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801690e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016912:	454a      	cmp	r2, r9
 8016914:	d06d      	beq.n	80169f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016916:	f1bb 0f00 	cmp.w	fp, #0
 801691a:	dd65      	ble.n	80169e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801691c:	f1b9 0f00 	cmp.w	r9, #0
 8016920:	dd62      	ble.n	80169e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016922:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016926:	fa1f f08a 	uxth.w	r0, sl
 801692a:	4552      	cmp	r2, sl
 801692c:	9000      	str	r0, [sp, #0]
 801692e:	da12      	bge.n	8016956 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016930:	9301      	str	r3, [sp, #4]
 8016932:	9b00      	ldr	r3, [sp, #0]
 8016934:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016938:	f8ad 2012 	strh.w	r2, [sp, #18]
 801693c:	1a9a      	subs	r2, r3, r2
 801693e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016942:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016946:	f8ad 2016 	strh.w	r2, [sp, #22]
 801694a:	69ea      	ldr	r2, [r5, #28]
 801694c:	4631      	mov	r1, r6
 801694e:	4640      	mov	r0, r8
 8016950:	f7ff ff7a 	bl	8016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016954:	9b01      	ldr	r3, [sp, #4]
 8016956:	f9b4 2000 	ldrsh.w	r2, [r4]
 801695a:	429a      	cmp	r2, r3
 801695c:	b29f      	uxth	r7, r3
 801695e:	da0d      	bge.n	801697c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016960:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016964:	1aba      	subs	r2, r7, r2
 8016966:	f8ad a012 	strh.w	sl, [sp, #18]
 801696a:	f8ad 2014 	strh.w	r2, [sp, #20]
 801696e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016972:	69ea      	ldr	r2, [r5, #28]
 8016974:	4631      	mov	r1, r6
 8016976:	4640      	mov	r0, r8
 8016978:	f7ff ff66 	bl	8016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801697c:	8822      	ldrh	r2, [r4, #0]
 801697e:	88a3      	ldrh	r3, [r4, #4]
 8016980:	445f      	add	r7, fp
 8016982:	4413      	add	r3, r2
 8016984:	b29b      	uxth	r3, r3
 8016986:	b2bf      	uxth	r7, r7
 8016988:	b23a      	sxth	r2, r7
 801698a:	b219      	sxth	r1, r3
 801698c:	4291      	cmp	r1, r2
 801698e:	dd0d      	ble.n	80169ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016990:	1bdb      	subs	r3, r3, r7
 8016992:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016996:	f8ad a012 	strh.w	sl, [sp, #18]
 801699a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801699e:	f8ad 9016 	strh.w	r9, [sp, #22]
 80169a2:	69ea      	ldr	r2, [r5, #28]
 80169a4:	4631      	mov	r1, r6
 80169a6:	4640      	mov	r0, r8
 80169a8:	f7ff ff4e 	bl	8016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169ac:	88e2      	ldrh	r2, [r4, #6]
 80169ae:	8863      	ldrh	r3, [r4, #2]
 80169b0:	4413      	add	r3, r2
 80169b2:	9a00      	ldr	r2, [sp, #0]
 80169b4:	444a      	add	r2, r9
 80169b6:	b29b      	uxth	r3, r3
 80169b8:	fa1f f982 	uxth.w	r9, r2
 80169bc:	fa0f f289 	sxth.w	r2, r9
 80169c0:	b219      	sxth	r1, r3
 80169c2:	428a      	cmp	r2, r1
 80169c4:	da15      	bge.n	80169f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80169c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80169ca:	f9b4 0000 	ldrsh.w	r0, [r4]
 80169ce:	f8ad 1014 	strh.w	r1, [sp, #20]
 80169d2:	eba3 0309 	sub.w	r3, r3, r9
 80169d6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80169da:	f8ad 2012 	strh.w	r2, [sp, #18]
 80169de:	f8ad 3016 	strh.w	r3, [sp, #22]
 80169e2:	69ea      	ldr	r2, [r5, #28]
 80169e4:	4631      	mov	r1, r6
 80169e6:	e001      	b.n	80169ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80169e8:	69ea      	ldr	r2, [r5, #28]
 80169ea:	4621      	mov	r1, r4
 80169ec:	4640      	mov	r0, r8
 80169ee:	f7ff ff2b 	bl	8016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80169f2:	4628      	mov	r0, r5
 80169f4:	f7ff fe94 	bl	8016720 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80169f8:	6861      	ldr	r1, [r4, #4]
 80169fa:	4602      	mov	r2, r0
 80169fc:	6820      	ldr	r0, [r4, #0]
 80169fe:	4633      	mov	r3, r6
 8016a00:	c303      	stmia	r3!, {r0, r1}
 8016a02:	4611      	mov	r1, r2
 8016a04:	4630      	mov	r0, r6
 8016a06:	f7f9 f839 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8016a0a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8016a0e:	2b00      	cmp	r3, #0
 8016a10:	f77f af33 	ble.w	801687a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a14:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016a18:	2b00      	cmp	r3, #0
 8016a1a:	f77f af2e 	ble.w	801687a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016a1e:	4628      	mov	r0, r5
 8016a20:	f7ff fe9a 	bl	8016758 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016a24:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016a28:	1a18      	subs	r0, r3, r0
 8016a2a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8016a2e:	4628      	mov	r0, r5
 8016a30:	f7ff fea6 	bl	8016780 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016a34:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016a38:	1a18      	subs	r0, r3, r0
 8016a3a:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016a3e:	682b      	ldr	r3, [r5, #0]
 8016a40:	4631      	mov	r1, r6
 8016a42:	689b      	ldr	r3, [r3, #8]
 8016a44:	4628      	mov	r0, r5
 8016a46:	4798      	blx	r3
 8016a48:	e717      	b.n	801687a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08016a4a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8016a4a:	b570      	push	{r4, r5, r6, lr}
 8016a4c:	460c      	mov	r4, r1
 8016a4e:	b086      	sub	sp, #24
 8016a50:	1d06      	adds	r6, r0, #4
 8016a52:	2300      	movs	r3, #0
 8016a54:	4631      	mov	r1, r6
 8016a56:	4605      	mov	r5, r0
 8016a58:	a802      	add	r0, sp, #8
 8016a5a:	9301      	str	r3, [sp, #4]
 8016a5c:	f7ff fba8 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016a60:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016a64:	8822      	ldrh	r2, [r4, #0]
 8016a66:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8016a6a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016a6e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016a72:	1ad2      	subs	r2, r2, r3
 8016a74:	8863      	ldrh	r3, [r4, #2]
 8016a76:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016a7a:	1a5b      	subs	r3, r3, r1
 8016a7c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016a80:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016a84:	aa01      	add	r2, sp, #4
 8016a86:	a904      	add	r1, sp, #16
 8016a88:	4630      	mov	r0, r6
 8016a8a:	f8ad 3012 	strh.w	r3, [sp, #18]
 8016a8e:	f7f9 f8cd 	bl	800fc2c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016a92:	9a01      	ldr	r2, [sp, #4]
 8016a94:	b11a      	cbz	r2, 8016a9e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016a96:	4621      	mov	r1, r4
 8016a98:	4628      	mov	r0, r5
 8016a9a:	f7ff fed5 	bl	8016848 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016a9e:	b006      	add	sp, #24
 8016aa0:	bd70      	pop	{r4, r5, r6, pc}

08016aa2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8016aa2:	b530      	push	{r4, r5, lr}
 8016aa4:	4602      	mov	r2, r0
 8016aa6:	4604      	mov	r4, r0
 8016aa8:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8016aac:	b085      	sub	sp, #20
 8016aae:	460d      	mov	r5, r1
 8016ab0:	6851      	ldr	r1, [r2, #4]
 8016ab2:	466b      	mov	r3, sp
 8016ab4:	c303      	stmia	r3!, {r0, r1}
 8016ab6:	4629      	mov	r1, r5
 8016ab8:	4668      	mov	r0, sp
 8016aba:	f7f8 ffdf 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 8016abe:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8016ac2:	b12b      	cbz	r3, 8016ad0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8016ac4:	4669      	mov	r1, sp
 8016ac6:	4620      	mov	r0, r4
 8016ac8:	f7ff ffbf 	bl	8016a4a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8016acc:	b005      	add	sp, #20
 8016ace:	bd30      	pop	{r4, r5, pc}
 8016ad0:	3404      	adds	r4, #4
 8016ad2:	4621      	mov	r1, r4
 8016ad4:	a802      	add	r0, sp, #8
 8016ad6:	f7ff fb6b 	bl	80161b0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016ada:	f8bd 3000 	ldrh.w	r3, [sp]
 8016ade:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8016ae2:	1a9b      	subs	r3, r3, r2
 8016ae4:	f8ad 3000 	strh.w	r3, [sp]
 8016ae8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016aec:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8016af0:	4669      	mov	r1, sp
 8016af2:	1a9b      	subs	r3, r3, r2
 8016af4:	4620      	mov	r0, r4
 8016af6:	f8ad 3002 	strh.w	r3, [sp, #2]
 8016afa:	f7f9 f85e 	bl	800fbba <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8016afe:	e7e5      	b.n	8016acc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016b00 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016b00:	680a      	ldr	r2, [r1, #0]
 8016b02:	460b      	mov	r3, r1
 8016b04:	6992      	ldr	r2, [r2, #24]
 8016b06:	1d01      	adds	r1, r0, #4
 8016b08:	4618      	mov	r0, r3
 8016b0a:	4710      	bx	r2

08016b0c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8016b0c:	4298      	cmp	r0, r3
 8016b0e:	d200      	bcs.n	8016b12 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8016b10:	b913      	cbnz	r3, 8016b18 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8016b12:	440a      	add	r2, r1
 8016b14:	b210      	sxth	r0, r2
 8016b16:	4770      	bx	lr
 8016b18:	ee07 0a90 	vmov	s15, r0
 8016b1c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8016b20:	ee07 3a90 	vmov	s15, r3
 8016b24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b28:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8016b2c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016b30:	ee37 7a66 	vsub.f32	s14, s14, s13
 8016b34:	ee07 2a90 	vmov	s15, r2
 8016b38:	ee67 5a07 	vmul.f32	s11, s14, s14
 8016b3c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8016b40:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016b44:	ee07 1a90 	vmov	s15, r1
 8016b48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016b4c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016b50:	eee6 7a26 	vfma.f32	s15, s12, s13
 8016b54:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016b58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016b5c:	bfcc      	ite	gt
 8016b5e:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016b62:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016b66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016b6a:	ee17 3a90 	vmov	r3, s15
 8016b6e:	b218      	sxth	r0, r3
 8016b70:	4770      	bx	lr

08016b72 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 8016b72:	4298      	cmp	r0, r3
 8016b74:	d200      	bcs.n	8016b78 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 8016b76:	b913      	cbnz	r3, 8016b7e <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 8016b78:	440a      	add	r2, r1
 8016b7a:	b210      	sxth	r0, r2
 8016b7c:	4770      	bx	lr
 8016b7e:	ee07 2a90 	vmov	s15, r2
 8016b82:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8016b86:	ee07 0a90 	vmov	s15, r0
 8016b8a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8016b8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8016b92:	ee07 3a10 	vmov	s14, r3
 8016b96:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8016b9a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8016b9e:	ee07 1a90 	vmov	s15, r1
 8016ba2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016ba6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8016baa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8016bae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016bb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016bb6:	bfcc      	ite	gt
 8016bb8:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8016bbc:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8016bc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8016bc4:	ee17 3a90 	vmov	r3, s15
 8016bc8:	b218      	sxth	r0, r3
 8016bca:	4770      	bx	lr

08016bcc <_ZN8touchgfx12TextProviderC1Ev>:
 8016bcc:	b538      	push	{r3, r4, r5, lr}
 8016bce:	2500      	movs	r5, #0
 8016bd0:	2302      	movs	r3, #2
 8016bd2:	4604      	mov	r4, r0
 8016bd4:	e9c0 5500 	strd	r5, r5, [r0]
 8016bd8:	7403      	strb	r3, [r0, #16]
 8016bda:	6145      	str	r5, [r0, #20]
 8016bdc:	7605      	strb	r5, [r0, #24]
 8016bde:	83c5      	strh	r5, [r0, #30]
 8016be0:	8405      	strh	r5, [r0, #32]
 8016be2:	86c5      	strh	r5, [r0, #54]	; 0x36
 8016be4:	8705      	strh	r5, [r0, #56]	; 0x38
 8016be6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8016be8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8016bec:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8016bf0:	220e      	movs	r2, #14
 8016bf2:	4629      	mov	r1, r5
 8016bf4:	304c      	adds	r0, #76	; 0x4c
 8016bf6:	f00f fda5 	bl	8026744 <memset>
 8016bfa:	2301      	movs	r3, #1
 8016bfc:	4620      	mov	r0, r4
 8016bfe:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8016c02:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016c06:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8016c0a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8016c0e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8016c12:	f7f1 fa57 	bl	80080c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016c16:	4620      	mov	r0, r4
 8016c18:	bd38      	pop	{r3, r4, r5, pc}

08016c1a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8016c1a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8016c1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016c20:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8016c22:	fab0 f080 	clz	r0, r0
 8016c26:	0940      	lsrs	r0, r0, #5
 8016c28:	4770      	bx	lr

08016c2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8016c2a:	b530      	push	{r4, r5, lr}
 8016c2c:	2500      	movs	r5, #0
 8016c2e:	2401      	movs	r4, #1
 8016c30:	6843      	ldr	r3, [r0, #4]
 8016c32:	b913      	cbnz	r3, 8016c3a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016c34:	6803      	ldr	r3, [r0, #0]
 8016c36:	b313      	cbz	r3, 8016c7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c38:	6043      	str	r3, [r0, #4]
 8016c3a:	7e03      	ldrb	r3, [r0, #24]
 8016c3c:	b143      	cbz	r3, 8016c50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8016c3e:	6943      	ldr	r3, [r0, #20]
 8016c40:	b12b      	cbz	r3, 8016c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c42:	881a      	ldrh	r2, [r3, #0]
 8016c44:	b11a      	cbz	r2, 8016c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016c46:	1c9a      	adds	r2, r3, #2
 8016c48:	6142      	str	r2, [r0, #20]
 8016c4a:	8818      	ldrh	r0, [r3, #0]
 8016c4c:	bd30      	pop	{r4, r5, pc}
 8016c4e:	7605      	strb	r5, [r0, #24]
 8016c50:	6843      	ldr	r3, [r0, #4]
 8016c52:	8819      	ldrh	r1, [r3, #0]
 8016c54:	b199      	cbz	r1, 8016c7e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016c56:	1c9a      	adds	r2, r3, #2
 8016c58:	2902      	cmp	r1, #2
 8016c5a:	6042      	str	r2, [r0, #4]
 8016c5c:	d1f5      	bne.n	8016c4a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8016c5e:	7c03      	ldrb	r3, [r0, #16]
 8016c60:	2b01      	cmp	r3, #1
 8016c62:	d8e5      	bhi.n	8016c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c64:	1c5a      	adds	r2, r3, #1
 8016c66:	3302      	adds	r3, #2
 8016c68:	7402      	strb	r2, [r0, #16]
 8016c6a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8016c6e:	6143      	str	r3, [r0, #20]
 8016c70:	2b00      	cmp	r3, #0
 8016c72:	d0dd      	beq.n	8016c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c74:	881b      	ldrh	r3, [r3, #0]
 8016c76:	2b00      	cmp	r3, #0
 8016c78:	d0da      	beq.n	8016c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c7a:	7604      	strb	r4, [r0, #24]
 8016c7c:	e7d8      	b.n	8016c30 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016c7e:	2000      	movs	r0, #0
 8016c80:	e7e4      	b.n	8016c4c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8016c82:	b430      	push	{r4, r5}
 8016c84:	6001      	str	r1, [r0, #0]
 8016c86:	2100      	movs	r1, #0
 8016c88:	6041      	str	r1, [r0, #4]
 8016c8a:	6815      	ldr	r5, [r2, #0]
 8016c8c:	6085      	str	r5, [r0, #8]
 8016c8e:	6852      	ldr	r2, [r2, #4]
 8016c90:	6443      	str	r3, [r0, #68]	; 0x44
 8016c92:	9b02      	ldr	r3, [sp, #8]
 8016c94:	60c2      	str	r2, [r0, #12]
 8016c96:	7401      	strb	r1, [r0, #16]
 8016c98:	6141      	str	r1, [r0, #20]
 8016c9a:	7601      	strb	r1, [r0, #24]
 8016c9c:	8701      	strh	r1, [r0, #56]	; 0x38
 8016c9e:	8401      	strh	r1, [r0, #32]
 8016ca0:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8016ca4:	6483      	str	r3, [r0, #72]	; 0x48
 8016ca6:	bc30      	pop	{r4, r5}
 8016ca8:	f7f1 ba0c 	b.w	80080c4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08016cac <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8016cac:	b408      	push	{r3}
 8016cae:	b510      	push	{r4, lr}
 8016cb0:	b085      	sub	sp, #20
 8016cb2:	ac07      	add	r4, sp, #28
 8016cb4:	f854 3b04 	ldr.w	r3, [r4], #4
 8016cb8:	9300      	str	r3, [sp, #0]
 8016cba:	4613      	mov	r3, r2
 8016cbc:	4622      	mov	r2, r4
 8016cbe:	9403      	str	r4, [sp, #12]
 8016cc0:	f7ff ffdf 	bl	8016c82 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8016cc4:	b005      	add	sp, #20
 8016cc6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8016cca:	b001      	add	sp, #4
 8016ccc:	4770      	bx	lr

08016cce <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8016cce:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016cd0:	4605      	mov	r5, r0
 8016cd2:	4608      	mov	r0, r1
 8016cd4:	b1e9      	cbz	r1, 8016d12 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8016cd6:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8016cda:	460b      	mov	r3, r1
 8016cdc:	f101 0708 	add.w	r7, r1, #8
 8016ce0:	4622      	mov	r2, r4
 8016ce2:	6818      	ldr	r0, [r3, #0]
 8016ce4:	6859      	ldr	r1, [r3, #4]
 8016ce6:	4626      	mov	r6, r4
 8016ce8:	c603      	stmia	r6!, {r0, r1}
 8016cea:	3308      	adds	r3, #8
 8016cec:	42bb      	cmp	r3, r7
 8016cee:	4634      	mov	r4, r6
 8016cf0:	d1f7      	bne.n	8016ce2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016cf2:	6818      	ldr	r0, [r3, #0]
 8016cf4:	6030      	str	r0, [r6, #0]
 8016cf6:	889b      	ldrh	r3, [r3, #4]
 8016cf8:	80b3      	strh	r3, [r6, #4]
 8016cfa:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8016cfe:	015b      	lsls	r3, r3, #5
 8016d00:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8016d04:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8016d08:	430b      	orrs	r3, r1
 8016d0a:	425b      	negs	r3, r3
 8016d0c:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8016d10:	4610      	mov	r0, r2
 8016d12:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016d14 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016d14:	b538      	push	{r3, r4, r5, lr}
 8016d16:	460c      	mov	r4, r1
 8016d18:	6811      	ldr	r1, [r2, #0]
 8016d1a:	4610      	mov	r0, r2
 8016d1c:	68cd      	ldr	r5, [r1, #12]
 8016d1e:	4619      	mov	r1, r3
 8016d20:	47a8      	blx	r5
 8016d22:	2800      	cmp	r0, #0
 8016d24:	bf08      	it	eq
 8016d26:	4620      	moveq	r0, r4
 8016d28:	bd38      	pop	{r3, r4, r5, pc}
	...

08016d2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8016d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016d2e:	4604      	mov	r4, r0
 8016d30:	4615      	mov	r5, r2
 8016d32:	4608      	mov	r0, r1
 8016d34:	b93a      	cbnz	r2, 8016d46 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8016d36:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016d3a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8016d3e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8016d42:	4628      	mov	r0, r5
 8016d44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016d46:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8016d4a:	8893      	ldrh	r3, [r2, #4]
 8016d4c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8016d50:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016d54:	79ee      	ldrb	r6, [r5, #7]
 8016d56:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8016d5a:	4316      	orrs	r6, r2
 8016d5c:	19da      	adds	r2, r3, r7
 8016d5e:	b291      	uxth	r1, r2
 8016d60:	291d      	cmp	r1, #29
 8016d62:	b2b7      	uxth	r7, r6
 8016d64:	d87a      	bhi.n	8016e5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d66:	2201      	movs	r2, #1
 8016d68:	408a      	lsls	r2, r1
 8016d6a:	4975      	ldr	r1, [pc, #468]	; (8016f40 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8016d6c:	420a      	tst	r2, r1
 8016d6e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8016d72:	d12d      	bne.n	8016dd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016d74:	f412 7f60 	tst.w	r2, #896	; 0x380
 8016d78:	d070      	beq.n	8016e5c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8016d7a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8016d7e:	462b      	mov	r3, r5
 8016d80:	f105 0e08 	add.w	lr, r5, #8
 8016d84:	4615      	mov	r5, r2
 8016d86:	6818      	ldr	r0, [r3, #0]
 8016d88:	6859      	ldr	r1, [r3, #4]
 8016d8a:	4694      	mov	ip, r2
 8016d8c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8016d90:	3308      	adds	r3, #8
 8016d92:	4573      	cmp	r3, lr
 8016d94:	4662      	mov	r2, ip
 8016d96:	d1f6      	bne.n	8016d86 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8016d98:	6818      	ldr	r0, [r3, #0]
 8016d9a:	f8cc 0000 	str.w	r0, [ip]
 8016d9e:	889b      	ldrh	r3, [r3, #4]
 8016da0:	f8ac 3004 	strh.w	r3, [ip, #4]
 8016da4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8016da8:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8016dac:	b2b3      	uxth	r3, r6
 8016dae:	1aca      	subs	r2, r1, r3
 8016db0:	b292      	uxth	r2, r2
 8016db2:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8016db6:	10d2      	asrs	r2, r2, #3
 8016db8:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8016dbc:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8016dc0:	4302      	orrs	r2, r0
 8016dc2:	1bcf      	subs	r7, r1, r7
 8016dc4:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8016dc8:	1afb      	subs	r3, r7, r3
 8016dca:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8016dce:	e7b8      	b.n	8016d42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016dd0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8016dd2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016dd6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8016dd8:	f640 6333 	movw	r3, #3635	; 0xe33
 8016ddc:	4299      	cmp	r1, r3
 8016dde:	d110      	bne.n	8016e02 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8016de0:	6803      	ldr	r3, [r0, #0]
 8016de2:	68db      	ldr	r3, [r3, #12]
 8016de4:	4798      	blx	r3
 8016de6:	7b41      	ldrb	r1, [r0, #13]
 8016de8:	00cb      	lsls	r3, r1, #3
 8016dea:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016dee:	7a03      	ldrb	r3, [r0, #8]
 8016df0:	0648      	lsls	r0, r1, #25
 8016df2:	ea43 0302 	orr.w	r3, r3, r2
 8016df6:	bf44      	itt	mi
 8016df8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016dfc:	b21b      	sxthmi	r3, r3
 8016dfe:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e02:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8016e06:	443b      	add	r3, r7
 8016e08:	4433      	add	r3, r6
 8016e0a:	b29b      	uxth	r3, r3
 8016e0c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8016e10:	462a      	mov	r2, r5
 8016e12:	f105 0c08 	add.w	ip, r5, #8
 8016e16:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e1a:	4635      	mov	r5, r6
 8016e1c:	6810      	ldr	r0, [r2, #0]
 8016e1e:	6851      	ldr	r1, [r2, #4]
 8016e20:	4637      	mov	r7, r6
 8016e22:	c703      	stmia	r7!, {r0, r1}
 8016e24:	3208      	adds	r2, #8
 8016e26:	4562      	cmp	r2, ip
 8016e28:	463e      	mov	r6, r7
 8016e2a:	d1f7      	bne.n	8016e1c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8016e2c:	6810      	ldr	r0, [r2, #0]
 8016e2e:	6038      	str	r0, [r7, #0]
 8016e30:	8892      	ldrh	r2, [r2, #4]
 8016e32:	80ba      	strh	r2, [r7, #4]
 8016e34:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8016e38:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8016e3c:	10db      	asrs	r3, r3, #3
 8016e3e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8016e42:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8016e46:	4313      	orrs	r3, r2
 8016e48:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8016e4c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8016e50:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8016e54:	1a9b      	subs	r3, r3, r2
 8016e56:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8016e5a:	e772      	b.n	8016d42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8016e5c:	f023 0204 	bic.w	r2, r3, #4
 8016e60:	f640 611b 	movw	r1, #3611	; 0xe1b
 8016e64:	428a      	cmp	r2, r1
 8016e66:	d003      	beq.n	8016e70 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8016e68:	f640 621d 	movw	r2, #3613	; 0xe1d
 8016e6c:	4293      	cmp	r3, r2
 8016e6e:	d120      	bne.n	8016eb2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8016e70:	3b01      	subs	r3, #1
 8016e72:	4602      	mov	r2, r0
 8016e74:	b29b      	uxth	r3, r3
 8016e76:	4629      	mov	r1, r5
 8016e78:	4620      	mov	r0, r4
 8016e7a:	f7ff ff4b 	bl	8016d14 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016e7e:	7b41      	ldrb	r1, [r0, #13]
 8016e80:	00cb      	lsls	r3, r1, #3
 8016e82:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016e86:	7a03      	ldrb	r3, [r0, #8]
 8016e88:	0649      	lsls	r1, r1, #25
 8016e8a:	ea43 0302 	orr.w	r3, r3, r2
 8016e8e:	bf44      	itt	mi
 8016e90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016e94:	b21b      	sxthmi	r3, r3
 8016e96:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016e9a:	7b6b      	ldrb	r3, [r5, #13]
 8016e9c:	7aaa      	ldrb	r2, [r5, #10]
 8016e9e:	005b      	lsls	r3, r3, #1
 8016ea0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016ea4:	4313      	orrs	r3, r2
 8016ea6:	115a      	asrs	r2, r3, #5
 8016ea8:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8016eac:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016eb0:	e036      	b.n	8016f20 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8016eb2:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8016eb6:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8016eba:	7a2a      	ldrb	r2, [r5, #8]
 8016ebc:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8016ec0:	ea42 0201 	orr.w	r2, r2, r1
 8016ec4:	bf1c      	itt	ne
 8016ec6:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8016eca:	b212      	sxthne	r2, r2
 8016ecc:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8016ed0:	f640 6109 	movw	r1, #3593	; 0xe09
 8016ed4:	f023 0210 	bic.w	r2, r3, #16
 8016ed8:	428a      	cmp	r2, r1
 8016eda:	d003      	beq.n	8016ee4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8016edc:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ee0:	4293      	cmp	r3, r2
 8016ee2:	d12a      	bne.n	8016f3a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8016ee4:	7b6e      	ldrb	r6, [r5, #13]
 8016ee6:	0076      	lsls	r6, r6, #1
 8016ee8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8016eec:	7aae      	ldrb	r6, [r5, #10]
 8016eee:	4316      	orrs	r6, r2
 8016ef0:	f640 6213 	movw	r2, #3603	; 0xe13
 8016ef4:	4293      	cmp	r3, r2
 8016ef6:	bf18      	it	ne
 8016ef8:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016efc:	4602      	mov	r2, r0
 8016efe:	bf14      	ite	ne
 8016f00:	b29b      	uxthne	r3, r3
 8016f02:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8016f06:	4629      	mov	r1, r5
 8016f08:	4620      	mov	r0, r4
 8016f0a:	f7ff ff03 	bl	8016d14 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016f0e:	7b43      	ldrb	r3, [r0, #13]
 8016f10:	7a82      	ldrb	r2, [r0, #10]
 8016f12:	005b      	lsls	r3, r3, #1
 8016f14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8016f18:	4313      	orrs	r3, r2
 8016f1a:	1af6      	subs	r6, r6, r3
 8016f1c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8016f20:	7b69      	ldrb	r1, [r5, #13]
 8016f22:	00cb      	lsls	r3, r1, #3
 8016f24:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8016f28:	7a2b      	ldrb	r3, [r5, #8]
 8016f2a:	4313      	orrs	r3, r2
 8016f2c:	064a      	lsls	r2, r1, #25
 8016f2e:	bf44      	itt	mi
 8016f30:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016f34:	b21b      	sxthmi	r3, r3
 8016f36:	1bdb      	subs	r3, r3, r7
 8016f38:	e747      	b.n	8016dca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8016f3a:	2300      	movs	r3, #0
 8016f3c:	e7b6      	b.n	8016eac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8016f3e:	bf00      	nop
 8016f40:	3fc00079 	.word	0x3fc00079

08016f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016f44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016f48:	4604      	mov	r4, r0
 8016f4a:	b942      	cbnz	r2, 8016f5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8016f4c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8016f50:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8016f54:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8016f58:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8016f5c:	e047      	b.n	8016fee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016f5e:	7b51      	ldrb	r1, [r2, #13]
 8016f60:	8893      	ldrh	r3, [r2, #4]
 8016f62:	010d      	lsls	r5, r1, #4
 8016f64:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8016f68:	79d5      	ldrb	r5, [r2, #7]
 8016f6a:	4305      	orrs	r5, r0
 8016f6c:	2d04      	cmp	r5, #4
 8016f6e:	bfcc      	ite	gt
 8016f70:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016f74:	f04f 0e01 	movle.w	lr, #1
 8016f78:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8016f7c:	f200 80ab 	bhi.w	80170d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016f80:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8016f84:	4283      	cmp	r3, r0
 8016f86:	d216      	bcs.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f88:	f240 605b 	movw	r0, #1627	; 0x65b
 8016f8c:	4283      	cmp	r3, r0
 8016f8e:	d859      	bhi.n	8017044 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8016f90:	f240 6057 	movw	r0, #1623	; 0x657
 8016f94:	4283      	cmp	r3, r0
 8016f96:	d20e      	bcs.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016f98:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8016f9c:	d24a      	bcs.n	8017034 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8016f9e:	f240 604e 	movw	r0, #1614	; 0x64e
 8016fa2:	4283      	cmp	r3, r0
 8016fa4:	d207      	bcs.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016fa6:	f240 601a 	movw	r0, #1562	; 0x61a
 8016faa:	4283      	cmp	r3, r0
 8016fac:	d02a      	beq.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016fae:	d821      	bhi.n	8016ff4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016fb0:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8016fb4:	d35b      	bcc.n	801706e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016fb6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8016fba:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8016fbe:	f040 80d0 	bne.w	8017162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016fc2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8016fc6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8016fca:	f040 80ca 	bne.w	8017162 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016fce:	00cb      	lsls	r3, r1, #3
 8016fd0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8016fd4:	7a13      	ldrb	r3, [r2, #8]
 8016fd6:	0649      	lsls	r1, r1, #25
 8016fd8:	ea43 0300 	orr.w	r3, r3, r0
 8016fdc:	bf44      	itt	mi
 8016fde:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8016fe2:	b21b      	sxthmi	r3, r3
 8016fe4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8016fe8:	1b5d      	subs	r5, r3, r5
 8016fea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8016fee:	4610      	mov	r0, r2
 8016ff0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016ff4:	f240 604b 	movw	r0, #1611	; 0x64b
 8016ff8:	4283      	cmp	r3, r0
 8016ffa:	d338      	bcc.n	801706e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016ffc:	f240 604c 	movw	r0, #1612	; 0x64c
 8017000:	4283      	cmp	r3, r0
 8017002:	d9d8      	bls.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017004:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8017008:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801700c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017010:	f040 80f2 	bne.w	80171f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8017014:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017018:	f040 80ee 	bne.w	80171f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801701c:	00cb      	lsls	r3, r1, #3
 801701e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017022:	7a13      	ldrb	r3, [r2, #8]
 8017024:	064e      	lsls	r6, r1, #25
 8017026:	ea43 0300 	orr.w	r3, r3, r0
 801702a:	bf44      	itt	mi
 801702c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017030:	b21b      	sxthmi	r3, r3
 8017032:	e7d9      	b.n	8016fe8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8017034:	f240 6054 	movw	r0, #1620	; 0x654
 8017038:	4283      	cmp	r3, r0
 801703a:	d8e3      	bhi.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801703c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8017040:	d9e0      	bls.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017042:	e7b8      	b.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017044:	f240 6074 	movw	r0, #1652	; 0x674
 8017048:	4283      	cmp	r3, r0
 801704a:	d0b4      	beq.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801704c:	d82d      	bhi.n	80170aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801704e:	f240 605e 	movw	r0, #1630	; 0x65e
 8017052:	4283      	cmp	r3, r0
 8017054:	d804      	bhi.n	8017060 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8017056:	f240 605d 	movw	r0, #1629	; 0x65d
 801705a:	4283      	cmp	r3, r0
 801705c:	d3d2      	bcc.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801705e:	e7aa      	b.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017060:	f240 605f 	movw	r0, #1631	; 0x65f
 8017064:	4283      	cmp	r3, r0
 8017066:	d0cd      	beq.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017068:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801706c:	d0a3      	beq.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801706e:	00cb      	lsls	r3, r1, #3
 8017070:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8017074:	7a13      	ldrb	r3, [r2, #8]
 8017076:	0649      	lsls	r1, r1, #25
 8017078:	ea43 0300 	orr.w	r3, r3, r0
 801707c:	bf44      	itt	mi
 801707e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8017082:	b21b      	sxthmi	r3, r3
 8017084:	1b5d      	subs	r5, r3, r5
 8017086:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801708a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801708e:	7b53      	ldrb	r3, [r2, #13]
 8017090:	015b      	lsls	r3, r3, #5
 8017092:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8017096:	7993      	ldrb	r3, [r2, #6]
 8017098:	430b      	orrs	r3, r1
 801709a:	005b      	lsls	r3, r3, #1
 801709c:	2105      	movs	r1, #5
 801709e:	fb93 f3f1 	sdiv	r3, r3, r1
 80170a2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80170a6:	440b      	add	r3, r1
 80170a8:	e756      	b.n	8016f58 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80170aa:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80170ae:	4283      	cmp	r3, r0
 80170b0:	d809      	bhi.n	80170c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80170b2:	f240 60df 	movw	r0, #1759	; 0x6df
 80170b6:	4283      	cmp	r3, r0
 80170b8:	f4bf af7d 	bcs.w	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170bc:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80170c0:	2b05      	cmp	r3, #5
 80170c2:	d8d4      	bhi.n	801706e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80170c4:	e777      	b.n	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170c6:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80170ca:	4283      	cmp	r3, r0
 80170cc:	d09a      	beq.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170ce:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80170d2:	4283      	cmp	r3, r0
 80170d4:	e7ca      	b.n	801706c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80170d6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80170da:	d22b      	bcs.n	8017134 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80170dc:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80170e0:	4283      	cmp	r3, r0
 80170e2:	d28f      	bcs.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80170e4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80170e8:	4283      	cmp	r3, r0
 80170ea:	d816      	bhi.n	801711a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80170ec:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80170f0:	4283      	cmp	r3, r0
 80170f2:	f4bf af60 	bcs.w	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80170f6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80170fa:	4283      	cmp	r3, r0
 80170fc:	d80a      	bhi.n	8017114 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80170fe:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8017102:	4283      	cmp	r3, r0
 8017104:	f4bf af57 	bcs.w	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017108:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801710c:	4283      	cmp	r3, r0
 801710e:	f43f af79 	beq.w	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017112:	e7ac      	b.n	801706e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8017114:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8017118:	e7f8      	b.n	801710c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801711a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 801711e:	4283      	cmp	r3, r0
 8017120:	d802      	bhi.n	8017128 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8017122:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8017126:	e798      	b.n	801705a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8017128:	f640 00e9 	movw	r0, #2281	; 0x8e9
 801712c:	4283      	cmp	r3, r0
 801712e:	f47f af42 	bne.w	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017132:	e767      	b.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8017134:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8017138:	4283      	cmp	r3, r0
 801713a:	f43f af63 	beq.w	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801713e:	d802      	bhi.n	8017146 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8017140:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8017144:	e7f2      	b.n	801712c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8017146:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801714a:	4283      	cmp	r3, r0
 801714c:	d805      	bhi.n	801715a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801714e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8017152:	4283      	cmp	r3, r0
 8017154:	f4ff af2f 	bcc.w	8016fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8017158:	e754      	b.n	8017004 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801715a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801715e:	4283      	cmp	r3, r0
 8017160:	e7af      	b.n	80170c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8017162:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8017166:	4617      	mov	r7, r2
 8017168:	f102 0808 	add.w	r8, r2, #8
 801716c:	4666      	mov	r6, ip
 801716e:	6838      	ldr	r0, [r7, #0]
 8017170:	6879      	ldr	r1, [r7, #4]
 8017172:	46e6      	mov	lr, ip
 8017174:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8017178:	3708      	adds	r7, #8
 801717a:	4547      	cmp	r7, r8
 801717c:	46f4      	mov	ip, lr
 801717e:	d1f6      	bne.n	801716e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8017180:	6838      	ldr	r0, [r7, #0]
 8017182:	f8ce 0000 	str.w	r0, [lr]
 8017186:	88b9      	ldrh	r1, [r7, #4]
 8017188:	f8ae 1004 	strh.w	r1, [lr, #4]
 801718c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017190:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8017194:	d009      	beq.n	80171aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8017196:	7b51      	ldrb	r1, [r2, #13]
 8017198:	7992      	ldrb	r2, [r2, #6]
 801719a:	0149      	lsls	r1, r1, #5
 801719c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80171a0:	4311      	orrs	r1, r2
 80171a2:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80171a6:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80171aa:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80171ae:	b2ad      	uxth	r5, r5
 80171b0:	d00d      	beq.n	80171ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80171b2:	442b      	add	r3, r5
 80171b4:	b29b      	uxth	r3, r3
 80171b6:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80171ba:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80171be:	10db      	asrs	r3, r3, #3
 80171c0:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80171c4:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80171c8:	4313      	orrs	r3, r2
 80171ca:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80171ce:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80171d2:	00cb      	lsls	r3, r1, #3
 80171d4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80171d8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80171dc:	064f      	lsls	r7, r1, #25
 80171de:	ea43 0302 	orr.w	r3, r3, r2
 80171e2:	bf44      	itt	mi
 80171e4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80171e8:	b21b      	sxthmi	r3, r3
 80171ea:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80171ee:	1b5b      	subs	r3, r3, r5
 80171f0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80171f4:	4632      	mov	r2, r6
 80171f6:	e6fa      	b.n	8016fee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80171f8:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80171fc:	4617      	mov	r7, r2
 80171fe:	f102 0908 	add.w	r9, r2, #8
 8017202:	4666      	mov	r6, ip
 8017204:	6838      	ldr	r0, [r7, #0]
 8017206:	6879      	ldr	r1, [r7, #4]
 8017208:	46e0      	mov	r8, ip
 801720a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801720e:	3708      	adds	r7, #8
 8017210:	454f      	cmp	r7, r9
 8017212:	46c4      	mov	ip, r8
 8017214:	d1f6      	bne.n	8017204 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8017216:	6838      	ldr	r0, [r7, #0]
 8017218:	f8c8 0000 	str.w	r0, [r8]
 801721c:	88b9      	ldrh	r1, [r7, #4]
 801721e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8017222:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8017226:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801722a:	d009      	beq.n	8017240 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801722c:	7b51      	ldrb	r1, [r2, #13]
 801722e:	7992      	ldrb	r2, [r2, #6]
 8017230:	0149      	lsls	r1, r1, #5
 8017232:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8017236:	4311      	orrs	r1, r2
 8017238:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801723c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8017240:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8017244:	d00e      	beq.n	8017264 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8017246:	eba3 030e 	sub.w	r3, r3, lr
 801724a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801724e:	b29b      	uxth	r3, r3
 8017250:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8017254:	10db      	asrs	r3, r3, #3
 8017256:	f003 0360 	and.w	r3, r3, #96	; 0x60
 801725a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 801725e:	4313      	orrs	r3, r2
 8017260:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8017264:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8017268:	00cb      	lsls	r3, r1, #3
 801726a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801726e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8017272:	0648      	lsls	r0, r1, #25
 8017274:	ea43 0302 	orr.w	r3, r3, r2
 8017278:	bf44      	itt	mi
 801727a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801727e:	b21b      	sxthmi	r3, r3
 8017280:	1b5d      	subs	r5, r3, r5
 8017282:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8017286:	e7b5      	b.n	80171f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08017288 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8017288:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801728c:	461e      	mov	r6, r3
 801728e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017290:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017294:	4604      	mov	r4, r0
 8017296:	4617      	mov	r7, r2
 8017298:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801729c:	f7f0 fed0 	bl	8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80172a0:	4605      	mov	r5, r0
 80172a2:	b918      	cbnz	r0, 80172ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80172a4:	6030      	str	r0, [r6, #0]
 80172a6:	4628      	mov	r0, r5
 80172a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80172ac:	683b      	ldr	r3, [r7, #0]
 80172ae:	4601      	mov	r1, r0
 80172b0:	68db      	ldr	r3, [r3, #12]
 80172b2:	4638      	mov	r0, r7
 80172b4:	4798      	blx	r3
 80172b6:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80172ba:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80172be:	4602      	mov	r2, r0
 80172c0:	6030      	str	r0, [r6, #0]
 80172c2:	d213      	bcs.n	80172ec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80172c4:	4643      	mov	r3, r8
 80172c6:	4639      	mov	r1, r7
 80172c8:	4620      	mov	r0, r4
 80172ca:	f7ff fe3b 	bl	8016f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80172ce:	6030      	str	r0, [r6, #0]
 80172d0:	6833      	ldr	r3, [r6, #0]
 80172d2:	b143      	cbz	r3, 80172e6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80172d4:	7b5a      	ldrb	r2, [r3, #13]
 80172d6:	7a9b      	ldrb	r3, [r3, #10]
 80172d8:	0052      	lsls	r2, r2, #1
 80172da:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80172de:	4313      	orrs	r3, r2
 80172e0:	bf0c      	ite	eq
 80172e2:	2301      	moveq	r3, #1
 80172e4:	2300      	movne	r3, #0
 80172e6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80172ea:	e7dc      	b.n	80172a6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80172ec:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80172f0:	b29b      	uxth	r3, r3
 80172f2:	2b7f      	cmp	r3, #127	; 0x7f
 80172f4:	d804      	bhi.n	8017300 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80172f6:	4639      	mov	r1, r7
 80172f8:	4620      	mov	r0, r4
 80172fa:	f7ff fd17 	bl	8016d2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80172fe:	e7e6      	b.n	80172ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8017300:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8017304:	2b00      	cmp	r3, #0
 8017306:	d0e3      	beq.n	80172d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017308:	f640 1302 	movw	r3, #2306	; 0x902
 801730c:	429d      	cmp	r5, r3
 801730e:	d1df      	bne.n	80172d0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8017310:	4601      	mov	r1, r0
 8017312:	4620      	mov	r0, r4
 8017314:	f7ff fcdb 	bl	8016cce <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8017318:	e7d9      	b.n	80172ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801731a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801731a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801731e:	461e      	mov	r6, r3
 8017320:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017322:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017326:	4604      	mov	r4, r0
 8017328:	4617      	mov	r7, r2
 801732a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801732e:	f7f0 fe87 	bl	8008040 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8017332:	4605      	mov	r5, r0
 8017334:	b918      	cbnz	r0, 801733e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8017336:	6030      	str	r0, [r6, #0]
 8017338:	4628      	mov	r0, r5
 801733a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801733e:	683b      	ldr	r3, [r7, #0]
 8017340:	4601      	mov	r1, r0
 8017342:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8017346:	4638      	mov	r0, r7
 8017348:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801734c:	47c8      	blx	r9
 801734e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8017352:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8017356:	4602      	mov	r2, r0
 8017358:	6030      	str	r0, [r6, #0]
 801735a:	d213      	bcs.n	8017384 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 801735c:	4643      	mov	r3, r8
 801735e:	4639      	mov	r1, r7
 8017360:	4620      	mov	r0, r4
 8017362:	f7ff fdef 	bl	8016f44 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8017366:	6030      	str	r0, [r6, #0]
 8017368:	6833      	ldr	r3, [r6, #0]
 801736a:	b143      	cbz	r3, 801737e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 801736c:	7b5a      	ldrb	r2, [r3, #13]
 801736e:	7a9b      	ldrb	r3, [r3, #10]
 8017370:	0052      	lsls	r2, r2, #1
 8017372:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8017376:	4313      	orrs	r3, r2
 8017378:	bf0c      	ite	eq
 801737a:	2301      	moveq	r3, #1
 801737c:	2300      	movne	r3, #0
 801737e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8017382:	e7d9      	b.n	8017338 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8017384:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8017388:	b29b      	uxth	r3, r3
 801738a:	2b7f      	cmp	r3, #127	; 0x7f
 801738c:	d804      	bhi.n	8017398 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801738e:	4639      	mov	r1, r7
 8017390:	4620      	mov	r0, r4
 8017392:	f7ff fccb 	bl	8016d2c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8017396:	e7e6      	b.n	8017366 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8017398:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801739c:	2b00      	cmp	r3, #0
 801739e:	d0e3      	beq.n	8017368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80173a0:	f640 1302 	movw	r3, #2306	; 0x902
 80173a4:	429d      	cmp	r5, r3
 80173a6:	d1df      	bne.n	8017368 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80173a8:	4601      	mov	r1, r0
 80173aa:	4620      	mov	r0, r4
 80173ac:	f7ff fc8f 	bl	8016cce <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80173b0:	e7d9      	b.n	8017366 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080173b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80173b2:	b510      	push	{r4, lr}
 80173b4:	4604      	mov	r4, r0
 80173b6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80173ba:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173bc:	b1f1      	cbz	r1, 80173fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80173be:	2b0a      	cmp	r3, #10
 80173c0:	d02f      	beq.n	8017422 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80173c2:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80173c4:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80173c8:	3901      	subs	r1, #1
 80173ca:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80173cc:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80173d0:	1c51      	adds	r1, r2, #1
 80173d2:	b289      	uxth	r1, r1
 80173d4:	2901      	cmp	r1, #1
 80173d6:	bf84      	itt	hi
 80173d8:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80173dc:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80173de:	f103 0201 	add.w	r2, r3, #1
 80173e2:	8722      	strh	r2, [r4, #56]	; 0x38
 80173e4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80173e6:	bf98      	it	ls
 80173e8:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80173ea:	4413      	add	r3, r2
 80173ec:	b29b      	uxth	r3, r3
 80173ee:	2b09      	cmp	r3, #9
 80173f0:	bf88      	it	hi
 80173f2:	3b0a      	subhi	r3, #10
 80173f4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80173f8:	8458      	strh	r0, [r3, #34]	; 0x22
 80173fa:	e7dc      	b.n	80173b6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80173fc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80173fe:	2b0a      	cmp	r3, #10
 8017400:	d00f      	beq.n	8017422 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8017402:	4620      	mov	r0, r4
 8017404:	f7ff fc11 	bl	8016c2a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8017408:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801740a:	1c5a      	adds	r2, r3, #1
 801740c:	8722      	strh	r2, [r4, #56]	; 0x38
 801740e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8017410:	4413      	add	r3, r2
 8017412:	b29b      	uxth	r3, r3
 8017414:	2b09      	cmp	r3, #9
 8017416:	bf88      	it	hi
 8017418:	3b0a      	subhi	r3, #10
 801741a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801741e:	8458      	strh	r0, [r3, #34]	; 0x22
 8017420:	e7ec      	b.n	80173fc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8017422:	bd10      	pop	{r4, pc}

08017424 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8017424:	b538      	push	{r3, r4, r5, lr}
 8017426:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8017428:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801742c:	4604      	mov	r4, r0
 801742e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8017430:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8017432:	3a01      	subs	r2, #1
 8017434:	8702      	strh	r2, [r0, #56]	; 0x38
 8017436:	1c5a      	adds	r2, r3, #1
 8017438:	b292      	uxth	r2, r2
 801743a:	2a09      	cmp	r2, #9
 801743c:	bf86      	itte	hi
 801743e:	3b09      	subhi	r3, #9
 8017440:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8017442:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8017444:	f7ff ffb5 	bl	80173b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8017448:	8c23      	ldrh	r3, [r4, #32]
 801744a:	2b01      	cmp	r3, #1
 801744c:	bf9c      	itt	ls
 801744e:	3301      	addls	r3, #1
 8017450:	8423      	strhls	r3, [r4, #32]
 8017452:	8be3      	ldrh	r3, [r4, #30]
 8017454:	b90b      	cbnz	r3, 801745a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8017456:	2302      	movs	r3, #2
 8017458:	83e3      	strh	r3, [r4, #30]
 801745a:	8be3      	ldrh	r3, [r4, #30]
 801745c:	3b01      	subs	r3, #1
 801745e:	b29b      	uxth	r3, r3
 8017460:	83e3      	strh	r3, [r4, #30]
 8017462:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017466:	4628      	mov	r0, r5
 8017468:	8365      	strh	r5, [r4, #26]
 801746a:	bd38      	pop	{r3, r4, r5, pc}

0801746c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 801746c:	428a      	cmp	r2, r1
 801746e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017472:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8017474:	d931      	bls.n	80174da <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8017476:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8017478:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801747c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8017480:	19ee      	adds	r6, r5, r7
 8017482:	1a54      	subs	r4, r2, r1
 8017484:	3e01      	subs	r6, #1
 8017486:	fa1f fe84 	uxth.w	lr, r4
 801748a:	b2b4      	uxth	r4, r6
 801748c:	eba4 090e 	sub.w	r9, r4, lr
 8017490:	fa1f f989 	uxth.w	r9, r9
 8017494:	2c09      	cmp	r4, #9
 8017496:	4626      	mov	r6, r4
 8017498:	bf88      	it	hi
 801749a:	f1a4 060a 	subhi.w	r6, r4, #10
 801749e:	f1bc 0f00 	cmp.w	ip, #0
 80174a2:	bf08      	it	eq
 80174a4:	f04f 0c02 	moveq.w	ip, #2
 80174a8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80174ac:	f10c 3cff 	add.w	ip, ip, #4294967295
 80174b0:	fa1f fc8c 	uxth.w	ip, ip
 80174b4:	3c01      	subs	r4, #1
 80174b6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80174ba:	b2a4      	uxth	r4, r4
 80174bc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80174c0:	454c      	cmp	r4, r9
 80174c2:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80174c6:	d1e5      	bne.n	8017494 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80174c8:	eba5 050e 	sub.w	r5, r5, lr
 80174cc:	eb0e 0408 	add.w	r4, lr, r8
 80174d0:	8705      	strh	r5, [r0, #56]	; 0x38
 80174d2:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80174d6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80174da:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80174dc:	1a64      	subs	r4, r4, r1
 80174de:	4439      	add	r1, r7
 80174e0:	b289      	uxth	r1, r1
 80174e2:	2909      	cmp	r1, #9
 80174e4:	bf88      	it	hi
 80174e6:	390a      	subhi	r1, #10
 80174e8:	8704      	strh	r4, [r0, #56]	; 0x38
 80174ea:	86c1      	strh	r1, [r0, #54]	; 0x36
 80174ec:	250a      	movs	r5, #10
 80174ee:	b18a      	cbz	r2, 8017514 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80174f0:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80174f2:	3a01      	subs	r2, #1
 80174f4:	b292      	uxth	r2, r2
 80174f6:	3101      	adds	r1, #1
 80174f8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80174fc:	8701      	strh	r1, [r0, #56]	; 0x38
 80174fe:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017500:	b901      	cbnz	r1, 8017504 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8017502:	86c5      	strh	r5, [r0, #54]	; 0x36
 8017504:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8017506:	3901      	subs	r1, #1
 8017508:	b289      	uxth	r1, r1
 801750a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801750c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8017510:	844c      	strh	r4, [r1, #34]	; 0x22
 8017512:	e7ec      	b.n	80174ee <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8017514:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017518:	f7ff bf4b 	b.w	80173b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801751c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801751c:	b570      	push	{r4, r5, r6, lr}
 801751e:	2500      	movs	r5, #0
 8017520:	4295      	cmp	r5, r2
 8017522:	d011      	beq.n	8017548 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8017524:	8bc4      	ldrh	r4, [r0, #30]
 8017526:	f831 6b02 	ldrh.w	r6, [r1], #2
 801752a:	4414      	add	r4, r2
 801752c:	3c01      	subs	r4, #1
 801752e:	1b64      	subs	r4, r4, r5
 8017530:	b2a4      	uxth	r4, r4
 8017532:	2c01      	cmp	r4, #1
 8017534:	bf88      	it	hi
 8017536:	3c02      	subhi	r4, #2
 8017538:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801753c:	8b64      	ldrh	r4, [r4, #26]
 801753e:	42b4      	cmp	r4, r6
 8017540:	d117      	bne.n	8017572 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8017542:	3501      	adds	r5, #1
 8017544:	b2ad      	uxth	r5, r5
 8017546:	e7eb      	b.n	8017520 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8017548:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801754c:	2400      	movs	r4, #0
 801754e:	4413      	add	r3, r2
 8017550:	b2a2      	uxth	r2, r4
 8017552:	429a      	cmp	r2, r3
 8017554:	da0f      	bge.n	8017576 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8017556:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8017558:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 801755c:	4432      	add	r2, r6
 801755e:	b292      	uxth	r2, r2
 8017560:	2a09      	cmp	r2, #9
 8017562:	bf88      	it	hi
 8017564:	3a0a      	subhi	r2, #10
 8017566:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801756a:	3401      	adds	r4, #1
 801756c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 801756e:	42aa      	cmp	r2, r5
 8017570:	d0ee      	beq.n	8017550 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8017572:	2000      	movs	r0, #0
 8017574:	bd70      	pop	{r4, r5, r6, pc}
 8017576:	2001      	movs	r0, #1
 8017578:	e7fc      	b.n	8017574 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801757a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801757a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801757e:	4605      	mov	r5, r0
 8017580:	4616      	mov	r6, r2
 8017582:	1c8c      	adds	r4, r1, #2
 8017584:	8809      	ldrh	r1, [r1, #0]
 8017586:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801758a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801758e:	42b3      	cmp	r3, r6
 8017590:	d124      	bne.n	80175dc <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8017592:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8017596:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801759a:	f001 070f 	and.w	r7, r1, #15
 801759e:	f8cd 8000 	str.w	r8, [sp]
 80175a2:	464b      	mov	r3, r9
 80175a4:	4652      	mov	r2, sl
 80175a6:	4621      	mov	r1, r4
 80175a8:	4628      	mov	r0, r5
 80175aa:	f7ff ffb7 	bl	801751c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 80175ae:	4683      	mov	fp, r0
 80175b0:	b168      	cbz	r0, 80175ce <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 80175b2:	eb0a 0109 	add.w	r1, sl, r9
 80175b6:	4441      	add	r1, r8
 80175b8:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 80175bc:	463a      	mov	r2, r7
 80175be:	4649      	mov	r1, r9
 80175c0:	4628      	mov	r0, r5
 80175c2:	f7ff ff53 	bl	801746c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 80175c6:	4658      	mov	r0, fp
 80175c8:	b003      	add	sp, #12
 80175ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175ce:	eb07 010a 	add.w	r1, r7, sl
 80175d2:	4449      	add	r1, r9
 80175d4:	4441      	add	r1, r8
 80175d6:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 80175da:	e7d2      	b.n	8017582 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 80175dc:	f04f 0b00 	mov.w	fp, #0
 80175e0:	e7f1      	b.n	80175c6 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

080175e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 80175e2:	b570      	push	{r4, r5, r6, lr}
 80175e4:	8810      	ldrh	r0, [r2, #0]
 80175e6:	4298      	cmp	r0, r3
 80175e8:	d817      	bhi.n	801761a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175ea:	1e48      	subs	r0, r1, #1
 80175ec:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 80175f0:	4298      	cmp	r0, r3
 80175f2:	d312      	bcc.n	801761a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175f4:	2400      	movs	r4, #0
 80175f6:	428c      	cmp	r4, r1
 80175f8:	d20f      	bcs.n	801761a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 80175fa:	1860      	adds	r0, r4, r1
 80175fc:	1040      	asrs	r0, r0, #1
 80175fe:	0085      	lsls	r5, r0, #2
 8017600:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8017604:	42b3      	cmp	r3, r6
 8017606:	d902      	bls.n	801760e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8017608:	3001      	adds	r0, #1
 801760a:	b284      	uxth	r4, r0
 801760c:	e7f3      	b.n	80175f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801760e:	d201      	bcs.n	8017614 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8017610:	b281      	uxth	r1, r0
 8017612:	e7f0      	b.n	80175f6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8017614:	442a      	add	r2, r5
 8017616:	8850      	ldrh	r0, [r2, #2]
 8017618:	bd70      	pop	{r4, r5, r6, pc}
 801761a:	2000      	movs	r0, #0
 801761c:	e7fc      	b.n	8017618 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801761e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801761e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8017622:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8017624:	886f      	ldrh	r7, [r5, #2]
 8017626:	4604      	mov	r4, r0
 8017628:	087f      	lsrs	r7, r7, #1
 801762a:	260b      	movs	r6, #11
 801762c:	3e01      	subs	r6, #1
 801762e:	d013      	beq.n	8017658 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017630:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8017632:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8017636:	462a      	mov	r2, r5
 8017638:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801763c:	4639      	mov	r1, r7
 801763e:	4643      	mov	r3, r8
 8017640:	4620      	mov	r0, r4
 8017642:	f7ff ffce 	bl	80175e2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8017646:	b138      	cbz	r0, 8017658 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8017648:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 801764c:	4642      	mov	r2, r8
 801764e:	4620      	mov	r0, r4
 8017650:	f7ff ff93 	bl	801757a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8017654:	2800      	cmp	r0, #0
 8017656:	d1e9      	bne.n	801762c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8017658:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801765c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 801765c:	b570      	push	{r4, r5, r6, lr}
 801765e:	694a      	ldr	r2, [r1, #20]
 8017660:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8017662:	684b      	ldr	r3, [r1, #4]
 8017664:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8017666:	1b54      	subs	r4, r2, r5
 8017668:	f000 8106 	beq.w	8017878 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 801766c:	1b9b      	subs	r3, r3, r6
 801766e:	d003      	beq.n	8017678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8017670:	4363      	muls	r3, r4
 8017672:	2210      	movs	r2, #16
 8017674:	fb93 f3f2 	sdiv	r3, r3, r2
 8017678:	680c      	ldr	r4, [r1, #0]
 801767a:	698a      	ldr	r2, [r1, #24]
 801767c:	1b65      	subs	r5, r4, r5
 801767e:	f000 80fd 	beq.w	801787c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8017682:	1b92      	subs	r2, r2, r6
 8017684:	d003      	beq.n	801768e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017686:	436a      	muls	r2, r5
 8017688:	2410      	movs	r4, #16
 801768a:	fb92 f2f4 	sdiv	r2, r2, r4
 801768e:	1a9b      	subs	r3, r3, r2
 8017690:	ee07 3a90 	vmov	s15, r3
 8017694:	ed9f 4a88 	vldr	s8, [pc, #544]	; 80178b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8017698:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801769c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80176a0:	ee67 7a84 	vmul.f32	s15, s15, s8
 80176a4:	460a      	mov	r2, r1
 80176a6:	ee87 3a27 	vdiv.f32	s6, s14, s15
 80176aa:	4603      	mov	r3, r0
 80176ac:	f100 040c 	add.w	r4, r0, #12
 80176b0:	eeb1 6a43 	vneg.f32	s12, s6
 80176b4:	edd2 7a02 	vldr	s15, [r2, #8]
 80176b8:	eec7 6a27 	vdiv.f32	s13, s14, s15
 80176bc:	3214      	adds	r2, #20
 80176be:	ece3 6a01 	vstmia	r3!, {s13}
 80176c2:	ed52 7a02 	vldr	s15, [r2, #-8]
 80176c6:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176ca:	429c      	cmp	r4, r3
 80176cc:	edc3 7a02 	vstr	s15, [r3, #8]
 80176d0:	ed52 7a01 	vldr	s15, [r2, #-4]
 80176d4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80176d8:	edc3 7a05 	vstr	s15, [r3, #20]
 80176dc:	d1ea      	bne.n	80176b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 80176de:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80176e0:	698b      	ldr	r3, [r1, #24]
 80176e2:	edd0 4a02 	vldr	s9, [r0, #8]
 80176e6:	edd0 3a00 	vldr	s7, [r0]
 80176ea:	edd0 6a01 	vldr	s13, [r0, #4]
 80176ee:	ed90 5a05 	vldr	s10, [r0, #20]
 80176f2:	ed90 2a03 	vldr	s4, [r0, #12]
 80176f6:	edd0 5a04 	vldr	s11, [r0, #16]
 80176fa:	ed90 1a07 	vldr	s2, [r0, #28]
 80176fe:	edd0 2a06 	vldr	s5, [r0, #24]
 8017702:	1a9b      	subs	r3, r3, r2
 8017704:	ee07 3a90 	vmov	s15, r3
 8017708:	684b      	ldr	r3, [r1, #4]
 801770a:	1a9b      	subs	r3, r3, r2
 801770c:	ee07 3a10 	vmov	s14, r3
 8017710:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8017714:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8017718:	ee67 7a84 	vmul.f32	s15, s15, s8
 801771c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8017720:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017724:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8017728:	ee27 7a04 	vmul.f32	s14, s14, s8
 801772c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8017730:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017734:	ee32 5a45 	vsub.f32	s10, s4, s10
 8017738:	ee67 7a83 	vmul.f32	s15, s15, s6
 801773c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8017740:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017742:	694a      	ldr	r2, [r1, #20]
 8017744:	1b13      	subs	r3, r2, r4
 8017746:	ee07 3a10 	vmov	s14, r3
 801774a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801774e:	680b      	ldr	r3, [r1, #0]
 8017750:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017754:	1b1b      	subs	r3, r3, r4
 8017756:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 801775a:	ee07 3a10 	vmov	s14, r3
 801775e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017762:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017766:	eee6 4a87 	vfma.f32	s9, s13, s14
 801776a:	ee64 4a86 	vmul.f32	s9, s9, s12
 801776e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8017772:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8017774:	698b      	ldr	r3, [r1, #24]
 8017776:	1a9b      	subs	r3, r3, r2
 8017778:	ee06 3a90 	vmov	s13, r3
 801777c:	684b      	ldr	r3, [r1, #4]
 801777e:	1a9b      	subs	r3, r3, r2
 8017780:	ee07 3a10 	vmov	s14, r3
 8017784:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8017788:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801778c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8017790:	ee27 7a04 	vmul.f32	s14, s14, s8
 8017794:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8017798:	eee5 6a87 	vfma.f32	s13, s11, s14
 801779c:	ee66 6a83 	vmul.f32	s13, s13, s6
 80177a0:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 80177a4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80177a6:	694a      	ldr	r2, [r1, #20]
 80177a8:	1b13      	subs	r3, r2, r4
 80177aa:	ee07 3a10 	vmov	s14, r3
 80177ae:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177b2:	680b      	ldr	r3, [r1, #0]
 80177b4:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177b8:	1b1b      	subs	r3, r3, r4
 80177ba:	ee25 5a47 	vnmul.f32	s10, s10, s14
 80177be:	ee07 3a10 	vmov	s14, r3
 80177c2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177c6:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177ca:	eea5 5a87 	vfma.f32	s10, s11, s14
 80177ce:	edd0 5a08 	vldr	s11, [r0, #32]
 80177d2:	ee25 5a06 	vmul.f32	s10, s10, s12
 80177d6:	ee31 1a65 	vsub.f32	s2, s2, s11
 80177da:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 80177de:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80177e0:	698b      	ldr	r3, [r1, #24]
 80177e2:	1a9b      	subs	r3, r3, r2
 80177e4:	ee07 3a10 	vmov	s14, r3
 80177e8:	684b      	ldr	r3, [r1, #4]
 80177ea:	1a9b      	subs	r3, r3, r2
 80177ec:	ee01 3a90 	vmov	s3, r3
 80177f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80177f4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 80177f8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80177fc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8017800:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8017804:	ee61 1a84 	vmul.f32	s3, s3, s8
 8017808:	eea1 7a21 	vfma.f32	s14, s2, s3
 801780c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8017810:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017814:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8017816:	694a      	ldr	r2, [r1, #20]
 8017818:	1b13      	subs	r3, r2, r4
 801781a:	ee03 3a10 	vmov	s6, r3
 801781e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017822:	680b      	ldr	r3, [r1, #0]
 8017824:	ee23 3a04 	vmul.f32	s6, s6, s8
 8017828:	1b1b      	subs	r3, r3, r4
 801782a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801782e:	ee03 3a10 	vmov	s6, r3
 8017832:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8017836:	ee23 4a04 	vmul.f32	s8, s6, s8
 801783a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801783e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8017842:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8017846:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801784a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801784e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8017852:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017856:	dd13      	ble.n	8017880 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8017858:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801785c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8017860:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017862:	eee3 7a87 	vfma.f32	s15, s7, s14
 8017866:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801786a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801786e:	dd15      	ble.n	801789c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8017870:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8017874:	6403      	str	r3, [r0, #64]	; 0x40
 8017876:	bd70      	pop	{r4, r5, r6, pc}
 8017878:	4623      	mov	r3, r4
 801787a:	e6fd      	b.n	8017678 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801787c:	462a      	mov	r2, r5
 801787e:	e706      	b.n	801768e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8017880:	d502      	bpl.n	8017888 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8017882:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8017886:	e7e9      	b.n	801785c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8017888:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801788c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8017890:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8017894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017898:	dade      	bge.n	8017858 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801789a:	e7f2      	b.n	8017882 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801789c:	d502      	bpl.n	80178a4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801789e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80178a2:	e7e7      	b.n	8017874 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80178a4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 80178a8:	eee3 4a86 	vfma.f32	s9, s7, s12
 80178ac:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 80178b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80178b4:	dadc      	bge.n	8017870 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 80178b6:	e7f2      	b.n	801789e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 80178b8:	3d800000 	.word	0x3d800000

080178bc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 80178bc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178c0:	2714      	movs	r7, #20
 80178c2:	435f      	muls	r7, r3
 80178c4:	eb02 0c07 	add.w	ip, r2, r7
 80178c8:	f8dc 5004 	ldr.w	r5, [ip, #4]
 80178cc:	f115 0e0f 	adds.w	lr, r5, #15
 80178d0:	f100 80a2 	bmi.w	8017a18 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80178d4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80178d8:	9c08      	ldr	r4, [sp, #32]
 80178da:	f8c0 e014 	str.w	lr, [r0, #20]
 80178de:	2614      	movs	r6, #20
 80178e0:	4366      	muls	r6, r4
 80178e2:	eb02 0806 	add.w	r8, r2, r6
 80178e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80178ea:	f115 040f 	adds.w	r4, r5, #15
 80178ee:	f100 809f 	bmi.w	8017a30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80178f2:	1124      	asrs	r4, r4, #4
 80178f4:	eba4 040e 	sub.w	r4, r4, lr
 80178f8:	6184      	str	r4, [r0, #24]
 80178fa:	2c00      	cmp	r4, #0
 80178fc:	f000 808a 	beq.w	8017a14 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8017900:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8017904:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8017908:	5995      	ldr	r5, [r2, r6]
 801790a:	eba4 0809 	sub.w	r8, r4, r9
 801790e:	59d4      	ldr	r4, [r2, r7]
 8017910:	eba5 0a04 	sub.w	sl, r5, r4
 8017914:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8017918:	fb0e fe05 	mul.w	lr, lr, r5
 801791c:	fb0a ee19 	mls	lr, sl, r9, lr
 8017920:	fb08 e404 	mla	r4, r8, r4, lr
 8017924:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8017928:	3c01      	subs	r4, #1
 801792a:	19a4      	adds	r4, r4, r6
 801792c:	f100 808c 	bmi.w	8017a48 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8017930:	fb94 fef6 	sdiv	lr, r4, r6
 8017934:	f8c0 e000 	str.w	lr, [r0]
 8017938:	fb06 441e 	mls	r4, r6, lr, r4
 801793c:	6104      	str	r4, [r0, #16]
 801793e:	2d00      	cmp	r5, #0
 8017940:	f2c0 8095 	blt.w	8017a6e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8017944:	fb95 f4f6 	sdiv	r4, r5, r6
 8017948:	6044      	str	r4, [r0, #4]
 801794a:	fb06 5514 	mls	r5, r6, r4, r5
 801794e:	6085      	str	r5, [r0, #8]
 8017950:	60c6      	str	r6, [r0, #12]
 8017952:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8017956:	6945      	ldr	r5, [r0, #20]
 8017958:	59d2      	ldr	r2, [r2, r7]
 801795a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8017a90 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801795e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8017962:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8017966:	ee07 4a10 	vmov	s14, r4
 801796a:	6804      	ldr	r4, [r0, #0]
 801796c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8017970:	ee07 2a90 	vmov	s15, r2
 8017974:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801797c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8017980:	ee27 7a26 	vmul.f32	s14, s14, s13
 8017984:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8017988:	edd3 6a00 	vldr	s13, [r3]
 801798c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8017990:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8017994:	eee6 6a27 	vfma.f32	s13, s12, s15
 8017998:	edc0 6a07 	vstr	s13, [r0, #28]
 801799c:	edd0 6a01 	vldr	s13, [r0, #4]
 80179a0:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 80179a4:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80179a8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80179ac:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179b0:	ed80 6a08 	vstr	s12, [r0, #32]
 80179b4:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 80179b6:	6242      	str	r2, [r0, #36]	; 0x24
 80179b8:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 80179bc:	ed93 6a03 	vldr	s12, [r3, #12]
 80179c0:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179c4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179c8:	eea5 6aa7 	vfma.f32	s12, s11, s15
 80179cc:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80179d0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80179d4:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80179d8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80179dc:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80179e0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80179e2:	6302      	str	r2, [r0, #48]	; 0x30
 80179e4:	ed93 6a06 	vldr	s12, [r3, #24]
 80179e8:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80179ec:	eea5 6a87 	vfma.f32	s12, s11, s14
 80179f0:	eeb0 7a46 	vmov.f32	s14, s12
 80179f4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80179f8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80179fc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8017a00:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8017a04:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8017a08:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017a0c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8017a10:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8017a12:	63c3      	str	r3, [r0, #60]	; 0x3c
 8017a14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a18:	f1c5 0501 	rsb	r5, r5, #1
 8017a1c:	f015 050f 	ands.w	r5, r5, #15
 8017a20:	bf18      	it	ne
 8017a22:	2501      	movne	r5, #1
 8017a24:	2410      	movs	r4, #16
 8017a26:	fb9e fef4 	sdiv	lr, lr, r4
 8017a2a:	ebae 0e05 	sub.w	lr, lr, r5
 8017a2e:	e753      	b.n	80178d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017a30:	f1c5 0501 	rsb	r5, r5, #1
 8017a34:	f015 050f 	ands.w	r5, r5, #15
 8017a38:	bf18      	it	ne
 8017a3a:	2501      	movne	r5, #1
 8017a3c:	f04f 0910 	mov.w	r9, #16
 8017a40:	fb94 f4f9 	sdiv	r4, r4, r9
 8017a44:	1b64      	subs	r4, r4, r5
 8017a46:	e755      	b.n	80178f4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8017a48:	4264      	negs	r4, r4
 8017a4a:	fb94 fef6 	sdiv	lr, r4, r6
 8017a4e:	f1ce 0800 	rsb	r8, lr, #0
 8017a52:	fb06 441e 	mls	r4, r6, lr, r4
 8017a56:	f8c0 8000 	str.w	r8, [r0]
 8017a5a:	6104      	str	r4, [r0, #16]
 8017a5c:	2c00      	cmp	r4, #0
 8017a5e:	f43f af6e 	beq.w	801793e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017a62:	ea6f 0e0e 	mvn.w	lr, lr
 8017a66:	f8c0 e000 	str.w	lr, [r0]
 8017a6a:	1b34      	subs	r4, r6, r4
 8017a6c:	e766      	b.n	801793c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017a6e:	426d      	negs	r5, r5
 8017a70:	fb95 f4f6 	sdiv	r4, r5, r6
 8017a74:	f1c4 0e00 	rsb	lr, r4, #0
 8017a78:	fb06 5514 	mls	r5, r6, r4, r5
 8017a7c:	f8c0 e004 	str.w	lr, [r0, #4]
 8017a80:	6085      	str	r5, [r0, #8]
 8017a82:	2d00      	cmp	r5, #0
 8017a84:	f43f af64 	beq.w	8017950 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8017a88:	43e4      	mvns	r4, r4
 8017a8a:	6044      	str	r4, [r0, #4]
 8017a8c:	1b75      	subs	r5, r6, r5
 8017a8e:	e75e      	b.n	801794e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8017a90:	3d800000 	.word	0x3d800000

08017a94 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8017a94:	4602      	mov	r2, r0
 8017a96:	b148      	cbz	r0, 8017aac <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8017a98:	2300      	movs	r3, #0
 8017a9a:	b298      	uxth	r0, r3
 8017a9c:	3301      	adds	r3, #1
 8017a9e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8017aa2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8017aa6:	2900      	cmp	r1, #0
 8017aa8:	d1f7      	bne.n	8017a9a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8017aaa:	4770      	bx	lr
 8017aac:	4770      	bx	lr

08017aae <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8017aae:	b530      	push	{r4, r5, lr}
 8017ab0:	4604      	mov	r4, r0
 8017ab2:	b159      	cbz	r1, 8017acc <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8017ab4:	b148      	cbz	r0, 8017aca <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017ab6:	2300      	movs	r3, #0
 8017ab8:	b298      	uxth	r0, r3
 8017aba:	4282      	cmp	r2, r0
 8017abc:	d905      	bls.n	8017aca <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8017abe:	5ccd      	ldrb	r5, [r1, r3]
 8017ac0:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8017ac4:	3301      	adds	r3, #1
 8017ac6:	2d00      	cmp	r5, #0
 8017ac8:	d1f6      	bne.n	8017ab8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8017aca:	bd30      	pop	{r4, r5, pc}
 8017acc:	4608      	mov	r0, r1
 8017ace:	e7fc      	b.n	8017aca <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08017ad0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8017ad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017ad2:	b08b      	sub	sp, #44	; 0x2c
 8017ad4:	468c      	mov	ip, r1
 8017ad6:	2100      	movs	r1, #0
 8017ad8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017adc:	4604      	mov	r4, r0
 8017ade:	261f      	movs	r6, #31
 8017ae0:	af01      	add	r7, sp, #4
 8017ae2:	fb94 fef3 	sdiv	lr, r4, r3
 8017ae6:	fb03 441e 	mls	r4, r3, lr, r4
 8017aea:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8017aee:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8017af2:	b2ec      	uxtb	r4, r5
 8017af4:	2d09      	cmp	r5, #9
 8017af6:	bfd4      	ite	le
 8017af8:	3430      	addle	r4, #48	; 0x30
 8017afa:	3457      	addgt	r4, #87	; 0x57
 8017afc:	b2e4      	uxtb	r4, r4
 8017afe:	55bc      	strb	r4, [r7, r6]
 8017b00:	4674      	mov	r4, lr
 8017b02:	1e71      	subs	r1, r6, #1
 8017b04:	b974      	cbnz	r4, 8017b24 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8017b06:	2800      	cmp	r0, #0
 8017b08:	da05      	bge.n	8017b16 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8017b0a:	ab0a      	add	r3, sp, #40	; 0x28
 8017b0c:	4419      	add	r1, r3
 8017b0e:	232d      	movs	r3, #45	; 0x2d
 8017b10:	f801 3c24 	strb.w	r3, [r1, #-36]
 8017b14:	1eb1      	subs	r1, r6, #2
 8017b16:	3101      	adds	r1, #1
 8017b18:	4439      	add	r1, r7
 8017b1a:	4660      	mov	r0, ip
 8017b1c:	f7ff ffc7 	bl	8017aae <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b20:	b00b      	add	sp, #44	; 0x2c
 8017b22:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b24:	460e      	mov	r6, r1
 8017b26:	e7dc      	b.n	8017ae2 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08017b28 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8017b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017b2a:	b08b      	sub	sp, #44	; 0x2c
 8017b2c:	468c      	mov	ip, r1
 8017b2e:	2100      	movs	r1, #0
 8017b30:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8017b34:	ae01      	add	r6, sp, #4
 8017b36:	211f      	movs	r1, #31
 8017b38:	fbb0 f7f3 	udiv	r7, r0, r3
 8017b3c:	fb03 0517 	mls	r5, r3, r7, r0
 8017b40:	b2ec      	uxtb	r4, r5
 8017b42:	2d09      	cmp	r5, #9
 8017b44:	bfd4      	ite	le
 8017b46:	3430      	addle	r4, #48	; 0x30
 8017b48:	3457      	addgt	r4, #87	; 0x57
 8017b4a:	b2e4      	uxtb	r4, r4
 8017b4c:	558c      	strb	r4, [r1, r6]
 8017b4e:	4638      	mov	r0, r7
 8017b50:	1e4c      	subs	r4, r1, #1
 8017b52:	b92f      	cbnz	r7, 8017b60 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8017b54:	4431      	add	r1, r6
 8017b56:	4660      	mov	r0, ip
 8017b58:	f7ff ffa9 	bl	8017aae <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8017b5c:	b00b      	add	sp, #44	; 0x2c
 8017b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b60:	4621      	mov	r1, r4
 8017b62:	e7e9      	b.n	8017b38 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08017b64 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8017b64:	b410      	push	{r4}
 8017b66:	b131      	cbz	r1, 8017b76 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017b68:	1e9c      	subs	r4, r3, #2
 8017b6a:	2c22      	cmp	r4, #34	; 0x22
 8017b6c:	d803      	bhi.n	8017b76 <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8017b6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b72:	f7ff bfad 	b.w	8017ad0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017b76:	f85d 4b04 	ldr.w	r4, [sp], #4
 8017b7a:	4770      	bx	lr

08017b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8017b7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b80:	4691      	mov	r9, r2
 8017b82:	b085      	sub	sp, #20
 8017b84:	6802      	ldr	r2, [r0, #0]
 8017b86:	9201      	str	r2, [sp, #4]
 8017b88:	4688      	mov	r8, r1
 8017b8a:	4683      	mov	fp, r0
 8017b8c:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8017b90:	9103      	str	r1, [sp, #12]
 8017b92:	4610      	mov	r0, r2
 8017b94:	461c      	mov	r4, r3
 8017b96:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8017b9a:	9302      	str	r3, [sp, #8]
 8017b9c:	f7ff ff7a 	bl	8017a94 <_ZN8touchgfx7Unicode6strlenEPKt>
 8017ba0:	f1b8 0f00 	cmp.w	r8, #0
 8017ba4:	bf0c      	ite	eq
 8017ba6:	4684      	moveq	ip, r0
 8017ba8:	f100 0c01 	addne.w	ip, r0, #1
 8017bac:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8017bb0:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8017bb4:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8017bb6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017bb8:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8017bbc:	9903      	ldr	r1, [sp, #12]
 8017bbe:	fa1f fc8c 	uxth.w	ip, ip
 8017bc2:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8017bc6:	d041      	beq.n	8017c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bc8:	d834      	bhi.n	8017c34 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8017bca:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8017bce:	d059      	beq.n	8017c84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8017bd0:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8017bd4:	d03a      	beq.n	8017c4c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8017bd6:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8017bda:	d034      	beq.n	8017c46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017bdc:	2400      	movs	r4, #0
 8017bde:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8017be2:	3a01      	subs	r2, #1
 8017be4:	b169      	cbz	r1, 8017c02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017be6:	9911      	ldr	r1, [sp, #68]	; 0x44
 8017be8:	458c      	cmp	ip, r1
 8017bea:	da09      	bge.n	8017c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017bec:	eba1 010c 	sub.w	r1, r1, ip
 8017bf0:	b289      	uxth	r1, r1
 8017bf2:	b933      	cbnz	r3, 8017c02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017bf4:	2e00      	cmp	r6, #0
 8017bf6:	d051      	beq.n	8017c9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bf8:	2800      	cmp	r0, #0
 8017bfa:	d04f      	beq.n	8017c9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8017bfc:	440c      	add	r4, r1
 8017bfe:	b2a4      	uxth	r4, r4
 8017c00:	2100      	movs	r1, #0
 8017c02:	682b      	ldr	r3, [r5, #0]
 8017c04:	4293      	cmp	r3, r2
 8017c06:	da07      	bge.n	8017c18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017c08:	f1b8 0f00 	cmp.w	r8, #0
 8017c0c:	d004      	beq.n	8017c18 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8017c0e:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8017c12:	682b      	ldr	r3, [r5, #0]
 8017c14:	3301      	adds	r3, #1
 8017c16:	602b      	str	r3, [r5, #0]
 8017c18:	2730      	movs	r7, #48	; 0x30
 8017c1a:	2c00      	cmp	r4, #0
 8017c1c:	d04e      	beq.n	8017cbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c1e:	682e      	ldr	r6, [r5, #0]
 8017c20:	3c01      	subs	r4, #1
 8017c22:	42b2      	cmp	r2, r6
 8017c24:	b2a4      	uxth	r4, r4
 8017c26:	dd49      	ble.n	8017cbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017c28:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017c2c:	682b      	ldr	r3, [r5, #0]
 8017c2e:	3301      	adds	r3, #1
 8017c30:	602b      	str	r3, [r5, #0]
 8017c32:	e7f2      	b.n	8017c1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8017c34:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8017c38:	d01d      	beq.n	8017c76 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8017c3a:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8017c3e:	d002      	beq.n	8017c46 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8017c40:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8017c44:	e7c9      	b.n	8017bda <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8017c46:	4684      	mov	ip, r0
 8017c48:	f04f 0800 	mov.w	r8, #0
 8017c4c:	2c00      	cmp	r4, #0
 8017c4e:	d0c6      	beq.n	8017bde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c50:	b947      	cbnz	r7, 8017c64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c52:	2801      	cmp	r0, #1
 8017c54:	d106      	bne.n	8017c64 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8017c56:	8814      	ldrh	r4, [r2, #0]
 8017c58:	2c30      	cmp	r4, #48	; 0x30
 8017c5a:	bf02      	ittt	eq
 8017c5c:	3202      	addeq	r2, #2
 8017c5e:	f8cb 2000 	streq.w	r2, [fp]
 8017c62:	4638      	moveq	r0, r7
 8017c64:	45bc      	cmp	ip, r7
 8017c66:	da14      	bge.n	8017c92 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8017c68:	b2bf      	uxth	r7, r7
 8017c6a:	eba7 040c 	sub.w	r4, r7, ip
 8017c6e:	b2a4      	uxth	r4, r4
 8017c70:	46bc      	mov	ip, r7
 8017c72:	2600      	movs	r6, #0
 8017c74:	e7b3      	b.n	8017bde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c76:	4684      	mov	ip, r0
 8017c78:	b16c      	cbz	r4, 8017c96 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8017c7a:	42b8      	cmp	r0, r7
 8017c7c:	dd00      	ble.n	8017c80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8017c7e:	b2b8      	uxth	r0, r7
 8017c80:	2400      	movs	r4, #0
 8017c82:	e003      	b.n	8017c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8017c84:	f04f 0c01 	mov.w	ip, #1
 8017c88:	2400      	movs	r4, #0
 8017c8a:	4660      	mov	r0, ip
 8017c8c:	4626      	mov	r6, r4
 8017c8e:	46a0      	mov	r8, r4
 8017c90:	e7a5      	b.n	8017bde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c92:	2400      	movs	r4, #0
 8017c94:	e7ed      	b.n	8017c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8017c96:	4626      	mov	r6, r4
 8017c98:	46a0      	mov	r8, r4
 8017c9a:	e7a0      	b.n	8017bde <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8017c9c:	2900      	cmp	r1, #0
 8017c9e:	d0b0      	beq.n	8017c02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017ca0:	2720      	movs	r7, #32
 8017ca2:	682e      	ldr	r6, [r5, #0]
 8017ca4:	2900      	cmp	r1, #0
 8017ca6:	d0ac      	beq.n	8017c02 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8017ca8:	3901      	subs	r1, #1
 8017caa:	4296      	cmp	r6, r2
 8017cac:	b289      	uxth	r1, r1
 8017cae:	daa7      	bge.n	8017c00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8017cb0:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8017cb4:	682b      	ldr	r3, [r5, #0]
 8017cb6:	3301      	adds	r3, #1
 8017cb8:	602b      	str	r3, [r5, #0]
 8017cba:	e7f2      	b.n	8017ca2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8017cbc:	b188      	cbz	r0, 8017ce2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cbe:	682b      	ldr	r3, [r5, #0]
 8017cc0:	3801      	subs	r0, #1
 8017cc2:	429a      	cmp	r2, r3
 8017cc4:	b280      	uxth	r0, r0
 8017cc6:	dd0c      	ble.n	8017ce2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8017cc8:	f8db 3000 	ldr.w	r3, [fp]
 8017ccc:	1c9c      	adds	r4, r3, #2
 8017cce:	f8cb 4000 	str.w	r4, [fp]
 8017cd2:	881c      	ldrh	r4, [r3, #0]
 8017cd4:	682b      	ldr	r3, [r5, #0]
 8017cd6:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8017cda:	682b      	ldr	r3, [r5, #0]
 8017cdc:	3301      	adds	r3, #1
 8017cde:	602b      	str	r3, [r5, #0]
 8017ce0:	e7ec      	b.n	8017cbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8017ce2:	2620      	movs	r6, #32
 8017ce4:	b151      	cbz	r1, 8017cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017ce6:	6828      	ldr	r0, [r5, #0]
 8017ce8:	3901      	subs	r1, #1
 8017cea:	4282      	cmp	r2, r0
 8017cec:	b289      	uxth	r1, r1
 8017cee:	dd05      	ble.n	8017cfc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8017cf0:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8017cf4:	682b      	ldr	r3, [r5, #0]
 8017cf6:	3301      	adds	r3, #1
 8017cf8:	602b      	str	r3, [r5, #0]
 8017cfa:	e7f3      	b.n	8017ce4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8017cfc:	b005      	add	sp, #20
 8017cfe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8017d02:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017d06:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8017d0a:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8017d0e:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8017d12:	2400      	movs	r4, #0
 8017d14:	8014      	strh	r4, [r2, #0]
 8017d16:	701c      	strb	r4, [r3, #0]
 8017d18:	f888 4000 	strb.w	r4, [r8]
 8017d1c:	f88c 4000 	strb.w	r4, [ip]
 8017d20:	f88e 4000 	strb.w	r4, [lr]
 8017d24:	703c      	strb	r4, [r7, #0]
 8017d26:	6804      	ldr	r4, [r0, #0]
 8017d28:	b1a4      	cbz	r4, 8017d54 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8017d2a:	8824      	ldrh	r4, [r4, #0]
 8017d2c:	f04f 0901 	mov.w	r9, #1
 8017d30:	b314      	cbz	r4, 8017d78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d32:	2c2b      	cmp	r4, #43	; 0x2b
 8017d34:	d001      	beq.n	8017d3a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8017d36:	2c20      	cmp	r4, #32
 8017d38:	d110      	bne.n	8017d5c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8017d3a:	8014      	strh	r4, [r2, #0]
 8017d3c:	6804      	ldr	r4, [r0, #0]
 8017d3e:	b10c      	cbz	r4, 8017d44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8017d40:	3402      	adds	r4, #2
 8017d42:	6004      	str	r4, [r0, #0]
 8017d44:	680c      	ldr	r4, [r1, #0]
 8017d46:	b10c      	cbz	r4, 8017d4c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8017d48:	3401      	adds	r4, #1
 8017d4a:	600c      	str	r4, [r1, #0]
 8017d4c:	6804      	ldr	r4, [r0, #0]
 8017d4e:	b17c      	cbz	r4, 8017d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8017d50:	8824      	ldrh	r4, [r4, #0]
 8017d52:	e7ed      	b.n	8017d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d54:	680c      	ldr	r4, [r1, #0]
 8017d56:	b17c      	cbz	r4, 8017d78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d58:	7824      	ldrb	r4, [r4, #0]
 8017d5a:	e7e7      	b.n	8017d2c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8017d5c:	2c2d      	cmp	r4, #45	; 0x2d
 8017d5e:	d102      	bne.n	8017d66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8017d60:	f883 9000 	strb.w	r9, [r3]
 8017d64:	e7ea      	b.n	8017d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d66:	2c23      	cmp	r4, #35	; 0x23
 8017d68:	d107      	bne.n	8017d7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8017d6a:	f888 9000 	strb.w	r9, [r8]
 8017d6e:	e7e5      	b.n	8017d3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8017d70:	680c      	ldr	r4, [r1, #0]
 8017d72:	b10c      	cbz	r4, 8017d78 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8017d74:	7824      	ldrb	r4, [r4, #0]
 8017d76:	e7db      	b.n	8017d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8017d78:	2400      	movs	r4, #0
 8017d7a:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8017d7e:	2b09      	cmp	r3, #9
 8017d80:	d901      	bls.n	8017d86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8017d82:	2c2a      	cmp	r4, #42	; 0x2a
 8017d84:	d122      	bne.n	8017dcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017d86:	2301      	movs	r3, #1
 8017d88:	2c30      	cmp	r4, #48	; 0x30
 8017d8a:	f88e 3000 	strb.w	r3, [lr]
 8017d8e:	d10d      	bne.n	8017dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017d90:	f88c 3000 	strb.w	r3, [ip]
 8017d94:	6803      	ldr	r3, [r0, #0]
 8017d96:	b10b      	cbz	r3, 8017d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8017d98:	3302      	adds	r3, #2
 8017d9a:	6003      	str	r3, [r0, #0]
 8017d9c:	680b      	ldr	r3, [r1, #0]
 8017d9e:	b10b      	cbz	r3, 8017da4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8017da0:	3301      	adds	r3, #1
 8017da2:	600b      	str	r3, [r1, #0]
 8017da4:	6803      	ldr	r3, [r0, #0]
 8017da6:	2b00      	cmp	r3, #0
 8017da8:	d02f      	beq.n	8017e0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8017daa:	881c      	ldrh	r4, [r3, #0]
 8017dac:	2c2a      	cmp	r4, #42	; 0x2a
 8017dae:	d135      	bne.n	8017e1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017db0:	f04f 33ff 	mov.w	r3, #4294967295
 8017db4:	6033      	str	r3, [r6, #0]
 8017db6:	6803      	ldr	r3, [r0, #0]
 8017db8:	b10b      	cbz	r3, 8017dbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8017dba:	3302      	adds	r3, #2
 8017dbc:	6003      	str	r3, [r0, #0]
 8017dbe:	680b      	ldr	r3, [r1, #0]
 8017dc0:	b10b      	cbz	r3, 8017dc6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8017dc2:	3301      	adds	r3, #1
 8017dc4:	600b      	str	r3, [r1, #0]
 8017dc6:	6803      	ldr	r3, [r0, #0]
 8017dc8:	b31b      	cbz	r3, 8017e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8017dca:	881c      	ldrh	r4, [r3, #0]
 8017dcc:	2c2e      	cmp	r4, #46	; 0x2e
 8017dce:	d11a      	bne.n	8017e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017dd0:	2301      	movs	r3, #1
 8017dd2:	703b      	strb	r3, [r7, #0]
 8017dd4:	6803      	ldr	r3, [r0, #0]
 8017dd6:	b10b      	cbz	r3, 8017ddc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8017dd8:	3302      	adds	r3, #2
 8017dda:	6003      	str	r3, [r0, #0]
 8017ddc:	680b      	ldr	r3, [r1, #0]
 8017dde:	b10b      	cbz	r3, 8017de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8017de0:	3301      	adds	r3, #1
 8017de2:	600b      	str	r3, [r1, #0]
 8017de4:	6803      	ldr	r3, [r0, #0]
 8017de6:	2b00      	cmp	r3, #0
 8017de8:	d036      	beq.n	8017e58 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8017dea:	881b      	ldrh	r3, [r3, #0]
 8017dec:	2b2a      	cmp	r3, #42	; 0x2a
 8017dee:	d137      	bne.n	8017e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017df0:	f04f 33ff 	mov.w	r3, #4294967295
 8017df4:	602b      	str	r3, [r5, #0]
 8017df6:	6803      	ldr	r3, [r0, #0]
 8017df8:	b10b      	cbz	r3, 8017dfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8017dfa:	3302      	adds	r3, #2
 8017dfc:	6003      	str	r3, [r0, #0]
 8017dfe:	680b      	ldr	r3, [r1, #0]
 8017e00:	b10b      	cbz	r3, 8017e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e02:	3301      	adds	r3, #1
 8017e04:	600b      	str	r3, [r1, #0]
 8017e06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017e0a:	680c      	ldr	r4, [r1, #0]
 8017e0c:	b134      	cbz	r4, 8017e1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8017e0e:	7824      	ldrb	r4, [r4, #0]
 8017e10:	e7cc      	b.n	8017dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8017e12:	680b      	ldr	r3, [r1, #0]
 8017e14:	2b00      	cmp	r3, #0
 8017e16:	d0f6      	beq.n	8017e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8017e18:	781c      	ldrb	r4, [r3, #0]
 8017e1a:	e7d7      	b.n	8017dcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e1c:	2300      	movs	r3, #0
 8017e1e:	6033      	str	r3, [r6, #0]
 8017e20:	220a      	movs	r2, #10
 8017e22:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8017e26:	fa1f f38c 	uxth.w	r3, ip
 8017e2a:	2b09      	cmp	r3, #9
 8017e2c:	d8ce      	bhi.n	8017dcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8017e2e:	6833      	ldr	r3, [r6, #0]
 8017e30:	fb02 c303 	mla	r3, r2, r3, ip
 8017e34:	6033      	str	r3, [r6, #0]
 8017e36:	6803      	ldr	r3, [r0, #0]
 8017e38:	b10b      	cbz	r3, 8017e3e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8017e3a:	3302      	adds	r3, #2
 8017e3c:	6003      	str	r3, [r0, #0]
 8017e3e:	680b      	ldr	r3, [r1, #0]
 8017e40:	b10b      	cbz	r3, 8017e46 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8017e42:	3301      	adds	r3, #1
 8017e44:	600b      	str	r3, [r1, #0]
 8017e46:	6803      	ldr	r3, [r0, #0]
 8017e48:	b10b      	cbz	r3, 8017e4e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8017e4a:	881c      	ldrh	r4, [r3, #0]
 8017e4c:	e7e9      	b.n	8017e22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e4e:	680c      	ldr	r4, [r1, #0]
 8017e50:	2c00      	cmp	r4, #0
 8017e52:	d0e6      	beq.n	8017e22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e54:	7824      	ldrb	r4, [r4, #0]
 8017e56:	e7e4      	b.n	8017e22 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8017e58:	680b      	ldr	r3, [r1, #0]
 8017e5a:	b10b      	cbz	r3, 8017e60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8017e5c:	781b      	ldrb	r3, [r3, #0]
 8017e5e:	e7c5      	b.n	8017dec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8017e60:	2200      	movs	r2, #0
 8017e62:	602a      	str	r2, [r5, #0]
 8017e64:	240a      	movs	r4, #10
 8017e66:	3b30      	subs	r3, #48	; 0x30
 8017e68:	b29e      	uxth	r6, r3
 8017e6a:	2e09      	cmp	r6, #9
 8017e6c:	682a      	ldr	r2, [r5, #0]
 8017e6e:	d813      	bhi.n	8017e98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8017e70:	fb04 3302 	mla	r3, r4, r2, r3
 8017e74:	602b      	str	r3, [r5, #0]
 8017e76:	6803      	ldr	r3, [r0, #0]
 8017e78:	b10b      	cbz	r3, 8017e7e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8017e7a:	3302      	adds	r3, #2
 8017e7c:	6003      	str	r3, [r0, #0]
 8017e7e:	680b      	ldr	r3, [r1, #0]
 8017e80:	b10b      	cbz	r3, 8017e86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8017e82:	3301      	adds	r3, #1
 8017e84:	600b      	str	r3, [r1, #0]
 8017e86:	6803      	ldr	r3, [r0, #0]
 8017e88:	b10b      	cbz	r3, 8017e8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8017e8a:	881b      	ldrh	r3, [r3, #0]
 8017e8c:	e7eb      	b.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e8e:	680b      	ldr	r3, [r1, #0]
 8017e90:	2b00      	cmp	r3, #0
 8017e92:	d0e8      	beq.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e94:	781b      	ldrb	r3, [r3, #0]
 8017e96:	e7e6      	b.n	8017e66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8017e98:	2a06      	cmp	r2, #6
 8017e9a:	bfa8      	it	ge
 8017e9c:	2206      	movge	r2, #6
 8017e9e:	602a      	str	r2, [r5, #0]
 8017ea0:	e7b1      	b.n	8017e06 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08017ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8017ea2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ea6:	b0a3      	sub	sp, #140	; 0x8c
 8017ea8:	2600      	movs	r6, #0
 8017eaa:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8017eae:	4607      	mov	r7, r0
 8017eb0:	4688      	mov	r8, r1
 8017eb2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8017eb6:	4631      	mov	r1, r6
 8017eb8:	2242      	movs	r2, #66	; 0x42
 8017eba:	4648      	mov	r0, r9
 8017ebc:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8017ebe:	960d      	str	r6, [sp, #52]	; 0x34
 8017ec0:	f00e fc40 	bl	8026744 <memset>
 8017ec4:	b15f      	cbz	r7, 8017ede <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8017ec6:	f108 3aff 	add.w	sl, r8, #4294967295
 8017eca:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8017ecc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ece:	b152      	cbz	r2, 8017ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8017ed0:	8812      	ldrh	r2, [r2, #0]
 8017ed2:	b10a      	cbz	r2, 8017ed8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017ed4:	459a      	cmp	sl, r3
 8017ed6:	dc2e      	bgt.n	8017f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8017ed8:	2200      	movs	r2, #0
 8017eda:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017ede:	4638      	mov	r0, r7
 8017ee0:	b023      	add	sp, #140	; 0x8c
 8017ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ee6:	9a08      	ldr	r2, [sp, #32]
 8017ee8:	2a00      	cmp	r2, #0
 8017eea:	d0f5      	beq.n	8017ed8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8017eec:	7812      	ldrb	r2, [r2, #0]
 8017eee:	e7f0      	b.n	8017ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8017ef0:	2d00      	cmp	r5, #0
 8017ef2:	d0ea      	beq.n	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017ef4:	782a      	ldrb	r2, [r5, #0]
 8017ef6:	b142      	cbz	r2, 8017f0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8017ef8:	2a25      	cmp	r2, #37	; 0x25
 8017efa:	d001      	beq.n	8017f00 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8017efc:	459a      	cmp	sl, r3
 8017efe:	dc08      	bgt.n	8017f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8017f00:	f1bb 0f00 	cmp.w	fp, #0
 8017f04:	d121      	bne.n	8017f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8017f06:	2d00      	cmp	r5, #0
 8017f08:	d0df      	beq.n	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f0a:	782a      	ldrb	r2, [r5, #0]
 8017f0c:	f04f 0b00 	mov.w	fp, #0
 8017f10:	e01d      	b.n	8017f4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8017f12:	f1bb 0f00 	cmp.w	fp, #0
 8017f16:	d078      	beq.n	801800a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8017f18:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f1c:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8017f20:	f1bb 0f00 	cmp.w	fp, #0
 8017f24:	d002      	beq.n	8017f2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8017f26:	f10b 0202 	add.w	r2, fp, #2
 8017f2a:	9209      	str	r2, [sp, #36]	; 0x24
 8017f2c:	b10d      	cbz	r5, 8017f32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8017f2e:	3501      	adds	r5, #1
 8017f30:	9508      	str	r5, [sp, #32]
 8017f32:	3301      	adds	r3, #1
 8017f34:	930d      	str	r3, [sp, #52]	; 0x34
 8017f36:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8017f3a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017f3c:	f1bb 0f00 	cmp.w	fp, #0
 8017f40:	d0d6      	beq.n	8017ef0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8017f42:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f46:	2a00      	cmp	r2, #0
 8017f48:	d1d6      	bne.n	8017ef8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8017f4a:	f8bb 2000 	ldrh.w	r2, [fp]
 8017f4e:	2a00      	cmp	r2, #0
 8017f50:	d0bb      	beq.n	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f52:	459a      	cmp	sl, r3
 8017f54:	ddb9      	ble.n	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8017f56:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8017f5a:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8017f5e:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8017f62:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8017f66:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8017f6a:	960e      	str	r6, [sp, #56]	; 0x38
 8017f6c:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8017f70:	960f      	str	r6, [sp, #60]	; 0x3c
 8017f72:	f1bb 0f00 	cmp.w	fp, #0
 8017f76:	d002      	beq.n	8017f7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8017f78:	f10b 0302 	add.w	r3, fp, #2
 8017f7c:	9309      	str	r3, [sp, #36]	; 0x24
 8017f7e:	b10d      	cbz	r5, 8017f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8017f80:	1c6b      	adds	r3, r5, #1
 8017f82:	9308      	str	r3, [sp, #32]
 8017f84:	ab0f      	add	r3, sp, #60	; 0x3c
 8017f86:	9305      	str	r3, [sp, #20]
 8017f88:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8017f8c:	9304      	str	r3, [sp, #16]
 8017f8e:	ab0e      	add	r3, sp, #56	; 0x38
 8017f90:	9303      	str	r3, [sp, #12]
 8017f92:	ab0c      	add	r3, sp, #48	; 0x30
 8017f94:	9302      	str	r3, [sp, #8]
 8017f96:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8017f9a:	9301      	str	r3, [sp, #4]
 8017f9c:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8017fa0:	9300      	str	r3, [sp, #0]
 8017fa2:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8017fa6:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8017faa:	a908      	add	r1, sp, #32
 8017fac:	a809      	add	r0, sp, #36	; 0x24
 8017fae:	f7ff fea8 	bl	8017d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017fb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fb4:	2b00      	cmp	r3, #0
 8017fb6:	bfbe      	ittt	lt
 8017fb8:	6823      	ldrlt	r3, [r4, #0]
 8017fba:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fbe:	930e      	strlt	r3, [sp, #56]	; 0x38
 8017fc0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017fc2:	bfb8      	it	lt
 8017fc4:	3404      	addlt	r4, #4
 8017fc6:	2b00      	cmp	r3, #0
 8017fc8:	bfb8      	it	lt
 8017fca:	6823      	ldrlt	r3, [r4, #0]
 8017fcc:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017fd0:	bfbe      	ittt	lt
 8017fd2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017fd6:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8017fd8:	3404      	addlt	r4, #4
 8017fda:	b1d9      	cbz	r1, 8018014 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017fdc:	880b      	ldrh	r3, [r1, #0]
 8017fde:	2b69      	cmp	r3, #105	; 0x69
 8017fe0:	d01f      	beq.n	8018022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fe2:	d82f      	bhi.n	8018044 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8017fe4:	2b58      	cmp	r3, #88	; 0x58
 8017fe6:	d01c      	beq.n	8018022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017fe8:	d818      	bhi.n	801801c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017fea:	2b25      	cmp	r3, #37	; 0x25
 8017fec:	d034      	beq.n	8018058 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017fee:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8017ff2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017ff4:	f1bb 0f00 	cmp.w	fp, #0
 8017ff8:	f000 80b8 	beq.w	801816c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017ffc:	f8bb 5000 	ldrh.w	r5, [fp]
 8018000:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8018004:	3301      	adds	r3, #1
 8018006:	930d      	str	r3, [sp, #52]	; 0x34
 8018008:	e029      	b.n	801805e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801800a:	b10d      	cbz	r5, 8018010 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 801800c:	782a      	ldrb	r2, [r5, #0]
 801800e:	e785      	b.n	8017f1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018010:	462a      	mov	r2, r5
 8018012:	e783      	b.n	8017f1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8018014:	2a00      	cmp	r2, #0
 8018016:	d0ea      	beq.n	8017fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018018:	7813      	ldrb	r3, [r2, #0]
 801801a:	e7e0      	b.n	8017fde <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 801801c:	3b63      	subs	r3, #99	; 0x63
 801801e:	2b01      	cmp	r3, #1
 8018020:	d8e5      	bhi.n	8017fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8018022:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8018026:	b329      	cbz	r1, 8018074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8018028:	880b      	ldrh	r3, [r1, #0]
 801802a:	2b69      	cmp	r3, #105	; 0x69
 801802c:	d063      	beq.n	80180f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801802e:	d825      	bhi.n	801807c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8018030:	2b63      	cmp	r3, #99	; 0x63
 8018032:	d038      	beq.n	80180a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8018034:	2b64      	cmp	r3, #100	; 0x64
 8018036:	d05e      	beq.n	80180f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8018038:	2b58      	cmp	r3, #88	; 0x58
 801803a:	d07b      	beq.n	8018134 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 801803c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8018040:	4625      	mov	r5, r4
 8018042:	e036      	b.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018044:	2b73      	cmp	r3, #115	; 0x73
 8018046:	d0ec      	beq.n	8018022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018048:	d802      	bhi.n	8018050 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801804a:	2b6f      	cmp	r3, #111	; 0x6f
 801804c:	d1cf      	bne.n	8017fee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801804e:	e7e8      	b.n	8018022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018050:	2b75      	cmp	r3, #117	; 0x75
 8018052:	d0e6      	beq.n	8018022 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8018054:	2b78      	cmp	r3, #120	; 0x78
 8018056:	e7f9      	b.n	801804c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8018058:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801805a:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 801805e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018060:	b10b      	cbz	r3, 8018066 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8018062:	3302      	adds	r3, #2
 8018064:	9309      	str	r3, [sp, #36]	; 0x24
 8018066:	9b08      	ldr	r3, [sp, #32]
 8018068:	2b00      	cmp	r3, #0
 801806a:	f43f af2e 	beq.w	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801806e:	3301      	adds	r3, #1
 8018070:	9308      	str	r3, [sp, #32]
 8018072:	e72a      	b.n	8017eca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8018074:	2a00      	cmp	r2, #0
 8018076:	d0e1      	beq.n	801803c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018078:	7813      	ldrb	r3, [r2, #0]
 801807a:	e7d6      	b.n	801802a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 801807c:	2b73      	cmp	r3, #115	; 0x73
 801807e:	d036      	beq.n	80180ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8018080:	d807      	bhi.n	8018092 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8018082:	2b6f      	cmp	r3, #111	; 0x6f
 8018084:	d1da      	bne.n	801803c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8018086:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018088:	1d25      	adds	r5, r4, #4
 801808a:	eba8 0202 	sub.w	r2, r8, r2
 801808e:	2308      	movs	r3, #8
 8018090:	e04a      	b.n	8018128 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8018092:	2b75      	cmp	r3, #117	; 0x75
 8018094:	d043      	beq.n	801811e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8018096:	2b78      	cmp	r3, #120	; 0x78
 8018098:	d1d0      	bne.n	801803c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801809a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801809c:	1d25      	adds	r5, r4, #4
 801809e:	eba8 0202 	sub.w	r2, r8, r2
 80180a2:	2310      	movs	r3, #16
 80180a4:	e040      	b.n	8018128 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80180a6:	6823      	ldr	r3, [r4, #0]
 80180a8:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80180ac:	1d25      	adds	r5, r4, #4
 80180ae:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 80180b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80180b4:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80180b8:	2b00      	cmp	r3, #0
 80180ba:	d052      	beq.n	8018162 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80180bc:	881a      	ldrh	r2, [r3, #0]
 80180be:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80180c2:	a80d      	add	r0, sp, #52	; 0x34
 80180c4:	9005      	str	r0, [sp, #20]
 80180c6:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80180ca:	9004      	str	r0, [sp, #16]
 80180cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80180ce:	9003      	str	r0, [sp, #12]
 80180d0:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80180d4:	9002      	str	r0, [sp, #8]
 80180d6:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80180d8:	9001      	str	r0, [sp, #4]
 80180da:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80180de:	9000      	str	r0, [sp, #0]
 80180e0:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80180e4:	a810      	add	r0, sp, #64	; 0x40
 80180e6:	f7ff fd49 	bl	8017b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80180ea:	462c      	mov	r4, r5
 80180ec:	e7b7      	b.n	801805e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80180ee:	6823      	ldr	r3, [r4, #0]
 80180f0:	1d25      	adds	r5, r4, #4
 80180f2:	9310      	str	r3, [sp, #64]	; 0x40
 80180f4:	e7dd      	b.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80180f6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80180f8:	6820      	ldr	r0, [r4, #0]
 80180fa:	eba8 0202 	sub.w	r2, r8, r2
 80180fe:	230a      	movs	r3, #10
 8018100:	b292      	uxth	r2, r2
 8018102:	4649      	mov	r1, r9
 8018104:	f7ff fce4 	bl	8017ad0 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8018108:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801810c:	2b2d      	cmp	r3, #45	; 0x2d
 801810e:	f104 0504 	add.w	r5, r4, #4
 8018112:	d1ce      	bne.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018114:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018118:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801811a:	3302      	adds	r3, #2
 801811c:	e7e9      	b.n	80180f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 801811e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018120:	1d25      	adds	r5, r4, #4
 8018122:	eba8 0202 	sub.w	r2, r8, r2
 8018126:	230a      	movs	r3, #10
 8018128:	b292      	uxth	r2, r2
 801812a:	4649      	mov	r1, r9
 801812c:	6820      	ldr	r0, [r4, #0]
 801812e:	f7ff fcfb 	bl	8017b28 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018132:	e7be      	b.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018134:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018136:	6820      	ldr	r0, [r4, #0]
 8018138:	eba8 0202 	sub.w	r2, r8, r2
 801813c:	b292      	uxth	r2, r2
 801813e:	2310      	movs	r3, #16
 8018140:	4649      	mov	r1, r9
 8018142:	f7ff fcf1 	bl	8017b28 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 8018146:	1d25      	adds	r5, r4, #4
 8018148:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 801814c:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8018150:	2b00      	cmp	r3, #0
 8018152:	d0ae      	beq.n	80180b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8018154:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8018158:	2919      	cmp	r1, #25
 801815a:	d8f7      	bhi.n	801814c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 801815c:	3b20      	subs	r3, #32
 801815e:	8013      	strh	r3, [r2, #0]
 8018160:	e7f4      	b.n	801814c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8018162:	9a08      	ldr	r2, [sp, #32]
 8018164:	2a00      	cmp	r2, #0
 8018166:	d0aa      	beq.n	80180be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8018168:	7812      	ldrb	r2, [r2, #0]
 801816a:	e7a8      	b.n	80180be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801816c:	2d00      	cmp	r5, #0
 801816e:	f43f af47 	beq.w	8018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8018172:	782d      	ldrb	r5, [r5, #0]
 8018174:	e744      	b.n	8018000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08018176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8018176:	b507      	push	{r0, r1, r2, lr}
 8018178:	9300      	str	r3, [sp, #0]
 801817a:	4613      	mov	r3, r2
 801817c:	2200      	movs	r2, #0
 801817e:	f7ff fe90 	bl	8017ea2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8018182:	b003      	add	sp, #12
 8018184:	f85d fb04 	ldr.w	pc, [sp], #4

08018188 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8018188:	b40c      	push	{r2, r3}
 801818a:	b507      	push	{r0, r1, r2, lr}
 801818c:	ab04      	add	r3, sp, #16
 801818e:	f853 2b04 	ldr.w	r2, [r3], #4
 8018192:	9301      	str	r3, [sp, #4]
 8018194:	f7ff ffef 	bl	8018176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8018198:	b003      	add	sp, #12
 801819a:	f85d eb04 	ldr.w	lr, [sp], #4
 801819e:	b002      	add	sp, #8
 80181a0:	4770      	bx	lr
	...

080181a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80181a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181a8:	b0c5      	sub	sp, #276	; 0x114
 80181aa:	2400      	movs	r4, #0
 80181ac:	af11      	add	r7, sp, #68	; 0x44
 80181ae:	4606      	mov	r6, r0
 80181b0:	468a      	mov	sl, r1
 80181b2:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80181b6:	4621      	mov	r1, r4
 80181b8:	22c8      	movs	r2, #200	; 0xc8
 80181ba:	4638      	mov	r0, r7
 80181bc:	f8dd b138 	ldr.w	fp, [sp, #312]	; 0x138
 80181c0:	940d      	str	r4, [sp, #52]	; 0x34
 80181c2:	f00e fabf 	bl	8026744 <memset>
 80181c6:	b16e      	cbz	r6, 80181e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80181c8:	ed9f 5aa8 	vldr	s10, [pc, #672]	; 801846c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80181cc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80181ce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80181d0:	b162      	cbz	r2, 80181ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 80181d2:	8812      	ldrh	r2, [r2, #0]
 80181d4:	b11a      	cbz	r2, 80181de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80181d6:	f10a 31ff 	add.w	r1, sl, #4294967295
 80181da:	4299      	cmp	r1, r3
 80181dc:	dc2e      	bgt.n	801823c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 80181de:	2200      	movs	r2, #0
 80181e0:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 80181e4:	4630      	mov	r0, r6
 80181e6:	b045      	add	sp, #276	; 0x114
 80181e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80181ec:	9a08      	ldr	r2, [sp, #32]
 80181ee:	2a00      	cmp	r2, #0
 80181f0:	d0f5      	beq.n	80181de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 80181f2:	7812      	ldrb	r2, [r2, #0]
 80181f4:	e7ee      	b.n	80181d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 80181f6:	2d00      	cmp	r5, #0
 80181f8:	d0e8      	beq.n	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80181fa:	782a      	ldrb	r2, [r5, #0]
 80181fc:	b142      	cbz	r2, 8018210 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 80181fe:	2a25      	cmp	r2, #37	; 0x25
 8018200:	d001      	beq.n	8018206 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 8018202:	4299      	cmp	r1, r3
 8018204:	dc08      	bgt.n	8018218 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8018206:	f1b8 0f00 	cmp.w	r8, #0
 801820a:	d121      	bne.n	8018250 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 801820c:	2d00      	cmp	r5, #0
 801820e:	d0dd      	beq.n	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018210:	782a      	ldrb	r2, [r5, #0]
 8018212:	f04f 0800 	mov.w	r8, #0
 8018216:	e01d      	b.n	8018254 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8018218:	f1b8 0f00 	cmp.w	r8, #0
 801821c:	d07f      	beq.n	801831e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 801821e:	f8b8 2000 	ldrh.w	r2, [r8]
 8018222:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018226:	f1b8 0f00 	cmp.w	r8, #0
 801822a:	d002      	beq.n	8018232 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 801822c:	f108 0202 	add.w	r2, r8, #2
 8018230:	9209      	str	r2, [sp, #36]	; 0x24
 8018232:	b10d      	cbz	r5, 8018238 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 8018234:	3501      	adds	r5, #1
 8018236:	9508      	str	r5, [sp, #32]
 8018238:	3301      	adds	r3, #1
 801823a:	930d      	str	r3, [sp, #52]	; 0x34
 801823c:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8018240:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018242:	f1b8 0f00 	cmp.w	r8, #0
 8018246:	d0d6      	beq.n	80181f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 8018248:	f8b8 2000 	ldrh.w	r2, [r8]
 801824c:	2a00      	cmp	r2, #0
 801824e:	d1d6      	bne.n	80181fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 8018250:	f8b8 2000 	ldrh.w	r2, [r8]
 8018254:	2a00      	cmp	r2, #0
 8018256:	d0b9      	beq.n	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8018258:	4299      	cmp	r1, r3
 801825a:	ddb7      	ble.n	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801825c:	2300      	movs	r3, #0
 801825e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018262:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8018266:	f88d 302e 	strb.w	r3, [sp, #46]	; 0x2e
 801826a:	f88d 302f 	strb.w	r3, [sp, #47]	; 0x2f
 801826e:	f88d 3030 	strb.w	r3, [sp, #48]	; 0x30
 8018272:	930e      	str	r3, [sp, #56]	; 0x38
 8018274:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018278:	930f      	str	r3, [sp, #60]	; 0x3c
 801827a:	f1b8 0f00 	cmp.w	r8, #0
 801827e:	d002      	beq.n	8018286 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 8018280:	f108 0302 	add.w	r3, r8, #2
 8018284:	9309      	str	r3, [sp, #36]	; 0x24
 8018286:	b10d      	cbz	r5, 801828c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 8018288:	1c6b      	adds	r3, r5, #1
 801828a:	9308      	str	r3, [sp, #32]
 801828c:	ab0f      	add	r3, sp, #60	; 0x3c
 801828e:	9305      	str	r3, [sp, #20]
 8018290:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8018294:	9304      	str	r3, [sp, #16]
 8018296:	ab0e      	add	r3, sp, #56	; 0x38
 8018298:	9303      	str	r3, [sp, #12]
 801829a:	ab0c      	add	r3, sp, #48	; 0x30
 801829c:	9302      	str	r3, [sp, #8]
 801829e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80182a2:	9301      	str	r3, [sp, #4]
 80182a4:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 80182a8:	9300      	str	r3, [sp, #0]
 80182aa:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 80182ae:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80182b2:	a908      	add	r1, sp, #32
 80182b4:	a809      	add	r0, sp, #36	; 0x24
 80182b6:	f7ff fd24 	bl	8017d02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80182ba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80182bc:	2b00      	cmp	r3, #0
 80182be:	da0b      	bge.n	80182d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 80182c0:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80182c4:	edd3 7a00 	vldr	s15, [r3]
 80182c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80182cc:	3401      	adds	r4, #1
 80182ce:	ee17 3a90 	vmov	r3, s15
 80182d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182d6:	930e      	str	r3, [sp, #56]	; 0x38
 80182d8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80182da:	2b00      	cmp	r3, #0
 80182dc:	da0b      	bge.n	80182f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 80182de:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 80182e2:	edd3 7a00 	vldr	s15, [r3]
 80182e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80182ea:	3401      	adds	r4, #1
 80182ec:	ee17 3a90 	vmov	r3, s15
 80182f0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80182f4:	930f      	str	r3, [sp, #60]	; 0x3c
 80182f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80182f8:	b1b3      	cbz	r3, 8018328 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 80182fa:	881a      	ldrh	r2, [r3, #0]
 80182fc:	2a25      	cmp	r2, #37	; 0x25
 80182fe:	d018      	beq.n	8018332 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8018300:	2a66      	cmp	r2, #102	; 0x66
 8018302:	d01c      	beq.n	801833e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 8018304:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8018308:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801830a:	f1b8 0f00 	cmp.w	r8, #0
 801830e:	f000 8121 	beq.w	8018554 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3b0>
 8018312:	f8b8 5000 	ldrh.w	r5, [r8]
 8018316:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 801831a:	3301      	adds	r3, #1
 801831c:	e00d      	b.n	801833a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 801831e:	b10d      	cbz	r5, 8018324 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8018320:	782a      	ldrb	r2, [r5, #0]
 8018322:	e77e      	b.n	8018222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018324:	462a      	mov	r2, r5
 8018326:	e77c      	b.n	8018222 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8018328:	9b08      	ldr	r3, [sp, #32]
 801832a:	2b00      	cmp	r3, #0
 801832c:	d0ea      	beq.n	8018304 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 801832e:	781a      	ldrb	r2, [r3, #0]
 8018330:	e7e4      	b.n	80182fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8018332:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018334:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8018338:	3302      	adds	r3, #2
 801833a:	930d      	str	r3, [sp, #52]	; 0x34
 801833c:	e041      	b.n	80183c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 801833e:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 8018342:	edd3 7a00 	vldr	s15, [r3]
 8018346:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801834a:	9710      	str	r7, [sp, #64]	; 0x40
 801834c:	3401      	adds	r4, #1
 801834e:	b923      	cbnz	r3, 801835a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 8018350:	2301      	movs	r3, #1
 8018352:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 8018356:	2306      	movs	r3, #6
 8018358:	930f      	str	r3, [sp, #60]	; 0x3c
 801835a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801835e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018362:	bf48      	it	mi
 8018364:	eef1 7a67 	vnegmi.f32	s15, s15
 8018368:	eeb0 7ae7 	vabs.f32	s14, s15
 801836c:	bf48      	it	mi
 801836e:	232d      	movmi	r3, #45	; 0x2d
 8018370:	eeb4 7a45 	vcmp.f32	s14, s10
 8018374:	bf48      	it	mi
 8018376:	f8ad 3032 	strhmi.w	r3, [sp, #50]	; 0x32
 801837a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801837e:	dd2b      	ble.n	80183d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 8018380:	4b3b      	ldr	r3, [pc, #236]	; (8018470 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 8018382:	9311      	str	r3, [sp, #68]	; 0x44
 8018384:	2366      	movs	r3, #102	; 0x66
 8018386:	9312      	str	r3, [sp, #72]	; 0x48
 8018388:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801838a:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801838e:	2b00      	cmp	r3, #0
 8018390:	f000 80da 	beq.w	8018548 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8018394:	881a      	ldrh	r2, [r3, #0]
 8018396:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 801839a:	a80d      	add	r0, sp, #52	; 0x34
 801839c:	9005      	str	r0, [sp, #20]
 801839e:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80183a2:	9004      	str	r0, [sp, #16]
 80183a4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80183a6:	9003      	str	r0, [sp, #12]
 80183a8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80183ac:	9002      	str	r0, [sp, #8]
 80183ae:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80183b0:	9001      	str	r0, [sp, #4]
 80183b2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80183b6:	9000      	str	r0, [sp, #0]
 80183b8:	e9cd a606 	strd	sl, r6, [sp, #24]
 80183bc:	a810      	add	r0, sp, #64	; 0x40
 80183be:	f7ff fbdd 	bl	8017b7c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80183c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80183c4:	b10b      	cbz	r3, 80183ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 80183c6:	3302      	adds	r3, #2
 80183c8:	9309      	str	r3, [sp, #36]	; 0x24
 80183ca:	9b08      	ldr	r3, [sp, #32]
 80183cc:	2b00      	cmp	r3, #0
 80183ce:	f43f aefd 	beq.w	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80183d2:	3301      	adds	r3, #1
 80183d4:	9308      	str	r3, [sp, #32]
 80183d6:	e6f9      	b.n	80181cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80183d8:	eef4 7a67 	vcmp.f32	s15, s15
 80183dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80183e0:	d63a      	bvs.n	8018458 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 80183e2:	f10d 0846 	add.w	r8, sp, #70	; 0x46
 80183e6:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 80183ea:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
 80183ee:	eeb0 6a67 	vmov.f32	s12, s15
 80183f2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80183f6:	eef0 5a47 	vmov.f32	s11, s14
 80183fa:	eeb4 6ac7 	vcmpe.f32	s12, s14
 80183fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8018402:	da2d      	bge.n	8018460 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8018404:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8018406:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801840a:	2100      	movs	r1, #0
 801840c:	eef0 4a46 	vmov.f32	s9, s12
 8018410:	ebaa 0202 	sub.w	r2, sl, r2
 8018414:	eef4 6ac6 	vcmpe.f32	s13, s12
 8018418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801841c:	b28d      	uxth	r5, r1
 801841e:	db2c      	blt.n	801847a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018420:	1a53      	subs	r3, r2, r1
 8018422:	2b00      	cmp	r3, #0
 8018424:	dd29      	ble.n	801847a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8018426:	3101      	adds	r1, #1
 8018428:	2964      	cmp	r1, #100	; 0x64
 801842a:	d025      	beq.n	8018478 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 801842c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8018430:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8018434:	ee17 3a10 	vmov	r3, s14
 8018438:	2b09      	cmp	r3, #9
 801843a:	bfa8      	it	ge
 801843c:	2309      	movge	r3, #9
 801843e:	ee07 3a10 	vmov	s14, r3
 8018442:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8018446:	f103 0030 	add.w	r0, r3, #48	; 0x30
 801844a:	eee7 7a66 	vfms.f32	s15, s14, s13
 801844e:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 8018452:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 8018456:	e7dd      	b.n	8018414 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 8018458:	4b06      	ldr	r3, [pc, #24]	; (8018474 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 801845a:	9311      	str	r3, [sp, #68]	; 0x44
 801845c:	236e      	movs	r3, #110	; 0x6e
 801845e:	e792      	b.n	8018386 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 8018460:	ee66 6a87 	vmul.f32	s13, s13, s14
 8018464:	ee86 6a07 	vdiv.f32	s12, s12, s14
 8018468:	e7c7      	b.n	80183fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 801846a:	bf00      	nop
 801846c:	7f7fffff 	.word	0x7f7fffff
 8018470:	006e0069 	.word	0x006e0069
 8018474:	0061006e 	.word	0x0061006e
 8018478:	2563      	movs	r5, #99	; 0x63
 801847a:	2a63      	cmp	r2, #99	; 0x63
 801847c:	bfd4      	ite	le
 801847e:	ebc5 0202 	rsble	r2, r5, r2
 8018482:	f1c5 0263 	rsbgt	r2, r5, #99	; 0x63
 8018486:	2a00      	cmp	r2, #0
 8018488:	dd43      	ble.n	8018512 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 801848a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801848c:	2b00      	cmp	r3, #0
 801848e:	dd40      	ble.n	8018512 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36e>
 8018490:	f04f 0901 	mov.w	r9, #1
 8018494:	210a      	movs	r1, #10
 8018496:	f113 33ff 	adds.w	r3, r3, #4294967295
 801849a:	d30c      	bcc.n	80184b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x312>
 801849c:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80184a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80184a4:	ee17 0a10 	vmov	r0, s14
 80184a8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80184ac:	fb01 0909 	mla	r9, r1, r9, r0
 80184b0:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80184b4:	e7ef      	b.n	8018496 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f2>
 80184b6:	3501      	adds	r5, #1
 80184b8:	930f      	str	r3, [sp, #60]	; 0x3c
 80184ba:	b292      	uxth	r2, r2
 80184bc:	230a      	movs	r3, #10
 80184be:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 80184c2:	4648      	mov	r0, r9
 80184c4:	f7ff fb4e 	bl	8017b64 <_ZN8touchgfx7Unicode4itoaElPtti>
 80184c8:	f1b9 0f01 	cmp.w	r9, #1
 80184cc:	dc1f      	bgt.n	801850e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36a>
 80184ce:	f89d 302e 	ldrb.w	r3, [sp, #46]	; 0x2e
 80184d2:	2b00      	cmp	r3, #0
 80184d4:	bf0c      	ite	eq
 80184d6:	2300      	moveq	r3, #0
 80184d8:	232e      	movne	r3, #46	; 0x2e
 80184da:	aa44      	add	r2, sp, #272	; 0x110
 80184dc:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80184e0:	eef4 7ae4 	vcmpe.f32	s15, s9
 80184e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80184e8:	f825 3ccc 	strh.w	r3, [r5, #-204]
 80184ec:	f6ff af4c 	blt.w	8018388 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80184f0:	2300      	movs	r3, #0
 80184f2:	f838 2b02 	ldrh.w	r2, [r8], #2
 80184f6:	1c59      	adds	r1, r3, #1
 80184f8:	b98a      	cbnz	r2, 801851e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37a>
 80184fa:	b29b      	uxth	r3, r3
 80184fc:	2130      	movs	r1, #48	; 0x30
 80184fe:	b983      	cbnz	r3, 8018522 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 8018500:	2331      	movs	r3, #49	; 0x31
 8018502:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8018506:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018508:	3b02      	subs	r3, #2
 801850a:	9310      	str	r3, [sp, #64]	; 0x40
 801850c:	e73c      	b.n	8018388 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801850e:	232e      	movs	r3, #46	; 0x2e
 8018510:	e7e3      	b.n	80184da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x336>
 8018512:	ab44      	add	r3, sp, #272	; 0x110
 8018514:	3501      	adds	r5, #1
 8018516:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801851a:	2300      	movs	r3, #0
 801851c:	e7e0      	b.n	80184e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 801851e:	460b      	mov	r3, r1
 8018520:	e7e7      	b.n	80184f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x34e>
 8018522:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 8018526:	f1a2 0030 	sub.w	r0, r2, #48	; 0x30
 801852a:	2808      	cmp	r0, #8
 801852c:	d806      	bhi.n	801853c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x398>
 801852e:	a944      	add	r1, sp, #272	; 0x110
 8018530:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8018534:	3201      	adds	r2, #1
 8018536:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801853a:	e725      	b.n	8018388 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 801853c:	2a39      	cmp	r2, #57	; 0x39
 801853e:	bf08      	it	eq
 8018540:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 8018544:	3b01      	subs	r3, #1
 8018546:	e7da      	b.n	80184fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x35a>
 8018548:	9a08      	ldr	r2, [sp, #32]
 801854a:	2a00      	cmp	r2, #0
 801854c:	f43f af23 	beq.w	8018396 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018550:	7812      	ldrb	r2, [r2, #0]
 8018552:	e720      	b.n	8018396 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 8018554:	2d00      	cmp	r5, #0
 8018556:	f43f aede 	beq.w	8018316 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801855a:	782d      	ldrb	r5, [r5, #0]
 801855c:	e6db      	b.n	8018316 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 801855e:	bf00      	nop

08018560 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8018560:	b507      	push	{r0, r1, r2, lr}
 8018562:	9300      	str	r3, [sp, #0]
 8018564:	4613      	mov	r3, r2
 8018566:	2200      	movs	r2, #0
 8018568:	f7ff fe1c 	bl	80181a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 801856c:	b003      	add	sp, #12
 801856e:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08018574 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8018574:	4b01      	ldr	r3, [pc, #4]	; (801857c <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8018576:	6018      	str	r0, [r3, #0]
 8018578:	4770      	bx	lr
 801857a:	bf00      	nop
 801857c:	2000ef84 	.word	0x2000ef84

08018580 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8018580:	4b06      	ldr	r3, [pc, #24]	; (801859c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8018582:	881a      	ldrh	r2, [r3, #0]
 8018584:	4282      	cmp	r2, r0
 8018586:	d807      	bhi.n	8018598 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8018588:	4b05      	ldr	r3, [pc, #20]	; (80185a0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801858a:	881b      	ldrh	r3, [r3, #0]
 801858c:	4413      	add	r3, r2
 801858e:	4298      	cmp	r0, r3
 8018590:	bfac      	ite	ge
 8018592:	2000      	movge	r0, #0
 8018594:	2001      	movlt	r0, #1
 8018596:	4770      	bx	lr
 8018598:	2000      	movs	r0, #0
 801859a:	4770      	bx	lr
 801859c:	2000efa4 	.word	0x2000efa4
 80185a0:	2000efa8 	.word	0x2000efa8

080185a4 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80185a4:	b508      	push	{r3, lr}
 80185a6:	4601      	mov	r1, r0
 80185a8:	f7ff ffea 	bl	8018580 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80185ac:	b118      	cbz	r0, 80185b6 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80185ae:	4b02      	ldr	r3, [pc, #8]	; (80185b8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80185b0:	681b      	ldr	r3, [r3, #0]
 80185b2:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80185b6:	bd08      	pop	{r3, pc}
 80185b8:	2000ef88 	.word	0x2000ef88

080185bc <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80185bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80185be:	4c24      	ldr	r4, [pc, #144]	; (8018650 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80185c0:	6823      	ldr	r3, [r4, #0]
 80185c2:	2b00      	cmp	r3, #0
 80185c4:	d042      	beq.n	801864c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80185c6:	4a23      	ldr	r2, [pc, #140]	; (8018654 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80185c8:	4d23      	ldr	r5, [pc, #140]	; (8018658 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80185ca:	8811      	ldrh	r1, [r2, #0]
 80185cc:	f8b5 c000 	ldrh.w	ip, [r5]
 80185d0:	4822      	ldr	r0, [pc, #136]	; (801865c <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80185d2:	4461      	add	r1, ip
 80185d4:	1c4a      	adds	r2, r1, #1
 80185d6:	f022 0201 	bic.w	r2, r2, #1
 80185da:	008f      	lsls	r7, r1, #2
 80185dc:	0412      	lsls	r2, r2, #16
 80185de:	19de      	adds	r6, r3, r7
 80185e0:	0c12      	lsrs	r2, r2, #16
 80185e2:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80185e6:	6006      	str	r6, [r0, #0]
 80185e8:	4e1d      	ldr	r6, [pc, #116]	; (8018660 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80185ea:	19da      	adds	r2, r3, r7
 80185ec:	6032      	str	r2, [r6, #0]
 80185ee:	220e      	movs	r2, #14
 80185f0:	fb02 f20c 	mul.w	r2, r2, ip
 80185f4:	3203      	adds	r2, #3
 80185f6:	f022 0203 	bic.w	r2, r2, #3
 80185fa:	443a      	add	r2, r7
 80185fc:	4f19      	ldr	r7, [pc, #100]	; (8018664 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80185fe:	4413      	add	r3, r2
 8018600:	603b      	str	r3, [r7, #0]
 8018602:	4f19      	ldr	r7, [pc, #100]	; (8018668 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8018604:	2300      	movs	r3, #0
 8018606:	803b      	strh	r3, [r7, #0]
 8018608:	4f18      	ldr	r7, [pc, #96]	; (801866c <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801860a:	683f      	ldr	r7, [r7, #0]
 801860c:	1aba      	subs	r2, r7, r2
 801860e:	4f18      	ldr	r7, [pc, #96]	; (8018670 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8018610:	603a      	str	r2, [r7, #0]
 8018612:	4a18      	ldr	r2, [pc, #96]	; (8018674 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8018614:	469c      	mov	ip, r3
 8018616:	8013      	strh	r3, [r2, #0]
 8018618:	f64f 77ff 	movw	r7, #65535	; 0xffff
 801861c:	428b      	cmp	r3, r1
 801861e:	d10d      	bne.n	801863c <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8018620:	882d      	ldrh	r5, [r5, #0]
 8018622:	6830      	ldr	r0, [r6, #0]
 8018624:	2300      	movs	r3, #0
 8018626:	240e      	movs	r4, #14
 8018628:	429d      	cmp	r5, r3
 801862a:	d90f      	bls.n	801864c <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 801862c:	fb04 0203 	mla	r2, r4, r3, r0
 8018630:	3301      	adds	r3, #1
 8018632:	7b11      	ldrb	r1, [r2, #12]
 8018634:	f36f 1145 	bfc	r1, #5, #1
 8018638:	7311      	strb	r1, [r2, #12]
 801863a:	e7f5      	b.n	8018628 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 801863c:	6822      	ldr	r2, [r4, #0]
 801863e:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8018642:	6802      	ldr	r2, [r0, #0]
 8018644:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8018648:	3301      	adds	r3, #1
 801864a:	e7e7      	b.n	801861c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 801864c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801864e:	bf00      	nop
 8018650:	2000ef88 	.word	0x2000ef88
 8018654:	2000efa4 	.word	0x2000efa4
 8018658:	2000efa8 	.word	0x2000efa8
 801865c:	2000ef9c 	.word	0x2000ef9c
 8018660:	2000ef8c 	.word	0x2000ef8c
 8018664:	2000ef94 	.word	0x2000ef94
 8018668:	2000efa6 	.word	0x2000efa6
 801866c:	2000ef90 	.word	0x2000ef90
 8018670:	2000efa0 	.word	0x2000efa0
 8018674:	2000ef98 	.word	0x2000ef98

08018678 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8018678:	4b06      	ldr	r3, [pc, #24]	; (8018694 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801867a:	681b      	ldr	r3, [r3, #0]
 801867c:	b943      	cbnz	r3, 8018690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 801867e:	b139      	cbz	r1, 8018690 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8018680:	4b05      	ldr	r3, [pc, #20]	; (8018698 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8018682:	801a      	strh	r2, [r3, #0]
 8018684:	4b05      	ldr	r3, [pc, #20]	; (801869c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8018686:	6019      	str	r1, [r3, #0]
 8018688:	4b05      	ldr	r3, [pc, #20]	; (80186a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801868a:	6018      	str	r0, [r3, #0]
 801868c:	f7ff bf96 	b.w	80185bc <_ZN8touchgfx6Bitmap10clearCacheEv>
 8018690:	4770      	bx	lr
 8018692:	bf00      	nop
 8018694:	2000ef94 	.word	0x2000ef94
 8018698:	2000efa8 	.word	0x2000efa8
 801869c:	2000ef90 	.word	0x2000ef90
 80186a0:	2000ef88 	.word	0x2000ef88

080186a4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80186a4:	b470      	push	{r4, r5, r6}
 80186a6:	4c07      	ldr	r4, [pc, #28]	; (80186c4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80186a8:	6826      	ldr	r6, [r4, #0]
 80186aa:	4605      	mov	r5, r0
 80186ac:	4610      	mov	r0, r2
 80186ae:	9a03      	ldr	r2, [sp, #12]
 80186b0:	b936      	cbnz	r6, 80186c0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80186b2:	6025      	str	r5, [r4, #0]
 80186b4:	4c04      	ldr	r4, [pc, #16]	; (80186c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80186b6:	8021      	strh	r1, [r4, #0]
 80186b8:	bc70      	pop	{r4, r5, r6}
 80186ba:	4619      	mov	r1, r3
 80186bc:	f7ff bfdc 	b.w	8018678 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80186c0:	bc70      	pop	{r4, r5, r6}
 80186c2:	4770      	bx	lr
 80186c4:	2000efac 	.word	0x2000efac
 80186c8:	2000efa4 	.word	0x2000efa4

080186cc <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80186cc:	4a12      	ldr	r2, [pc, #72]	; (8018718 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80186ce:	8803      	ldrh	r3, [r0, #0]
 80186d0:	8812      	ldrh	r2, [r2, #0]
 80186d2:	4293      	cmp	r3, r2
 80186d4:	d207      	bcs.n	80186e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80186d6:	4a11      	ldr	r2, [pc, #68]	; (801871c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80186d8:	6812      	ldr	r2, [r2, #0]
 80186da:	2114      	movs	r1, #20
 80186dc:	fb01 2303 	mla	r3, r1, r3, r2
 80186e0:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80186e4:	4770      	bx	lr
 80186e6:	490e      	ldr	r1, [pc, #56]	; (8018720 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80186e8:	8809      	ldrh	r1, [r1, #0]
 80186ea:	4411      	add	r1, r2
 80186ec:	428b      	cmp	r3, r1
 80186ee:	da04      	bge.n	80186fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80186f0:	1a9b      	subs	r3, r3, r2
 80186f2:	4a0c      	ldr	r2, [pc, #48]	; (8018724 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80186f4:	210e      	movs	r1, #14
 80186f6:	6812      	ldr	r2, [r2, #0]
 80186f8:	e7f0      	b.n	80186dc <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80186fa:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80186fe:	4293      	cmp	r3, r2
 8018700:	d108      	bne.n	8018714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8018702:	4b09      	ldr	r3, [pc, #36]	; (8018728 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8018704:	781b      	ldrb	r3, [r3, #0]
 8018706:	b91b      	cbnz	r3, 8018710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8018708:	4b08      	ldr	r3, [pc, #32]	; (801872c <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801870a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801870e:	4770      	bx	lr
 8018710:	4b07      	ldr	r3, [pc, #28]	; (8018730 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8018712:	e7fa      	b.n	801870a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8018714:	2000      	movs	r0, #0
 8018716:	4770      	bx	lr
 8018718:	2000efa4 	.word	0x2000efa4
 801871c:	2000efac 	.word	0x2000efac
 8018720:	2000efa8 	.word	0x2000efa8
 8018724:	2000ef8c 	.word	0x2000ef8c
 8018728:	2000ef14 	.word	0x2000ef14
 801872c:	2000ef16 	.word	0x2000ef16
 8018730:	2000ef18 	.word	0x2000ef18

08018734 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8018734:	4a12      	ldr	r2, [pc, #72]	; (8018780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8018736:	8803      	ldrh	r3, [r0, #0]
 8018738:	8812      	ldrh	r2, [r2, #0]
 801873a:	4293      	cmp	r3, r2
 801873c:	d207      	bcs.n	801874e <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 801873e:	4a11      	ldr	r2, [pc, #68]	; (8018784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8018740:	6812      	ldr	r2, [r2, #0]
 8018742:	2114      	movs	r1, #20
 8018744:	fb01 2303 	mla	r3, r1, r3, r2
 8018748:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 801874c:	4770      	bx	lr
 801874e:	490e      	ldr	r1, [pc, #56]	; (8018788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8018750:	8809      	ldrh	r1, [r1, #0]
 8018752:	4411      	add	r1, r2
 8018754:	428b      	cmp	r3, r1
 8018756:	da04      	bge.n	8018762 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8018758:	1a9b      	subs	r3, r3, r2
 801875a:	4a0c      	ldr	r2, [pc, #48]	; (801878c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 801875c:	210e      	movs	r1, #14
 801875e:	6812      	ldr	r2, [r2, #0]
 8018760:	e7f0      	b.n	8018744 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8018762:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8018766:	4293      	cmp	r3, r2
 8018768:	d108      	bne.n	801877c <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801876a:	4b09      	ldr	r3, [pc, #36]	; (8018790 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 801876c:	781b      	ldrb	r3, [r3, #0]
 801876e:	b91b      	cbnz	r3, 8018778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8018770:	4b08      	ldr	r3, [pc, #32]	; (8018794 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8018772:	f9b3 0000 	ldrsh.w	r0, [r3]
 8018776:	4770      	bx	lr
 8018778:	4b07      	ldr	r3, [pc, #28]	; (8018798 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801877a:	e7fa      	b.n	8018772 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 801877c:	2000      	movs	r0, #0
 801877e:	4770      	bx	lr
 8018780:	2000efa4 	.word	0x2000efa4
 8018784:	2000efac 	.word	0x2000efac
 8018788:	2000efa8 	.word	0x2000efa8
 801878c:	2000ef8c 	.word	0x2000ef8c
 8018790:	2000ef14 	.word	0x2000ef14
 8018794:	2000ef18 	.word	0x2000ef18
 8018798:	2000ef16 	.word	0x2000ef16

0801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801879c:	b510      	push	{r4, lr}
 801879e:	4a1f      	ldr	r2, [pc, #124]	; (801881c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80187a0:	880b      	ldrh	r3, [r1, #0]
 80187a2:	8812      	ldrh	r2, [r2, #0]
 80187a4:	4293      	cmp	r3, r2
 80187a6:	d213      	bcs.n	80187d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80187a8:	4a1d      	ldr	r2, [pc, #116]	; (8018820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80187aa:	6812      	ldr	r2, [r2, #0]
 80187ac:	2114      	movs	r1, #20
 80187ae:	fb01 2303 	mla	r3, r1, r3, r2
 80187b2:	8a1a      	ldrh	r2, [r3, #16]
 80187b4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80187b8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80187bc:	8a5b      	ldrh	r3, [r3, #18]
 80187be:	8004      	strh	r4, [r0, #0]
 80187c0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80187c4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80187c8:	8041      	strh	r1, [r0, #2]
 80187ca:	8082      	strh	r2, [r0, #4]
 80187cc:	80c3      	strh	r3, [r0, #6]
 80187ce:	e00e      	b.n	80187ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80187d0:	4914      	ldr	r1, [pc, #80]	; (8018824 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80187d2:	8809      	ldrh	r1, [r1, #0]
 80187d4:	4411      	add	r1, r2
 80187d6:	428b      	cmp	r3, r1
 80187d8:	da0a      	bge.n	80187f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80187da:	1a9b      	subs	r3, r3, r2
 80187dc:	4a12      	ldr	r2, [pc, #72]	; (8018828 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80187de:	6812      	ldr	r2, [r2, #0]
 80187e0:	210e      	movs	r1, #14
 80187e2:	fb01 2303 	mla	r3, r1, r3, r2
 80187e6:	681a      	ldr	r2, [r3, #0]
 80187e8:	6002      	str	r2, [r0, #0]
 80187ea:	685a      	ldr	r2, [r3, #4]
 80187ec:	6042      	str	r2, [r0, #4]
 80187ee:	bd10      	pop	{r4, pc}
 80187f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80187f4:	4293      	cmp	r3, r2
 80187f6:	d10b      	bne.n	8018810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80187f8:	4b0c      	ldr	r3, [pc, #48]	; (801882c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80187fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80187fe:	4b0c      	ldr	r3, [pc, #48]	; (8018830 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8018800:	8081      	strh	r1, [r0, #4]
 8018802:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018806:	80c2      	strh	r2, [r0, #6]
 8018808:	2300      	movs	r3, #0
 801880a:	8003      	strh	r3, [r0, #0]
 801880c:	8043      	strh	r3, [r0, #2]
 801880e:	e7ee      	b.n	80187ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8018810:	2300      	movs	r3, #0
 8018812:	8003      	strh	r3, [r0, #0]
 8018814:	8043      	strh	r3, [r0, #2]
 8018816:	8083      	strh	r3, [r0, #4]
 8018818:	e7d8      	b.n	80187cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801881a:	bf00      	nop
 801881c:	2000efa4 	.word	0x2000efa4
 8018820:	2000efac 	.word	0x2000efac
 8018824:	2000efa8 	.word	0x2000efa8
 8018828:	2000ef8c 	.word	0x2000ef8c
 801882c:	2000ef10 	.word	0x2000ef10
 8018830:	2000ef12 	.word	0x2000ef12

08018834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8018834:	4a17      	ldr	r2, [pc, #92]	; (8018894 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8018836:	8803      	ldrh	r3, [r0, #0]
 8018838:	8812      	ldrh	r2, [r2, #0]
 801883a:	4293      	cmp	r3, r2
 801883c:	d213      	bcs.n	8018866 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801883e:	4a16      	ldr	r2, [pc, #88]	; (8018898 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8018840:	6812      	ldr	r2, [r2, #0]
 8018842:	2114      	movs	r1, #20
 8018844:	fb01 2303 	mla	r3, r1, r3, r2
 8018848:	8a1a      	ldrh	r2, [r3, #16]
 801884a:	8919      	ldrh	r1, [r3, #8]
 801884c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8018850:	428a      	cmp	r2, r1
 8018852:	db1d      	blt.n	8018890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018854:	8a58      	ldrh	r0, [r3, #18]
 8018856:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801885a:	895b      	ldrh	r3, [r3, #10]
 801885c:	4298      	cmp	r0, r3
 801885e:	bfac      	ite	ge
 8018860:	2000      	movge	r0, #0
 8018862:	2001      	movlt	r0, #1
 8018864:	4770      	bx	lr
 8018866:	490d      	ldr	r1, [pc, #52]	; (801889c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8018868:	8809      	ldrh	r1, [r1, #0]
 801886a:	4411      	add	r1, r2
 801886c:	428b      	cmp	r3, r1
 801886e:	da0d      	bge.n	801888c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8018870:	1a9b      	subs	r3, r3, r2
 8018872:	4a0b      	ldr	r2, [pc, #44]	; (80188a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8018874:	6812      	ldr	r2, [r2, #0]
 8018876:	210e      	movs	r1, #14
 8018878:	fb01 2303 	mla	r3, r1, r3, r2
 801887c:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8018880:	891a      	ldrh	r2, [r3, #8]
 8018882:	4291      	cmp	r1, r2
 8018884:	db04      	blt.n	8018890 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8018886:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801888a:	e7e6      	b.n	801885a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 801888c:	2000      	movs	r0, #0
 801888e:	4770      	bx	lr
 8018890:	2001      	movs	r0, #1
 8018892:	4770      	bx	lr
 8018894:	2000efa4 	.word	0x2000efa4
 8018898:	2000efac 	.word	0x2000efac
 801889c:	2000efa8 	.word	0x2000efa8
 80188a0:	2000ef8c 	.word	0x2000ef8c

080188a4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80188a4:	4a12      	ldr	r2, [pc, #72]	; (80188f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80188a6:	8803      	ldrh	r3, [r0, #0]
 80188a8:	8811      	ldrh	r1, [r2, #0]
 80188aa:	428b      	cmp	r3, r1
 80188ac:	d20b      	bcs.n	80188c6 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80188ae:	4a11      	ldr	r2, [pc, #68]	; (80188f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188b0:	6812      	ldr	r2, [r2, #0]
 80188b2:	b112      	cbz	r2, 80188ba <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80188b4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188b8:	b9c0      	cbnz	r0, 80188ec <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80188ba:	4a0f      	ldr	r2, [pc, #60]	; (80188f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80188bc:	6811      	ldr	r1, [r2, #0]
 80188be:	2214      	movs	r2, #20
 80188c0:	4353      	muls	r3, r2
 80188c2:	58c8      	ldr	r0, [r1, r3]
 80188c4:	4770      	bx	lr
 80188c6:	4a0d      	ldr	r2, [pc, #52]	; (80188fc <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80188c8:	8812      	ldrh	r2, [r2, #0]
 80188ca:	440a      	add	r2, r1
 80188cc:	4293      	cmp	r3, r2
 80188ce:	da04      	bge.n	80188da <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80188d0:	4a08      	ldr	r2, [pc, #32]	; (80188f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80188d2:	6812      	ldr	r2, [r2, #0]
 80188d4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80188d8:	4770      	bx	lr
 80188da:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80188de:	4293      	cmp	r3, r2
 80188e0:	d103      	bne.n	80188ea <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80188e2:	4b07      	ldr	r3, [pc, #28]	; (8018900 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80188e4:	681b      	ldr	r3, [r3, #0]
 80188e6:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80188e8:	4770      	bx	lr
 80188ea:	2000      	movs	r0, #0
 80188ec:	4770      	bx	lr
 80188ee:	bf00      	nop
 80188f0:	2000efa4 	.word	0x2000efa4
 80188f4:	2000ef88 	.word	0x2000ef88
 80188f8:	2000efac 	.word	0x2000efac
 80188fc:	2000efa8 	.word	0x2000efa8
 8018900:	2000ef1c 	.word	0x2000ef1c

08018904 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8018904:	4b24      	ldr	r3, [pc, #144]	; (8018998 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8018906:	8802      	ldrh	r2, [r0, #0]
 8018908:	8818      	ldrh	r0, [r3, #0]
 801890a:	4282      	cmp	r2, r0
 801890c:	d221      	bcs.n	8018952 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801890e:	4b23      	ldr	r3, [pc, #140]	; (801899c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8018910:	6819      	ldr	r1, [r3, #0]
 8018912:	2314      	movs	r3, #20
 8018914:	fb03 1302 	mla	r3, r3, r2, r1
 8018918:	6858      	ldr	r0, [r3, #4]
 801891a:	2800      	cmp	r0, #0
 801891c:	d03a      	beq.n	8018994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801891e:	4920      	ldr	r1, [pc, #128]	; (80189a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8018920:	6809      	ldr	r1, [r1, #0]
 8018922:	2900      	cmp	r1, #0
 8018924:	d036      	beq.n	8018994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8018926:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801892a:	2900      	cmp	r1, #0
 801892c:	d032      	beq.n	8018994 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801892e:	891a      	ldrh	r2, [r3, #8]
 8018930:	8958      	ldrh	r0, [r3, #10]
 8018932:	4350      	muls	r0, r2
 8018934:	7c5a      	ldrb	r2, [r3, #17]
 8018936:	7cdb      	ldrb	r3, [r3, #19]
 8018938:	0952      	lsrs	r2, r2, #5
 801893a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801893e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8018942:	2b0b      	cmp	r3, #11
 8018944:	bf18      	it	ne
 8018946:	0040      	lslne	r0, r0, #1
 8018948:	3003      	adds	r0, #3
 801894a:	f020 0003 	bic.w	r0, r0, #3
 801894e:	4408      	add	r0, r1
 8018950:	4770      	bx	lr
 8018952:	4b14      	ldr	r3, [pc, #80]	; (80189a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8018954:	881b      	ldrh	r3, [r3, #0]
 8018956:	4403      	add	r3, r0
 8018958:	429a      	cmp	r2, r3
 801895a:	da1a      	bge.n	8018992 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801895c:	4b12      	ldr	r3, [pc, #72]	; (80189a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801895e:	681b      	ldr	r3, [r3, #0]
 8018960:	1a10      	subs	r0, r2, r0
 8018962:	210e      	movs	r1, #14
 8018964:	fb01 3000 	mla	r0, r1, r0, r3
 8018968:	7b03      	ldrb	r3, [r0, #12]
 801896a:	f003 031f 	and.w	r3, r3, #31
 801896e:	2b0b      	cmp	r3, #11
 8018970:	d10b      	bne.n	801898a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8018972:	8903      	ldrh	r3, [r0, #8]
 8018974:	8940      	ldrh	r0, [r0, #10]
 8018976:	4358      	muls	r0, r3
 8018978:	4b09      	ldr	r3, [pc, #36]	; (80189a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801897a:	6819      	ldr	r1, [r3, #0]
 801897c:	3003      	adds	r0, #3
 801897e:	f020 0303 	bic.w	r3, r0, #3
 8018982:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8018986:	4418      	add	r0, r3
 8018988:	4770      	bx	lr
 801898a:	2b0d      	cmp	r3, #13
 801898c:	d101      	bne.n	8018992 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801898e:	300d      	adds	r0, #13
 8018990:	4770      	bx	lr
 8018992:	2000      	movs	r0, #0
 8018994:	4770      	bx	lr
 8018996:	bf00      	nop
 8018998:	2000efa4 	.word	0x2000efa4
 801899c:	2000efac 	.word	0x2000efac
 80189a0:	2000ef88 	.word	0x2000ef88
 80189a4:	2000efa8 	.word	0x2000efa8
 80189a8:	2000ef8c 	.word	0x2000ef8c

080189ac <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80189ac:	b510      	push	{r4, lr}
 80189ae:	4a17      	ldr	r2, [pc, #92]	; (8018a0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80189b0:	8803      	ldrh	r3, [r0, #0]
 80189b2:	8812      	ldrh	r2, [r2, #0]
 80189b4:	4293      	cmp	r3, r2
 80189b6:	d20c      	bcs.n	80189d2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80189b8:	4a15      	ldr	r2, [pc, #84]	; (8018a10 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80189ba:	6812      	ldr	r2, [r2, #0]
 80189bc:	2114      	movs	r1, #20
 80189be:	fb01 2303 	mla	r3, r1, r3, r2
 80189c2:	7c58      	ldrb	r0, [r3, #17]
 80189c4:	0942      	lsrs	r2, r0, #5
 80189c6:	7cd8      	ldrb	r0, [r3, #19]
 80189c8:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80189cc:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80189d0:	bd10      	pop	{r4, pc}
 80189d2:	4910      	ldr	r1, [pc, #64]	; (8018a14 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80189d4:	8809      	ldrh	r1, [r1, #0]
 80189d6:	4411      	add	r1, r2
 80189d8:	428b      	cmp	r3, r1
 80189da:	da09      	bge.n	80189f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80189dc:	1a9b      	subs	r3, r3, r2
 80189de:	4a0e      	ldr	r2, [pc, #56]	; (8018a18 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80189e0:	6812      	ldr	r2, [r2, #0]
 80189e2:	210e      	movs	r1, #14
 80189e4:	fb01 2303 	mla	r3, r1, r3, r2
 80189e8:	7b18      	ldrb	r0, [r3, #12]
 80189ea:	f000 001f 	and.w	r0, r0, #31
 80189ee:	e7ef      	b.n	80189d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80189f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80189f4:	4293      	cmp	r3, r2
 80189f6:	d106      	bne.n	8018a06 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80189f8:	f7eb fe5c 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80189fc:	6803      	ldr	r3, [r0, #0]
 80189fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018a02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018a04:	4718      	bx	r3
 8018a06:	2000      	movs	r0, #0
 8018a08:	e7e2      	b.n	80189d0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8018a0a:	bf00      	nop
 8018a0c:	2000efa4 	.word	0x2000efa4
 8018a10:	2000efac 	.word	0x2000efac
 8018a14:	2000efa8 	.word	0x2000efa8
 8018a18:	2000ef8c 	.word	0x2000ef8c

08018a1c <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8018a1c:	2010      	movs	r0, #16
 8018a1e:	4770      	bx	lr

08018a20 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8018a20:	2000      	movs	r0, #0
 8018a22:	4770      	bx	lr

08018a24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8018a24:	4b02      	ldr	r3, [pc, #8]	; (8018a30 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8018a26:	8818      	ldrh	r0, [r3, #0]
 8018a28:	0040      	lsls	r0, r0, #1
 8018a2a:	b280      	uxth	r0, r0
 8018a2c:	4770      	bx	lr
 8018a2e:	bf00      	nop
 8018a30:	2000ef16 	.word	0x2000ef16

08018a34 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8018a34:	2bff      	cmp	r3, #255	; 0xff
 8018a36:	d050      	beq.n	8018ada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8018a38:	2a0b      	cmp	r2, #11
 8018a3a:	d04a      	beq.n	8018ad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a3c:	d80e      	bhi.n	8018a5c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8018a3e:	2a03      	cmp	r2, #3
 8018a40:	d03f      	beq.n	8018ac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8018a42:	d804      	bhi.n	8018a4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8018a44:	2a01      	cmp	r2, #1
 8018a46:	d03e      	beq.n	8018ac6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8018a48:	d93f      	bls.n	8018aca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8018a4a:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8018a4c:	4770      	bx	lr
 8018a4e:	2a09      	cmp	r2, #9
 8018a50:	d03f      	beq.n	8018ad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8018a52:	d83c      	bhi.n	8018ace <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a54:	2a08      	cmp	r2, #8
 8018a56:	d03a      	beq.n	8018ace <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8018a58:	2000      	movs	r0, #0
 8018a5a:	4770      	bx	lr
 8018a5c:	2a2f      	cmp	r2, #47	; 0x2f
 8018a5e:	d024      	beq.n	8018aaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8018a60:	d80d      	bhi.n	8018a7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8018a62:	2a2d      	cmp	r2, #45	; 0x2d
 8018a64:	d014      	beq.n	8018a90 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8018a66:	d826      	bhi.n	8018ab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8018a68:	2a2c      	cmp	r2, #44	; 0x2c
 8018a6a:	d1f5      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a6c:	684b      	ldr	r3, [r1, #4]
 8018a6e:	781b      	ldrb	r3, [r3, #0]
 8018a70:	2b01      	cmp	r3, #1
 8018a72:	d018      	beq.n	8018aa6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8018a74:	d323      	bcc.n	8018abe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8018a76:	2b02      	cmp	r3, #2
 8018a78:	d1ee      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a7a:	6880      	ldr	r0, [r0, #8]
 8018a7c:	4770      	bx	lr
 8018a7e:	2a31      	cmp	r2, #49	; 0x31
 8018a80:	d004      	beq.n	8018a8c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8018a82:	d328      	bcc.n	8018ad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a84:	2a32      	cmp	r2, #50	; 0x32
 8018a86:	d026      	beq.n	8018ad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8018a88:	2a33      	cmp	r2, #51	; 0x33
 8018a8a:	d1e5      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a8c:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8018a8e:	4770      	bx	lr
 8018a90:	684b      	ldr	r3, [r1, #4]
 8018a92:	781b      	ldrb	r3, [r3, #0]
 8018a94:	2b01      	cmp	r3, #1
 8018a96:	d004      	beq.n	8018aa2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8018a98:	d30b      	bcc.n	8018ab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8018a9a:	2b02      	cmp	r3, #2
 8018a9c:	d1dc      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018a9e:	6900      	ldr	r0, [r0, #16]
 8018aa0:	4770      	bx	lr
 8018aa2:	6a00      	ldr	r0, [r0, #32]
 8018aa4:	4770      	bx	lr
 8018aa6:	6980      	ldr	r0, [r0, #24]
 8018aa8:	4770      	bx	lr
 8018aaa:	684b      	ldr	r3, [r1, #4]
 8018aac:	781b      	ldrb	r3, [r3, #0]
 8018aae:	2b00      	cmp	r3, #0
 8018ab0:	d1d2      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018ab2:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8018ab4:	4770      	bx	lr
 8018ab6:	684b      	ldr	r3, [r1, #4]
 8018ab8:	781b      	ldrb	r3, [r3, #0]
 8018aba:	2b00      	cmp	r3, #0
 8018abc:	d1cc      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018abe:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8018ac0:	4770      	bx	lr
 8018ac2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8018ac4:	4770      	bx	lr
 8018ac6:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8018ac8:	4770      	bx	lr
 8018aca:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8018acc:	4770      	bx	lr
 8018ace:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8018ad0:	4770      	bx	lr
 8018ad2:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8018ad4:	4770      	bx	lr
 8018ad6:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8018ad8:	4770      	bx	lr
 8018ada:	2a0b      	cmp	r2, #11
 8018adc:	d049      	beq.n	8018b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018ade:	d80e      	bhi.n	8018afe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8018ae0:	2a03      	cmp	r2, #3
 8018ae2:	d040      	beq.n	8018b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8018ae4:	d804      	bhi.n	8018af0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8018ae6:	2a01      	cmp	r2, #1
 8018ae8:	d03f      	beq.n	8018b6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8018aea:	d940      	bls.n	8018b6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8018aec:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8018aee:	4770      	bx	lr
 8018af0:	2a09      	cmp	r2, #9
 8018af2:	d03e      	beq.n	8018b72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8018af4:	d801      	bhi.n	8018afa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8018af6:	2a08      	cmp	r2, #8
 8018af8:	d1ae      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018afa:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8018afc:	4770      	bx	lr
 8018afe:	2a2f      	cmp	r2, #47	; 0x2f
 8018b00:	d024      	beq.n	8018b4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8018b02:	d80d      	bhi.n	8018b20 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8018b04:	2a2d      	cmp	r2, #45	; 0x2d
 8018b06:	d014      	beq.n	8018b32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8018b08:	d826      	bhi.n	8018b58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8018b0a:	2a2c      	cmp	r2, #44	; 0x2c
 8018b0c:	d1a4      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b0e:	684b      	ldr	r3, [r1, #4]
 8018b10:	781b      	ldrb	r3, [r3, #0]
 8018b12:	2b01      	cmp	r3, #1
 8018b14:	d018      	beq.n	8018b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8018b16:	d324      	bcc.n	8018b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8018b18:	2b02      	cmp	r3, #2
 8018b1a:	d19d      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b1c:	68c0      	ldr	r0, [r0, #12]
 8018b1e:	4770      	bx	lr
 8018b20:	2a31      	cmp	r2, #49	; 0x31
 8018b22:	d004      	beq.n	8018b2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8018b24:	d327      	bcc.n	8018b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b26:	2a32      	cmp	r2, #50	; 0x32
 8018b28:	d025      	beq.n	8018b76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8018b2a:	2a33      	cmp	r2, #51	; 0x33
 8018b2c:	d194      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b2e:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8018b30:	4770      	bx	lr
 8018b32:	684b      	ldr	r3, [r1, #4]
 8018b34:	781b      	ldrb	r3, [r3, #0]
 8018b36:	2b01      	cmp	r3, #1
 8018b38:	d004      	beq.n	8018b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8018b3a:	d30b      	bcc.n	8018b54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8018b3c:	2b02      	cmp	r3, #2
 8018b3e:	d18b      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b40:	6940      	ldr	r0, [r0, #20]
 8018b42:	4770      	bx	lr
 8018b44:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8018b46:	4770      	bx	lr
 8018b48:	69c0      	ldr	r0, [r0, #28]
 8018b4a:	4770      	bx	lr
 8018b4c:	684b      	ldr	r3, [r1, #4]
 8018b4e:	781b      	ldrb	r3, [r3, #0]
 8018b50:	2b00      	cmp	r3, #0
 8018b52:	d181      	bne.n	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b54:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8018b56:	4770      	bx	lr
 8018b58:	684b      	ldr	r3, [r1, #4]
 8018b5a:	781b      	ldrb	r3, [r3, #0]
 8018b5c:	2b00      	cmp	r3, #0
 8018b5e:	f47f af7b 	bne.w	8018a58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8018b62:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8018b64:	4770      	bx	lr
 8018b66:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8018b68:	4770      	bx	lr
 8018b6a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8018b6c:	4770      	bx	lr
 8018b6e:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8018b70:	4770      	bx	lr
 8018b72:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8018b74:	4770      	bx	lr
 8018b76:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8018b78:	4770      	bx	lr

08018b7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b7a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b7e:	b087      	sub	sp, #28
 8018b80:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018b82:	9205      	str	r2, [sp, #20]
 8018b84:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018b88:	9202      	str	r2, [sp, #8]
 8018b8a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8018b8e:	9101      	str	r1, [sp, #4]
 8018b90:	6841      	ldr	r1, [r0, #4]
 8018b92:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8018b96:	fb01 2404 	mla	r4, r1, r4, r2
 8018b9a:	6802      	ldr	r2, [r0, #0]
 8018b9c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018ba0:	f8de 2000 	ldr.w	r2, [lr]
 8018ba4:	9203      	str	r2, [sp, #12]
 8018ba6:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018baa:	3204      	adds	r2, #4
 8018bac:	9204      	str	r2, [sp, #16]
 8018bae:	9a02      	ldr	r2, [sp, #8]
 8018bb0:	43d6      	mvns	r6, r2
 8018bb2:	b2f6      	uxtb	r6, r6
 8018bb4:	9a01      	ldr	r2, [sp, #4]
 8018bb6:	2a00      	cmp	r2, #0
 8018bb8:	dc03      	bgt.n	8018bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8018bba:	9a05      	ldr	r2, [sp, #20]
 8018bbc:	2a00      	cmp	r2, #0
 8018bbe:	f340 8129 	ble.w	8018e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018bc2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018bc4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018bc8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018bcc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018bd0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018bd2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018bd6:	2b00      	cmp	r3, #0
 8018bd8:	dd0e      	ble.n	8018bf8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018bda:	1408      	asrs	r0, r1, #16
 8018bdc:	d405      	bmi.n	8018bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018bde:	4560      	cmp	r0, ip
 8018be0:	da03      	bge.n	8018bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018be2:	1410      	asrs	r0, r2, #16
 8018be4:	d401      	bmi.n	8018bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018be6:	42b8      	cmp	r0, r7
 8018be8:	db07      	blt.n	8018bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8018bea:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018bec:	4401      	add	r1, r0
 8018bee:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018bf0:	3b01      	subs	r3, #1
 8018bf2:	4402      	add	r2, r0
 8018bf4:	3402      	adds	r4, #2
 8018bf6:	e7ee      	b.n	8018bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8018bf8:	d071      	beq.n	8018cde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8018bfa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8018bfc:	1e58      	subs	r0, r3, #1
 8018bfe:	fb05 1500 	mla	r5, r5, r0, r1
 8018c02:	142d      	asrs	r5, r5, #16
 8018c04:	d45f      	bmi.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c06:	4565      	cmp	r5, ip
 8018c08:	da5d      	bge.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c0a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8018c0c:	fb05 2000 	mla	r0, r5, r0, r2
 8018c10:	1400      	asrs	r0, r0, #16
 8018c12:	d458      	bmi.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c14:	42b8      	cmp	r0, r7
 8018c16:	da56      	bge.n	8018cc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8018c18:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8018c1c:	4699      	mov	r9, r3
 8018c1e:	46a2      	mov	sl, r4
 8018c20:	f1b9 0f00 	cmp.w	r9, #0
 8018c24:	dd57      	ble.n	8018cd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8018c26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018c2a:	9803      	ldr	r0, [sp, #12]
 8018c2c:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8018c30:	140d      	asrs	r5, r1, #16
 8018c32:	fb07 000c 	mla	r0, r7, ip, r0
 8018c36:	f109 39ff 	add.w	r9, r9, #4294967295
 8018c3a:	5d40      	ldrb	r0, [r0, r5]
 8018c3c:	9d04      	ldr	r5, [sp, #16]
 8018c3e:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018c42:	f8ba 5000 	ldrh.w	r5, [sl]
 8018c46:	122f      	asrs	r7, r5, #8
 8018c48:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018c4c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018c50:	fb17 f706 	smulbb	r7, r7, r6
 8018c54:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018c58:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018c5c:	00ed      	lsls	r5, r5, #3
 8018c5e:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018c62:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8018c66:	10c7      	asrs	r7, r0, #3
 8018c68:	b2ed      	uxtb	r5, r5
 8018c6a:	00c0      	lsls	r0, r0, #3
 8018c6c:	fb18 f806 	smulbb	r8, r8, r6
 8018c70:	fb15 f506 	smulbb	r5, r5, r6
 8018c74:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018c78:	b2c0      	uxtb	r0, r0
 8018c7a:	fa1f fc8c 	uxth.w	ip, ip
 8018c7e:	fb07 870b 	mla	r7, r7, fp, r8
 8018c82:	fb00 500b 	mla	r0, r0, fp, r5
 8018c86:	b280      	uxth	r0, r0
 8018c88:	b2bf      	uxth	r7, r7
 8018c8a:	f10c 0501 	add.w	r5, ip, #1
 8018c8e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c92:	f107 0801 	add.w	r8, r7, #1
 8018c96:	1c45      	adds	r5, r0, #1
 8018c98:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c9c:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018ca0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018ca2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018ca6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018caa:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018cae:	ea45 0c0c 	orr.w	ip, r5, ip
 8018cb2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018cb6:	4401      	add	r1, r0
 8018cb8:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018cba:	ea4c 0c08 	orr.w	ip, ip, r8
 8018cbe:	f82a cb02 	strh.w	ip, [sl], #2
 8018cc2:	4402      	add	r2, r0
 8018cc4:	e7ac      	b.n	8018c20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018cc6:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8018cca:	f04f 0800 	mov.w	r8, #0
 8018cce:	eb03 0008 	add.w	r0, r3, r8
 8018cd2:	2800      	cmp	r0, #0
 8018cd4:	dc41      	bgt.n	8018d5a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8018cd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018cda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018cde:	9b01      	ldr	r3, [sp, #4]
 8018ce0:	2b00      	cmp	r3, #0
 8018ce2:	f340 8097 	ble.w	8018e14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8018ce6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018cea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018cee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018cf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018cf4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018cf8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018cfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018d00:	eef0 6a62 	vmov.f32	s13, s5
 8018d04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018d08:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018d10:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8018d14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018d18:	eef0 6a43 	vmov.f32	s13, s6
 8018d1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018d20:	ee12 2a90 	vmov	r2, s5
 8018d24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018d28:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d2c:	ee13 2a10 	vmov	r2, s6
 8018d30:	9313      	str	r3, [sp, #76]	; 0x4c
 8018d32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d34:	fb92 f3f3 	sdiv	r3, r2, r3
 8018d38:	9314      	str	r3, [sp, #80]	; 0x50
 8018d3a:	9b01      	ldr	r3, [sp, #4]
 8018d3c:	9a05      	ldr	r2, [sp, #20]
 8018d3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018d42:	3b01      	subs	r3, #1
 8018d44:	9301      	str	r3, [sp, #4]
 8018d46:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8018d4a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018d4c:	eeb0 3a67 	vmov.f32	s6, s15
 8018d50:	bf08      	it	eq
 8018d52:	4613      	moveq	r3, r2
 8018d54:	eef0 2a47 	vmov.f32	s5, s14
 8018d58:	e72c      	b.n	8018bb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8018d5a:	140f      	asrs	r7, r1, #16
 8018d5c:	d453      	bmi.n	8018e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d5e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018d62:	42bd      	cmp	r5, r7
 8018d64:	dd4f      	ble.n	8018e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d66:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018d6a:	d44c      	bmi.n	8018e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d6c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018d70:	4560      	cmp	r0, ip
 8018d72:	dd48      	ble.n	8018e06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8018d74:	9803      	ldr	r0, [sp, #12]
 8018d76:	b22d      	sxth	r5, r5
 8018d78:	fb0c 0505 	mla	r5, ip, r5, r0
 8018d7c:	5de8      	ldrb	r0, [r5, r7]
 8018d7e:	9d04      	ldr	r5, [sp, #16]
 8018d80:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018d84:	f06f 0501 	mvn.w	r5, #1
 8018d88:	fb05 fb08 	mul.w	fp, r5, r8
 8018d8c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018d90:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018d94:	122f      	asrs	r7, r5, #8
 8018d96:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d9a:	fb17 f706 	smulbb	r7, r7, r6
 8018d9e:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018da2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018da6:	00ed      	lsls	r5, r5, #3
 8018da8:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018dac:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8018db0:	10c7      	asrs	r7, r0, #3
 8018db2:	b2ed      	uxtb	r5, r5
 8018db4:	00c0      	lsls	r0, r0, #3
 8018db6:	fb19 f906 	smulbb	r9, r9, r6
 8018dba:	fb15 f506 	smulbb	r5, r5, r6
 8018dbe:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018dc2:	b2c0      	uxtb	r0, r0
 8018dc4:	fa1f fc8c 	uxth.w	ip, ip
 8018dc8:	fb07 970a 	mla	r7, r7, sl, r9
 8018dcc:	fb00 500a 	mla	r0, r0, sl, r5
 8018dd0:	b2bf      	uxth	r7, r7
 8018dd2:	b280      	uxth	r0, r0
 8018dd4:	f10c 0501 	add.w	r5, ip, #1
 8018dd8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018ddc:	f107 0901 	add.w	r9, r7, #1
 8018de0:	1c45      	adds	r5, r0, #1
 8018de2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018de6:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018dea:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8018dee:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018df2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018df6:	ea45 0c0c 	orr.w	ip, r5, ip
 8018dfa:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018dfe:	ea4c 0c09 	orr.w	ip, ip, r9
 8018e02:	f824 c00b 	strh.w	ip, [r4, fp]
 8018e06:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018e08:	4401      	add	r1, r0
 8018e0a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8018e0c:	f108 38ff 	add.w	r8, r8, #4294967295
 8018e10:	4402      	add	r2, r0
 8018e12:	e75c      	b.n	8018cce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8018e14:	b007      	add	sp, #28
 8018e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018e1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018e1a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e1e:	b085      	sub	sp, #20
 8018e20:	4693      	mov	fp, r2
 8018e22:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8018e24:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8018e26:	6870      	ldr	r0, [r6, #4]
 8018e28:	9100      	str	r1, [sp, #0]
 8018e2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8018e2e:	fb00 2404 	mla	r4, r0, r4, r2
 8018e32:	6832      	ldr	r2, [r6, #0]
 8018e34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018e38:	682a      	ldr	r2, [r5, #0]
 8018e3a:	9201      	str	r2, [sp, #4]
 8018e3c:	686a      	ldr	r2, [r5, #4]
 8018e3e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8018e42:	3204      	adds	r2, #4
 8018e44:	9202      	str	r2, [sp, #8]
 8018e46:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8018e4a:	9a00      	ldr	r2, [sp, #0]
 8018e4c:	2a00      	cmp	r2, #0
 8018e4e:	dc03      	bgt.n	8018e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018e50:	f1bb 0f00 	cmp.w	fp, #0
 8018e54:	f340 80a0 	ble.w	8018f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018e58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018e5a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018e5e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018e62:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8018e66:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018e68:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018e6c:	2b00      	cmp	r3, #0
 8018e6e:	dd0c      	ble.n	8018e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018e70:	1406      	asrs	r6, r0, #16
 8018e72:	d405      	bmi.n	8018e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e74:	454e      	cmp	r6, r9
 8018e76:	da03      	bge.n	8018e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e78:	1416      	asrs	r6, r2, #16
 8018e7a:	d401      	bmi.n	8018e80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018e7c:	4546      	cmp	r6, r8
 8018e7e:	db05      	blt.n	8018e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018e80:	4470      	add	r0, lr
 8018e82:	4462      	add	r2, ip
 8018e84:	3b01      	subs	r3, #1
 8018e86:	3402      	adds	r4, #2
 8018e88:	e7f0      	b.n	8018e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018e8a:	d00f      	beq.n	8018eac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8018e8c:	1e5e      	subs	r6, r3, #1
 8018e8e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018e92:	143f      	asrs	r7, r7, #16
 8018e94:	d541      	bpl.n	8018f1a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8018e96:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018e9a:	4698      	mov	r8, r3
 8018e9c:	9603      	str	r6, [sp, #12]
 8018e9e:	f1b8 0f00 	cmp.w	r8, #0
 8018ea2:	dc59      	bgt.n	8018f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018ea4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018ea8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018eac:	9b00      	ldr	r3, [sp, #0]
 8018eae:	2b00      	cmp	r3, #0
 8018eb0:	dd72      	ble.n	8018f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8018eb2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018eb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018eba:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018ebe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ec0:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018ec4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ec8:	eeb0 6a62 	vmov.f32	s12, s5
 8018ecc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ed0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018ed4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ed8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8018edc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018ee0:	eeb0 6a43 	vmov.f32	s12, s6
 8018ee4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ee8:	ee12 2a90 	vmov	r2, s5
 8018eec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018ef0:	fb92 fef3 	sdiv	lr, r2, r3
 8018ef4:	ee13 2a10 	vmov	r2, s6
 8018ef8:	fb92 fcf3 	sdiv	ip, r2, r3
 8018efc:	9b00      	ldr	r3, [sp, #0]
 8018efe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018f02:	3b01      	subs	r3, #1
 8018f04:	9300      	str	r3, [sp, #0]
 8018f06:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8018f0a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018f0c:	eeb0 3a67 	vmov.f32	s6, s15
 8018f10:	bf08      	it	eq
 8018f12:	465b      	moveq	r3, fp
 8018f14:	eef0 2a47 	vmov.f32	s5, s14
 8018f18:	e797      	b.n	8018e4a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018f1a:	454f      	cmp	r7, r9
 8018f1c:	dabb      	bge.n	8018e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f1e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018f22:	1436      	asrs	r6, r6, #16
 8018f24:	d4b7      	bmi.n	8018e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f26:	4546      	cmp	r6, r8
 8018f28:	dab5      	bge.n	8018e96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018f2a:	461e      	mov	r6, r3
 8018f2c:	46a0      	mov	r8, r4
 8018f2e:	2e00      	cmp	r6, #0
 8018f30:	ddb8      	ble.n	8018ea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018f32:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018f36:	9901      	ldr	r1, [sp, #4]
 8018f38:	1417      	asrs	r7, r2, #16
 8018f3a:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018f3e:	fb0a 1707 	mla	r7, sl, r7, r1
 8018f42:	9902      	ldr	r1, [sp, #8]
 8018f44:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018f48:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018f4c:	f828 7b02 	strh.w	r7, [r8], #2
 8018f50:	4470      	add	r0, lr
 8018f52:	4462      	add	r2, ip
 8018f54:	3e01      	subs	r6, #1
 8018f56:	e7ea      	b.n	8018f2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018f58:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018f5c:	d417      	bmi.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f5e:	68ae      	ldr	r6, [r5, #8]
 8018f60:	454e      	cmp	r6, r9
 8018f62:	dd14      	ble.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f64:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018f68:	d411      	bmi.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f6a:	68ef      	ldr	r7, [r5, #12]
 8018f6c:	4557      	cmp	r7, sl
 8018f6e:	dd0e      	ble.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018f70:	9f01      	ldr	r7, [sp, #4]
 8018f72:	b236      	sxth	r6, r6
 8018f74:	fb0a 7606 	mla	r6, sl, r6, r7
 8018f78:	9f02      	ldr	r7, [sp, #8]
 8018f7a:	f816 6009 	ldrb.w	r6, [r6, r9]
 8018f7e:	f06f 0101 	mvn.w	r1, #1
 8018f82:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018f86:	fb01 f608 	mul.w	r6, r1, r8
 8018f8a:	9903      	ldr	r1, [sp, #12]
 8018f8c:	538f      	strh	r7, [r1, r6]
 8018f8e:	4470      	add	r0, lr
 8018f90:	4462      	add	r2, ip
 8018f92:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f96:	e782      	b.n	8018e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018f98:	b005      	add	sp, #20
 8018f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018fa2:	b087      	sub	sp, #28
 8018fa4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8018fa6:	9205      	str	r2, [sp, #20]
 8018fa8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018fac:	9203      	str	r2, [sp, #12]
 8018fae:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8018fb2:	9102      	str	r1, [sp, #8]
 8018fb4:	6861      	ldr	r1, [r4, #4]
 8018fb6:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8018fba:	fb01 2000 	mla	r0, r1, r0, r2
 8018fbe:	6822      	ldr	r2, [r4, #0]
 8018fc0:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8018fc4:	9200      	str	r2, [sp, #0]
 8018fc6:	f8dc 2000 	ldr.w	r2, [ip]
 8018fca:	9204      	str	r2, [sp, #16]
 8018fcc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018fd0:	3204      	adds	r2, #4
 8018fd2:	9201      	str	r2, [sp, #4]
 8018fd4:	9a03      	ldr	r2, [sp, #12]
 8018fd6:	43d5      	mvns	r5, r2
 8018fd8:	b2ed      	uxtb	r5, r5
 8018fda:	9a02      	ldr	r2, [sp, #8]
 8018fdc:	2a00      	cmp	r2, #0
 8018fde:	dc03      	bgt.n	8018fe8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8018fe0:	9a05      	ldr	r2, [sp, #20]
 8018fe2:	2a00      	cmp	r2, #0
 8018fe4:	f340 812c 	ble.w	8019240 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8018fe8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018fea:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8018fee:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8018ff2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8018ff6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018ff8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8018ffc:	2b00      	cmp	r3, #0
 8018ffe:	dd10      	ble.n	8019022 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8019000:	140c      	asrs	r4, r1, #16
 8019002:	d405      	bmi.n	8019010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019004:	4574      	cmp	r4, lr
 8019006:	da03      	bge.n	8019010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019008:	1414      	asrs	r4, r2, #16
 801900a:	d401      	bmi.n	8019010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801900c:	42bc      	cmp	r4, r7
 801900e:	db09      	blt.n	8019024 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8019010:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019012:	9800      	ldr	r0, [sp, #0]
 8019014:	4421      	add	r1, r4
 8019016:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019018:	3002      	adds	r0, #2
 801901a:	4422      	add	r2, r4
 801901c:	3b01      	subs	r3, #1
 801901e:	9000      	str	r0, [sp, #0]
 8019020:	e7ec      	b.n	8018ffc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019022:	d071      	beq.n	8019108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8019024:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019026:	1e5c      	subs	r4, r3, #1
 8019028:	fb06 1604 	mla	r6, r6, r4, r1
 801902c:	1436      	asrs	r6, r6, #16
 801902e:	d45d      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019030:	4576      	cmp	r6, lr
 8019032:	da5b      	bge.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019034:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8019036:	fb06 2404 	mla	r4, r6, r4, r2
 801903a:	1424      	asrs	r4, r4, #16
 801903c:	d456      	bmi.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801903e:	42bc      	cmp	r4, r7
 8019040:	da54      	bge.n	80190ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019042:	f8dd 9000 	ldr.w	r9, [sp]
 8019046:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801904a:	4698      	mov	r8, r3
 801904c:	f1b8 0f00 	cmp.w	r8, #0
 8019050:	dd54      	ble.n	80190fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019052:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019056:	9804      	ldr	r0, [sp, #16]
 8019058:	1414      	asrs	r4, r2, #16
 801905a:	fb07 0404 	mla	r4, r7, r4, r0
 801905e:	140e      	asrs	r6, r1, #16
 8019060:	9801      	ldr	r0, [sp, #4]
 8019062:	f814 e006 	ldrb.w	lr, [r4, r6]
 8019066:	f8b9 4000 	ldrh.w	r4, [r9]
 801906a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801906e:	eb00 0b0e 	add.w	fp, r0, lr
 8019072:	1227      	asrs	r7, r4, #8
 8019074:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8019078:	f89b b001 	ldrb.w	fp, [fp, #1]
 801907c:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8019080:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019082:	fb16 f60a 	smulbb	r6, r6, sl
 8019086:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801908a:	fb07 6705 	mla	r7, r7, r5, r6
 801908e:	10e6      	asrs	r6, r4, #3
 8019090:	00e4      	lsls	r4, r4, #3
 8019092:	b2e4      	uxtb	r4, r4
 8019094:	fb1b fb0a 	smulbb	fp, fp, sl
 8019098:	fb14 f405 	smulbb	r4, r4, r5
 801909c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80190a0:	b2bf      	uxth	r7, r7
 80190a2:	fb06 b605 	mla	r6, r6, r5, fp
 80190a6:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80190aa:	b2b6      	uxth	r6, r6
 80190ac:	fa1f fe8e 	uxth.w	lr, lr
 80190b0:	1c7c      	adds	r4, r7, #1
 80190b2:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80190b6:	f106 0b01 	add.w	fp, r6, #1
 80190ba:	f10e 0401 	add.w	r4, lr, #1
 80190be:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80190c2:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80190c6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80190ca:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80190ce:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80190d2:	4327      	orrs	r7, r4
 80190d4:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80190d8:	4401      	add	r1, r0
 80190da:	9814      	ldr	r0, [sp, #80]	; 0x50
 80190dc:	ea47 070b 	orr.w	r7, r7, fp
 80190e0:	f829 7b02 	strh.w	r7, [r9], #2
 80190e4:	4402      	add	r2, r0
 80190e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80190ea:	e7af      	b.n	801904c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80190ec:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80190f0:	f04f 0e00 	mov.w	lr, #0
 80190f4:	eb03 040e 	add.w	r4, r3, lr
 80190f8:	2c00      	cmp	r4, #0
 80190fa:	dc43      	bgt.n	8019184 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80190fc:	9a00      	ldr	r2, [sp, #0]
 80190fe:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019102:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019106:	9300      	str	r3, [sp, #0]
 8019108:	9b02      	ldr	r3, [sp, #8]
 801910a:	2b00      	cmp	r3, #0
 801910c:	f340 8098 	ble.w	8019240 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019110:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019114:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019118:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801911c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801911e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019122:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019126:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801912a:	eef0 6a62 	vmov.f32	s13, s5
 801912e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019136:	ee77 2a62 	vsub.f32	s5, s14, s5
 801913a:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 801913e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019142:	eef0 6a43 	vmov.f32	s13, s6
 8019146:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801914a:	ee12 2a90 	vmov	r2, s5
 801914e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019152:	fb92 f3f3 	sdiv	r3, r2, r3
 8019156:	ee13 2a10 	vmov	r2, s6
 801915a:	9313      	str	r3, [sp, #76]	; 0x4c
 801915c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801915e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019162:	9314      	str	r3, [sp, #80]	; 0x50
 8019164:	9b02      	ldr	r3, [sp, #8]
 8019166:	9a05      	ldr	r2, [sp, #20]
 8019168:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801916c:	3b01      	subs	r3, #1
 801916e:	9302      	str	r3, [sp, #8]
 8019170:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8019174:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019176:	eeb0 3a67 	vmov.f32	s6, s15
 801917a:	bf08      	it	eq
 801917c:	4613      	moveq	r3, r2
 801917e:	eef0 2a47 	vmov.f32	s5, s14
 8019182:	e72a      	b.n	8018fda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019184:	140f      	asrs	r7, r1, #16
 8019186:	d454      	bmi.n	8019232 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019188:	f8dc 6008 	ldr.w	r6, [ip, #8]
 801918c:	42be      	cmp	r6, r7
 801918e:	dd50      	ble.n	8019232 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019190:	ea5f 4822 	movs.w	r8, r2, asr #16
 8019194:	d44d      	bmi.n	8019232 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019196:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801919a:	4544      	cmp	r4, r8
 801919c:	dd49      	ble.n	8019232 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801919e:	9c04      	ldr	r4, [sp, #16]
 80191a0:	b236      	sxth	r6, r6
 80191a2:	fb08 4606 	mla	r6, r8, r6, r4
 80191a6:	f06f 0001 	mvn.w	r0, #1
 80191aa:	f816 8007 	ldrb.w	r8, [r6, r7]
 80191ae:	9c01      	ldr	r4, [sp, #4]
 80191b0:	fb00 fa0e 	mul.w	sl, r0, lr
 80191b4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80191b8:	9800      	ldr	r0, [sp, #0]
 80191ba:	eb04 0b08 	add.w	fp, r4, r8
 80191be:	f830 400a 	ldrh.w	r4, [r0, sl]
 80191c2:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80191c6:	9801      	ldr	r0, [sp, #4]
 80191c8:	f89b b001 	ldrb.w	fp, [fp, #1]
 80191cc:	f810 8008 	ldrb.w	r8, [r0, r8]
 80191d0:	9800      	ldr	r0, [sp, #0]
 80191d2:	1227      	asrs	r7, r4, #8
 80191d4:	fb16 f609 	smulbb	r6, r6, r9
 80191d8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80191dc:	fb07 6705 	mla	r7, r7, r5, r6
 80191e0:	10e6      	asrs	r6, r4, #3
 80191e2:	00e4      	lsls	r4, r4, #3
 80191e4:	b2e4      	uxtb	r4, r4
 80191e6:	fb1b fb09 	smulbb	fp, fp, r9
 80191ea:	fb14 f405 	smulbb	r4, r4, r5
 80191ee:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80191f2:	b2bf      	uxth	r7, r7
 80191f4:	fb06 b605 	mla	r6, r6, r5, fp
 80191f8:	fb08 4809 	mla	r8, r8, r9, r4
 80191fc:	b2b6      	uxth	r6, r6
 80191fe:	fa1f f888 	uxth.w	r8, r8
 8019202:	1c7c      	adds	r4, r7, #1
 8019204:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8019208:	f106 0b01 	add.w	fp, r6, #1
 801920c:	f108 0401 	add.w	r4, r8, #1
 8019210:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8019214:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8019218:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801921c:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8019220:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8019224:	4327      	orrs	r7, r4
 8019226:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801922a:	ea47 070b 	orr.w	r7, r7, fp
 801922e:	f820 700a 	strh.w	r7, [r0, sl]
 8019232:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019234:	4401      	add	r1, r0
 8019236:	9814      	ldr	r0, [sp, #80]	; 0x50
 8019238:	f10e 3eff 	add.w	lr, lr, #4294967295
 801923c:	4402      	add	r2, r0
 801923e:	e759      	b.n	80190f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019240:	b007      	add	sp, #28
 8019242:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019248 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019248:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801924c:	b085      	sub	sp, #20
 801924e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019252:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8019254:	9203      	str	r2, [sp, #12]
 8019256:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801925a:	6870      	ldr	r0, [r6, #4]
 801925c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801925e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8019262:	686f      	ldr	r7, [r5, #4]
 8019264:	9101      	str	r1, [sp, #4]
 8019266:	fb00 2404 	mla	r4, r0, r4, r2
 801926a:	6832      	ldr	r2, [r6, #0]
 801926c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019270:	682a      	ldr	r2, [r5, #0]
 8019272:	9202      	str	r2, [sp, #8]
 8019274:	3704      	adds	r7, #4
 8019276:	9a01      	ldr	r2, [sp, #4]
 8019278:	2a00      	cmp	r2, #0
 801927a:	dc03      	bgt.n	8019284 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801927c:	9a03      	ldr	r2, [sp, #12]
 801927e:	2a00      	cmp	r2, #0
 8019280:	f340 80cc 	ble.w	801941c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8019284:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019286:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801928a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801928e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8019292:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019294:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019298:	2b00      	cmp	r3, #0
 801929a:	dd0d      	ble.n	80192b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801929c:	1406      	asrs	r6, r0, #16
 801929e:	d405      	bmi.n	80192ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80192a0:	454e      	cmp	r6, r9
 80192a2:	da03      	bge.n	80192ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80192a4:	1416      	asrs	r6, r2, #16
 80192a6:	d401      	bmi.n	80192ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80192a8:	4546      	cmp	r6, r8
 80192aa:	db06      	blt.n	80192ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80192ac:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80192ae:	4460      	add	r0, ip
 80192b0:	4432      	add	r2, r6
 80192b2:	3b01      	subs	r3, #1
 80192b4:	3402      	adds	r4, #2
 80192b6:	e7ef      	b.n	8019298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80192b8:	d00f      	beq.n	80192da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80192ba:	1e5e      	subs	r6, r3, #1
 80192bc:	fb0c 0e06 	mla	lr, ip, r6, r0
 80192c0:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80192c4:	d543      	bpl.n	801934e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80192c6:	4698      	mov	r8, r3
 80192c8:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80192cc:	f1b8 0f00 	cmp.w	r8, #0
 80192d0:	dc71      	bgt.n	80193b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80192d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192da:	9b01      	ldr	r3, [sp, #4]
 80192dc:	2b00      	cmp	r3, #0
 80192de:	f340 809d 	ble.w	801941c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80192e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80192f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192f8:	eeb0 6a62 	vmov.f32	s12, s5
 80192fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019300:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019304:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019308:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801930c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019310:	eeb0 6a43 	vmov.f32	s12, s6
 8019314:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019318:	ee12 2a90 	vmov	r2, s5
 801931c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019320:	fb92 fcf3 	sdiv	ip, r2, r3
 8019324:	ee13 2a10 	vmov	r2, s6
 8019328:	fb92 f3f3 	sdiv	r3, r2, r3
 801932c:	9312      	str	r3, [sp, #72]	; 0x48
 801932e:	9b01      	ldr	r3, [sp, #4]
 8019330:	9a03      	ldr	r2, [sp, #12]
 8019332:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019336:	3b01      	subs	r3, #1
 8019338:	9301      	str	r3, [sp, #4]
 801933a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801933e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019340:	eeb0 3a67 	vmov.f32	s6, s15
 8019344:	bf08      	it	eq
 8019346:	4613      	moveq	r3, r2
 8019348:	eef0 2a47 	vmov.f32	s5, s14
 801934c:	e793      	b.n	8019276 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801934e:	45ce      	cmp	lr, r9
 8019350:	dab9      	bge.n	80192c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019352:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019354:	fb01 2606 	mla	r6, r1, r6, r2
 8019358:	1436      	asrs	r6, r6, #16
 801935a:	d4b4      	bmi.n	80192c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801935c:	4546      	cmp	r6, r8
 801935e:	dab2      	bge.n	80192c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019360:	4698      	mov	r8, r3
 8019362:	46a2      	mov	sl, r4
 8019364:	f1b8 0f00 	cmp.w	r8, #0
 8019368:	ddb3      	ble.n	80192d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801936a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801936e:	9902      	ldr	r1, [sp, #8]
 8019370:	1416      	asrs	r6, r2, #16
 8019372:	fb09 1606 	mla	r6, r9, r6, r1
 8019376:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801937a:	492a      	ldr	r1, [pc, #168]	; (8019424 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 801937c:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8019380:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8019384:	eb07 0b0e 	add.w	fp, r7, lr
 8019388:	4460      	add	r0, ip
 801938a:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801938e:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8019392:	00f6      	lsls	r6, r6, #3
 8019394:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8019398:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801939c:	ea49 0606 	orr.w	r6, r9, r6
 80193a0:	f817 900e 	ldrb.w	r9, [r7, lr]
 80193a4:	9912      	ldr	r1, [sp, #72]	; 0x48
 80193a6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80193aa:	f82a 6b02 	strh.w	r6, [sl], #2
 80193ae:	440a      	add	r2, r1
 80193b0:	f108 38ff 	add.w	r8, r8, #4294967295
 80193b4:	e7d6      	b.n	8019364 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80193b6:	ea5f 4920 	movs.w	r9, r0, asr #16
 80193ba:	d429      	bmi.n	8019410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193bc:	68ae      	ldr	r6, [r5, #8]
 80193be:	454e      	cmp	r6, r9
 80193c0:	dd26      	ble.n	8019410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193c2:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80193c6:	d423      	bmi.n	8019410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193c8:	68e9      	ldr	r1, [r5, #12]
 80193ca:	4559      	cmp	r1, fp
 80193cc:	dd20      	ble.n	8019410 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80193ce:	9902      	ldr	r1, [sp, #8]
 80193d0:	fa0f fe86 	sxth.w	lr, r6
 80193d4:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80193d8:	f06f 0101 	mvn.w	r1, #1
 80193dc:	f81e e009 	ldrb.w	lr, [lr, r9]
 80193e0:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80193e4:	eb07 060e 	add.w	r6, r7, lr
 80193e8:	fb01 f908 	mul.w	r9, r1, r8
 80193ec:	f896 b002 	ldrb.w	fp, [r6, #2]
 80193f0:	7876      	ldrb	r6, [r6, #1]
 80193f2:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80193f6:	00f6      	lsls	r6, r6, #3
 80193f8:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80193fc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019400:	ea4b 0606 	orr.w	r6, fp, r6
 8019404:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8019408:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 801940c:	f82a 6009 	strh.w	r6, [sl, r9]
 8019410:	9912      	ldr	r1, [sp, #72]	; 0x48
 8019412:	4460      	add	r0, ip
 8019414:	440a      	add	r2, r1
 8019416:	f108 38ff 	add.w	r8, r8, #4294967295
 801941a:	e757      	b.n	80192cc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801941c:	b005      	add	sp, #20
 801941e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019422:	bf00      	nop
 8019424:	fffff800 	.word	0xfffff800

08019428 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019428:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801942c:	b087      	sub	sp, #28
 801942e:	468b      	mov	fp, r1
 8019430:	9815      	ldr	r0, [sp, #84]	; 0x54
 8019432:	9204      	str	r2, [sp, #16]
 8019434:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8019438:	9205      	str	r2, [sp, #20]
 801943a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801943e:	6841      	ldr	r1, [r0, #4]
 8019440:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8019444:	fb01 2404 	mla	r4, r1, r4, r2
 8019448:	6802      	ldr	r2, [r0, #0]
 801944a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801944e:	f8dc 2000 	ldr.w	r2, [ip]
 8019452:	9201      	str	r2, [sp, #4]
 8019454:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8019458:	3204      	adds	r2, #4
 801945a:	9202      	str	r2, [sp, #8]
 801945c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019460:	f1bb 0f00 	cmp.w	fp, #0
 8019464:	dc03      	bgt.n	801946e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8019466:	9a04      	ldr	r2, [sp, #16]
 8019468:	2a00      	cmp	r2, #0
 801946a:	f340 8138 	ble.w	80196de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801946e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019470:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8019474:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8019478:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801947c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801947e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019482:	2b00      	cmp	r3, #0
 8019484:	dd0e      	ble.n	80194a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019486:	1402      	asrs	r2, r0, #16
 8019488:	d405      	bmi.n	8019496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801948a:	42ba      	cmp	r2, r7
 801948c:	da03      	bge.n	8019496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801948e:	140a      	asrs	r2, r1, #16
 8019490:	d401      	bmi.n	8019496 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019492:	42b2      	cmp	r2, r6
 8019494:	db07      	blt.n	80194a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019496:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019498:	4410      	add	r0, r2
 801949a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801949c:	3b01      	subs	r3, #1
 801949e:	4411      	add	r1, r2
 80194a0:	3402      	adds	r4, #2
 80194a2:	e7ee      	b.n	8019482 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80194a4:	d019      	beq.n	80194da <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80194a6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80194a8:	1e5a      	subs	r2, r3, #1
 80194aa:	fb05 0502 	mla	r5, r5, r2, r0
 80194ae:	142d      	asrs	r5, r5, #16
 80194b0:	d409      	bmi.n	80194c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194b2:	42bd      	cmp	r5, r7
 80194b4:	da07      	bge.n	80194c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194b6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80194b8:	fb05 1202 	mla	r2, r5, r2, r1
 80194bc:	1412      	asrs	r2, r2, #16
 80194be:	d402      	bmi.n	80194c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80194c0:	42b2      	cmp	r2, r6
 80194c2:	f2c0 80ac 	blt.w	801961e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80194c6:	f04f 0e00 	mov.w	lr, #0
 80194ca:	eb03 020e 	add.w	r2, r3, lr
 80194ce:	2a00      	cmp	r2, #0
 80194d0:	dc3e      	bgt.n	8019550 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80194d2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80194d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80194da:	f1bb 0f00 	cmp.w	fp, #0
 80194de:	f340 80fe 	ble.w	80196de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80194e2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80194e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80194ea:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80194ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80194f0:	f1bb 0b01 	subs.w	fp, fp, #1
 80194f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80194f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80194fc:	eeb0 6a62 	vmov.f32	s12, s5
 8019500:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019504:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019508:	ee77 2a62 	vsub.f32	s5, s14, s5
 801950c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019510:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019514:	eeb0 6a43 	vmov.f32	s12, s6
 8019518:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801951c:	ee12 2a90 	vmov	r2, s5
 8019520:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019524:	fb92 f3f3 	sdiv	r3, r2, r3
 8019528:	ee13 2a10 	vmov	r2, s6
 801952c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019530:	9313      	str	r3, [sp, #76]	; 0x4c
 8019532:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019534:	fb92 f3f3 	sdiv	r3, r2, r3
 8019538:	9a04      	ldr	r2, [sp, #16]
 801953a:	9314      	str	r3, [sp, #80]	; 0x50
 801953c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019540:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019542:	eeb0 3a67 	vmov.f32	s6, s15
 8019546:	bf08      	it	eq
 8019548:	4613      	moveq	r3, r2
 801954a:	eef0 2a47 	vmov.f32	s5, s14
 801954e:	e787      	b.n	8019460 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019550:	1406      	asrs	r6, r0, #16
 8019552:	d45d      	bmi.n	8019610 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019554:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8019558:	42b5      	cmp	r5, r6
 801955a:	dd59      	ble.n	8019610 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801955c:	140f      	asrs	r7, r1, #16
 801955e:	d457      	bmi.n	8019610 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019560:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8019564:	42ba      	cmp	r2, r7
 8019566:	dd53      	ble.n	8019610 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8019568:	9a01      	ldr	r2, [sp, #4]
 801956a:	b22d      	sxth	r5, r5
 801956c:	fb07 2505 	mla	r5, r7, r5, r2
 8019570:	5daa      	ldrb	r2, [r5, r6]
 8019572:	9d02      	ldr	r5, [sp, #8]
 8019574:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019578:	0e2e      	lsrs	r6, r5, #24
 801957a:	d049      	beq.n	8019610 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801957c:	f06f 0201 	mvn.w	r2, #1
 8019580:	fb02 f20e 	mul.w	r2, r2, lr
 8019584:	9203      	str	r2, [sp, #12]
 8019586:	f834 8002 	ldrh.w	r8, [r4, r2]
 801958a:	9a05      	ldr	r2, [sp, #20]
 801958c:	4356      	muls	r6, r2
 801958e:	1c72      	adds	r2, r6, #1
 8019590:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019594:	1212      	asrs	r2, r2, #8
 8019596:	fa1f f982 	uxth.w	r9, r2
 801959a:	ea4f 2728 	mov.w	r7, r8, asr #8
 801959e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80195a2:	43d2      	mvns	r2, r2
 80195a4:	b2d2      	uxtb	r2, r2
 80195a6:	fb16 f609 	smulbb	r6, r6, r9
 80195aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80195ae:	fb07 6702 	mla	r7, r7, r2, r6
 80195b2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80195b6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80195ba:	b2ed      	uxtb	r5, r5
 80195bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80195c0:	fa5f f888 	uxtb.w	r8, r8
 80195c4:	fb15 f509 	smulbb	r5, r5, r9
 80195c8:	fb08 5502 	mla	r5, r8, r2, r5
 80195cc:	b2bf      	uxth	r7, r7
 80195ce:	fb1a fa09 	smulbb	sl, sl, r9
 80195d2:	b2ad      	uxth	r5, r5
 80195d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80195d8:	fb06 a602 	mla	r6, r6, r2, sl
 80195dc:	1c7a      	adds	r2, r7, #1
 80195de:	f105 0a01 	add.w	sl, r5, #1
 80195e2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80195e6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80195ea:	b2b6      	uxth	r6, r6
 80195ec:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80195f0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80195f4:	ea4a 0707 	orr.w	r7, sl, r7
 80195f8:	f106 0a01 	add.w	sl, r6, #1
 80195fc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019600:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019604:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019608:	9a03      	ldr	r2, [sp, #12]
 801960a:	ea47 070a 	orr.w	r7, r7, sl
 801960e:	52a7      	strh	r7, [r4, r2]
 8019610:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019612:	4410      	add	r0, r2
 8019614:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019616:	f10e 3eff 	add.w	lr, lr, #4294967295
 801961a:	4411      	add	r1, r2
 801961c:	e755      	b.n	80194ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801961e:	f04f 0800 	mov.w	r8, #0
 8019622:	eba3 0208 	sub.w	r2, r3, r8
 8019626:	2a00      	cmp	r2, #0
 8019628:	f77f af53 	ble.w	80194d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801962c:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8019630:	9f01      	ldr	r7, [sp, #4]
 8019632:	140a      	asrs	r2, r1, #16
 8019634:	1405      	asrs	r5, r0, #16
 8019636:	fb06 7202 	mla	r2, r6, r2, r7
 801963a:	5d52      	ldrb	r2, [r2, r5]
 801963c:	9d02      	ldr	r5, [sp, #8]
 801963e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8019642:	0e2e      	lsrs	r6, r5, #24
 8019644:	d044      	beq.n	80196d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8019646:	9a05      	ldr	r2, [sp, #20]
 8019648:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801964c:	4356      	muls	r6, r2
 801964e:	1c72      	adds	r2, r6, #1
 8019650:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8019654:	1212      	asrs	r2, r2, #8
 8019656:	fa1f f982 	uxth.w	r9, r2
 801965a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801965e:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8019662:	43d2      	mvns	r2, r2
 8019664:	b2d2      	uxtb	r2, r2
 8019666:	fb16 f609 	smulbb	r6, r6, r9
 801966a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801966e:	fb07 6702 	mla	r7, r7, r2, r6
 8019672:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019676:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801967a:	b2ed      	uxtb	r5, r5
 801967c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019680:	fa5f fe8e 	uxtb.w	lr, lr
 8019684:	fb15 f509 	smulbb	r5, r5, r9
 8019688:	fb0e 5502 	mla	r5, lr, r2, r5
 801968c:	b2bf      	uxth	r7, r7
 801968e:	fb1a fa09 	smulbb	sl, sl, r9
 8019692:	b2ad      	uxth	r5, r5
 8019694:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019698:	fb06 a602 	mla	r6, r6, r2, sl
 801969c:	1c7a      	adds	r2, r7, #1
 801969e:	f105 0a01 	add.w	sl, r5, #1
 80196a2:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80196a6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80196aa:	b2b6      	uxth	r6, r6
 80196ac:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80196b0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80196b4:	ea4a 0707 	orr.w	r7, sl, r7
 80196b8:	f106 0a01 	add.w	sl, r6, #1
 80196bc:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80196c0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80196c4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80196c8:	ea47 070a 	orr.w	r7, r7, sl
 80196cc:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80196d0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80196d2:	4410      	add	r0, r2
 80196d4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80196d6:	f108 0801 	add.w	r8, r8, #1
 80196da:	4411      	add	r1, r2
 80196dc:	e7a1      	b.n	8019622 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80196de:	b007      	add	sp, #28
 80196e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080196e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80196e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80196e8:	b085      	sub	sp, #20
 80196ea:	468b      	mov	fp, r1
 80196ec:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80196ee:	9203      	str	r2, [sp, #12]
 80196f0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80196f4:	6841      	ldr	r1, [r0, #4]
 80196f6:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80196fa:	fb01 2404 	mla	r4, r1, r4, r2
 80196fe:	6802      	ldr	r2, [r0, #0]
 8019700:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019704:	f8de 2000 	ldr.w	r2, [lr]
 8019708:	9200      	str	r2, [sp, #0]
 801970a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801970e:	3204      	adds	r2, #4
 8019710:	9201      	str	r2, [sp, #4]
 8019712:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019716:	f1bb 0f00 	cmp.w	fp, #0
 801971a:	dc03      	bgt.n	8019724 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801971c:	9a03      	ldr	r2, [sp, #12]
 801971e:	2a00      	cmp	r2, #0
 8019720:	f340 8153 	ble.w	80199ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019724:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019726:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801972a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801972e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019732:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019734:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019738:	2b00      	cmp	r3, #0
 801973a:	dd0e      	ble.n	801975a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801973c:	1408      	asrs	r0, r1, #16
 801973e:	d405      	bmi.n	801974c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019740:	42b8      	cmp	r0, r7
 8019742:	da03      	bge.n	801974c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019744:	1410      	asrs	r0, r2, #16
 8019746:	d401      	bmi.n	801974c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019748:	42b0      	cmp	r0, r6
 801974a:	db07      	blt.n	801975c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801974c:	9811      	ldr	r0, [sp, #68]	; 0x44
 801974e:	4401      	add	r1, r0
 8019750:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019752:	3b01      	subs	r3, #1
 8019754:	4402      	add	r2, r0
 8019756:	3402      	adds	r4, #2
 8019758:	e7ee      	b.n	8019738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801975a:	d017      	beq.n	801978c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801975c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801975e:	1e58      	subs	r0, r3, #1
 8019760:	fb05 1500 	mla	r5, r5, r0, r1
 8019764:	142d      	asrs	r5, r5, #16
 8019766:	d409      	bmi.n	801977c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019768:	42bd      	cmp	r5, r7
 801976a:	da07      	bge.n	801977c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801976c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801976e:	fb05 2000 	mla	r0, r5, r0, r2
 8019772:	1400      	asrs	r0, r0, #16
 8019774:	d402      	bmi.n	801977c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019776:	42b0      	cmp	r0, r6
 8019778:	f2c0 80bc 	blt.w	80198f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801977c:	2600      	movs	r6, #0
 801977e:	1998      	adds	r0, r3, r6
 8019780:	2800      	cmp	r0, #0
 8019782:	dc3e      	bgt.n	8019802 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8019784:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019788:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801978c:	f1bb 0f00 	cmp.w	fp, #0
 8019790:	f340 811b 	ble.w	80199ca <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8019794:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019798:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801979c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80197a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197a2:	f1bb 0b01 	subs.w	fp, fp, #1
 80197a6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80197aa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80197ae:	eeb0 6a62 	vmov.f32	s12, s5
 80197b2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80197b6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197ba:	ee77 2a62 	vsub.f32	s5, s14, s5
 80197be:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80197c2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80197c6:	eeb0 6a43 	vmov.f32	s12, s6
 80197ca:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80197ce:	ee12 2a90 	vmov	r2, s5
 80197d2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80197d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197da:	ee13 2a10 	vmov	r2, s6
 80197de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80197e2:	9311      	str	r3, [sp, #68]	; 0x44
 80197e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80197ea:	9a03      	ldr	r2, [sp, #12]
 80197ec:	9312      	str	r3, [sp, #72]	; 0x48
 80197ee:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80197f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80197f4:	eeb0 3a67 	vmov.f32	s6, s15
 80197f8:	bf08      	it	eq
 80197fa:	4613      	moveq	r3, r2
 80197fc:	eef0 2a47 	vmov.f32	s5, s14
 8019800:	e789      	b.n	8019716 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019802:	140f      	asrs	r7, r1, #16
 8019804:	d426      	bmi.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019806:	f8de 5008 	ldr.w	r5, [lr, #8]
 801980a:	42bd      	cmp	r5, r7
 801980c:	dd22      	ble.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801980e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019812:	d41f      	bmi.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019814:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019818:	4560      	cmp	r0, ip
 801981a:	dd1b      	ble.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801981c:	9800      	ldr	r0, [sp, #0]
 801981e:	b22d      	sxth	r5, r5
 8019820:	fb0c 0505 	mla	r5, ip, r5, r0
 8019824:	5de8      	ldrb	r0, [r5, r7]
 8019826:	9d01      	ldr	r5, [sp, #4]
 8019828:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801982c:	0e07      	lsrs	r7, r0, #24
 801982e:	2fff      	cmp	r7, #255	; 0xff
 8019830:	d116      	bne.n	8019860 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019832:	f06f 0501 	mvn.w	r5, #1
 8019836:	fb05 f706 	mul.w	r7, r5, r6
 801983a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801983e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8019842:	0945      	lsrs	r5, r0, #5
 8019844:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8019848:	ea4c 0505 	orr.w	r5, ip, r5
 801984c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019850:	4305      	orrs	r5, r0
 8019852:	53e5      	strh	r5, [r4, r7]
 8019854:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019856:	4401      	add	r1, r0
 8019858:	9812      	ldr	r0, [sp, #72]	; 0x48
 801985a:	3e01      	subs	r6, #1
 801985c:	4402      	add	r2, r0
 801985e:	e78e      	b.n	801977e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019860:	b2fd      	uxtb	r5, r7
 8019862:	2f00      	cmp	r7, #0
 8019864:	d0f6      	beq.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019866:	f06f 0701 	mvn.w	r7, #1
 801986a:	4377      	muls	r7, r6
 801986c:	fa1f f985 	uxth.w	r9, r5
 8019870:	f834 8007 	ldrh.w	r8, [r4, r7]
 8019874:	9702      	str	r7, [sp, #8]
 8019876:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801987a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801987e:	43ed      	mvns	r5, r5
 8019880:	b2ed      	uxtb	r5, r5
 8019882:	fb17 f709 	smulbb	r7, r7, r9
 8019886:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801988a:	fb0c 7c05 	mla	ip, ip, r5, r7
 801988e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8019892:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8019896:	b2c0      	uxtb	r0, r0
 8019898:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801989c:	fa5f f888 	uxtb.w	r8, r8
 80198a0:	fb10 f009 	smulbb	r0, r0, r9
 80198a4:	fb08 0005 	mla	r0, r8, r5, r0
 80198a8:	b280      	uxth	r0, r0
 80198aa:	fa1f fc8c 	uxth.w	ip, ip
 80198ae:	fb1a fa09 	smulbb	sl, sl, r9
 80198b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80198b6:	fb07 a705 	mla	r7, r7, r5, sl
 80198ba:	f100 0a01 	add.w	sl, r0, #1
 80198be:	f10c 0501 	add.w	r5, ip, #1
 80198c2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80198c6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80198ca:	b2bf      	uxth	r7, r7
 80198cc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80198d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80198d4:	ea4a 0c0c 	orr.w	ip, sl, ip
 80198d8:	f107 0a01 	add.w	sl, r7, #1
 80198dc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80198e0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80198e4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80198e8:	9802      	ldr	r0, [sp, #8]
 80198ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80198ee:	f824 c000 	strh.w	ip, [r4, r0]
 80198f2:	e7af      	b.n	8019854 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80198f4:	f04f 0800 	mov.w	r8, #0
 80198f8:	eba3 0008 	sub.w	r0, r3, r8
 80198fc:	2800      	cmp	r0, #0
 80198fe:	f77f af41 	ble.w	8019784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019902:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019906:	9f00      	ldr	r7, [sp, #0]
 8019908:	1410      	asrs	r0, r2, #16
 801990a:	140d      	asrs	r5, r1, #16
 801990c:	fb06 7000 	mla	r0, r6, r0, r7
 8019910:	5d40      	ldrb	r0, [r0, r5]
 8019912:	9d01      	ldr	r5, [sp, #4]
 8019914:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019918:	0e2e      	lsrs	r6, r5, #24
 801991a:	2eff      	cmp	r6, #255	; 0xff
 801991c:	d112      	bne.n	8019944 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 801991e:	482c      	ldr	r0, [pc, #176]	; (80199d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8019920:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019924:	0968      	lsrs	r0, r5, #5
 8019926:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801992a:	4330      	orrs	r0, r6
 801992c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019930:	4328      	orrs	r0, r5
 8019932:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8019936:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019938:	4401      	add	r1, r0
 801993a:	9812      	ldr	r0, [sp, #72]	; 0x48
 801993c:	f108 0801 	add.w	r8, r8, #1
 8019940:	4402      	add	r2, r0
 8019942:	e7d9      	b.n	80198f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019944:	b2f0      	uxtb	r0, r6
 8019946:	2e00      	cmp	r6, #0
 8019948:	d0f5      	beq.n	8019936 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801994a:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 801994e:	fa1f f980 	uxth.w	r9, r0
 8019952:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019956:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801995a:	43c0      	mvns	r0, r0
 801995c:	b2c0      	uxtb	r0, r0
 801995e:	fb16 f609 	smulbb	r6, r6, r9
 8019962:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019966:	fb07 6700 	mla	r7, r7, r0, r6
 801996a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801996e:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8019972:	b2ed      	uxtb	r5, r5
 8019974:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019978:	fa5f fc8c 	uxtb.w	ip, ip
 801997c:	fb15 f509 	smulbb	r5, r5, r9
 8019980:	fb0c 5500 	mla	r5, ip, r0, r5
 8019984:	b2bf      	uxth	r7, r7
 8019986:	fb1a fa09 	smulbb	sl, sl, r9
 801998a:	b2ad      	uxth	r5, r5
 801998c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019990:	fb06 a600 	mla	r6, r6, r0, sl
 8019994:	1c78      	adds	r0, r7, #1
 8019996:	f105 0a01 	add.w	sl, r5, #1
 801999a:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801999e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80199a2:	b2b6      	uxth	r6, r6
 80199a4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80199a8:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80199ac:	ea4a 0707 	orr.w	r7, sl, r7
 80199b0:	f106 0a01 	add.w	sl, r6, #1
 80199b4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80199b8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80199bc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80199c0:	ea47 070a 	orr.w	r7, r7, sl
 80199c4:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80199c8:	e7b5      	b.n	8019936 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80199ca:	b005      	add	sp, #20
 80199cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80199d0:	fffff800 	.word	0xfffff800

080199d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199d8:	b087      	sub	sp, #28
 80199da:	468b      	mov	fp, r1
 80199dc:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80199de:	9204      	str	r2, [sp, #16]
 80199e0:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80199e4:	9205      	str	r2, [sp, #20]
 80199e6:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80199ea:	6861      	ldr	r1, [r4, #4]
 80199ec:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80199f0:	fb01 2000 	mla	r0, r1, r0, r2
 80199f4:	6822      	ldr	r2, [r4, #0]
 80199f6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80199fa:	f8de 2000 	ldr.w	r2, [lr]
 80199fe:	9201      	str	r2, [sp, #4]
 8019a00:	f8de 2004 	ldr.w	r2, [lr, #4]
 8019a04:	9202      	str	r2, [sp, #8]
 8019a06:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a0a:	f1bb 0f00 	cmp.w	fp, #0
 8019a0e:	dc03      	bgt.n	8019a18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8019a10:	9a04      	ldr	r2, [sp, #16]
 8019a12:	2a00      	cmp	r2, #0
 8019a14:	f340 8142 	ble.w	8019c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a18:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8019a1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019a1e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8019a22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019a26:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8019a28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019a2c:	2b00      	cmp	r3, #0
 8019a2e:	dd0e      	ble.n	8019a4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019a30:	140c      	asrs	r4, r1, #16
 8019a32:	d405      	bmi.n	8019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a34:	42bc      	cmp	r4, r7
 8019a36:	da03      	bge.n	8019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a38:	1414      	asrs	r4, r2, #16
 8019a3a:	d401      	bmi.n	8019a40 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8019a3c:	42b4      	cmp	r4, r6
 8019a3e:	db07      	blt.n	8019a50 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8019a40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019a42:	4421      	add	r1, r4
 8019a44:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019a46:	3b01      	subs	r3, #1
 8019a48:	4422      	add	r2, r4
 8019a4a:	3002      	adds	r0, #2
 8019a4c:	e7ee      	b.n	8019a2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8019a4e:	d019      	beq.n	8019a84 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019a50:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8019a52:	1e5c      	subs	r4, r3, #1
 8019a54:	fb05 1504 	mla	r5, r5, r4, r1
 8019a58:	142d      	asrs	r5, r5, #16
 8019a5a:	d409      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a5c:	42bd      	cmp	r5, r7
 8019a5e:	da07      	bge.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a60:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8019a62:	fb05 2404 	mla	r4, r5, r4, r2
 8019a66:	1424      	asrs	r4, r4, #16
 8019a68:	d402      	bmi.n	8019a70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8019a6a:	42b4      	cmp	r4, r6
 8019a6c:	f2c0 80b1 	blt.w	8019bd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8019a70:	f04f 0800 	mov.w	r8, #0
 8019a74:	eb03 0408 	add.w	r4, r3, r8
 8019a78:	2c00      	cmp	r4, #0
 8019a7a:	dc3e      	bgt.n	8019afa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8019a7c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019a80:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019a84:	f1bb 0f00 	cmp.w	fp, #0
 8019a88:	f340 8108 	ble.w	8019c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8019a8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019a90:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019a94:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019a98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019a9a:	f1bb 0b01 	subs.w	fp, fp, #1
 8019a9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019aa2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019aa6:	eeb0 6a62 	vmov.f32	s12, s5
 8019aaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019aae:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ab2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019ab6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8019aba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019abe:	eeb0 6a43 	vmov.f32	s12, s6
 8019ac2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019ac6:	ee12 2a90 	vmov	r2, s5
 8019aca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019ace:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ad2:	ee13 2a10 	vmov	r2, s6
 8019ad6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019ada:	9313      	str	r3, [sp, #76]	; 0x4c
 8019adc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019ade:	fb92 f3f3 	sdiv	r3, r2, r3
 8019ae2:	9a04      	ldr	r2, [sp, #16]
 8019ae4:	9314      	str	r3, [sp, #80]	; 0x50
 8019ae6:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8019aea:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019aec:	eeb0 3a67 	vmov.f32	s6, s15
 8019af0:	bf08      	it	eq
 8019af2:	4613      	moveq	r3, r2
 8019af4:	eef0 2a47 	vmov.f32	s5, s14
 8019af8:	e787      	b.n	8019a0a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8019afa:	140e      	asrs	r6, r1, #16
 8019afc:	d462      	bmi.n	8019bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019afe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019b02:	42b5      	cmp	r5, r6
 8019b04:	dd5e      	ble.n	8019bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b06:	1417      	asrs	r7, r2, #16
 8019b08:	d45c      	bmi.n	8019bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b0a:	f8de 400c 	ldr.w	r4, [lr, #12]
 8019b0e:	42bc      	cmp	r4, r7
 8019b10:	dd58      	ble.n	8019bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b12:	b22d      	sxth	r5, r5
 8019b14:	fb07 6505 	mla	r5, r7, r5, r6
 8019b18:	9c02      	ldr	r4, [sp, #8]
 8019b1a:	5d66      	ldrb	r6, [r4, r5]
 8019b1c:	2e00      	cmp	r6, #0
 8019b1e:	d051      	beq.n	8019bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b20:	9c01      	ldr	r4, [sp, #4]
 8019b22:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8019b26:	f06f 0401 	mvn.w	r4, #1
 8019b2a:	fb04 f408 	mul.w	r4, r4, r8
 8019b2e:	9403      	str	r4, [sp, #12]
 8019b30:	5b05      	ldrh	r5, [r0, r4]
 8019b32:	9c05      	ldr	r4, [sp, #20]
 8019b34:	4366      	muls	r6, r4
 8019b36:	1c74      	adds	r4, r6, #1
 8019b38:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019b3c:	1224      	asrs	r4, r4, #8
 8019b3e:	b2a7      	uxth	r7, r4
 8019b40:	122e      	asrs	r6, r5, #8
 8019b42:	43e4      	mvns	r4, r4
 8019b44:	b2e4      	uxtb	r4, r4
 8019b46:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8019b4a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019b4e:	fb16 f604 	smulbb	r6, r6, r4
 8019b52:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019b56:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019b5a:	00ed      	lsls	r5, r5, #3
 8019b5c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019b60:	b2ed      	uxtb	r5, r5
 8019b62:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8019b66:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019b6a:	fb15 f504 	smulbb	r5, r5, r4
 8019b6e:	fa5f f989 	uxtb.w	r9, r9
 8019b72:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019b76:	fb09 5507 	mla	r5, r9, r7, r5
 8019b7a:	fb1a fa04 	smulbb	sl, sl, r4
 8019b7e:	fa1f fc8c 	uxth.w	ip, ip
 8019b82:	b2ad      	uxth	r5, r5
 8019b84:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019b88:	fb06 a607 	mla	r6, r6, r7, sl
 8019b8c:	f10c 0401 	add.w	r4, ip, #1
 8019b90:	f105 0a01 	add.w	sl, r5, #1
 8019b94:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019b98:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b9c:	b2b6      	uxth	r6, r6
 8019b9e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019ba2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019ba6:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019baa:	f106 0a01 	add.w	sl, r6, #1
 8019bae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019bb2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019bb6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019bba:	9c03      	ldr	r4, [sp, #12]
 8019bbc:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019bc0:	f820 c004 	strh.w	ip, [r0, r4]
 8019bc4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019bc6:	4421      	add	r1, r4
 8019bc8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019bca:	f108 38ff 	add.w	r8, r8, #4294967295
 8019bce:	4422      	add	r2, r4
 8019bd0:	e750      	b.n	8019a74 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019bd2:	f04f 0900 	mov.w	r9, #0
 8019bd6:	eba3 0409 	sub.w	r4, r3, r9
 8019bda:	2c00      	cmp	r4, #0
 8019bdc:	f77f af4e 	ble.w	8019a7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019be0:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8019be4:	140d      	asrs	r5, r1, #16
 8019be6:	1414      	asrs	r4, r2, #16
 8019be8:	fb06 5404 	mla	r4, r6, r4, r5
 8019bec:	9d02      	ldr	r5, [sp, #8]
 8019bee:	5d2e      	ldrb	r6, [r5, r4]
 8019bf0:	2e00      	cmp	r6, #0
 8019bf2:	d04c      	beq.n	8019c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8019bf4:	9d01      	ldr	r5, [sp, #4]
 8019bf6:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8019bfa:	9c05      	ldr	r4, [sp, #20]
 8019bfc:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019c00:	4366      	muls	r6, r4
 8019c02:	1c74      	adds	r4, r6, #1
 8019c04:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8019c08:	1224      	asrs	r4, r4, #8
 8019c0a:	b2a7      	uxth	r7, r4
 8019c0c:	122e      	asrs	r6, r5, #8
 8019c0e:	43e4      	mvns	r4, r4
 8019c10:	b2e4      	uxtb	r4, r4
 8019c12:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8019c16:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c1a:	fb16 f604 	smulbb	r6, r6, r4
 8019c1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019c22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019c26:	00ed      	lsls	r5, r5, #3
 8019c28:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019c2c:	b2ed      	uxtb	r5, r5
 8019c2e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8019c32:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019c36:	fb15 f504 	smulbb	r5, r5, r4
 8019c3a:	fa5f f888 	uxtb.w	r8, r8
 8019c3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019c42:	fb08 5507 	mla	r5, r8, r7, r5
 8019c46:	fb1a fa04 	smulbb	sl, sl, r4
 8019c4a:	fa1f fc8c 	uxth.w	ip, ip
 8019c4e:	b2ad      	uxth	r5, r5
 8019c50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019c54:	fb06 a607 	mla	r6, r6, r7, sl
 8019c58:	f10c 0401 	add.w	r4, ip, #1
 8019c5c:	f105 0a01 	add.w	sl, r5, #1
 8019c60:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019c64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019c68:	b2b6      	uxth	r6, r6
 8019c6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019c6e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c72:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019c76:	f106 0a01 	add.w	sl, r6, #1
 8019c7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019c7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019c82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019c86:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019c8a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019c8e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019c90:	4421      	add	r1, r4
 8019c92:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019c94:	f109 0901 	add.w	r9, r9, #1
 8019c98:	4422      	add	r2, r4
 8019c9a:	e79c      	b.n	8019bd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8019c9c:	b007      	add	sp, #28
 8019c9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ca2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019ca2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ca6:	b085      	sub	sp, #20
 8019ca8:	468b      	mov	fp, r1
 8019caa:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8019cac:	9203      	str	r2, [sp, #12]
 8019cae:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8019cb2:	6861      	ldr	r1, [r4, #4]
 8019cb4:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8019cb8:	fb01 2000 	mla	r0, r1, r0, r2
 8019cbc:	6822      	ldr	r2, [r4, #0]
 8019cbe:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8019cc2:	f8d8 2000 	ldr.w	r2, [r8]
 8019cc6:	9200      	str	r2, [sp, #0]
 8019cc8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8019ccc:	9201      	str	r2, [sp, #4]
 8019cce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019cd2:	f1bb 0f00 	cmp.w	fp, #0
 8019cd6:	dc03      	bgt.n	8019ce0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019cd8:	9a03      	ldr	r2, [sp, #12]
 8019cda:	2a00      	cmp	r2, #0
 8019cdc:	f340 8146 	ble.w	8019f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019ce0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019ce2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019ce6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019cea:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019cee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019cf0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019cf4:	2b00      	cmp	r3, #0
 8019cf6:	dd0e      	ble.n	8019d16 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8019cf8:	140c      	asrs	r4, r1, #16
 8019cfa:	d405      	bmi.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019cfc:	42bc      	cmp	r4, r7
 8019cfe:	da03      	bge.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d00:	1414      	asrs	r4, r2, #16
 8019d02:	d401      	bmi.n	8019d08 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8019d04:	42b4      	cmp	r4, r6
 8019d06:	db07      	blt.n	8019d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019d08:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019d0a:	4421      	add	r1, r4
 8019d0c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019d0e:	3b01      	subs	r3, #1
 8019d10:	4422      	add	r2, r4
 8019d12:	3002      	adds	r0, #2
 8019d14:	e7ee      	b.n	8019cf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019d16:	d017      	beq.n	8019d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8019d18:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d1a:	1e5c      	subs	r4, r3, #1
 8019d1c:	fb05 1504 	mla	r5, r5, r4, r1
 8019d20:	142d      	asrs	r5, r5, #16
 8019d22:	d409      	bmi.n	8019d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d24:	42bd      	cmp	r5, r7
 8019d26:	da07      	bge.n	8019d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d28:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019d2a:	fb05 2404 	mla	r4, r5, r4, r2
 8019d2e:	1424      	asrs	r4, r4, #16
 8019d30:	d402      	bmi.n	8019d38 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8019d32:	42b4      	cmp	r4, r6
 8019d34:	f2c0 80b3 	blt.w	8019e9e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8019d38:	2600      	movs	r6, #0
 8019d3a:	199c      	adds	r4, r3, r6
 8019d3c:	2c00      	cmp	r4, #0
 8019d3e:	dc3e      	bgt.n	8019dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8019d40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019d44:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8019d48:	f1bb 0f00 	cmp.w	fp, #0
 8019d4c:	f340 810e 	ble.w	8019f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8019d50:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d54:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d58:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d5e:	f1bb 0b01 	subs.w	fp, fp, #1
 8019d62:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d66:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d6a:	eeb0 6a62 	vmov.f32	s12, s5
 8019d6e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d76:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d7a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8019d7e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d82:	eeb0 6a43 	vmov.f32	s12, s6
 8019d86:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d8a:	ee12 2a90 	vmov	r2, s5
 8019d8e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d92:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d96:	ee13 2a10 	vmov	r2, s6
 8019d9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d9e:	9311      	str	r3, [sp, #68]	; 0x44
 8019da0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019da2:	fb92 f3f3 	sdiv	r3, r2, r3
 8019da6:	9a03      	ldr	r2, [sp, #12]
 8019da8:	9312      	str	r3, [sp, #72]	; 0x48
 8019daa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8019dae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019db0:	eeb0 3a67 	vmov.f32	s6, s15
 8019db4:	bf08      	it	eq
 8019db6:	4613      	moveq	r3, r2
 8019db8:	eef0 2a47 	vmov.f32	s5, s14
 8019dbc:	e789      	b.n	8019cd2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8019dbe:	140f      	asrs	r7, r1, #16
 8019dc0:	d418      	bmi.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dc2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019dc6:	42bd      	cmp	r5, r7
 8019dc8:	dd14      	ble.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dca:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019dce:	d411      	bmi.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dd0:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8019dd4:	4564      	cmp	r4, ip
 8019dd6:	dd0d      	ble.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019dd8:	b22d      	sxth	r5, r5
 8019dda:	fb0c 7505 	mla	r5, ip, r5, r7
 8019dde:	9c01      	ldr	r4, [sp, #4]
 8019de0:	5d64      	ldrb	r4, [r4, r5]
 8019de2:	2cff      	cmp	r4, #255	; 0xff
 8019de4:	d10c      	bne.n	8019e00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8019de6:	9c00      	ldr	r4, [sp, #0]
 8019de8:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8019dec:	f06f 0401 	mvn.w	r4, #1
 8019df0:	4374      	muls	r4, r6
 8019df2:	5305      	strh	r5, [r0, r4]
 8019df4:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019df6:	4421      	add	r1, r4
 8019df8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019dfa:	3e01      	subs	r6, #1
 8019dfc:	4422      	add	r2, r4
 8019dfe:	e79c      	b.n	8019d3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019e00:	2c00      	cmp	r4, #0
 8019e02:	d0f7      	beq.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e04:	9f00      	ldr	r7, [sp, #0]
 8019e06:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8019e0a:	f06f 0501 	mvn.w	r5, #1
 8019e0e:	4375      	muls	r5, r6
 8019e10:	9502      	str	r5, [sp, #8]
 8019e12:	5b45      	ldrh	r5, [r0, r5]
 8019e14:	fa1f fc84 	uxth.w	ip, r4
 8019e18:	122f      	asrs	r7, r5, #8
 8019e1a:	43e4      	mvns	r4, r4
 8019e1c:	b2e4      	uxtb	r4, r4
 8019e1e:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8019e22:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019e26:	fb17 f704 	smulbb	r7, r7, r4
 8019e2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019e2e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8019e32:	00ed      	lsls	r5, r5, #3
 8019e34:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8019e38:	b2ed      	uxtb	r5, r5
 8019e3a:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8019e3e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8019e42:	fb15 f504 	smulbb	r5, r5, r4
 8019e46:	fa5f f989 	uxtb.w	r9, r9
 8019e4a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019e4e:	fb09 550c 	mla	r5, r9, ip, r5
 8019e52:	fb1a fa04 	smulbb	sl, sl, r4
 8019e56:	fa1f fe8e 	uxth.w	lr, lr
 8019e5a:	b2ad      	uxth	r5, r5
 8019e5c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e60:	fb07 a70c 	mla	r7, r7, ip, sl
 8019e64:	f10e 0401 	add.w	r4, lr, #1
 8019e68:	f105 0a01 	add.w	sl, r5, #1
 8019e6c:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8019e70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019e74:	b2bf      	uxth	r7, r7
 8019e76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019e7a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8019e7e:	ea4a 0e0e 	orr.w	lr, sl, lr
 8019e82:	f107 0a01 	add.w	sl, r7, #1
 8019e86:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019e8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019e8e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019e92:	9c02      	ldr	r4, [sp, #8]
 8019e94:	ea4e 0e0a 	orr.w	lr, lr, sl
 8019e98:	f820 e004 	strh.w	lr, [r0, r4]
 8019e9c:	e7aa      	b.n	8019df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8019e9e:	f04f 0900 	mov.w	r9, #0
 8019ea2:	eba3 0409 	sub.w	r4, r3, r9
 8019ea6:	2c00      	cmp	r4, #0
 8019ea8:	f77f af4a 	ble.w	8019d40 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019eac:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8019eb0:	1414      	asrs	r4, r2, #16
 8019eb2:	140d      	asrs	r5, r1, #16
 8019eb4:	fb06 5504 	mla	r5, r6, r4, r5
 8019eb8:	9c01      	ldr	r4, [sp, #4]
 8019eba:	5d64      	ldrb	r4, [r4, r5]
 8019ebc:	2cff      	cmp	r4, #255	; 0xff
 8019ebe:	d10b      	bne.n	8019ed8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8019ec0:	9c00      	ldr	r4, [sp, #0]
 8019ec2:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8019ec6:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8019eca:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8019ecc:	4421      	add	r1, r4
 8019ece:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019ed0:	f109 0901 	add.w	r9, r9, #1
 8019ed4:	4422      	add	r2, r4
 8019ed6:	e7e4      	b.n	8019ea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8019ed8:	2c00      	cmp	r4, #0
 8019eda:	d0f6      	beq.n	8019eca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019edc:	9e00      	ldr	r6, [sp, #0]
 8019ede:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8019ee2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8019ee6:	b2a7      	uxth	r7, r4
 8019ee8:	122e      	asrs	r6, r5, #8
 8019eea:	43e4      	mvns	r4, r4
 8019eec:	b2e4      	uxtb	r4, r4
 8019eee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ef2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019ef6:	fb16 f604 	smulbb	r6, r6, r4
 8019efa:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8019efe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019f02:	00ed      	lsls	r5, r5, #3
 8019f04:	fb0c 6c07 	mla	ip, ip, r7, r6
 8019f08:	b2ed      	uxtb	r5, r5
 8019f0a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019f0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f12:	fb15 f504 	smulbb	r5, r5, r4
 8019f16:	fa5f fe8e 	uxtb.w	lr, lr
 8019f1a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8019f1e:	fb0e 5507 	mla	r5, lr, r7, r5
 8019f22:	fb1a fa04 	smulbb	sl, sl, r4
 8019f26:	fa1f fc8c 	uxth.w	ip, ip
 8019f2a:	b2ad      	uxth	r5, r5
 8019f2c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8019f30:	fb06 a607 	mla	r6, r6, r7, sl
 8019f34:	f10c 0401 	add.w	r4, ip, #1
 8019f38:	f105 0a01 	add.w	sl, r5, #1
 8019f3c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8019f40:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019f44:	b2b6      	uxth	r6, r6
 8019f46:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f4a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019f4e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8019f52:	f106 0a01 	add.w	sl, r6, #1
 8019f56:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f5a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f5e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8019f62:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019f66:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019f6a:	e7ae      	b.n	8019eca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019f6c:	b005      	add	sp, #20
 8019f6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019f72 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f76:	b085      	sub	sp, #20
 8019f78:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8019f7a:	9203      	str	r2, [sp, #12]
 8019f7c:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8019f80:	9201      	str	r2, [sp, #4]
 8019f82:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8019f86:	9100      	str	r1, [sp, #0]
 8019f88:	6841      	ldr	r1, [r0, #4]
 8019f8a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8019f8e:	fb01 2404 	mla	r4, r1, r4, r2
 8019f92:	6802      	ldr	r2, [r0, #0]
 8019f94:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019f98:	f8de 2000 	ldr.w	r2, [lr]
 8019f9c:	9202      	str	r2, [sp, #8]
 8019f9e:	9a01      	ldr	r2, [sp, #4]
 8019fa0:	43d6      	mvns	r6, r2
 8019fa2:	b2f6      	uxtb	r6, r6
 8019fa4:	9a00      	ldr	r2, [sp, #0]
 8019fa6:	2a00      	cmp	r2, #0
 8019fa8:	dc03      	bgt.n	8019fb2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019faa:	9a03      	ldr	r2, [sp, #12]
 8019fac:	2a00      	cmp	r2, #0
 8019fae:	f340 8124 	ble.w	801a1fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019fb2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019fb4:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8019fb8:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8019fbc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8019fc0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019fc2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8019fc6:	2b00      	cmp	r3, #0
 8019fc8:	dd0e      	ble.n	8019fe8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8019fca:	1408      	asrs	r0, r1, #16
 8019fcc:	d405      	bmi.n	8019fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fce:	4560      	cmp	r0, ip
 8019fd0:	da03      	bge.n	8019fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fd2:	1410      	asrs	r0, r2, #16
 8019fd4:	d401      	bmi.n	8019fda <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8019fd6:	42b8      	cmp	r0, r7
 8019fd8:	db07      	blt.n	8019fea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8019fda:	9811      	ldr	r0, [sp, #68]	; 0x44
 8019fdc:	4401      	add	r1, r0
 8019fde:	9812      	ldr	r0, [sp, #72]	; 0x48
 8019fe0:	3b01      	subs	r3, #1
 8019fe2:	4402      	add	r2, r0
 8019fe4:	3402      	adds	r4, #2
 8019fe6:	e7ee      	b.n	8019fc6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8019fe8:	d06e      	beq.n	801a0c8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8019fea:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fec:	1e58      	subs	r0, r3, #1
 8019fee:	fb05 1500 	mla	r5, r5, r0, r1
 8019ff2:	142d      	asrs	r5, r5, #16
 8019ff4:	d45c      	bmi.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ff6:	4565      	cmp	r5, ip
 8019ff8:	da5a      	bge.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8019ffa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019ffc:	fb05 2000 	mla	r0, r5, r0, r2
 801a000:	1400      	asrs	r0, r0, #16
 801a002:	d455      	bmi.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a004:	42b8      	cmp	r0, r7
 801a006:	da53      	bge.n	801a0b0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801a008:	f8bd b004 	ldrh.w	fp, [sp, #4]
 801a00c:	4699      	mov	r9, r3
 801a00e:	46a2      	mov	sl, r4
 801a010:	f1b9 0f00 	cmp.w	r9, #0
 801a014:	dd54      	ble.n	801a0c0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801a016:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801a01a:	140d      	asrs	r5, r1, #16
 801a01c:	1410      	asrs	r0, r2, #16
 801a01e:	fb07 5000 	mla	r0, r7, r0, r5
 801a022:	9d02      	ldr	r5, [sp, #8]
 801a024:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801a028:	f8ba 5000 	ldrh.w	r5, [sl]
 801a02c:	122f      	asrs	r7, r5, #8
 801a02e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a032:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a036:	fb17 f706 	smulbb	r7, r7, r6
 801a03a:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801a03e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a042:	00ed      	lsls	r5, r5, #3
 801a044:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801a048:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a04c:	10c7      	asrs	r7, r0, #3
 801a04e:	b2ed      	uxtb	r5, r5
 801a050:	00c0      	lsls	r0, r0, #3
 801a052:	fb18 f806 	smulbb	r8, r8, r6
 801a056:	fb15 f506 	smulbb	r5, r5, r6
 801a05a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a05e:	b2c0      	uxtb	r0, r0
 801a060:	fa1f fc8c 	uxth.w	ip, ip
 801a064:	fb07 870b 	mla	r7, r7, fp, r8
 801a068:	fb00 500b 	mla	r0, r0, fp, r5
 801a06c:	b280      	uxth	r0, r0
 801a06e:	b2bf      	uxth	r7, r7
 801a070:	f10c 0501 	add.w	r5, ip, #1
 801a074:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a078:	f107 0801 	add.w	r8, r7, #1
 801a07c:	1c45      	adds	r5, r0, #1
 801a07e:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a082:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801a086:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a088:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a08c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a090:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801a094:	ea45 0c0c 	orr.w	ip, r5, ip
 801a098:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801a09c:	4401      	add	r1, r0
 801a09e:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a0a0:	ea4c 0c08 	orr.w	ip, ip, r8
 801a0a4:	f82a cb02 	strh.w	ip, [sl], #2
 801a0a8:	4402      	add	r2, r0
 801a0aa:	f109 39ff 	add.w	r9, r9, #4294967295
 801a0ae:	e7af      	b.n	801a010 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a0b0:	f8bd a004 	ldrh.w	sl, [sp, #4]
 801a0b4:	f04f 0800 	mov.w	r8, #0
 801a0b8:	eb03 0008 	add.w	r0, r3, r8
 801a0bc:	2800      	cmp	r0, #0
 801a0be:	dc41      	bgt.n	801a144 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801a0c0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a0c4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a0c8:	9b00      	ldr	r3, [sp, #0]
 801a0ca:	2b00      	cmp	r3, #0
 801a0cc:	f340 8095 	ble.w	801a1fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801a0d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a0d4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a0d8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a0dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0de:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a0e2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a0e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a0ea:	eef0 6a62 	vmov.f32	s13, s5
 801a0ee:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a0f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a0f6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a0fa:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 801a0fe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a102:	eef0 6a43 	vmov.f32	s13, s6
 801a106:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a10a:	ee12 2a90 	vmov	r2, s5
 801a10e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a112:	fb92 f3f3 	sdiv	r3, r2, r3
 801a116:	ee13 2a10 	vmov	r2, s6
 801a11a:	9311      	str	r3, [sp, #68]	; 0x44
 801a11c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a11e:	fb92 f3f3 	sdiv	r3, r2, r3
 801a122:	9312      	str	r3, [sp, #72]	; 0x48
 801a124:	9b00      	ldr	r3, [sp, #0]
 801a126:	9a03      	ldr	r2, [sp, #12]
 801a128:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a12c:	3b01      	subs	r3, #1
 801a12e:	9300      	str	r3, [sp, #0]
 801a130:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 801a134:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a136:	eeb0 3a67 	vmov.f32	s6, s15
 801a13a:	bf08      	it	eq
 801a13c:	4613      	moveq	r3, r2
 801a13e:	eef0 2a47 	vmov.f32	s5, s14
 801a142:	e72f      	b.n	8019fa4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a144:	140f      	asrs	r7, r1, #16
 801a146:	d451      	bmi.n	801a1ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a148:	f8de 5008 	ldr.w	r5, [lr, #8]
 801a14c:	42bd      	cmp	r5, r7
 801a14e:	dd4d      	ble.n	801a1ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a150:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a154:	d44a      	bmi.n	801a1ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a156:	f8de 000c 	ldr.w	r0, [lr, #12]
 801a15a:	4560      	cmp	r0, ip
 801a15c:	dd46      	ble.n	801a1ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801a15e:	b22d      	sxth	r5, r5
 801a160:	fb0c 7505 	mla	r5, ip, r5, r7
 801a164:	9802      	ldr	r0, [sp, #8]
 801a166:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801a16a:	f06f 0501 	mvn.w	r5, #1
 801a16e:	fb05 fb08 	mul.w	fp, r5, r8
 801a172:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801a176:	f834 500b 	ldrh.w	r5, [r4, fp]
 801a17a:	122f      	asrs	r7, r5, #8
 801a17c:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a180:	fb17 f706 	smulbb	r7, r7, r6
 801a184:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801a188:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a18c:	00ed      	lsls	r5, r5, #3
 801a18e:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801a192:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801a196:	10c7      	asrs	r7, r0, #3
 801a198:	b2ed      	uxtb	r5, r5
 801a19a:	00c0      	lsls	r0, r0, #3
 801a19c:	fb19 f906 	smulbb	r9, r9, r6
 801a1a0:	fb15 f506 	smulbb	r5, r5, r6
 801a1a4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a1a8:	b2c0      	uxtb	r0, r0
 801a1aa:	fa1f fc8c 	uxth.w	ip, ip
 801a1ae:	fb07 970a 	mla	r7, r7, sl, r9
 801a1b2:	fb00 500a 	mla	r0, r0, sl, r5
 801a1b6:	b2bf      	uxth	r7, r7
 801a1b8:	b280      	uxth	r0, r0
 801a1ba:	f10c 0501 	add.w	r5, ip, #1
 801a1be:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a1c2:	f107 0901 	add.w	r9, r7, #1
 801a1c6:	1c45      	adds	r5, r0, #1
 801a1c8:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a1cc:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 801a1d0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a1d4:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801a1d8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801a1dc:	ea45 0c0c 	orr.w	ip, r5, ip
 801a1e0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801a1e4:	ea4c 0c09 	orr.w	ip, ip, r9
 801a1e8:	f824 c00b 	strh.w	ip, [r4, fp]
 801a1ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a1ee:	4401      	add	r1, r0
 801a1f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a1f2:	f108 38ff 	add.w	r8, r8, #4294967295
 801a1f6:	4402      	add	r2, r0
 801a1f8:	e75e      	b.n	801a0b8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801a1fa:	b005      	add	sp, #20
 801a1fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a200 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a200:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a204:	b085      	sub	sp, #20
 801a206:	4693      	mov	fp, r2
 801a208:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801a20a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801a20c:	6870      	ldr	r0, [r6, #4]
 801a20e:	9101      	str	r1, [sp, #4]
 801a210:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a214:	fb00 2404 	mla	r4, r0, r4, r2
 801a218:	6832      	ldr	r2, [r6, #0]
 801a21a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 801a21e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a222:	682a      	ldr	r2, [r5, #0]
 801a224:	9202      	str	r2, [sp, #8]
 801a226:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a22a:	9a01      	ldr	r2, [sp, #4]
 801a22c:	2a00      	cmp	r2, #0
 801a22e:	dc03      	bgt.n	801a238 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a230:	f1bb 0f00 	cmp.w	fp, #0
 801a234:	f340 809a 	ble.w	801a36c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a238:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a23a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801a23e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801a242:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a246:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a248:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a24c:	2b00      	cmp	r3, #0
 801a24e:	dd0c      	ble.n	801a26a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801a250:	1406      	asrs	r6, r0, #16
 801a252:	d405      	bmi.n	801a260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a254:	454e      	cmp	r6, r9
 801a256:	da03      	bge.n	801a260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a258:	1416      	asrs	r6, r2, #16
 801a25a:	d401      	bmi.n	801a260 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a25c:	4546      	cmp	r6, r8
 801a25e:	db05      	blt.n	801a26c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801a260:	4470      	add	r0, lr
 801a262:	4462      	add	r2, ip
 801a264:	3b01      	subs	r3, #1
 801a266:	3402      	adds	r4, #2
 801a268:	e7f0      	b.n	801a24c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a26a:	d00f      	beq.n	801a28c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a26c:	1e5e      	subs	r6, r3, #1
 801a26e:	fb0e 0706 	mla	r7, lr, r6, r0
 801a272:	143f      	asrs	r7, r7, #16
 801a274:	d541      	bpl.n	801a2fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801a276:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801a27a:	4698      	mov	r8, r3
 801a27c:	9603      	str	r6, [sp, #12]
 801a27e:	f1b8 0f00 	cmp.w	r8, #0
 801a282:	dc56      	bgt.n	801a332 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 801a284:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a288:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a28c:	9b01      	ldr	r3, [sp, #4]
 801a28e:	2b00      	cmp	r3, #0
 801a290:	dd6c      	ble.n	801a36c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801a292:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a296:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a29a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a29e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2a0:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a2a4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a2a8:	eeb0 6a62 	vmov.f32	s12, s5
 801a2ac:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a2b0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2b4:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a2b8:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a2bc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a2c0:	eeb0 6a43 	vmov.f32	s12, s6
 801a2c4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a2c8:	ee12 2a90 	vmov	r2, s5
 801a2cc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a2d0:	fb92 fef3 	sdiv	lr, r2, r3
 801a2d4:	ee13 2a10 	vmov	r2, s6
 801a2d8:	fb92 fcf3 	sdiv	ip, r2, r3
 801a2dc:	9b01      	ldr	r3, [sp, #4]
 801a2de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a2e2:	3b01      	subs	r3, #1
 801a2e4:	9301      	str	r3, [sp, #4]
 801a2e6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a2ea:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a2ec:	eeb0 3a67 	vmov.f32	s6, s15
 801a2f0:	bf08      	it	eq
 801a2f2:	465b      	moveq	r3, fp
 801a2f4:	eef0 2a47 	vmov.f32	s5, s14
 801a2f8:	e797      	b.n	801a22a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a2fa:	454f      	cmp	r7, r9
 801a2fc:	dabb      	bge.n	801a276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a2fe:	fb0c 2606 	mla	r6, ip, r6, r2
 801a302:	1436      	asrs	r6, r6, #16
 801a304:	d4b7      	bmi.n	801a276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a306:	4546      	cmp	r6, r8
 801a308:	dab5      	bge.n	801a276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a30a:	461e      	mov	r6, r3
 801a30c:	46a0      	mov	r8, r4
 801a30e:	2e00      	cmp	r6, #0
 801a310:	ddb8      	ble.n	801a284 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801a312:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801a316:	9902      	ldr	r1, [sp, #8]
 801a318:	1417      	asrs	r7, r2, #16
 801a31a:	ea4f 4920 	mov.w	r9, r0, asr #16
 801a31e:	fb0a 9707 	mla	r7, sl, r7, r9
 801a322:	4470      	add	r0, lr
 801a324:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801a328:	f828 7b02 	strh.w	r7, [r8], #2
 801a32c:	4462      	add	r2, ip
 801a32e:	3e01      	subs	r6, #1
 801a330:	e7ed      	b.n	801a30e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801a332:	ea5f 4920 	movs.w	r9, r0, asr #16
 801a336:	d414      	bmi.n	801a362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a338:	68ae      	ldr	r6, [r5, #8]
 801a33a:	454e      	cmp	r6, r9
 801a33c:	dd11      	ble.n	801a362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a33e:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801a342:	d40e      	bmi.n	801a362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a344:	68ef      	ldr	r7, [r5, #12]
 801a346:	4557      	cmp	r7, sl
 801a348:	dd0b      	ble.n	801a362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801a34a:	b236      	sxth	r6, r6
 801a34c:	fb0a 9606 	mla	r6, sl, r6, r9
 801a350:	9f02      	ldr	r7, [sp, #8]
 801a352:	f06f 0101 	mvn.w	r1, #1
 801a356:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801a35a:	fb01 f608 	mul.w	r6, r1, r8
 801a35e:	9903      	ldr	r1, [sp, #12]
 801a360:	538f      	strh	r7, [r1, r6]
 801a362:	4470      	add	r0, lr
 801a364:	4462      	add	r2, ip
 801a366:	f108 38ff 	add.w	r8, r8, #4294967295
 801a36a:	e788      	b.n	801a27e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801a36c:	b005      	add	sp, #20
 801a36e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a372 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a372:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a376:	b087      	sub	sp, #28
 801a378:	468b      	mov	fp, r1
 801a37a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a37c:	9203      	str	r2, [sp, #12]
 801a37e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a382:	9204      	str	r2, [sp, #16]
 801a384:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801a388:	6841      	ldr	r1, [r0, #4]
 801a38a:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a38e:	fb01 2505 	mla	r5, r1, r5, r2
 801a392:	6802      	ldr	r2, [r0, #0]
 801a394:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801a398:	f8d9 2000 	ldr.w	r2, [r9]
 801a39c:	9201      	str	r2, [sp, #4]
 801a39e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a3a2:	f1bb 0f00 	cmp.w	fp, #0
 801a3a6:	dc03      	bgt.n	801a3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a3a8:	9a03      	ldr	r2, [sp, #12]
 801a3aa:	2a00      	cmp	r2, #0
 801a3ac:	f340 8159 	ble.w	801a662 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a3b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a3b2:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a3b6:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a3ba:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a3be:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a3c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a3c4:	2b00      	cmp	r3, #0
 801a3c6:	dd0e      	ble.n	801a3e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801a3c8:	1402      	asrs	r2, r0, #16
 801a3ca:	d405      	bmi.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3cc:	42ba      	cmp	r2, r7
 801a3ce:	da03      	bge.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3d0:	140a      	asrs	r2, r1, #16
 801a3d2:	d401      	bmi.n	801a3d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801a3d4:	42b2      	cmp	r2, r6
 801a3d6:	db07      	blt.n	801a3e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801a3d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a3da:	4410      	add	r0, r2
 801a3dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a3de:	3b01      	subs	r3, #1
 801a3e0:	4411      	add	r1, r2
 801a3e2:	3502      	adds	r5, #2
 801a3e4:	e7ee      	b.n	801a3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a3e6:	d017      	beq.n	801a418 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801a3e8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801a3ea:	1e5a      	subs	r2, r3, #1
 801a3ec:	fb04 0402 	mla	r4, r4, r2, r0
 801a3f0:	1424      	asrs	r4, r4, #16
 801a3f2:	d409      	bmi.n	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3f4:	42bc      	cmp	r4, r7
 801a3f6:	da07      	bge.n	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a3f8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a3fa:	fb04 1202 	mla	r2, r4, r2, r1
 801a3fe:	1412      	asrs	r2, r2, #16
 801a400:	d402      	bmi.n	801a408 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801a402:	42b2      	cmp	r2, r6
 801a404:	f2c0 80bf 	blt.w	801a586 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801a408:	2700      	movs	r7, #0
 801a40a:	19da      	adds	r2, r3, r7
 801a40c:	2a00      	cmp	r2, #0
 801a40e:	dc3e      	bgt.n	801a48e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801a410:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a414:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801a418:	f1bb 0f00 	cmp.w	fp, #0
 801a41c:	f340 8121 	ble.w	801a662 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a420:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a424:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a428:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a42c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a42e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a432:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a436:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a43a:	eeb0 6a62 	vmov.f32	s12, s5
 801a43e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a442:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a446:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a44a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801a44e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a452:	eeb0 6a43 	vmov.f32	s12, s6
 801a456:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a45a:	ee12 2a90 	vmov	r2, s5
 801a45e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a462:	fb92 f3f3 	sdiv	r3, r2, r3
 801a466:	ee13 2a10 	vmov	r2, s6
 801a46a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a46e:	9313      	str	r3, [sp, #76]	; 0x4c
 801a470:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a472:	fb92 f3f3 	sdiv	r3, r2, r3
 801a476:	9a03      	ldr	r2, [sp, #12]
 801a478:	9314      	str	r3, [sp, #80]	; 0x50
 801a47a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801a47e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a480:	eeb0 3a67 	vmov.f32	s6, s15
 801a484:	bf08      	it	eq
 801a486:	4613      	moveq	r3, r2
 801a488:	eef0 2a47 	vmov.f32	s5, s14
 801a48c:	e789      	b.n	801a3a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801a48e:	1406      	asrs	r6, r0, #16
 801a490:	d42d      	bmi.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a492:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801a496:	42b4      	cmp	r4, r6
 801a498:	dd29      	ble.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a49a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801a49e:	d426      	bmi.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4a0:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801a4a4:	4562      	cmp	r2, ip
 801a4a6:	dd22      	ble.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4a8:	b224      	sxth	r4, r4
 801a4aa:	9a01      	ldr	r2, [sp, #4]
 801a4ac:	fb0c 6404 	mla	r4, ip, r4, r6
 801a4b0:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 801a4b4:	0e22      	lsrs	r2, r4, #24
 801a4b6:	d01a      	beq.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a4b8:	9e04      	ldr	r6, [sp, #16]
 801a4ba:	4372      	muls	r2, r6
 801a4bc:	1c56      	adds	r6, r2, #1
 801a4be:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a4c2:	1212      	asrs	r2, r2, #8
 801a4c4:	0a26      	lsrs	r6, r4, #8
 801a4c6:	2aff      	cmp	r2, #255	; 0xff
 801a4c8:	9605      	str	r6, [sp, #20]
 801a4ca:	d116      	bne.n	801a4fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801a4cc:	f06f 0201 	mvn.w	r2, #1
 801a4d0:	fb02 fc07 	mul.w	ip, r2, r7
 801a4d4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a4d8:	0962      	lsrs	r2, r4, #5
 801a4da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a4de:	f026 0607 	bic.w	r6, r6, #7
 801a4e2:	4316      	orrs	r6, r2
 801a4e4:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a4e8:	4326      	orrs	r6, r4
 801a4ea:	f825 600c 	strh.w	r6, [r5, ip]
 801a4ee:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a4f0:	4410      	add	r0, r2
 801a4f2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a4f4:	3f01      	subs	r7, #1
 801a4f6:	4411      	add	r1, r2
 801a4f8:	e787      	b.n	801a40a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a4fa:	f06f 0601 	mvn.w	r6, #1
 801a4fe:	437e      	muls	r6, r7
 801a500:	fa1f fa82 	uxth.w	sl, r2
 801a504:	f835 8006 	ldrh.w	r8, [r5, r6]
 801a508:	9602      	str	r6, [sp, #8]
 801a50a:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801a50e:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 801a512:	43d2      	mvns	r2, r2
 801a514:	b2d2      	uxtb	r2, r2
 801a516:	fb1c fc0a 	smulbb	ip, ip, sl
 801a51a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a51e:	fb0e ce02 	mla	lr, lr, r2, ip
 801a522:	b2e4      	uxtb	r4, r4
 801a524:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801a528:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801a52c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801a530:	fa5f f888 	uxtb.w	r8, r8
 801a534:	fb14 f40a 	smulbb	r4, r4, sl
 801a538:	fb08 4402 	mla	r4, r8, r2, r4
 801a53c:	fa1f fe8e 	uxth.w	lr, lr
 801a540:	fb16 f60a 	smulbb	r6, r6, sl
 801a544:	b2a4      	uxth	r4, r4
 801a546:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a54a:	fb0c 6c02 	mla	ip, ip, r2, r6
 801a54e:	f10e 0201 	add.w	r2, lr, #1
 801a552:	1c66      	adds	r6, r4, #1
 801a554:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801a558:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a55c:	fa1f fc8c 	uxth.w	ip, ip
 801a560:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a564:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801a568:	ea46 0e0e 	orr.w	lr, r6, lr
 801a56c:	f10c 0601 	add.w	r6, ip, #1
 801a570:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801a574:	0976      	lsrs	r6, r6, #5
 801a576:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a57a:	9a02      	ldr	r2, [sp, #8]
 801a57c:	ea4e 0e06 	orr.w	lr, lr, r6
 801a580:	f825 e002 	strh.w	lr, [r5, r2]
 801a584:	e7b3      	b.n	801a4ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801a586:	f04f 0800 	mov.w	r8, #0
 801a58a:	eba3 0208 	sub.w	r2, r3, r8
 801a58e:	2a00      	cmp	r2, #0
 801a590:	f77f af3e 	ble.w	801a410 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801a594:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801a598:	1404      	asrs	r4, r0, #16
 801a59a:	140a      	asrs	r2, r1, #16
 801a59c:	fb06 4202 	mla	r2, r6, r2, r4
 801a5a0:	9c01      	ldr	r4, [sp, #4]
 801a5a2:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801a5a6:	0e22      	lsrs	r2, r4, #24
 801a5a8:	d016      	beq.n	801a5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a5aa:	9e04      	ldr	r6, [sp, #16]
 801a5ac:	4372      	muls	r2, r6
 801a5ae:	1c56      	adds	r6, r2, #1
 801a5b0:	eb06 2222 	add.w	r2, r6, r2, asr #8
 801a5b4:	1212      	asrs	r2, r2, #8
 801a5b6:	2aff      	cmp	r2, #255	; 0xff
 801a5b8:	ea4f 2614 	mov.w	r6, r4, lsr #8
 801a5bc:	d113      	bne.n	801a5e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 801a5be:	0962      	lsrs	r2, r4, #5
 801a5c0:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801a5c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801a5c8:	f026 0607 	bic.w	r6, r6, #7
 801a5cc:	4316      	orrs	r6, r2
 801a5ce:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801a5d2:	4326      	orrs	r6, r4
 801a5d4:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 801a5d8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a5da:	4410      	add	r0, r2
 801a5dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a5de:	f108 0801 	add.w	r8, r8, #1
 801a5e2:	4411      	add	r1, r2
 801a5e4:	e7d1      	b.n	801a58a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801a5e6:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801a5ea:	fa1f fa82 	uxth.w	sl, r2
 801a5ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a5f2:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801a5f6:	43d2      	mvns	r2, r2
 801a5f8:	b2d2      	uxtb	r2, r2
 801a5fa:	fb17 f70a 	smulbb	r7, r7, sl
 801a5fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a602:	fb0c 7c02 	mla	ip, ip, r2, r7
 801a606:	b2e4      	uxtb	r4, r4
 801a608:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a60c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a610:	fa5f fe8e 	uxtb.w	lr, lr
 801a614:	fb14 f40a 	smulbb	r4, r4, sl
 801a618:	fb0e 4402 	mla	r4, lr, r2, r4
 801a61c:	b2f6      	uxtb	r6, r6
 801a61e:	fa1f fc8c 	uxth.w	ip, ip
 801a622:	fb16 f60a 	smulbb	r6, r6, sl
 801a626:	b2a4      	uxth	r4, r4
 801a628:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a62c:	fb07 6702 	mla	r7, r7, r2, r6
 801a630:	f10c 0201 	add.w	r2, ip, #1
 801a634:	1c66      	adds	r6, r4, #1
 801a636:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801a63a:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801a63e:	b2bf      	uxth	r7, r7
 801a640:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801a644:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a648:	ea46 0c0c 	orr.w	ip, r6, ip
 801a64c:	1c7e      	adds	r6, r7, #1
 801a64e:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801a652:	0976      	lsrs	r6, r6, #5
 801a654:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801a658:	ea4c 0c06 	orr.w	ip, ip, r6
 801a65c:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801a660:	e7ba      	b.n	801a5d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801a662:	b007      	add	sp, #28
 801a664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a668 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a668:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a66c:	b085      	sub	sp, #20
 801a66e:	468b      	mov	fp, r1
 801a670:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a672:	9203      	str	r2, [sp, #12]
 801a674:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801a678:	6841      	ldr	r1, [r0, #4]
 801a67a:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 801a67e:	fb01 2404 	mla	r4, r1, r4, r2
 801a682:	6802      	ldr	r2, [r0, #0]
 801a684:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a688:	f8d8 2000 	ldr.w	r2, [r8]
 801a68c:	9201      	str	r2, [sp, #4]
 801a68e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a692:	f1bb 0f00 	cmp.w	fp, #0
 801a696:	dc03      	bgt.n	801a6a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801a698:	9a03      	ldr	r2, [sp, #12]
 801a69a:	2a00      	cmp	r2, #0
 801a69c:	f340 814f 	ble.w	801a93e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a6a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a6a2:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801a6a6:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801a6aa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a6ae:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a6b0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801a6b4:	2b00      	cmp	r3, #0
 801a6b6:	dd0e      	ble.n	801a6d6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a6b8:	1408      	asrs	r0, r1, #16
 801a6ba:	d405      	bmi.n	801a6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6bc:	42b8      	cmp	r0, r7
 801a6be:	da03      	bge.n	801a6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6c0:	1410      	asrs	r0, r2, #16
 801a6c2:	d401      	bmi.n	801a6c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801a6c4:	42b0      	cmp	r0, r6
 801a6c6:	db07      	blt.n	801a6d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801a6c8:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a6ca:	4401      	add	r1, r0
 801a6cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a6ce:	3b01      	subs	r3, #1
 801a6d0:	4402      	add	r2, r0
 801a6d2:	3402      	adds	r4, #2
 801a6d4:	e7ee      	b.n	801a6b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801a6d6:	d017      	beq.n	801a708 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801a6d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a6da:	1e58      	subs	r0, r3, #1
 801a6dc:	fb05 1500 	mla	r5, r5, r0, r1
 801a6e0:	142d      	asrs	r5, r5, #16
 801a6e2:	d409      	bmi.n	801a6f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6e4:	42bd      	cmp	r5, r7
 801a6e6:	da07      	bge.n	801a6f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6e8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801a6ea:	fb05 2000 	mla	r0, r5, r0, r2
 801a6ee:	1400      	asrs	r0, r0, #16
 801a6f0:	d402      	bmi.n	801a6f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801a6f2:	42b0      	cmp	r0, r6
 801a6f4:	f2c0 80ba 	blt.w	801a86c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a6f8:	2600      	movs	r6, #0
 801a6fa:	1998      	adds	r0, r3, r6
 801a6fc:	2800      	cmp	r0, #0
 801a6fe:	dc3e      	bgt.n	801a77e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a700:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a704:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a708:	f1bb 0f00 	cmp.w	fp, #0
 801a70c:	f340 8117 	ble.w	801a93e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801a710:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a714:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a718:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a71c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a71e:	f1bb 0b01 	subs.w	fp, fp, #1
 801a722:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a726:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a72a:	eeb0 6a62 	vmov.f32	s12, s5
 801a72e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a732:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a736:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a73a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 801a73e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a742:	eeb0 6a43 	vmov.f32	s12, s6
 801a746:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a74a:	ee12 2a90 	vmov	r2, s5
 801a74e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a752:	fb92 f3f3 	sdiv	r3, r2, r3
 801a756:	ee13 2a10 	vmov	r2, s6
 801a75a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a75e:	9311      	str	r3, [sp, #68]	; 0x44
 801a760:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a762:	fb92 f3f3 	sdiv	r3, r2, r3
 801a766:	9a03      	ldr	r2, [sp, #12]
 801a768:	9312      	str	r3, [sp, #72]	; 0x48
 801a76a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801a76e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a770:	eeb0 3a67 	vmov.f32	s6, s15
 801a774:	bf08      	it	eq
 801a776:	4613      	moveq	r3, r2
 801a778:	eef0 2a47 	vmov.f32	s5, s14
 801a77c:	e789      	b.n	801a692 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801a77e:	140f      	asrs	r7, r1, #16
 801a780:	d424      	bmi.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a782:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801a786:	42bd      	cmp	r5, r7
 801a788:	dd20      	ble.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a78a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801a78e:	d41d      	bmi.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a790:	f8d8 000c 	ldr.w	r0, [r8, #12]
 801a794:	4560      	cmp	r0, ip
 801a796:	dd19      	ble.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a798:	b22d      	sxth	r5, r5
 801a79a:	fb0c 7505 	mla	r5, ip, r5, r7
 801a79e:	9801      	ldr	r0, [sp, #4]
 801a7a0:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 801a7a4:	0e07      	lsrs	r7, r0, #24
 801a7a6:	2fff      	cmp	r7, #255	; 0xff
 801a7a8:	d116      	bne.n	801a7d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801a7aa:	f06f 0501 	mvn.w	r5, #1
 801a7ae:	fb05 f706 	mul.w	r7, r5, r6
 801a7b2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 801a7b6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801a7ba:	0945      	lsrs	r5, r0, #5
 801a7bc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a7c0:	ea4c 0505 	orr.w	r5, ip, r5
 801a7c4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801a7c8:	4305      	orrs	r5, r0
 801a7ca:	53e5      	strh	r5, [r4, r7]
 801a7cc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a7ce:	4401      	add	r1, r0
 801a7d0:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a7d2:	3e01      	subs	r6, #1
 801a7d4:	4402      	add	r2, r0
 801a7d6:	e790      	b.n	801a6fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7d8:	b2fd      	uxtb	r5, r7
 801a7da:	2f00      	cmp	r7, #0
 801a7dc:	d0f6      	beq.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a7de:	f06f 0701 	mvn.w	r7, #1
 801a7e2:	4377      	muls	r7, r6
 801a7e4:	fa1f f985 	uxth.w	r9, r5
 801a7e8:	f834 e007 	ldrh.w	lr, [r4, r7]
 801a7ec:	9702      	str	r7, [sp, #8]
 801a7ee:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801a7f2:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801a7f6:	43ed      	mvns	r5, r5
 801a7f8:	b2ed      	uxtb	r5, r5
 801a7fa:	fb17 f709 	smulbb	r7, r7, r9
 801a7fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a802:	fb0c 7c05 	mla	ip, ip, r5, r7
 801a806:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801a80a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801a80e:	b2c0      	uxtb	r0, r0
 801a810:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a814:	fa5f fe8e 	uxtb.w	lr, lr
 801a818:	fb10 f009 	smulbb	r0, r0, r9
 801a81c:	fb0e 0005 	mla	r0, lr, r5, r0
 801a820:	b280      	uxth	r0, r0
 801a822:	fa1f fc8c 	uxth.w	ip, ip
 801a826:	fb1a fa09 	smulbb	sl, sl, r9
 801a82a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a82e:	fb07 a705 	mla	r7, r7, r5, sl
 801a832:	f100 0a01 	add.w	sl, r0, #1
 801a836:	f10c 0501 	add.w	r5, ip, #1
 801a83a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801a83e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801a842:	b2bf      	uxth	r7, r7
 801a844:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a848:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a84c:	ea4a 0c0c 	orr.w	ip, sl, ip
 801a850:	f107 0a01 	add.w	sl, r7, #1
 801a854:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a858:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a85c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a860:	9802      	ldr	r0, [sp, #8]
 801a862:	ea4c 0c0a 	orr.w	ip, ip, sl
 801a866:	f824 c000 	strh.w	ip, [r4, r0]
 801a86a:	e7af      	b.n	801a7cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801a86c:	f04f 0e00 	mov.w	lr, #0
 801a870:	eba3 000e 	sub.w	r0, r3, lr
 801a874:	2800      	cmp	r0, #0
 801a876:	f77f af43 	ble.w	801a700 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801a87a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801a87e:	140d      	asrs	r5, r1, #16
 801a880:	1410      	asrs	r0, r2, #16
 801a882:	fb06 5000 	mla	r0, r6, r0, r5
 801a886:	9d01      	ldr	r5, [sp, #4]
 801a888:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801a88c:	0e2e      	lsrs	r6, r5, #24
 801a88e:	2eff      	cmp	r6, #255	; 0xff
 801a890:	d112      	bne.n	801a8b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801a892:	482c      	ldr	r0, [pc, #176]	; (801a944 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 801a894:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801a898:	0968      	lsrs	r0, r5, #5
 801a89a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801a89e:	4330      	orrs	r0, r6
 801a8a0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801a8a4:	4328      	orrs	r0, r5
 801a8a6:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801a8aa:	9811      	ldr	r0, [sp, #68]	; 0x44
 801a8ac:	4401      	add	r1, r0
 801a8ae:	9812      	ldr	r0, [sp, #72]	; 0x48
 801a8b0:	f10e 0e01 	add.w	lr, lr, #1
 801a8b4:	4402      	add	r2, r0
 801a8b6:	e7db      	b.n	801a870 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 801a8b8:	b2f0      	uxtb	r0, r6
 801a8ba:	2e00      	cmp	r6, #0
 801a8bc:	d0f5      	beq.n	801a8aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a8be:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801a8c2:	fa1f f980 	uxth.w	r9, r0
 801a8c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 801a8ca:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a8ce:	43c0      	mvns	r0, r0
 801a8d0:	b2c0      	uxtb	r0, r0
 801a8d2:	fb16 f609 	smulbb	r6, r6, r9
 801a8d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801a8da:	fb07 6700 	mla	r7, r7, r0, r6
 801a8de:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801a8e2:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801a8e6:	b2ed      	uxtb	r5, r5
 801a8e8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a8ec:	fa5f fc8c 	uxtb.w	ip, ip
 801a8f0:	fb15 f509 	smulbb	r5, r5, r9
 801a8f4:	fb0c 5500 	mla	r5, ip, r0, r5
 801a8f8:	b2bf      	uxth	r7, r7
 801a8fa:	fb1a fa09 	smulbb	sl, sl, r9
 801a8fe:	b2ad      	uxth	r5, r5
 801a900:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801a904:	fb06 a600 	mla	r6, r6, r0, sl
 801a908:	1c78      	adds	r0, r7, #1
 801a90a:	f105 0a01 	add.w	sl, r5, #1
 801a90e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801a912:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a916:	b2b6      	uxth	r6, r6
 801a918:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a91c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801a920:	ea4a 0707 	orr.w	r7, sl, r7
 801a924:	f106 0a01 	add.w	sl, r6, #1
 801a928:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801a92c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a930:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a934:	ea47 070a 	orr.w	r7, r7, sl
 801a938:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 801a93c:	e7b5      	b.n	801a8aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801a93e:	b005      	add	sp, #20
 801a940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a944:	fffff800 	.word	0xfffff800

0801a948 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a948:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a94c:	b087      	sub	sp, #28
 801a94e:	468b      	mov	fp, r1
 801a950:	9815      	ldr	r0, [sp, #84]	; 0x54
 801a952:	9203      	str	r2, [sp, #12]
 801a954:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801a958:	9204      	str	r2, [sp, #16]
 801a95a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801a95e:	6841      	ldr	r1, [r0, #4]
 801a960:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 801a964:	fb01 2404 	mla	r4, r1, r4, r2
 801a968:	6802      	ldr	r2, [r0, #0]
 801a96a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801a96e:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801a972:	3201      	adds	r2, #1
 801a974:	f022 0201 	bic.w	r2, r2, #1
 801a978:	9200      	str	r2, [sp, #0]
 801a97a:	f8d9 2000 	ldr.w	r2, [r9]
 801a97e:	9201      	str	r2, [sp, #4]
 801a980:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a984:	f1bb 0f00 	cmp.w	fp, #0
 801a988:	dc03      	bgt.n	801a992 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a98a:	9a03      	ldr	r2, [sp, #12]
 801a98c:	2a00      	cmp	r2, #0
 801a98e:	f340 8169 	ble.w	801ac64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801a992:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801a994:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801a998:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 801a99c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801a9a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a9a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801a9a6:	2b00      	cmp	r3, #0
 801a9a8:	dd0e      	ble.n	801a9c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801a9aa:	1402      	asrs	r2, r0, #16
 801a9ac:	d405      	bmi.n	801a9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9ae:	42ba      	cmp	r2, r7
 801a9b0:	da03      	bge.n	801a9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9b2:	140a      	asrs	r2, r1, #16
 801a9b4:	d401      	bmi.n	801a9ba <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a9b6:	42b2      	cmp	r2, r6
 801a9b8:	db07      	blt.n	801a9ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801a9ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801a9bc:	4410      	add	r0, r2
 801a9be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801a9c0:	3b01      	subs	r3, #1
 801a9c2:	4411      	add	r1, r2
 801a9c4:	3402      	adds	r4, #2
 801a9c6:	e7ee      	b.n	801a9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801a9c8:	d017      	beq.n	801a9fa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801a9ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801a9cc:	1e5a      	subs	r2, r3, #1
 801a9ce:	fb05 0502 	mla	r5, r5, r2, r0
 801a9d2:	142d      	asrs	r5, r5, #16
 801a9d4:	d409      	bmi.n	801a9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9d6:	42bd      	cmp	r5, r7
 801a9d8:	da07      	bge.n	801a9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a9dc:	fb05 1202 	mla	r2, r5, r2, r1
 801a9e0:	1412      	asrs	r2, r2, #16
 801a9e2:	d402      	bmi.n	801a9ea <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801a9e4:	42b2      	cmp	r2, r6
 801a9e6:	f2c0 80c7 	blt.w	801ab78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801a9ea:	2700      	movs	r7, #0
 801a9ec:	19da      	adds	r2, r3, r7
 801a9ee:	2a00      	cmp	r2, #0
 801a9f0:	dc3e      	bgt.n	801aa70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801a9f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a9f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a9fa:	f1bb 0f00 	cmp.w	fp, #0
 801a9fe:	f340 8131 	ble.w	801ac64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801aa02:	ee30 0a04 	vadd.f32	s0, s0, s8
 801aa06:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801aa0a:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801aa0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa10:	f1bb 0b01 	subs.w	fp, fp, #1
 801aa14:	ee31 1a05 	vadd.f32	s2, s2, s10
 801aa18:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801aa1c:	eeb0 6a62 	vmov.f32	s12, s5
 801aa20:	ee61 7a27 	vmul.f32	s15, s2, s15
 801aa24:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa28:	ee77 2a62 	vsub.f32	s5, s14, s5
 801aa2c:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801aa30:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801aa34:	eeb0 6a43 	vmov.f32	s12, s6
 801aa38:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801aa3c:	ee12 2a90 	vmov	r2, s5
 801aa40:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801aa44:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa48:	ee13 2a10 	vmov	r2, s6
 801aa4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801aa50:	9313      	str	r3, [sp, #76]	; 0x4c
 801aa52:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa54:	fb92 f3f3 	sdiv	r3, r2, r3
 801aa58:	9a03      	ldr	r2, [sp, #12]
 801aa5a:	9314      	str	r3, [sp, #80]	; 0x50
 801aa5c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801aa60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aa62:	eeb0 3a67 	vmov.f32	s6, s15
 801aa66:	bf08      	it	eq
 801aa68:	4613      	moveq	r3, r2
 801aa6a:	eef0 2a47 	vmov.f32	s5, s14
 801aa6e:	e789      	b.n	801a984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801aa70:	1405      	asrs	r5, r0, #16
 801aa72:	d435      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa74:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801aa78:	42aa      	cmp	r2, r5
 801aa7a:	dd31      	ble.n	801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa7c:	140e      	asrs	r6, r1, #16
 801aa7e:	d42f      	bmi.n	801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa80:	f8d9 200c 	ldr.w	r2, [r9, #12]
 801aa84:	42b2      	cmp	r2, r6
 801aa86:	dd2b      	ble.n	801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aa88:	9a00      	ldr	r2, [sp, #0]
 801aa8a:	fb06 5502 	mla	r5, r6, r2, r5
 801aa8e:	086a      	lsrs	r2, r5, #1
 801aa90:	9e01      	ldr	r6, [sp, #4]
 801aa92:	5cb2      	ldrb	r2, [r6, r2]
 801aa94:	07ee      	lsls	r6, r5, #31
 801aa96:	bf54      	ite	pl
 801aa98:	f002 020f 	andpl.w	r2, r2, #15
 801aa9c:	1112      	asrmi	r2, r2, #4
 801aa9e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aaa2:	b2d2      	uxtb	r2, r2
 801aaa4:	b1e2      	cbz	r2, 801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aaa6:	9d04      	ldr	r5, [sp, #16]
 801aaa8:	436a      	muls	r2, r5
 801aaaa:	1c55      	adds	r5, r2, #1
 801aaac:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801aab0:	4d6e      	ldr	r5, [pc, #440]	; (801ac6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801aab2:	682d      	ldr	r5, [r5, #0]
 801aab4:	1212      	asrs	r2, r2, #8
 801aab6:	0a2e      	lsrs	r6, r5, #8
 801aab8:	2aff      	cmp	r2, #255	; 0xff
 801aaba:	9605      	str	r6, [sp, #20]
 801aabc:	d116      	bne.n	801aaec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aabe:	f06f 0201 	mvn.w	r2, #1
 801aac2:	fb02 fc07 	mul.w	ip, r2, r7
 801aac6:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801aaca:	096a      	lsrs	r2, r5, #5
 801aacc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aad0:	f026 0607 	bic.w	r6, r6, #7
 801aad4:	4316      	orrs	r6, r2
 801aad6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aada:	432e      	orrs	r6, r5
 801aadc:	f824 600c 	strh.w	r6, [r4, ip]
 801aae0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aae2:	4410      	add	r0, r2
 801aae4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aae6:	3f01      	subs	r7, #1
 801aae8:	4411      	add	r1, r2
 801aaea:	e77f      	b.n	801a9ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801aaec:	f06f 0601 	mvn.w	r6, #1
 801aaf0:	437e      	muls	r6, r7
 801aaf2:	fa1f fa82 	uxth.w	sl, r2
 801aaf6:	f834 8006 	ldrh.w	r8, [r4, r6]
 801aafa:	9602      	str	r6, [sp, #8]
 801aafc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801ab00:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801ab04:	43d2      	mvns	r2, r2
 801ab06:	b2d2      	uxtb	r2, r2
 801ab08:	fb1c fc0a 	smulbb	ip, ip, sl
 801ab0c:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ab10:	fb0e ce02 	mla	lr, lr, r2, ip
 801ab14:	b2ed      	uxtb	r5, r5
 801ab16:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801ab1a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801ab1e:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801ab22:	fa5f f888 	uxtb.w	r8, r8
 801ab26:	fb15 f50a 	smulbb	r5, r5, sl
 801ab2a:	fb08 5502 	mla	r5, r8, r2, r5
 801ab2e:	fa1f fe8e 	uxth.w	lr, lr
 801ab32:	fb16 f60a 	smulbb	r6, r6, sl
 801ab36:	b2ad      	uxth	r5, r5
 801ab38:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801ab3c:	fb0c 6c02 	mla	ip, ip, r2, r6
 801ab40:	f10e 0201 	add.w	r2, lr, #1
 801ab44:	1c6e      	adds	r6, r5, #1
 801ab46:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801ab4a:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 801ab4e:	fa1f fc8c 	uxth.w	ip, ip
 801ab52:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ab56:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801ab5a:	ea46 0e0e 	orr.w	lr, r6, lr
 801ab5e:	f10c 0601 	add.w	r6, ip, #1
 801ab62:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801ab66:	0976      	lsrs	r6, r6, #5
 801ab68:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801ab6c:	9a02      	ldr	r2, [sp, #8]
 801ab6e:	ea4e 0e06 	orr.w	lr, lr, r6
 801ab72:	f824 e002 	strh.w	lr, [r4, r2]
 801ab76:	e7b3      	b.n	801aae0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ab78:	f04f 0800 	mov.w	r8, #0
 801ab7c:	eba3 0208 	sub.w	r2, r3, r8
 801ab80:	2a00      	cmp	r2, #0
 801ab82:	f77f af36 	ble.w	801a9f2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801ab86:	9e00      	ldr	r6, [sp, #0]
 801ab88:	1402      	asrs	r2, r0, #16
 801ab8a:	140d      	asrs	r5, r1, #16
 801ab8c:	fb06 2505 	mla	r5, r6, r5, r2
 801ab90:	086a      	lsrs	r2, r5, #1
 801ab92:	9e01      	ldr	r6, [sp, #4]
 801ab94:	5cb2      	ldrb	r2, [r6, r2]
 801ab96:	07ed      	lsls	r5, r5, #31
 801ab98:	bf54      	ite	pl
 801ab9a:	f002 020f 	andpl.w	r2, r2, #15
 801ab9e:	1112      	asrmi	r2, r2, #4
 801aba0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aba4:	b2d2      	uxtb	r2, r2
 801aba6:	b1c2      	cbz	r2, 801abda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801aba8:	9d04      	ldr	r5, [sp, #16]
 801abaa:	436a      	muls	r2, r5
 801abac:	1c55      	adds	r5, r2, #1
 801abae:	eb05 2222 	add.w	r2, r5, r2, asr #8
 801abb2:	4d2e      	ldr	r5, [pc, #184]	; (801ac6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 801abb4:	1212      	asrs	r2, r2, #8
 801abb6:	682e      	ldr	r6, [r5, #0]
 801abb8:	2aff      	cmp	r2, #255	; 0xff
 801abba:	ea4f 2516 	mov.w	r5, r6, lsr #8
 801abbe:	d113      	bne.n	801abe8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801abc0:	0972      	lsrs	r2, r6, #5
 801abc2:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801abc6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801abca:	f025 0507 	bic.w	r5, r5, #7
 801abce:	4315      	orrs	r5, r2
 801abd0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801abd4:	4335      	orrs	r5, r6
 801abd6:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801abda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801abdc:	4410      	add	r0, r2
 801abde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801abe0:	f108 0801 	add.w	r8, r8, #1
 801abe4:	4411      	add	r1, r2
 801abe6:	e7c9      	b.n	801ab7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801abe8:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801abec:	fa1f fa82 	uxth.w	sl, r2
 801abf0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801abf4:	f3c6 4707 	ubfx	r7, r6, #16, #8
 801abf8:	43d2      	mvns	r2, r2
 801abfa:	b2d2      	uxtb	r2, r2
 801abfc:	fb17 f70a 	smulbb	r7, r7, sl
 801ac00:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ac04:	fb0c 7c02 	mla	ip, ip, r2, r7
 801ac08:	b2f6      	uxtb	r6, r6
 801ac0a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801ac0e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac12:	fa5f fe8e 	uxtb.w	lr, lr
 801ac16:	fb16 f60a 	smulbb	r6, r6, sl
 801ac1a:	fb0e 6602 	mla	r6, lr, r2, r6
 801ac1e:	b2ed      	uxtb	r5, r5
 801ac20:	fa1f fc8c 	uxth.w	ip, ip
 801ac24:	fb15 f50a 	smulbb	r5, r5, sl
 801ac28:	b2b6      	uxth	r6, r6
 801ac2a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ac2e:	fb07 5702 	mla	r7, r7, r2, r5
 801ac32:	f10c 0201 	add.w	r2, ip, #1
 801ac36:	1c75      	adds	r5, r6, #1
 801ac38:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801ac3c:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801ac40:	b2bf      	uxth	r7, r7
 801ac42:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801ac46:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ac4a:	ea45 0c0c 	orr.w	ip, r5, ip
 801ac4e:	1c7d      	adds	r5, r7, #1
 801ac50:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 801ac54:	096d      	lsrs	r5, r5, #5
 801ac56:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac5a:	ea4c 0c05 	orr.w	ip, ip, r5
 801ac5e:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 801ac62:	e7ba      	b.n	801abda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801ac64:	b007      	add	sp, #28
 801ac66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac6a:	bf00      	nop
 801ac6c:	2000ef2c 	.word	0x2000ef2c

0801ac70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac74:	b087      	sub	sp, #28
 801ac76:	f8df 830c 	ldr.w	r8, [pc, #780]	; 801af84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801ac7a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ac7c:	9205      	str	r2, [sp, #20]
 801ac7e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801ac82:	9101      	str	r1, [sp, #4]
 801ac84:	6841      	ldr	r1, [r0, #4]
 801ac86:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801ac8a:	fb01 2404 	mla	r4, r1, r4, r2
 801ac8e:	6802      	ldr	r2, [r0, #0]
 801ac90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801ac94:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ac98:	3201      	adds	r2, #1
 801ac9a:	f022 0201 	bic.w	r2, r2, #1
 801ac9e:	9202      	str	r2, [sp, #8]
 801aca0:	f8db 2000 	ldr.w	r2, [fp]
 801aca4:	9203      	str	r2, [sp, #12]
 801aca6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801acaa:	9a01      	ldr	r2, [sp, #4]
 801acac:	2a00      	cmp	r2, #0
 801acae:	dc03      	bgt.n	801acb8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801acb0:	9a05      	ldr	r2, [sp, #20]
 801acb2:	2a00      	cmp	r2, #0
 801acb4:	f340 8162 	ble.w	801af7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801acb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801acba:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801acbe:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 801acc2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801acc6:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801acc8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801accc:	2b00      	cmp	r3, #0
 801acce:	dd0e      	ble.n	801acee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801acd0:	1402      	asrs	r2, r0, #16
 801acd2:	d405      	bmi.n	801ace0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acd4:	42ba      	cmp	r2, r7
 801acd6:	da03      	bge.n	801ace0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acd8:	140a      	asrs	r2, r1, #16
 801acda:	d401      	bmi.n	801ace0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801acdc:	42b2      	cmp	r2, r6
 801acde:	db07      	blt.n	801acf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801ace0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801ace2:	4410      	add	r0, r2
 801ace4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ace6:	3b01      	subs	r3, #1
 801ace8:	4411      	add	r1, r2
 801acea:	3402      	adds	r4, #2
 801acec:	e7ee      	b.n	801accc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801acee:	d017      	beq.n	801ad20 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 801acf0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801acf2:	1e5a      	subs	r2, r3, #1
 801acf4:	fb05 0502 	mla	r5, r5, r2, r0
 801acf8:	142d      	asrs	r5, r5, #16
 801acfa:	d409      	bmi.n	801ad10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801acfc:	42bd      	cmp	r5, r7
 801acfe:	da07      	bge.n	801ad10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ad00:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ad02:	fb05 1202 	mla	r2, r5, r2, r1
 801ad06:	1412      	asrs	r2, r2, #16
 801ad08:	d402      	bmi.n	801ad10 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801ad0a:	42b2      	cmp	r2, r6
 801ad0c:	f2c0 80c3 	blt.w	801ae96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 801ad10:	2500      	movs	r5, #0
 801ad12:	195a      	adds	r2, r3, r5
 801ad14:	2a00      	cmp	r2, #0
 801ad16:	dc3f      	bgt.n	801ad98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801ad18:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad1c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801ad20:	9b01      	ldr	r3, [sp, #4]
 801ad22:	2b00      	cmp	r3, #0
 801ad24:	f340 812a 	ble.w	801af7c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801ad28:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad2c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad30:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801ad34:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad36:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad3e:	eeb0 6a62 	vmov.f32	s12, s5
 801ad42:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad4e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801ad52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad56:	eeb0 6a43 	vmov.f32	s12, s6
 801ad5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad5e:	ee12 2a90 	vmov	r2, s5
 801ad62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad66:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad6a:	ee13 2a10 	vmov	r2, s6
 801ad6e:	9313      	str	r3, [sp, #76]	; 0x4c
 801ad70:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad72:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad76:	9314      	str	r3, [sp, #80]	; 0x50
 801ad78:	9b01      	ldr	r3, [sp, #4]
 801ad7a:	9a05      	ldr	r2, [sp, #20]
 801ad7c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801ad80:	3b01      	subs	r3, #1
 801ad82:	9301      	str	r3, [sp, #4]
 801ad84:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801ad88:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ad8a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad8e:	bf08      	it	eq
 801ad90:	4613      	moveq	r3, r2
 801ad92:	eef0 2a47 	vmov.f32	s5, s14
 801ad96:	e788      	b.n	801acaa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ad98:	1406      	asrs	r6, r0, #16
 801ad9a:	d42c      	bmi.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ad9c:	f8db 2008 	ldr.w	r2, [fp, #8]
 801ada0:	42b2      	cmp	r2, r6
 801ada2:	dd28      	ble.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ada4:	140f      	asrs	r7, r1, #16
 801ada6:	d426      	bmi.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ada8:	f8db 200c 	ldr.w	r2, [fp, #12]
 801adac:	42ba      	cmp	r2, r7
 801adae:	dd22      	ble.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801adb0:	9a02      	ldr	r2, [sp, #8]
 801adb2:	fb07 6602 	mla	r6, r7, r2, r6
 801adb6:	0872      	lsrs	r2, r6, #1
 801adb8:	9f03      	ldr	r7, [sp, #12]
 801adba:	5cba      	ldrb	r2, [r7, r2]
 801adbc:	07f6      	lsls	r6, r6, #31
 801adbe:	bf54      	ite	pl
 801adc0:	f002 020f 	andpl.w	r2, r2, #15
 801adc4:	1112      	asrmi	r2, r2, #4
 801adc6:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801adca:	b2d2      	uxtb	r2, r2
 801adcc:	2aff      	cmp	r2, #255	; 0xff
 801adce:	d118      	bne.n	801ae02 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 801add0:	f8d8 2000 	ldr.w	r2, [r8]
 801add4:	f06f 0601 	mvn.w	r6, #1
 801add8:	fb06 f705 	mul.w	r7, r6, r5
 801addc:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 801ade0:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 801ade4:	0956      	lsrs	r6, r2, #5
 801ade6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801adea:	ea4c 0606 	orr.w	r6, ip, r6
 801adee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801adf2:	4316      	orrs	r6, r2
 801adf4:	53e6      	strh	r6, [r4, r7]
 801adf6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801adf8:	4410      	add	r0, r2
 801adfa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801adfc:	3d01      	subs	r5, #1
 801adfe:	4411      	add	r1, r2
 801ae00:	e787      	b.n	801ad12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801ae02:	2a00      	cmp	r2, #0
 801ae04:	d0f7      	beq.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae06:	f06f 0601 	mvn.w	r6, #1
 801ae0a:	436e      	muls	r6, r5
 801ae0c:	f8d8 c000 	ldr.w	ip, [r8]
 801ae10:	f834 e006 	ldrh.w	lr, [r4, r6]
 801ae14:	9604      	str	r6, [sp, #16]
 801ae16:	fa1f f982 	uxth.w	r9, r2
 801ae1a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801ae1e:	f3cc 4607 	ubfx	r6, ip, #16, #8
 801ae22:	43d2      	mvns	r2, r2
 801ae24:	b2d2      	uxtb	r2, r2
 801ae26:	fb16 f609 	smulbb	r6, r6, r9
 801ae2a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801ae2e:	fb07 6702 	mla	r7, r7, r2, r6
 801ae32:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801ae36:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801ae3a:	fa5f fc8c 	uxtb.w	ip, ip
 801ae3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ae42:	fa5f fe8e 	uxtb.w	lr, lr
 801ae46:	fb1c fc09 	smulbb	ip, ip, r9
 801ae4a:	fb0e cc02 	mla	ip, lr, r2, ip
 801ae4e:	b2bf      	uxth	r7, r7
 801ae50:	fb1a fa09 	smulbb	sl, sl, r9
 801ae54:	fa1f fc8c 	uxth.w	ip, ip
 801ae58:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801ae5c:	fb06 a602 	mla	r6, r6, r2, sl
 801ae60:	1c7a      	adds	r2, r7, #1
 801ae62:	f10c 0a01 	add.w	sl, ip, #1
 801ae66:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801ae6a:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 801ae6e:	b2b6      	uxth	r6, r6
 801ae70:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801ae74:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801ae78:	ea4a 0707 	orr.w	r7, sl, r7
 801ae7c:	f106 0a01 	add.w	sl, r6, #1
 801ae80:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801ae84:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ae88:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ae8c:	9a04      	ldr	r2, [sp, #16]
 801ae8e:	ea47 070a 	orr.w	r7, r7, sl
 801ae92:	52a7      	strh	r7, [r4, r2]
 801ae94:	e7af      	b.n	801adf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ae96:	f04f 0e00 	mov.w	lr, #0
 801ae9a:	eba3 020e 	sub.w	r2, r3, lr
 801ae9e:	2a00      	cmp	r2, #0
 801aea0:	f77f af3a 	ble.w	801ad18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 801aea4:	9e02      	ldr	r6, [sp, #8]
 801aea6:	1402      	asrs	r2, r0, #16
 801aea8:	140d      	asrs	r5, r1, #16
 801aeaa:	fb06 2505 	mla	r5, r6, r5, r2
 801aeae:	086a      	lsrs	r2, r5, #1
 801aeb0:	9e03      	ldr	r6, [sp, #12]
 801aeb2:	5cb2      	ldrb	r2, [r6, r2]
 801aeb4:	07ed      	lsls	r5, r5, #31
 801aeb6:	bf54      	ite	pl
 801aeb8:	f002 020f 	andpl.w	r2, r2, #15
 801aebc:	1112      	asrmi	r2, r2, #4
 801aebe:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801aec2:	b2d2      	uxtb	r2, r2
 801aec4:	2aff      	cmp	r2, #255	; 0xff
 801aec6:	d115      	bne.n	801aef4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 801aec8:	f8d8 5000 	ldr.w	r5, [r8]
 801aecc:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 801aed0:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 801aed4:	096a      	lsrs	r2, r5, #5
 801aed6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801aeda:	4332      	orrs	r2, r6
 801aedc:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801aee0:	432a      	orrs	r2, r5
 801aee2:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 801aee6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801aee8:	4410      	add	r0, r2
 801aeea:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801aeec:	f10e 0e01 	add.w	lr, lr, #1
 801aef0:	4411      	add	r1, r2
 801aef2:	e7d2      	b.n	801ae9a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801aef4:	2a00      	cmp	r2, #0
 801aef6:	d0f6      	beq.n	801aee6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801aef8:	f8d8 7000 	ldr.w	r7, [r8]
 801aefc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801af00:	fa1f f982 	uxth.w	r9, r2
 801af04:	ea4f 262c 	mov.w	r6, ip, asr #8
 801af08:	f3c7 4507 	ubfx	r5, r7, #16, #8
 801af0c:	43d2      	mvns	r2, r2
 801af0e:	b2d2      	uxtb	r2, r2
 801af10:	fb15 f509 	smulbb	r5, r5, r9
 801af14:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801af18:	fb06 5602 	mla	r6, r6, r2, r5
 801af1c:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801af20:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801af24:	b2ff      	uxtb	r7, r7
 801af26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801af2a:	fa5f fc8c 	uxtb.w	ip, ip
 801af2e:	fb17 f709 	smulbb	r7, r7, r9
 801af32:	fb0c 7702 	mla	r7, ip, r2, r7
 801af36:	b2b6      	uxth	r6, r6
 801af38:	fb1a fa09 	smulbb	sl, sl, r9
 801af3c:	b2bf      	uxth	r7, r7
 801af3e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801af42:	fb05 a502 	mla	r5, r5, r2, sl
 801af46:	1c72      	adds	r2, r6, #1
 801af48:	f107 0a01 	add.w	sl, r7, #1
 801af4c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801af50:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801af54:	b2ad      	uxth	r5, r5
 801af56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801af5a:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801af5e:	ea4a 0606 	orr.w	r6, sl, r6
 801af62:	f105 0a01 	add.w	sl, r5, #1
 801af66:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801af6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af6e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af72:	ea46 060a 	orr.w	r6, r6, sl
 801af76:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801af7a:	e7b4      	b.n	801aee6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801af7c:	b007      	add	sp, #28
 801af7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801af82:	bf00      	nop
 801af84:	2000ef2c 	.word	0x2000ef2c

0801af88 <_ZN8touchgfx8LCD16bppD1Ev>:
 801af88:	4770      	bx	lr

0801af8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801af8a:	4770      	bx	lr

0801af8c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801af8c:	4770      	bx	lr

0801af8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801af8e:	4770      	bx	lr

0801af90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801af90:	4770      	bx	lr

0801af92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801af92:	4770      	bx	lr

0801af94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801af94:	4770      	bx	lr

0801af96 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801af96:	4770      	bx	lr

0801af98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801af98:	4770      	bx	lr

0801af9a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801af9a:	4770      	bx	lr

0801af9c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801af9c:	4770      	bx	lr

0801af9e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801af9e:	4770      	bx	lr

0801afa0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afa0:	4770      	bx	lr

0801afa2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801afa2:	4770      	bx	lr

0801afa4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801afa4:	4770      	bx	lr

0801afa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801afa6:	4770      	bx	lr

0801afa8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afa8:	4770      	bx	lr

0801afaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801afaa:	4770      	bx	lr

0801afac <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801afac:	4770      	bx	lr

0801afae <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801afae:	4770      	bx	lr

0801afb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801afb0:	4770      	bx	lr

0801afb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801afb2:	4770      	bx	lr

0801afb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801afb4:	4770      	bx	lr

0801afb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801afb6:	4770      	bx	lr

0801afb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afb8:	4770      	bx	lr

0801afba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801afba:	4770      	bx	lr

0801afbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afbc:	4770      	bx	lr

0801afbe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801afbe:	4770      	bx	lr

0801afc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801afc0:	4770      	bx	lr

0801afc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801afc2:	4770      	bx	lr

0801afc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801afc4:	4770      	bx	lr

0801afc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801afc6:	4770      	bx	lr

0801afc8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801afc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801afcc:	b088      	sub	sp, #32
 801afce:	ac08      	add	r4, sp, #32
 801afd0:	4606      	mov	r6, r0
 801afd2:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801afd6:	4620      	mov	r0, r4
 801afd8:	4688      	mov	r8, r1
 801afda:	4691      	mov	r9, r2
 801afdc:	f7fd fc62 	bl	80188a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801afe0:	6833      	ldr	r3, [r6, #0]
 801afe2:	4605      	mov	r5, r0
 801afe4:	4620      	mov	r0, r4
 801afe6:	699f      	ldr	r7, [r3, #24]
 801afe8:	f7fd fb70 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801afec:	4682      	mov	sl, r0
 801afee:	4620      	mov	r0, r4
 801aff0:	f7fd fba0 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801aff4:	9500      	str	r5, [sp, #0]
 801aff6:	e9cd a001 	strd	sl, r0, [sp, #4]
 801affa:	464b      	mov	r3, r9
 801affc:	a806      	add	r0, sp, #24
 801affe:	4642      	mov	r2, r8
 801b000:	4631      	mov	r1, r6
 801b002:	47b8      	blx	r7
 801b004:	4628      	mov	r0, r5
 801b006:	b008      	add	sp, #32
 801b008:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801b00c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801b00c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801b010:	2300      	movs	r3, #0
 801b012:	9300      	str	r3, [sp, #0]
 801b014:	4b3d      	ldr	r3, [pc, #244]	; (801b10c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801b016:	781b      	ldrb	r3, [r3, #0]
 801b018:	2b00      	cmp	r3, #0
 801b01a:	d137      	bne.n	801b08c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801b01c:	4a3c      	ldr	r2, [pc, #240]	; (801b110 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b01e:	f9b2 2000 	ldrsh.w	r2, [r2]
 801b022:	f8ad 2004 	strh.w	r2, [sp, #4]
 801b026:	2b00      	cmp	r3, #0
 801b028:	d132      	bne.n	801b090 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801b02a:	4b3a      	ldr	r3, [pc, #232]	; (801b114 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b02c:	f9b3 3000 	ldrsh.w	r3, [r3]
 801b030:	6808      	ldr	r0, [r1, #0]
 801b032:	6849      	ldr	r1, [r1, #4]
 801b034:	f8ad 3006 	strh.w	r3, [sp, #6]
 801b038:	ac02      	add	r4, sp, #8
 801b03a:	ab02      	add	r3, sp, #8
 801b03c:	c303      	stmia	r3!, {r0, r1}
 801b03e:	4669      	mov	r1, sp
 801b040:	4620      	mov	r0, r4
 801b042:	f7f9 fdc1 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b046:	4668      	mov	r0, sp
 801b048:	f7f9 fd7a 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b04c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801b050:	f8bd 2000 	ldrh.w	r2, [sp]
 801b054:	4d30      	ldr	r5, [pc, #192]	; (801b118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801b056:	4413      	add	r3, r2
 801b058:	f8ad 3008 	strh.w	r3, [sp, #8]
 801b05c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801b060:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801b064:	6828      	ldr	r0, [r5, #0]
 801b066:	4413      	add	r3, r2
 801b068:	f8ad 300a 	strh.w	r3, [sp, #10]
 801b06c:	6803      	ldr	r3, [r0, #0]
 801b06e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b070:	4798      	blx	r3
 801b072:	f010 0f01 	tst.w	r0, #1
 801b076:	462f      	mov	r7, r5
 801b078:	d00c      	beq.n	801b094 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801b07a:	6828      	ldr	r0, [r5, #0]
 801b07c:	6803      	ldr	r3, [r0, #0]
 801b07e:	e894 0006 	ldmia.w	r4, {r1, r2}
 801b082:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801b084:	4798      	blx	r3
 801b086:	b004      	add	sp, #16
 801b088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801b08c:	4a21      	ldr	r2, [pc, #132]	; (801b114 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801b08e:	e7c6      	b.n	801b01e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801b090:	4b1f      	ldr	r3, [pc, #124]	; (801b110 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b092:	e7cb      	b.n	801b02c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801b094:	6838      	ldr	r0, [r7, #0]
 801b096:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801b09a:	6803      	ldr	r3, [r0, #0]
 801b09c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801b0a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b0a2:	4798      	blx	r3
 801b0a4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801b0a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801b0ac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801b0b0:	fb16 3602 	smlabb	r6, r6, r2, r3
 801b0b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801b0b8:	6838      	ldr	r0, [r7, #0]
 801b0ba:	6803      	ldr	r3, [r0, #0]
 801b0bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b0be:	4798      	blx	r3
 801b0c0:	4a13      	ldr	r2, [pc, #76]	; (801b110 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801b0c2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801b0c6:	8813      	ldrh	r3, [r2, #0]
 801b0c8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801b0cc:	fb03 1404 	mla	r4, r3, r4, r1
 801b0d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b0d4:	435d      	muls	r5, r3
 801b0d6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b0da:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801b0de:	4691      	mov	r9, r2
 801b0e0:	6838      	ldr	r0, [r7, #0]
 801b0e2:	42ac      	cmp	r4, r5
 801b0e4:	6803      	ldr	r3, [r0, #0]
 801b0e6:	d20e      	bcs.n	801b106 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801b0e8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801b0ec:	4632      	mov	r2, r6
 801b0ee:	4643      	mov	r3, r8
 801b0f0:	4621      	mov	r1, r4
 801b0f2:	47d0      	blx	sl
 801b0f4:	f8b9 3000 	ldrh.w	r3, [r9]
 801b0f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b0fc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801b100:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b104:	e7ec      	b.n	801b0e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801b106:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b108:	4798      	blx	r3
 801b10a:	e7bc      	b.n	801b086 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801b10c:	2000ef14 	.word	0x2000ef14
 801b110:	2000ef16 	.word	0x2000ef16
 801b114:	2000ef18 	.word	0x2000ef18
 801b118:	2000ef1c 	.word	0x2000ef1c

0801b11c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801b11c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b120:	b08b      	sub	sp, #44	; 0x2c
 801b122:	460f      	mov	r7, r1
 801b124:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 801b128:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801b12c:	4616      	mov	r6, r2
 801b12e:	f1bb 0f00 	cmp.w	fp, #0
 801b132:	d04a      	beq.n	801b1ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b134:	6810      	ldr	r0, [r2, #0]
 801b136:	6851      	ldr	r1, [r2, #4]
 801b138:	ad06      	add	r5, sp, #24
 801b13a:	c503      	stmia	r5!, {r0, r1}
 801b13c:	6818      	ldr	r0, [r3, #0]
 801b13e:	6859      	ldr	r1, [r3, #4]
 801b140:	ad08      	add	r5, sp, #32
 801b142:	c503      	stmia	r5!, {r0, r1}
 801b144:	a806      	add	r0, sp, #24
 801b146:	f7f9 fcfb 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b14a:	4631      	mov	r1, r6
 801b14c:	a808      	add	r0, sp, #32
 801b14e:	f7f9 fd3b 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b152:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801b156:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801b15a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801b15e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 801b162:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 801b166:	fb16 2103 	smlabb	r1, r6, r3, r2
 801b16a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801b16e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801b172:	4f5f      	ldr	r7, [pc, #380]	; (801b2f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b174:	440a      	add	r2, r1
 801b176:	f8ad 2020 	strh.w	r2, [sp, #32]
 801b17a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801b17e:	6838      	ldr	r0, [r7, #0]
 801b180:	4413      	add	r3, r2
 801b182:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801b186:	6803      	ldr	r3, [r0, #0]
 801b188:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b18a:	4798      	blx	r3
 801b18c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b190:	46b9      	mov	r9, r7
 801b192:	d11d      	bne.n	801b1d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801b194:	b9fc      	cbnz	r4, 801b1d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b196:	f010 0f01 	tst.w	r0, #1
 801b19a:	d01c      	beq.n	801b1d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801b19c:	f8d9 0000 	ldr.w	r0, [r9]
 801b1a0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801b1a4:	6801      	ldr	r1, [r0, #0]
 801b1a6:	f8cd b00c 	str.w	fp, [sp, #12]
 801b1aa:	2700      	movs	r7, #0
 801b1ac:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801b1b0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801b1b4:	9402      	str	r4, [sp, #8]
 801b1b6:	b2ad      	uxth	r5, r5
 801b1b8:	fa1f f488 	uxth.w	r4, r8
 801b1bc:	9501      	str	r5, [sp, #4]
 801b1be:	9400      	str	r4, [sp, #0]
 801b1c0:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 801b1c2:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801b1c6:	4631      	mov	r1, r6
 801b1c8:	47a0      	blx	r4
 801b1ca:	b00b      	add	sp, #44	; 0x2c
 801b1cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b1d0:	f010 0f04 	tst.w	r0, #4
 801b1d4:	e7e1      	b.n	801b19a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801b1d6:	f8d9 0000 	ldr.w	r0, [r9]
 801b1da:	6803      	ldr	r3, [r0, #0]
 801b1dc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b1de:	4798      	blx	r3
 801b1e0:	4b44      	ldr	r3, [pc, #272]	; (801b2f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801b1e2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 801b1e6:	881a      	ldrh	r2, [r3, #0]
 801b1e8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801b1ec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801b1f0:	fb02 1404 	mla	r4, r2, r4, r1
 801b1f4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b1f8:	469a      	mov	sl, r3
 801b1fa:	fb05 f502 	mul.w	r5, r5, r2
 801b1fe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801b202:	d059      	beq.n	801b2b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801b204:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 801b208:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b20c:	fa1f f28b 	uxth.w	r2, fp
 801b210:	fa1f f989 	uxth.w	r9, r9
 801b214:	469e      	mov	lr, r3
 801b216:	42ac      	cmp	r4, r5
 801b218:	d264      	bcs.n	801b2e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b21a:	eb04 0a07 	add.w	sl, r4, r7
 801b21e:	4554      	cmp	r4, sl
 801b220:	d23d      	bcs.n	801b29e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801b222:	8821      	ldrh	r1, [r4, #0]
 801b224:	f836 3b02 	ldrh.w	r3, [r6], #2
 801b228:	1208      	asrs	r0, r1, #8
 801b22a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801b22e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801b232:	fb10 f009 	smulbb	r0, r0, r9
 801b236:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801b23a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801b23e:	00c9      	lsls	r1, r1, #3
 801b240:	fb0c 0c02 	mla	ip, ip, r2, r0
 801b244:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b248:	10d8      	asrs	r0, r3, #3
 801b24a:	b2c9      	uxtb	r1, r1
 801b24c:	00db      	lsls	r3, r3, #3
 801b24e:	fa1f fc8c 	uxth.w	ip, ip
 801b252:	fb1b fb09 	smulbb	fp, fp, r9
 801b256:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b25a:	b2db      	uxtb	r3, r3
 801b25c:	fb11 f109 	smulbb	r1, r1, r9
 801b260:	fb00 b002 	mla	r0, r0, r2, fp
 801b264:	fb03 1302 	mla	r3, r3, r2, r1
 801b268:	f10c 0b01 	add.w	fp, ip, #1
 801b26c:	b29b      	uxth	r3, r3
 801b26e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801b272:	b280      	uxth	r0, r0
 801b274:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 801b278:	f103 0c01 	add.w	ip, r3, #1
 801b27c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801b280:	1c43      	adds	r3, r0, #1
 801b282:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b286:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b28a:	0940      	lsrs	r0, r0, #5
 801b28c:	ea4c 0c0b 	orr.w	ip, ip, fp
 801b290:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801b294:	ea4c 0c00 	orr.w	ip, ip, r0
 801b298:	f824 cb02 	strh.w	ip, [r4], #2
 801b29c:	e7bf      	b.n	801b21e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801b29e:	f8be 3000 	ldrh.w	r3, [lr]
 801b2a2:	eba3 0308 	sub.w	r3, r3, r8
 801b2a6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2aa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b2ae:	eba3 0308 	sub.w	r3, r3, r8
 801b2b2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2b6:	e7ae      	b.n	801b216 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801b2b8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801b2bc:	f8d9 0000 	ldr.w	r0, [r9]
 801b2c0:	42ac      	cmp	r4, r5
 801b2c2:	6803      	ldr	r3, [r0, #0]
 801b2c4:	d20e      	bcs.n	801b2e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801b2c6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 801b2ca:	4632      	mov	r2, r6
 801b2cc:	463b      	mov	r3, r7
 801b2ce:	4621      	mov	r1, r4
 801b2d0:	47c0      	blx	r8
 801b2d2:	f8ba 3000 	ldrh.w	r3, [sl]
 801b2d6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b2da:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801b2de:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801b2e2:	e7eb      	b.n	801b2bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801b2e4:	4b02      	ldr	r3, [pc, #8]	; (801b2f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801b2e6:	6818      	ldr	r0, [r3, #0]
 801b2e8:	6803      	ldr	r3, [r0, #0]
 801b2ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b2ec:	4798      	blx	r3
 801b2ee:	e76c      	b.n	801b1ca <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801b2f0:	2000ef1c 	.word	0x2000ef1c
 801b2f4:	2000ef16 	.word	0x2000ef16

0801b2f8 <_ZN8touchgfx8LCD16bppD0Ev>:
 801b2f8:	b510      	push	{r4, lr}
 801b2fa:	2184      	movs	r1, #132	; 0x84
 801b2fc:	4604      	mov	r4, r0
 801b2fe:	f00b f967 	bl	80265d0 <_ZdlPvj>
 801b302:	4620      	mov	r0, r4
 801b304:	bd10      	pop	{r4, pc}

0801b306 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801b306:	b510      	push	{r4, lr}
 801b308:	2104      	movs	r1, #4
 801b30a:	4604      	mov	r4, r0
 801b30c:	f00b f960 	bl	80265d0 <_ZdlPvj>
 801b310:	4620      	mov	r0, r4
 801b312:	bd10      	pop	{r4, pc}

0801b314 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801b314:	b510      	push	{r4, lr}
 801b316:	2104      	movs	r1, #4
 801b318:	4604      	mov	r4, r0
 801b31a:	f00b f959 	bl	80265d0 <_ZdlPvj>
 801b31e:	4620      	mov	r0, r4
 801b320:	bd10      	pop	{r4, pc}

0801b322 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801b322:	b510      	push	{r4, lr}
 801b324:	f640 0144 	movw	r1, #2116	; 0x844
 801b328:	4604      	mov	r4, r0
 801b32a:	f00b f951 	bl	80265d0 <_ZdlPvj>
 801b32e:	4620      	mov	r0, r4
 801b330:	bd10      	pop	{r4, pc}

0801b332 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b332:	b510      	push	{r4, lr}
 801b334:	2104      	movs	r1, #4
 801b336:	4604      	mov	r4, r0
 801b338:	f00b f94a 	bl	80265d0 <_ZdlPvj>
 801b33c:	4620      	mov	r0, r4
 801b33e:	bd10      	pop	{r4, pc}

0801b340 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b340:	b510      	push	{r4, lr}
 801b342:	2104      	movs	r1, #4
 801b344:	4604      	mov	r4, r0
 801b346:	f00b f943 	bl	80265d0 <_ZdlPvj>
 801b34a:	4620      	mov	r0, r4
 801b34c:	bd10      	pop	{r4, pc}

0801b34e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b34e:	b510      	push	{r4, lr}
 801b350:	2104      	movs	r1, #4
 801b352:	4604      	mov	r4, r0
 801b354:	f00b f93c 	bl	80265d0 <_ZdlPvj>
 801b358:	4620      	mov	r0, r4
 801b35a:	bd10      	pop	{r4, pc}

0801b35c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b35c:	b510      	push	{r4, lr}
 801b35e:	2104      	movs	r1, #4
 801b360:	4604      	mov	r4, r0
 801b362:	f00b f935 	bl	80265d0 <_ZdlPvj>
 801b366:	4620      	mov	r0, r4
 801b368:	bd10      	pop	{r4, pc}

0801b36a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b36a:	b510      	push	{r4, lr}
 801b36c:	2104      	movs	r1, #4
 801b36e:	4604      	mov	r4, r0
 801b370:	f00b f92e 	bl	80265d0 <_ZdlPvj>
 801b374:	4620      	mov	r0, r4
 801b376:	bd10      	pop	{r4, pc}

0801b378 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801b378:	b510      	push	{r4, lr}
 801b37a:	2104      	movs	r1, #4
 801b37c:	4604      	mov	r4, r0
 801b37e:	f00b f927 	bl	80265d0 <_ZdlPvj>
 801b382:	4620      	mov	r0, r4
 801b384:	bd10      	pop	{r4, pc}

0801b386 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b386:	b510      	push	{r4, lr}
 801b388:	2104      	movs	r1, #4
 801b38a:	4604      	mov	r4, r0
 801b38c:	f00b f920 	bl	80265d0 <_ZdlPvj>
 801b390:	4620      	mov	r0, r4
 801b392:	bd10      	pop	{r4, pc}

0801b394 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801b394:	b510      	push	{r4, lr}
 801b396:	2104      	movs	r1, #4
 801b398:	4604      	mov	r4, r0
 801b39a:	f00b f919 	bl	80265d0 <_ZdlPvj>
 801b39e:	4620      	mov	r0, r4
 801b3a0:	bd10      	pop	{r4, pc}

0801b3a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b3a2:	b510      	push	{r4, lr}
 801b3a4:	2104      	movs	r1, #4
 801b3a6:	4604      	mov	r4, r0
 801b3a8:	f00b f912 	bl	80265d0 <_ZdlPvj>
 801b3ac:	4620      	mov	r0, r4
 801b3ae:	bd10      	pop	{r4, pc}

0801b3b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b3b0:	b510      	push	{r4, lr}
 801b3b2:	2104      	movs	r1, #4
 801b3b4:	4604      	mov	r4, r0
 801b3b6:	f00b f90b 	bl	80265d0 <_ZdlPvj>
 801b3ba:	4620      	mov	r0, r4
 801b3bc:	bd10      	pop	{r4, pc}

0801b3be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b3be:	b510      	push	{r4, lr}
 801b3c0:	2104      	movs	r1, #4
 801b3c2:	4604      	mov	r4, r0
 801b3c4:	f00b f904 	bl	80265d0 <_ZdlPvj>
 801b3c8:	4620      	mov	r0, r4
 801b3ca:	bd10      	pop	{r4, pc}

0801b3cc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b3cc:	b510      	push	{r4, lr}
 801b3ce:	2104      	movs	r1, #4
 801b3d0:	4604      	mov	r4, r0
 801b3d2:	f00b f8fd 	bl	80265d0 <_ZdlPvj>
 801b3d6:	4620      	mov	r0, r4
 801b3d8:	bd10      	pop	{r4, pc}

0801b3da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801b3da:	b510      	push	{r4, lr}
 801b3dc:	2104      	movs	r1, #4
 801b3de:	4604      	mov	r4, r0
 801b3e0:	f00b f8f6 	bl	80265d0 <_ZdlPvj>
 801b3e4:	4620      	mov	r0, r4
 801b3e6:	bd10      	pop	{r4, pc}

0801b3e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801b3e8:	b510      	push	{r4, lr}
 801b3ea:	2104      	movs	r1, #4
 801b3ec:	4604      	mov	r4, r0
 801b3ee:	f00b f8ef 	bl	80265d0 <_ZdlPvj>
 801b3f2:	4620      	mov	r0, r4
 801b3f4:	bd10      	pop	{r4, pc}

0801b3f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b3f6:	b510      	push	{r4, lr}
 801b3f8:	2104      	movs	r1, #4
 801b3fa:	4604      	mov	r4, r0
 801b3fc:	f00b f8e8 	bl	80265d0 <_ZdlPvj>
 801b400:	4620      	mov	r0, r4
 801b402:	bd10      	pop	{r4, pc}

0801b404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b404:	b510      	push	{r4, lr}
 801b406:	2104      	movs	r1, #4
 801b408:	4604      	mov	r4, r0
 801b40a:	f00b f8e1 	bl	80265d0 <_ZdlPvj>
 801b40e:	4620      	mov	r0, r4
 801b410:	bd10      	pop	{r4, pc}

0801b412 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801b412:	b510      	push	{r4, lr}
 801b414:	2104      	movs	r1, #4
 801b416:	4604      	mov	r4, r0
 801b418:	f00b f8da 	bl	80265d0 <_ZdlPvj>
 801b41c:	4620      	mov	r0, r4
 801b41e:	bd10      	pop	{r4, pc}

0801b420 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801b420:	b510      	push	{r4, lr}
 801b422:	2104      	movs	r1, #4
 801b424:	4604      	mov	r4, r0
 801b426:	f00b f8d3 	bl	80265d0 <_ZdlPvj>
 801b42a:	4620      	mov	r0, r4
 801b42c:	bd10      	pop	{r4, pc}

0801b42e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b42e:	b510      	push	{r4, lr}
 801b430:	2104      	movs	r1, #4
 801b432:	4604      	mov	r4, r0
 801b434:	f00b f8cc 	bl	80265d0 <_ZdlPvj>
 801b438:	4620      	mov	r0, r4
 801b43a:	bd10      	pop	{r4, pc}

0801b43c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b43c:	b510      	push	{r4, lr}
 801b43e:	2104      	movs	r1, #4
 801b440:	4604      	mov	r4, r0
 801b442:	f00b f8c5 	bl	80265d0 <_ZdlPvj>
 801b446:	4620      	mov	r0, r4
 801b448:	bd10      	pop	{r4, pc}

0801b44a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801b44a:	b510      	push	{r4, lr}
 801b44c:	2104      	movs	r1, #4
 801b44e:	4604      	mov	r4, r0
 801b450:	f00b f8be 	bl	80265d0 <_ZdlPvj>
 801b454:	4620      	mov	r0, r4
 801b456:	bd10      	pop	{r4, pc}

0801b458 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801b458:	b510      	push	{r4, lr}
 801b45a:	2104      	movs	r1, #4
 801b45c:	4604      	mov	r4, r0
 801b45e:	f00b f8b7 	bl	80265d0 <_ZdlPvj>
 801b462:	4620      	mov	r0, r4
 801b464:	bd10      	pop	{r4, pc}

0801b466 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801b466:	b510      	push	{r4, lr}
 801b468:	2104      	movs	r1, #4
 801b46a:	4604      	mov	r4, r0
 801b46c:	f00b f8b0 	bl	80265d0 <_ZdlPvj>
 801b470:	4620      	mov	r0, r4
 801b472:	bd10      	pop	{r4, pc}

0801b474 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801b474:	b510      	push	{r4, lr}
 801b476:	2104      	movs	r1, #4
 801b478:	4604      	mov	r4, r0
 801b47a:	f00b f8a9 	bl	80265d0 <_ZdlPvj>
 801b47e:	4620      	mov	r0, r4
 801b480:	bd10      	pop	{r4, pc}

0801b482 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801b482:	b510      	push	{r4, lr}
 801b484:	2104      	movs	r1, #4
 801b486:	4604      	mov	r4, r0
 801b488:	f00b f8a2 	bl	80265d0 <_ZdlPvj>
 801b48c:	4620      	mov	r0, r4
 801b48e:	bd10      	pop	{r4, pc}

0801b490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801b490:	b510      	push	{r4, lr}
 801b492:	2104      	movs	r1, #4
 801b494:	4604      	mov	r4, r0
 801b496:	f00b f89b 	bl	80265d0 <_ZdlPvj>
 801b49a:	4620      	mov	r0, r4
 801b49c:	bd10      	pop	{r4, pc}

0801b49e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801b49e:	b510      	push	{r4, lr}
 801b4a0:	2104      	movs	r1, #4
 801b4a2:	4604      	mov	r4, r0
 801b4a4:	f00b f894 	bl	80265d0 <_ZdlPvj>
 801b4a8:	4620      	mov	r0, r4
 801b4aa:	bd10      	pop	{r4, pc}

0801b4ac <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801b4ac:	b510      	push	{r4, lr}
 801b4ae:	2104      	movs	r1, #4
 801b4b0:	4604      	mov	r4, r0
 801b4b2:	f00b f88d 	bl	80265d0 <_ZdlPvj>
 801b4b6:	4620      	mov	r0, r4
 801b4b8:	bd10      	pop	{r4, pc}
	...

0801b4bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b4bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4c0:	b08f      	sub	sp, #60	; 0x3c
 801b4c2:	461c      	mov	r4, r3
 801b4c4:	9205      	str	r2, [sp, #20]
 801b4c6:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801b4ca:	9100      	str	r1, [sp, #0]
 801b4cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b4ce:	9201      	str	r2, [sp, #4]
 801b4d0:	2a00      	cmp	r2, #0
 801b4d2:	f000 8115 	beq.w	801b700 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801b4d6:	6820      	ldr	r0, [r4, #0]
 801b4d8:	6861      	ldr	r1, [r4, #4]
 801b4da:	aa0a      	add	r2, sp, #40	; 0x28
 801b4dc:	c203      	stmia	r2!, {r0, r1}
 801b4de:	6818      	ldr	r0, [r3, #0]
 801b4e0:	6859      	ldr	r1, [r3, #4]
 801b4e2:	aa0c      	add	r2, sp, #48	; 0x30
 801b4e4:	c203      	stmia	r2!, {r0, r1}
 801b4e6:	a80a      	add	r0, sp, #40	; 0x28
 801b4e8:	f7f9 fb2a 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b4ec:	4621      	mov	r1, r4
 801b4ee:	a80c      	add	r0, sp, #48	; 0x30
 801b4f0:	f7f9 fb6a 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b4f4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801b4f8:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801b4fc:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801b500:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801b504:	bfde      	ittt	le
 801b506:	b2b3      	uxthle	r3, r6
 801b508:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801b50c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b510:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b514:	bfc8      	it	gt
 801b516:	2301      	movgt	r3, #1
 801b518:	fb92 f1f3 	sdiv	r1, r2, r3
 801b51c:	fa1f fc81 	uxth.w	ip, r1
 801b520:	fb0c 2413 	mls	r4, ip, r3, r2
 801b524:	fb14 f406 	smulbb	r4, r4, r6
 801b528:	441d      	add	r5, r3
 801b52a:	4404      	add	r4, r0
 801b52c:	4661      	mov	r1, ip
 801b52e:	3d01      	subs	r5, #1
 801b530:	b2a4      	uxth	r4, r4
 801b532:	fb95 f5f3 	sdiv	r5, r5, r3
 801b536:	b131      	cbz	r1, 801b546 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801b538:	9b05      	ldr	r3, [sp, #20]
 801b53a:	9900      	ldr	r1, [sp, #0]
 801b53c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b540:	ba1b      	rev	r3, r3
 801b542:	4419      	add	r1, r3
 801b544:	9100      	str	r1, [sp, #0]
 801b546:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801b54a:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	; 0x34
 801b54e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801b552:	4418      	add	r0, r3
 801b554:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801b558:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801b55c:	441a      	add	r2, r3
 801b55e:	4b6a      	ldr	r3, [pc, #424]	; (801b708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b560:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801b564:	6818      	ldr	r0, [r3, #0]
 801b566:	6803      	ldr	r3, [r0, #0]
 801b568:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b56a:	4798      	blx	r3
 801b56c:	4967      	ldr	r1, [pc, #412]	; (801b70c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801b56e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801b572:	880b      	ldrh	r3, [r1, #0]
 801b574:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801b578:	9109      	str	r1, [sp, #36]	; 0x24
 801b57a:	fb03 c202 	mla	r2, r3, r2, ip
 801b57e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b582:	4373      	muls	r3, r6
 801b584:	b2ad      	uxth	r5, r5
 801b586:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b58a:	00ad      	lsls	r5, r5, #2
 801b58c:	9306      	str	r3, [sp, #24]
 801b58e:	1d2b      	adds	r3, r5, #4
 801b590:	9307      	str	r3, [sp, #28]
 801b592:	9b01      	ldr	r3, [sp, #4]
 801b594:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b598:	9103      	str	r1, [sp, #12]
 801b59a:	f1c3 02ff 	rsb	r2, r3, #255	; 0xff
 801b59e:	2c00      	cmp	r4, #0
 801b5a0:	bf0c      	ite	eq
 801b5a2:	46c6      	moveq	lr, r8
 801b5a4:	f04f 0e00 	movne.w	lr, #0
 801b5a8:	2300      	movs	r3, #0
 801b5aa:	b292      	uxth	r2, r2
 801b5ac:	fa1f fe8e 	uxth.w	lr, lr
 801b5b0:	9302      	str	r3, [sp, #8]
 801b5b2:	9204      	str	r2, [sp, #16]
 801b5b4:	9a06      	ldr	r2, [sp, #24]
 801b5b6:	4282      	cmp	r2, r0
 801b5b8:	f240 809d 	bls.w	801b6f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801b5bc:	b963      	cbnz	r3, 801b5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b5be:	9b00      	ldr	r3, [sp, #0]
 801b5c0:	781a      	ldrb	r2, [r3, #0]
 801b5c2:	0993      	lsrs	r3, r2, #6
 801b5c4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801b5c8:	9202      	str	r2, [sp, #8]
 801b5ca:	1e5a      	subs	r2, r3, #1
 801b5cc:	2a02      	cmp	r2, #2
 801b5ce:	d815      	bhi.n	801b5fc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801b5d0:	9a00      	ldr	r2, [sp, #0]
 801b5d2:	3201      	adds	r2, #1
 801b5d4:	9200      	str	r2, [sp, #0]
 801b5d6:	b29b      	uxth	r3, r3
 801b5d8:	b1b4      	cbz	r4, 801b608 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801b5da:	429c      	cmp	r4, r3
 801b5dc:	bf95      	itete	ls
 801b5de:	1b1c      	subls	r4, r3, r4
 801b5e0:	1ae4      	subhi	r4, r4, r3
 801b5e2:	fa1f fa84 	uxthls.w	sl, r4
 801b5e6:	b2a4      	uxthhi	r4, r4
 801b5e8:	bf87      	ittee	hi
 801b5ea:	4671      	movhi	r1, lr
 801b5ec:	f04f 0a00 	movhi.w	sl, #0
 801b5f0:	fa1f f188 	uxthls.w	r1, r8
 801b5f4:	2400      	movls	r4, #0
 801b5f6:	4653      	mov	r3, sl
 801b5f8:	468e      	mov	lr, r1
 801b5fa:	e7db      	b.n	801b5b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801b5fc:	9a00      	ldr	r2, [sp, #0]
 801b5fe:	9b00      	ldr	r3, [sp, #0]
 801b600:	3202      	adds	r2, #2
 801b602:	785b      	ldrb	r3, [r3, #1]
 801b604:	9200      	str	r2, [sp, #0]
 801b606:	e7e7      	b.n	801b5d8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801b608:	2202      	movs	r2, #2
 801b60a:	4615      	mov	r5, r2
 801b60c:	9907      	ldr	r1, [sp, #28]
 801b60e:	9a02      	ldr	r2, [sp, #8]
 801b610:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b614:	9905      	ldr	r1, [sp, #20]
 801b616:	4573      	cmp	r3, lr
 801b618:	f831 c002 	ldrh.w	ip, [r1, r2]
 801b61c:	9a01      	ldr	r2, [sp, #4]
 801b61e:	bf2b      	itete	cs
 801b620:	eba3 0a0e 	subcs.w	sl, r3, lr
 801b624:	ebae 0103 	subcc.w	r1, lr, r3
 801b628:	46f1      	movcs	r9, lr
 801b62a:	4699      	movcc	r9, r3
 801b62c:	bf27      	ittee	cs
 801b62e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b632:	4621      	movcs	r1, r4
 801b634:	b289      	uxthcc	r1, r1
 801b636:	46a2      	movcc	sl, r4
 801b638:	2aff      	cmp	r2, #255	; 0xff
 801b63a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801b63e:	d105      	bne.n	801b64c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b640:	4481      	add	r9, r0
 801b642:	4581      	cmp	r9, r0
 801b644:	d045      	beq.n	801b6d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b646:	f820 cb02 	strh.w	ip, [r0], #2
 801b64a:	e7fa      	b.n	801b642 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801b64c:	9d03      	ldr	r5, [sp, #12]
 801b64e:	ea4f 222c 	mov.w	r2, ip, asr #8
 801b652:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801b656:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b65a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b65e:	436a      	muls	r2, r5
 801b660:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801b664:	fa5f fc8c 	uxtb.w	ip, ip
 801b668:	9208      	str	r2, [sp, #32]
 801b66a:	fb0b fb05 	mul.w	fp, fp, r5
 801b66e:	fb0c fc05 	mul.w	ip, ip, r5
 801b672:	4481      	add	r9, r0
 801b674:	4581      	cmp	r9, r0
 801b676:	d02c      	beq.n	801b6d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801b678:	8802      	ldrh	r2, [r0, #0]
 801b67a:	9d04      	ldr	r5, [sp, #16]
 801b67c:	9f04      	ldr	r7, [sp, #16]
 801b67e:	1216      	asrs	r6, r2, #8
 801b680:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b684:	fb16 f605 	smulbb	r6, r6, r5
 801b688:	9d08      	ldr	r5, [sp, #32]
 801b68a:	442e      	add	r6, r5
 801b68c:	10d5      	asrs	r5, r2, #3
 801b68e:	00d2      	lsls	r2, r2, #3
 801b690:	b2d2      	uxtb	r2, r2
 801b692:	fb12 f207 	smulbb	r2, r2, r7
 801b696:	b2b6      	uxth	r6, r6
 801b698:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801b69c:	4462      	add	r2, ip
 801b69e:	fb15 f507 	smulbb	r5, r5, r7
 801b6a2:	b292      	uxth	r2, r2
 801b6a4:	1c77      	adds	r7, r6, #1
 801b6a6:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801b6aa:	1c57      	adds	r7, r2, #1
 801b6ac:	445d      	add	r5, fp
 801b6ae:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801b6b2:	b2ad      	uxth	r5, r5
 801b6b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b6b8:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801b6bc:	4316      	orrs	r6, r2
 801b6be:	1c6a      	adds	r2, r5, #1
 801b6c0:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b6c4:	096d      	lsrs	r5, r5, #5
 801b6c6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801b6ca:	432e      	orrs	r6, r5
 801b6cc:	f820 6b02 	strh.w	r6, [r0], #2
 801b6d0:	e7d0      	b.n	801b674 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801b6d2:	4573      	cmp	r3, lr
 801b6d4:	d38f      	bcc.n	801b5f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6d6:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801b6da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b6dc:	fa1f f188 	uxth.w	r1, r8
 801b6e0:	1a64      	subs	r4, r4, r1
 801b6e2:	881b      	ldrh	r3, [r3, #0]
 801b6e4:	b2a4      	uxth	r4, r4
 801b6e6:	2c00      	cmp	r4, #0
 801b6e8:	eba3 0308 	sub.w	r3, r3, r8
 801b6ec:	bf18      	it	ne
 801b6ee:	2100      	movne	r1, #0
 801b6f0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b6f4:	e77f      	b.n	801b5f6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801b6f6:	4b04      	ldr	r3, [pc, #16]	; (801b708 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801b6f8:	6818      	ldr	r0, [r3, #0]
 801b6fa:	6803      	ldr	r3, [r0, #0]
 801b6fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b6fe:	4798      	blx	r3
 801b700:	b00f      	add	sp, #60	; 0x3c
 801b702:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b706:	bf00      	nop
 801b708:	2000ef1c 	.word	0x2000ef1c
 801b70c:	2000ef16 	.word	0x2000ef16

0801b710 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801b710:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b714:	b09f      	sub	sp, #124	; 0x7c
 801b716:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801b71a:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801b71e:	9209      	str	r2, [sp, #36]	; 0x24
 801b720:	461d      	mov	r5, r3
 801b722:	4604      	mov	r4, r0
 801b724:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b726:	2a00      	cmp	r2, #0
 801b728:	f000 81eb 	beq.w	801bb02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801b72c:	6828      	ldr	r0, [r5, #0]
 801b72e:	6869      	ldr	r1, [r5, #4]
 801b730:	aa1a      	add	r2, sp, #104	; 0x68
 801b732:	c203      	stmia	r2!, {r0, r1}
 801b734:	6818      	ldr	r0, [r3, #0]
 801b736:	6859      	ldr	r1, [r3, #4]
 801b738:	aa1c      	add	r2, sp, #112	; 0x70
 801b73a:	c203      	stmia	r2!, {r0, r1}
 801b73c:	a81a      	add	r0, sp, #104	; 0x68
 801b73e:	f7f9 f9ff 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b742:	4629      	mov	r1, r5
 801b744:	a81c      	add	r0, sp, #112	; 0x70
 801b746:	f7f9 fa3f 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b74a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801b74e:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	; 0x6e
 801b752:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	; 0x76
 801b756:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801b75a:	bfd7      	itett	le
 801b75c:	b29a      	uxthle	r2, r3
 801b75e:	2201      	movgt	r2, #1
 801b760:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801b764:	fb91 f2f2 	sdivle	r2, r1, r2
 801b768:	9202      	str	r2, [sp, #8]
 801b76a:	9802      	ldr	r0, [sp, #8]
 801b76c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801b770:	fb92 f0f0 	sdiv	r0, r2, r0
 801b774:	b280      	uxth	r0, r0
 801b776:	9010      	str	r0, [sp, #64]	; 0x40
 801b778:	9902      	ldr	r1, [sp, #8]
 801b77a:	9802      	ldr	r0, [sp, #8]
 801b77c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801b77e:	4488      	add	r8, r1
 801b780:	fb05 2510 	mls	r5, r5, r0, r2
 801b784:	fb15 f503 	smulbb	r5, r5, r3
 801b788:	f108 38ff 	add.w	r8, r8, #4294967295
 801b78c:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801b790:	fb98 f8f1 	sdiv	r8, r8, r1
 801b794:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801b798:	440d      	add	r5, r1
 801b79a:	4419      	add	r1, r3
 801b79c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801b7a0:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801b7a4:	441a      	add	r2, r3
 801b7a6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801b7aa:	9304      	str	r3, [sp, #16]
 801b7ac:	4b95      	ldr	r3, [pc, #596]	; (801ba04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801b7ae:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801b7b2:	6818      	ldr	r0, [r3, #0]
 801b7b4:	6803      	ldr	r3, [r0, #0]
 801b7b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801b7b8:	4798      	blx	r3
 801b7ba:	4b93      	ldr	r3, [pc, #588]	; (801ba08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801b7bc:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801b7c0:	881a      	ldrh	r2, [r3, #0]
 801b7c2:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801b7c6:	9318      	str	r3, [sp, #96]	; 0x60
 801b7c8:	fb02 7101 	mla	r1, r2, r1, r7
 801b7cc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b7d0:	4356      	muls	r6, r2
 801b7d2:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801b7d6:	f108 0801 	add.w	r8, r8, #1
 801b7da:	920a      	str	r2, [sp, #40]	; 0x28
 801b7dc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801b7de:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801b7e2:	930f      	str	r3, [sp, #60]	; 0x3c
 801b7e4:	fa1f f888 	uxth.w	r8, r8
 801b7e8:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801b7ec:	f108 0204 	add.w	r2, r8, #4
 801b7f0:	9211      	str	r2, [sp, #68]	; 0x44
 801b7f2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801b7f4:	4b85      	ldr	r3, [pc, #532]	; (801ba0c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801b7f6:	f1c2 02ff 	rsb	r2, r2, #255	; 0xff
 801b7fa:	b2ad      	uxth	r5, r5
 801b7fc:	9215      	str	r2, [sp, #84]	; 0x54
 801b7fe:	2d00      	cmp	r5, #0
 801b800:	9a04      	ldr	r2, [sp, #16]
 801b802:	f04f 0100 	mov.w	r1, #0
 801b806:	bf18      	it	ne
 801b808:	2200      	movne	r2, #0
 801b80a:	1b1b      	subs	r3, r3, r4
 801b80c:	b292      	uxth	r2, r2
 801b80e:	910d      	str	r1, [sp, #52]	; 0x34
 801b810:	9319      	str	r3, [sp, #100]	; 0x64
 801b812:	9910      	ldr	r1, [sp, #64]	; 0x40
 801b814:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b816:	fa11 f383 	uxtah	r3, r1, r3
 801b81a:	9914      	ldr	r1, [sp, #80]	; 0x50
 801b81c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b820:	3304      	adds	r3, #4
 801b822:	9306      	str	r3, [sp, #24]
 801b824:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b826:	4283      	cmp	r3, r0
 801b828:	f240 8166 	bls.w	801baf8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801b82c:	9902      	ldr	r1, [sp, #8]
 801b82e:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801b832:	fbb5 f3f3 	udiv	r3, r5, r3
 801b836:	1acb      	subs	r3, r1, r3
 801b838:	b29b      	uxth	r3, r3
 801b83a:	9316      	str	r3, [sp, #88]	; 0x58
 801b83c:	9b06      	ldr	r3, [sp, #24]
 801b83e:	9e06      	ldr	r6, [sp, #24]
 801b840:	7859      	ldrb	r1, [r3, #1]
 801b842:	789b      	ldrb	r3, [r3, #2]
 801b844:	7836      	ldrb	r6, [r6, #0]
 801b846:	9612      	str	r6, [sp, #72]	; 0x48
 801b848:	021b      	lsls	r3, r3, #8
 801b84a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801b84e:	9906      	ldr	r1, [sp, #24]
 801b850:	78c9      	ldrb	r1, [r1, #3]
 801b852:	430b      	orrs	r3, r1
 801b854:	9913      	ldr	r1, [sp, #76]	; 0x4c
 801b856:	3601      	adds	r6, #1
 801b858:	4419      	add	r1, r3
 801b85a:	9605      	str	r6, [sp, #20]
 801b85c:	1c4e      	adds	r6, r1, #1
 801b85e:	9603      	str	r6, [sp, #12]
 801b860:	7849      	ldrb	r1, [r1, #1]
 801b862:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801b864:	0209      	lsls	r1, r1, #8
 801b866:	5cf3      	ldrb	r3, [r6, r3]
 801b868:	f401 71ff 	and.w	r1, r1, #510	; 0x1fe
 801b86c:	4319      	orrs	r1, r3
 801b86e:	b28b      	uxth	r3, r1
 801b870:	930c      	str	r3, [sp, #48]	; 0x30
 801b872:	2300      	movs	r3, #0
 801b874:	f04f 0a01 	mov.w	sl, #1
 801b878:	9307      	str	r3, [sp, #28]
 801b87a:	469c      	mov	ip, r3
 801b87c:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801b880:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801b884:	46d3      	mov	fp, sl
 801b886:	4657      	mov	r7, sl
 801b888:	930e      	str	r3, [sp, #56]	; 0x38
 801b88a:	2d00      	cmp	r5, #0
 801b88c:	d07e      	beq.n	801b98c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801b88e:	42af      	cmp	r7, r5
 801b890:	d26e      	bcs.n	801b970 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801b892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b894:	9201      	str	r2, [sp, #4]
 801b896:	1bed      	subs	r5, r5, r7
 801b898:	4283      	cmp	r3, r0
 801b89a:	b2ad      	uxth	r5, r5
 801b89c:	d802      	bhi.n	801b8a4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801b89e:	e073      	b.n	801b988 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801b8a0:	2b00      	cmp	r3, #0
 801b8a2:	d15f      	bne.n	801b964 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801b8a4:	9b03      	ldr	r3, [sp, #12]
 801b8a6:	785b      	ldrb	r3, [r3, #1]
 801b8a8:	f1cb 0207 	rsb	r2, fp, #7
 801b8ac:	4093      	lsls	r3, r2
 801b8ae:	005b      	lsls	r3, r3, #1
 801b8b0:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801b8b4:	9b03      	ldr	r3, [sp, #12]
 801b8b6:	781b      	ldrb	r3, [r3, #0]
 801b8b8:	fa43 f30b 	asr.w	r3, r3, fp
 801b8bc:	b2db      	uxtb	r3, r3
 801b8be:	4313      	orrs	r3, r2
 801b8c0:	f10b 0201 	add.w	r2, fp, #1
 801b8c4:	fa5f fb82 	uxtb.w	fp, r2
 801b8c8:	9a03      	ldr	r2, [sp, #12]
 801b8ca:	f1bb 0f08 	cmp.w	fp, #8
 801b8ce:	bf15      	itete	ne
 801b8d0:	3201      	addne	r2, #1
 801b8d2:	3202      	addeq	r2, #2
 801b8d4:	9203      	strne	r2, [sp, #12]
 801b8d6:	9203      	streq	r2, [sp, #12]
 801b8d8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b8da:	b29f      	uxth	r7, r3
 801b8dc:	bf08      	it	eq
 801b8de:	f04f 0b00 	moveq.w	fp, #0
 801b8e2:	42ba      	cmp	r2, r7
 801b8e4:	d309      	bcc.n	801b8fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801b8e6:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801b8ea:	2301      	movs	r3, #1
 801b8ec:	9a05      	ldr	r2, [sp, #20]
 801b8ee:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
 801b8f2:	d30e      	bcc.n	801b912 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801b8f4:	469a      	mov	sl, r3
 801b8f6:	2600      	movs	r6, #0
 801b8f8:	e035      	b.n	801b966 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801b8fa:	9b05      	ldr	r3, [sp, #20]
 801b8fc:	429f      	cmp	r7, r3
 801b8fe:	d318      	bcc.n	801b932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801b900:	eb04 030a 	add.w	r3, r4, sl
 801b904:	f894 2804 	ldrb.w	r2, [r4, #2052]	; 0x804
 801b908:	f883 2804 	strb.w	r2, [r3, #2052]	; 0x804
 801b90c:	f10a 0301 	add.w	r3, sl, #1
 801b910:	b29b      	uxth	r3, r3
 801b912:	9a05      	ldr	r2, [sp, #20]
 801b914:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801b918:	990c      	ldr	r1, [sp, #48]	; 0x30
 801b91a:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b91e:	7116      	strb	r6, [r2, #4]
 801b920:	f10a 0601 	add.w	r6, sl, #1
 801b924:	80d1      	strh	r1, [r2, #6]
 801b926:	7156      	strb	r6, [r2, #5]
 801b928:	9a05      	ldr	r2, [sp, #20]
 801b92a:	3201      	adds	r2, #1
 801b92c:	b292      	uxth	r2, r2
 801b92e:	9205      	str	r2, [sp, #20]
 801b930:	e7e0      	b.n	801b8f4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801b932:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801b936:	463a      	mov	r2, r7
 801b938:	795b      	ldrb	r3, [r3, #5]
 801b93a:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801b93e:	4426      	add	r6, r4
 801b940:	9919      	ldr	r1, [sp, #100]	; 0x64
 801b942:	eb01 0c06 	add.w	ip, r1, r6
 801b946:	f1bc 0f00 	cmp.w	ip, #0
 801b94a:	dd07      	ble.n	801b95c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801b94c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801b950:	f892 c004 	ldrb.w	ip, [r2, #4]
 801b954:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801b958:	88d2      	ldrh	r2, [r2, #6]
 801b95a:	e7f1      	b.n	801b940 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801b95c:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801b960:	b29b      	uxth	r3, r3
 801b962:	e7c3      	b.n	801b8ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801b964:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b966:	970c      	str	r7, [sp, #48]	; 0x30
 801b968:	9a01      	ldr	r2, [sp, #4]
 801b96a:	46b4      	mov	ip, r6
 801b96c:	461f      	mov	r7, r3
 801b96e:	e78c      	b.n	801b88a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801b970:	1b7b      	subs	r3, r7, r5
 801b972:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b976:	9201      	str	r2, [sp, #4]
 801b978:	eb0c 0605 	add.w	r6, ip, r5
 801b97c:	b29b      	uxth	r3, r3
 801b97e:	b2b6      	uxth	r6, r6
 801b980:	2500      	movs	r5, #0
 801b982:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b984:	4282      	cmp	r2, r0
 801b986:	d88b      	bhi.n	801b8a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b988:	9a01      	ldr	r2, [sp, #4]
 801b98a:	e74b      	b.n	801b824 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b98c:	4297      	cmp	r7, r2
 801b98e:	d332      	bcc.n	801b9f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b990:	1abb      	subs	r3, r7, r2
 801b992:	b29b      	uxth	r3, r3
 801b994:	9208      	str	r2, [sp, #32]
 801b996:	9501      	str	r5, [sp, #4]
 801b998:	9909      	ldr	r1, [sp, #36]	; 0x24
 801b99a:	29ff      	cmp	r1, #255	; 0xff
 801b99c:	9908      	ldr	r1, [sp, #32]
 801b99e:	eb0c 0601 	add.w	r6, ip, r1
 801b9a2:	d135      	bne.n	801ba10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b9a4:	f1a0 0e02 	sub.w	lr, r0, #2
 801b9a8:	b2b6      	uxth	r6, r6
 801b9aa:	45b4      	cmp	ip, r6
 801b9ac:	f040 808c 	bne.w	801bac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b9b0:	9908      	ldr	r1, [sp, #32]
 801b9b2:	4297      	cmp	r7, r2
 801b9b4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b9b8:	d3e2      	bcc.n	801b980 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b9ba:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801b9bc:	9904      	ldr	r1, [sp, #16]
 801b9be:	8812      	ldrh	r2, [r2, #0]
 801b9c0:	1a52      	subs	r2, r2, r1
 801b9c2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b9c6:	9a07      	ldr	r2, [sp, #28]
 801b9c8:	9916      	ldr	r1, [sp, #88]	; 0x58
 801b9ca:	3201      	adds	r2, #1
 801b9cc:	428a      	cmp	r2, r1
 801b9ce:	9207      	str	r2, [sp, #28]
 801b9d0:	f040 8087 	bne.w	801bae2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b9d4:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801b9d8:	f8bd 7068 	ldrh.w	r7, [sp, #104]	; 0x68
 801b9dc:	9b04      	ldr	r3, [sp, #16]
 801b9de:	1bed      	subs	r5, r5, r7
 801b9e0:	b2ad      	uxth	r5, r5
 801b9e2:	2d00      	cmp	r5, #0
 801b9e4:	bf08      	it	eq
 801b9e6:	461a      	moveq	r2, r3
 801b9e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b9ea:	bf18      	it	ne
 801b9ec:	2200      	movne	r2, #0
 801b9ee:	3301      	adds	r3, #1
 801b9f0:	930d      	str	r3, [sp, #52]	; 0x34
 801b9f2:	b292      	uxth	r2, r2
 801b9f4:	e70d      	b.n	801b812 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b9f6:	1bd1      	subs	r1, r2, r7
 801b9f8:	b28b      	uxth	r3, r1
 801b9fa:	9301      	str	r3, [sp, #4]
 801b9fc:	9708      	str	r7, [sp, #32]
 801b9fe:	462b      	mov	r3, r5
 801ba00:	e7ca      	b.n	801b998 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801ba02:	bf00      	nop
 801ba04:	2000ef1c 	.word	0x2000ef1c
 801ba08:	2000ef16 	.word	0x2000ef16
 801ba0c:	fffff7fb 	.word	0xfffff7fb
 801ba10:	b2b6      	uxth	r6, r6
 801ba12:	900b      	str	r0, [sp, #44]	; 0x2c
 801ba14:	45b4      	cmp	ip, r6
 801ba16:	d0cb      	beq.n	801b9b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801ba18:	f10c 0101 	add.w	r1, ip, #1
 801ba1c:	44a4      	add	ip, r4
 801ba1e:	9117      	str	r1, [sp, #92]	; 0x5c
 801ba20:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801ba24:	9911      	ldr	r1, [sp, #68]	; 0x44
 801ba26:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ba2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801ba2c:	f8b1 c000 	ldrh.w	ip, [r1]
 801ba30:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba32:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ba36:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ba3a:	fb1e fe01 	smulbb	lr, lr, r1
 801ba3e:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ba42:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba44:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801ba48:	fb08 e801 	mla	r8, r8, r1, lr
 801ba4c:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ba50:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba52:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801ba56:	fb19 f901 	smulbb	r9, r9, r1
 801ba5a:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801ba5e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba60:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ba64:	fb0e 9e01 	mla	lr, lr, r1, r9
 801ba68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ba6c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ba6e:	fa5f fc8c 	uxtb.w	ip, ip
 801ba72:	fb1c fc01 	smulbb	ip, ip, r1
 801ba76:	00ed      	lsls	r5, r5, #3
 801ba78:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801ba7a:	b2ed      	uxtb	r5, r5
 801ba7c:	fb05 c501 	mla	r5, r5, r1, ip
 801ba80:	fa1f f888 	uxth.w	r8, r8
 801ba84:	fa1f fe8e 	uxth.w	lr, lr
 801ba88:	b2ad      	uxth	r5, r5
 801ba8a:	f108 0c01 	add.w	ip, r8, #1
 801ba8e:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801ba92:	f10e 0901 	add.w	r9, lr, #1
 801ba96:	f105 0c01 	add.w	ip, r5, #1
 801ba9a:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801ba9e:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801baa2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801baa6:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801baaa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801baae:	ea4c 0808 	orr.w	r8, ip, r8
 801bab2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801bab4:	f8bd c05c 	ldrh.w	ip, [sp, #92]	; 0x5c
 801bab8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801babc:	ea48 0809 	orr.w	r8, r8, r9
 801bac0:	f821 8b02 	strh.w	r8, [r1], #2
 801bac4:	910b      	str	r1, [sp, #44]	; 0x2c
 801bac6:	e7a5      	b.n	801ba14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801bac8:	f10c 0801 	add.w	r8, ip, #1
 801bacc:	44a4      	add	ip, r4
 801bace:	9911      	ldr	r1, [sp, #68]	; 0x44
 801bad0:	f89c 5804 	ldrb.w	r5, [ip, #2052]	; 0x804
 801bad4:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801bad8:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801badc:	fa1f fc88 	uxth.w	ip, r8
 801bae0:	e763      	b.n	801b9aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801bae2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801bae6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801baea:	1aad      	subs	r5, r5, r2
 801baec:	b2ad      	uxth	r5, r5
 801baee:	2d00      	cmp	r5, #0
 801baf0:	bf18      	it	ne
 801baf2:	2200      	movne	r2, #0
 801baf4:	9201      	str	r2, [sp, #4]
 801baf6:	e744      	b.n	801b982 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801baf8:	4b03      	ldr	r3, [pc, #12]	; (801bb08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801bafa:	6818      	ldr	r0, [r3, #0]
 801bafc:	6803      	ldr	r3, [r0, #0]
 801bafe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bb00:	4798      	blx	r3
 801bb02:	b01f      	add	sp, #124	; 0x7c
 801bb04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb08:	2000ef1c 	.word	0x2000ef1c

0801bb0c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bb0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb10:	b08f      	sub	sp, #60	; 0x3c
 801bb12:	461c      	mov	r4, r3
 801bb14:	9203      	str	r2, [sp, #12]
 801bb16:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801bb1a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bb1c:	9202      	str	r2, [sp, #8]
 801bb1e:	460f      	mov	r7, r1
 801bb20:	2a00      	cmp	r2, #0
 801bb22:	f000 8128 	beq.w	801bd76 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801bb26:	6820      	ldr	r0, [r4, #0]
 801bb28:	6861      	ldr	r1, [r4, #4]
 801bb2a:	aa0a      	add	r2, sp, #40	; 0x28
 801bb2c:	c203      	stmia	r2!, {r0, r1}
 801bb2e:	6818      	ldr	r0, [r3, #0]
 801bb30:	6859      	ldr	r1, [r3, #4]
 801bb32:	aa0c      	add	r2, sp, #48	; 0x30
 801bb34:	c203      	stmia	r2!, {r0, r1}
 801bb36:	a80a      	add	r0, sp, #40	; 0x28
 801bb38:	f7f9 f802 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bb3c:	4621      	mov	r1, r4
 801bb3e:	a80c      	add	r0, sp, #48	; 0x30
 801bb40:	f7f9 f842 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bb44:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801bb48:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	; 0x2e
 801bb4c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	; 0x30
 801bb50:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bb54:	bfde      	ittt	le
 801bb56:	b2b3      	uxthle	r3, r6
 801bb58:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bb5c:	fb92 f3f3 	sdivle	r3, r2, r3
 801bb60:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801bb64:	bfc8      	it	gt
 801bb66:	2301      	movgt	r3, #1
 801bb68:	fb92 f1f3 	sdiv	r1, r2, r3
 801bb6c:	fa1f fc81 	uxth.w	ip, r1
 801bb70:	fb0c 2413 	mls	r4, ip, r3, r2
 801bb74:	fb14 f406 	smulbb	r4, r4, r6
 801bb78:	441d      	add	r5, r3
 801bb7a:	4404      	add	r4, r0
 801bb7c:	4661      	mov	r1, ip
 801bb7e:	3d01      	subs	r5, #1
 801bb80:	b2a4      	uxth	r4, r4
 801bb82:	fb95 f5f3 	sdiv	r5, r5, r3
 801bb86:	b121      	cbz	r1, 801bb92 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801bb88:	9b03      	ldr	r3, [sp, #12]
 801bb8a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bb8e:	ba1b      	rev	r3, r3
 801bb90:	441f      	add	r7, r3
 801bb92:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801bb96:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801bb9a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801bb9e:	4418      	add	r0, r3
 801bba0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801bba4:	f8ad 0030 	strh.w	r0, [sp, #48]	; 0x30
 801bba8:	441a      	add	r2, r3
 801bbaa:	4b74      	ldr	r3, [pc, #464]	; (801bd7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bbac:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bbb0:	6818      	ldr	r0, [r3, #0]
 801bbb2:	6803      	ldr	r3, [r0, #0]
 801bbb4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bbb6:	4798      	blx	r3
 801bbb8:	4a71      	ldr	r2, [pc, #452]	; (801bd80 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801bbba:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 801bbbe:	8813      	ldrh	r3, [r2, #0]
 801bbc0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	; 0x30
 801bbc4:	9209      	str	r2, [sp, #36]	; 0x24
 801bbc6:	fb03 c101 	mla	r1, r3, r1, ip
 801bbca:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801bbce:	4373      	muls	r3, r6
 801bbd0:	b2ad      	uxth	r5, r5
 801bbd2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bbd6:	00ad      	lsls	r5, r5, #2
 801bbd8:	2c00      	cmp	r4, #0
 801bbda:	9304      	str	r3, [sp, #16]
 801bbdc:	f105 0304 	add.w	r3, r5, #4
 801bbe0:	9305      	str	r3, [sp, #20]
 801bbe2:	bf0c      	ite	eq
 801bbe4:	46c8      	moveq	r8, r9
 801bbe6:	f04f 0800 	movne.w	r8, #0
 801bbea:	2300      	movs	r3, #0
 801bbec:	fa1f f888 	uxth.w	r8, r8
 801bbf0:	9301      	str	r3, [sp, #4]
 801bbf2:	9a04      	ldr	r2, [sp, #16]
 801bbf4:	4282      	cmp	r2, r0
 801bbf6:	f240 80b9 	bls.w	801bd6c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801bbfa:	b95b      	cbnz	r3, 801bc14 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801bbfc:	783a      	ldrb	r2, [r7, #0]
 801bbfe:	0993      	lsrs	r3, r2, #6
 801bc00:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801bc04:	9201      	str	r2, [sp, #4]
 801bc06:	1e5a      	subs	r2, r3, #1
 801bc08:	2a02      	cmp	r2, #2
 801bc0a:	bf8d      	iteet	hi
 801bc0c:	787b      	ldrbhi	r3, [r7, #1]
 801bc0e:	3701      	addls	r7, #1
 801bc10:	b29b      	uxthls	r3, r3
 801bc12:	3702      	addhi	r7, #2
 801bc14:	b184      	cbz	r4, 801bc38 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801bc16:	429c      	cmp	r4, r3
 801bc18:	bf95      	itete	ls
 801bc1a:	1b1c      	subls	r4, r3, r4
 801bc1c:	1ae4      	subhi	r4, r4, r3
 801bc1e:	fa1f fa84 	uxthls.w	sl, r4
 801bc22:	b2a4      	uxthhi	r4, r4
 801bc24:	bf87      	ittee	hi
 801bc26:	46c4      	movhi	ip, r8
 801bc28:	f04f 0a00 	movhi.w	sl, #0
 801bc2c:	fa1f fc89 	uxthls.w	ip, r9
 801bc30:	2400      	movls	r4, #0
 801bc32:	4653      	mov	r3, sl
 801bc34:	46e0      	mov	r8, ip
 801bc36:	e7dc      	b.n	801bbf2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801bc38:	2204      	movs	r2, #4
 801bc3a:	4615      	mov	r5, r2
 801bc3c:	9905      	ldr	r1, [sp, #20]
 801bc3e:	9a01      	ldr	r2, [sp, #4]
 801bc40:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bc44:	9903      	ldr	r1, [sp, #12]
 801bc46:	588a      	ldr	r2, [r1, r2]
 801bc48:	4543      	cmp	r3, r8
 801bc4a:	bf27      	ittee	cs
 801bc4c:	eba3 0a08 	subcs.w	sl, r3, r8
 801bc50:	46c6      	movcs	lr, r8
 801bc52:	eba8 0c03 	subcc.w	ip, r8, r3
 801bc56:	469e      	movcc	lr, r3
 801bc58:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801bc5c:	bf27      	ittee	cs
 801bc5e:	fa1f fa8a 	uxthcs.w	sl, sl
 801bc62:	46a4      	movcs	ip, r4
 801bc64:	fa1f fc8c 	uxthcc.w	ip, ip
 801bc68:	46a2      	movcc	sl, r4
 801bc6a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801bc6e:	2900      	cmp	r1, #0
 801bc70:	d066      	beq.n	801bd40 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801bc72:	29ff      	cmp	r1, #255	; 0xff
 801bc74:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801bc78:	d114      	bne.n	801bca4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc7a:	9d02      	ldr	r5, [sp, #8]
 801bc7c:	2dff      	cmp	r5, #255	; 0xff
 801bc7e:	d111      	bne.n	801bca4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc80:	0951      	lsrs	r1, r2, #5
 801bc82:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 801bc86:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bc8a:	f026 0607 	bic.w	r6, r6, #7
 801bc8e:	430e      	orrs	r6, r1
 801bc90:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801bc94:	4316      	orrs	r6, r2
 801bc96:	b2b6      	uxth	r6, r6
 801bc98:	4486      	add	lr, r0
 801bc9a:	4586      	cmp	lr, r0
 801bc9c:	d051      	beq.n	801bd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bc9e:	f820 6b02 	strh.w	r6, [r0], #2
 801bca2:	e7fa      	b.n	801bc9a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801bca4:	9d02      	ldr	r5, [sp, #8]
 801bca6:	4369      	muls	r1, r5
 801bca8:	1c4d      	adds	r5, r1, #1
 801bcaa:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801bcae:	122d      	asrs	r5, r5, #8
 801bcb0:	ea6f 0b05 	mvn.w	fp, r5
 801bcb4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801bcb8:	b2ad      	uxth	r5, r5
 801bcba:	b2f6      	uxtb	r6, r6
 801bcbc:	b2d2      	uxtb	r2, r2
 801bcbe:	fb11 f105 	smulbb	r1, r1, r5
 801bcc2:	fb16 f605 	smulbb	r6, r6, r5
 801bcc6:	fb12 f205 	smulbb	r2, r2, r5
 801bcca:	b289      	uxth	r1, r1
 801bccc:	b2b6      	uxth	r6, r6
 801bcce:	b292      	uxth	r2, r2
 801bcd0:	9106      	str	r1, [sp, #24]
 801bcd2:	9607      	str	r6, [sp, #28]
 801bcd4:	9208      	str	r2, [sp, #32]
 801bcd6:	4486      	add	lr, r0
 801bcd8:	fa5f fb8b 	uxtb.w	fp, fp
 801bcdc:	4586      	cmp	lr, r0
 801bcde:	d030      	beq.n	801bd42 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801bce0:	8802      	ldrh	r2, [r0, #0]
 801bce2:	9906      	ldr	r1, [sp, #24]
 801bce4:	1216      	asrs	r6, r2, #8
 801bce6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bcea:	10d5      	asrs	r5, r2, #3
 801bcec:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bcf0:	fb06 160b 	mla	r6, r6, fp, r1
 801bcf4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801bcf8:	9907      	ldr	r1, [sp, #28]
 801bcfa:	00d2      	lsls	r2, r2, #3
 801bcfc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bd00:	fb05 150b 	mla	r5, r5, fp, r1
 801bd04:	b2d2      	uxtb	r2, r2
 801bd06:	9908      	ldr	r1, [sp, #32]
 801bd08:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bd0c:	b2b6      	uxth	r6, r6
 801bd0e:	fb02 120b 	mla	r2, r2, fp, r1
 801bd12:	b292      	uxth	r2, r2
 801bd14:	1c71      	adds	r1, r6, #1
 801bd16:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801bd1a:	1c51      	adds	r1, r2, #1
 801bd1c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801bd20:	b2ad      	uxth	r5, r5
 801bd22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bd26:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801bd2a:	4316      	orrs	r6, r2
 801bd2c:	1c6a      	adds	r2, r5, #1
 801bd2e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801bd32:	096d      	lsrs	r5, r5, #5
 801bd34:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bd38:	432e      	orrs	r6, r5
 801bd3a:	f820 6b02 	strh.w	r6, [r0], #2
 801bd3e:	e7cd      	b.n	801bcdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801bd40:	4470      	add	r0, lr
 801bd42:	4543      	cmp	r3, r8
 801bd44:	f4ff af75 	bcc.w	801bc32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd48:	f8bd 402c 	ldrh.w	r4, [sp, #44]	; 0x2c
 801bd4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bd4e:	fa1f fc89 	uxth.w	ip, r9
 801bd52:	eba4 040c 	sub.w	r4, r4, ip
 801bd56:	881b      	ldrh	r3, [r3, #0]
 801bd58:	b2a4      	uxth	r4, r4
 801bd5a:	2c00      	cmp	r4, #0
 801bd5c:	eba3 0309 	sub.w	r3, r3, r9
 801bd60:	bf18      	it	ne
 801bd62:	f04f 0c00 	movne.w	ip, #0
 801bd66:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bd6a:	e762      	b.n	801bc32 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801bd6c:	4b03      	ldr	r3, [pc, #12]	; (801bd7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801bd6e:	6818      	ldr	r0, [r3, #0]
 801bd70:	6803      	ldr	r3, [r0, #0]
 801bd72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd74:	4798      	blx	r3
 801bd76:	b00f      	add	sp, #60	; 0x3c
 801bd78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd7c:	2000ef1c 	.word	0x2000ef1c
 801bd80:	2000ef16 	.word	0x2000ef16

0801bd84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd88:	b093      	sub	sp, #76	; 0x4c
 801bd8a:	461c      	mov	r4, r3
 801bd8c:	9205      	str	r2, [sp, #20]
 801bd8e:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 801bd92:	9101      	str	r1, [sp, #4]
 801bd94:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801bd96:	9202      	str	r2, [sp, #8]
 801bd98:	2a00      	cmp	r2, #0
 801bd9a:	f000 812c 	beq.w	801bff6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801bd9e:	6820      	ldr	r0, [r4, #0]
 801bda0:	6861      	ldr	r1, [r4, #4]
 801bda2:	aa0e      	add	r2, sp, #56	; 0x38
 801bda4:	c203      	stmia	r2!, {r0, r1}
 801bda6:	6818      	ldr	r0, [r3, #0]
 801bda8:	6859      	ldr	r1, [r3, #4]
 801bdaa:	aa10      	add	r2, sp, #64	; 0x40
 801bdac:	c203      	stmia	r2!, {r0, r1}
 801bdae:	a80e      	add	r0, sp, #56	; 0x38
 801bdb0:	f7f8 fec6 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bdb4:	4621      	mov	r1, r4
 801bdb6:	a810      	add	r0, sp, #64	; 0x40
 801bdb8:	f7f8 ff06 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bdbc:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801bdc0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	; 0x3e
 801bdc4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801bdc8:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 801bdcc:	bfde      	ittt	le
 801bdce:	b2b3      	uxthle	r3, r6
 801bdd0:	f44f 6280 	movle.w	r2, #1024	; 0x400
 801bdd4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bdd8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801bddc:	bfc8      	it	gt
 801bdde:	2301      	movgt	r3, #1
 801bde0:	fb92 f1f3 	sdiv	r1, r2, r3
 801bde4:	fa1f fc81 	uxth.w	ip, r1
 801bde8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bdec:	fb14 f406 	smulbb	r4, r4, r6
 801bdf0:	441d      	add	r5, r3
 801bdf2:	4404      	add	r4, r0
 801bdf4:	4661      	mov	r1, ip
 801bdf6:	3d01      	subs	r5, #1
 801bdf8:	b2a4      	uxth	r4, r4
 801bdfa:	fb95 f5f3 	sdiv	r5, r5, r3
 801bdfe:	b131      	cbz	r1, 801be0e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801be00:	9b05      	ldr	r3, [sp, #20]
 801be02:	9901      	ldr	r1, [sp, #4]
 801be04:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801be08:	ba1b      	rev	r3, r3
 801be0a:	4419      	add	r1, r3
 801be0c:	9101      	str	r1, [sp, #4]
 801be0e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801be12:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801be16:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	; 0x46
 801be1a:	4418      	add	r0, r3
 801be1c:	f8bd 303a 	ldrh.w	r3, [sp, #58]	; 0x3a
 801be20:	f8ad 0040 	strh.w	r0, [sp, #64]	; 0x40
 801be24:	441a      	add	r2, r3
 801be26:	4b75      	ldr	r3, [pc, #468]	; (801bffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801be28:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801be2c:	6818      	ldr	r0, [r3, #0]
 801be2e:	6803      	ldr	r3, [r0, #0]
 801be30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801be32:	4798      	blx	r3
 801be34:	4972      	ldr	r1, [pc, #456]	; (801c000 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801be36:	f9bd c040 	ldrsh.w	ip, [sp, #64]	; 0x40
 801be3a:	880b      	ldrh	r3, [r1, #0]
 801be3c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801be40:	910d      	str	r1, [sp, #52]	; 0x34
 801be42:	fb03 c202 	mla	r2, r3, r2, ip
 801be46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801be4a:	4373      	muls	r3, r6
 801be4c:	b2ad      	uxth	r5, r5
 801be4e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801be52:	00ad      	lsls	r5, r5, #2
 801be54:	9308      	str	r3, [sp, #32]
 801be56:	1d2b      	adds	r3, r5, #4
 801be58:	9309      	str	r3, [sp, #36]	; 0x24
 801be5a:	9b02      	ldr	r3, [sp, #8]
 801be5c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801be60:	9106      	str	r1, [sp, #24]
 801be62:	43da      	mvns	r2, r3
 801be64:	2c00      	cmp	r4, #0
 801be66:	bf0c      	ite	eq
 801be68:	46dc      	moveq	ip, fp
 801be6a:	f04f 0c00 	movne.w	ip, #0
 801be6e:	2300      	movs	r3, #0
 801be70:	b2d2      	uxtb	r2, r2
 801be72:	fa1f fc8c 	uxth.w	ip, ip
 801be76:	9303      	str	r3, [sp, #12]
 801be78:	9207      	str	r2, [sp, #28]
 801be7a:	9a08      	ldr	r2, [sp, #32]
 801be7c:	4282      	cmp	r2, r0
 801be7e:	f240 80b5 	bls.w	801bfec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801be82:	b963      	cbnz	r3, 801be9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801be84:	9b01      	ldr	r3, [sp, #4]
 801be86:	781a      	ldrb	r2, [r3, #0]
 801be88:	0993      	lsrs	r3, r2, #6
 801be8a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 801be8e:	9203      	str	r2, [sp, #12]
 801be90:	1e5a      	subs	r2, r3, #1
 801be92:	2a02      	cmp	r2, #2
 801be94:	d815      	bhi.n	801bec2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801be96:	9a01      	ldr	r2, [sp, #4]
 801be98:	3201      	adds	r2, #1
 801be9a:	9201      	str	r2, [sp, #4]
 801be9c:	b29b      	uxth	r3, r3
 801be9e:	b1b4      	cbz	r4, 801bece <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bea0:	429c      	cmp	r4, r3
 801bea2:	bf95      	itete	ls
 801bea4:	1b1c      	subls	r4, r3, r4
 801bea6:	1ae4      	subhi	r4, r4, r3
 801bea8:	fa1f f884 	uxthls.w	r8, r4
 801beac:	b2a4      	uxthhi	r4, r4
 801beae:	bf87      	ittee	hi
 801beb0:	4666      	movhi	r6, ip
 801beb2:	f04f 0800 	movhi.w	r8, #0
 801beb6:	fa1f f68b 	uxthls.w	r6, fp
 801beba:	2400      	movls	r4, #0
 801bebc:	4643      	mov	r3, r8
 801bebe:	46b4      	mov	ip, r6
 801bec0:	e7db      	b.n	801be7a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bec2:	9a01      	ldr	r2, [sp, #4]
 801bec4:	9b01      	ldr	r3, [sp, #4]
 801bec6:	3202      	adds	r2, #2
 801bec8:	785b      	ldrb	r3, [r3, #1]
 801beca:	9201      	str	r2, [sp, #4]
 801becc:	e7e7      	b.n	801be9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bece:	2203      	movs	r2, #3
 801bed0:	4615      	mov	r5, r2
 801bed2:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bed4:	9a03      	ldr	r2, [sp, #12]
 801bed6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801beda:	9905      	ldr	r1, [sp, #20]
 801bedc:	4563      	cmp	r3, ip
 801bede:	eb01 0502 	add.w	r5, r1, r2
 801bee2:	9902      	ldr	r1, [sp, #8]
 801bee4:	bf29      	itett	cs
 801bee6:	eba3 080c 	subcs.w	r8, r3, ip
 801beea:	ebac 0603 	subcc.w	r6, ip, r3
 801beee:	fa1f f888 	uxthcs.w	r8, r8
 801bef2:	46e1      	movcs	r9, ip
 801bef4:	bf2f      	iteee	cs
 801bef6:	4626      	movcs	r6, r4
 801bef8:	b2b6      	uxthcc	r6, r6
 801befa:	4699      	movcc	r9, r3
 801befc:	46a0      	movcc	r8, r4
 801befe:	29ff      	cmp	r1, #255	; 0xff
 801bf00:	d04a      	beq.n	801bf98 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bf02:	9f06      	ldr	r7, [sp, #24]
 801bf04:	78a9      	ldrb	r1, [r5, #2]
 801bf06:	9004      	str	r0, [sp, #16]
 801bf08:	4379      	muls	r1, r7
 801bf0a:	910a      	str	r1, [sp, #40]	; 0x28
 801bf0c:	7869      	ldrb	r1, [r5, #1]
 801bf0e:	4379      	muls	r1, r7
 801bf10:	910b      	str	r1, [sp, #44]	; 0x2c
 801bf12:	9905      	ldr	r1, [sp, #20]
 801bf14:	5c8a      	ldrb	r2, [r1, r2]
 801bf16:	437a      	muls	r2, r7
 801bf18:	920c      	str	r2, [sp, #48]	; 0x30
 801bf1a:	46ca      	mov	sl, r9
 801bf1c:	f1ba 0f00 	cmp.w	sl, #0
 801bf20:	d03d      	beq.n	801bf9e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bf22:	9a04      	ldr	r2, [sp, #16]
 801bf24:	9f07      	ldr	r7, [sp, #28]
 801bf26:	8812      	ldrh	r2, [r2, #0]
 801bf28:	1215      	asrs	r5, r2, #8
 801bf2a:	46be      	mov	lr, r7
 801bf2c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bf30:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bf32:	10d1      	asrs	r1, r2, #3
 801bf34:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bf38:	fb05 750e 	mla	r5, r5, lr, r7
 801bf3c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bf40:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801bf42:	00d2      	lsls	r2, r2, #3
 801bf44:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bf48:	fb01 710e 	mla	r1, r1, lr, r7
 801bf4c:	b2d2      	uxtb	r2, r2
 801bf4e:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801bf50:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bf54:	b2ad      	uxth	r5, r5
 801bf56:	fb02 720e 	mla	r2, r2, lr, r7
 801bf5a:	b292      	uxth	r2, r2
 801bf5c:	f105 0e01 	add.w	lr, r5, #1
 801bf60:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bf64:	f102 0e01 	add.w	lr, r2, #1
 801bf68:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bf6c:	b289      	uxth	r1, r1
 801bf6e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bf72:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801bf76:	4315      	orrs	r5, r2
 801bf78:	1c4a      	adds	r2, r1, #1
 801bf7a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf7e:	0949      	lsrs	r1, r1, #5
 801bf80:	9a04      	ldr	r2, [sp, #16]
 801bf82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bf86:	430d      	orrs	r5, r1
 801bf88:	f822 5b02 	strh.w	r5, [r2], #2
 801bf8c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bf90:	9204      	str	r2, [sp, #16]
 801bf92:	fa1f fa8a 	uxth.w	sl, sl
 801bf96:	e7c1      	b.n	801bf1c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bf98:	4649      	mov	r1, r9
 801bf9a:	4686      	mov	lr, r0
 801bf9c:	b999      	cbnz	r1, 801bfc6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bf9e:	4563      	cmp	r3, ip
 801bfa0:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bfa4:	d38a      	bcc.n	801bebc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bfa6:	f8bd 403c 	ldrh.w	r4, [sp, #60]	; 0x3c
 801bfaa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bfac:	fa1f f68b 	uxth.w	r6, fp
 801bfb0:	1ba4      	subs	r4, r4, r6
 801bfb2:	881b      	ldrh	r3, [r3, #0]
 801bfb4:	b2a4      	uxth	r4, r4
 801bfb6:	2c00      	cmp	r4, #0
 801bfb8:	eba3 030b 	sub.w	r3, r3, fp
 801bfbc:	bf18      	it	ne
 801bfbe:	2600      	movne	r6, #0
 801bfc0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bfc4:	e77a      	b.n	801bebc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bfc6:	78aa      	ldrb	r2, [r5, #2]
 801bfc8:	4f0e      	ldr	r7, [pc, #56]	; (801c004 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bfca:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bfce:	786a      	ldrb	r2, [r5, #1]
 801bfd0:	00d2      	lsls	r2, r2, #3
 801bfd2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bfd6:	ea4a 0202 	orr.w	r2, sl, r2
 801bfda:	f895 a000 	ldrb.w	sl, [r5]
 801bfde:	3901      	subs	r1, #1
 801bfe0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bfe4:	f82e 2b02 	strh.w	r2, [lr], #2
 801bfe8:	b289      	uxth	r1, r1
 801bfea:	e7d7      	b.n	801bf9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bfec:	4b03      	ldr	r3, [pc, #12]	; (801bffc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bfee:	6818      	ldr	r0, [r3, #0]
 801bff0:	6803      	ldr	r3, [r0, #0]
 801bff2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bff4:	4798      	blx	r3
 801bff6:	b013      	add	sp, #76	; 0x4c
 801bff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bffc:	2000ef1c 	.word	0x2000ef1c
 801c000:	2000ef16 	.word	0x2000ef16
 801c004:	fffff800 	.word	0xfffff800

0801c008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801c008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c00c:	b09d      	sub	sp, #116	; 0x74
 801c00e:	e9cd 1211 	strd	r1, r2, [sp, #68]	; 0x44
 801c012:	f89d 209c 	ldrb.w	r2, [sp, #156]	; 0x9c
 801c016:	920e      	str	r2, [sp, #56]	; 0x38
 801c018:	461c      	mov	r4, r3
 801c01a:	4683      	mov	fp, r0
 801c01c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801c01e:	2a00      	cmp	r2, #0
 801c020:	f000 81e0 	beq.w	801c3e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801c024:	6820      	ldr	r0, [r4, #0]
 801c026:	6861      	ldr	r1, [r4, #4]
 801c028:	aa18      	add	r2, sp, #96	; 0x60
 801c02a:	c203      	stmia	r2!, {r0, r1}
 801c02c:	6818      	ldr	r0, [r3, #0]
 801c02e:	6859      	ldr	r1, [r3, #4]
 801c030:	aa1a      	add	r2, sp, #104	; 0x68
 801c032:	c203      	stmia	r2!, {r0, r1}
 801c034:	a818      	add	r0, sp, #96	; 0x60
 801c036:	f7f8 fd83 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c03a:	4621      	mov	r1, r4
 801c03c:	a81a      	add	r0, sp, #104	; 0x68
 801c03e:	f7f8 fdc3 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c042:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	; 0x64
 801c046:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	; 0x66
 801c04a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c04e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c052:	bfd7      	itett	le
 801c054:	b29a      	uxthle	r2, r3
 801c056:	2201      	movgt	r2, #1
 801c058:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c05c:	fb91 f2f2 	sdivle	r2, r1, r2
 801c060:	9202      	str	r2, [sp, #8]
 801c062:	9802      	ldr	r0, [sp, #8]
 801c064:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	; 0x6a
 801c068:	fb92 f0f0 	sdiv	r0, r2, r0
 801c06c:	b280      	uxth	r0, r0
 801c06e:	900f      	str	r0, [sp, #60]	; 0x3c
 801c070:	9902      	ldr	r1, [sp, #8]
 801c072:	9802      	ldr	r0, [sp, #8]
 801c074:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801c076:	440c      	add	r4, r1
 801c078:	fb05 2510 	mls	r5, r5, r0, r2
 801c07c:	fb15 f503 	smulbb	r5, r5, r3
 801c080:	3c01      	subs	r4, #1
 801c082:	f8bd 3060 	ldrh.w	r3, [sp, #96]	; 0x60
 801c086:	fb94 f4f1 	sdiv	r4, r4, r1
 801c08a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	; 0x68
 801c08e:	440d      	add	r5, r1
 801c090:	4419      	add	r1, r3
 801c092:	f8bd 3062 	ldrh.w	r3, [sp, #98]	; 0x62
 801c096:	f8ad 1068 	strh.w	r1, [sp, #104]	; 0x68
 801c09a:	441a      	add	r2, r3
 801c09c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c0a0:	9306      	str	r3, [sp, #24]
 801c0a2:	4bb3      	ldr	r3, [pc, #716]	; (801c370 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801c0a4:	f8ad 206a 	strh.w	r2, [sp, #106]	; 0x6a
 801c0a8:	6818      	ldr	r0, [r3, #0]
 801c0aa:	6803      	ldr	r3, [r0, #0]
 801c0ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c0ae:	4798      	blx	r3
 801c0b0:	4bb0      	ldr	r3, [pc, #704]	; (801c374 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801c0b2:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	; 0x6a
 801c0b6:	881a      	ldrh	r2, [r3, #0]
 801c0b8:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	; 0x68
 801c0bc:	9316      	str	r3, [sp, #88]	; 0x58
 801c0be:	fb02 7101 	mla	r1, r2, r1, r7
 801c0c2:	3401      	adds	r4, #1
 801c0c4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801c0c8:	b2a4      	uxth	r4, r4
 801c0ca:	4356      	muls	r6, r2
 801c0cc:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801c0d0:	00a4      	lsls	r4, r4, #2
 801c0d2:	920a      	str	r2, [sp, #40]	; 0x28
 801c0d4:	1d22      	adds	r2, r4, #4
 801c0d6:	b2ad      	uxth	r5, r5
 801c0d8:	9213      	str	r2, [sp, #76]	; 0x4c
 801c0da:	4ba7      	ldr	r3, [pc, #668]	; (801c378 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801c0dc:	9a06      	ldr	r2, [sp, #24]
 801c0de:	2d00      	cmp	r5, #0
 801c0e0:	bf0c      	ite	eq
 801c0e2:	4611      	moveq	r1, r2
 801c0e4:	2100      	movne	r1, #0
 801c0e6:	2200      	movs	r2, #0
 801c0e8:	eba3 030b 	sub.w	r3, r3, fp
 801c0ec:	b289      	uxth	r1, r1
 801c0ee:	920d      	str	r2, [sp, #52]	; 0x34
 801c0f0:	9317      	str	r3, [sp, #92]	; 0x5c
 801c0f2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c0f6:	fa12 f383 	uxtah	r3, r2, r3
 801c0fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801c0fc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c100:	3304      	adds	r3, #4
 801c102:	9308      	str	r3, [sp, #32]
 801c104:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c106:	4543      	cmp	r3, r8
 801c108:	f240 8167 	bls.w	801c3da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801c10c:	9a02      	ldr	r2, [sp, #8]
 801c10e:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 801c112:	fbb5 f3f3 	udiv	r3, r5, r3
 801c116:	1ad3      	subs	r3, r2, r3
 801c118:	b29b      	uxth	r3, r3
 801c11a:	9314      	str	r3, [sp, #80]	; 0x50
 801c11c:	9b08      	ldr	r3, [sp, #32]
 801c11e:	9808      	ldr	r0, [sp, #32]
 801c120:	785a      	ldrb	r2, [r3, #1]
 801c122:	789b      	ldrb	r3, [r3, #2]
 801c124:	7800      	ldrb	r0, [r0, #0]
 801c126:	9010      	str	r0, [sp, #64]	; 0x40
 801c128:	021b      	lsls	r3, r3, #8
 801c12a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c12e:	9a08      	ldr	r2, [sp, #32]
 801c130:	78d2      	ldrb	r2, [r2, #3]
 801c132:	4313      	orrs	r3, r2
 801c134:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801c136:	3001      	adds	r0, #1
 801c138:	441a      	add	r2, r3
 801c13a:	9007      	str	r0, [sp, #28]
 801c13c:	1c50      	adds	r0, r2, #1
 801c13e:	9005      	str	r0, [sp, #20]
 801c140:	7852      	ldrb	r2, [r2, #1]
 801c142:	9811      	ldr	r0, [sp, #68]	; 0x44
 801c144:	0212      	lsls	r2, r2, #8
 801c146:	5cc3      	ldrb	r3, [r0, r3]
 801c148:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c14c:	431a      	orrs	r2, r3
 801c14e:	b293      	uxth	r3, r2
 801c150:	930b      	str	r3, [sp, #44]	; 0x2c
 801c152:	2300      	movs	r3, #0
 801c154:	9309      	str	r3, [sp, #36]	; 0x24
 801c156:	2301      	movs	r3, #1
 801c158:	9301      	str	r3, [sp, #4]
 801c15a:	9304      	str	r3, [sp, #16]
 801c15c:	2300      	movs	r3, #0
 801c15e:	f88b 2804 	strb.w	r2, [fp, #2052]	; 0x804
 801c162:	9303      	str	r3, [sp, #12]
 801c164:	f04f 0e01 	mov.w	lr, #1
 801c168:	2d00      	cmp	r5, #0
 801c16a:	d07c      	beq.n	801c266 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801c16c:	45ae      	cmp	lr, r5
 801c16e:	d26b      	bcs.n	801c248 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801c170:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c172:	eba5 050e 	sub.w	r5, r5, lr
 801c176:	4543      	cmp	r3, r8
 801c178:	b2ad      	uxth	r5, r5
 801c17a:	460c      	mov	r4, r1
 801c17c:	d802      	bhi.n	801c184 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801c17e:	e070      	b.n	801c262 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801c180:	2b00      	cmp	r3, #0
 801c182:	d15c      	bne.n	801c23e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801c184:	9b05      	ldr	r3, [sp, #20]
 801c186:	9a04      	ldr	r2, [sp, #16]
 801c188:	785b      	ldrb	r3, [r3, #1]
 801c18a:	9904      	ldr	r1, [sp, #16]
 801c18c:	f1c2 0207 	rsb	r2, r2, #7
 801c190:	4093      	lsls	r3, r2
 801c192:	005b      	lsls	r3, r3, #1
 801c194:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c198:	9b05      	ldr	r3, [sp, #20]
 801c19a:	781b      	ldrb	r3, [r3, #0]
 801c19c:	410b      	asrs	r3, r1
 801c19e:	3101      	adds	r1, #1
 801c1a0:	b2c9      	uxtb	r1, r1
 801c1a2:	2908      	cmp	r1, #8
 801c1a4:	9104      	str	r1, [sp, #16]
 801c1a6:	9905      	ldr	r1, [sp, #20]
 801c1a8:	bf0a      	itet	eq
 801c1aa:	3102      	addeq	r1, #2
 801c1ac:	3101      	addne	r1, #1
 801c1ae:	9105      	streq	r1, [sp, #20]
 801c1b0:	b2db      	uxtb	r3, r3
 801c1b2:	bf0a      	itet	eq
 801c1b4:	2100      	moveq	r1, #0
 801c1b6:	9105      	strne	r1, [sp, #20]
 801c1b8:	9104      	streq	r1, [sp, #16]
 801c1ba:	4313      	orrs	r3, r2
 801c1bc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801c1be:	b29a      	uxth	r2, r3
 801c1c0:	4291      	cmp	r1, r2
 801c1c2:	d30a      	bcc.n	801c1da <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801c1c4:	f88b 3804 	strb.w	r3, [fp, #2052]	; 0x804
 801c1c8:	2301      	movs	r3, #1
 801c1ca:	9907      	ldr	r1, [sp, #28]
 801c1cc:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c1d0:	d30f      	bcc.n	801c1f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801c1d2:	2100      	movs	r1, #0
 801c1d4:	9301      	str	r3, [sp, #4]
 801c1d6:	9103      	str	r1, [sp, #12]
 801c1d8:	e032      	b.n	801c240 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801c1da:	9b07      	ldr	r3, [sp, #28]
 801c1dc:	429a      	cmp	r2, r3
 801c1de:	d318      	bcc.n	801c212 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801c1e0:	9b01      	ldr	r3, [sp, #4]
 801c1e2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	; 0x804
 801c1e6:	445b      	add	r3, fp
 801c1e8:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c1ec:	9b01      	ldr	r3, [sp, #4]
 801c1ee:	3301      	adds	r3, #1
 801c1f0:	b29b      	uxth	r3, r3
 801c1f2:	9907      	ldr	r1, [sp, #28]
 801c1f4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	; 0x804
 801c1f8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c1fc:	7108      	strb	r0, [r1, #4]
 801c1fe:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c200:	80c8      	strh	r0, [r1, #6]
 801c202:	9801      	ldr	r0, [sp, #4]
 801c204:	3001      	adds	r0, #1
 801c206:	7148      	strb	r0, [r1, #5]
 801c208:	9907      	ldr	r1, [sp, #28]
 801c20a:	3101      	adds	r1, #1
 801c20c:	b289      	uxth	r1, r1
 801c20e:	9107      	str	r1, [sp, #28]
 801c210:	e7df      	b.n	801c1d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801c212:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801c216:	4611      	mov	r1, r2
 801c218:	795b      	ldrb	r3, [r3, #5]
 801c21a:	f603 0004 	addw	r0, r3, #2052	; 0x804
 801c21e:	4458      	add	r0, fp
 801c220:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 801c222:	4406      	add	r6, r0
 801c224:	2e00      	cmp	r6, #0
 801c226:	dd06      	ble.n	801c236 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801c228:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801c22c:	790e      	ldrb	r6, [r1, #4]
 801c22e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801c232:	88c9      	ldrh	r1, [r1, #6]
 801c234:	e7f4      	b.n	801c220 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801c236:	f88b 1804 	strb.w	r1, [fp, #2052]	; 0x804
 801c23a:	b29b      	uxth	r3, r3
 801c23c:	e7c5      	b.n	801c1ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801c23e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c240:	920b      	str	r2, [sp, #44]	; 0x2c
 801c242:	4621      	mov	r1, r4
 801c244:	469e      	mov	lr, r3
 801c246:	e78f      	b.n	801c168 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801c248:	9a03      	ldr	r2, [sp, #12]
 801c24a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c24e:	442a      	add	r2, r5
 801c250:	ebae 0305 	sub.w	r3, lr, r5
 801c254:	b292      	uxth	r2, r2
 801c256:	b29b      	uxth	r3, r3
 801c258:	9203      	str	r2, [sp, #12]
 801c25a:	2500      	movs	r5, #0
 801c25c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c25e:	4542      	cmp	r2, r8
 801c260:	d88e      	bhi.n	801c180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801c262:	4621      	mov	r1, r4
 801c264:	e74e      	b.n	801c104 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801c266:	458e      	cmp	lr, r1
 801c268:	bf29      	itett	cs
 801c26a:	ebae 0301 	subcs.w	r3, lr, r1
 801c26e:	eba1 040e 	subcc.w	r4, r1, lr
 801c272:	b29b      	uxthcs	r3, r3
 801c274:	910c      	strcs	r1, [sp, #48]	; 0x30
 801c276:	bf2f      	iteee	cs
 801c278:	462c      	movcs	r4, r5
 801c27a:	b2a4      	uxthcc	r4, r4
 801c27c:	f8cd e030 	strcc.w	lr, [sp, #48]	; 0x30
 801c280:	462b      	movcc	r3, r5
 801c282:	f04f 0900 	mov.w	r9, #0
 801c286:	9a03      	ldr	r2, [sp, #12]
 801c288:	980c      	ldr	r0, [sp, #48]	; 0x30
 801c28a:	444a      	add	r2, r9
 801c28c:	4548      	cmp	r0, r9
 801c28e:	b292      	uxth	r2, r2
 801c290:	d074      	beq.n	801c37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801c292:	445a      	add	r2, fp
 801c294:	2004      	movs	r0, #4
 801c296:	4605      	mov	r5, r0
 801c298:	f892 2804 	ldrb.w	r2, [r2, #2052]	; 0x804
 801c29c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c29e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801c2a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 801c2a4:	5880      	ldr	r0, [r0, r2]
 801c2a6:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801c2aa:	d014      	beq.n	801c2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c2ac:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801c2b0:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801c2b4:	d112      	bne.n	801c2dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2b6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2b8:	2aff      	cmp	r2, #255	; 0xff
 801c2ba:	d10f      	bne.n	801c2dc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801c2bc:	0942      	lsrs	r2, r0, #5
 801c2be:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 801c2c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c2c6:	f025 0507 	bic.w	r5, r5, #7
 801c2ca:	4315      	orrs	r5, r2
 801c2cc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801c2d0:	4305      	orrs	r5, r0
 801c2d2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801c2d6:	f109 0901 	add.w	r9, r9, #1
 801c2da:	e7d4      	b.n	801c286 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801c2dc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801c2e0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801c2e4:	f006 02fc 	and.w	r2, r6, #252	; 0xfc
 801c2e8:	9215      	str	r2, [sp, #84]	; 0x54
 801c2ea:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801c2ec:	fb02 fa0a 	mul.w	sl, r2, sl
 801c2f0:	f10a 0201 	add.w	r2, sl, #1
 801c2f4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801c2f8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801c2fc:	1212      	asrs	r2, r2, #8
 801c2fe:	fa1f fa82 	uxth.w	sl, r2
 801c302:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801c306:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801c30a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801c30e:	43d2      	mvns	r2, r2
 801c310:	b2d2      	uxtb	r2, r2
 801c312:	fb16 f60a 	smulbb	r6, r6, sl
 801c316:	fa5f fc8c 	uxtb.w	ip, ip
 801c31a:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c31e:	b2c0      	uxtb	r0, r0
 801c320:	fb07 6702 	mla	r7, r7, r2, r6
 801c324:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c328:	9e15      	ldr	r6, [sp, #84]	; 0x54
 801c32a:	fb10 f00a 	smulbb	r0, r0, sl
 801c32e:	fb0c 0002 	mla	r0, ip, r2, r0
 801c332:	b2ed      	uxtb	r5, r5
 801c334:	b2bf      	uxth	r7, r7
 801c336:	fb15 f50a 	smulbb	r5, r5, sl
 801c33a:	b280      	uxth	r0, r0
 801c33c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c340:	fb06 5602 	mla	r6, r6, r2, r5
 801c344:	1c7a      	adds	r2, r7, #1
 801c346:	1c45      	adds	r5, r0, #1
 801c348:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c34c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c350:	b2b6      	uxth	r6, r6
 801c352:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c356:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801c35a:	432f      	orrs	r7, r5
 801c35c:	1c75      	adds	r5, r6, #1
 801c35e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c362:	096d      	lsrs	r5, r5, #5
 801c364:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c368:	432f      	orrs	r7, r5
 801c36a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c36e:	e7b2      	b.n	801c2d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c370:	2000ef1c 	.word	0x2000ef1c
 801c374:	2000ef16 	.word	0x2000ef16
 801c378:	fffff7fb 	.word	0xfffff7fb
 801c37c:	9203      	str	r2, [sp, #12]
 801c37e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c380:	458e      	cmp	lr, r1
 801c382:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c386:	f4ff af68 	bcc.w	801c25a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c38a:	9a16      	ldr	r2, [sp, #88]	; 0x58
 801c38c:	9906      	ldr	r1, [sp, #24]
 801c38e:	8812      	ldrh	r2, [r2, #0]
 801c390:	1a52      	subs	r2, r2, r1
 801c392:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c396:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c398:	9914      	ldr	r1, [sp, #80]	; 0x50
 801c39a:	3201      	adds	r2, #1
 801c39c:	428a      	cmp	r2, r1
 801c39e:	9209      	str	r2, [sp, #36]	; 0x24
 801c3a0:	d111      	bne.n	801c3c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c3a2:	f8bd 5068 	ldrh.w	r5, [sp, #104]	; 0x68
 801c3a6:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 801c3aa:	9b06      	ldr	r3, [sp, #24]
 801c3ac:	eba5 0509 	sub.w	r5, r5, r9
 801c3b0:	b2ad      	uxth	r5, r5
 801c3b2:	2d00      	cmp	r5, #0
 801c3b4:	bf08      	it	eq
 801c3b6:	4619      	moveq	r1, r3
 801c3b8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c3ba:	bf18      	it	ne
 801c3bc:	2100      	movne	r1, #0
 801c3be:	3301      	adds	r3, #1
 801c3c0:	930d      	str	r3, [sp, #52]	; 0x34
 801c3c2:	b289      	uxth	r1, r1
 801c3c4:	e695      	b.n	801c0f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c3c6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c3ca:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801c3ce:	1b2d      	subs	r5, r5, r4
 801c3d0:	b2ad      	uxth	r5, r5
 801c3d2:	2d00      	cmp	r5, #0
 801c3d4:	bf18      	it	ne
 801c3d6:	2400      	movne	r4, #0
 801c3d8:	e740      	b.n	801c25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c3da:	4b04      	ldr	r3, [pc, #16]	; (801c3ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c3dc:	6818      	ldr	r0, [r3, #0]
 801c3de:	6803      	ldr	r3, [r0, #0]
 801c3e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3e2:	4798      	blx	r3
 801c3e4:	b01d      	add	sp, #116	; 0x74
 801c3e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c3ea:	bf00      	nop
 801c3ec:	2000ef1c 	.word	0x2000ef1c

0801c3f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c3f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c3f4:	b09f      	sub	sp, #124	; 0x7c
 801c3f6:	e9cd 1213 	strd	r1, r2, [sp, #76]	; 0x4c
 801c3fa:	f89d 20a4 	ldrb.w	r2, [sp, #164]	; 0xa4
 801c3fe:	920a      	str	r2, [sp, #40]	; 0x28
 801c400:	461d      	mov	r5, r3
 801c402:	4604      	mov	r4, r0
 801c404:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c406:	2a00      	cmp	r2, #0
 801c408:	f000 81fa 	beq.w	801c800 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c40c:	6828      	ldr	r0, [r5, #0]
 801c40e:	6869      	ldr	r1, [r5, #4]
 801c410:	aa1a      	add	r2, sp, #104	; 0x68
 801c412:	c203      	stmia	r2!, {r0, r1}
 801c414:	6818      	ldr	r0, [r3, #0]
 801c416:	6859      	ldr	r1, [r3, #4]
 801c418:	aa1c      	add	r2, sp, #112	; 0x70
 801c41a:	c203      	stmia	r2!, {r0, r1}
 801c41c:	a81a      	add	r0, sp, #104	; 0x68
 801c41e:	f7f8 fb8f 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c422:	4629      	mov	r1, r5
 801c424:	a81c      	add	r0, sp, #112	; 0x70
 801c426:	f7f8 fbcf 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c42a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	; 0x6c
 801c42e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	; 0x6e
 801c432:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	; 0x76
 801c436:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801c43a:	bfd7      	itett	le
 801c43c:	b29a      	uxthle	r2, r3
 801c43e:	2201      	movgt	r2, #1
 801c440:	f44f 6180 	movle.w	r1, #1024	; 0x400
 801c444:	fb91 f2f2 	sdivle	r2, r1, r2
 801c448:	9201      	str	r2, [sp, #4]
 801c44a:	9801      	ldr	r0, [sp, #4]
 801c44c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	; 0x72
 801c450:	fb92 f0f0 	sdiv	r0, r2, r0
 801c454:	b280      	uxth	r0, r0
 801c456:	9010      	str	r0, [sp, #64]	; 0x40
 801c458:	9901      	ldr	r1, [sp, #4]
 801c45a:	9801      	ldr	r0, [sp, #4]
 801c45c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801c45e:	440e      	add	r6, r1
 801c460:	fb05 2510 	mls	r5, r5, r0, r2
 801c464:	fb15 f503 	smulbb	r5, r5, r3
 801c468:	3e01      	subs	r6, #1
 801c46a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801c46e:	fb96 f6f1 	sdiv	r6, r6, r1
 801c472:	f8bd 1070 	ldrh.w	r1, [sp, #112]	; 0x70
 801c476:	440d      	add	r5, r1
 801c478:	4419      	add	r1, r3
 801c47a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	; 0x6a
 801c47e:	f8ad 1070 	strh.w	r1, [sp, #112]	; 0x70
 801c482:	441a      	add	r2, r3
 801c484:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	; 0x74
 801c488:	9304      	str	r3, [sp, #16]
 801c48a:	4b96      	ldr	r3, [pc, #600]	; (801c6e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c48c:	f8ad 2072 	strh.w	r2, [sp, #114]	; 0x72
 801c490:	6818      	ldr	r0, [r3, #0]
 801c492:	6803      	ldr	r3, [r0, #0]
 801c494:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c496:	4798      	blx	r3
 801c498:	4b93      	ldr	r3, [pc, #588]	; (801c6e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c49a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	; 0x72
 801c49e:	881a      	ldrh	r2, [r3, #0]
 801c4a0:	f9bd c070 	ldrsh.w	ip, [sp, #112]	; 0x70
 801c4a4:	9318      	str	r3, [sp, #96]	; 0x60
 801c4a6:	fb02 c101 	mla	r1, r2, r1, ip
 801c4aa:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c4ae:	4357      	muls	r7, r2
 801c4b0:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c4b4:	3601      	adds	r6, #1
 801c4b6:	920b      	str	r2, [sp, #44]	; 0x2c
 801c4b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4ba:	4b8c      	ldr	r3, [pc, #560]	; (801c6ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c4bc:	b2b6      	uxth	r6, r6
 801c4be:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c4c2:	1d32      	adds	r2, r6, #4
 801c4c4:	9206      	str	r2, [sp, #24]
 801c4c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801c4c8:	43d2      	mvns	r2, r2
 801c4ca:	b2d2      	uxtb	r2, r2
 801c4cc:	b2ad      	uxth	r5, r5
 801c4ce:	9215      	str	r2, [sp, #84]	; 0x54
 801c4d0:	9a04      	ldr	r2, [sp, #16]
 801c4d2:	2d00      	cmp	r5, #0
 801c4d4:	bf0c      	ite	eq
 801c4d6:	4611      	moveq	r1, r2
 801c4d8:	2100      	movne	r1, #0
 801c4da:	2200      	movs	r2, #0
 801c4dc:	1b1b      	subs	r3, r3, r4
 801c4de:	b289      	uxth	r1, r1
 801c4e0:	920d      	str	r2, [sp, #52]	; 0x34
 801c4e2:	9319      	str	r3, [sp, #100]	; 0x64
 801c4e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801c4e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c4e8:	fa12 f383 	uxtah	r3, r2, r3
 801c4ec:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4ee:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c4f2:	3304      	adds	r3, #4
 801c4f4:	9307      	str	r3, [sp, #28]
 801c4f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c4f8:	455b      	cmp	r3, fp
 801c4fa:	f240 817c 	bls.w	801c7f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c4fe:	9a01      	ldr	r2, [sp, #4]
 801c500:	f8bd 306c 	ldrh.w	r3, [sp, #108]	; 0x6c
 801c504:	fbb5 f3f3 	udiv	r3, r5, r3
 801c508:	1ad3      	subs	r3, r2, r3
 801c50a:	b29b      	uxth	r3, r3
 801c50c:	9316      	str	r3, [sp, #88]	; 0x58
 801c50e:	9b07      	ldr	r3, [sp, #28]
 801c510:	9807      	ldr	r0, [sp, #28]
 801c512:	785a      	ldrb	r2, [r3, #1]
 801c514:	789b      	ldrb	r3, [r3, #2]
 801c516:	7800      	ldrb	r0, [r0, #0]
 801c518:	9011      	str	r0, [sp, #68]	; 0x44
 801c51a:	021b      	lsls	r3, r3, #8
 801c51c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c520:	9a07      	ldr	r2, [sp, #28]
 801c522:	78d2      	ldrb	r2, [r2, #3]
 801c524:	4313      	orrs	r3, r2
 801c526:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801c528:	3001      	adds	r0, #1
 801c52a:	441a      	add	r2, r3
 801c52c:	9005      	str	r0, [sp, #20]
 801c52e:	1c50      	adds	r0, r2, #1
 801c530:	9003      	str	r0, [sp, #12]
 801c532:	7852      	ldrb	r2, [r2, #1]
 801c534:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801c536:	0212      	lsls	r2, r2, #8
 801c538:	5cc3      	ldrb	r3, [r0, r3]
 801c53a:	f402 72ff 	and.w	r2, r2, #510	; 0x1fe
 801c53e:	431a      	orrs	r2, r3
 801c540:	b293      	uxth	r3, r2
 801c542:	930c      	str	r3, [sp, #48]	; 0x30
 801c544:	2300      	movs	r3, #0
 801c546:	f884 2804 	strb.w	r2, [r4, #2052]	; 0x804
 801c54a:	9308      	str	r3, [sp, #32]
 801c54c:	461a      	mov	r2, r3
 801c54e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 801c552:	930e      	str	r3, [sp, #56]	; 0x38
 801c554:	f04f 0801 	mov.w	r8, #1
 801c558:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 801c55c:	f8cd 8008 	str.w	r8, [sp, #8]
 801c560:	46c4      	mov	ip, r8
 801c562:	930f      	str	r3, [sp, #60]	; 0x3c
 801c564:	2d00      	cmp	r5, #0
 801c566:	d07c      	beq.n	801c662 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c568:	45ac      	cmp	ip, r5
 801c56a:	d26c      	bcs.n	801c646 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c56c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c56e:	eba5 050c 	sub.w	r5, r5, ip
 801c572:	455b      	cmp	r3, fp
 801c574:	b2ad      	uxth	r5, r5
 801c576:	4608      	mov	r0, r1
 801c578:	d802      	bhi.n	801c580 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c57a:	e070      	b.n	801c65e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c57c:	2b00      	cmp	r3, #0
 801c57e:	d15c      	bne.n	801c63a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c580:	9b03      	ldr	r3, [sp, #12]
 801c582:	9a02      	ldr	r2, [sp, #8]
 801c584:	785b      	ldrb	r3, [r3, #1]
 801c586:	9902      	ldr	r1, [sp, #8]
 801c588:	f1c2 0207 	rsb	r2, r2, #7
 801c58c:	4093      	lsls	r3, r2
 801c58e:	005b      	lsls	r3, r3, #1
 801c590:	f403 72ff 	and.w	r2, r3, #510	; 0x1fe
 801c594:	9b03      	ldr	r3, [sp, #12]
 801c596:	781b      	ldrb	r3, [r3, #0]
 801c598:	410b      	asrs	r3, r1
 801c59a:	3101      	adds	r1, #1
 801c59c:	b2c9      	uxtb	r1, r1
 801c59e:	2908      	cmp	r1, #8
 801c5a0:	9102      	str	r1, [sp, #8]
 801c5a2:	9903      	ldr	r1, [sp, #12]
 801c5a4:	bf0a      	itet	eq
 801c5a6:	3102      	addeq	r1, #2
 801c5a8:	3101      	addne	r1, #1
 801c5aa:	9103      	streq	r1, [sp, #12]
 801c5ac:	b2db      	uxtb	r3, r3
 801c5ae:	bf0a      	itet	eq
 801c5b0:	2100      	moveq	r1, #0
 801c5b2:	9103      	strne	r1, [sp, #12]
 801c5b4:	9102      	streq	r1, [sp, #8]
 801c5b6:	4313      	orrs	r3, r2
 801c5b8:	9911      	ldr	r1, [sp, #68]	; 0x44
 801c5ba:	b29a      	uxth	r2, r3
 801c5bc:	4291      	cmp	r1, r2
 801c5be:	d30a      	bcc.n	801c5d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c5c0:	f884 3804 	strb.w	r3, [r4, #2052]	; 0x804
 801c5c4:	2301      	movs	r3, #1
 801c5c6:	9905      	ldr	r1, [sp, #20]
 801c5c8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 801c5cc:	d30f      	bcc.n	801c5ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c5ce:	2100      	movs	r1, #0
 801c5d0:	4698      	mov	r8, r3
 801c5d2:	9100      	str	r1, [sp, #0]
 801c5d4:	e032      	b.n	801c63c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c5d6:	9b05      	ldr	r3, [sp, #20]
 801c5d8:	429a      	cmp	r2, r3
 801c5da:	d318      	bcc.n	801c60e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c5dc:	eb04 0308 	add.w	r3, r4, r8
 801c5e0:	f894 1804 	ldrb.w	r1, [r4, #2052]	; 0x804
 801c5e4:	f883 1804 	strb.w	r1, [r3, #2052]	; 0x804
 801c5e8:	f108 0301 	add.w	r3, r8, #1
 801c5ec:	b29b      	uxth	r3, r3
 801c5ee:	9905      	ldr	r1, [sp, #20]
 801c5f0:	f894 6804 	ldrb.w	r6, [r4, #2052]	; 0x804
 801c5f4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c5f8:	710e      	strb	r6, [r1, #4]
 801c5fa:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801c5fc:	80ce      	strh	r6, [r1, #6]
 801c5fe:	f108 0601 	add.w	r6, r8, #1
 801c602:	714e      	strb	r6, [r1, #5]
 801c604:	9905      	ldr	r1, [sp, #20]
 801c606:	3101      	adds	r1, #1
 801c608:	b289      	uxth	r1, r1
 801c60a:	9105      	str	r1, [sp, #20]
 801c60c:	e7df      	b.n	801c5ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c60e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c612:	4611      	mov	r1, r2
 801c614:	795b      	ldrb	r3, [r3, #5]
 801c616:	f603 0604 	addw	r6, r3, #2052	; 0x804
 801c61a:	4426      	add	r6, r4
 801c61c:	9f19      	ldr	r7, [sp, #100]	; 0x64
 801c61e:	4437      	add	r7, r6
 801c620:	2f00      	cmp	r7, #0
 801c622:	dd06      	ble.n	801c632 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c624:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c628:	790f      	ldrb	r7, [r1, #4]
 801c62a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c62e:	88c9      	ldrh	r1, [r1, #6]
 801c630:	e7f4      	b.n	801c61c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c632:	f884 1804 	strb.w	r1, [r4, #2052]	; 0x804
 801c636:	b29b      	uxth	r3, r3
 801c638:	e7c5      	b.n	801c5c6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c63a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c63c:	920c      	str	r2, [sp, #48]	; 0x30
 801c63e:	4601      	mov	r1, r0
 801c640:	9a00      	ldr	r2, [sp, #0]
 801c642:	469c      	mov	ip, r3
 801c644:	e78e      	b.n	801c564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c646:	1957      	adds	r7, r2, r5
 801c648:	ebac 0305 	sub.w	r3, ip, r5
 801c64c:	b2ba      	uxth	r2, r7
 801c64e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c652:	9200      	str	r2, [sp, #0]
 801c654:	b29b      	uxth	r3, r3
 801c656:	2500      	movs	r5, #0
 801c658:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801c65a:	455a      	cmp	r2, fp
 801c65c:	d88e      	bhi.n	801c57c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c65e:	4601      	mov	r1, r0
 801c660:	e749      	b.n	801c4f6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c662:	458c      	cmp	ip, r1
 801c664:	bf2c      	ite	cs
 801c666:	4628      	movcs	r0, r5
 801c668:	462b      	movcc	r3, r5
 801c66a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801c66c:	bf27      	ittee	cs
 801c66e:	9109      	strcs	r1, [sp, #36]	; 0x24
 801c670:	ebac 0301 	subcs.w	r3, ip, r1
 801c674:	eba1 000c 	subcc.w	r0, r1, ip
 801c678:	f8cd c024 	strcc.w	ip, [sp, #36]	; 0x24
 801c67c:	bf2c      	ite	cs
 801c67e:	b29b      	uxthcs	r3, r3
 801c680:	b280      	uxthcc	r0, r0
 801c682:	2dff      	cmp	r5, #255	; 0xff
 801c684:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801c686:	eb02 0705 	add.w	r7, r2, r5
 801c68a:	b2bd      	uxth	r5, r7
 801c68c:	9500      	str	r5, [sp, #0]
 801c68e:	d12f      	bne.n	801c6f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c690:	465e      	mov	r6, fp
 801c692:	9d00      	ldr	r5, [sp, #0]
 801c694:	42aa      	cmp	r2, r5
 801c696:	f040 8084 	bne.w	801c7a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c69a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c69c:	458c      	cmp	ip, r1
 801c69e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c6a2:	d3d8      	bcc.n	801c656 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c6a4:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c6a6:	9904      	ldr	r1, [sp, #16]
 801c6a8:	8812      	ldrh	r2, [r2, #0]
 801c6aa:	1a52      	subs	r2, r2, r1
 801c6ac:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c6b0:	9a08      	ldr	r2, [sp, #32]
 801c6b2:	9916      	ldr	r1, [sp, #88]	; 0x58
 801c6b4:	3201      	adds	r2, #1
 801c6b6:	428a      	cmp	r2, r1
 801c6b8:	9208      	str	r2, [sp, #32]
 801c6ba:	f040 8092 	bne.w	801c7e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c6be:	f8bd 5070 	ldrh.w	r5, [sp, #112]	; 0x70
 801c6c2:	f8bd c068 	ldrh.w	ip, [sp, #104]	; 0x68
 801c6c6:	9b04      	ldr	r3, [sp, #16]
 801c6c8:	eba5 050c 	sub.w	r5, r5, ip
 801c6cc:	b2ad      	uxth	r5, r5
 801c6ce:	2d00      	cmp	r5, #0
 801c6d0:	bf08      	it	eq
 801c6d2:	4619      	moveq	r1, r3
 801c6d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c6d6:	bf18      	it	ne
 801c6d8:	2100      	movne	r1, #0
 801c6da:	3301      	adds	r3, #1
 801c6dc:	930d      	str	r3, [sp, #52]	; 0x34
 801c6de:	b289      	uxth	r1, r1
 801c6e0:	e700      	b.n	801c4e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c6e2:	bf00      	nop
 801c6e4:	2000ef1c 	.word	0x2000ef1c
 801c6e8:	2000ef16 	.word	0x2000ef16
 801c6ec:	fffff7fb 	.word	0xfffff7fb
 801c6f0:	46d9      	mov	r9, fp
 801c6f2:	9d00      	ldr	r5, [sp, #0]
 801c6f4:	42aa      	cmp	r2, r5
 801c6f6:	d0d0      	beq.n	801c69a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c6f8:	1c55      	adds	r5, r2, #1
 801c6fa:	4422      	add	r2, r4
 801c6fc:	9517      	str	r5, [sp, #92]	; 0x5c
 801c6fe:	f892 e804 	ldrb.w	lr, [r2, #2052]	; 0x804
 801c702:	9a06      	ldr	r2, [sp, #24]
 801c704:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c708:	4472      	add	r2, lr
 801c70a:	9212      	str	r2, [sp, #72]	; 0x48
 801c70c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c70e:	f8b9 2000 	ldrh.w	r2, [r9]
 801c712:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c716:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c718:	1216      	asrs	r6, r2, #8
 801c71a:	fb1a fa07 	smulbb	sl, sl, r7
 801c71e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801c722:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c724:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c728:	fb06 a607 	mla	r6, r6, r7, sl
 801c72c:	9f12      	ldr	r7, [sp, #72]	; 0x48
 801c72e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c732:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c734:	10d5      	asrs	r5, r2, #3
 801c736:	fb1a fa07 	smulbb	sl, sl, r7
 801c73a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801c73e:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c740:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c744:	fb05 a507 	mla	r5, r5, r7, sl
 801c748:	9f06      	ldr	r7, [sp, #24]
 801c74a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c74e:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 801c750:	00d2      	lsls	r2, r2, #3
 801c752:	fb1e fe07 	smulbb	lr, lr, r7
 801c756:	b2d2      	uxtb	r2, r2
 801c758:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c75a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c75e:	b2b6      	uxth	r6, r6
 801c760:	fb02 e207 	mla	r2, r2, r7, lr
 801c764:	b292      	uxth	r2, r2
 801c766:	b2ad      	uxth	r5, r5
 801c768:	f106 0a01 	add.w	sl, r6, #1
 801c76c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c770:	f102 0e01 	add.w	lr, r2, #1
 801c774:	f105 0a01 	add.w	sl, r5, #1
 801c778:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c77c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c780:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801c784:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c788:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c78c:	ea4e 0606 	orr.w	r6, lr, r6
 801c790:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801c794:	ea46 060a 	orr.w	r6, r6, sl
 801c798:	f829 6b02 	strh.w	r6, [r9], #2
 801c79c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801c7a0:	e7a7      	b.n	801c6f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c7a2:	f102 0e01 	add.w	lr, r2, #1
 801c7a6:	4422      	add	r2, r4
 801c7a8:	9f06      	ldr	r7, [sp, #24]
 801c7aa:	f892 5804 	ldrb.w	r5, [r2, #2052]	; 0x804
 801c7ae:	9a06      	ldr	r2, [sp, #24]
 801c7b0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c7b4:	eb02 0a05 	add.w	sl, r2, r5
 801c7b8:	4a13      	ldr	r2, [pc, #76]	; (801c808 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c7ba:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c7be:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c7c2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c7c6:	00d2      	lsls	r2, r2, #3
 801c7c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c7cc:	ea49 0202 	orr.w	r2, r9, r2
 801c7d0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c7d4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c7d8:	f826 2b02 	strh.w	r2, [r6], #2
 801c7dc:	fa1f f28e 	uxth.w	r2, lr
 801c7e0:	e757      	b.n	801c692 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c7e2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c7e6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	; 0x6c
 801c7ea:	1a2d      	subs	r5, r5, r0
 801c7ec:	b2ad      	uxth	r5, r5
 801c7ee:	2d00      	cmp	r5, #0
 801c7f0:	bf18      	it	ne
 801c7f2:	2000      	movne	r0, #0
 801c7f4:	e730      	b.n	801c658 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c7f6:	4b05      	ldr	r3, [pc, #20]	; (801c80c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c7f8:	6818      	ldr	r0, [r3, #0]
 801c7fa:	6803      	ldr	r3, [r0, #0]
 801c7fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c7fe:	4798      	blx	r3
 801c800:	b01f      	add	sp, #124	; 0x7c
 801c802:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c806:	bf00      	nop
 801c808:	fffff800 	.word	0xfffff800
 801c80c:	2000ef1c 	.word	0x2000ef1c

0801c810 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c814:	b091      	sub	sp, #68	; 0x44
 801c816:	469b      	mov	fp, r3
 801c818:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801c81c:	4616      	mov	r6, r2
 801c81e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 801c822:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c826:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801c82a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c82e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801c832:	4604      	mov	r4, r0
 801c834:	460d      	mov	r5, r1
 801c836:	4640      	mov	r0, r8
 801c838:	4659      	mov	r1, fp
 801c83a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801c83e:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 801c842:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 801c846:	f7f3 f919 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801c84a:	4631      	mov	r1, r6
 801c84c:	4640      	mov	r0, r8
 801c84e:	f7f3 f915 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801c852:	4b74      	ldr	r3, [pc, #464]	; (801ca24 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c854:	8818      	ldrh	r0, [r3, #0]
 801c856:	4b74      	ldr	r3, [pc, #464]	; (801ca28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c858:	8819      	ldrh	r1, [r3, #0]
 801c85a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c85e:	2b00      	cmp	r3, #0
 801c860:	b202      	sxth	r2, r0
 801c862:	b20e      	sxth	r6, r1
 801c864:	da07      	bge.n	801c876 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c866:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801c86a:	4463      	add	r3, ip
 801c86c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801c870:	2300      	movs	r3, #0
 801c872:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801c876:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801c87a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801c87e:	1ad2      	subs	r2, r2, r3
 801c880:	4594      	cmp	ip, r2
 801c882:	bfc4      	itt	gt
 801c884:	1ac2      	subgt	r2, r0, r3
 801c886:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801c88a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c88e:	2a00      	cmp	r2, #0
 801c890:	da07      	bge.n	801c8a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c892:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 801c896:	4462      	add	r2, ip
 801c898:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801c89c:	2200      	movs	r2, #0
 801c89e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801c8a2:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 801c8a6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c8aa:	eba6 060a 	sub.w	r6, r6, sl
 801c8ae:	42b2      	cmp	r2, r6
 801c8b0:	bfc4      	itt	gt
 801c8b2:	eba1 020a 	subgt.w	r2, r1, sl
 801c8b6:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801c8ba:	4a5c      	ldr	r2, [pc, #368]	; (801ca2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c8bc:	7812      	ldrb	r2, [r2, #0]
 801c8be:	b9a2      	cbnz	r2, 801c8ea <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c8c0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 801c8c4:	4286      	cmp	r6, r0
 801c8c6:	4640      	mov	r0, r8
 801c8c8:	9303      	str	r3, [sp, #12]
 801c8ca:	bf14      	ite	ne
 801c8cc:	2600      	movne	r6, #0
 801c8ce:	2601      	moveq	r6, #1
 801c8d0:	f7f3 f917 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c8d4:	9b03      	ldr	r3, [sp, #12]
 801c8d6:	b160      	cbz	r0, 801c8f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c8d8:	2300      	movs	r3, #0
 801c8da:	8023      	strh	r3, [r4, #0]
 801c8dc:	8063      	strh	r3, [r4, #2]
 801c8de:	80a3      	strh	r3, [r4, #4]
 801c8e0:	4620      	mov	r0, r4
 801c8e2:	80e3      	strh	r3, [r4, #6]
 801c8e4:	b011      	add	sp, #68	; 0x44
 801c8e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c8ea:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801c8ee:	428e      	cmp	r6, r1
 801c8f0:	e7e9      	b.n	801c8c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c8f2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801c8f6:	9205      	str	r2, [sp, #20]
 801c8f8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801c8fc:	9206      	str	r2, [sp, #24]
 801c8fe:	f8bb 2000 	ldrh.w	r2, [fp]
 801c902:	900e      	str	r0, [sp, #56]	; 0x38
 801c904:	1a9b      	subs	r3, r3, r2
 801c906:	b21b      	sxth	r3, r3
 801c908:	9303      	str	r3, [sp, #12]
 801c90a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c90e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 801c912:	ebaa 0a03 	sub.w	sl, sl, r3
 801c916:	fa0f f38a 	sxth.w	r3, sl
 801c91a:	9304      	str	r3, [sp, #16]
 801c91c:	9b03      	ldr	r3, [sp, #12]
 801c91e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801c922:	9b04      	ldr	r3, [sp, #16]
 801c924:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801c928:	9b05      	ldr	r3, [sp, #20]
 801c92a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801c92e:	a90e      	add	r1, sp, #56	; 0x38
 801c930:	9b06      	ldr	r3, [sp, #24]
 801c932:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801c936:	a80c      	add	r0, sp, #48	; 0x30
 801c938:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 801c93c:	f7f8 f944 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c940:	4640      	mov	r0, r8
 801c942:	f7f8 f8fd 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c946:	a80e      	add	r0, sp, #56	; 0x38
 801c948:	f7f8 f8fa 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c94c:	4b38      	ldr	r3, [pc, #224]	; (801ca30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c94e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 801c952:	881b      	ldrh	r3, [r3, #0]
 801c954:	9307      	str	r3, [sp, #28]
 801c956:	682b      	ldr	r3, [r5, #0]
 801c958:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 801ca34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c95c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c95e:	4628      	mov	r0, r5
 801c960:	4798      	blx	r3
 801c962:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 801c966:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801c96a:	4681      	mov	r9, r0
 801c96c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c970:	f8db 0000 	ldr.w	r0, [fp]
 801c974:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801c976:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c97a:	6803      	ldr	r3, [r0, #0]
 801c97c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801c97e:	4798      	blx	r3
 801c980:	4607      	mov	r7, r0
 801c982:	f8db 0000 	ldr.w	r0, [fp]
 801c986:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801c98a:	6803      	ldr	r3, [r0, #0]
 801c98c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801c990:	9109      	str	r1, [sp, #36]	; 0x24
 801c992:	9208      	str	r2, [sp, #32]
 801c994:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801c996:	4798      	blx	r3
 801c998:	f010 0f01 	tst.w	r0, #1
 801c99c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c9a0:	d012      	beq.n	801c9c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c9a2:	f8db 0000 	ldr.w	r0, [fp]
 801c9a6:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801c9aa:	6803      	ldr	r3, [r0, #0]
 801c9ac:	9200      	str	r2, [sp, #0]
 801c9ae:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 801c9b0:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c9b4:	462b      	mov	r3, r5
 801c9b6:	47b0      	blx	r6
 801c9b8:	9b03      	ldr	r3, [sp, #12]
 801c9ba:	8023      	strh	r3, [r4, #0]
 801c9bc:	9b04      	ldr	r3, [sp, #16]
 801c9be:	8063      	strh	r3, [r4, #2]
 801c9c0:	9b05      	ldr	r3, [sp, #20]
 801c9c2:	80a3      	strh	r3, [r4, #4]
 801c9c4:	9b06      	ldr	r3, [sp, #24]
 801c9c6:	e78b      	b.n	801c8e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c9c8:	fb09 f202 	mul.w	r2, r9, r2
 801c9cc:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c9d0:	440f      	add	r7, r1
 801c9d2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 801c9d6:	b166      	cbz	r6, 801c9f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9d8:	9a07      	ldr	r2, [sp, #28]
 801c9da:	4592      	cmp	sl, r2
 801c9dc:	d109      	bne.n	801c9f2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c9de:	f8db 0000 	ldr.w	r0, [fp]
 801c9e2:	6802      	ldr	r2, [r0, #0]
 801c9e4:	fb09 f303 	mul.w	r3, r9, r3
 801c9e8:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801c9ea:	4629      	mov	r1, r5
 801c9ec:	463a      	mov	r2, r7
 801c9ee:	47b0      	blx	r6
 801c9f0:	e7e2      	b.n	801c9b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c9f2:	fb0a f303 	mul.w	r3, sl, r3
 801c9f6:	f8df b03c 	ldr.w	fp, [pc, #60]	; 801ca34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c9fa:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c9fe:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801ca02:	4545      	cmp	r5, r8
 801ca04:	d2d8      	bcs.n	801c9b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801ca06:	f8db 0000 	ldr.w	r0, [fp]
 801ca0a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801ca0e:	6802      	ldr	r2, [r0, #0]
 801ca10:	4629      	mov	r1, r5
 801ca12:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 801ca16:	005b      	lsls	r3, r3, #1
 801ca18:	463a      	mov	r2, r7
 801ca1a:	47d0      	blx	sl
 801ca1c:	444f      	add	r7, r9
 801ca1e:	4435      	add	r5, r6
 801ca20:	e7ef      	b.n	801ca02 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801ca22:	bf00      	nop
 801ca24:	2000ef10 	.word	0x2000ef10
 801ca28:	2000ef12 	.word	0x2000ef12
 801ca2c:	2000ef14 	.word	0x2000ef14
 801ca30:	2000ef16 	.word	0x2000ef16
 801ca34:	2000ef1c 	.word	0x2000ef1c

0801ca38 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801ca38:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ca3a:	4606      	mov	r6, r0
 801ca3c:	b087      	sub	sp, #28
 801ca3e:	460c      	mov	r4, r1
 801ca40:	4617      	mov	r7, r2
 801ca42:	461d      	mov	r5, r3
 801ca44:	b333      	cbz	r3, 801ca94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca46:	4608      	mov	r0, r1
 801ca48:	f7f3 f85b 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ca4c:	bb10      	cbnz	r0, 801ca94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801ca4e:	6820      	ldr	r0, [r4, #0]
 801ca50:	6861      	ldr	r1, [r4, #4]
 801ca52:	4c1c      	ldr	r4, [pc, #112]	; (801cac4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801ca54:	ab04      	add	r3, sp, #16
 801ca56:	c303      	stmia	r3!, {r0, r1}
 801ca58:	a804      	add	r0, sp, #16
 801ca5a:	f7f8 f871 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ca5e:	6820      	ldr	r0, [r4, #0]
 801ca60:	6803      	ldr	r3, [r0, #0]
 801ca62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ca64:	4798      	blx	r3
 801ca66:	2dff      	cmp	r5, #255	; 0xff
 801ca68:	d016      	beq.n	801ca98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801ca6a:	f010 0f08 	tst.w	r0, #8
 801ca6e:	6820      	ldr	r0, [r4, #0]
 801ca70:	d015      	beq.n	801ca9e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801ca72:	2400      	movs	r4, #0
 801ca74:	6801      	ldr	r1, [r0, #0]
 801ca76:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ca7a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ca7e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801ca82:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801ca86:	9401      	str	r4, [sp, #4]
 801ca88:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801ca8c:	9400      	str	r4, [sp, #0]
 801ca8e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 801ca90:	4639      	mov	r1, r7
 801ca92:	47a0      	blx	r4
 801ca94:	b007      	add	sp, #28
 801ca96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801ca98:	f010 0f02 	tst.w	r0, #2
 801ca9c:	e7e7      	b.n	801ca6e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801ca9e:	6803      	ldr	r3, [r0, #0]
 801caa0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801caa2:	4798      	blx	r3
 801caa4:	4b08      	ldr	r3, [pc, #32]	; (801cac8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801caa6:	881a      	ldrh	r2, [r3, #0]
 801caa8:	6833      	ldr	r3, [r6, #0]
 801caaa:	e9cd 7500 	strd	r7, r5, [sp]
 801caae:	4601      	mov	r1, r0
 801cab0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 801cab2:	4630      	mov	r0, r6
 801cab4:	ab04      	add	r3, sp, #16
 801cab6:	47a8      	blx	r5
 801cab8:	6820      	ldr	r0, [r4, #0]
 801caba:	6803      	ldr	r3, [r0, #0]
 801cabc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cabe:	4798      	blx	r3
 801cac0:	e7e8      	b.n	801ca94 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801cac2:	bf00      	nop
 801cac4:	2000ef1c 	.word	0x2000ef1c
 801cac8:	2000ef16 	.word	0x2000ef16

0801cacc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801cacc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cad0:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 801cad4:	9e08      	ldr	r6, [sp, #32]
 801cad6:	4688      	mov	r8, r1
 801cad8:	4614      	mov	r4, r2
 801cada:	461d      	mov	r5, r3
 801cadc:	2f00      	cmp	r7, #0
 801cade:	f000 80a9 	beq.w	801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cae2:	4618      	mov	r0, r3
 801cae4:	f7f3 f80d 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801cae8:	2800      	cmp	r0, #0
 801caea:	f040 80a3 	bne.w	801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801caee:	f9b5 1000 	ldrsh.w	r1, [r5]
 801caf2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801caf6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801cafa:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801cafe:	fb04 1303 	mla	r3, r4, r3, r1
 801cb02:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801cb06:	4365      	muls	r5, r4
 801cb08:	2fff      	cmp	r7, #255	; 0xff
 801cb0a:	eba4 0200 	sub.w	r2, r4, r0
 801cb0e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801cb12:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801cb16:	d04a      	beq.n	801cbae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801cb18:	b2bc      	uxth	r4, r7
 801cb1a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801cb1e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801cb22:	fa5f f788 	uxtb.w	r7, r8
 801cb26:	b2f3      	uxtb	r3, r6
 801cb28:	0040      	lsls	r0, r0, #1
 801cb2a:	fb0e fe04 	mul.w	lr, lr, r4
 801cb2e:	4367      	muls	r7, r4
 801cb30:	4363      	muls	r3, r4
 801cb32:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801cb36:	fa1f fc8c 	uxth.w	ip, ip
 801cb3a:	42a9      	cmp	r1, r5
 801cb3c:	d27a      	bcs.n	801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cb3e:	eb01 0900 	add.w	r9, r1, r0
 801cb42:	4549      	cmp	r1, r9
 801cb44:	d231      	bcs.n	801cbaa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801cb46:	880a      	ldrh	r2, [r1, #0]
 801cb48:	1214      	asrs	r4, r2, #8
 801cb4a:	10d6      	asrs	r6, r2, #3
 801cb4c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801cb50:	00d2      	lsls	r2, r2, #3
 801cb52:	b2d2      	uxtb	r2, r2
 801cb54:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801cb58:	fb14 f40c 	smulbb	r4, r4, ip
 801cb5c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cb60:	4474      	add	r4, lr
 801cb62:	fb12 f20c 	smulbb	r2, r2, ip
 801cb66:	b2a4      	uxth	r4, r4
 801cb68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801cb6c:	441a      	add	r2, r3
 801cb6e:	b292      	uxth	r2, r2
 801cb70:	f104 0a01 	add.w	sl, r4, #1
 801cb74:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801cb78:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801cb7c:	fb16 f60c 	smulbb	r6, r6, ip
 801cb80:	f102 0a01 	add.w	sl, r2, #1
 801cb84:	443e      	add	r6, r7
 801cb86:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801cb8a:	b2b6      	uxth	r6, r6
 801cb8c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801cb90:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cb94:	4322      	orrs	r2, r4
 801cb96:	1c74      	adds	r4, r6, #1
 801cb98:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801cb9c:	0976      	lsrs	r6, r6, #5
 801cb9e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801cba2:	4332      	orrs	r2, r6
 801cba4:	f821 2b02 	strh.w	r2, [r1], #2
 801cba8:	e7cb      	b.n	801cb42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801cbaa:	4441      	add	r1, r8
 801cbac:	e7c5      	b.n	801cb3a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801cbae:	4f22      	ldr	r7, [pc, #136]	; (801cc38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801cbb0:	0973      	lsrs	r3, r6, #5
 801cbb2:	ea08 0707 	and.w	r7, r8, r7
 801cbb6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cbba:	433b      	orrs	r3, r7
 801cbbc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801cbc0:	4333      	orrs	r3, r6
 801cbc2:	07e7      	lsls	r7, r4, #31
 801cbc4:	b29b      	uxth	r3, r3
 801cbc6:	d50b      	bpl.n	801cbe0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801cbc8:	0040      	lsls	r0, r0, #1
 801cbca:	0052      	lsls	r2, r2, #1
 801cbcc:	42a9      	cmp	r1, r5
 801cbce:	d231      	bcs.n	801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cbd0:	180c      	adds	r4, r1, r0
 801cbd2:	42a1      	cmp	r1, r4
 801cbd4:	d202      	bcs.n	801cbdc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801cbd6:	f821 3b02 	strh.w	r3, [r1], #2
 801cbda:	e7fa      	b.n	801cbd2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801cbdc:	4411      	add	r1, r2
 801cbde:	e7f5      	b.n	801cbcc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801cbe0:	078e      	lsls	r6, r1, #30
 801cbe2:	d008      	beq.n	801cbf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801cbe4:	0066      	lsls	r6, r4, #1
 801cbe6:	460a      	mov	r2, r1
 801cbe8:	42aa      	cmp	r2, r5
 801cbea:	d202      	bcs.n	801cbf2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801cbec:	8013      	strh	r3, [r2, #0]
 801cbee:	4432      	add	r2, r6
 801cbf0:	e7fa      	b.n	801cbe8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801cbf2:	3102      	adds	r1, #2
 801cbf4:	3801      	subs	r0, #1
 801cbf6:	07c2      	lsls	r2, r0, #31
 801cbf8:	d50b      	bpl.n	801cc12 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801cbfa:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801cbfe:	3a01      	subs	r2, #1
 801cc00:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801cc04:	0066      	lsls	r6, r4, #1
 801cc06:	42aa      	cmp	r2, r5
 801cc08:	d202      	bcs.n	801cc10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801cc0a:	8013      	strh	r3, [r2, #0]
 801cc0c:	4432      	add	r2, r6
 801cc0e:	e7fa      	b.n	801cc06 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801cc10:	3801      	subs	r0, #1
 801cc12:	b178      	cbz	r0, 801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc14:	1040      	asrs	r0, r0, #1
 801cc16:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801cc1a:	0080      	lsls	r0, r0, #2
 801cc1c:	0064      	lsls	r4, r4, #1
 801cc1e:	42a9      	cmp	r1, r5
 801cc20:	d208      	bcs.n	801cc34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801cc22:	180e      	adds	r6, r1, r0
 801cc24:	460a      	mov	r2, r1
 801cc26:	42b2      	cmp	r2, r6
 801cc28:	d202      	bcs.n	801cc30 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801cc2a:	f842 3b04 	str.w	r3, [r2], #4
 801cc2e:	e7fa      	b.n	801cc26 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801cc30:	4421      	add	r1, r4
 801cc32:	e7f4      	b.n	801cc1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801cc34:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cc38:	00fff800 	.word	0x00fff800

0801cc3c <_ZN8touchgfx8LCD16bppC1Ev>:
 801cc3c:	2200      	movs	r2, #0
 801cc3e:	4912      	ldr	r1, [pc, #72]	; (801cc88 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801cc40:	6042      	str	r2, [r0, #4]
 801cc42:	6001      	str	r1, [r0, #0]
 801cc44:	e9c0 2202 	strd	r2, r2, [r0, #8]
 801cc48:	e9c0 2204 	strd	r2, r2, [r0, #16]
 801cc4c:	e9c0 2206 	strd	r2, r2, [r0, #24]
 801cc50:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801cc54:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 801cc58:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 801cc5c:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 801cc60:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 801cc64:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 801cc68:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801cc6c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 801cc70:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 801cc74:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 801cc78:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801cc7c:	e9c0 221e 	strd	r2, r2, [r0, #120]	; 0x78
 801cc80:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 801cc84:	4770      	bx	lr
 801cc86:	bf00      	nop
 801cc88:	0802a9dc 	.word	0x0802a9dc

0801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801cc8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc90:	460d      	mov	r5, r1
 801cc92:	b08d      	sub	sp, #52	; 0x34
 801cc94:	4604      	mov	r4, r0
 801cc96:	6808      	ldr	r0, [r1, #0]
 801cc98:	6849      	ldr	r1, [r1, #4]
 801cc9a:	4699      	mov	r9, r3
 801cc9c:	ab08      	add	r3, sp, #32
 801cc9e:	c303      	stmia	r3!, {r0, r1}
 801cca0:	6810      	ldr	r0, [r2, #0]
 801cca2:	6851      	ldr	r1, [r2, #4]
 801cca4:	ab0a      	add	r3, sp, #40	; 0x28
 801cca6:	c303      	stmia	r3!, {r0, r1}
 801cca8:	a808      	add	r0, sp, #32
 801ccaa:	f7f7 ff49 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccae:	4629      	mov	r1, r5
 801ccb0:	a80a      	add	r0, sp, #40	; 0x28
 801ccb2:	f7f7 ff89 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccb6:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801ccba:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801ccbe:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801ccc2:	4d63      	ldr	r5, [pc, #396]	; (801ce50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ccc4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 801ccc8:	6828      	ldr	r0, [r5, #0]
 801ccca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801ccce:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ccd2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801ccd6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801ccda:	440a      	add	r2, r1
 801ccdc:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801cce0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801cce4:	4413      	add	r3, r2
 801cce6:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ccea:	6803      	ldr	r3, [r0, #0]
 801ccec:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801ccee:	4798      	blx	r3
 801ccf0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ccf4:	d119      	bne.n	801cd2a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801ccf6:	f010 0f20 	tst.w	r0, #32
 801ccfa:	6828      	ldr	r0, [r5, #0]
 801ccfc:	d018      	beq.n	801cd30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801ccfe:	2500      	movs	r5, #0
 801cd00:	6801      	ldr	r1, [r0, #0]
 801cd02:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801cd06:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 801cd0a:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801cd0e:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801cd12:	9502      	str	r5, [sp, #8]
 801cd14:	b2b6      	uxth	r6, r6
 801cd16:	fa1f f588 	uxth.w	r5, r8
 801cd1a:	9601      	str	r6, [sp, #4]
 801cd1c:	9500      	str	r5, [sp, #0]
 801cd1e:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 801cd20:	4621      	mov	r1, r4
 801cd22:	47a8      	blx	r5
 801cd24:	b00d      	add	sp, #52	; 0x34
 801cd26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd2a:	f010 0f40 	tst.w	r0, #64	; 0x40
 801cd2e:	e7e4      	b.n	801ccfa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801cd30:	6803      	ldr	r3, [r0, #0]
 801cd32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cd34:	4798      	blx	r3
 801cd36:	4947      	ldr	r1, [pc, #284]	; (801ce54 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801cd38:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801cd3c:	880b      	ldrh	r3, [r1, #0]
 801cd3e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801cd42:	fb03 5202 	mla	r2, r3, r2, r5
 801cd46:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cd4a:	4373      	muls	r3, r6
 801cd4c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cd50:	9307      	str	r3, [sp, #28]
 801cd52:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cd56:	9306      	str	r3, [sp, #24]
 801cd58:	468a      	mov	sl, r1
 801cd5a:	9b07      	ldr	r3, [sp, #28]
 801cd5c:	4298      	cmp	r0, r3
 801cd5e:	d270      	bcs.n	801ce42 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801cd60:	9b06      	ldr	r3, [sp, #24]
 801cd62:	4621      	mov	r1, r4
 801cd64:	eb00 0b03 	add.w	fp, r0, r3
 801cd68:	4558      	cmp	r0, fp
 801cd6a:	d25d      	bcs.n	801ce28 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801cd6c:	f851 4b04 	ldr.w	r4, [r1], #4
 801cd70:	0e23      	lsrs	r3, r4, #24
 801cd72:	d014      	beq.n	801cd9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cd74:	2bff      	cmp	r3, #255	; 0xff
 801cd76:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801cd7a:	d112      	bne.n	801cda2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cd80:	d10f      	bne.n	801cda2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801cd82:	0963      	lsrs	r3, r4, #5
 801cd84:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801cd88:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cd8c:	f02c 0c07 	bic.w	ip, ip, #7
 801cd90:	ea43 0c0c 	orr.w	ip, r3, ip
 801cd94:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801cd98:	ea4c 0404 	orr.w	r4, ip, r4
 801cd9c:	8004      	strh	r4, [r0, #0]
 801cd9e:	3002      	adds	r0, #2
 801cda0:	e7e2      	b.n	801cd68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801cda2:	fb09 f303 	mul.w	r3, r9, r3
 801cda6:	8807      	ldrh	r7, [r0, #0]
 801cda8:	1c5a      	adds	r2, r3, #1
 801cdaa:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801cdae:	1212      	asrs	r2, r2, #8
 801cdb0:	123e      	asrs	r6, r7, #8
 801cdb2:	b293      	uxth	r3, r2
 801cdb4:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801cdb8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801cdbc:	43d2      	mvns	r2, r2
 801cdbe:	b2d2      	uxtb	r2, r2
 801cdc0:	10fd      	asrs	r5, r7, #3
 801cdc2:	fb1e fe03 	smulbb	lr, lr, r3
 801cdc6:	00ff      	lsls	r7, r7, #3
 801cdc8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cdcc:	fb06 e602 	mla	r6, r6, r2, lr
 801cdd0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cdd4:	b2ff      	uxtb	r7, r7
 801cdd6:	fa5f fc8c 	uxtb.w	ip, ip
 801cdda:	b2e4      	uxtb	r4, r4
 801cddc:	b2b6      	uxth	r6, r6
 801cdde:	fb1c fc03 	smulbb	ip, ip, r3
 801cde2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cde6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801cdea:	fb14 f403 	smulbb	r4, r4, r3
 801cdee:	fb05 c502 	mla	r5, r5, r2, ip
 801cdf2:	f106 0e01 	add.w	lr, r6, #1
 801cdf6:	fb07 4702 	mla	r7, r7, r2, r4
 801cdfa:	b2ad      	uxth	r5, r5
 801cdfc:	b2bf      	uxth	r7, r7
 801cdfe:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801ce02:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801ce06:	f105 0c01 	add.w	ip, r5, #1
 801ce0a:	1c7e      	adds	r6, r7, #1
 801ce0c:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801ce10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ce14:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801ce18:	096d      	lsrs	r5, r5, #5
 801ce1a:	ea46 060e 	orr.w	r6, r6, lr
 801ce1e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce22:	432e      	orrs	r6, r5
 801ce24:	8006      	strh	r6, [r0, #0]
 801ce26:	e7ba      	b.n	801cd9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ce28:	f8ba 3000 	ldrh.w	r3, [sl]
 801ce2c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 801ce30:	eba3 0308 	sub.w	r3, r3, r8
 801ce34:	eba4 0408 	sub.w	r4, r4, r8
 801ce38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce3c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801ce40:	e78b      	b.n	801cd5a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801ce42:	4b03      	ldr	r3, [pc, #12]	; (801ce50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801ce44:	6818      	ldr	r0, [r3, #0]
 801ce46:	6803      	ldr	r3, [r0, #0]
 801ce48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce4a:	4798      	blx	r3
 801ce4c:	e76a      	b.n	801cd24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801ce4e:	bf00      	nop
 801ce50:	2000ef1c 	.word	0x2000ef1c
 801ce54:	2000ef16 	.word	0x2000ef16

0801ce58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801ce58:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801ce5c:	460c      	mov	r4, r1
 801ce5e:	b085      	sub	sp, #20
 801ce60:	6810      	ldr	r0, [r2, #0]
 801ce62:	6851      	ldr	r1, [r2, #4]
 801ce64:	466d      	mov	r5, sp
 801ce66:	c503      	stmia	r5!, {r0, r1}
 801ce68:	6818      	ldr	r0, [r3, #0]
 801ce6a:	6859      	ldr	r1, [r3, #4]
 801ce6c:	4616      	mov	r6, r2
 801ce6e:	c503      	stmia	r5!, {r0, r1}
 801ce70:	4668      	mov	r0, sp
 801ce72:	f7f7 fe65 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce76:	4631      	mov	r1, r6
 801ce78:	a802      	add	r0, sp, #8
 801ce7a:	f7f7 fea5 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce7e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801ce82:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801ce86:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ce8a:	4d28      	ldr	r5, [pc, #160]	; (801cf2c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801ce8c:	4e28      	ldr	r6, [pc, #160]	; (801cf30 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801ce8e:	6828      	ldr	r0, [r5, #0]
 801ce90:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801ce94:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801ce98:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce9c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cea0:	f8bd 1000 	ldrh.w	r1, [sp]
 801cea4:	440a      	add	r2, r1
 801cea6:	f8ad 2008 	strh.w	r2, [sp, #8]
 801ceaa:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801ceae:	4413      	add	r3, r2
 801ceb0:	f8ad 300a 	strh.w	r3, [sp, #10]
 801ceb4:	6803      	ldr	r3, [r0, #0]
 801ceb6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801ceb8:	4798      	blx	r3
 801ceba:	8833      	ldrh	r3, [r6, #0]
 801cebc:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cec0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cec4:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801cf34 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cec8:	fb03 1202 	mla	r2, r3, r2, r1
 801cecc:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ced0:	fb08 f303 	mul.w	r3, r8, r3
 801ced4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ced8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cedc:	4298      	cmp	r0, r3
 801cede:	d21d      	bcs.n	801cf1c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cee0:	eb00 080c 	add.w	r8, r0, ip
 801cee4:	4540      	cmp	r0, r8
 801cee6:	d20f      	bcs.n	801cf08 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cee8:	f854 1b04 	ldr.w	r1, [r4], #4
 801ceec:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cef0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cef4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cef8:	ea42 0209 	orr.w	r2, r2, r9
 801cefc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cf00:	430a      	orrs	r2, r1
 801cf02:	f820 2b02 	strh.w	r2, [r0], #2
 801cf06:	e7ed      	b.n	801cee4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cf08:	8832      	ldrh	r2, [r6, #0]
 801cf0a:	1bd2      	subs	r2, r2, r7
 801cf0c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf10:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cf14:	1bd2      	subs	r2, r2, r7
 801cf16:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cf1a:	e7df      	b.n	801cedc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cf1c:	6828      	ldr	r0, [r5, #0]
 801cf1e:	6803      	ldr	r3, [r0, #0]
 801cf20:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cf22:	4798      	blx	r3
 801cf24:	b005      	add	sp, #20
 801cf26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cf2a:	bf00      	nop
 801cf2c:	2000ef1c 	.word	0x2000ef1c
 801cf30:	2000ef16 	.word	0x2000ef16
 801cf34:	fffff800 	.word	0xfffff800

0801cf38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cf38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cf3c:	460e      	mov	r6, r1
 801cf3e:	b08e      	sub	sp, #56	; 0x38
 801cf40:	4604      	mov	r4, r0
 801cf42:	6808      	ldr	r0, [r1, #0]
 801cf44:	6849      	ldr	r1, [r1, #4]
 801cf46:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 801d120 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cf4a:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801d124 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cf4e:	461d      	mov	r5, r3
 801cf50:	ab0a      	add	r3, sp, #40	; 0x28
 801cf52:	c303      	stmia	r3!, {r0, r1}
 801cf54:	6810      	ldr	r0, [r2, #0]
 801cf56:	6851      	ldr	r1, [r2, #4]
 801cf58:	ab0c      	add	r3, sp, #48	; 0x30
 801cf5a:	c303      	stmia	r3!, {r0, r1}
 801cf5c:	a80a      	add	r0, sp, #40	; 0x28
 801cf5e:	f7f7 fdef 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf62:	4631      	mov	r1, r6
 801cf64:	a80c      	add	r0, sp, #48	; 0x30
 801cf66:	f7f7 fe2f 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf6a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 801cf6e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 801cf72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cf76:	f8d8 0000 	ldr.w	r0, [r8]
 801cf7a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 801cf7e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 801cf82:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cf86:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cf8a:	440c      	add	r4, r1
 801cf8c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 801cf90:	440a      	add	r2, r1
 801cf92:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801cf96:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 801cf9a:	4413      	add	r3, r2
 801cf9c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801cfa0:	6803      	ldr	r3, [r0, #0]
 801cfa2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801cfa4:	4798      	blx	r3
 801cfa6:	2dff      	cmp	r5, #255	; 0xff
 801cfa8:	d124      	bne.n	801cff4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cfaa:	f010 0f01 	tst.w	r0, #1
 801cfae:	f8d8 0000 	ldr.w	r0, [r8]
 801cfb2:	d022      	beq.n	801cffa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cfb4:	2100      	movs	r1, #0
 801cfb6:	f8d0 c000 	ldr.w	ip, [r0]
 801cfba:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801cfbe:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801cfc2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cfc6:	f04f 0e01 	mov.w	lr, #1
 801cfca:	f8cd e018 	str.w	lr, [sp, #24]
 801cfce:	f8b9 e000 	ldrh.w	lr, [r9]
 801cfd2:	9503      	str	r5, [sp, #12]
 801cfd4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801cfd8:	b2b6      	uxth	r6, r6
 801cfda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801cfde:	9102      	str	r1, [sp, #8]
 801cfe0:	b2bf      	uxth	r7, r7
 801cfe2:	9601      	str	r6, [sp, #4]
 801cfe4:	9700      	str	r7, [sp, #0]
 801cfe6:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 801cfea:	4621      	mov	r1, r4
 801cfec:	47a8      	blx	r5
 801cfee:	b00e      	add	sp, #56	; 0x38
 801cff0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801cff4:	f010 0f04 	tst.w	r0, #4
 801cff8:	e7d9      	b.n	801cfae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801cffa:	6803      	ldr	r3, [r0, #0]
 801cffc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801cffe:	4798      	blx	r3
 801d000:	f8b9 3000 	ldrh.w	r3, [r9]
 801d004:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 801d008:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 801d00c:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801d010:	fb03 1202 	mla	r2, r3, r2, r1
 801d014:	ebac 0c07 	sub.w	ip, ip, r7
 801d018:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d01c:	435e      	muls	r6, r3
 801d01e:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801d022:	2dff      	cmp	r5, #255	; 0xff
 801d024:	eba3 0707 	sub.w	r7, r3, r7
 801d028:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801d02c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801d030:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801d034:	d049      	beq.n	801d0ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801d036:	43eb      	mvns	r3, r5
 801d038:	fa1f f985 	uxth.w	r9, r5
 801d03c:	b2db      	uxtb	r3, r3
 801d03e:	42b0      	cmp	r0, r6
 801d040:	d266      	bcs.n	801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d042:	eb00 0a0e 	add.w	sl, r0, lr
 801d046:	4550      	cmp	r0, sl
 801d048:	4621      	mov	r1, r4
 801d04a:	f104 0403 	add.w	r4, r4, #3
 801d04e:	d25b      	bcs.n	801d108 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801d050:	8802      	ldrh	r2, [r0, #0]
 801d052:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d056:	ea4f 2822 	mov.w	r8, r2, asr #8
 801d05a:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 801d05e:	fb11 f109 	smulbb	r1, r1, r9
 801d062:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801d066:	10d5      	asrs	r5, r2, #3
 801d068:	fb08 1803 	mla	r8, r8, r3, r1
 801d06c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801d070:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d074:	fb11 f109 	smulbb	r1, r1, r9
 801d078:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801d07c:	fb05 1503 	mla	r5, r5, r3, r1
 801d080:	00d2      	lsls	r2, r2, #3
 801d082:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d086:	b2d2      	uxtb	r2, r2
 801d088:	fb11 f109 	smulbb	r1, r1, r9
 801d08c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801d090:	fa1f f888 	uxth.w	r8, r8
 801d094:	fb02 1203 	mla	r2, r2, r3, r1
 801d098:	b292      	uxth	r2, r2
 801d09a:	f108 0101 	add.w	r1, r8, #1
 801d09e:	b2ad      	uxth	r5, r5
 801d0a0:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801d0a4:	1c51      	adds	r1, r2, #1
 801d0a6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801d0aa:	1c69      	adds	r1, r5, #1
 801d0ac:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d0b0:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801d0b4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d0b8:	096d      	lsrs	r5, r5, #5
 801d0ba:	ea42 0208 	orr.w	r2, r2, r8
 801d0be:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d0c2:	432a      	orrs	r2, r5
 801d0c4:	f820 2b02 	strh.w	r2, [r0], #2
 801d0c8:	e7bd      	b.n	801d046 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801d0ca:	4a14      	ldr	r2, [pc, #80]	; (801d11c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801d0cc:	42b0      	cmp	r0, r6
 801d0ce:	d21f      	bcs.n	801d110 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801d0d0:	eb00 050e 	add.w	r5, r0, lr
 801d0d4:	42a8      	cmp	r0, r5
 801d0d6:	4621      	mov	r1, r4
 801d0d8:	f104 0403 	add.w	r4, r4, #3
 801d0dc:	d210      	bcs.n	801d100 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801d0de:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801d0e2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801d0e6:	00db      	lsls	r3, r3, #3
 801d0e8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801d0ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d0f0:	430b      	orrs	r3, r1
 801d0f2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801d0f6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801d0fa:	f820 3b02 	strh.w	r3, [r0], #2
 801d0fe:	e7e9      	b.n	801d0d4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801d100:	4438      	add	r0, r7
 801d102:	eb01 040c 	add.w	r4, r1, ip
 801d106:	e7e1      	b.n	801d0cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801d108:	4438      	add	r0, r7
 801d10a:	eb01 040c 	add.w	r4, r1, ip
 801d10e:	e796      	b.n	801d03e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801d110:	4b03      	ldr	r3, [pc, #12]	; (801d120 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801d112:	6818      	ldr	r0, [r3, #0]
 801d114:	6803      	ldr	r3, [r0, #0]
 801d116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d118:	4798      	blx	r3
 801d11a:	e768      	b.n	801cfee <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801d11c:	fffff800 	.word	0xfffff800
 801d120:	2000ef1c 	.word	0x2000ef1c
 801d124:	2000ef16 	.word	0x2000ef16

0801d128 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801d128:	b4f0      	push	{r4, r5, r6, r7}
 801d12a:	4616      	mov	r6, r2
 801d12c:	2e01      	cmp	r6, #1
 801d12e:	461c      	mov	r4, r3
 801d130:	460d      	mov	r5, r1
 801d132:	9a04      	ldr	r2, [sp, #16]
 801d134:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801d138:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801d13c:	d012      	beq.n	801d164 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801d13e:	d303      	bcc.n	801d148 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801d140:	2e02      	cmp	r6, #2
 801d142:	d00a      	beq.n	801d15a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801d144:	bcf0      	pop	{r4, r5, r6, r7}
 801d146:	4770      	bx	lr
 801d148:	6805      	ldr	r5, [r0, #0]
 801d14a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801d14e:	68ed      	ldr	r5, [r5, #12]
 801d150:	4613      	mov	r3, r2
 801d152:	46ac      	mov	ip, r5
 801d154:	4622      	mov	r2, r4
 801d156:	bcf0      	pop	{r4, r5, r6, r7}
 801d158:	4760      	bx	ip
 801d15a:	4621      	mov	r1, r4
 801d15c:	4628      	mov	r0, r5
 801d15e:	bcf0      	pop	{r4, r5, r6, r7}
 801d160:	f7ff bd94 	b.w	801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d164:	4621      	mov	r1, r4
 801d166:	4628      	mov	r0, r5
 801d168:	bcf0      	pop	{r4, r5, r6, r7}
 801d16a:	f7ff bee5 	b.w	801cf38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801d170 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801d170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d174:	4681      	mov	r9, r0
 801d176:	b093      	sub	sp, #76	; 0x4c
 801d178:	6810      	ldr	r0, [r2, #0]
 801d17a:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801d17e:	4f6d      	ldr	r7, [pc, #436]	; (801d334 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801d180:	4688      	mov	r8, r1
 801d182:	6851      	ldr	r1, [r2, #4]
 801d184:	ac0e      	add	r4, sp, #56	; 0x38
 801d186:	c403      	stmia	r4!, {r0, r1}
 801d188:	6818      	ldr	r0, [r3, #0]
 801d18a:	6859      	ldr	r1, [r3, #4]
 801d18c:	ac10      	add	r4, sp, #64	; 0x40
 801d18e:	4616      	mov	r6, r2
 801d190:	c403      	stmia	r4!, {r0, r1}
 801d192:	a80e      	add	r0, sp, #56	; 0x38
 801d194:	f7f7 fcd4 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d198:	4631      	mov	r1, r6
 801d19a:	a810      	add	r0, sp, #64	; 0x40
 801d19c:	f7f7 fd14 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1a0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801d1a4:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 801d1a8:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801d1ac:	4e62      	ldr	r6, [pc, #392]	; (801d338 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d1ae:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801d1b2:	6830      	ldr	r0, [r6, #0]
 801d1b4:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 801d1b8:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d1bc:	4489      	add	r9, r1
 801d1be:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801d1c2:	440a      	add	r2, r1
 801d1c4:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801d1c8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d1cc:	4413      	add	r3, r2
 801d1ce:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801d1d2:	6803      	ldr	r3, [r0, #0]
 801d1d4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d1d6:	4798      	blx	r3
 801d1d8:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d1dc:	6830      	ldr	r0, [r6, #0]
 801d1de:	d01d      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801d1e0:	2200      	movs	r2, #0
 801d1e2:	6801      	ldr	r1, [r0, #0]
 801d1e4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 801d1e8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d1ec:	220b      	movs	r2, #11
 801d1ee:	9207      	str	r2, [sp, #28]
 801d1f0:	883a      	ldrh	r2, [r7, #0]
 801d1f2:	9206      	str	r2, [sp, #24]
 801d1f4:	2201      	movs	r2, #1
 801d1f6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801d1fa:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 801d1fe:	9203      	str	r2, [sp, #12]
 801d200:	b2a4      	uxth	r4, r4
 801d202:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801d206:	9200      	str	r2, [sp, #0]
 801d208:	b2ad      	uxth	r5, r5
 801d20a:	9502      	str	r5, [sp, #8]
 801d20c:	9401      	str	r4, [sp, #4]
 801d20e:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 801d210:	4642      	mov	r2, r8
 801d212:	4649      	mov	r1, r9
 801d214:	47a0      	blx	r4
 801d216:	b013      	add	sp, #76	; 0x4c
 801d218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d21c:	6803      	ldr	r3, [r0, #0]
 801d21e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d220:	4798      	blx	r3
 801d222:	883b      	ldrh	r3, [r7, #0]
 801d224:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 801d228:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 801d22c:	fb03 1202 	mla	r2, r3, r2, r1
 801d230:	435d      	muls	r5, r3
 801d232:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801d236:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801d23a:	920c      	str	r2, [sp, #48]	; 0x30
 801d23c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 801d240:	1b12      	subs	r2, r2, r4
 801d242:	920d      	str	r2, [sp, #52]	; 0x34
 801d244:	0062      	lsls	r2, r4, #1
 801d246:	1b1c      	subs	r4, r3, r4
 801d248:	0063      	lsls	r3, r4, #1
 801d24a:	920a      	str	r2, [sp, #40]	; 0x28
 801d24c:	930b      	str	r3, [sp, #44]	; 0x2c
 801d24e:	f04f 0e04 	mov.w	lr, #4
 801d252:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d254:	4298      	cmp	r0, r3
 801d256:	d266      	bcs.n	801d326 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801d258:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d25a:	eb00 0b03 	add.w	fp, r0, r3
 801d25e:	4558      	cmp	r0, fp
 801d260:	d25c      	bcs.n	801d31c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801d262:	f819 3b01 	ldrb.w	r3, [r9], #1
 801d266:	fb1e e303 	smlabb	r3, lr, r3, lr
 801d26a:	f858 2003 	ldr.w	r2, [r8, r3]
 801d26e:	0e11      	lsrs	r1, r2, #24
 801d270:	d012      	beq.n	801d298 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d272:	29ff      	cmp	r1, #255	; 0xff
 801d274:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801d278:	d110      	bne.n	801d29c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d27a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d27e:	d10d      	bne.n	801d29c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801d280:	0953      	lsrs	r3, r2, #5
 801d282:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 801d286:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d28a:	f027 0707 	bic.w	r7, r7, #7
 801d28e:	431f      	orrs	r7, r3
 801d290:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d294:	433a      	orrs	r2, r7
 801d296:	8002      	strh	r2, [r0, #0]
 801d298:	3002      	adds	r0, #2
 801d29a:	e7e0      	b.n	801d25e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801d29c:	fb0a f101 	mul.w	r1, sl, r1
 801d2a0:	8806      	ldrh	r6, [r0, #0]
 801d2a2:	1c4b      	adds	r3, r1, #1
 801d2a4:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801d2a8:	1235      	asrs	r5, r6, #8
 801d2aa:	10f4      	asrs	r4, r6, #3
 801d2ac:	121b      	asrs	r3, r3, #8
 801d2ae:	00f6      	lsls	r6, r6, #3
 801d2b0:	b299      	uxth	r1, r3
 801d2b2:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801d2b6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d2ba:	b2f6      	uxtb	r6, r6
 801d2bc:	43db      	mvns	r3, r3
 801d2be:	b2d2      	uxtb	r2, r2
 801d2c0:	b2db      	uxtb	r3, r3
 801d2c2:	fb1c fc01 	smulbb	ip, ip, r1
 801d2c6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801d2ca:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801d2ce:	fb12 f201 	smulbb	r2, r2, r1
 801d2d2:	fb05 c503 	mla	r5, r5, r3, ip
 801d2d6:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801d2da:	b2ff      	uxtb	r7, r7
 801d2dc:	fb06 2203 	mla	r2, r6, r3, r2
 801d2e0:	b2ad      	uxth	r5, r5
 801d2e2:	fb17 f701 	smulbb	r7, r7, r1
 801d2e6:	b292      	uxth	r2, r2
 801d2e8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801d2ec:	fb04 7403 	mla	r4, r4, r3, r7
 801d2f0:	f105 0c01 	add.w	ip, r5, #1
 801d2f4:	1c57      	adds	r7, r2, #1
 801d2f6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801d2fa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d2fe:	b2a4      	uxth	r4, r4
 801d300:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d304:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d308:	433d      	orrs	r5, r7
 801d30a:	1c67      	adds	r7, r4, #1
 801d30c:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801d310:	0964      	lsrs	r4, r4, #5
 801d312:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801d316:	4325      	orrs	r5, r4
 801d318:	8005      	strh	r5, [r0, #0]
 801d31a:	e7bd      	b.n	801d298 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801d31c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d31e:	4418      	add	r0, r3
 801d320:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d322:	4499      	add	r9, r3
 801d324:	e795      	b.n	801d252 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d326:	4b04      	ldr	r3, [pc, #16]	; (801d338 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d328:	6818      	ldr	r0, [r3, #0]
 801d32a:	6803      	ldr	r3, [r0, #0]
 801d32c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d32e:	4798      	blx	r3
 801d330:	e771      	b.n	801d216 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d332:	bf00      	nop
 801d334:	2000ef16 	.word	0x2000ef16
 801d338:	2000ef1c 	.word	0x2000ef1c

0801d33c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d340:	b087      	sub	sp, #28
 801d342:	4680      	mov	r8, r0
 801d344:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 801d348:	460d      	mov	r5, r1
 801d34a:	4614      	mov	r4, r2
 801d34c:	2e00      	cmp	r6, #0
 801d34e:	f000 80b9 	beq.w	801d4c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d352:	6810      	ldr	r0, [r2, #0]
 801d354:	6851      	ldr	r1, [r2, #4]
 801d356:	af02      	add	r7, sp, #8
 801d358:	c703      	stmia	r7!, {r0, r1}
 801d35a:	6818      	ldr	r0, [r3, #0]
 801d35c:	6859      	ldr	r1, [r3, #4]
 801d35e:	af04      	add	r7, sp, #16
 801d360:	c703      	stmia	r7!, {r0, r1}
 801d362:	a802      	add	r0, sp, #8
 801d364:	f7f7 fbec 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d368:	4621      	mov	r1, r4
 801d36a:	a804      	add	r0, sp, #16
 801d36c:	f7f7 fc2c 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d370:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d374:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d378:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d37c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d380:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d384:	eb08 0401 	add.w	r4, r8, r1
 801d388:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d38c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d390:	440a      	add	r2, r1
 801d392:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d396:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d39a:	4413      	add	r3, r2
 801d39c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d3a0:	4b4a      	ldr	r3, [pc, #296]	; (801d4cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d3a2:	6818      	ldr	r0, [r3, #0]
 801d3a4:	6803      	ldr	r3, [r0, #0]
 801d3a6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d3a8:	4798      	blx	r3
 801d3aa:	4b49      	ldr	r3, [pc, #292]	; (801d4d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d3ac:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d3b0:	881a      	ldrh	r2, [r3, #0]
 801d3b2:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d3b6:	2eff      	cmp	r6, #255	; 0xff
 801d3b8:	fb02 c101 	mla	r1, r2, r1, ip
 801d3bc:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d3c0:	fb02 f207 	mul.w	r2, r2, r7
 801d3c4:	f105 0104 	add.w	r1, r5, #4
 801d3c8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d3cc:	461d      	mov	r5, r3
 801d3ce:	d05a      	beq.n	801d486 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d3d0:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801d3d4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d3d8:	b2b6      	uxth	r6, r6
 801d3da:	fa1f fe8e 	uxth.w	lr, lr
 801d3de:	9301      	str	r3, [sp, #4]
 801d3e0:	4282      	cmp	r2, r0
 801d3e2:	d96a      	bls.n	801d4ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d3e4:	eb00 0b0a 	add.w	fp, r0, sl
 801d3e8:	4583      	cmp	fp, r0
 801d3ea:	d940      	bls.n	801d46e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d3ec:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d3f0:	8805      	ldrh	r5, [r0, #0]
 801d3f2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d3f6:	122f      	asrs	r7, r5, #8
 801d3f8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d3fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d400:	fb17 f70e 	smulbb	r7, r7, lr
 801d404:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d408:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d40c:	00ed      	lsls	r5, r5, #3
 801d40e:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d412:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801d416:	10df      	asrs	r7, r3, #3
 801d418:	b2ed      	uxtb	r5, r5
 801d41a:	00db      	lsls	r3, r3, #3
 801d41c:	fa1f fc8c 	uxth.w	ip, ip
 801d420:	fb19 f90e 	smulbb	r9, r9, lr
 801d424:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d428:	b2db      	uxtb	r3, r3
 801d42a:	fb15 f50e 	smulbb	r5, r5, lr
 801d42e:	fb07 9706 	mla	r7, r7, r6, r9
 801d432:	fb03 5306 	mla	r3, r3, r6, r5
 801d436:	f10c 0901 	add.w	r9, ip, #1
 801d43a:	b29b      	uxth	r3, r3
 801d43c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d440:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 801d444:	f103 0c01 	add.w	ip, r3, #1
 801d448:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d44c:	b2bf      	uxth	r7, r7
 801d44e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d452:	ea4c 0c09 	orr.w	ip, ip, r9
 801d456:	f107 0901 	add.w	r9, r7, #1
 801d45a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d45e:	097f      	lsrs	r7, r7, #5
 801d460:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d464:	ea4c 0c07 	orr.w	ip, ip, r7
 801d468:	f820 cb02 	strh.w	ip, [r0], #2
 801d46c:	e7bc      	b.n	801d3e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d46e:	9b01      	ldr	r3, [sp, #4]
 801d470:	881b      	ldrh	r3, [r3, #0]
 801d472:	eba3 0308 	sub.w	r3, r3, r8
 801d476:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d47a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d47e:	eba3 0308 	sub.w	r3, r3, r8
 801d482:	441c      	add	r4, r3
 801d484:	e7ac      	b.n	801d3e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d486:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d48a:	4282      	cmp	r2, r0
 801d48c:	d915      	bls.n	801d4ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d48e:	eb00 060a 	add.w	r6, r0, sl
 801d492:	4286      	cmp	r6, r0
 801d494:	d906      	bls.n	801d4a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d496:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d49a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d49e:	f820 3b02 	strh.w	r3, [r0], #2
 801d4a2:	e7f6      	b.n	801d492 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d4a4:	882b      	ldrh	r3, [r5, #0]
 801d4a6:	eba3 0308 	sub.w	r3, r3, r8
 801d4aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d4ae:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d4b2:	eba3 0308 	sub.w	r3, r3, r8
 801d4b6:	441c      	add	r4, r3
 801d4b8:	e7e7      	b.n	801d48a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d4ba:	4b04      	ldr	r3, [pc, #16]	; (801d4cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d4bc:	6818      	ldr	r0, [r3, #0]
 801d4be:	6803      	ldr	r3, [r0, #0]
 801d4c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d4c2:	4798      	blx	r3
 801d4c4:	b007      	add	sp, #28
 801d4c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d4ca:	bf00      	nop
 801d4cc:	2000ef1c 	.word	0x2000ef1c
 801d4d0:	2000ef16 	.word	0x2000ef16

0801d4d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d4d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d4d8:	b091      	sub	sp, #68	; 0x44
 801d4da:	4680      	mov	r8, r0
 801d4dc:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 801d4e0:	460f      	mov	r7, r1
 801d4e2:	4614      	mov	r4, r2
 801d4e4:	2d00      	cmp	r5, #0
 801d4e6:	d051      	beq.n	801d58c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d4e8:	6810      	ldr	r0, [r2, #0]
 801d4ea:	6851      	ldr	r1, [r2, #4]
 801d4ec:	f8df 9200 	ldr.w	r9, [pc, #512]	; 801d6f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d4f0:	ae0c      	add	r6, sp, #48	; 0x30
 801d4f2:	c603      	stmia	r6!, {r0, r1}
 801d4f4:	6818      	ldr	r0, [r3, #0]
 801d4f6:	6859      	ldr	r1, [r3, #4]
 801d4f8:	ae0e      	add	r6, sp, #56	; 0x38
 801d4fa:	c603      	stmia	r6!, {r0, r1}
 801d4fc:	a80c      	add	r0, sp, #48	; 0x30
 801d4fe:	f7f7 fb1f 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d502:	4621      	mov	r1, r4
 801d504:	a80e      	add	r0, sp, #56	; 0x38
 801d506:	f7f7 fb5f 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d50a:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 801d50e:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d512:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801d516:	f8d9 0000 	ldr.w	r0, [r9]
 801d51a:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 801d51e:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801d522:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d526:	eb08 0401 	add.w	r4, r8, r1
 801d52a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 801d52e:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801d6f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d532:	440a      	add	r2, r1
 801d534:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 801d538:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 801d53c:	4413      	add	r3, r2
 801d53e:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 801d542:	6803      	ldr	r3, [r0, #0]
 801d544:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801d546:	4798      	blx	r3
 801d548:	f010 0f80 	tst.w	r0, #128	; 0x80
 801d54c:	f8d9 0000 	ldr.w	r0, [r9]
 801d550:	d01f      	beq.n	801d592 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d552:	2200      	movs	r2, #0
 801d554:	6801      	ldr	r1, [r0, #0]
 801d556:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801d55a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d55e:	220b      	movs	r2, #11
 801d560:	9207      	str	r2, [sp, #28]
 801d562:	f8b8 2000 	ldrh.w	r2, [r8]
 801d566:	9206      	str	r2, [sp, #24]
 801d568:	2201      	movs	r2, #1
 801d56a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d56e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801d572:	9203      	str	r2, [sp, #12]
 801d574:	fa1f f28a 	uxth.w	r2, sl
 801d578:	9202      	str	r2, [sp, #8]
 801d57a:	b2b6      	uxth	r6, r6
 801d57c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 801d580:	9200      	str	r2, [sp, #0]
 801d582:	9601      	str	r6, [sp, #4]
 801d584:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801d586:	463a      	mov	r2, r7
 801d588:	4621      	mov	r1, r4
 801d58a:	47a8      	blx	r5
 801d58c:	b011      	add	sp, #68	; 0x44
 801d58e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d592:	6803      	ldr	r3, [r0, #0]
 801d594:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d596:	4798      	blx	r3
 801d598:	f8b8 2000 	ldrh.w	r2, [r8]
 801d59c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801d5a0:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801d5a4:	2dff      	cmp	r5, #255	; 0xff
 801d5a6:	fb02 1303 	mla	r3, r2, r3, r1
 801d5aa:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5ae:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d5b2:	fb0a fa02 	mul.w	sl, sl, r2
 801d5b6:	d062      	beq.n	801d67e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d5b8:	ea6f 0c05 	mvn.w	ip, r5
 801d5bc:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d5c0:	930a      	str	r3, [sp, #40]	; 0x28
 801d5c2:	b2ad      	uxth	r5, r5
 801d5c4:	fa5f fc8c 	uxtb.w	ip, ip
 801d5c8:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 801d5cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5ce:	4298      	cmp	r0, r3
 801d5d0:	f080 8085 	bcs.w	801d6de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d5d4:	eb00 0b09 	add.w	fp, r0, r9
 801d5d8:	4558      	cmp	r0, fp
 801d5da:	d246      	bcs.n	801d66a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d5dc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d5e0:	2303      	movs	r3, #3
 801d5e2:	2204      	movs	r2, #4
 801d5e4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d5e8:	eb07 0a0e 	add.w	sl, r7, lr
 801d5ec:	8803      	ldrh	r3, [r0, #0]
 801d5ee:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d5f2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d5f6:	1219      	asrs	r1, r3, #8
 801d5f8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d5fc:	fb18 f805 	smulbb	r8, r8, r5
 801d600:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d604:	10da      	asrs	r2, r3, #3
 801d606:	fb01 810c 	mla	r1, r1, ip, r8
 801d60a:	00db      	lsls	r3, r3, #3
 801d60c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d610:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d614:	b2db      	uxtb	r3, r3
 801d616:	fb18 f805 	smulbb	r8, r8, r5
 801d61a:	fb1e fe05 	smulbb	lr, lr, r5
 801d61e:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d622:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d626:	b289      	uxth	r1, r1
 801d628:	fb02 820c 	mla	r2, r2, ip, r8
 801d62c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d630:	b292      	uxth	r2, r2
 801d632:	b29b      	uxth	r3, r3
 801d634:	f101 0801 	add.w	r8, r1, #1
 801d638:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d63c:	f103 0e01 	add.w	lr, r3, #1
 801d640:	f102 0801 	add.w	r8, r2, #1
 801d644:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d648:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d64c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801d650:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d654:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d658:	ea4e 0101 	orr.w	r1, lr, r1
 801d65c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d660:	ea41 0108 	orr.w	r1, r1, r8
 801d664:	f820 1b02 	strh.w	r1, [r0], #2
 801d668:	e7b6      	b.n	801d5d8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d66a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d66c:	881b      	ldrh	r3, [r3, #0]
 801d66e:	1b9b      	subs	r3, r3, r6
 801d670:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d674:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d678:	1b9b      	subs	r3, r3, r6
 801d67a:	441c      	add	r4, r3
 801d67c:	e7a6      	b.n	801d5cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d67e:	491b      	ldr	r1, [pc, #108]	; (801d6ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d680:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d684:	2203      	movs	r2, #3
 801d686:	2504      	movs	r5, #4
 801d688:	4550      	cmp	r0, sl
 801d68a:	d228      	bcs.n	801d6de <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d68c:	eb00 0c09 	add.w	ip, r0, r9
 801d690:	4560      	cmp	r0, ip
 801d692:	4623      	mov	r3, r4
 801d694:	d219      	bcs.n	801d6ca <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d696:	f893 e000 	ldrb.w	lr, [r3]
 801d69a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d69e:	eb07 0b0e 	add.w	fp, r7, lr
 801d6a2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d6a6:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d6aa:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d6ae:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d6b2:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d6b6:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d6ba:	ea43 030b 	orr.w	r3, r3, fp
 801d6be:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d6c2:	3401      	adds	r4, #1
 801d6c4:	f820 3b02 	strh.w	r3, [r0], #2
 801d6c8:	e7e2      	b.n	801d690 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d6ca:	f8b8 3000 	ldrh.w	r3, [r8]
 801d6ce:	1b9b      	subs	r3, r3, r6
 801d6d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6d4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801d6d8:	1b9b      	subs	r3, r3, r6
 801d6da:	441c      	add	r4, r3
 801d6dc:	e7d4      	b.n	801d688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d6de:	4b04      	ldr	r3, [pc, #16]	; (801d6f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d6e0:	6818      	ldr	r0, [r3, #0]
 801d6e2:	6803      	ldr	r3, [r0, #0]
 801d6e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d6e6:	4798      	blx	r3
 801d6e8:	e750      	b.n	801d58c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d6ea:	bf00      	nop
 801d6ec:	fffff800 	.word	0xfffff800
 801d6f0:	2000ef1c 	.word	0x2000ef1c
 801d6f4:	2000ef16 	.word	0x2000ef16

0801d6f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d6f8:	b4f0      	push	{r4, r5, r6, r7}
 801d6fa:	460c      	mov	r4, r1
 801d6fc:	4611      	mov	r1, r2
 801d6fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d702:	780f      	ldrb	r7, [r1, #0]
 801d704:	784e      	ldrb	r6, [r1, #1]
 801d706:	2f01      	cmp	r7, #1
 801d708:	461a      	mov	r2, r3
 801d70a:	9b04      	ldr	r3, [sp, #16]
 801d70c:	d036      	beq.n	801d77c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x84>
 801d70e:	d31e      	bcc.n	801d74e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x56>
 801d710:	2f02      	cmp	r7, #2
 801d712:	d14a      	bne.n	801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d714:	2e03      	cmp	r6, #3
 801d716:	d848      	bhi.n	801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d718:	e8df f006 	tbb	[pc, r6]
 801d71c:	16140702 	.word	0x16140702
 801d720:	9504      	str	r5, [sp, #16]
 801d722:	4620      	mov	r0, r4
 801d724:	bcf0      	pop	{r4, r5, r6, r7}
 801d726:	f7ff be09 	b.w	801d33c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d72a:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d72c:	2800      	cmp	r0, #0
 801d72e:	d03c      	beq.n	801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d730:	6806      	ldr	r6, [r0, #0]
 801d732:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d736:	68b5      	ldr	r5, [r6, #8]
 801d738:	4613      	mov	r3, r2
 801d73a:	46ac      	mov	ip, r5
 801d73c:	460a      	mov	r2, r1
 801d73e:	4621      	mov	r1, r4
 801d740:	bcf0      	pop	{r4, r5, r6, r7}
 801d742:	4760      	bx	ip
 801d744:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d746:	e7f1      	b.n	801d72c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d748:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d74c:	e7ee      	b.n	801d72c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d74e:	2e03      	cmp	r6, #3
 801d750:	d82b      	bhi.n	801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d752:	e8df f006 	tbb	[pc, r6]
 801d756:	0702      	.short	0x0702
 801d758:	100e      	.short	0x100e
 801d75a:	9504      	str	r5, [sp, #16]
 801d75c:	4620      	mov	r0, r4
 801d75e:	bcf0      	pop	{r4, r5, r6, r7}
 801d760:	f7ff bd06 	b.w	801d170 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d764:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d766:	b300      	cbz	r0, 801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d768:	6806      	ldr	r6, [r0, #0]
 801d76a:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d76e:	68f5      	ldr	r5, [r6, #12]
 801d770:	e7e2      	b.n	801d738 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d772:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d774:	e7f7      	b.n	801d766 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d776:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d77a:	e7f4      	b.n	801d766 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x6e>
 801d77c:	2e03      	cmp	r6, #3
 801d77e:	d814      	bhi.n	801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d780:	e8df f006 	tbb	[pc, r6]
 801d784:	100e0702 	.word	0x100e0702
 801d788:	9504      	str	r5, [sp, #16]
 801d78a:	4620      	mov	r0, r4
 801d78c:	bcf0      	pop	{r4, r5, r6, r7}
 801d78e:	f7ff bea1 	b.w	801d4d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d792:	6f80      	ldr	r0, [r0, #120]	; 0x78
 801d794:	b148      	cbz	r0, 801d7aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb2>
 801d796:	6806      	ldr	r6, [r0, #0]
 801d798:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d79c:	6935      	ldr	r5, [r6, #16]
 801d79e:	e7cb      	b.n	801d738 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d7a0:	6fc0      	ldr	r0, [r0, #124]	; 0x7c
 801d7a2:	e7f7      	b.n	801d794 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d7a4:	f8d0 0080 	ldr.w	r0, [r0, #128]	; 0x80
 801d7a8:	e7f4      	b.n	801d794 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x9c>
 801d7aa:	bcf0      	pop	{r4, r5, r6, r7}
 801d7ac:	4770      	bx	lr
	...

0801d7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d7b4:	4604      	mov	r4, r0
 801d7b6:	b087      	sub	sp, #28
 801d7b8:	6810      	ldr	r0, [r2, #0]
 801d7ba:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801d7be:	f8df 9238 	ldr.w	r9, [pc, #568]	; 801d9f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d7c2:	460e      	mov	r6, r1
 801d7c4:	6851      	ldr	r1, [r2, #4]
 801d7c6:	ad02      	add	r5, sp, #8
 801d7c8:	c503      	stmia	r5!, {r0, r1}
 801d7ca:	6818      	ldr	r0, [r3, #0]
 801d7cc:	6859      	ldr	r1, [r3, #4]
 801d7ce:	ad04      	add	r5, sp, #16
 801d7d0:	4617      	mov	r7, r2
 801d7d2:	c503      	stmia	r5!, {r0, r1}
 801d7d4:	a802      	add	r0, sp, #8
 801d7d6:	f7f7 f9b3 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d7da:	4639      	mov	r1, r7
 801d7dc:	a804      	add	r0, sp, #16
 801d7de:	f7f7 f9f3 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d7e2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d7e6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d7ea:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d7ee:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d7f2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d7f6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d7fa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d7fe:	440e      	add	r6, r1
 801d800:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d804:	440a      	add	r2, r1
 801d806:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d80a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d80e:	4413      	add	r3, r2
 801d810:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d814:	4b77      	ldr	r3, [pc, #476]	; (801d9f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d816:	6818      	ldr	r0, [r3, #0]
 801d818:	6803      	ldr	r3, [r0, #0]
 801d81a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d81c:	4798      	blx	r3
 801d81e:	f8b9 b000 	ldrh.w	fp, [r9]
 801d822:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d826:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d82a:	fb0b 2303 	mla	r3, fp, r3, r2
 801d82e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d832:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801d836:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d83a:	fb05 f50b 	mul.w	r5, r5, fp
 801d83e:	9300      	str	r3, [sp, #0]
 801d840:	d069      	beq.n	801d916 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d842:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d846:	4558      	cmp	r0, fp
 801d848:	f080 80cc 	bcs.w	801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d84c:	9b00      	ldr	r3, [sp, #0]
 801d84e:	18c3      	adds	r3, r0, r3
 801d850:	9301      	str	r3, [sp, #4]
 801d852:	4631      	mov	r1, r6
 801d854:	9b01      	ldr	r3, [sp, #4]
 801d856:	4298      	cmp	r0, r3
 801d858:	d24f      	bcs.n	801d8fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d85a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d85e:	2a00      	cmp	r2, #0
 801d860:	d048      	beq.n	801d8f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d862:	fb0a f202 	mul.w	r2, sl, r2
 801d866:	1c53      	adds	r3, r2, #1
 801d868:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d86c:	121b      	asrs	r3, r3, #8
 801d86e:	d041      	beq.n	801d8f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d870:	8802      	ldrh	r2, [r0, #0]
 801d872:	f8b4 c000 	ldrh.w	ip, [r4]
 801d876:	b29e      	uxth	r6, r3
 801d878:	1215      	asrs	r5, r2, #8
 801d87a:	43db      	mvns	r3, r3
 801d87c:	b2db      	uxtb	r3, r3
 801d87e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d882:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d886:	fb15 f503 	smulbb	r5, r5, r3
 801d88a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d88e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801d892:	00d2      	lsls	r2, r2, #3
 801d894:	fb07 5706 	mla	r7, r7, r6, r5
 801d898:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d89c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d8a0:	b2d2      	uxtb	r2, r2
 801d8a2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d8a6:	b2bf      	uxth	r7, r7
 801d8a8:	fb1e fe03 	smulbb	lr, lr, r3
 801d8ac:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d8b0:	fa5f fc8c 	uxtb.w	ip, ip
 801d8b4:	fb12 f203 	smulbb	r2, r2, r3
 801d8b8:	fb05 e506 	mla	r5, r5, r6, lr
 801d8bc:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d8c0:	f107 0e01 	add.w	lr, r7, #1
 801d8c4:	fa1f fc8c 	uxth.w	ip, ip
 801d8c8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d8cc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 801d8d0:	f10c 0701 	add.w	r7, ip, #1
 801d8d4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d8d8:	b2ad      	uxth	r5, r5
 801d8da:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d8de:	ea47 070e 	orr.w	r7, r7, lr
 801d8e2:	f105 0e01 	add.w	lr, r5, #1
 801d8e6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d8ea:	096d      	lsrs	r5, r5, #5
 801d8ec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d8f0:	432f      	orrs	r7, r5
 801d8f2:	8007      	strh	r7, [r0, #0]
 801d8f4:	3002      	adds	r0, #2
 801d8f6:	3402      	adds	r4, #2
 801d8f8:	e7ac      	b.n	801d854 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d8fa:	f8b9 3000 	ldrh.w	r3, [r9]
 801d8fe:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d902:	eba3 0308 	sub.w	r3, r3, r8
 801d906:	eba6 0608 	sub.w	r6, r6, r8
 801d90a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d90e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d912:	440e      	add	r6, r1
 801d914:	e797      	b.n	801d846 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d916:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d91a:	42a8      	cmp	r0, r5
 801d91c:	d262      	bcs.n	801d9e4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d91e:	9b00      	ldr	r3, [sp, #0]
 801d920:	4631      	mov	r1, r6
 801d922:	eb00 0b03 	add.w	fp, r0, r3
 801d926:	4558      	cmp	r0, fp
 801d928:	d24e      	bcs.n	801d9c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d92a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d92e:	b12b      	cbz	r3, 801d93c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d930:	2bff      	cmp	r3, #255	; 0xff
 801d932:	f8b4 e000 	ldrh.w	lr, [r4]
 801d936:	d104      	bne.n	801d942 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d938:	f8a0 e000 	strh.w	lr, [r0]
 801d93c:	3002      	adds	r0, #2
 801d93e:	3402      	adds	r4, #2
 801d940:	e7f1      	b.n	801d926 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d942:	8802      	ldrh	r2, [r0, #0]
 801d944:	b29f      	uxth	r7, r3
 801d946:	1216      	asrs	r6, r2, #8
 801d948:	43db      	mvns	r3, r3
 801d94a:	b2db      	uxtb	r3, r3
 801d94c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d950:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801d954:	fb16 f603 	smulbb	r6, r6, r3
 801d958:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d95c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d960:	00d2      	lsls	r2, r2, #3
 801d962:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d966:	b2d2      	uxtb	r2, r2
 801d968:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d96c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801d970:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d974:	fb1a fa03 	smulbb	sl, sl, r3
 801d978:	fa1f fc8c 	uxth.w	ip, ip
 801d97c:	fb12 f303 	smulbb	r3, r2, r3
 801d980:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801d984:	fa5f fe8e 	uxtb.w	lr, lr
 801d988:	fb06 a607 	mla	r6, r6, r7, sl
 801d98c:	f10c 0201 	add.w	r2, ip, #1
 801d990:	fb0e 3307 	mla	r3, lr, r7, r3
 801d994:	b2b6      	uxth	r6, r6
 801d996:	b29b      	uxth	r3, r3
 801d998:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d99c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 801d9a0:	f106 0a01 	add.w	sl, r6, #1
 801d9a4:	f103 0c01 	add.w	ip, r3, #1
 801d9a8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d9ac:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d9b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d9b4:	0976      	lsrs	r6, r6, #5
 801d9b6:	ea4c 0c02 	orr.w	ip, ip, r2
 801d9ba:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801d9be:	ea4c 0c06 	orr.w	ip, ip, r6
 801d9c2:	f8a0 c000 	strh.w	ip, [r0]
 801d9c6:	e7b9      	b.n	801d93c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d9c8:	f8b9 3000 	ldrh.w	r3, [r9]
 801d9cc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d9d0:	eba3 0308 	sub.w	r3, r3, r8
 801d9d4:	eba6 0608 	sub.w	r6, r6, r8
 801d9d8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d9dc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d9e0:	440e      	add	r6, r1
 801d9e2:	e79a      	b.n	801d91a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d9e4:	4b03      	ldr	r3, [pc, #12]	; (801d9f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d9e6:	6818      	ldr	r0, [r3, #0]
 801d9e8:	6803      	ldr	r3, [r0, #0]
 801d9ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d9ec:	4798      	blx	r3
 801d9ee:	b007      	add	sp, #28
 801d9f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d9f4:	2000ef1c 	.word	0x2000ef1c
 801d9f8:	2000ef16 	.word	0x2000ef16

0801d9fc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d9fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da00:	b089      	sub	sp, #36	; 0x24
 801da02:	4682      	mov	sl, r0
 801da04:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 801da08:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801da0a:	460f      	mov	r7, r1
 801da0c:	4691      	mov	r9, r2
 801da0e:	4698      	mov	r8, r3
 801da10:	2e00      	cmp	r6, #0
 801da12:	d03d      	beq.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da14:	4608      	mov	r0, r1
 801da16:	f7fa fe59 	bl	80186cc <_ZNK8touchgfx6Bitmap8getWidthEv>
 801da1a:	4605      	mov	r5, r0
 801da1c:	4638      	mov	r0, r7
 801da1e:	f7fa fe89 	bl	8018734 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801da22:	f8ad 000e 	strh.w	r0, [sp, #14]
 801da26:	4638      	mov	r0, r7
 801da28:	f8ad 9008 	strh.w	r9, [sp, #8]
 801da2c:	f8ad 500c 	strh.w	r5, [sp, #12]
 801da30:	f8ad 800a 	strh.w	r8, [sp, #10]
 801da34:	f7fa ff36 	bl	80188a4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801da38:	4605      	mov	r5, r0
 801da3a:	4638      	mov	r0, r7
 801da3c:	f7fa ff62 	bl	8018904 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801da40:	4681      	mov	r9, r0
 801da42:	4638      	mov	r0, r7
 801da44:	f7fa ffb2 	bl	80189ac <_ZNK8touchgfx6Bitmap9getFormatEv>
 801da48:	280b      	cmp	r0, #11
 801da4a:	d821      	bhi.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da4c:	e8df f000 	tbb	[pc, r0]
 801da50:	2006aebe 	.word	0x2006aebe
 801da54:	20202020 	.word	0x20202020
 801da58:	b5202020 	.word	0xb5202020
 801da5c:	4bb0      	ldr	r3, [pc, #704]	; (801dd20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801da5e:	6818      	ldr	r0, [r3, #0]
 801da60:	6803      	ldr	r3, [r0, #0]
 801da62:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801da64:	4798      	blx	r3
 801da66:	2eff      	cmp	r6, #255	; 0xff
 801da68:	d101      	bne.n	801da6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801da6a:	0683      	lsls	r3, r0, #26
 801da6c:	d506      	bpl.n	801da7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x80>
 801da6e:	4633      	mov	r3, r6
 801da70:	4622      	mov	r2, r4
 801da72:	a902      	add	r1, sp, #8
 801da74:	4628      	mov	r0, r5
 801da76:	f7ff f909 	bl	801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801da7a:	e009      	b.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801da7c:	4638      	mov	r0, r7
 801da7e:	f7fa fed9 	bl	8018834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801da82:	b940      	cbnz	r0, 801da96 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x9a>
 801da84:	4623      	mov	r3, r4
 801da86:	aa02      	add	r2, sp, #8
 801da88:	4629      	mov	r1, r5
 801da8a:	4650      	mov	r0, sl
 801da8c:	f7ff f9e4 	bl	801ce58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801da90:	b009      	add	sp, #36	; 0x24
 801da92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801da96:	f10d 0818 	add.w	r8, sp, #24
 801da9a:	4639      	mov	r1, r7
 801da9c:	4640      	mov	r0, r8
 801da9e:	f7fa fe7d 	bl	801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801daa2:	e898 0003 	ldmia.w	r8, {r0, r1}
 801daa6:	af04      	add	r7, sp, #16
 801daa8:	e887 0003 	stmia.w	r7, {r0, r1}
 801daac:	4638      	mov	r0, r7
 801daae:	4621      	mov	r1, r4
 801dab0:	f7f1 ffe4 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801dab4:	4638      	mov	r0, r7
 801dab6:	f7f2 f824 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801daba:	2800      	cmp	r0, #0
 801dabc:	d1d7      	bne.n	801da6e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x72>
 801dabe:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dac2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dac6:	4293      	cmp	r3, r2
 801dac8:	dd12      	ble.n	801daf0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf4>
 801daca:	1a9b      	subs	r3, r3, r2
 801dacc:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dad0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dad4:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dad8:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dadc:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dae0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dae4:	4642      	mov	r2, r8
 801dae6:	4633      	mov	r3, r6
 801dae8:	a902      	add	r1, sp, #8
 801daea:	4628      	mov	r0, r5
 801daec:	f7ff f8ce 	bl	801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801daf0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801daf4:	f9b4 2000 	ldrsh.w	r2, [r4]
 801daf8:	4293      	cmp	r3, r2
 801dafa:	dd12      	ble.n	801db22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x126>
 801dafc:	1a9b      	subs	r3, r3, r2
 801dafe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801db02:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801db06:	f8ad 2018 	strh.w	r2, [sp, #24]
 801db0a:	f8ad 001a 	strh.w	r0, [sp, #26]
 801db0e:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db12:	f8ad 101e 	strh.w	r1, [sp, #30]
 801db16:	23ff      	movs	r3, #255	; 0xff
 801db18:	4642      	mov	r2, r8
 801db1a:	a902      	add	r1, sp, #8
 801db1c:	4628      	mov	r0, r5
 801db1e:	f7ff f8b5 	bl	801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db22:	463b      	mov	r3, r7
 801db24:	aa02      	add	r2, sp, #8
 801db26:	4629      	mov	r1, r5
 801db28:	4650      	mov	r0, sl
 801db2a:	f7ff f995 	bl	801ce58 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801db2e:	88a2      	ldrh	r2, [r4, #4]
 801db30:	8823      	ldrh	r3, [r4, #0]
 801db32:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801db36:	4413      	add	r3, r2
 801db38:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801db3c:	440a      	add	r2, r1
 801db3e:	b29b      	uxth	r3, r3
 801db40:	b292      	uxth	r2, r2
 801db42:	b211      	sxth	r1, r2
 801db44:	b218      	sxth	r0, r3
 801db46:	4288      	cmp	r0, r1
 801db48:	dd12      	ble.n	801db70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 801db4a:	1a9b      	subs	r3, r3, r2
 801db4c:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801db50:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801db54:	f8ad 1018 	strh.w	r1, [sp, #24]
 801db58:	f8ad 301c 	strh.w	r3, [sp, #28]
 801db5c:	f8ad 001e 	strh.w	r0, [sp, #30]
 801db60:	23ff      	movs	r3, #255	; 0xff
 801db62:	4642      	mov	r2, r8
 801db64:	a902      	add	r1, sp, #8
 801db66:	4628      	mov	r0, r5
 801db68:	f8ad 601a 	strh.w	r6, [sp, #26]
 801db6c:	f7ff f88e 	bl	801cc8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801db70:	88e2      	ldrh	r2, [r4, #6]
 801db72:	8863      	ldrh	r3, [r4, #2]
 801db74:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801db78:	4413      	add	r3, r2
 801db7a:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801db7e:	440a      	add	r2, r1
 801db80:	b29b      	uxth	r3, r3
 801db82:	b292      	uxth	r2, r2
 801db84:	b211      	sxth	r1, r2
 801db86:	b218      	sxth	r0, r3
 801db88:	4288      	cmp	r0, r1
 801db8a:	dd81      	ble.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801db8c:	1a9b      	subs	r3, r3, r2
 801db8e:	f9b4 6000 	ldrsh.w	r6, [r4]
 801db92:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801db96:	f8ad 301e 	strh.w	r3, [sp, #30]
 801db9a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801db9e:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dba2:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dba6:	23ff      	movs	r3, #255	; 0xff
 801dba8:	4642      	mov	r2, r8
 801dbaa:	e762      	b.n	801da72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x76>
 801dbac:	4633      	mov	r3, r6
 801dbae:	4622      	mov	r2, r4
 801dbb0:	a902      	add	r1, sp, #8
 801dbb2:	4628      	mov	r0, r5
 801dbb4:	f7ff f9c0 	bl	801cf38 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801dbb8:	e76a      	b.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbba:	e9cd 4600 	strd	r4, r6, [sp]
 801dbbe:	ab02      	add	r3, sp, #8
 801dbc0:	464a      	mov	r2, r9
 801dbc2:	4629      	mov	r1, r5
 801dbc4:	4650      	mov	r0, sl
 801dbc6:	f7ff fd97 	bl	801d6f8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801dbca:	e761      	b.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbcc:	4638      	mov	r0, r7
 801dbce:	f7fa fe31 	bl	8018834 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801dbd2:	b950      	cbnz	r0, 801dbea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ee>
 801dbd4:	e9cd 6000 	strd	r6, r0, [sp]
 801dbd8:	f8da 3000 	ldr.w	r3, [sl]
 801dbdc:	aa02      	add	r2, sp, #8
 801dbde:	68de      	ldr	r6, [r3, #12]
 801dbe0:	4629      	mov	r1, r5
 801dbe2:	4623      	mov	r3, r4
 801dbe4:	4650      	mov	r0, sl
 801dbe6:	47b0      	blx	r6
 801dbe8:	e752      	b.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dbea:	f10d 0818 	add.w	r8, sp, #24
 801dbee:	4639      	mov	r1, r7
 801dbf0:	4640      	mov	r0, r8
 801dbf2:	f7fa fdd3 	bl	801879c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801dbf6:	e898 0003 	ldmia.w	r8, {r0, r1}
 801dbfa:	af04      	add	r7, sp, #16
 801dbfc:	e887 0003 	stmia.w	r7, {r0, r1}
 801dc00:	4638      	mov	r0, r7
 801dc02:	4621      	mov	r1, r4
 801dc04:	f7f1 ff3a 	bl	800fa7c <_ZN8touchgfx4RectaNERKS0_>
 801dc08:	4638      	mov	r0, r7
 801dc0a:	f7f1 ff7a 	bl	800fb02 <_ZNK8touchgfx4Rect7isEmptyEv>
 801dc0e:	b138      	cbz	r0, 801dc20 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x224>
 801dc10:	9600      	str	r6, [sp, #0]
 801dc12:	4623      	mov	r3, r4
 801dc14:	aa02      	add	r2, sp, #8
 801dc16:	4649      	mov	r1, r9
 801dc18:	4628      	mov	r0, r5
 801dc1a:	f7ff fdc9 	bl	801d7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc1e:	e737      	b.n	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dc20:	e9cd 6000 	strd	r6, r0, [sp]
 801dc24:	f8da 3000 	ldr.w	r3, [sl]
 801dc28:	aa02      	add	r2, sp, #8
 801dc2a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801dc2e:	4629      	mov	r1, r5
 801dc30:	463b      	mov	r3, r7
 801dc32:	4650      	mov	r0, sl
 801dc34:	47d8      	blx	fp
 801dc36:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801dc3a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801dc3e:	4293      	cmp	r3, r2
 801dc40:	dd13      	ble.n	801dc6a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26e>
 801dc42:	f9b4 0000 	ldrsh.w	r0, [r4]
 801dc46:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801dc4a:	f8ad 0018 	strh.w	r0, [sp, #24]
 801dc4e:	1a9b      	subs	r3, r3, r2
 801dc50:	f8ad 201a 	strh.w	r2, [sp, #26]
 801dc54:	f8ad 101c 	strh.w	r1, [sp, #28]
 801dc58:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dc5c:	9600      	str	r6, [sp, #0]
 801dc5e:	4643      	mov	r3, r8
 801dc60:	aa02      	add	r2, sp, #8
 801dc62:	4649      	mov	r1, r9
 801dc64:	4628      	mov	r0, r5
 801dc66:	f7ff fda3 	bl	801d7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc6a:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801dc6e:	f9b4 2000 	ldrsh.w	r2, [r4]
 801dc72:	4293      	cmp	r3, r2
 801dc74:	dd13      	ble.n	801dc9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a2>
 801dc76:	1a9b      	subs	r3, r3, r2
 801dc78:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801dc7c:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801dc80:	f8ad 2018 	strh.w	r2, [sp, #24]
 801dc84:	f8ad 001a 	strh.w	r0, [sp, #26]
 801dc88:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dc8c:	f8ad 101e 	strh.w	r1, [sp, #30]
 801dc90:	9600      	str	r6, [sp, #0]
 801dc92:	4643      	mov	r3, r8
 801dc94:	aa02      	add	r2, sp, #8
 801dc96:	4649      	mov	r1, r9
 801dc98:	4628      	mov	r0, r5
 801dc9a:	f7ff fd89 	bl	801d7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dc9e:	88a2      	ldrh	r2, [r4, #4]
 801dca0:	8823      	ldrh	r3, [r4, #0]
 801dca2:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801dca6:	4413      	add	r3, r2
 801dca8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801dcac:	440a      	add	r2, r1
 801dcae:	b29b      	uxth	r3, r3
 801dcb0:	b292      	uxth	r2, r2
 801dcb2:	b211      	sxth	r1, r2
 801dcb4:	b218      	sxth	r0, r3
 801dcb6:	4288      	cmp	r0, r1
 801dcb8:	dd13      	ble.n	801dce2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e6>
 801dcba:	1a9b      	subs	r3, r3, r2
 801dcbc:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801dcc0:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801dcc4:	f8ad 1018 	strh.w	r1, [sp, #24]
 801dcc8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801dccc:	f8ad 001e 	strh.w	r0, [sp, #30]
 801dcd0:	9600      	str	r6, [sp, #0]
 801dcd2:	4643      	mov	r3, r8
 801dcd4:	aa02      	add	r2, sp, #8
 801dcd6:	4649      	mov	r1, r9
 801dcd8:	4628      	mov	r0, r5
 801dcda:	f8ad 701a 	strh.w	r7, [sp, #26]
 801dcde:	f7ff fd67 	bl	801d7b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801dce2:	88e2      	ldrh	r2, [r4, #6]
 801dce4:	8863      	ldrh	r3, [r4, #2]
 801dce6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801dcea:	4413      	add	r3, r2
 801dcec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801dcf0:	440a      	add	r2, r1
 801dcf2:	b29b      	uxth	r3, r3
 801dcf4:	b292      	uxth	r2, r2
 801dcf6:	b211      	sxth	r1, r2
 801dcf8:	b218      	sxth	r0, r3
 801dcfa:	4288      	cmp	r0, r1
 801dcfc:	f77f aec8 	ble.w	801da90 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x94>
 801dd00:	f9b4 7000 	ldrsh.w	r7, [r4]
 801dd04:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801dd08:	f8ad 7018 	strh.w	r7, [sp, #24]
 801dd0c:	1a9b      	subs	r3, r3, r2
 801dd0e:	f8ad 301e 	strh.w	r3, [sp, #30]
 801dd12:	f8ad 101a 	strh.w	r1, [sp, #26]
 801dd16:	f8ad 001c 	strh.w	r0, [sp, #28]
 801dd1a:	9600      	str	r6, [sp, #0]
 801dd1c:	4643      	mov	r3, r8
 801dd1e:	e779      	b.n	801dc14 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x218>
 801dd20:	2000ef1c 	.word	0x2000ef1c

0801dd24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801dd24:	b180      	cbz	r0, 801dd48 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801dd26:	2903      	cmp	r1, #3
 801dd28:	d81c      	bhi.n	801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd2a:	e8df f001 	tbb	[pc, r1]
 801dd2e:	1d02      	.short	0x1d02
 801dd30:	1f08      	.short	0x1f08
 801dd32:	4b10      	ldr	r3, [pc, #64]	; (801dd74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd34:	8818      	ldrh	r0, [r3, #0]
 801dd36:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd3a:	4240      	negs	r0, r0
 801dd3c:	4770      	bx	lr
 801dd3e:	4b0d      	ldr	r3, [pc, #52]	; (801dd74 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801dd40:	8818      	ldrh	r0, [r3, #0]
 801dd42:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd46:	4770      	bx	lr
 801dd48:	2903      	cmp	r1, #3
 801dd4a:	d80b      	bhi.n	801dd64 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801dd4c:	a301      	add	r3, pc, #4	; (adr r3, 801dd54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801dd4e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dd52:	bf00      	nop
 801dd54:	0801dd69 	.word	0x0801dd69
 801dd58:	0801dd3f 	.word	0x0801dd3f
 801dd5c:	0801dd6d 	.word	0x0801dd6d
 801dd60:	0801dd33 	.word	0x0801dd33
 801dd64:	2000      	movs	r0, #0
 801dd66:	4770      	bx	lr
 801dd68:	2001      	movs	r0, #1
 801dd6a:	4770      	bx	lr
 801dd6c:	f04f 30ff 	mov.w	r0, #4294967295
 801dd70:	4770      	bx	lr
 801dd72:	bf00      	nop
 801dd74:	2000ef16 	.word	0x2000ef16

0801dd78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801dd78:	b180      	cbz	r0, 801dd9c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801dd7a:	2903      	cmp	r1, #3
 801dd7c:	d81c      	bhi.n	801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dd7e:	e8df f001 	tbb	[pc, r1]
 801dd82:	021d      	.short	0x021d
 801dd84:	071f      	.short	0x071f
 801dd86:	4b10      	ldr	r3, [pc, #64]	; (801ddc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd88:	8818      	ldrh	r0, [r3, #0]
 801dd8a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd8e:	4770      	bx	lr
 801dd90:	4b0d      	ldr	r3, [pc, #52]	; (801ddc8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dd92:	8818      	ldrh	r0, [r3, #0]
 801dd94:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dd98:	4240      	negs	r0, r0
 801dd9a:	4770      	bx	lr
 801dd9c:	2903      	cmp	r1, #3
 801dd9e:	d80b      	bhi.n	801ddb8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dda0:	a301      	add	r3, pc, #4	; (adr r3, 801dda8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801dda2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dda6:	bf00      	nop
 801dda8:	0801dd87 	.word	0x0801dd87
 801ddac:	0801ddc1 	.word	0x0801ddc1
 801ddb0:	0801dd91 	.word	0x0801dd91
 801ddb4:	0801ddbd 	.word	0x0801ddbd
 801ddb8:	2000      	movs	r0, #0
 801ddba:	4770      	bx	lr
 801ddbc:	2001      	movs	r0, #1
 801ddbe:	4770      	bx	lr
 801ddc0:	f04f 30ff 	mov.w	r0, #4294967295
 801ddc4:	4770      	bx	lr
 801ddc6:	bf00      	nop
 801ddc8:	2000ef16 	.word	0x2000ef16

0801ddcc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801ddcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddd0:	b099      	sub	sp, #100	; 0x64
 801ddd2:	910b      	str	r1, [sp, #44]	; 0x2c
 801ddd4:	a914      	add	r1, sp, #80	; 0x50
 801ddd6:	e881 000c 	stmia.w	r1, {r2, r3}
 801ddda:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 801ddde:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 801dde2:	f891 900d 	ldrb.w	r9, [r1, #13]
 801dde6:	9309      	str	r3, [sp, #36]	; 0x24
 801dde8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801ddec:	9310      	str	r3, [sp, #64]	; 0x40
 801ddee:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801ddf2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 801ddf6:	930c      	str	r3, [sp, #48]	; 0x30
 801ddf8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801ddfc:	798f      	ldrb	r7, [r1, #6]
 801ddfe:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 801de02:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 801de06:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801de0a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801de0e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 801de12:	431f      	orrs	r7, r3
 801de14:	f000 8195 	beq.w	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de18:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801de1c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801de20:	f891 9007 	ldrb.w	r9, [r1, #7]
 801de24:	ea59 0903 	orrs.w	r9, r9, r3
 801de28:	f000 818b 	beq.w	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801de2c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801de30:	b29b      	uxth	r3, r3
 801de32:	2d00      	cmp	r5, #0
 801de34:	f000 812e 	beq.w	801e094 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801de38:	1aed      	subs	r5, r5, r3
 801de3a:	b2ad      	uxth	r5, r5
 801de3c:	042b      	lsls	r3, r5, #16
 801de3e:	d502      	bpl.n	801de46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801de40:	1b64      	subs	r4, r4, r5
 801de42:	b224      	sxth	r4, r4
 801de44:	2500      	movs	r5, #0
 801de46:	f9b2 1000 	ldrsh.w	r1, [r2]
 801de4a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801de4e:	428c      	cmp	r4, r1
 801de50:	b28b      	uxth	r3, r1
 801de52:	bfbf      	itttt	lt
 801de54:	18ed      	addlt	r5, r5, r3
 801de56:	1b2c      	sublt	r4, r5, r4
 801de58:	b2a5      	uxthlt	r5, r4
 801de5a:	460c      	movlt	r4, r1
 801de5c:	8891      	ldrh	r1, [r2, #4]
 801de5e:	440b      	add	r3, r1
 801de60:	b21b      	sxth	r3, r3
 801de62:	930f      	str	r3, [sp, #60]	; 0x3c
 801de64:	88d3      	ldrh	r3, [r2, #6]
 801de66:	8852      	ldrh	r2, [r2, #2]
 801de68:	4413      	add	r3, r2
 801de6a:	b21b      	sxth	r3, r3
 801de6c:	930d      	str	r3, [sp, #52]	; 0x34
 801de6e:	4bbe      	ldr	r3, [pc, #760]	; (801e168 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801de70:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de72:	f893 b000 	ldrb.w	fp, [r3]
 801de76:	f10b 3cff 	add.w	ip, fp, #4294967295
 801de7a:	f1dc 0300 	rsbs	r3, ip, #0
 801de7e:	eb43 030c 	adc.w	r3, r3, ip
 801de82:	930e      	str	r3, [sp, #56]	; 0x38
 801de84:	4621      	mov	r1, r4
 801de86:	4653      	mov	r3, sl
 801de88:	a814      	add	r0, sp, #80	; 0x50
 801de8a:	f7f6 fcce 	bl	801482a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801de8e:	4621      	mov	r1, r4
 801de90:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 801de94:	4653      	mov	r3, sl
 801de96:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801de98:	a814      	add	r0, sp, #80	; 0x50
 801de9a:	f7f6 fce3 	bl	8014864 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801de9e:	a918      	add	r1, sp, #96	; 0x60
 801dea0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dea4:	a817      	add	r0, sp, #92	; 0x5c
 801dea6:	f7f6 fe09 	bl	8014abc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801deaa:	f1ba 0f00 	cmp.w	sl, #0
 801deae:	f040 80f4 	bne.w	801e09a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801deb2:	f1bb 0f01 	cmp.w	fp, #1
 801deb6:	f040 80f8 	bne.w	801e0aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801deba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801debc:	2b00      	cmp	r3, #0
 801debe:	f040 8145 	bne.w	801e14c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dec2:	b2ba      	uxth	r2, r7
 801dec4:	b905      	cbnz	r5, 801dec8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dec6:	b16e      	cbz	r6, 801dee4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dec8:	fb06 5302 	mla	r3, r6, r2, r5
 801decc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 801dece:	fb08 f303 	mul.w	r3, r8, r3
 801ded2:	4631      	mov	r1, r6
 801ded4:	f003 0607 	and.w	r6, r3, #7
 801ded8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dedc:	9328      	str	r3, [sp, #160]	; 0xa0
 801dede:	eba9 0301 	sub.w	r3, r9, r1
 801dee2:	930a      	str	r3, [sp, #40]	; 0x28
 801dee4:	4651      	mov	r1, sl
 801dee6:	980e      	ldr	r0, [sp, #56]	; 0x38
 801dee8:	f7ff ff1c 	bl	801dd24 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801deec:	4681      	mov	r9, r0
 801deee:	980e      	ldr	r0, [sp, #56]	; 0x38
 801def0:	f7ff ff42 	bl	801dd78 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801def4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801def6:	9909      	ldr	r1, [sp, #36]	; 0x24
 801def8:	eba3 0a01 	sub.w	sl, r3, r1
 801defc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801defe:	459a      	cmp	sl, r3
 801df00:	bfa8      	it	ge
 801df02:	469a      	movge	sl, r3
 801df04:	f1ba 0f00 	cmp.w	sl, #0
 801df08:	4683      	mov	fp, r0
 801df0a:	f340 811a 	ble.w	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df0e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801df10:	1b64      	subs	r4, r4, r5
 801df12:	1b1c      	subs	r4, r3, r4
 801df14:	42bc      	cmp	r4, r7
 801df16:	bfd4      	ite	le
 801df18:	ebc5 0504 	rsble	r5, r5, r4
 801df1c:	ebc5 0507 	rsbgt	r5, r5, r7
 801df20:	2d00      	cmp	r5, #0
 801df22:	f340 810e 	ble.w	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801df26:	1b52      	subs	r2, r2, r5
 801df28:	fb08 f302 	mul.w	r3, r8, r2
 801df2c:	930f      	str	r3, [sp, #60]	; 0x3c
 801df2e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df30:	2b00      	cmp	r3, #0
 801df32:	f040 8116 	bne.w	801e162 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801df36:	4b8d      	ldr	r3, [pc, #564]	; (801e16c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801df38:	6818      	ldr	r0, [r3, #0]
 801df3a:	6803      	ldr	r3, [r0, #0]
 801df3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801df3e:	4798      	blx	r3
 801df40:	2301      	movs	r3, #1
 801df42:	fa03 f308 	lsl.w	r3, r3, r8
 801df46:	4a8a      	ldr	r2, [pc, #552]	; (801e170 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801df48:	3b01      	subs	r3, #1
 801df4a:	b2db      	uxtb	r3, r3
 801df4c:	8811      	ldrh	r1, [r2, #0]
 801df4e:	930e      	str	r3, [sp, #56]	; 0x38
 801df50:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 801df54:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801df58:	fb01 2303 	mla	r3, r1, r3, r2
 801df5c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801df60:	930a      	str	r3, [sp, #40]	; 0x28
 801df62:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df64:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801df68:	9313      	str	r3, [sp, #76]	; 0x4c
 801df6a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df6c:	0a19      	lsrs	r1, r3, #8
 801df6e:	b2cb      	uxtb	r3, r1
 801df70:	9312      	str	r3, [sp, #72]	; 0x48
 801df72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df74:	b2db      	uxtb	r3, r3
 801df76:	9311      	str	r3, [sp, #68]	; 0x44
 801df78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801df7a:	095a      	lsrs	r2, r3, #5
 801df7c:	4b7d      	ldr	r3, [pc, #500]	; (801e174 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801df7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df82:	400b      	ands	r3, r1
 801df84:	4313      	orrs	r3, r2
 801df86:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801df88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801df8c:	4313      	orrs	r3, r2
 801df8e:	b29b      	uxth	r3, r3
 801df90:	9310      	str	r3, [sp, #64]	; 0x40
 801df92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801df94:	781a      	ldrb	r2, [r3, #0]
 801df96:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801df9a:	4132      	asrs	r2, r6
 801df9c:	fb05 b919 	mls	r9, r5, r9, fp
 801dfa0:	fb03 fb05 	mul.w	fp, r3, r5
 801dfa4:	b2d2      	uxtb	r2, r2
 801dfa6:	930d      	str	r3, [sp, #52]	; 0x34
 801dfa8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dfac:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dfb0:	f0c0 80f5 	bcc.w	801e19e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dfb4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 801dfb8:	46ae      	mov	lr, r5
 801dfba:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dfbe:	f0c0 80dd 	bcc.w	801e17c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dfc2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dfc4:	4013      	ands	r3, r2
 801dfc6:	d055      	beq.n	801e074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dfc8:	20ff      	movs	r0, #255	; 0xff
 801dfca:	990e      	ldr	r1, [sp, #56]	; 0x38
 801dfcc:	fb90 f1f1 	sdiv	r1, r0, r1
 801dfd0:	434b      	muls	r3, r1
 801dfd2:	2bfe      	cmp	r3, #254	; 0xfe
 801dfd4:	dd03      	ble.n	801dfde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dfd6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfd8:	4281      	cmp	r1, r0
 801dfda:	f000 80cd 	beq.w	801e178 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dfde:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dfe0:	f8bc 4000 	ldrh.w	r4, [ip]
 801dfe4:	fb11 f303 	smulbb	r3, r1, r3
 801dfe8:	b29b      	uxth	r3, r3
 801dfea:	1c59      	adds	r1, r3, #1
 801dfec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dff0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dff4:	b29f      	uxth	r7, r3
 801dff6:	43db      	mvns	r3, r3
 801dff8:	b2db      	uxtb	r3, r3
 801dffa:	9309      	str	r3, [sp, #36]	; 0x24
 801dffc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801dffe:	1220      	asrs	r0, r4, #8
 801e000:	fb13 f907 	smulbb	r9, r3, r7
 801e004:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e008:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e00a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801e00e:	fb00 9003 	mla	r0, r0, r3, r9
 801e012:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801e014:	10e1      	asrs	r1, r4, #3
 801e016:	fb13 f907 	smulbb	r9, r3, r7
 801e01a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e01e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e020:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801e024:	fb01 9103 	mla	r1, r1, r3, r9
 801e028:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801e02a:	00e4      	lsls	r4, r4, #3
 801e02c:	fb13 f707 	smulbb	r7, r3, r7
 801e030:	b2e4      	uxtb	r4, r4
 801e032:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e034:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801e038:	fb04 7403 	mla	r4, r4, r3, r7
 801e03c:	b280      	uxth	r0, r0
 801e03e:	b2a4      	uxth	r4, r4
 801e040:	1c43      	adds	r3, r0, #1
 801e042:	f104 0901 	add.w	r9, r4, #1
 801e046:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801e04a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801e04e:	b289      	uxth	r1, r1
 801e050:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801e054:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e058:	ea49 0000 	orr.w	r0, r9, r0
 801e05c:	f101 0901 	add.w	r9, r1, #1
 801e060:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801e064:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801e068:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801e06c:	ea40 0009 	orr.w	r0, r0, r9
 801e070:	f8ac 0000 	strh.w	r0, [ip]
 801e074:	4446      	add	r6, r8
 801e076:	b2b6      	uxth	r6, r6
 801e078:	2e07      	cmp	r6, #7
 801e07a:	bf81      	itttt	hi
 801e07c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801e07e:	785a      	ldrbhi	r2, [r3, #1]
 801e080:	3301      	addhi	r3, #1
 801e082:	9328      	strhi	r3, [sp, #160]	; 0xa0
 801e084:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e086:	bf9a      	itte	ls
 801e088:	fa42 f208 	asrls.w	r2, r2, r8
 801e08c:	b2d2      	uxtbls	r2, r2
 801e08e:	2600      	movhi	r6, #0
 801e090:	449c      	add	ip, r3
 801e092:	e792      	b.n	801dfba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801e094:	441c      	add	r4, r3
 801e096:	b224      	sxth	r4, r4
 801e098:	e6d5      	b.n	801de46 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801e09a:	f1ba 0f01 	cmp.w	sl, #1
 801e09e:	f47f af0c 	bne.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0a2:	f1bb 0f01 	cmp.w	fp, #1
 801e0a6:	f47f af08 	bne.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0aa:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801e16c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801e0ae:	f8db 0000 	ldr.w	r0, [fp]
 801e0b2:	6803      	ldr	r3, [r0, #0]
 801e0b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801e0b6:	4798      	blx	r3
 801e0b8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801e0bc:	465a      	mov	r2, fp
 801e0be:	d006      	beq.n	801e0ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e0c0:	f1b8 0f04 	cmp.w	r8, #4
 801e0c4:	d140      	bne.n	801e148 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801e0c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801e0c8:	3300      	adds	r3, #0
 801e0ca:	bf18      	it	ne
 801e0cc:	2301      	movne	r3, #1
 801e0ce:	0580      	lsls	r0, r0, #22
 801e0d0:	d56e      	bpl.n	801e1b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0d2:	f1b8 0f08 	cmp.w	r8, #8
 801e0d6:	d16b      	bne.n	801e1b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801e0d8:	2b00      	cmp	r3, #0
 801e0da:	bf0c      	ite	eq
 801e0dc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 801e0e0:	f44f 7180 	movne.w	r1, #256	; 0x100
 801e0e4:	2d00      	cmp	r5, #0
 801e0e6:	f47f aee8 	bne.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0ea:	2e00      	cmp	r6, #0
 801e0ec:	f47f aee5 	bne.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0f0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801e0f2:	19e3      	adds	r3, r4, r7
 801e0f4:	4283      	cmp	r3, r0
 801e0f6:	f73f aee0 	bgt.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e0fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e0fc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e0fe:	444b      	add	r3, r9
 801e100:	4283      	cmp	r3, r0
 801e102:	f73f aeda 	bgt.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e106:	6810      	ldr	r0, [r2, #0]
 801e108:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 801e10c:	6804      	ldr	r4, [r0, #0]
 801e10e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 801e112:	b2bf      	uxth	r7, r7
 801e114:	f1b8 0f08 	cmp.w	r8, #8
 801e118:	f04f 0500 	mov.w	r5, #0
 801e11c:	bf18      	it	ne
 801e11e:	3701      	addne	r7, #1
 801e120:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801e124:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e126:	9104      	str	r1, [sp, #16]
 801e128:	bf18      	it	ne
 801e12a:	f027 0701 	bicne.w	r7, r7, #1
 801e12e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e130:	bf18      	it	ne
 801e132:	b2bf      	uxthne	r7, r7
 801e134:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801e138:	e9cd 7900 	strd	r7, r9, [sp]
 801e13c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801e13e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 801e140:	47a0      	blx	r4
 801e142:	b019      	add	sp, #100	; 0x64
 801e144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e148:	2300      	movs	r3, #0
 801e14a:	e7c0      	b.n	801e0ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801e14c:	2208      	movs	r2, #8
 801e14e:	fb92 f3f8 	sdiv	r3, r2, r8
 801e152:	1e5a      	subs	r2, r3, #1
 801e154:	443a      	add	r2, r7
 801e156:	fb92 f2f3 	sdiv	r2, r2, r3
 801e15a:	fb12 f203 	smulbb	r2, r2, r3
 801e15e:	b292      	uxth	r2, r2
 801e160:	e6b0      	b.n	801dec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801e162:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801e164:	e6ec      	b.n	801df40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801e166:	bf00      	nop
 801e168:	2000ef14 	.word	0x2000ef14
 801e16c:	2000ef1c 	.word	0x2000ef1c
 801e170:	2000ef16 	.word	0x2000ef16
 801e174:	00fff800 	.word	0x00fff800
 801e178:	9810      	ldr	r0, [sp, #64]	; 0x40
 801e17a:	e779      	b.n	801e070 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801e17c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801e17e:	b153      	cbz	r3, 801e196 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801e180:	441e      	add	r6, r3
 801e182:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801e184:	b2b6      	uxth	r6, r6
 801e186:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801e18a:	f006 0607 	and.w	r6, r6, #7
 801e18e:	781a      	ldrb	r2, [r3, #0]
 801e190:	9328      	str	r3, [sp, #160]	; 0xa0
 801e192:	4132      	asrs	r2, r6
 801e194:	b2d2      	uxtb	r2, r2
 801e196:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e198:	445b      	add	r3, fp
 801e19a:	930a      	str	r3, [sp, #40]	; 0x28
 801e19c:	e706      	b.n	801dfac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801e19e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e1a0:	2b00      	cmp	r3, #0
 801e1a2:	d1ce      	bne.n	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1a4:	4b05      	ldr	r3, [pc, #20]	; (801e1bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801e1a6:	6818      	ldr	r0, [r3, #0]
 801e1a8:	6803      	ldr	r3, [r0, #0]
 801e1aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801e1ac:	4798      	blx	r3
 801e1ae:	e7c8      	b.n	801e142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801e1b0:	2b00      	cmp	r3, #0
 801e1b2:	f43f ae82 	beq.w	801deba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801e1b6:	f44f 7180 	mov.w	r1, #256	; 0x100
 801e1ba:	e793      	b.n	801e0e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801e1bc:	2000ef1c 	.word	0x2000ef1c

0801e1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801e1c0:	b538      	push	{r3, r4, r5, lr}
 801e1c2:	4c15      	ldr	r4, [pc, #84]	; (801e218 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801e1c4:	7823      	ldrb	r3, [r4, #0]
 801e1c6:	f3bf 8f5b 	dmb	ish
 801e1ca:	07da      	lsls	r2, r3, #31
 801e1cc:	4605      	mov	r5, r0
 801e1ce:	d40b      	bmi.n	801e1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1d0:	4620      	mov	r0, r4
 801e1d2:	f008 f9ff 	bl	80265d4 <__cxa_guard_acquire>
 801e1d6:	b138      	cbz	r0, 801e1e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801e1d8:	4620      	mov	r0, r4
 801e1da:	f008 fa07 	bl	80265ec <__cxa_guard_release>
 801e1de:	4a0f      	ldr	r2, [pc, #60]	; (801e21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e1e0:	490f      	ldr	r1, [pc, #60]	; (801e220 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801e1e2:	4810      	ldr	r0, [pc, #64]	; (801e224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e1e4:	f008 f9ef 	bl	80265c6 <__aeabi_atexit>
 801e1e8:	4c0f      	ldr	r4, [pc, #60]	; (801e228 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801e1ea:	7823      	ldrb	r3, [r4, #0]
 801e1ec:	f3bf 8f5b 	dmb	ish
 801e1f0:	07db      	lsls	r3, r3, #31
 801e1f2:	d40b      	bmi.n	801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1f4:	4620      	mov	r0, r4
 801e1f6:	f008 f9ed 	bl	80265d4 <__cxa_guard_acquire>
 801e1fa:	b138      	cbz	r0, 801e20c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801e1fc:	4620      	mov	r0, r4
 801e1fe:	f008 f9f5 	bl	80265ec <__cxa_guard_release>
 801e202:	4a06      	ldr	r2, [pc, #24]	; (801e21c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801e204:	4909      	ldr	r1, [pc, #36]	; (801e22c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801e206:	480a      	ldr	r0, [pc, #40]	; (801e230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e208:	f008 f9dd 	bl	80265c6 <__aeabi_atexit>
 801e20c:	4b05      	ldr	r3, [pc, #20]	; (801e224 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801e20e:	612b      	str	r3, [r5, #16]
 801e210:	4b07      	ldr	r3, [pc, #28]	; (801e230 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801e212:	616b      	str	r3, [r5, #20]
 801e214:	bd38      	pop	{r3, r4, r5, pc}
 801e216:	bf00      	nop
 801e218:	2000effc 	.word	0x2000effc
 801e21c:	20000000 	.word	0x20000000
 801e220:	0801afc3 	.word	0x0801afc3
 801e224:	200000ac 	.word	0x200000ac
 801e228:	2000f000 	.word	0x2000f000
 801e22c:	0801afc1 	.word	0x0801afc1
 801e230:	200000b0 	.word	0x200000b0

0801e234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801e234:	b538      	push	{r3, r4, r5, lr}
 801e236:	4c15      	ldr	r4, [pc, #84]	; (801e28c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801e238:	7823      	ldrb	r3, [r4, #0]
 801e23a:	f3bf 8f5b 	dmb	ish
 801e23e:	07da      	lsls	r2, r3, #31
 801e240:	4605      	mov	r5, r0
 801e242:	d40b      	bmi.n	801e25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e244:	4620      	mov	r0, r4
 801e246:	f008 f9c5 	bl	80265d4 <__cxa_guard_acquire>
 801e24a:	b138      	cbz	r0, 801e25c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801e24c:	4620      	mov	r0, r4
 801e24e:	f008 f9cd 	bl	80265ec <__cxa_guard_release>
 801e252:	4a0f      	ldr	r2, [pc, #60]	; (801e290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e254:	490f      	ldr	r1, [pc, #60]	; (801e294 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801e256:	4810      	ldr	r0, [pc, #64]	; (801e298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e258:	f008 f9b5 	bl	80265c6 <__aeabi_atexit>
 801e25c:	4c0f      	ldr	r4, [pc, #60]	; (801e29c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801e25e:	7823      	ldrb	r3, [r4, #0]
 801e260:	f3bf 8f5b 	dmb	ish
 801e264:	07db      	lsls	r3, r3, #31
 801e266:	d40b      	bmi.n	801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e268:	4620      	mov	r0, r4
 801e26a:	f008 f9b3 	bl	80265d4 <__cxa_guard_acquire>
 801e26e:	b138      	cbz	r0, 801e280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801e270:	4620      	mov	r0, r4
 801e272:	f008 f9bb 	bl	80265ec <__cxa_guard_release>
 801e276:	4a06      	ldr	r2, [pc, #24]	; (801e290 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801e278:	4909      	ldr	r1, [pc, #36]	; (801e2a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801e27a:	480a      	ldr	r0, [pc, #40]	; (801e2a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e27c:	f008 f9a3 	bl	80265c6 <__aeabi_atexit>
 801e280:	4b05      	ldr	r3, [pc, #20]	; (801e298 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801e282:	60ab      	str	r3, [r5, #8]
 801e284:	4b07      	ldr	r3, [pc, #28]	; (801e2a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801e286:	60eb      	str	r3, [r5, #12]
 801e288:	bd38      	pop	{r3, r4, r5, pc}
 801e28a:	bf00      	nop
 801e28c:	2000efd4 	.word	0x2000efd4
 801e290:	20000000 	.word	0x20000000
 801e294:	0801afc7 	.word	0x0801afc7
 801e298:	20000084 	.word	0x20000084
 801e29c:	2000efd8 	.word	0x2000efd8
 801e2a0:	0801afc5 	.word	0x0801afc5
 801e2a4:	20000088 	.word	0x20000088

0801e2a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801e2a8:	b510      	push	{r4, lr}
 801e2aa:	4604      	mov	r4, r0
 801e2ac:	f7ff ff88 	bl	801e1c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801e2b0:	4620      	mov	r0, r4
 801e2b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e2b6:	f7ff bfbd 	b.w	801e234 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801e2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801e2bc:	b538      	push	{r3, r4, r5, lr}
 801e2be:	4c15      	ldr	r4, [pc, #84]	; (801e314 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801e2c0:	7823      	ldrb	r3, [r4, #0]
 801e2c2:	f3bf 8f5b 	dmb	ish
 801e2c6:	07da      	lsls	r2, r3, #31
 801e2c8:	4605      	mov	r5, r0
 801e2ca:	d40b      	bmi.n	801e2e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2cc:	4620      	mov	r0, r4
 801e2ce:	f008 f981 	bl	80265d4 <__cxa_guard_acquire>
 801e2d2:	b138      	cbz	r0, 801e2e4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	f008 f989 	bl	80265ec <__cxa_guard_release>
 801e2da:	4a0f      	ldr	r2, [pc, #60]	; (801e318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e2dc:	490f      	ldr	r1, [pc, #60]	; (801e31c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e2de:	4810      	ldr	r0, [pc, #64]	; (801e320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e2e0:	f008 f971 	bl	80265c6 <__aeabi_atexit>
 801e2e4:	4c0f      	ldr	r4, [pc, #60]	; (801e324 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e2e6:	7823      	ldrb	r3, [r4, #0]
 801e2e8:	f3bf 8f5b 	dmb	ish
 801e2ec:	07db      	lsls	r3, r3, #31
 801e2ee:	d40b      	bmi.n	801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2f0:	4620      	mov	r0, r4
 801e2f2:	f008 f96f 	bl	80265d4 <__cxa_guard_acquire>
 801e2f6:	b138      	cbz	r0, 801e308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e2f8:	4620      	mov	r0, r4
 801e2fa:	f008 f977 	bl	80265ec <__cxa_guard_release>
 801e2fe:	4a06      	ldr	r2, [pc, #24]	; (801e318 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e300:	4909      	ldr	r1, [pc, #36]	; (801e328 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e302:	480a      	ldr	r0, [pc, #40]	; (801e32c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e304:	f008 f95f 	bl	80265c6 <__aeabi_atexit>
 801e308:	4b05      	ldr	r3, [pc, #20]	; (801e320 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e30a:	622b      	str	r3, [r5, #32]
 801e30c:	4b07      	ldr	r3, [pc, #28]	; (801e32c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e30e:	626b      	str	r3, [r5, #36]	; 0x24
 801e310:	bd38      	pop	{r3, r4, r5, pc}
 801e312:	bf00      	nop
 801e314:	2000f004 	.word	0x2000f004
 801e318:	20000000 	.word	0x20000000
 801e31c:	0801afbb 	.word	0x0801afbb
 801e320:	200000b4 	.word	0x200000b4
 801e324:	2000f008 	.word	0x2000f008
 801e328:	0801afb9 	.word	0x0801afb9
 801e32c:	200000b8 	.word	0x200000b8

0801e330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e330:	b538      	push	{r3, r4, r5, lr}
 801e332:	4c15      	ldr	r4, [pc, #84]	; (801e388 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e334:	7823      	ldrb	r3, [r4, #0]
 801e336:	f3bf 8f5b 	dmb	ish
 801e33a:	07da      	lsls	r2, r3, #31
 801e33c:	4605      	mov	r5, r0
 801e33e:	d40b      	bmi.n	801e358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e340:	4620      	mov	r0, r4
 801e342:	f008 f947 	bl	80265d4 <__cxa_guard_acquire>
 801e346:	b138      	cbz	r0, 801e358 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e348:	4620      	mov	r0, r4
 801e34a:	f008 f94f 	bl	80265ec <__cxa_guard_release>
 801e34e:	4a0f      	ldr	r2, [pc, #60]	; (801e38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e350:	490f      	ldr	r1, [pc, #60]	; (801e390 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e352:	4810      	ldr	r0, [pc, #64]	; (801e394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e354:	f008 f937 	bl	80265c6 <__aeabi_atexit>
 801e358:	4c0f      	ldr	r4, [pc, #60]	; (801e398 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e35a:	7823      	ldrb	r3, [r4, #0]
 801e35c:	f3bf 8f5b 	dmb	ish
 801e360:	07db      	lsls	r3, r3, #31
 801e362:	d40b      	bmi.n	801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e364:	4620      	mov	r0, r4
 801e366:	f008 f935 	bl	80265d4 <__cxa_guard_acquire>
 801e36a:	b138      	cbz	r0, 801e37c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e36c:	4620      	mov	r0, r4
 801e36e:	f008 f93d 	bl	80265ec <__cxa_guard_release>
 801e372:	4a06      	ldr	r2, [pc, #24]	; (801e38c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e374:	4909      	ldr	r1, [pc, #36]	; (801e39c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e376:	480a      	ldr	r0, [pc, #40]	; (801e3a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e378:	f008 f925 	bl	80265c6 <__aeabi_atexit>
 801e37c:	4b05      	ldr	r3, [pc, #20]	; (801e394 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e37e:	61ab      	str	r3, [r5, #24]
 801e380:	4b07      	ldr	r3, [pc, #28]	; (801e3a0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e382:	61eb      	str	r3, [r5, #28]
 801e384:	bd38      	pop	{r3, r4, r5, pc}
 801e386:	bf00      	nop
 801e388:	2000efdc 	.word	0x2000efdc
 801e38c:	20000000 	.word	0x20000000
 801e390:	0801afbf 	.word	0x0801afbf
 801e394:	2000008c 	.word	0x2000008c
 801e398:	2000efe0 	.word	0x2000efe0
 801e39c:	0801afbd 	.word	0x0801afbd
 801e3a0:	20000090 	.word	0x20000090

0801e3a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e3a4:	b510      	push	{r4, lr}
 801e3a6:	4604      	mov	r4, r0
 801e3a8:	f7ff ff88 	bl	801e2bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e3ac:	4620      	mov	r0, r4
 801e3ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3b2:	f7ff bfbd 	b.w	801e330 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e3b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e3b8:	b538      	push	{r3, r4, r5, lr}
 801e3ba:	4c15      	ldr	r4, [pc, #84]	; (801e410 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e3bc:	7823      	ldrb	r3, [r4, #0]
 801e3be:	f3bf 8f5b 	dmb	ish
 801e3c2:	07da      	lsls	r2, r3, #31
 801e3c4:	4605      	mov	r5, r0
 801e3c6:	d40b      	bmi.n	801e3e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3c8:	4620      	mov	r0, r4
 801e3ca:	f008 f903 	bl	80265d4 <__cxa_guard_acquire>
 801e3ce:	b138      	cbz	r0, 801e3e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e3d0:	4620      	mov	r0, r4
 801e3d2:	f008 f90b 	bl	80265ec <__cxa_guard_release>
 801e3d6:	4a0f      	ldr	r2, [pc, #60]	; (801e414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3d8:	490f      	ldr	r1, [pc, #60]	; (801e418 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e3da:	4810      	ldr	r0, [pc, #64]	; (801e41c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e3dc:	f008 f8f3 	bl	80265c6 <__aeabi_atexit>
 801e3e0:	4c0f      	ldr	r4, [pc, #60]	; (801e420 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e3e2:	7823      	ldrb	r3, [r4, #0]
 801e3e4:	f3bf 8f5b 	dmb	ish
 801e3e8:	07db      	lsls	r3, r3, #31
 801e3ea:	d40b      	bmi.n	801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3ec:	4620      	mov	r0, r4
 801e3ee:	f008 f8f1 	bl	80265d4 <__cxa_guard_acquire>
 801e3f2:	b138      	cbz	r0, 801e404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e3f4:	4620      	mov	r0, r4
 801e3f6:	f008 f8f9 	bl	80265ec <__cxa_guard_release>
 801e3fa:	4a06      	ldr	r2, [pc, #24]	; (801e414 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e3fc:	4909      	ldr	r1, [pc, #36]	; (801e424 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e3fe:	480a      	ldr	r0, [pc, #40]	; (801e428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e400:	f008 f8e1 	bl	80265c6 <__aeabi_atexit>
 801e404:	4b05      	ldr	r3, [pc, #20]	; (801e41c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e406:	632b      	str	r3, [r5, #48]	; 0x30
 801e408:	4b07      	ldr	r3, [pc, #28]	; (801e428 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e40a:	636b      	str	r3, [r5, #52]	; 0x34
 801e40c:	bd38      	pop	{r3, r4, r5, pc}
 801e40e:	bf00      	nop
 801e410:	2000f014 	.word	0x2000f014
 801e414:	20000000 	.word	0x20000000
 801e418:	0801afb3 	.word	0x0801afb3
 801e41c:	200000c4 	.word	0x200000c4
 801e420:	2000f018 	.word	0x2000f018
 801e424:	0801afb1 	.word	0x0801afb1
 801e428:	200000c8 	.word	0x200000c8

0801e42c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e42c:	b538      	push	{r3, r4, r5, lr}
 801e42e:	4c15      	ldr	r4, [pc, #84]	; (801e484 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e430:	7823      	ldrb	r3, [r4, #0]
 801e432:	f3bf 8f5b 	dmb	ish
 801e436:	07da      	lsls	r2, r3, #31
 801e438:	4605      	mov	r5, r0
 801e43a:	d40b      	bmi.n	801e454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e43c:	4620      	mov	r0, r4
 801e43e:	f008 f8c9 	bl	80265d4 <__cxa_guard_acquire>
 801e442:	b138      	cbz	r0, 801e454 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e444:	4620      	mov	r0, r4
 801e446:	f008 f8d1 	bl	80265ec <__cxa_guard_release>
 801e44a:	4a0f      	ldr	r2, [pc, #60]	; (801e488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e44c:	490f      	ldr	r1, [pc, #60]	; (801e48c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e44e:	4810      	ldr	r0, [pc, #64]	; (801e490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e450:	f008 f8b9 	bl	80265c6 <__aeabi_atexit>
 801e454:	4c0f      	ldr	r4, [pc, #60]	; (801e494 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e456:	7823      	ldrb	r3, [r4, #0]
 801e458:	f3bf 8f5b 	dmb	ish
 801e45c:	07db      	lsls	r3, r3, #31
 801e45e:	d40b      	bmi.n	801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e460:	4620      	mov	r0, r4
 801e462:	f008 f8b7 	bl	80265d4 <__cxa_guard_acquire>
 801e466:	b138      	cbz	r0, 801e478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e468:	4620      	mov	r0, r4
 801e46a:	f008 f8bf 	bl	80265ec <__cxa_guard_release>
 801e46e:	4a06      	ldr	r2, [pc, #24]	; (801e488 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e470:	4909      	ldr	r1, [pc, #36]	; (801e498 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e472:	480a      	ldr	r0, [pc, #40]	; (801e49c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e474:	f008 f8a7 	bl	80265c6 <__aeabi_atexit>
 801e478:	4b05      	ldr	r3, [pc, #20]	; (801e490 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e47a:	62ab      	str	r3, [r5, #40]	; 0x28
 801e47c:	4b07      	ldr	r3, [pc, #28]	; (801e49c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e47e:	62eb      	str	r3, [r5, #44]	; 0x2c
 801e480:	bd38      	pop	{r3, r4, r5, pc}
 801e482:	bf00      	nop
 801e484:	2000efe4 	.word	0x2000efe4
 801e488:	20000000 	.word	0x20000000
 801e48c:	0801afb7 	.word	0x0801afb7
 801e490:	20000094 	.word	0x20000094
 801e494:	2000efe8 	.word	0x2000efe8
 801e498:	0801afb5 	.word	0x0801afb5
 801e49c:	20000098 	.word	0x20000098

0801e4a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e4a0:	b510      	push	{r4, lr}
 801e4a2:	4604      	mov	r4, r0
 801e4a4:	f7ff ff88 	bl	801e3b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e4a8:	4620      	mov	r0, r4
 801e4aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4ae:	f7ff bfbd 	b.w	801e42c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e4b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e4b4:	b538      	push	{r3, r4, r5, lr}
 801e4b6:	4c15      	ldr	r4, [pc, #84]	; (801e50c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e4b8:	7823      	ldrb	r3, [r4, #0]
 801e4ba:	f3bf 8f5b 	dmb	ish
 801e4be:	07da      	lsls	r2, r3, #31
 801e4c0:	4605      	mov	r5, r0
 801e4c2:	d40b      	bmi.n	801e4dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4c4:	4620      	mov	r0, r4
 801e4c6:	f008 f885 	bl	80265d4 <__cxa_guard_acquire>
 801e4ca:	b138      	cbz	r0, 801e4dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e4cc:	4620      	mov	r0, r4
 801e4ce:	f008 f88d 	bl	80265ec <__cxa_guard_release>
 801e4d2:	4a0f      	ldr	r2, [pc, #60]	; (801e510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4d4:	490f      	ldr	r1, [pc, #60]	; (801e514 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e4d6:	4810      	ldr	r0, [pc, #64]	; (801e518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e4d8:	f008 f875 	bl	80265c6 <__aeabi_atexit>
 801e4dc:	4c0f      	ldr	r4, [pc, #60]	; (801e51c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e4de:	7823      	ldrb	r3, [r4, #0]
 801e4e0:	f3bf 8f5b 	dmb	ish
 801e4e4:	07db      	lsls	r3, r3, #31
 801e4e6:	d40b      	bmi.n	801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4e8:	4620      	mov	r0, r4
 801e4ea:	f008 f873 	bl	80265d4 <__cxa_guard_acquire>
 801e4ee:	b138      	cbz	r0, 801e500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e4f0:	4620      	mov	r0, r4
 801e4f2:	f008 f87b 	bl	80265ec <__cxa_guard_release>
 801e4f6:	4a06      	ldr	r2, [pc, #24]	; (801e510 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e4f8:	4909      	ldr	r1, [pc, #36]	; (801e520 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e4fa:	480a      	ldr	r0, [pc, #40]	; (801e524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e4fc:	f008 f863 	bl	80265c6 <__aeabi_atexit>
 801e500:	4b05      	ldr	r3, [pc, #20]	; (801e518 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e502:	652b      	str	r3, [r5, #80]	; 0x50
 801e504:	4b07      	ldr	r3, [pc, #28]	; (801e524 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e506:	656b      	str	r3, [r5, #84]	; 0x54
 801e508:	bd38      	pop	{r3, r4, r5, pc}
 801e50a:	bf00      	nop
 801e50c:	2000f01c 	.word	0x2000f01c
 801e510:	20000000 	.word	0x20000000
 801e514:	0801afa3 	.word	0x0801afa3
 801e518:	200000cc 	.word	0x200000cc
 801e51c:	2000f020 	.word	0x2000f020
 801e520:	0801afa1 	.word	0x0801afa1
 801e524:	200000d0 	.word	0x200000d0

0801e528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e528:	b538      	push	{r3, r4, r5, lr}
 801e52a:	4c15      	ldr	r4, [pc, #84]	; (801e580 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e52c:	7823      	ldrb	r3, [r4, #0]
 801e52e:	f3bf 8f5b 	dmb	ish
 801e532:	07da      	lsls	r2, r3, #31
 801e534:	4605      	mov	r5, r0
 801e536:	d40b      	bmi.n	801e550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e538:	4620      	mov	r0, r4
 801e53a:	f008 f84b 	bl	80265d4 <__cxa_guard_acquire>
 801e53e:	b138      	cbz	r0, 801e550 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e540:	4620      	mov	r0, r4
 801e542:	f008 f853 	bl	80265ec <__cxa_guard_release>
 801e546:	4a0f      	ldr	r2, [pc, #60]	; (801e584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e548:	490f      	ldr	r1, [pc, #60]	; (801e588 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e54a:	4810      	ldr	r0, [pc, #64]	; (801e58c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e54c:	f008 f83b 	bl	80265c6 <__aeabi_atexit>
 801e550:	4c0f      	ldr	r4, [pc, #60]	; (801e590 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e552:	7823      	ldrb	r3, [r4, #0]
 801e554:	f3bf 8f5b 	dmb	ish
 801e558:	07db      	lsls	r3, r3, #31
 801e55a:	d40b      	bmi.n	801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e55c:	4620      	mov	r0, r4
 801e55e:	f008 f839 	bl	80265d4 <__cxa_guard_acquire>
 801e562:	b138      	cbz	r0, 801e574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e564:	4620      	mov	r0, r4
 801e566:	f008 f841 	bl	80265ec <__cxa_guard_release>
 801e56a:	4a06      	ldr	r2, [pc, #24]	; (801e584 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e56c:	4909      	ldr	r1, [pc, #36]	; (801e594 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e56e:	480a      	ldr	r0, [pc, #40]	; (801e598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e570:	f008 f829 	bl	80265c6 <__aeabi_atexit>
 801e574:	4b05      	ldr	r3, [pc, #20]	; (801e58c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e576:	64ab      	str	r3, [r5, #72]	; 0x48
 801e578:	4b07      	ldr	r3, [pc, #28]	; (801e598 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e57a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801e57c:	bd38      	pop	{r3, r4, r5, pc}
 801e57e:	bf00      	nop
 801e580:	2000f024 	.word	0x2000f024
 801e584:	20000000 	.word	0x20000000
 801e588:	0801afa7 	.word	0x0801afa7
 801e58c:	200000d4 	.word	0x200000d4
 801e590:	2000f028 	.word	0x2000f028
 801e594:	0801afa5 	.word	0x0801afa5
 801e598:	200000d8 	.word	0x200000d8

0801e59c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e59c:	b538      	push	{r3, r4, r5, lr}
 801e59e:	4c15      	ldr	r4, [pc, #84]	; (801e5f4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e5a0:	7823      	ldrb	r3, [r4, #0]
 801e5a2:	f3bf 8f5b 	dmb	ish
 801e5a6:	07da      	lsls	r2, r3, #31
 801e5a8:	4605      	mov	r5, r0
 801e5aa:	d40b      	bmi.n	801e5c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e5ac:	4620      	mov	r0, r4
 801e5ae:	f008 f811 	bl	80265d4 <__cxa_guard_acquire>
 801e5b2:	b138      	cbz	r0, 801e5c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e5b4:	4620      	mov	r0, r4
 801e5b6:	f008 f819 	bl	80265ec <__cxa_guard_release>
 801e5ba:	4a0f      	ldr	r2, [pc, #60]	; (801e5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5bc:	490f      	ldr	r1, [pc, #60]	; (801e5fc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e5be:	4810      	ldr	r0, [pc, #64]	; (801e600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5c0:	f008 f801 	bl	80265c6 <__aeabi_atexit>
 801e5c4:	4c0f      	ldr	r4, [pc, #60]	; (801e604 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e5c6:	7823      	ldrb	r3, [r4, #0]
 801e5c8:	f3bf 8f5b 	dmb	ish
 801e5cc:	07db      	lsls	r3, r3, #31
 801e5ce:	d40b      	bmi.n	801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5d0:	4620      	mov	r0, r4
 801e5d2:	f007 ffff 	bl	80265d4 <__cxa_guard_acquire>
 801e5d6:	b138      	cbz	r0, 801e5e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e5d8:	4620      	mov	r0, r4
 801e5da:	f008 f807 	bl	80265ec <__cxa_guard_release>
 801e5de:	4a06      	ldr	r2, [pc, #24]	; (801e5f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e5e0:	4909      	ldr	r1, [pc, #36]	; (801e608 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e5e2:	480a      	ldr	r0, [pc, #40]	; (801e60c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5e4:	f007 ffef 	bl	80265c6 <__aeabi_atexit>
 801e5e8:	4b05      	ldr	r3, [pc, #20]	; (801e600 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e5ea:	642b      	str	r3, [r5, #64]	; 0x40
 801e5ec:	4b07      	ldr	r3, [pc, #28]	; (801e60c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e5ee:	646b      	str	r3, [r5, #68]	; 0x44
 801e5f0:	bd38      	pop	{r3, r4, r5, pc}
 801e5f2:	bf00      	nop
 801e5f4:	2000efec 	.word	0x2000efec
 801e5f8:	20000000 	.word	0x20000000
 801e5fc:	0801afab 	.word	0x0801afab
 801e600:	2000009c 	.word	0x2000009c
 801e604:	2000eff0 	.word	0x2000eff0
 801e608:	0801afa9 	.word	0x0801afa9
 801e60c:	200000a0 	.word	0x200000a0

0801e610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e610:	b538      	push	{r3, r4, r5, lr}
 801e612:	4c15      	ldr	r4, [pc, #84]	; (801e668 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e614:	7823      	ldrb	r3, [r4, #0]
 801e616:	f3bf 8f5b 	dmb	ish
 801e61a:	07da      	lsls	r2, r3, #31
 801e61c:	4605      	mov	r5, r0
 801e61e:	d40b      	bmi.n	801e638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e620:	4620      	mov	r0, r4
 801e622:	f007 ffd7 	bl	80265d4 <__cxa_guard_acquire>
 801e626:	b138      	cbz	r0, 801e638 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e628:	4620      	mov	r0, r4
 801e62a:	f007 ffdf 	bl	80265ec <__cxa_guard_release>
 801e62e:	4a0f      	ldr	r2, [pc, #60]	; (801e66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e630:	490f      	ldr	r1, [pc, #60]	; (801e670 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e632:	4810      	ldr	r0, [pc, #64]	; (801e674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e634:	f007 ffc7 	bl	80265c6 <__aeabi_atexit>
 801e638:	4c0f      	ldr	r4, [pc, #60]	; (801e678 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e63a:	7823      	ldrb	r3, [r4, #0]
 801e63c:	f3bf 8f5b 	dmb	ish
 801e640:	07db      	lsls	r3, r3, #31
 801e642:	d40b      	bmi.n	801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e644:	4620      	mov	r0, r4
 801e646:	f007 ffc5 	bl	80265d4 <__cxa_guard_acquire>
 801e64a:	b138      	cbz	r0, 801e65c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e64c:	4620      	mov	r0, r4
 801e64e:	f007 ffcd 	bl	80265ec <__cxa_guard_release>
 801e652:	4a06      	ldr	r2, [pc, #24]	; (801e66c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e654:	4909      	ldr	r1, [pc, #36]	; (801e67c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e656:	480a      	ldr	r0, [pc, #40]	; (801e680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e658:	f007 ffb5 	bl	80265c6 <__aeabi_atexit>
 801e65c:	4b05      	ldr	r3, [pc, #20]	; (801e674 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e65e:	63ab      	str	r3, [r5, #56]	; 0x38
 801e660:	4b07      	ldr	r3, [pc, #28]	; (801e680 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e662:	63eb      	str	r3, [r5, #60]	; 0x3c
 801e664:	bd38      	pop	{r3, r4, r5, pc}
 801e666:	bf00      	nop
 801e668:	2000f00c 	.word	0x2000f00c
 801e66c:	20000000 	.word	0x20000000
 801e670:	0801afaf 	.word	0x0801afaf
 801e674:	200000bc 	.word	0x200000bc
 801e678:	2000f010 	.word	0x2000f010
 801e67c:	0801afad 	.word	0x0801afad
 801e680:	200000c0 	.word	0x200000c0

0801e684 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e684:	b510      	push	{r4, lr}
 801e686:	4604      	mov	r4, r0
 801e688:	f7ff ff14 	bl	801e4b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e68c:	4620      	mov	r0, r4
 801e68e:	f7ff ff85 	bl	801e59c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e692:	4620      	mov	r0, r4
 801e694:	f7ff ff48 	bl	801e528 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e698:	4620      	mov	r0, r4
 801e69a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e69e:	f7ff bfb7 	b.w	801e610 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e6a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e6a4:	b538      	push	{r3, r4, r5, lr}
 801e6a6:	4c15      	ldr	r4, [pc, #84]	; (801e6fc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e6a8:	7823      	ldrb	r3, [r4, #0]
 801e6aa:	f3bf 8f5b 	dmb	ish
 801e6ae:	07da      	lsls	r2, r3, #31
 801e6b0:	4605      	mov	r5, r0
 801e6b2:	d40b      	bmi.n	801e6cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6b4:	4620      	mov	r0, r4
 801e6b6:	f007 ff8d 	bl	80265d4 <__cxa_guard_acquire>
 801e6ba:	b138      	cbz	r0, 801e6cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e6bc:	4620      	mov	r0, r4
 801e6be:	f007 ff95 	bl	80265ec <__cxa_guard_release>
 801e6c2:	4a0f      	ldr	r2, [pc, #60]	; (801e700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6c4:	490f      	ldr	r1, [pc, #60]	; (801e704 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e6c6:	4810      	ldr	r0, [pc, #64]	; (801e708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6c8:	f007 ff7d 	bl	80265c6 <__aeabi_atexit>
 801e6cc:	4c0f      	ldr	r4, [pc, #60]	; (801e70c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e6ce:	7823      	ldrb	r3, [r4, #0]
 801e6d0:	f3bf 8f5b 	dmb	ish
 801e6d4:	07db      	lsls	r3, r3, #31
 801e6d6:	d40b      	bmi.n	801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6d8:	4620      	mov	r0, r4
 801e6da:	f007 ff7b 	bl	80265d4 <__cxa_guard_acquire>
 801e6de:	b138      	cbz	r0, 801e6f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e6e0:	4620      	mov	r0, r4
 801e6e2:	f007 ff83 	bl	80265ec <__cxa_guard_release>
 801e6e6:	4a06      	ldr	r2, [pc, #24]	; (801e700 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e6e8:	4909      	ldr	r1, [pc, #36]	; (801e710 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e6ea:	480a      	ldr	r0, [pc, #40]	; (801e714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6ec:	f007 ff6b 	bl	80265c6 <__aeabi_atexit>
 801e6f0:	4b05      	ldr	r3, [pc, #20]	; (801e708 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e6f2:	662b      	str	r3, [r5, #96]	; 0x60
 801e6f4:	4b07      	ldr	r3, [pc, #28]	; (801e714 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e6f6:	666b      	str	r3, [r5, #100]	; 0x64
 801e6f8:	bd38      	pop	{r3, r4, r5, pc}
 801e6fa:	bf00      	nop
 801e6fc:	2000eff4 	.word	0x2000eff4
 801e700:	20000000 	.word	0x20000000
 801e704:	0801af9b 	.word	0x0801af9b
 801e708:	200000a4 	.word	0x200000a4
 801e70c:	2000eff8 	.word	0x2000eff8
 801e710:	0801af99 	.word	0x0801af99
 801e714:	200000a8 	.word	0x200000a8

0801e718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e718:	b538      	push	{r3, r4, r5, lr}
 801e71a:	4c15      	ldr	r4, [pc, #84]	; (801e770 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e71c:	7823      	ldrb	r3, [r4, #0]
 801e71e:	f3bf 8f5b 	dmb	ish
 801e722:	07da      	lsls	r2, r3, #31
 801e724:	4605      	mov	r5, r0
 801e726:	d40b      	bmi.n	801e740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e728:	4620      	mov	r0, r4
 801e72a:	f007 ff53 	bl	80265d4 <__cxa_guard_acquire>
 801e72e:	b138      	cbz	r0, 801e740 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e730:	4620      	mov	r0, r4
 801e732:	f007 ff5b 	bl	80265ec <__cxa_guard_release>
 801e736:	4a0f      	ldr	r2, [pc, #60]	; (801e774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e738:	490f      	ldr	r1, [pc, #60]	; (801e778 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e73a:	4810      	ldr	r0, [pc, #64]	; (801e77c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e73c:	f007 ff43 	bl	80265c6 <__aeabi_atexit>
 801e740:	4c0f      	ldr	r4, [pc, #60]	; (801e780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e742:	7823      	ldrb	r3, [r4, #0]
 801e744:	f3bf 8f5b 	dmb	ish
 801e748:	07db      	lsls	r3, r3, #31
 801e74a:	d40b      	bmi.n	801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e74c:	4620      	mov	r0, r4
 801e74e:	f007 ff41 	bl	80265d4 <__cxa_guard_acquire>
 801e752:	b138      	cbz	r0, 801e764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e754:	4620      	mov	r0, r4
 801e756:	f007 ff49 	bl	80265ec <__cxa_guard_release>
 801e75a:	4a06      	ldr	r2, [pc, #24]	; (801e774 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e75c:	4909      	ldr	r1, [pc, #36]	; (801e784 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e75e:	480a      	ldr	r0, [pc, #40]	; (801e788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e760:	f007 ff31 	bl	80265c6 <__aeabi_atexit>
 801e764:	4b05      	ldr	r3, [pc, #20]	; (801e77c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e766:	65ab      	str	r3, [r5, #88]	; 0x58
 801e768:	4b07      	ldr	r3, [pc, #28]	; (801e788 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e76a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801e76c:	bd38      	pop	{r3, r4, r5, pc}
 801e76e:	bf00      	nop
 801e770:	2000efcc 	.word	0x2000efcc
 801e774:	20000000 	.word	0x20000000
 801e778:	0801af9f 	.word	0x0801af9f
 801e77c:	2000007c 	.word	0x2000007c
 801e780:	2000efd0 	.word	0x2000efd0
 801e784:	0801af9d 	.word	0x0801af9d
 801e788:	20000080 	.word	0x20000080

0801e78c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e78c:	b510      	push	{r4, lr}
 801e78e:	4604      	mov	r4, r0
 801e790:	f7ff ff88 	bl	801e6a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e794:	4620      	mov	r0, r4
 801e796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e79a:	f7ff bfbd 	b.w	801e718 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e7a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e7a0:	b538      	push	{r3, r4, r5, lr}
 801e7a2:	4c15      	ldr	r4, [pc, #84]	; (801e7f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e7a4:	7823      	ldrb	r3, [r4, #0]
 801e7a6:	f3bf 8f5b 	dmb	ish
 801e7aa:	07da      	lsls	r2, r3, #31
 801e7ac:	4605      	mov	r5, r0
 801e7ae:	d40b      	bmi.n	801e7c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7b0:	4620      	mov	r0, r4
 801e7b2:	f007 ff0f 	bl	80265d4 <__cxa_guard_acquire>
 801e7b6:	b138      	cbz	r0, 801e7c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e7b8:	4620      	mov	r0, r4
 801e7ba:	f007 ff17 	bl	80265ec <__cxa_guard_release>
 801e7be:	4a0f      	ldr	r2, [pc, #60]	; (801e7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7c0:	490f      	ldr	r1, [pc, #60]	; (801e800 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e7c2:	4810      	ldr	r0, [pc, #64]	; (801e804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7c4:	f007 feff 	bl	80265c6 <__aeabi_atexit>
 801e7c8:	4c0f      	ldr	r4, [pc, #60]	; (801e808 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e7ca:	7823      	ldrb	r3, [r4, #0]
 801e7cc:	f3bf 8f5b 	dmb	ish
 801e7d0:	07db      	lsls	r3, r3, #31
 801e7d2:	d40b      	bmi.n	801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7d4:	4620      	mov	r0, r4
 801e7d6:	f007 fefd 	bl	80265d4 <__cxa_guard_acquire>
 801e7da:	b138      	cbz	r0, 801e7ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e7dc:	4620      	mov	r0, r4
 801e7de:	f007 ff05 	bl	80265ec <__cxa_guard_release>
 801e7e2:	4a06      	ldr	r2, [pc, #24]	; (801e7fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e7e4:	4909      	ldr	r1, [pc, #36]	; (801e80c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e7e6:	480a      	ldr	r0, [pc, #40]	; (801e810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7e8:	f007 feed 	bl	80265c6 <__aeabi_atexit>
 801e7ec:	4b05      	ldr	r3, [pc, #20]	; (801e804 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e7ee:	672b      	str	r3, [r5, #112]	; 0x70
 801e7f0:	4b07      	ldr	r3, [pc, #28]	; (801e810 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e7f2:	676b      	str	r3, [r5, #116]	; 0x74
 801e7f4:	bd38      	pop	{r3, r4, r5, pc}
 801e7f6:	bf00      	nop
 801e7f8:	2000efc4 	.word	0x2000efc4
 801e7fc:	20000000 	.word	0x20000000
 801e800:	0801af93 	.word	0x0801af93
 801e804:	20000074 	.word	0x20000074
 801e808:	2000efc8 	.word	0x2000efc8
 801e80c:	0801af91 	.word	0x0801af91
 801e810:	20000078 	.word	0x20000078

0801e814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e814:	b538      	push	{r3, r4, r5, lr}
 801e816:	4c15      	ldr	r4, [pc, #84]	; (801e86c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e818:	7823      	ldrb	r3, [r4, #0]
 801e81a:	f3bf 8f5b 	dmb	ish
 801e81e:	07da      	lsls	r2, r3, #31
 801e820:	4605      	mov	r5, r0
 801e822:	d40b      	bmi.n	801e83c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e824:	4620      	mov	r0, r4
 801e826:	f007 fed5 	bl	80265d4 <__cxa_guard_acquire>
 801e82a:	b138      	cbz	r0, 801e83c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e82c:	4620      	mov	r0, r4
 801e82e:	f007 fedd 	bl	80265ec <__cxa_guard_release>
 801e832:	4a0f      	ldr	r2, [pc, #60]	; (801e870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e834:	490f      	ldr	r1, [pc, #60]	; (801e874 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e836:	4810      	ldr	r0, [pc, #64]	; (801e878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e838:	f007 fec5 	bl	80265c6 <__aeabi_atexit>
 801e83c:	4c0f      	ldr	r4, [pc, #60]	; (801e87c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e83e:	7823      	ldrb	r3, [r4, #0]
 801e840:	f3bf 8f5b 	dmb	ish
 801e844:	07db      	lsls	r3, r3, #31
 801e846:	d40b      	bmi.n	801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e848:	4620      	mov	r0, r4
 801e84a:	f007 fec3 	bl	80265d4 <__cxa_guard_acquire>
 801e84e:	b138      	cbz	r0, 801e860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e850:	4620      	mov	r0, r4
 801e852:	f007 fecb 	bl	80265ec <__cxa_guard_release>
 801e856:	4a06      	ldr	r2, [pc, #24]	; (801e870 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e858:	4909      	ldr	r1, [pc, #36]	; (801e880 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e85a:	480a      	ldr	r0, [pc, #40]	; (801e884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e85c:	f007 feb3 	bl	80265c6 <__aeabi_atexit>
 801e860:	4b05      	ldr	r3, [pc, #20]	; (801e878 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e862:	66ab      	str	r3, [r5, #104]	; 0x68
 801e864:	4b07      	ldr	r3, [pc, #28]	; (801e884 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e866:	66eb      	str	r3, [r5, #108]	; 0x6c
 801e868:	bd38      	pop	{r3, r4, r5, pc}
 801e86a:	bf00      	nop
 801e86c:	2000efbc 	.word	0x2000efbc
 801e870:	20000000 	.word	0x20000000
 801e874:	0801af97 	.word	0x0801af97
 801e878:	2000006c 	.word	0x2000006c
 801e87c:	2000efc0 	.word	0x2000efc0
 801e880:	0801af95 	.word	0x0801af95
 801e884:	20000070 	.word	0x20000070

0801e888 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e888:	b510      	push	{r4, lr}
 801e88a:	4604      	mov	r4, r0
 801e88c:	f7ff ff88 	bl	801e7a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e890:	4620      	mov	r0, r4
 801e892:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e896:	f7ff bfbd 	b.w	801e814 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e89a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e89a:	b510      	push	{r4, lr}
 801e89c:	4604      	mov	r4, r0
 801e89e:	f7ff fff3 	bl	801e888 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e8a2:	4620      	mov	r0, r4
 801e8a4:	f7ff ff72 	bl	801e78c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e8a8:	4620      	mov	r0, r4
 801e8aa:	f7ff fdf9 	bl	801e4a0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e8ae:	4620      	mov	r0, r4
 801e8b0:	f7ff fcfa 	bl	801e2a8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e8b4:	4620      	mov	r0, r4
 801e8b6:	f7ff fd75 	bl	801e3a4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e8ba:	4620      	mov	r0, r4
 801e8bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e8c0:	f7ff bee0 	b.w	801e684 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e8c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e8c4:	b538      	push	{r3, r4, r5, lr}
 801e8c6:	4c0b      	ldr	r4, [pc, #44]	; (801e8f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e8c8:	7823      	ldrb	r3, [r4, #0]
 801e8ca:	f3bf 8f5b 	dmb	ish
 801e8ce:	07db      	lsls	r3, r3, #31
 801e8d0:	4605      	mov	r5, r0
 801e8d2:	d40b      	bmi.n	801e8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8d4:	4620      	mov	r0, r4
 801e8d6:	f007 fe7d 	bl	80265d4 <__cxa_guard_acquire>
 801e8da:	b138      	cbz	r0, 801e8ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e8dc:	4620      	mov	r0, r4
 801e8de:	f007 fe85 	bl	80265ec <__cxa_guard_release>
 801e8e2:	4a05      	ldr	r2, [pc, #20]	; (801e8f8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e8e4:	4905      	ldr	r1, [pc, #20]	; (801e8fc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e8e6:	4806      	ldr	r0, [pc, #24]	; (801e900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8e8:	f007 fe6d 	bl	80265c6 <__aeabi_atexit>
 801e8ec:	4b04      	ldr	r3, [pc, #16]	; (801e900 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e8ee:	67ab      	str	r3, [r5, #120]	; 0x78
 801e8f0:	bd38      	pop	{r3, r4, r5, pc}
 801e8f2:	bf00      	nop
 801e8f4:	2000efb0 	.word	0x2000efb0
 801e8f8:	20000000 	.word	0x20000000
 801e8fc:	0801af8f 	.word	0x0801af8f
 801e900:	20000064 	.word	0x20000064

0801e904 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e904:	b538      	push	{r3, r4, r5, lr}
 801e906:	4c0b      	ldr	r4, [pc, #44]	; (801e934 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e908:	7823      	ldrb	r3, [r4, #0]
 801e90a:	f3bf 8f5b 	dmb	ish
 801e90e:	07db      	lsls	r3, r3, #31
 801e910:	4605      	mov	r5, r0
 801e912:	d40b      	bmi.n	801e92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e914:	4620      	mov	r0, r4
 801e916:	f007 fe5d 	bl	80265d4 <__cxa_guard_acquire>
 801e91a:	b138      	cbz	r0, 801e92c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e91c:	4620      	mov	r0, r4
 801e91e:	f007 fe65 	bl	80265ec <__cxa_guard_release>
 801e922:	4a05      	ldr	r2, [pc, #20]	; (801e938 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e924:	4905      	ldr	r1, [pc, #20]	; (801e93c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e926:	4806      	ldr	r0, [pc, #24]	; (801e940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e928:	f007 fe4d 	bl	80265c6 <__aeabi_atexit>
 801e92c:	4b04      	ldr	r3, [pc, #16]	; (801e940 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e92e:	67eb      	str	r3, [r5, #124]	; 0x7c
 801e930:	bd38      	pop	{r3, r4, r5, pc}
 801e932:	bf00      	nop
 801e934:	2000efb4 	.word	0x2000efb4
 801e938:	20000000 	.word	0x20000000
 801e93c:	0801af8d 	.word	0x0801af8d
 801e940:	20000068 	.word	0x20000068

0801e944 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e944:	b570      	push	{r4, r5, r6, lr}
 801e946:	4d0d      	ldr	r5, [pc, #52]	; (801e97c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e948:	4c0d      	ldr	r4, [pc, #52]	; (801e980 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e94a:	782b      	ldrb	r3, [r5, #0]
 801e94c:	f3bf 8f5b 	dmb	ish
 801e950:	f013 0f01 	tst.w	r3, #1
 801e954:	4606      	mov	r6, r0
 801e956:	d10d      	bne.n	801e974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e958:	4628      	mov	r0, r5
 801e95a:	f007 fe3b 	bl	80265d4 <__cxa_guard_acquire>
 801e95e:	b148      	cbz	r0, 801e974 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e960:	4b08      	ldr	r3, [pc, #32]	; (801e984 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e962:	6023      	str	r3, [r4, #0]
 801e964:	4628      	mov	r0, r5
 801e966:	f007 fe41 	bl	80265ec <__cxa_guard_release>
 801e96a:	4a07      	ldr	r2, [pc, #28]	; (801e988 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e96c:	4907      	ldr	r1, [pc, #28]	; (801e98c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e96e:	4620      	mov	r0, r4
 801e970:	f007 fe29 	bl	80265c6 <__aeabi_atexit>
 801e974:	f8c6 4080 	str.w	r4, [r6, #128]	; 0x80
 801e978:	bd70      	pop	{r4, r5, r6, pc}
 801e97a:	bf00      	nop
 801e97c:	2000efb8 	.word	0x2000efb8
 801e980:	2000f02c 	.word	0x2000f02c
 801e984:	0802a790 	.word	0x0802a790
 801e988:	20000000 	.word	0x20000000
 801e98c:	0801af8b 	.word	0x0801af8b

0801e990 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e990:	b510      	push	{r4, lr}
 801e992:	4604      	mov	r4, r0
 801e994:	f7ff ff96 	bl	801e8c4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e998:	4620      	mov	r0, r4
 801e99a:	f7ff ffb3 	bl	801e904 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e99e:	4620      	mov	r0, r4
 801e9a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e9a4:	f7ff bfce 	b.w	801e944 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e9a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e9a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e9ac:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 801e9b0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 801e9b4:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 801e9b8:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 801e9bc:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 801e9c0:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 801e9c4:	8808      	ldrh	r0, [r1, #0]
 801e9c6:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e9ca:	2d00      	cmp	r5, #0
 801e9cc:	eb02 0a0c 	add.w	sl, r2, ip
 801e9d0:	f2c0 80b0 	blt.w	801eb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9d4:	45ab      	cmp	fp, r5
 801e9d6:	f340 80ad 	ble.w	801eb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e9da:	2c00      	cmp	r4, #0
 801e9dc:	f2c0 80a8 	blt.w	801eb30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9e0:	45a6      	cmp	lr, r4
 801e9e2:	f340 80a5 	ble.w	801eb30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e9e6:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e9ea:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e9ee:	1c62      	adds	r2, r4, #1
 801e9f0:	f100 80a3 	bmi.w	801eb3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9f4:	4596      	cmp	lr, r2
 801e9f6:	f340 80a0 	ble.w	801eb3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e9fa:	f1b9 0f00 	cmp.w	r9, #0
 801e9fe:	f000 809c 	beq.w	801eb3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801ea02:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ea06:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ea0a:	3501      	adds	r5, #1
 801ea0c:	f100 8099 	bmi.w	801eb42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea10:	45ab      	cmp	fp, r5
 801ea12:	f340 8096 	ble.w	801eb42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea16:	2f00      	cmp	r7, #0
 801ea18:	f000 8093 	beq.w	801eb42 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801ea1c:	2c00      	cmp	r4, #0
 801ea1e:	f2c0 808e 	blt.w	801eb3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea22:	45a6      	cmp	lr, r4
 801ea24:	f340 808b 	ble.w	801eb3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801ea28:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801ea2c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801ea30:	3401      	adds	r4, #1
 801ea32:	f100 8089 	bmi.w	801eb48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea36:	45a6      	cmp	lr, r4
 801ea38:	f340 8086 	ble.w	801eb48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea3c:	f1b9 0f00 	cmp.w	r9, #0
 801ea40:	f000 8082 	beq.w	801eb48 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801ea44:	44d6      	add	lr, sl
 801ea46:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ea4a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801ea4e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801ea52:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea56:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801ea5a:	fb19 fe07 	smulbb	lr, r9, r7
 801ea5e:	ea44 0808 	orr.w	r8, r4, r8
 801ea62:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801ea66:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801ea6a:	f1c7 0210 	rsb	r2, r7, #16
 801ea6e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ea72:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ea76:	ea44 0c0c 	orr.w	ip, r4, ip
 801ea7a:	eba2 0209 	sub.w	r2, r2, r9
 801ea7e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801ea82:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801ea86:	fb04 f40c 	mul.w	r4, r4, ip
 801ea8a:	fb02 4808 	mla	r8, r2, r8, r4
 801ea8e:	041a      	lsls	r2, r3, #16
 801ea90:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ea94:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ea98:	4313      	orrs	r3, r2
 801ea9a:	042a      	lsls	r2, r5, #16
 801ea9c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801eaa0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801eaa4:	fb0e 8303 	mla	r3, lr, r3, r8
 801eaa8:	432a      	orrs	r2, r5
 801eaaa:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801eaae:	fb07 3202 	mla	r2, r7, r2, r3
 801eab2:	0d53      	lsrs	r3, r2, #21
 801eab4:	0952      	lsrs	r2, r2, #5
 801eab6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801eaba:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801eabe:	431a      	orrs	r2, r3
 801eac0:	b293      	uxth	r3, r2
 801eac2:	b2b4      	uxth	r4, r6
 801eac4:	1202      	asrs	r2, r0, #8
 801eac6:	43f6      	mvns	r6, r6
 801eac8:	b2f6      	uxtb	r6, r6
 801eaca:	121d      	asrs	r5, r3, #8
 801eacc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ead0:	fb12 f206 	smulbb	r2, r2, r6
 801ead4:	10c7      	asrs	r7, r0, #3
 801ead6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801eada:	00c0      	lsls	r0, r0, #3
 801eadc:	fb05 2504 	mla	r5, r5, r4, r2
 801eae0:	b2c0      	uxtb	r0, r0
 801eae2:	10da      	asrs	r2, r3, #3
 801eae4:	00db      	lsls	r3, r3, #3
 801eae6:	b2db      	uxtb	r3, r3
 801eae8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801eaec:	fb10 f006 	smulbb	r0, r0, r6
 801eaf0:	b2ad      	uxth	r5, r5
 801eaf2:	fb03 0004 	mla	r0, r3, r4, r0
 801eaf6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801eafa:	fb17 f706 	smulbb	r7, r7, r6
 801eafe:	b280      	uxth	r0, r0
 801eb00:	1c6b      	adds	r3, r5, #1
 801eb02:	fb02 7204 	mla	r2, r2, r4, r7
 801eb06:	b292      	uxth	r2, r2
 801eb08:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801eb0c:	1c43      	adds	r3, r0, #1
 801eb0e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801eb12:	1c50      	adds	r0, r2, #1
 801eb14:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801eb18:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801eb1c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eb20:	0952      	lsrs	r2, r2, #5
 801eb22:	432b      	orrs	r3, r5
 801eb24:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eb28:	4313      	orrs	r3, r2
 801eb2a:	800b      	strh	r3, [r1, #0]
 801eb2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eb30:	4680      	mov	r8, r0
 801eb32:	e75c      	b.n	801e9ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801eb34:	4684      	mov	ip, r0
 801eb36:	4680      	mov	r8, r0
 801eb38:	e767      	b.n	801ea0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb3a:	4684      	mov	ip, r0
 801eb3c:	e765      	b.n	801ea0a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801eb3e:	4605      	mov	r5, r0
 801eb40:	e776      	b.n	801ea30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801eb42:	4603      	mov	r3, r0
 801eb44:	4605      	mov	r5, r0
 801eb46:	e782      	b.n	801ea4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801eb48:	4603      	mov	r3, r0
 801eb4a:	e780      	b.n	801ea4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801eb4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eb4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eb50:	b099      	sub	sp, #100	; 0x64
 801eb52:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 801eb56:	9215      	str	r2, [sp, #84]	; 0x54
 801eb58:	9309      	str	r3, [sp, #36]	; 0x24
 801eb5a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801eb5c:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801eb60:	930d      	str	r3, [sp, #52]	; 0x34
 801eb62:	910c      	str	r1, [sp, #48]	; 0x30
 801eb64:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 801eb68:	9016      	str	r0, [sp, #88]	; 0x58
 801eb6a:	6850      	ldr	r0, [r2, #4]
 801eb6c:	6812      	ldr	r2, [r2, #0]
 801eb6e:	fb00 1303 	mla	r3, r0, r3, r1
 801eb72:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801eb76:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb78:	681b      	ldr	r3, [r3, #0]
 801eb7a:	930b      	str	r3, [sp, #44]	; 0x2c
 801eb7c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb7e:	685e      	ldr	r6, [r3, #4]
 801eb80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801eb82:	43db      	mvns	r3, r3
 801eb84:	b2db      	uxtb	r3, r3
 801eb86:	3604      	adds	r6, #4
 801eb88:	930a      	str	r3, [sp, #40]	; 0x28
 801eb8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801eb8c:	2b00      	cmp	r3, #0
 801eb8e:	dc03      	bgt.n	801eb98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801eb90:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801eb92:	2b00      	cmp	r3, #0
 801eb94:	f340 8225 	ble.w	801efe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb98:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801eb9a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eb9e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eba2:	1e48      	subs	r0, r1, #1
 801eba4:	1e57      	subs	r7, r2, #1
 801eba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801eba8:	2b00      	cmp	r3, #0
 801ebaa:	f340 80e3 	ble.w	801ed74 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801ebae:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801ebb2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ebb6:	d406      	bmi.n	801ebc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebb8:	4584      	cmp	ip, r0
 801ebba:	da04      	bge.n	801ebc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebbc:	2b00      	cmp	r3, #0
 801ebbe:	db02      	blt.n	801ebc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ebc0:	42bb      	cmp	r3, r7
 801ebc2:	f2c0 80d8 	blt.w	801ed76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801ebc6:	f11c 0c01 	adds.w	ip, ip, #1
 801ebca:	f100 80c9 	bmi.w	801ed60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebce:	4561      	cmp	r1, ip
 801ebd0:	f2c0 80c6 	blt.w	801ed60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebd4:	3301      	adds	r3, #1
 801ebd6:	f100 80c3 	bmi.w	801ed60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebda:	429a      	cmp	r2, r3
 801ebdc:	f2c0 80c0 	blt.w	801ed60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801ebe0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ebe4:	4647      	mov	r7, r8
 801ebe6:	f1bb 0f00 	cmp.w	fp, #0
 801ebea:	f340 80e3 	ble.w	801edb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801ebee:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801ebf0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ebf2:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ebf6:	689b      	ldr	r3, [r3, #8]
 801ebf8:	ea5f 422a 	movs.w	r2, sl, asr #16
 801ebfc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ec00:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801ec04:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ec08:	f100 8121 	bmi.w	801ee4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec0c:	f103 39ff 	add.w	r9, r3, #4294967295
 801ec10:	454a      	cmp	r2, r9
 801ec12:	f280 811c 	bge.w	801ee4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec16:	f1bc 0f00 	cmp.w	ip, #0
 801ec1a:	f2c0 8118 	blt.w	801ee4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec1e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801ec22:	45cc      	cmp	ip, r9
 801ec24:	f280 8113 	bge.w	801ee4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801ec28:	b21b      	sxth	r3, r3
 801ec2a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ec2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ec30:	eb04 0902 	add.w	r9, r4, r2
 801ec34:	5ca2      	ldrb	r2, [r4, r2]
 801ec36:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801ec3a:	2800      	cmp	r0, #0
 801ec3c:	f000 80fe 	beq.w	801ee3c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ec40:	f899 2001 	ldrb.w	r2, [r9, #1]
 801ec44:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801ec48:	9211      	str	r2, [sp, #68]	; 0x44
 801ec4a:	b151      	cbz	r1, 801ec62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ec4c:	eb09 0203 	add.w	r2, r9, r3
 801ec50:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ec54:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec58:	930f      	str	r3, [sp, #60]	; 0x3c
 801ec5a:	7853      	ldrb	r3, [r2, #1]
 801ec5c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec60:	9312      	str	r3, [sp, #72]	; 0x48
 801ec62:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ec64:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ec66:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec6a:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec6e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ec72:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec76:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ec78:	041b      	lsls	r3, r3, #16
 801ec7a:	fb10 f201 	smulbb	r2, r0, r1
 801ec7e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ec82:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801ec86:	10d2      	asrs	r2, r2, #3
 801ec88:	4323      	orrs	r3, r4
 801ec8a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ec8e:	4353      	muls	r3, r2
 801ec90:	fb09 330c 	mla	r3, r9, ip, r3
 801ec94:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ec98:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ec9c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801eca0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801eca4:	f1c1 0c10 	rsb	ip, r1, #16
 801eca8:	ebac 0c00 	sub.w	ip, ip, r0
 801ecac:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ecb0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ecb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ecb6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ecb8:	0418      	lsls	r0, r3, #16
 801ecba:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ecbe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801ecc2:	4318      	orrs	r0, r3
 801ecc4:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ecc8:	fb02 c200 	mla	r2, r2, r0, ip
 801eccc:	0d53      	lsrs	r3, r2, #21
 801ecce:	0952      	lsrs	r2, r2, #5
 801ecd0:	8838      	ldrh	r0, [r7, #0]
 801ecd2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ecd6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ecda:	431a      	orrs	r2, r3
 801ecdc:	b292      	uxth	r2, r2
 801ecde:	1201      	asrs	r1, r0, #8
 801ece0:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801ece4:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ece8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ecec:	fb11 f104 	smulbb	r1, r1, r4
 801ecf0:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ecf4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801ecf8:	00c0      	lsls	r0, r0, #3
 801ecfa:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ecfe:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801ed02:	10d1      	asrs	r1, r2, #3
 801ed04:	b2c0      	uxtb	r0, r0
 801ed06:	00d2      	lsls	r2, r2, #3
 801ed08:	b2d2      	uxtb	r2, r2
 801ed0a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ed0e:	fb1e fe04 	smulbb	lr, lr, r4
 801ed12:	fb10 f004 	smulbb	r0, r0, r4
 801ed16:	fa1f fc8c 	uxth.w	ip, ip
 801ed1a:	fb01 e103 	mla	r1, r1, r3, lr
 801ed1e:	fb02 0303 	mla	r3, r2, r3, r0
 801ed22:	b29a      	uxth	r2, r3
 801ed24:	f10c 0301 	add.w	r3, ip, #1
 801ed28:	b289      	uxth	r1, r1
 801ed2a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ed2e:	1c53      	adds	r3, r2, #1
 801ed30:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ed34:	1c4a      	adds	r2, r1, #1
 801ed36:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ed3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801ed3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ed42:	0949      	lsrs	r1, r1, #5
 801ed44:	ea43 030c 	orr.w	r3, r3, ip
 801ed48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ed4c:	430b      	orrs	r3, r1
 801ed4e:	803b      	strh	r3, [r7, #0]
 801ed50:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed52:	449a      	add	sl, r3
 801ed54:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed56:	3702      	adds	r7, #2
 801ed58:	441d      	add	r5, r3
 801ed5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ed5e:	e742      	b.n	801ebe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ed60:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801ed62:	449a      	add	sl, r3
 801ed64:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ed66:	441d      	add	r5, r3
 801ed68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed6a:	3b01      	subs	r3, #1
 801ed6c:	9309      	str	r3, [sp, #36]	; 0x24
 801ed6e:	f108 0802 	add.w	r8, r8, #2
 801ed72:	e718      	b.n	801eba6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801ed74:	d023      	beq.n	801edbe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801ed76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ed78:	9825      	ldr	r0, [sp, #148]	; 0x94
 801ed7a:	3b01      	subs	r3, #1
 801ed7c:	fb00 a003 	mla	r0, r0, r3, sl
 801ed80:	1400      	asrs	r0, r0, #16
 801ed82:	f53f af2d 	bmi.w	801ebe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed86:	3901      	subs	r1, #1
 801ed88:	4288      	cmp	r0, r1
 801ed8a:	f6bf af29 	bge.w	801ebe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed8e:	9926      	ldr	r1, [sp, #152]	; 0x98
 801ed90:	fb01 5303 	mla	r3, r1, r3, r5
 801ed94:	141b      	asrs	r3, r3, #16
 801ed96:	f53f af23 	bmi.w	801ebe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801ed9a:	3a01      	subs	r2, #1
 801ed9c:	4293      	cmp	r3, r2
 801ed9e:	f6bf af1f 	bge.w	801ebe0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eda2:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801eda6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801edaa:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801edae:	f1be 0f00 	cmp.w	lr, #0
 801edb2:	dc6c      	bgt.n	801ee8e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801edb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801edb6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801edba:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801edbe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801edc0:	2b00      	cmp	r3, #0
 801edc2:	f340 810e 	ble.w	801efe2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801edc6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801edca:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801edce:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801edd2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801edd4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edd8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eddc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ede0:	eef0 6a62 	vmov.f32	s13, s5
 801ede4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ede8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801edec:	ee77 2a62 	vsub.f32	s5, s14, s5
 801edf0:	ee16 aa90 	vmov	sl, s13
 801edf4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edf8:	eef0 6a43 	vmov.f32	s13, s6
 801edfc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee00:	ee12 2a90 	vmov	r2, s5
 801ee04:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee08:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee0c:	ee13 2a10 	vmov	r2, s6
 801ee10:	9325      	str	r3, [sp, #148]	; 0x94
 801ee12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee14:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee18:	9326      	str	r3, [sp, #152]	; 0x98
 801ee1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ee1c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801ee1e:	3b01      	subs	r3, #1
 801ee20:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee24:	930c      	str	r3, [sp, #48]	; 0x30
 801ee26:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801ee28:	bf08      	it	eq
 801ee2a:	4613      	moveq	r3, r2
 801ee2c:	ee16 5a90 	vmov	r5, s13
 801ee30:	9309      	str	r3, [sp, #36]	; 0x24
 801ee32:	eeb0 3a67 	vmov.f32	s6, s15
 801ee36:	eef0 2a47 	vmov.f32	s5, s14
 801ee3a:	e6a6      	b.n	801eb8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ee3c:	2900      	cmp	r1, #0
 801ee3e:	f43f af10 	beq.w	801ec62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee42:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ee46:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ee4a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ee4c:	e709      	b.n	801ec62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ee4e:	f112 0901 	adds.w	r9, r2, #1
 801ee52:	f53f af7d 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee56:	454b      	cmp	r3, r9
 801ee58:	f6ff af7a 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee5c:	f11c 0901 	adds.w	r9, ip, #1
 801ee60:	f53f af76 	bmi.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee64:	45ce      	cmp	lr, r9
 801ee66:	f6ff af73 	blt.w	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee6a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ee6c:	9202      	str	r2, [sp, #8]
 801ee6e:	b21b      	sxth	r3, r3
 801ee70:	fa0f f28e 	sxth.w	r2, lr
 801ee74:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ee78:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ee7c:	9201      	str	r2, [sp, #4]
 801ee7e:	9300      	str	r3, [sp, #0]
 801ee80:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ee82:	9816      	ldr	r0, [sp, #88]	; 0x58
 801ee84:	4633      	mov	r3, r6
 801ee86:	4639      	mov	r1, r7
 801ee88:	f7ff fd8e 	bl	801e9a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ee8c:	e760      	b.n	801ed50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ee8e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ee90:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ee92:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ee96:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ee9a:	1429      	asrs	r1, r5, #16
 801ee9c:	fb03 2101 	mla	r1, r3, r1, r2
 801eea0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801eea2:	440a      	add	r2, r1
 801eea4:	5c61      	ldrb	r1, [r4, r1]
 801eea6:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801eeaa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801eeae:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801eeb2:	f1bc 0f00 	cmp.w	ip, #0
 801eeb6:	f000 808c 	beq.w	801efd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801eeba:	7857      	ldrb	r7, [r2, #1]
 801eebc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801eec0:	9413      	str	r4, [sp, #76]	; 0x4c
 801eec2:	b140      	cbz	r0, 801eed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801eec4:	18d7      	adds	r7, r2, r3
 801eec6:	5cd3      	ldrb	r3, [r2, r3]
 801eec8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eecc:	9310      	str	r3, [sp, #64]	; 0x40
 801eece:	787b      	ldrb	r3, [r7, #1]
 801eed0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801eed4:	9314      	str	r3, [sp, #80]	; 0x50
 801eed6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801eed8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801eeda:	fb1c f200 	smulbb	r2, ip, r0
 801eede:	041f      	lsls	r7, r3, #16
 801eee0:	10d2      	asrs	r2, r2, #3
 801eee2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801eee6:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801eeea:	431f      	orrs	r7, r3
 801eeec:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801eef0:	9317      	str	r3, [sp, #92]	; 0x5c
 801eef2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801eef4:	041b      	lsls	r3, r3, #16
 801eef6:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801eefa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801eefe:	ea43 030b 	orr.w	r3, r3, fp
 801ef02:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801ef04:	4353      	muls	r3, r2
 801ef06:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ef0a:	fb04 3707 	mla	r7, r4, r7, r3
 801ef0e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ef12:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801ef16:	ea43 0b01 	orr.w	fp, r3, r1
 801ef1a:	f1c0 0110 	rsb	r1, r0, #16
 801ef1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ef20:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ef22:	eba1 0c0c 	sub.w	ip, r1, ip
 801ef26:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ef2a:	fb0c 770b 	mla	r7, ip, fp, r7
 801ef2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef32:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801ef36:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801ef3a:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ef3e:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ef42:	fb02 770c 	mla	r7, r2, ip, r7
 801ef46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801ef48:	0d79      	lsrs	r1, r7, #21
 801ef4a:	097f      	lsrs	r7, r7, #5
 801ef4c:	8812      	ldrh	r2, [r2, #0]
 801ef4e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ef52:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801ef56:	430f      	orrs	r7, r1
 801ef58:	b2bb      	uxth	r3, r7
 801ef5a:	1211      	asrs	r1, r2, #8
 801ef5c:	1218      	asrs	r0, r3, #8
 801ef5e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ef62:	fb11 f104 	smulbb	r1, r1, r4
 801ef66:	10d7      	asrs	r7, r2, #3
 801ef68:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801ef6c:	00d2      	lsls	r2, r2, #3
 801ef6e:	fb00 1009 	mla	r0, r0, r9, r1
 801ef72:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801ef76:	10d9      	asrs	r1, r3, #3
 801ef78:	b2d2      	uxtb	r2, r2
 801ef7a:	00db      	lsls	r3, r3, #3
 801ef7c:	fb17 f704 	smulbb	r7, r7, r4
 801ef80:	fb12 f204 	smulbb	r2, r2, r4
 801ef84:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ef88:	b2db      	uxtb	r3, r3
 801ef8a:	b280      	uxth	r0, r0
 801ef8c:	fb01 7109 	mla	r1, r1, r9, r7
 801ef90:	fb03 2309 	mla	r3, r3, r9, r2
 801ef94:	b29b      	uxth	r3, r3
 801ef96:	b289      	uxth	r1, r1
 801ef98:	1c42      	adds	r2, r0, #1
 801ef9a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ef9e:	1c4f      	adds	r7, r1, #1
 801efa0:	1c5a      	adds	r2, r3, #1
 801efa2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801efa6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801efaa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801efae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801efb2:	0949      	lsrs	r1, r1, #5
 801efb4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801efb6:	4310      	orrs	r0, r2
 801efb8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801efbc:	4308      	orrs	r0, r1
 801efbe:	f823 0b02 	strh.w	r0, [r3], #2
 801efc2:	930e      	str	r3, [sp, #56]	; 0x38
 801efc4:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801efc6:	449a      	add	sl, r3
 801efc8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801efca:	f10e 3eff 	add.w	lr, lr, #4294967295
 801efce:	441d      	add	r5, r3
 801efd0:	e6ed      	b.n	801edae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801efd2:	2800      	cmp	r0, #0
 801efd4:	f43f af7f 	beq.w	801eed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efd8:	5cd3      	ldrb	r3, [r2, r3]
 801efda:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801efde:	9310      	str	r3, [sp, #64]	; 0x40
 801efe0:	e779      	b.n	801eed6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801efe2:	b019      	add	sp, #100	; 0x64
 801efe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801efe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801efe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801efec:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801eff0:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801eff4:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801eff8:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801effc:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801f000:	8808      	ldrh	r0, [r1, #0]
 801f002:	fb08 470e 	mla	r7, r8, lr, r4
 801f006:	f1b8 0f00 	cmp.w	r8, #0
 801f00a:	eb02 0907 	add.w	r9, r2, r7
 801f00e:	db67      	blt.n	801f0e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f010:	45c2      	cmp	sl, r8
 801f012:	dd65      	ble.n	801f0e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801f014:	2c00      	cmp	r4, #0
 801f016:	db61      	blt.n	801f0dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f018:	45a6      	cmp	lr, r4
 801f01a:	dd5f      	ble.n	801f0dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801f01c:	5dd2      	ldrb	r2, [r2, r7]
 801f01e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801f022:	1c62      	adds	r2, r4, #1
 801f024:	d45f      	bmi.n	801f0e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f026:	4596      	cmp	lr, r2
 801f028:	dd5d      	ble.n	801f0e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f02a:	2d00      	cmp	r5, #0
 801f02c:	d05b      	beq.n	801f0e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801f02e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f032:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801f036:	f118 0801 	adds.w	r8, r8, #1
 801f03a:	d458      	bmi.n	801f0ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f03c:	45c2      	cmp	sl, r8
 801f03e:	dd56      	ble.n	801f0ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f040:	2e00      	cmp	r6, #0
 801f042:	d054      	beq.n	801f0ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801f044:	2c00      	cmp	r4, #0
 801f046:	db50      	blt.n	801f0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f048:	45a6      	cmp	lr, r4
 801f04a:	dd4e      	ble.n	801f0ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801f04c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801f050:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801f054:	3401      	adds	r4, #1
 801f056:	d407      	bmi.n	801f068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f058:	45a6      	cmp	lr, r4
 801f05a:	dd05      	ble.n	801f068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f05c:	b125      	cbz	r5, 801f068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801f05e:	44ce      	add	lr, r9
 801f060:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801f064:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801f068:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801f06c:	fb15 f406 	smulbb	r4, r5, r6
 801f070:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f074:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801f078:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f07c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801f080:	ea43 0c0c 	orr.w	ip, r3, ip
 801f084:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801f088:	f1c6 0310 	rsb	r3, r6, #16
 801f08c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801f090:	1b5b      	subs	r3, r3, r5
 801f092:	ea4e 0707 	orr.w	r7, lr, r7
 801f096:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801f09a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801f09e:	437d      	muls	r5, r7
 801f0a0:	fb03 5c0c 	mla	ip, r3, ip, r5
 801f0a4:	0403      	lsls	r3, r0, #16
 801f0a6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0aa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f0ae:	4318      	orrs	r0, r3
 801f0b0:	0413      	lsls	r3, r2, #16
 801f0b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f0b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f0ba:	4313      	orrs	r3, r2
 801f0bc:	fb04 c000 	mla	r0, r4, r0, ip
 801f0c0:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801f0c4:	fb06 0003 	mla	r0, r6, r3, r0
 801f0c8:	0d43      	lsrs	r3, r0, #21
 801f0ca:	0940      	lsrs	r0, r0, #5
 801f0cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f0d0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801f0d4:	4318      	orrs	r0, r3
 801f0d6:	8008      	strh	r0, [r1, #0]
 801f0d8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f0dc:	4684      	mov	ip, r0
 801f0de:	e7a0      	b.n	801f022 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801f0e0:	4607      	mov	r7, r0
 801f0e2:	4684      	mov	ip, r0
 801f0e4:	e7a7      	b.n	801f036 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0e6:	4607      	mov	r7, r0
 801f0e8:	e7a5      	b.n	801f036 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801f0ea:	4602      	mov	r2, r0
 801f0ec:	e7b2      	b.n	801f054 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801f0ee:	4602      	mov	r2, r0
 801f0f0:	e7ba      	b.n	801f068 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801f0f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f0f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f0f6:	b093      	sub	sp, #76	; 0x4c
 801f0f8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f0fc:	920f      	str	r2, [sp, #60]	; 0x3c
 801f0fe:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f100:	9108      	str	r1, [sp, #32]
 801f102:	9306      	str	r3, [sp, #24]
 801f104:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f108:	9010      	str	r0, [sp, #64]	; 0x40
 801f10a:	6850      	ldr	r0, [r2, #4]
 801f10c:	6812      	ldr	r2, [r2, #0]
 801f10e:	fb00 1303 	mla	r3, r0, r3, r1
 801f112:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f116:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f118:	681b      	ldr	r3, [r3, #0]
 801f11a:	9307      	str	r3, [sp, #28]
 801f11c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f11e:	685f      	ldr	r7, [r3, #4]
 801f120:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801f124:	3704      	adds	r7, #4
 801f126:	9b08      	ldr	r3, [sp, #32]
 801f128:	2b00      	cmp	r3, #0
 801f12a:	dc03      	bgt.n	801f134 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f12c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f12e:	2b00      	cmp	r3, #0
 801f130:	f340 81b2 	ble.w	801f498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f134:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f136:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f13a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f13e:	1e48      	subs	r0, r1, #1
 801f140:	f102 3cff 	add.w	ip, r2, #4294967295
 801f144:	9b06      	ldr	r3, [sp, #24]
 801f146:	2b00      	cmp	r3, #0
 801f148:	f340 80a9 	ble.w	801f29e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f14c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f150:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f154:	d406      	bmi.n	801f164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f156:	4586      	cmp	lr, r0
 801f158:	da04      	bge.n	801f164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f15a:	2b00      	cmp	r3, #0
 801f15c:	db02      	blt.n	801f164 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801f15e:	4563      	cmp	r3, ip
 801f160:	f2c0 809e 	blt.w	801f2a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801f164:	f11e 0e01 	adds.w	lr, lr, #1
 801f168:	f100 808f 	bmi.w	801f28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f16c:	4571      	cmp	r1, lr
 801f16e:	f2c0 808c 	blt.w	801f28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f172:	3301      	adds	r3, #1
 801f174:	f100 8089 	bmi.w	801f28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f178:	429a      	cmp	r2, r3
 801f17a:	f2c0 8086 	blt.w	801f28a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801f17e:	f8dd b018 	ldr.w	fp, [sp, #24]
 801f182:	46c8      	mov	r8, r9
 801f184:	f1bb 0f00 	cmp.w	fp, #0
 801f188:	f340 80a6 	ble.w	801f2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801f18c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801f18e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f190:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f194:	689b      	ldr	r3, [r3, #8]
 801f196:	1422      	asrs	r2, r4, #16
 801f198:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f19c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801f1a0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f1a4:	f100 80e3 	bmi.w	801f36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1a8:	f103 3aff 	add.w	sl, r3, #4294967295
 801f1ac:	4552      	cmp	r2, sl
 801f1ae:	f280 80de 	bge.w	801f36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1b2:	f1bc 0f00 	cmp.w	ip, #0
 801f1b6:	f2c0 80da 	blt.w	801f36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1ba:	f10e 3aff 	add.w	sl, lr, #4294967295
 801f1be:	45d4      	cmp	ip, sl
 801f1c0:	f280 80d5 	bge.w	801f36e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801f1c4:	b21b      	sxth	r3, r3
 801f1c6:	fb0c 2203 	mla	r2, ip, r3, r2
 801f1ca:	9d07      	ldr	r5, [sp, #28]
 801f1cc:	eb05 0a02 	add.w	sl, r5, r2
 801f1d0:	5caa      	ldrb	r2, [r5, r2]
 801f1d2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801f1d6:	2800      	cmp	r0, #0
 801f1d8:	f000 80c0 	beq.w	801f35c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801f1dc:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801f1e0:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801f1e4:	920b      	str	r2, [sp, #44]	; 0x2c
 801f1e6:	b151      	cbz	r1, 801f1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f1e8:	eb0a 0203 	add.w	r2, sl, r3
 801f1ec:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f1f0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1f4:	9309      	str	r3, [sp, #36]	; 0x24
 801f1f6:	7853      	ldrb	r3, [r2, #1]
 801f1f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f1fc:	930c      	str	r3, [sp, #48]	; 0x30
 801f1fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f200:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f202:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f206:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f20a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f20e:	ea4c 0c03 	orr.w	ip, ip, r3
 801f212:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f214:	041b      	lsls	r3, r3, #16
 801f216:	fb10 f201 	smulbb	r2, r0, r1
 801f21a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f21e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801f222:	10d2      	asrs	r2, r2, #3
 801f224:	432b      	orrs	r3, r5
 801f226:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801f22a:	4353      	muls	r3, r2
 801f22c:	fb0a 330c 	mla	r3, sl, ip, r3
 801f230:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801f234:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f238:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801f23c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801f240:	f1c1 0c10 	rsb	ip, r1, #16
 801f244:	ebac 0c00 	sub.w	ip, ip, r0
 801f248:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801f24c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801f250:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f252:	0418      	lsls	r0, r3, #16
 801f254:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801f258:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f25c:	4318      	orrs	r0, r3
 801f25e:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801f262:	fb02 c200 	mla	r2, r2, r0, ip
 801f266:	0d53      	lsrs	r3, r2, #21
 801f268:	0952      	lsrs	r2, r2, #5
 801f26a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f26e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801f272:	431a      	orrs	r2, r3
 801f274:	f8a8 2000 	strh.w	r2, [r8]
 801f278:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f27a:	441c      	add	r4, r3
 801f27c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f27e:	f108 0802 	add.w	r8, r8, #2
 801f282:	441e      	add	r6, r3
 801f284:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f288:	e77c      	b.n	801f184 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f28a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f28c:	441c      	add	r4, r3
 801f28e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f290:	441e      	add	r6, r3
 801f292:	9b06      	ldr	r3, [sp, #24]
 801f294:	3b01      	subs	r3, #1
 801f296:	9306      	str	r3, [sp, #24]
 801f298:	f109 0902 	add.w	r9, r9, #2
 801f29c:	e752      	b.n	801f144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f29e:	d020      	beq.n	801f2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f2a0:	9b06      	ldr	r3, [sp, #24]
 801f2a2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f2a4:	3b01      	subs	r3, #1
 801f2a6:	fb00 4003 	mla	r0, r0, r3, r4
 801f2aa:	1400      	asrs	r0, r0, #16
 801f2ac:	f53f af67 	bmi.w	801f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2b0:	3901      	subs	r1, #1
 801f2b2:	4288      	cmp	r0, r1
 801f2b4:	f6bf af63 	bge.w	801f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 801f2ba:	fb01 6303 	mla	r3, r1, r3, r6
 801f2be:	141b      	asrs	r3, r3, #16
 801f2c0:	f53f af5d 	bmi.w	801f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2c4:	3a01      	subs	r2, #1
 801f2c6:	4293      	cmp	r3, r2
 801f2c8:	f6bf af59 	bge.w	801f17e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f2cc:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f2d0:	46ca      	mov	sl, r9
 801f2d2:	f1b8 0f00 	cmp.w	r8, #0
 801f2d6:	dc67      	bgt.n	801f3a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f2d8:	9b06      	ldr	r3, [sp, #24]
 801f2da:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f2de:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f2e2:	9b08      	ldr	r3, [sp, #32]
 801f2e4:	2b00      	cmp	r3, #0
 801f2e6:	f340 80d7 	ble.w	801f498 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f2ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f2ee:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f2f2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f2f6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f2f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f300:	eeb0 6a62 	vmov.f32	s12, s5
 801f304:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f308:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f30c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f310:	ee16 4a10 	vmov	r4, s12
 801f314:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f318:	eeb0 6a43 	vmov.f32	s12, s6
 801f31c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f320:	ee12 2a90 	vmov	r2, s5
 801f324:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f328:	fb92 f3f3 	sdiv	r3, r2, r3
 801f32c:	ee13 2a10 	vmov	r2, s6
 801f330:	931f      	str	r3, [sp, #124]	; 0x7c
 801f332:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f334:	fb92 f3f3 	sdiv	r3, r2, r3
 801f338:	9320      	str	r3, [sp, #128]	; 0x80
 801f33a:	9b08      	ldr	r3, [sp, #32]
 801f33c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f33e:	3b01      	subs	r3, #1
 801f340:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f344:	9308      	str	r3, [sp, #32]
 801f346:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801f348:	bf08      	it	eq
 801f34a:	4613      	moveq	r3, r2
 801f34c:	ee16 6a10 	vmov	r6, s12
 801f350:	9306      	str	r3, [sp, #24]
 801f352:	eeb0 3a67 	vmov.f32	s6, s15
 801f356:	eef0 2a47 	vmov.f32	s5, s14
 801f35a:	e6e4      	b.n	801f126 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f35c:	2900      	cmp	r1, #0
 801f35e:	f43f af4e 	beq.w	801f1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f362:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f366:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f36a:	9309      	str	r3, [sp, #36]	; 0x24
 801f36c:	e747      	b.n	801f1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f36e:	f112 0a01 	adds.w	sl, r2, #1
 801f372:	d481      	bmi.n	801f278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f374:	4553      	cmp	r3, sl
 801f376:	f6ff af7f 	blt.w	801f278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f37a:	f11c 0a01 	adds.w	sl, ip, #1
 801f37e:	f53f af7b 	bmi.w	801f278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f382:	45d6      	cmp	lr, sl
 801f384:	f6ff af78 	blt.w	801f278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f388:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f38c:	b21b      	sxth	r3, r3
 801f38e:	fa0f f28e 	sxth.w	r2, lr
 801f392:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f396:	9201      	str	r2, [sp, #4]
 801f398:	9300      	str	r3, [sp, #0]
 801f39a:	9a07      	ldr	r2, [sp, #28]
 801f39c:	9810      	ldr	r0, [sp, #64]	; 0x40
 801f39e:	463b      	mov	r3, r7
 801f3a0:	4641      	mov	r1, r8
 801f3a2:	f7ff fe21 	bl	801efe8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f3a6:	e767      	b.n	801f278 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f3a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f3aa:	9d07      	ldr	r5, [sp, #28]
 801f3ac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f3b0:	1422      	asrs	r2, r4, #16
 801f3b2:	1431      	asrs	r1, r6, #16
 801f3b4:	fb03 2101 	mla	r1, r3, r1, r2
 801f3b8:	9a07      	ldr	r2, [sp, #28]
 801f3ba:	440a      	add	r2, r1
 801f3bc:	5c69      	ldrb	r1, [r5, r1]
 801f3be:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f3c2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3c6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f3ca:	f1be 0f00 	cmp.w	lr, #0
 801f3ce:	d05c      	beq.n	801f48a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f3d0:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f3d4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f3d8:	950d      	str	r5, [sp, #52]	; 0x34
 801f3da:	b150      	cbz	r0, 801f3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f3dc:	eb02 0c03 	add.w	ip, r2, r3
 801f3e0:	5cd3      	ldrb	r3, [r2, r3]
 801f3e2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3e6:	930a      	str	r3, [sp, #40]	; 0x28
 801f3e8:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f3ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f3f0:	930e      	str	r3, [sp, #56]	; 0x38
 801f3f2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3f4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f3f6:	fb1e f200 	smulbb	r2, lr, r0
 801f3fa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f3fe:	10d2      	asrs	r2, r2, #3
 801f400:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801f404:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801f408:	ea4c 0c03 	orr.w	ip, ip, r3
 801f40c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f410:	9311      	str	r3, [sp, #68]	; 0x44
 801f412:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f414:	041b      	lsls	r3, r3, #16
 801f416:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801f41a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801f41e:	ea43 030b 	orr.w	r3, r3, fp
 801f422:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f424:	4353      	muls	r3, r2
 801f426:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f42a:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f42e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801f432:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801f436:	ea43 0b01 	orr.w	fp, r3, r1
 801f43a:	f1c0 0110 	rsb	r1, r0, #16
 801f43e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f440:	eba1 0e0e 	sub.w	lr, r1, lr
 801f444:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f448:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f44c:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f450:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801f454:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801f458:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f45c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f460:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f464:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f468:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f46c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f470:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801f474:	ea43 0c0c 	orr.w	ip, r3, ip
 801f478:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f47a:	f82a cb02 	strh.w	ip, [sl], #2
 801f47e:	441c      	add	r4, r3
 801f480:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f482:	f108 38ff 	add.w	r8, r8, #4294967295
 801f486:	441e      	add	r6, r3
 801f488:	e723      	b.n	801f2d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f48a:	2800      	cmp	r0, #0
 801f48c:	d0b1      	beq.n	801f3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f48e:	5cd3      	ldrb	r3, [r2, r3]
 801f490:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f494:	930a      	str	r3, [sp, #40]	; 0x28
 801f496:	e7ac      	b.n	801f3f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f498:	b013      	add	sp, #76	; 0x4c
 801f49a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f49e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f49e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f4a2:	880d      	ldrh	r5, [r1, #0]
 801f4a4:	b087      	sub	sp, #28
 801f4a6:	10ef      	asrs	r7, r5, #3
 801f4a8:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f4ac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801f4b0:	00ed      	lsls	r5, r5, #3
 801f4b2:	9701      	str	r7, [sp, #4]
 801f4b4:	b2ed      	uxtb	r5, r5
 801f4b6:	9502      	str	r5, [sp, #8]
 801f4b8:	9d01      	ldr	r5, [sp, #4]
 801f4ba:	9103      	str	r1, [sp, #12]
 801f4bc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801f4c0:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801f4c4:	9902      	ldr	r1, [sp, #8]
 801f4c6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801f4ca:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801f4ce:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801f4d2:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801f4d6:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801f4da:	022d      	lsls	r5, r5, #8
 801f4dc:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f4e0:	fb06 0709 	mla	r7, r6, r9, r0
 801f4e4:	430d      	orrs	r5, r1
 801f4e6:	2e00      	cmp	r6, #0
 801f4e8:	eb02 0c07 	add.w	ip, r2, r7
 801f4ec:	9505      	str	r5, [sp, #20]
 801f4ee:	f2c0 80b6 	blt.w	801f65e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4f2:	45b3      	cmp	fp, r6
 801f4f4:	f340 80b3 	ble.w	801f65e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f4f8:	2800      	cmp	r0, #0
 801f4fa:	f2c0 80ae 	blt.w	801f65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f4fe:	4581      	cmp	r9, r0
 801f500:	f340 80ab 	ble.w	801f65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f504:	5dd7      	ldrb	r7, [r2, r7]
 801f506:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f50a:	441f      	add	r7, r3
 801f50c:	1c42      	adds	r2, r0, #1
 801f50e:	f100 80a9 	bmi.w	801f664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f512:	4591      	cmp	r9, r2
 801f514:	f340 80a6 	ble.w	801f664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f518:	2c00      	cmp	r4, #0
 801f51a:	f000 80a3 	beq.w	801f664 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f51e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f522:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f526:	441d      	add	r5, r3
 801f528:	3601      	adds	r6, #1
 801f52a:	f100 809f 	bmi.w	801f66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f52e:	45b3      	cmp	fp, r6
 801f530:	f340 809c 	ble.w	801f66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f534:	f1be 0f00 	cmp.w	lr, #0
 801f538:	f000 8098 	beq.w	801f66c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f53c:	2800      	cmp	r0, #0
 801f53e:	f2c0 8093 	blt.w	801f668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f542:	4581      	cmp	r9, r0
 801f544:	f340 8090 	ble.w	801f668 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f548:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f54c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f550:	441e      	add	r6, r3
 801f552:	3001      	adds	r0, #1
 801f554:	f100 808d 	bmi.w	801f672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f558:	4581      	cmp	r9, r0
 801f55a:	f340 808a 	ble.w	801f672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f55e:	2c00      	cmp	r4, #0
 801f560:	f000 8087 	beq.w	801f672 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f564:	44e1      	add	r9, ip
 801f566:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f56a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f56e:	4413      	add	r3, r2
 801f570:	b2a4      	uxth	r4, r4
 801f572:	fa1f fe8e 	uxth.w	lr, lr
 801f576:	fb04 fb0e 	mul.w	fp, r4, lr
 801f57a:	0124      	lsls	r4, r4, #4
 801f57c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f580:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801f584:	eba4 040b 	sub.w	r4, r4, fp
 801f588:	fa1f f08e 	uxth.w	r0, lr
 801f58c:	b2a2      	uxth	r2, r4
 801f58e:	78ac      	ldrb	r4, [r5, #2]
 801f590:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f594:	9901      	ldr	r1, [sp, #4]
 801f596:	eba9 0900 	sub.w	r9, r9, r0
 801f59a:	fa1f f989 	uxth.w	r9, r9
 801f59e:	4354      	muls	r4, r2
 801f5a0:	fb09 440c 	mla	r4, r9, ip, r4
 801f5a4:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f5a8:	fb00 440c 	mla	r4, r0, ip, r4
 801f5ac:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f5b0:	fa1f fe88 	uxth.w	lr, r8
 801f5b4:	ea6f 0808 	mvn.w	r8, r8
 801f5b8:	fa5f f888 	uxtb.w	r8, r8
 801f5bc:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f5c0:	fb1a fa08 	smulbb	sl, sl, r8
 801f5c4:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5c8:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f5cc:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f5d0:	787c      	ldrb	r4, [r7, #1]
 801f5d2:	782d      	ldrb	r5, [r5, #0]
 801f5d4:	783f      	ldrb	r7, [r7, #0]
 801f5d6:	fb02 fa0a 	mul.w	sl, r2, sl
 801f5da:	fb09 aa04 	mla	sl, r9, r4, sl
 801f5de:	7874      	ldrb	r4, [r6, #1]
 801f5e0:	436a      	muls	r2, r5
 801f5e2:	7835      	ldrb	r5, [r6, #0]
 801f5e4:	fb00 aa04 	mla	sl, r0, r4, sl
 801f5e8:	fb09 2207 	mla	r2, r9, r7, r2
 801f5ec:	785c      	ldrb	r4, [r3, #1]
 801f5ee:	781b      	ldrb	r3, [r3, #0]
 801f5f0:	fb00 2005 	mla	r0, r0, r5, r2
 801f5f4:	fb0b a404 	mla	r4, fp, r4, sl
 801f5f8:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f5fc:	9b02      	ldr	r3, [sp, #8]
 801f5fe:	fb11 fa08 	smulbb	sl, r1, r8
 801f602:	fa1f fc8c 	uxth.w	ip, ip
 801f606:	fb13 f808 	smulbb	r8, r3, r8
 801f60a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f60e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f612:	fb04 a40e 	mla	r4, r4, lr, sl
 801f616:	f10c 0301 	add.w	r3, ip, #1
 801f61a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f61e:	fa1f fe8e 	uxth.w	lr, lr
 801f622:	b2a4      	uxth	r4, r4
 801f624:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f628:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801f62c:	f104 0a01 	add.w	sl, r4, #1
 801f630:	f10e 0c01 	add.w	ip, lr, #1
 801f634:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f638:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f63c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f640:	0964      	lsrs	r4, r4, #5
 801f642:	ea4c 0c03 	orr.w	ip, ip, r3
 801f646:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801f64a:	9b03      	ldr	r3, [sp, #12]
 801f64c:	ea4c 0c04 	orr.w	ip, ip, r4
 801f650:	f8a3 c000 	strh.w	ip, [r3]
 801f654:	b007      	add	sp, #28
 801f656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f65a:	af05      	add	r7, sp, #20
 801f65c:	e756      	b.n	801f50c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f65e:	ad05      	add	r5, sp, #20
 801f660:	462f      	mov	r7, r5
 801f662:	e761      	b.n	801f528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f664:	ad05      	add	r5, sp, #20
 801f666:	e75f      	b.n	801f528 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f668:	ae05      	add	r6, sp, #20
 801f66a:	e772      	b.n	801f552 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f66c:	ab05      	add	r3, sp, #20
 801f66e:	461e      	mov	r6, r3
 801f670:	e77e      	b.n	801f570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f672:	ab05      	add	r3, sp, #20
 801f674:	e77c      	b.n	801f570 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f676 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f676:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f67a:	b095      	sub	sp, #84	; 0x54
 801f67c:	9212      	str	r2, [sp, #72]	; 0x48
 801f67e:	9309      	str	r3, [sp, #36]	; 0x24
 801f680:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801f682:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801f686:	930f      	str	r3, [sp, #60]	; 0x3c
 801f688:	910e      	str	r1, [sp, #56]	; 0x38
 801f68a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801f68e:	9013      	str	r0, [sp, #76]	; 0x4c
 801f690:	6850      	ldr	r0, [r2, #4]
 801f692:	6812      	ldr	r2, [r2, #0]
 801f694:	fb00 1303 	mla	r3, r0, r3, r1
 801f698:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f69c:	930a      	str	r3, [sp, #40]	; 0x28
 801f69e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f6a0:	681b      	ldr	r3, [r3, #0]
 801f6a2:	930d      	str	r3, [sp, #52]	; 0x34
 801f6a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f6a6:	685c      	ldr	r4, [r3, #4]
 801f6a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801f6aa:	43db      	mvns	r3, r3
 801f6ac:	b2db      	uxtb	r3, r3
 801f6ae:	3404      	adds	r4, #4
 801f6b0:	930b      	str	r3, [sp, #44]	; 0x2c
 801f6b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f6b4:	2b00      	cmp	r3, #0
 801f6b6:	dc03      	bgt.n	801f6c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f6b8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f6ba:	2b00      	cmp	r3, #0
 801f6bc:	f340 8255 	ble.w	801fb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f6c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801f6c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f6c6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f6ca:	1e48      	subs	r0, r1, #1
 801f6cc:	1e55      	subs	r5, r2, #1
 801f6ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f6d0:	2b00      	cmp	r3, #0
 801f6d2:	f340 80f9 	ble.w	801f8c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f6d6:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801f6d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f6da:	1436      	asrs	r6, r6, #16
 801f6dc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f6e0:	d406      	bmi.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6e2:	4286      	cmp	r6, r0
 801f6e4:	da04      	bge.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6e6:	2b00      	cmp	r3, #0
 801f6e8:	db02      	blt.n	801f6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f6ea:	42ab      	cmp	r3, r5
 801f6ec:	f2c0 80ed 	blt.w	801f8ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f6f0:	3601      	adds	r6, #1
 801f6f2:	f100 80da 	bmi.w	801f8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6f6:	42b1      	cmp	r1, r6
 801f6f8:	f2c0 80d7 	blt.w	801f8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f6fc:	3301      	adds	r3, #1
 801f6fe:	f100 80d4 	bmi.w	801f8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f702:	429a      	cmp	r2, r3
 801f704:	f2c0 80d1 	blt.w	801f8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f708:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f70a:	9311      	str	r3, [sp, #68]	; 0x44
 801f70c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f70e:	930c      	str	r3, [sp, #48]	; 0x30
 801f710:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f712:	2b00      	cmp	r3, #0
 801f714:	f340 80fa 	ble.w	801f90c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f718:	9826      	ldr	r0, [sp, #152]	; 0x98
 801f71a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f71c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f71e:	68c6      	ldr	r6, [r0, #12]
 801f720:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801f722:	141d      	asrs	r5, r3, #16
 801f724:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f728:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f72a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f72c:	1400      	asrs	r0, r0, #16
 801f72e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f732:	6892      	ldr	r2, [r2, #8]
 801f734:	f100 813e 	bmi.w	801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f738:	1e57      	subs	r7, r2, #1
 801f73a:	42b8      	cmp	r0, r7
 801f73c:	f280 813a 	bge.w	801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f740:	2d00      	cmp	r5, #0
 801f742:	f2c0 8137 	blt.w	801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f746:	1e77      	subs	r7, r6, #1
 801f748:	42bd      	cmp	r5, r7
 801f74a:	f280 8133 	bge.w	801f9b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f74e:	b212      	sxth	r2, r2
 801f750:	fb05 0002 	mla	r0, r5, r2, r0
 801f754:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f756:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f75a:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f75e:	182e      	adds	r6, r5, r0
 801f760:	eb04 050a 	add.w	r5, r4, sl
 801f764:	2b00      	cmp	r3, #0
 801f766:	f000 8117 	beq.w	801f998 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f76a:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f76e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f772:	44a4      	add	ip, r4
 801f774:	2900      	cmp	r1, #0
 801f776:	f000 8117 	beq.w	801f9a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f77a:	18b0      	adds	r0, r6, r2
 801f77c:	5cb2      	ldrb	r2, [r6, r2]
 801f77e:	7840      	ldrb	r0, [r0, #1]
 801f780:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f784:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f788:	4422      	add	r2, r4
 801f78a:	4420      	add	r0, r4
 801f78c:	b29b      	uxth	r3, r3
 801f78e:	b289      	uxth	r1, r1
 801f790:	fb03 f901 	mul.w	r9, r3, r1
 801f794:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f798:	011b      	lsls	r3, r3, #4
 801f79a:	b289      	uxth	r1, r1
 801f79c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f7a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f7a4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801f7a6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f7aa:	f8b6 e000 	ldrh.w	lr, [r6]
 801f7ae:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801f7b2:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801f7b6:	eba3 0309 	sub.w	r3, r3, r9
 801f7ba:	b29b      	uxth	r3, r3
 801f7bc:	eba8 0801 	sub.w	r8, r8, r1
 801f7c0:	fa1f f888 	uxth.w	r8, r8
 801f7c4:	435f      	muls	r7, r3
 801f7c6:	fb08 770b 	mla	r7, r8, fp, r7
 801f7ca:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f7ce:	9310      	str	r3, [sp, #64]	; 0x40
 801f7d0:	fb01 770b 	mla	r7, r1, fp, r7
 801f7d4:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f7d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f7da:	fb09 770b 	mla	r7, r9, fp, r7
 801f7de:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f7e2:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801f7e6:	fb1b fb03 	smulbb	fp, fp, r3
 801f7ea:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f7ee:	fb07 b706 	mla	r7, r7, r6, fp
 801f7f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f7f4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f7f8:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f7fc:	f89c c000 	ldrb.w	ip, [ip]
 801f800:	435d      	muls	r5, r3
 801f802:	fb08 550b 	mla	r5, r8, fp, r5
 801f806:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f80a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f80c:	fb01 550b 	mla	r5, r1, fp, r5
 801f810:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f814:	fb09 550b 	mla	r5, r9, fp, r5
 801f818:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f81c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801f820:	fb1b fb03 	smulbb	fp, fp, r3
 801f824:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801f826:	fb03 f30c 	mul.w	r3, r3, ip
 801f82a:	f892 c000 	ldrb.w	ip, [r2]
 801f82e:	fb08 330a 	mla	r3, r8, sl, r3
 801f832:	fb01 330c 	mla	r3, r1, ip, r3
 801f836:	f890 c000 	ldrb.w	ip, [r0]
 801f83a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f83e:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f842:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f844:	fa5f fe8e 	uxtb.w	lr, lr
 801f848:	b2bf      	uxth	r7, r7
 801f84a:	fb1e fe03 	smulbb	lr, lr, r3
 801f84e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f852:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f856:	fb05 b506 	mla	r5, r5, r6, fp
 801f85a:	1c7b      	adds	r3, r7, #1
 801f85c:	fb0c e606 	mla	r6, ip, r6, lr
 801f860:	b2ad      	uxth	r5, r5
 801f862:	b2b6      	uxth	r6, r6
 801f864:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f868:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801f86c:	f105 0b01 	add.w	fp, r5, #1
 801f870:	1c77      	adds	r7, r6, #1
 801f872:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f876:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f87a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f87e:	096d      	lsrs	r5, r5, #5
 801f880:	431f      	orrs	r7, r3
 801f882:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801f886:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f888:	433d      	orrs	r5, r7
 801f88a:	801d      	strh	r5, [r3, #0]
 801f88c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f88e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f890:	3302      	adds	r3, #2
 801f892:	930c      	str	r3, [sp, #48]	; 0x30
 801f894:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f896:	4413      	add	r3, r2
 801f898:	931f      	str	r3, [sp, #124]	; 0x7c
 801f89a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801f89c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f89e:	4413      	add	r3, r2
 801f8a0:	9320      	str	r3, [sp, #128]	; 0x80
 801f8a2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f8a4:	3b01      	subs	r3, #1
 801f8a6:	9311      	str	r3, [sp, #68]	; 0x44
 801f8a8:	e732      	b.n	801f710 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f8aa:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f8ac:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801f8ae:	4433      	add	r3, r6
 801f8b0:	931f      	str	r3, [sp, #124]	; 0x7c
 801f8b2:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801f8b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f8b6:	4433      	add	r3, r6
 801f8b8:	9320      	str	r3, [sp, #128]	; 0x80
 801f8ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8bc:	3b01      	subs	r3, #1
 801f8be:	9309      	str	r3, [sp, #36]	; 0x24
 801f8c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f8c2:	3302      	adds	r3, #2
 801f8c4:	930a      	str	r3, [sp, #40]	; 0x28
 801f8c6:	e702      	b.n	801f6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f8c8:	d027      	beq.n	801f91a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f8ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8cc:	9821      	ldr	r0, [sp, #132]	; 0x84
 801f8ce:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f8d0:	3b01      	subs	r3, #1
 801f8d2:	fb00 5003 	mla	r0, r0, r3, r5
 801f8d6:	1400      	asrs	r0, r0, #16
 801f8d8:	f53f af16 	bmi.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8dc:	3901      	subs	r1, #1
 801f8de:	4288      	cmp	r0, r1
 801f8e0:	f6bf af12 	bge.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8e4:	9922      	ldr	r1, [sp, #136]	; 0x88
 801f8e6:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f8e8:	fb01 0303 	mla	r3, r1, r3, r0
 801f8ec:	141b      	asrs	r3, r3, #16
 801f8ee:	f53f af0b 	bmi.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8f2:	3a01      	subs	r2, #1
 801f8f4:	4293      	cmp	r3, r2
 801f8f6:	f6bf af07 	bge.w	801f708 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f8fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8fc:	9311      	str	r3, [sp, #68]	; 0x44
 801f8fe:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801f902:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f904:	930c      	str	r3, [sp, #48]	; 0x30
 801f906:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801f908:	2b00      	cmp	r3, #0
 801f90a:	dc70      	bgt.n	801f9ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f90c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f90e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801f910:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f914:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f918:	930a      	str	r3, [sp, #40]	; 0x28
 801f91a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f91c:	2b00      	cmp	r3, #0
 801f91e:	f340 8124 	ble.w	801fb6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f922:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f926:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f92a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f92e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f930:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f934:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f938:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f93c:	eef0 6a62 	vmov.f32	s13, s5
 801f940:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f944:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f948:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f94c:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801f950:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f954:	eef0 6a43 	vmov.f32	s13, s6
 801f958:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f95c:	ee12 2a90 	vmov	r2, s5
 801f960:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f964:	fb92 f3f3 	sdiv	r3, r2, r3
 801f968:	ee13 2a10 	vmov	r2, s6
 801f96c:	9321      	str	r3, [sp, #132]	; 0x84
 801f96e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f970:	fb92 f3f3 	sdiv	r3, r2, r3
 801f974:	9322      	str	r3, [sp, #136]	; 0x88
 801f976:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f978:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801f97a:	3b01      	subs	r3, #1
 801f97c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f980:	930e      	str	r3, [sp, #56]	; 0x38
 801f982:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801f984:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801f988:	bf08      	it	eq
 801f98a:	4613      	moveq	r3, r2
 801f98c:	9309      	str	r3, [sp, #36]	; 0x24
 801f98e:	eeb0 3a67 	vmov.f32	s6, s15
 801f992:	eef0 2a47 	vmov.f32	s5, s14
 801f996:	e68c      	b.n	801f6b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f998:	b149      	cbz	r1, 801f9ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f99a:	5cb2      	ldrb	r2, [r6, r2]
 801f99c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f9a0:	4422      	add	r2, r4
 801f9a2:	4628      	mov	r0, r5
 801f9a4:	46ac      	mov	ip, r5
 801f9a6:	e6f1      	b.n	801f78c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f9a8:	4628      	mov	r0, r5
 801f9aa:	462a      	mov	r2, r5
 801f9ac:	e6ee      	b.n	801f78c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f9ae:	4628      	mov	r0, r5
 801f9b0:	462a      	mov	r2, r5
 801f9b2:	e7f7      	b.n	801f9a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f9b4:	1c47      	adds	r7, r0, #1
 801f9b6:	f53f af69 	bmi.w	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9ba:	42ba      	cmp	r2, r7
 801f9bc:	f6ff af66 	blt.w	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9c0:	1c6f      	adds	r7, r5, #1
 801f9c2:	f53f af63 	bmi.w	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9c6:	42be      	cmp	r6, r7
 801f9c8:	f6ff af60 	blt.w	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9cc:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801f9ce:	9002      	str	r0, [sp, #8]
 801f9d0:	b236      	sxth	r6, r6
 801f9d2:	b212      	sxth	r2, r2
 801f9d4:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f9d8:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f9dc:	9200      	str	r2, [sp, #0]
 801f9de:	9601      	str	r6, [sp, #4]
 801f9e0:	4623      	mov	r3, r4
 801f9e2:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801f9e6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801f9e8:	f7ff fd59 	bl	801f49e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f9ec:	e74e      	b.n	801f88c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f9ee:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801f9f0:	9820      	ldr	r0, [sp, #128]	; 0x80
 801f9f2:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801f9f4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801f9f6:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f9fa:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801f9fc:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fa00:	142d      	asrs	r5, r5, #16
 801fa02:	1400      	asrs	r0, r0, #16
 801fa04:	fb02 5000 	mla	r0, r2, r0, r5
 801fa08:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fa0a:	f815 9000 	ldrb.w	r9, [r5, r0]
 801fa0e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801fa12:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801fa16:	182e      	adds	r6, r5, r0
 801fa18:	eb04 0509 	add.w	r5, r4, r9
 801fa1c:	2b00      	cmp	r3, #0
 801fa1e:	f000 8096 	beq.w	801fb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fa22:	7877      	ldrb	r7, [r6, #1]
 801fa24:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fa28:	4427      	add	r7, r4
 801fa2a:	2900      	cmp	r1, #0
 801fa2c:	f000 8097 	beq.w	801fb5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801fa30:	18b0      	adds	r0, r6, r2
 801fa32:	5cb2      	ldrb	r2, [r6, r2]
 801fa34:	7840      	ldrb	r0, [r0, #1]
 801fa36:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fa3a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fa3e:	4422      	add	r2, r4
 801fa40:	4420      	add	r0, r4
 801fa42:	b29b      	uxth	r3, r3
 801fa44:	b289      	uxth	r1, r1
 801fa46:	fb03 f801 	mul.w	r8, r3, r1
 801fa4a:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801fa4c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801fa50:	f8b6 c000 	ldrh.w	ip, [r6]
 801fa54:	78be      	ldrb	r6, [r7, #2]
 801fa56:	f814 9009 	ldrb.w	r9, [r4, r9]
 801fa5a:	011b      	lsls	r3, r3, #4
 801fa5c:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801fa60:	b289      	uxth	r1, r1
 801fa62:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fa66:	eba3 0308 	sub.w	r3, r3, r8
 801fa6a:	b29b      	uxth	r3, r3
 801fa6c:	ebae 0e01 	sub.w	lr, lr, r1
 801fa70:	fa1f fe8e 	uxth.w	lr, lr
 801fa74:	435e      	muls	r6, r3
 801fa76:	fb0e 660b 	mla	r6, lr, fp, r6
 801fa7a:	f892 b002 	ldrb.w	fp, [r2, #2]
 801fa7e:	9310      	str	r3, [sp, #64]	; 0x40
 801fa80:	fb01 660b 	mla	r6, r1, fp, r6
 801fa84:	f890 b002 	ldrb.w	fp, [r0, #2]
 801fa88:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fa8a:	fb08 660b 	mla	r6, r8, fp, r6
 801fa8e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801fa92:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801fa96:	fb1b fb03 	smulbb	fp, fp, r3
 801fa9a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801fa9e:	fb06 b60a 	mla	r6, r6, sl, fp
 801faa2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801faa4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801faa8:	787d      	ldrb	r5, [r7, #1]
 801faaa:	783f      	ldrb	r7, [r7, #0]
 801faac:	435d      	muls	r5, r3
 801faae:	fb0e 550b 	mla	r5, lr, fp, r5
 801fab2:	f892 b001 	ldrb.w	fp, [r2, #1]
 801fab6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fab8:	fb01 550b 	mla	r5, r1, fp, r5
 801fabc:	f890 b001 	ldrb.w	fp, [r0, #1]
 801fac0:	fb08 550b 	mla	r5, r8, fp, r5
 801fac4:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801fac8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801facc:	fb1b fb03 	smulbb	fp, fp, r3
 801fad0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801fad2:	437b      	muls	r3, r7
 801fad4:	7817      	ldrb	r7, [r2, #0]
 801fad6:	fb0e 3309 	mla	r3, lr, r9, r3
 801fada:	fb01 3307 	mla	r3, r1, r7, r3
 801fade:	7807      	ldrb	r7, [r0, #0]
 801fae0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fae4:	fb08 3707 	mla	r7, r8, r7, r3
 801fae8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801faea:	fa5f fc8c 	uxtb.w	ip, ip
 801faee:	fb1c fc03 	smulbb	ip, ip, r3
 801faf2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801faf6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801fafa:	fb05 b50a 	mla	r5, r5, sl, fp
 801fafe:	fb07 c70a 	mla	r7, r7, sl, ip
 801fb02:	b2b6      	uxth	r6, r6
 801fb04:	b2ad      	uxth	r5, r5
 801fb06:	b2bf      	uxth	r7, r7
 801fb08:	1c73      	adds	r3, r6, #1
 801fb0a:	1c7a      	adds	r2, r7, #1
 801fb0c:	f105 0b01 	add.w	fp, r5, #1
 801fb10:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801fb14:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801fb18:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801fb1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801fb20:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801fb24:	096d      	lsrs	r5, r5, #5
 801fb26:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fb28:	4316      	orrs	r6, r2
 801fb2a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801fb2e:	432e      	orrs	r6, r5
 801fb30:	f823 6b02 	strh.w	r6, [r3], #2
 801fb34:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fb36:	930c      	str	r3, [sp, #48]	; 0x30
 801fb38:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fb3a:	4413      	add	r3, r2
 801fb3c:	931f      	str	r3, [sp, #124]	; 0x7c
 801fb3e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801fb40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb42:	4413      	add	r3, r2
 801fb44:	9320      	str	r3, [sp, #128]	; 0x80
 801fb46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801fb48:	3b01      	subs	r3, #1
 801fb4a:	9311      	str	r3, [sp, #68]	; 0x44
 801fb4c:	e6db      	b.n	801f906 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801fb4e:	b149      	cbz	r1, 801fb64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801fb50:	5cb2      	ldrb	r2, [r6, r2]
 801fb52:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb56:	4422      	add	r2, r4
 801fb58:	4628      	mov	r0, r5
 801fb5a:	462f      	mov	r7, r5
 801fb5c:	e771      	b.n	801fa42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb5e:	4628      	mov	r0, r5
 801fb60:	462a      	mov	r2, r5
 801fb62:	e76e      	b.n	801fa42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801fb64:	4628      	mov	r0, r5
 801fb66:	462a      	mov	r2, r5
 801fb68:	e7f7      	b.n	801fb5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fb6a:	b015      	add	sp, #84	; 0x54
 801fb6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fb70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801fb70:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb74:	880f      	ldrh	r7, [r1, #0]
 801fb76:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801fb7a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801fb7e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801fb82:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801fb86:	023c      	lsls	r4, r7, #8
 801fb88:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801fb8c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801fb90:	017c      	lsls	r4, r7, #5
 801fb92:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801fb96:	00ff      	lsls	r7, r7, #3
 801fb98:	ea4b 0404 	orr.w	r4, fp, r4
 801fb9c:	b2ff      	uxtb	r7, r7
 801fb9e:	fb05 ca0e 	mla	sl, r5, lr, ip
 801fba2:	4327      	orrs	r7, r4
 801fba4:	2d00      	cmp	r5, #0
 801fba6:	eb02 080a 	add.w	r8, r2, sl
 801fbaa:	9701      	str	r7, [sp, #4]
 801fbac:	db7e      	blt.n	801fcac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fbae:	45a9      	cmp	r9, r5
 801fbb0:	dd7c      	ble.n	801fcac <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801fbb2:	f1bc 0f00 	cmp.w	ip, #0
 801fbb6:	db77      	blt.n	801fca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fbb8:	45e6      	cmp	lr, ip
 801fbba:	dd75      	ble.n	801fca8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801fbbc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801fbc0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801fbc4:	441f      	add	r7, r3
 801fbc6:	f11c 0201 	adds.w	r2, ip, #1
 801fbca:	d472      	bmi.n	801fcb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbcc:	4596      	cmp	lr, r2
 801fbce:	dd70      	ble.n	801fcb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbd0:	2800      	cmp	r0, #0
 801fbd2:	d06e      	beq.n	801fcb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801fbd4:	f898 4001 	ldrb.w	r4, [r8, #1]
 801fbd8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801fbdc:	441c      	add	r4, r3
 801fbde:	3501      	adds	r5, #1
 801fbe0:	d46b      	bmi.n	801fcba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbe2:	45a9      	cmp	r9, r5
 801fbe4:	dd69      	ble.n	801fcba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbe6:	2e00      	cmp	r6, #0
 801fbe8:	d067      	beq.n	801fcba <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801fbea:	f1bc 0f00 	cmp.w	ip, #0
 801fbee:	db62      	blt.n	801fcb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbf0:	45e6      	cmp	lr, ip
 801fbf2:	dd60      	ble.n	801fcb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801fbf4:	f818 500e 	ldrb.w	r5, [r8, lr]
 801fbf8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801fbfc:	441d      	add	r5, r3
 801fbfe:	f11c 0201 	adds.w	r2, ip, #1
 801fc02:	d45d      	bmi.n	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fc04:	4596      	cmp	lr, r2
 801fc06:	dd5b      	ble.n	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fc08:	2800      	cmp	r0, #0
 801fc0a:	d059      	beq.n	801fcc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801fc0c:	44c6      	add	lr, r8
 801fc0e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fc12:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fc16:	4413      	add	r3, r2
 801fc18:	b280      	uxth	r0, r0
 801fc1a:	b2b2      	uxth	r2, r6
 801fc1c:	fb00 f602 	mul.w	r6, r0, r2
 801fc20:	0100      	lsls	r0, r0, #4
 801fc22:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801fc26:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801fc2a:	1b80      	subs	r0, r0, r6
 801fc2c:	fa1f fc82 	uxth.w	ip, r2
 801fc30:	b282      	uxth	r2, r0
 801fc32:	78a0      	ldrb	r0, [r4, #2]
 801fc34:	f897 e002 	ldrb.w	lr, [r7, #2]
 801fc38:	f897 9000 	ldrb.w	r9, [r7]
 801fc3c:	787f      	ldrb	r7, [r7, #1]
 801fc3e:	eba8 080c 	sub.w	r8, r8, ip
 801fc42:	fa1f f888 	uxth.w	r8, r8
 801fc46:	4350      	muls	r0, r2
 801fc48:	fb08 0e0e 	mla	lr, r8, lr, r0
 801fc4c:	78a8      	ldrb	r0, [r5, #2]
 801fc4e:	fb0c e000 	mla	r0, ip, r0, lr
 801fc52:	f893 e002 	ldrb.w	lr, [r3, #2]
 801fc56:	fb06 0e0e 	mla	lr, r6, lr, r0
 801fc5a:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801fc5e:	f894 e000 	ldrb.w	lr, [r4]
 801fc62:	fb02 fe0e 	mul.w	lr, r2, lr
 801fc66:	fb08 e909 	mla	r9, r8, r9, lr
 801fc6a:	f895 e000 	ldrb.w	lr, [r5]
 801fc6e:	fb0c 990e 	mla	r9, ip, lr, r9
 801fc72:	f893 e000 	ldrb.w	lr, [r3]
 801fc76:	785b      	ldrb	r3, [r3, #1]
 801fc78:	fb06 9e0e 	mla	lr, r6, lr, r9
 801fc7c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801fc80:	ea4e 0e00 	orr.w	lr, lr, r0
 801fc84:	7860      	ldrb	r0, [r4, #1]
 801fc86:	4350      	muls	r0, r2
 801fc88:	786a      	ldrb	r2, [r5, #1]
 801fc8a:	fb08 0007 	mla	r0, r8, r7, r0
 801fc8e:	fb0c 0202 	mla	r2, ip, r2, r0
 801fc92:	fb06 2303 	mla	r3, r6, r3, r2
 801fc96:	095b      	lsrs	r3, r3, #5
 801fc98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fc9c:	ea4e 0303 	orr.w	r3, lr, r3
 801fca0:	800b      	strh	r3, [r1, #0]
 801fca2:	b003      	add	sp, #12
 801fca4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fca8:	af01      	add	r7, sp, #4
 801fcaa:	e78c      	b.n	801fbc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fcac:	ac01      	add	r4, sp, #4
 801fcae:	4627      	mov	r7, r4
 801fcb0:	e795      	b.n	801fbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fcb2:	ac01      	add	r4, sp, #4
 801fcb4:	e793      	b.n	801fbde <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fcb6:	ad01      	add	r5, sp, #4
 801fcb8:	e7a1      	b.n	801fbfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fcba:	ab01      	add	r3, sp, #4
 801fcbc:	461d      	mov	r5, r3
 801fcbe:	e7ab      	b.n	801fc18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fcc0:	ab01      	add	r3, sp, #4
 801fcc2:	e7a9      	b.n	801fc18 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fcc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fcc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fcc8:	b08f      	sub	sp, #60	; 0x3c
 801fcca:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801fcce:	920c      	str	r2, [sp, #48]	; 0x30
 801fcd0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801fcd2:	910a      	str	r1, [sp, #40]	; 0x28
 801fcd4:	9306      	str	r3, [sp, #24]
 801fcd6:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801fcda:	900d      	str	r0, [sp, #52]	; 0x34
 801fcdc:	6850      	ldr	r0, [r2, #4]
 801fcde:	6812      	ldr	r2, [r2, #0]
 801fce0:	fb00 1303 	mla	r3, r0, r3, r1
 801fce4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fce8:	9307      	str	r3, [sp, #28]
 801fcea:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcec:	681b      	ldr	r3, [r3, #0]
 801fcee:	9308      	str	r3, [sp, #32]
 801fcf0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fcf2:	685c      	ldr	r4, [r3, #4]
 801fcf4:	3404      	adds	r4, #4
 801fcf6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fcf8:	2b00      	cmp	r3, #0
 801fcfa:	dc03      	bgt.n	801fd04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fcfc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fcfe:	2b00      	cmp	r3, #0
 801fd00:	f340 81d6 	ble.w	80200b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fd04:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd06:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd0a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd0e:	1e48      	subs	r0, r1, #1
 801fd10:	1e56      	subs	r6, r2, #1
 801fd12:	9b06      	ldr	r3, [sp, #24]
 801fd14:	2b00      	cmp	r3, #0
 801fd16:	f340 80b7 	ble.w	801fe88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fd1a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fd1e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fd22:	d406      	bmi.n	801fd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd24:	4287      	cmp	r7, r0
 801fd26:	da04      	bge.n	801fd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd28:	2b00      	cmp	r3, #0
 801fd2a:	db02      	blt.n	801fd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fd2c:	42b3      	cmp	r3, r6
 801fd2e:	f2c0 80ac 	blt.w	801fe8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801fd32:	3701      	adds	r7, #1
 801fd34:	f100 809d 	bmi.w	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd38:	42b9      	cmp	r1, r7
 801fd3a:	f2c0 809a 	blt.w	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd3e:	3301      	adds	r3, #1
 801fd40:	f100 8097 	bmi.w	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd44:	429a      	cmp	r2, r3
 801fd46:	f2c0 8094 	blt.w	801fe72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fd4a:	9b06      	ldr	r3, [sp, #24]
 801fd4c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fd4e:	9b07      	ldr	r3, [sp, #28]
 801fd50:	9309      	str	r3, [sp, #36]	; 0x24
 801fd52:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fd54:	2b00      	cmp	r3, #0
 801fd56:	f340 80b5 	ble.w	801fec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801fd5a:	9820      	ldr	r0, [sp, #128]	; 0x80
 801fd5c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801fd5e:	68c7      	ldr	r7, [r0, #12]
 801fd60:	6892      	ldr	r2, [r2, #8]
 801fd62:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fd66:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fd6a:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd6e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd72:	f100 80fb 	bmi.w	801ff6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd76:	f102 3cff 	add.w	ip, r2, #4294967295
 801fd7a:	4560      	cmp	r0, ip
 801fd7c:	f280 80f6 	bge.w	801ff6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd80:	2e00      	cmp	r6, #0
 801fd82:	f2c0 80f3 	blt.w	801ff6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd86:	f107 3cff 	add.w	ip, r7, #4294967295
 801fd8a:	4566      	cmp	r6, ip
 801fd8c:	f280 80ee 	bge.w	801ff6c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fd90:	b212      	sxth	r2, r2
 801fd92:	fb06 0002 	mla	r0, r6, r2, r0
 801fd96:	9e08      	ldr	r6, [sp, #32]
 801fd98:	1837      	adds	r7, r6, r0
 801fd9a:	5c30      	ldrb	r0, [r6, r0]
 801fd9c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fda0:	eb04 0c08 	add.w	ip, r4, r8
 801fda4:	2b00      	cmp	r3, #0
 801fda6:	f000 80d3 	beq.w	801ff50 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fdaa:	787e      	ldrb	r6, [r7, #1]
 801fdac:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fdb0:	4426      	add	r6, r4
 801fdb2:	2900      	cmp	r1, #0
 801fdb4:	f000 80d4 	beq.w	801ff60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fdb8:	18b8      	adds	r0, r7, r2
 801fdba:	5cba      	ldrb	r2, [r7, r2]
 801fdbc:	7840      	ldrb	r0, [r0, #1]
 801fdbe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fdc2:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fdc6:	4422      	add	r2, r4
 801fdc8:	4420      	add	r0, r4
 801fdca:	b29b      	uxth	r3, r3
 801fdcc:	b289      	uxth	r1, r1
 801fdce:	fb03 f901 	mul.w	r9, r3, r1
 801fdd2:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fdd6:	011b      	lsls	r3, r3, #4
 801fdd8:	b289      	uxth	r1, r1
 801fdda:	78b7      	ldrb	r7, [r6, #2]
 801fddc:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fde0:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fde4:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801fde8:	eba3 0309 	sub.w	r3, r3, r9
 801fdec:	b29b      	uxth	r3, r3
 801fdee:	ebae 0e01 	sub.w	lr, lr, r1
 801fdf2:	fa1f fe8e 	uxth.w	lr, lr
 801fdf6:	435f      	muls	r7, r3
 801fdf8:	fb0e 770a 	mla	r7, lr, sl, r7
 801fdfc:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fe00:	fb01 770a 	mla	r7, r1, sl, r7
 801fe04:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fe08:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fe0c:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fe10:	f896 8000 	ldrb.w	r8, [r6]
 801fe14:	7876      	ldrb	r6, [r6, #1]
 801fe16:	fb03 f808 	mul.w	r8, r3, r8
 801fe1a:	fb0e 8807 	mla	r8, lr, r7, r8
 801fe1e:	7817      	ldrb	r7, [r2, #0]
 801fe20:	fb01 8807 	mla	r8, r1, r7, r8
 801fe24:	7807      	ldrb	r7, [r0, #0]
 801fe26:	fb09 8707 	mla	r7, r9, r7, r8
 801fe2a:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801fe2e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fe32:	ea47 070a 	orr.w	r7, r7, sl
 801fe36:	4373      	muls	r3, r6
 801fe38:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fe3c:	fb0e 330c 	mla	r3, lr, ip, r3
 801fe40:	fb01 310a 	mla	r1, r1, sl, r3
 801fe44:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fe48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe4a:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fe4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fe52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801fe56:	ea47 070a 	orr.w	r7, r7, sl
 801fe5a:	801f      	strh	r7, [r3, #0]
 801fe5c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fe5e:	3302      	adds	r3, #2
 801fe60:	9309      	str	r3, [sp, #36]	; 0x24
 801fe62:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe64:	449b      	add	fp, r3
 801fe66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe68:	441d      	add	r5, r3
 801fe6a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801fe6c:	3b01      	subs	r3, #1
 801fe6e:	930b      	str	r3, [sp, #44]	; 0x2c
 801fe70:	e76f      	b.n	801fd52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fe72:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801fe74:	449b      	add	fp, r3
 801fe76:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fe78:	441d      	add	r5, r3
 801fe7a:	9b06      	ldr	r3, [sp, #24]
 801fe7c:	3b01      	subs	r3, #1
 801fe7e:	9306      	str	r3, [sp, #24]
 801fe80:	9b07      	ldr	r3, [sp, #28]
 801fe82:	3302      	adds	r3, #2
 801fe84:	9307      	str	r3, [sp, #28]
 801fe86:	e744      	b.n	801fd12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fe88:	d023      	beq.n	801fed2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fe8a:	9b06      	ldr	r3, [sp, #24]
 801fe8c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801fe8e:	3b01      	subs	r3, #1
 801fe90:	fb00 b003 	mla	r0, r0, r3, fp
 801fe94:	1400      	asrs	r0, r0, #16
 801fe96:	f53f af58 	bmi.w	801fd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fe9a:	3901      	subs	r1, #1
 801fe9c:	4288      	cmp	r0, r1
 801fe9e:	f6bf af54 	bge.w	801fd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fea2:	991c      	ldr	r1, [sp, #112]	; 0x70
 801fea4:	fb01 5303 	mla	r3, r1, r3, r5
 801fea8:	141b      	asrs	r3, r3, #16
 801feaa:	f53f af4e 	bmi.w	801fd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801feae:	3a01      	subs	r2, #1
 801feb0:	4293      	cmp	r3, r2
 801feb2:	f6bf af4a 	bge.w	801fd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801feb6:	9b06      	ldr	r3, [sp, #24]
 801feb8:	9309      	str	r3, [sp, #36]	; 0x24
 801feba:	9b07      	ldr	r3, [sp, #28]
 801febc:	930b      	str	r3, [sp, #44]	; 0x2c
 801febe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fec0:	2b00      	cmp	r3, #0
 801fec2:	dc70      	bgt.n	801ffa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fec4:	9b06      	ldr	r3, [sp, #24]
 801fec6:	9a07      	ldr	r2, [sp, #28]
 801fec8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fecc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fed0:	9307      	str	r3, [sp, #28]
 801fed2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801fed4:	2b00      	cmp	r3, #0
 801fed6:	f340 80eb 	ble.w	80200b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801feda:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fede:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fee2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fee6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801fee8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801feec:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fef0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fef4:	eef0 6a62 	vmov.f32	s13, s5
 801fef8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fefc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff00:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff04:	ee16 ba90 	vmov	fp, s13
 801ff08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ff0c:	eef0 6a43 	vmov.f32	s13, s6
 801ff10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ff14:	ee12 2a90 	vmov	r2, s5
 801ff18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ff1c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff20:	ee13 2a10 	vmov	r2, s6
 801ff24:	931b      	str	r3, [sp, #108]	; 0x6c
 801ff26:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff28:	fb92 f3f3 	sdiv	r3, r2, r3
 801ff2c:	931c      	str	r3, [sp, #112]	; 0x70
 801ff2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ff30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ff32:	3b01      	subs	r3, #1
 801ff34:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff38:	930a      	str	r3, [sp, #40]	; 0x28
 801ff3a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ff3c:	bf08      	it	eq
 801ff3e:	4613      	moveq	r3, r2
 801ff40:	ee16 5a90 	vmov	r5, s13
 801ff44:	9306      	str	r3, [sp, #24]
 801ff46:	eeb0 3a67 	vmov.f32	s6, s15
 801ff4a:	eef0 2a47 	vmov.f32	s5, s14
 801ff4e:	e6d2      	b.n	801fcf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ff50:	b149      	cbz	r1, 801ff66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ff52:	5cba      	ldrb	r2, [r7, r2]
 801ff54:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ff58:	4422      	add	r2, r4
 801ff5a:	4660      	mov	r0, ip
 801ff5c:	4666      	mov	r6, ip
 801ff5e:	e734      	b.n	801fdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff60:	4660      	mov	r0, ip
 801ff62:	4662      	mov	r2, ip
 801ff64:	e731      	b.n	801fdca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ff66:	4660      	mov	r0, ip
 801ff68:	4662      	mov	r2, ip
 801ff6a:	e7f7      	b.n	801ff5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ff6c:	f110 0c01 	adds.w	ip, r0, #1
 801ff70:	f53f af74 	bmi.w	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff74:	4562      	cmp	r2, ip
 801ff76:	f6ff af71 	blt.w	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff7a:	f116 0c01 	adds.w	ip, r6, #1
 801ff7e:	f53f af6d 	bmi.w	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff82:	4567      	cmp	r7, ip
 801ff84:	f6ff af6a 	blt.w	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ff88:	b23f      	sxth	r7, r7
 801ff8a:	b212      	sxth	r2, r2
 801ff8c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ff90:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ff94:	9200      	str	r2, [sp, #0]
 801ff96:	9701      	str	r7, [sp, #4]
 801ff98:	4623      	mov	r3, r4
 801ff9a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ff9e:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ffa0:	f7ff fde6 	bl	801fb70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801ffa4:	e75a      	b.n	801fe5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ffa6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ffa8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ffac:	ea4f 462b 	mov.w	r6, fp, asr #16
 801ffb0:	1428      	asrs	r0, r5, #16
 801ffb2:	fb02 6000 	mla	r0, r2, r0, r6
 801ffb6:	9e08      	ldr	r6, [sp, #32]
 801ffb8:	f816 8000 	ldrb.w	r8, [r6, r0]
 801ffbc:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ffc0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801ffc4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ffc8:	1837      	adds	r7, r6, r0
 801ffca:	eb04 0c08 	add.w	ip, r4, r8
 801ffce:	2b00      	cmp	r3, #0
 801ffd0:	d060      	beq.n	8020094 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801ffd2:	787e      	ldrb	r6, [r7, #1]
 801ffd4:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ffd8:	4426      	add	r6, r4
 801ffda:	2900      	cmp	r1, #0
 801ffdc:	d062      	beq.n	80200a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801ffde:	18b8      	adds	r0, r7, r2
 801ffe0:	5cba      	ldrb	r2, [r7, r2]
 801ffe2:	7840      	ldrb	r0, [r0, #1]
 801ffe4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ffe8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ffec:	4422      	add	r2, r4
 801ffee:	4420      	add	r0, r4
 801fff0:	b29b      	uxth	r3, r3
 801fff2:	b289      	uxth	r1, r1
 801fff4:	fb03 f901 	mul.w	r9, r3, r1
 801fff8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fffc:	011b      	lsls	r3, r3, #4
 801fffe:	b289      	uxth	r1, r1
 8020000:	78b7      	ldrb	r7, [r6, #2]
 8020002:	f89c a002 	ldrb.w	sl, [ip, #2]
 8020006:	f89c c001 	ldrb.w	ip, [ip, #1]
 802000a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 802000e:	eba3 0309 	sub.w	r3, r3, r9
 8020012:	b29b      	uxth	r3, r3
 8020014:	ebae 0e01 	sub.w	lr, lr, r1
 8020018:	fa1f fe8e 	uxth.w	lr, lr
 802001c:	435f      	muls	r7, r3
 802001e:	fb0e 770a 	mla	r7, lr, sl, r7
 8020022:	f892 a002 	ldrb.w	sl, [r2, #2]
 8020026:	fb01 770a 	mla	r7, r1, sl, r7
 802002a:	f890 a002 	ldrb.w	sl, [r0, #2]
 802002e:	fb09 7a0a 	mla	sl, r9, sl, r7
 8020032:	f814 7008 	ldrb.w	r7, [r4, r8]
 8020036:	f896 8000 	ldrb.w	r8, [r6]
 802003a:	7876      	ldrb	r6, [r6, #1]
 802003c:	fb03 f808 	mul.w	r8, r3, r8
 8020040:	fb0e 8807 	mla	r8, lr, r7, r8
 8020044:	7817      	ldrb	r7, [r2, #0]
 8020046:	fb01 8807 	mla	r8, r1, r7, r8
 802004a:	7807      	ldrb	r7, [r0, #0]
 802004c:	fb09 8707 	mla	r7, r9, r7, r8
 8020050:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8020054:	4373      	muls	r3, r6
 8020056:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802005a:	7856      	ldrb	r6, [r2, #1]
 802005c:	ea47 070a 	orr.w	r7, r7, sl
 8020060:	fb0e 330c 	mla	r3, lr, ip, r3
 8020064:	f890 a001 	ldrb.w	sl, [r0, #1]
 8020068:	fb01 3306 	mla	r3, r1, r6, r3
 802006c:	fb09 3a0a 	mla	sl, r9, sl, r3
 8020070:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8020074:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8020076:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802007a:	ea47 070a 	orr.w	r7, r7, sl
 802007e:	f823 7b02 	strh.w	r7, [r3], #2
 8020082:	930b      	str	r3, [sp, #44]	; 0x2c
 8020084:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8020086:	449b      	add	fp, r3
 8020088:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802008a:	441d      	add	r5, r3
 802008c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802008e:	3b01      	subs	r3, #1
 8020090:	9309      	str	r3, [sp, #36]	; 0x24
 8020092:	e714      	b.n	801febe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8020094:	b149      	cbz	r1, 80200aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8020096:	5cba      	ldrb	r2, [r7, r2]
 8020098:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802009c:	4422      	add	r2, r4
 802009e:	4660      	mov	r0, ip
 80200a0:	4666      	mov	r6, ip
 80200a2:	e7a5      	b.n	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80200a4:	4660      	mov	r0, ip
 80200a6:	4662      	mov	r2, ip
 80200a8:	e7a2      	b.n	801fff0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 80200aa:	4660      	mov	r0, ip
 80200ac:	4662      	mov	r2, ip
 80200ae:	e7f7      	b.n	80200a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 80200b0:	b00f      	add	sp, #60	; 0x3c
 80200b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080200b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 80200b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200ba:	b085      	sub	sp, #20
 80200bc:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 80200c0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80200c4:	9102      	str	r1, [sp, #8]
 80200c6:	2c00      	cmp	r4, #0
 80200c8:	fb04 710c 	mla	r1, r4, ip, r7
 80200cc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80200d0:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 80200d4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80200d8:	eb02 0e01 	add.w	lr, r2, r1
 80200dc:	f2c0 8122 	blt.w	8020324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200e0:	45a0      	cmp	r8, r4
 80200e2:	f340 811f 	ble.w	8020324 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 80200e6:	2f00      	cmp	r7, #0
 80200e8:	f2c0 811a 	blt.w	8020320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200ec:	45bc      	cmp	ip, r7
 80200ee:	f340 8117 	ble.w	8020320 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 80200f2:	5c52      	ldrb	r2, [r2, r1]
 80200f4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 80200f8:	1c7a      	adds	r2, r7, #1
 80200fa:	f100 8116 	bmi.w	802032a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 80200fe:	4594      	cmp	ip, r2
 8020100:	f340 8113 	ble.w	802032a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8020104:	2e00      	cmp	r6, #0
 8020106:	f000 8112 	beq.w	802032e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802010a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802010e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020112:	3401      	adds	r4, #1
 8020114:	f100 810f 	bmi.w	8020336 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 8020118:	45a0      	cmp	r8, r4
 802011a:	f340 810c 	ble.w	8020336 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 802011e:	2800      	cmp	r0, #0
 8020120:	f000 810c 	beq.w	802033c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 8020124:	2f00      	cmp	r7, #0
 8020126:	f2c0 8104 	blt.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 802012a:	45bc      	cmp	ip, r7
 802012c:	f340 8101 	ble.w	8020332 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 8020130:	f81e 200c 	ldrb.w	r2, [lr, ip]
 8020134:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8020138:	3701      	adds	r7, #1
 802013a:	f100 8102 	bmi.w	8020342 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 802013e:	45bc      	cmp	ip, r7
 8020140:	f340 80ff 	ble.w	8020342 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 8020144:	2e00      	cmp	r6, #0
 8020146:	f000 80fe 	beq.w	8020346 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 802014a:	44f4      	add	ip, lr
 802014c:	f89c 2001 	ldrb.w	r2, [ip, #1]
 8020150:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8020154:	b2b6      	uxth	r6, r6
 8020156:	b280      	uxth	r0, r0
 8020158:	fb00 fe06 	mul.w	lr, r0, r6
 802015c:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8020160:	0136      	lsls	r6, r6, #4
 8020162:	eba6 070e 	sub.w	r7, r6, lr
 8020166:	b280      	uxth	r0, r0
 8020168:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802016c:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8020170:	b2bf      	uxth	r7, r7
 8020172:	1a1b      	subs	r3, r3, r0
 8020174:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8020178:	b29b      	uxth	r3, r3
 802017a:	fb0a f607 	mul.w	r6, sl, r7
 802017e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8020182:	fb0b 6603 	mla	r6, fp, r3, r6
 8020186:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802018a:	fb00 6609 	mla	r6, r0, r9, r6
 802018e:	fb0e 6608 	mla	r6, lr, r8, r6
 8020192:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8020196:	9600      	str	r6, [sp, #0]
 8020198:	2e00      	cmp	r6, #0
 802019a:	f000 80be 	beq.w	802031a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802019e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80201a2:	fb0b fc0c 	mul.w	ip, fp, ip
 80201a6:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80201aa:	fb0b f505 	mul.w	r5, fp, r5
 80201ae:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80201b2:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80201b6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201ba:	44dc      	add	ip, fp
 80201bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201c0:	9501      	str	r5, [sp, #4]
 80201c2:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 80201c6:	9503      	str	r5, [sp, #12]
 80201c8:	9d01      	ldr	r5, [sp, #4]
 80201ca:	9e02      	ldr	r6, [sp, #8]
 80201cc:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 80201d0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80201d4:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 80201d8:	fb0a fc0c 	mul.w	ip, sl, ip
 80201dc:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 80201e0:	ea4f 251c 	mov.w	r5, ip, lsr #8
 80201e4:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80201e8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80201ec:	4465      	add	r5, ip
 80201ee:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80201f2:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80201f6:	fb09 fc0c 	mul.w	ip, r9, ip
 80201fa:	fb09 f904 	mul.w	r9, r9, r4
 80201fe:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8020202:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8020206:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802020a:	fb08 f404 	mul.w	r4, r8, r4
 802020e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020212:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8020216:	fb08 f802 	mul.w	r8, r8, r2
 802021a:	fb0a fa01 	mul.w	sl, sl, r1
 802021e:	0a22      	lsrs	r2, r4, #8
 8020220:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8020224:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8020228:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802022c:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8020230:	4414      	add	r4, r2
 8020232:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8020236:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802023a:	0a2d      	lsrs	r5, r5, #8
 802023c:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8020240:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020244:	9a03      	ldr	r2, [sp, #12]
 8020246:	8836      	ldrh	r6, [r6, #0]
 8020248:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802024c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020250:	437d      	muls	r5, r7
 8020252:	4461      	add	r1, ip
 8020254:	0a24      	lsrs	r4, r4, #8
 8020256:	fb02 5503 	mla	r5, r2, r3, r5
 802025a:	0a09      	lsrs	r1, r1, #8
 802025c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8020260:	fb04 540e 	mla	r4, r4, lr, r5
 8020264:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8020268:	fb01 4100 	mla	r1, r1, r0, r4
 802026c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020270:	0a09      	lsrs	r1, r1, #8
 8020272:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020276:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802027a:	fb07 f70a 	mul.w	r7, r7, sl
 802027e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8020282:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8020286:	fb03 7101 	mla	r1, r3, r1, r7
 802028a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802028e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8020292:	fb0e 1e08 	mla	lr, lr, r8, r1
 8020296:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802029a:	fb00 e101 	mla	r1, r0, r1, lr
 802029e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 80202a2:	9a00      	ldr	r2, [sp, #0]
 80202a4:	b287      	uxth	r7, r0
 80202a6:	437a      	muls	r2, r7
 80202a8:	0a09      	lsrs	r1, r1, #8
 80202aa:	1c53      	adds	r3, r2, #1
 80202ac:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80202b0:	4321      	orrs	r1, r4
 80202b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80202b6:	1235      	asrs	r5, r6, #8
 80202b8:	0c0a      	lsrs	r2, r1, #16
 80202ba:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80202be:	b2db      	uxtb	r3, r3
 80202c0:	fb12 f207 	smulbb	r2, r2, r7
 80202c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80202c8:	fb05 2503 	mla	r5, r5, r3, r2
 80202cc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 80202d0:	10f2      	asrs	r2, r6, #3
 80202d2:	b2c8      	uxtb	r0, r1
 80202d4:	00f6      	lsls	r6, r6, #3
 80202d6:	fb14 f407 	smulbb	r4, r4, r7
 80202da:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80202de:	b2f6      	uxtb	r6, r6
 80202e0:	fb10 f007 	smulbb	r0, r0, r7
 80202e4:	fb02 4203 	mla	r2, r2, r3, r4
 80202e8:	b2ad      	uxth	r5, r5
 80202ea:	fb06 0303 	mla	r3, r6, r3, r0
 80202ee:	b299      	uxth	r1, r3
 80202f0:	b294      	uxth	r4, r2
 80202f2:	1c6b      	adds	r3, r5, #1
 80202f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80202f8:	1c62      	adds	r2, r4, #1
 80202fa:	1c4b      	adds	r3, r1, #1
 80202fc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020300:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020304:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8020308:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802030c:	0952      	lsrs	r2, r2, #5
 802030e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8020312:	432b      	orrs	r3, r5
 8020314:	4313      	orrs	r3, r2
 8020316:	9a02      	ldr	r2, [sp, #8]
 8020318:	8013      	strh	r3, [r2, #0]
 802031a:	b005      	add	sp, #20
 802031c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020320:	2500      	movs	r5, #0
 8020322:	e6e9      	b.n	80200f8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020324:	2100      	movs	r1, #0
 8020326:	460d      	mov	r5, r1
 8020328:	e6f3      	b.n	8020112 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802032a:	2100      	movs	r1, #0
 802032c:	e6f1      	b.n	8020112 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802032e:	4631      	mov	r1, r6
 8020330:	e6ef      	b.n	8020112 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 8020332:	2400      	movs	r4, #0
 8020334:	e700      	b.n	8020138 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 8020336:	2200      	movs	r2, #0
 8020338:	4614      	mov	r4, r2
 802033a:	e70b      	b.n	8020154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 802033c:	4602      	mov	r2, r0
 802033e:	4604      	mov	r4, r0
 8020340:	e708      	b.n	8020154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020342:	2200      	movs	r2, #0
 8020344:	e706      	b.n	8020154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 8020346:	4632      	mov	r2, r6
 8020348:	e704      	b.n	8020154 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0802034a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802034a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802034e:	b09f      	sub	sp, #124	; 0x7c
 8020350:	921b      	str	r2, [sp, #108]	; 0x6c
 8020352:	9309      	str	r3, [sp, #36]	; 0x24
 8020354:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8020356:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 802035a:	931c      	str	r3, [sp, #112]	; 0x70
 802035c:	9119      	str	r1, [sp, #100]	; 0x64
 802035e:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8020362:	901d      	str	r0, [sp, #116]	; 0x74
 8020364:	6850      	ldr	r0, [r2, #4]
 8020366:	6812      	ldr	r2, [r2, #0]
 8020368:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 802036a:	fb00 1303 	mla	r3, r0, r3, r1
 802036e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020372:	930c      	str	r3, [sp, #48]	; 0x30
 8020374:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020376:	681b      	ldr	r3, [r3, #0]
 8020378:	9312      	str	r3, [sp, #72]	; 0x48
 802037a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802037c:	685e      	ldr	r6, [r3, #4]
 802037e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8020382:	930d      	str	r3, [sp, #52]	; 0x34
 8020384:	3604      	adds	r6, #4
 8020386:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020388:	2b00      	cmp	r3, #0
 802038a:	dc03      	bgt.n	8020394 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802038c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802038e:	2b00      	cmp	r3, #0
 8020390:	f340 8388 	ble.w	8020aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020394:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8020396:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802039a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802039e:	1e48      	subs	r0, r1, #1
 80203a0:	1e57      	subs	r7, r2, #1
 80203a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203a4:	2b00      	cmp	r3, #0
 80203a6:	f340 8195 	ble.w	80206d4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80203aa:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80203ac:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80203b0:	ea4f 4325 	mov.w	r3, r5, asr #16
 80203b4:	d406      	bmi.n	80203c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203b6:	4584      	cmp	ip, r0
 80203b8:	da04      	bge.n	80203c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203ba:	2b00      	cmp	r3, #0
 80203bc:	db02      	blt.n	80203c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80203be:	42bb      	cmp	r3, r7
 80203c0:	f2c0 8189 	blt.w	80206d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 80203c4:	f11c 0c01 	adds.w	ip, ip, #1
 80203c8:	f100 8177 	bmi.w	80206ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203cc:	4561      	cmp	r1, ip
 80203ce:	f2c0 8174 	blt.w	80206ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203d2:	3301      	adds	r3, #1
 80203d4:	f100 8171 	bmi.w	80206ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203d8:	429a      	cmp	r2, r3
 80203da:	f2c0 816e 	blt.w	80206ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80203de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80203e0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80203e2:	931a      	str	r3, [sp, #104]	; 0x68
 80203e4:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80203e6:	2b00      	cmp	r3, #0
 80203e8:	f340 8193 	ble.w	8020712 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 80203ec:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203ee:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80203f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80203f4:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 80203f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80203fa:	141b      	asrs	r3, r3, #16
 80203fc:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020400:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020404:	f100 81d6 	bmi.w	80207b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020408:	f100 38ff 	add.w	r8, r0, #4294967295
 802040c:	4543      	cmp	r3, r8
 802040e:	f280 81d1 	bge.w	80207b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020412:	f1bc 0f00 	cmp.w	ip, #0
 8020416:	f2c0 81cd 	blt.w	80207b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802041a:	f10e 38ff 	add.w	r8, lr, #4294967295
 802041e:	45c4      	cmp	ip, r8
 8020420:	f280 81c8 	bge.w	80207b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020424:	b200      	sxth	r0, r0
 8020426:	fb0c 3300 	mla	r3, ip, r0, r3
 802042a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802042c:	eb04 0803 	add.w	r8, r4, r3
 8020430:	5ce3      	ldrb	r3, [r4, r3]
 8020432:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020436:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 802043a:	2a00      	cmp	r2, #0
 802043c:	f000 81af 	beq.w	802079e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020440:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020444:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020448:	940e      	str	r4, [sp, #56]	; 0x38
 802044a:	0e24      	lsrs	r4, r4, #24
 802044c:	9415      	str	r4, [sp, #84]	; 0x54
 802044e:	b179      	cbz	r1, 8020470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020450:	eb08 0c00 	add.w	ip, r8, r0
 8020454:	f818 0000 	ldrb.w	r0, [r8, r0]
 8020458:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802045c:	900a      	str	r0, [sp, #40]	; 0x28
 802045e:	0e00      	lsrs	r0, r0, #24
 8020460:	9013      	str	r0, [sp, #76]	; 0x4c
 8020462:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8020466:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802046a:	900f      	str	r0, [sp, #60]	; 0x3c
 802046c:	0e00      	lsrs	r0, r0, #24
 802046e:	9016      	str	r0, [sp, #88]	; 0x58
 8020470:	b292      	uxth	r2, r2
 8020472:	b289      	uxth	r1, r1
 8020474:	fb02 f901 	mul.w	r9, r2, r1
 8020478:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802047c:	0112      	lsls	r2, r2, #4
 802047e:	eba2 0809 	sub.w	r8, r2, r9
 8020482:	b289      	uxth	r1, r1
 8020484:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020488:	9815      	ldr	r0, [sp, #84]	; 0x54
 802048a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802048c:	fa1f f888 	uxth.w	r8, r8
 8020490:	1a52      	subs	r2, r2, r1
 8020492:	b292      	uxth	r2, r2
 8020494:	fb08 f000 	mul.w	r0, r8, r0
 8020498:	fb02 000e 	mla	r0, r2, lr, r0
 802049c:	fb01 0004 	mla	r0, r1, r4, r0
 80204a0:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80204a2:	fb09 0004 	mla	r0, r9, r4, r0
 80204a6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80204aa:	2800      	cmp	r0, #0
 80204ac:	f000 80fa 	beq.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80204b0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80204b4:	d01b      	beq.n	80204ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80204b6:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80204ba:	fb0e fa0a 	mul.w	sl, lr, sl
 80204be:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80204c2:	fb0e fe03 	mul.w	lr, lr, r3
 80204c6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80204ca:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204ce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80204d2:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80204d6:	4453      	add	r3, sl
 80204d8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80204dc:	0a1b      	lsrs	r3, r3, #8
 80204de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80204e2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80204e6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80204ea:	ea43 030c 	orr.w	r3, r3, ip
 80204ee:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204f0:	2cff      	cmp	r4, #255	; 0xff
 80204f2:	d021      	beq.n	8020538 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80204f4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80204f6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80204fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80204fc:	fb04 fb0b 	mul.w	fp, r4, fp
 8020500:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8020502:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020506:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8020508:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802050c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020510:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020514:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020518:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802051c:	44de      	add	lr, fp
 802051e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020522:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020526:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802052a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802052e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020532:	ea4e 040a 	orr.w	r4, lr, sl
 8020536:	940e      	str	r4, [sp, #56]	; 0x38
 8020538:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802053a:	2cff      	cmp	r4, #255	; 0xff
 802053c:	d021      	beq.n	8020582 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 802053e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8020540:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020544:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020546:	fb04 fb0b 	mul.w	fp, r4, fp
 802054a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802054c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020550:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020552:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020556:	fb04 fa0a 	mul.w	sl, r4, sl
 802055a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802055e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020562:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020566:	44de      	add	lr, fp
 8020568:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802056c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020570:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020574:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020578:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802057c:	ea4e 040a 	orr.w	r4, lr, sl
 8020580:	940a      	str	r4, [sp, #40]	; 0x28
 8020582:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020584:	2cff      	cmp	r4, #255	; 0xff
 8020586:	d021      	beq.n	80205cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8020588:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802058a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802058e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8020590:	fb04 fb0b 	mul.w	fp, r4, fp
 8020594:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020596:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802059a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802059c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80205a0:	fb04 fa0a 	mul.w	sl, r4, sl
 80205a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205a8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80205ac:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80205b0:	44de      	add	lr, fp
 80205b2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80205b6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80205ba:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80205be:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80205c2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80205c6:	ea4e 040a 	orr.w	r4, lr, sl
 80205ca:	940f      	str	r4, [sp, #60]	; 0x3c
 80205cc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205ce:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80205d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80205d4:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80205d8:	fb08 fc0c 	mul.w	ip, r8, ip
 80205dc:	fb02 cc0e 	mla	ip, r2, lr, ip
 80205e0:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205e4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80205e6:	fb01 cc0e 	mla	ip, r1, lr, ip
 80205ea:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80205ee:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80205f0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80205f4:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80205f8:	fb08 f80e 	mul.w	r8, r8, lr
 80205fc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020600:	fb02 8303 	mla	r3, r2, r3, r8
 8020604:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8020606:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8020608:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802060c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802060e:	fb01 330a 	mla	r3, r1, sl, r3
 8020612:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8020616:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8020618:	fb09 3901 	mla	r9, r9, r1, r3
 802061c:	4342      	muls	r2, r0
 802061e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020622:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020626:	883b      	ldrh	r3, [r7, #0]
 8020628:	1c50      	adds	r0, r2, #1
 802062a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802062e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8020632:	ea4c 0c09 	orr.w	ip, ip, r9
 8020636:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802063a:	1219      	asrs	r1, r3, #8
 802063c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8020640:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8020644:	b2c0      	uxtb	r0, r0
 8020646:	fb12 f204 	smulbb	r2, r2, r4
 802064a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802064e:	fb01 2100 	mla	r1, r1, r0, r2
 8020652:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8020656:	10da      	asrs	r2, r3, #3
 8020658:	fa5f fc8c 	uxtb.w	ip, ip
 802065c:	00db      	lsls	r3, r3, #3
 802065e:	fb1c fc04 	smulbb	ip, ip, r4
 8020662:	b2db      	uxtb	r3, r3
 8020664:	b289      	uxth	r1, r1
 8020666:	fb03 c300 	mla	r3, r3, r0, ip
 802066a:	fa1f fc83 	uxth.w	ip, r3
 802066e:	1c4b      	adds	r3, r1, #1
 8020670:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8020674:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020678:	fb1e fe04 	smulbb	lr, lr, r4
 802067c:	f10c 0301 	add.w	r3, ip, #1
 8020680:	fb02 e200 	mla	r2, r2, r0, lr
 8020684:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8020688:	b292      	uxth	r2, r2
 802068a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802068e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020692:	430b      	orrs	r3, r1
 8020694:	1c51      	adds	r1, r2, #1
 8020696:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802069a:	0952      	lsrs	r2, r2, #5
 802069c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80206a0:	4313      	orrs	r3, r2
 80206a2:	803b      	strh	r3, [r7, #0]
 80206a4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80206a6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80206a8:	441a      	add	r2, r3
 80206aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206ac:	9229      	str	r2, [sp, #164]	; 0xa4
 80206ae:	441d      	add	r5, r3
 80206b0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80206b2:	3b01      	subs	r3, #1
 80206b4:	3702      	adds	r7, #2
 80206b6:	931a      	str	r3, [sp, #104]	; 0x68
 80206b8:	e694      	b.n	80203e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 80206ba:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80206bc:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206be:	441c      	add	r4, r3
 80206c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80206c2:	9429      	str	r4, [sp, #164]	; 0xa4
 80206c4:	441d      	add	r5, r3
 80206c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206c8:	3b01      	subs	r3, #1
 80206ca:	9309      	str	r3, [sp, #36]	; 0x24
 80206cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80206ce:	3302      	adds	r3, #2
 80206d0:	930c      	str	r3, [sp, #48]	; 0x30
 80206d2:	e666      	b.n	80203a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80206d4:	d024      	beq.n	8020720 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80206d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80206d8:	982b      	ldr	r0, [sp, #172]	; 0xac
 80206da:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80206dc:	3b01      	subs	r3, #1
 80206de:	fb00 4003 	mla	r0, r0, r3, r4
 80206e2:	1400      	asrs	r0, r0, #16
 80206e4:	f53f ae7b 	bmi.w	80203de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206e8:	3901      	subs	r1, #1
 80206ea:	4288      	cmp	r0, r1
 80206ec:	f6bf ae77 	bge.w	80203de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206f0:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80206f2:	fb01 5303 	mla	r3, r1, r3, r5
 80206f6:	141b      	asrs	r3, r3, #16
 80206f8:	f53f ae71 	bmi.w	80203de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80206fc:	3a01      	subs	r2, #1
 80206fe:	4293      	cmp	r3, r2
 8020700:	f6bf ae6d 	bge.w	80203de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020704:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8020708:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802070c:	f1bb 0f00 	cmp.w	fp, #0
 8020710:	dc70      	bgt.n	80207f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020714:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020718:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802071a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802071e:	930c      	str	r3, [sp, #48]	; 0x30
 8020720:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8020722:	2b00      	cmp	r3, #0
 8020724:	f340 81be 	ble.w	8020aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020728:	ee30 0a04 	vadd.f32	s0, s0, s8
 802072c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020730:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020734:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020736:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802073a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802073e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020742:	eef0 6a62 	vmov.f32	s13, s5
 8020746:	ee61 7a27 	vmul.f32	s15, s2, s15
 802074a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802074e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020752:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8020756:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802075a:	eef0 6a43 	vmov.f32	s13, s6
 802075e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020762:	ee12 2a90 	vmov	r2, s5
 8020766:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802076a:	fb92 f3f3 	sdiv	r3, r2, r3
 802076e:	ee13 2a10 	vmov	r2, s6
 8020772:	932b      	str	r3, [sp, #172]	; 0xac
 8020774:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8020776:	fb92 f3f3 	sdiv	r3, r2, r3
 802077a:	932c      	str	r3, [sp, #176]	; 0xb0
 802077c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802077e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8020780:	3b01      	subs	r3, #1
 8020782:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020786:	9319      	str	r3, [sp, #100]	; 0x64
 8020788:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802078a:	bf08      	it	eq
 802078c:	4613      	moveq	r3, r2
 802078e:	ee16 5a90 	vmov	r5, s13
 8020792:	9309      	str	r3, [sp, #36]	; 0x24
 8020794:	eeb0 3a67 	vmov.f32	s6, s15
 8020798:	eef0 2a47 	vmov.f32	s5, s14
 802079c:	e5f3      	b.n	8020386 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802079e:	2900      	cmp	r1, #0
 80207a0:	f43f ae66 	beq.w	8020470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80207a4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80207a8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80207ac:	900a      	str	r0, [sp, #40]	; 0x28
 80207ae:	0e00      	lsrs	r0, r0, #24
 80207b0:	9013      	str	r0, [sp, #76]	; 0x4c
 80207b2:	e65d      	b.n	8020470 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80207b4:	f113 0801 	adds.w	r8, r3, #1
 80207b8:	f53f af74 	bmi.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207bc:	4540      	cmp	r0, r8
 80207be:	f6ff af71 	blt.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207c2:	f11c 0801 	adds.w	r8, ip, #1
 80207c6:	f53f af6d 	bmi.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207ca:	45c6      	cmp	lr, r8
 80207cc:	f6ff af6a 	blt.w	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207d0:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 80207d2:	9302      	str	r3, [sp, #8]
 80207d4:	b200      	sxth	r0, r0
 80207d6:	fa0f f38e 	sxth.w	r3, lr
 80207da:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80207de:	e9cd c203 	strd	ip, r2, [sp, #12]
 80207e2:	9301      	str	r3, [sp, #4]
 80207e4:	9000      	str	r0, [sp, #0]
 80207e6:	4633      	mov	r3, r6
 80207e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80207ea:	981d      	ldr	r0, [sp, #116]	; 0x74
 80207ec:	4639      	mov	r1, r7
 80207ee:	f7ff fc62 	bl	80200b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80207f2:	e757      	b.n	80206a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80207f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80207f6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 80207f8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80207fc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80207fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020802:	1427      	asrs	r7, r4, #16
 8020804:	142b      	asrs	r3, r5, #16
 8020806:	fb01 7303 	mla	r3, r1, r3, r7
 802080a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802080c:	18e7      	adds	r7, r4, r3
 802080e:	5ce3      	ldrb	r3, [r4, r3]
 8020810:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020814:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020818:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802081c:	2a00      	cmp	r2, #0
 802081e:	f000 8137 	beq.w	8020a90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020822:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020826:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802082a:	9410      	str	r4, [sp, #64]	; 0x40
 802082c:	0e24      	lsrs	r4, r4, #24
 802082e:	9417      	str	r4, [sp, #92]	; 0x5c
 8020830:	b170      	cbz	r0, 8020850 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020832:	eb07 0e01 	add.w	lr, r7, r1
 8020836:	5c79      	ldrb	r1, [r7, r1]
 8020838:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802083c:	910b      	str	r1, [sp, #44]	; 0x2c
 802083e:	0e09      	lsrs	r1, r1, #24
 8020840:	9114      	str	r1, [sp, #80]	; 0x50
 8020842:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020846:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 802084a:	9111      	str	r1, [sp, #68]	; 0x44
 802084c:	0e09      	lsrs	r1, r1, #24
 802084e:	9118      	str	r1, [sp, #96]	; 0x60
 8020850:	b292      	uxth	r2, r2
 8020852:	b280      	uxth	r0, r0
 8020854:	fb02 f800 	mul.w	r8, r2, r0
 8020858:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802085c:	0112      	lsls	r2, r2, #4
 802085e:	eba2 0e08 	sub.w	lr, r2, r8
 8020862:	b280      	uxth	r0, r0
 8020864:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020868:	9917      	ldr	r1, [sp, #92]	; 0x5c
 802086a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802086c:	fa1f fe8e 	uxth.w	lr, lr
 8020870:	1a12      	subs	r2, r2, r0
 8020872:	b292      	uxth	r2, r2
 8020874:	fb0e f101 	mul.w	r1, lr, r1
 8020878:	fb02 110c 	mla	r1, r2, ip, r1
 802087c:	fb00 1104 	mla	r1, r0, r4, r1
 8020880:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020882:	fb08 1104 	mla	r1, r8, r4, r1
 8020886:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802088a:	2900      	cmp	r1, #0
 802088c:	f000 80f5 	beq.w	8020a7a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020890:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8020894:	d019      	beq.n	80208ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8020896:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802089a:	fb0c fa0a 	mul.w	sl, ip, sl
 802089e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80208a2:	fb0c fc03 	mul.w	ip, ip, r3
 80208a6:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80208aa:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80208ae:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80208b2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80208b6:	4453      	add	r3, sl
 80208b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80208bc:	0a1b      	lsrs	r3, r3, #8
 80208be:	0a3f      	lsrs	r7, r7, #8
 80208c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80208c4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80208c8:	433b      	orrs	r3, r7
 80208ca:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208cc:	2cff      	cmp	r4, #255	; 0xff
 80208ce:	d020      	beq.n	8020912 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80208d0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80208d6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208d8:	4367      	muls	r7, r4
 80208da:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80208dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80208e0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80208e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80208e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80208ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80208ee:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80208f2:	44bc      	add	ip, r7
 80208f4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80208f8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80208fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020900:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020904:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020908:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802090c:	ea4c 040a 	orr.w	r4, ip, sl
 8020910:	9410      	str	r4, [sp, #64]	; 0x40
 8020912:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020914:	2cff      	cmp	r4, #255	; 0xff
 8020916:	d020      	beq.n	802095a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8020918:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802091a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802091e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8020920:	4367      	muls	r7, r4
 8020922:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020924:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020928:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802092a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802092e:	fb04 fa0a 	mul.w	sl, r4, sl
 8020932:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020936:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802093a:	44bc      	add	ip, r7
 802093c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020940:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020944:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020948:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802094c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020950:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020954:	ea4c 040a 	orr.w	r4, ip, sl
 8020958:	940b      	str	r4, [sp, #44]	; 0x2c
 802095a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 802095c:	2cff      	cmp	r4, #255	; 0xff
 802095e:	d020      	beq.n	80209a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 8020960:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8020962:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8020966:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020968:	4367      	muls	r7, r4
 802096a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802096c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020970:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8020972:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020976:	fb04 fa0a 	mul.w	sl, r4, sl
 802097a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802097e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020982:	44bc      	add	ip, r7
 8020984:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8020988:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802098c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020990:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020994:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020998:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802099c:	ea4c 040a 	orr.w	r4, ip, sl
 80209a0:	9411      	str	r4, [sp, #68]	; 0x44
 80209a2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80209a4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80209a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80209aa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80209ae:	fb0e f707 	mul.w	r7, lr, r7
 80209b2:	fb02 770c 	mla	r7, r2, ip, r7
 80209b6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209ba:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80209bc:	fb00 770c 	mla	r7, r0, ip, r7
 80209c0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80209c4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80209c6:	fb08 770c 	mla	r7, r8, ip, r7
 80209ca:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80209ce:	fb0e fe0c 	mul.w	lr, lr, ip
 80209d2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80209d6:	fb02 e303 	mla	r3, r2, r3, lr
 80209da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80209dc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80209de:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80209e2:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80209e4:	fb00 330a 	mla	r3, r0, sl, r3
 80209e8:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80209ec:	fb08 3c0c 	mla	ip, r8, ip, r3
 80209f0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80209f2:	f8b9 0000 	ldrh.w	r0, [r9]
 80209f6:	434b      	muls	r3, r1
 80209f8:	0a3f      	lsrs	r7, r7, #8
 80209fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209fe:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020a02:	1c59      	adds	r1, r3, #1
 8020a04:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8020a08:	ea47 070c 	orr.w	r7, r7, ip
 8020a0c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020a10:	1202      	asrs	r2, r0, #8
 8020a12:	0c3b      	lsrs	r3, r7, #16
 8020a14:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020a18:	b2c9      	uxtb	r1, r1
 8020a1a:	fb13 f304 	smulbb	r3, r3, r4
 8020a1e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8020a22:	fb02 3201 	mla	r2, r2, r1, r3
 8020a26:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8020a2a:	10c3      	asrs	r3, r0, #3
 8020a2c:	b2ff      	uxtb	r7, r7
 8020a2e:	00c0      	lsls	r0, r0, #3
 8020a30:	b292      	uxth	r2, r2
 8020a32:	fb1c fc04 	smulbb	ip, ip, r4
 8020a36:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8020a3a:	b2c0      	uxtb	r0, r0
 8020a3c:	fb17 f704 	smulbb	r7, r7, r4
 8020a40:	fb03 c301 	mla	r3, r3, r1, ip
 8020a44:	fb00 7001 	mla	r0, r0, r1, r7
 8020a48:	f102 0c01 	add.w	ip, r2, #1
 8020a4c:	b280      	uxth	r0, r0
 8020a4e:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8020a52:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8020a56:	1c42      	adds	r2, r0, #1
 8020a58:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8020a5c:	b29b      	uxth	r3, r3
 8020a5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8020a62:	ea42 020c 	orr.w	r2, r2, ip
 8020a66:	f103 0c01 	add.w	ip, r3, #1
 8020a6a:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8020a6e:	095b      	lsrs	r3, r3, #5
 8020a70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020a74:	431a      	orrs	r2, r3
 8020a76:	f8a9 2000 	strh.w	r2, [r9]
 8020a7a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8020a7c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020a7e:	441a      	add	r2, r3
 8020a80:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020a82:	9229      	str	r2, [sp, #164]	; 0xa4
 8020a84:	f109 0902 	add.w	r9, r9, #2
 8020a88:	441d      	add	r5, r3
 8020a8a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020a8e:	e63d      	b.n	802070c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020a90:	2800      	cmp	r0, #0
 8020a92:	f43f aedd 	beq.w	8020850 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020a96:	5c79      	ldrb	r1, [r7, r1]
 8020a98:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a9c:	910b      	str	r1, [sp, #44]	; 0x2c
 8020a9e:	0e09      	lsrs	r1, r1, #24
 8020aa0:	9114      	str	r1, [sp, #80]	; 0x50
 8020aa2:	e6d5      	b.n	8020850 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020aa4:	b01f      	add	sp, #124	; 0x7c
 8020aa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08020aaa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8020aaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aae:	b089      	sub	sp, #36	; 0x24
 8020ab0:	9101      	str	r1, [sp, #4]
 8020ab2:	9801      	ldr	r0, [sp, #4]
 8020ab4:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8020ab8:	8800      	ldrh	r0, [r0, #0]
 8020aba:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8020abe:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8020ac2:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8020ac6:	1206      	asrs	r6, r0, #8
 8020ac8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8020acc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8020ad0:	9602      	str	r6, [sp, #8]
 8020ad2:	10c6      	asrs	r6, r0, #3
 8020ad4:	00c0      	lsls	r0, r0, #3
 8020ad6:	b2c0      	uxtb	r0, r0
 8020ad8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8020adc:	9004      	str	r0, [sp, #16]
 8020ade:	2f00      	cmp	r7, #0
 8020ae0:	fb07 100c 	mla	r0, r7, ip, r1
 8020ae4:	9603      	str	r6, [sp, #12]
 8020ae6:	eb02 0e00 	add.w	lr, r2, r0
 8020aea:	f2c0 810a 	blt.w	8020d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020aee:	45b8      	cmp	r8, r7
 8020af0:	f340 8107 	ble.w	8020d02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020af4:	2900      	cmp	r1, #0
 8020af6:	f2c0 8102 	blt.w	8020cfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020afa:	458c      	cmp	ip, r1
 8020afc:	f340 80ff 	ble.w	8020cfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020b00:	5c12      	ldrb	r2, [r2, r0]
 8020b02:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020b06:	1c4a      	adds	r2, r1, #1
 8020b08:	f100 80fe 	bmi.w	8020d08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020b0c:	4594      	cmp	ip, r2
 8020b0e:	f340 80fb 	ble.w	8020d08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020b12:	2d00      	cmp	r5, #0
 8020b14:	f000 80fa 	beq.w	8020d0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020b18:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020b1c:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020b20:	3701      	adds	r7, #1
 8020b22:	f100 80f7 	bmi.w	8020d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b26:	45b8      	cmp	r8, r7
 8020b28:	f340 80f4 	ble.w	8020d14 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020b2c:	2c00      	cmp	r4, #0
 8020b2e:	f000 80f4 	beq.w	8020d1a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8020b32:	2900      	cmp	r1, #0
 8020b34:	eb0e 020c 	add.w	r2, lr, ip
 8020b38:	f2c0 80ea 	blt.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b3c:	458c      	cmp	ip, r1
 8020b3e:	f340 80e7 	ble.w	8020d10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020b42:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020b46:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020b4a:	3101      	adds	r1, #1
 8020b4c:	f100 80e8 	bmi.w	8020d20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b50:	458c      	cmp	ip, r1
 8020b52:	f340 80e5 	ble.w	8020d20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020b56:	2d00      	cmp	r5, #0
 8020b58:	f000 80e4 	beq.w	8020d24 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020b5c:	7852      	ldrb	r2, [r2, #1]
 8020b5e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8020b62:	0e0b      	lsrs	r3, r1, #24
 8020b64:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8020b68:	9300      	str	r3, [sp, #0]
 8020b6a:	b2a4      	uxth	r4, r4
 8020b6c:	b2ab      	uxth	r3, r5
 8020b6e:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8020b72:	fb03 f904 	mul.w	r9, r3, r4
 8020b76:	fb0a f505 	mul.w	r5, sl, r5
 8020b7a:	011b      	lsls	r3, r3, #4
 8020b7c:	eba3 0e09 	sub.w	lr, r3, r9
 8020b80:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8020b84:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8020b88:	0a28      	lsrs	r0, r5, #8
 8020b8a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020b8e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8020b92:	4405      	add	r5, r0
 8020b94:	0a2d      	lsrs	r5, r5, #8
 8020b96:	fb0a f303 	mul.w	r3, sl, r3
 8020b9a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8020b9e:	9005      	str	r0, [sp, #20]
 8020ba0:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8020ba4:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8020ba8:	0a1b      	lsrs	r3, r3, #8
 8020baa:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020bae:	9306      	str	r3, [sp, #24]
 8020bb0:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8020bb4:	fb0b f303 	mul.w	r3, fp, r3
 8020bb8:	0a1d      	lsrs	r5, r3, #8
 8020bba:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020bbe:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020bc2:	fb0b f606 	mul.w	r6, fp, r6
 8020bc6:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8020bca:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8020bce:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020bd2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8020bd6:	fb08 f707 	mul.w	r7, r8, r7
 8020bda:	441d      	add	r5, r3
 8020bdc:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8020be0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020be4:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8020be8:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020bec:	fb08 fc0c 	mul.w	ip, r8, ip
 8020bf0:	0a1b      	lsrs	r3, r3, #8
 8020bf2:	9307      	str	r3, [sp, #28]
 8020bf4:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8020bf8:	0e0b      	lsrs	r3, r1, #24
 8020bfa:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8020bfe:	435f      	muls	r7, r3
 8020c00:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8020c04:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020c08:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020c0c:	4460      	add	r0, ip
 8020c0e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020c12:	b2a4      	uxth	r4, r4
 8020c14:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8020c18:	0a2d      	lsrs	r5, r5, #8
 8020c1a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c1e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c22:	fa1f fe8e 	uxth.w	lr, lr
 8020c26:	4359      	muls	r1, r3
 8020c28:	1b12      	subs	r2, r2, r4
 8020c2a:	9b05      	ldr	r3, [sp, #20]
 8020c2c:	44bc      	add	ip, r7
 8020c2e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020c32:	b292      	uxth	r2, r2
 8020c34:	fb05 f50e 	mul.w	r5, r5, lr
 8020c38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c3c:	fb03 5502 	mla	r5, r3, r2, r5
 8020c40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8020c44:	9b06      	ldr	r3, [sp, #24]
 8020c46:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8020c4a:	0a36      	lsrs	r6, r6, #8
 8020c4c:	0a00      	lsrs	r0, r0, #8
 8020c4e:	fb0c 5509 	mla	r5, ip, r9, r5
 8020c52:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8020c56:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8020c5a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8020c5e:	fb00 5504 	mla	r5, r0, r4, r5
 8020c62:	fb0e f606 	mul.w	r6, lr, r6
 8020c66:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8020c6a:	0a09      	lsrs	r1, r1, #8
 8020c6c:	9b07      	ldr	r3, [sp, #28]
 8020c6e:	fb02 6000 	mla	r0, r2, r0, r6
 8020c72:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8020c76:	fb09 0001 	mla	r0, r9, r1, r0
 8020c7a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020c7e:	fb0e fe0b 	mul.w	lr, lr, fp
 8020c82:	fb04 0003 	mla	r0, r4, r3, r0
 8020c86:	fb02 e20a 	mla	r2, r2, sl, lr
 8020c8a:	9b00      	ldr	r3, [sp, #0]
 8020c8c:	fb04 2408 	mla	r4, r4, r8, r2
 8020c90:	fb09 4903 	mla	r9, r9, r3, r4
 8020c94:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020c98:	9b02      	ldr	r3, [sp, #8]
 8020c9a:	9a04      	ldr	r2, [sp, #16]
 8020c9c:	fa5f f989 	uxtb.w	r9, r9
 8020ca0:	fb03 f109 	mul.w	r1, r3, r9
 8020ca4:	9b03      	ldr	r3, [sp, #12]
 8020ca6:	0a2d      	lsrs	r5, r5, #8
 8020ca8:	0a00      	lsrs	r0, r0, #8
 8020caa:	fb03 f309 	mul.w	r3, r3, r9
 8020cae:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8020cb2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8020cb6:	4305      	orrs	r5, r0
 8020cb8:	fb02 f909 	mul.w	r9, r2, r9
 8020cbc:	1c58      	adds	r0, r3, #1
 8020cbe:	1c4a      	adds	r2, r1, #1
 8020cc0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020cc4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020cc8:	0a2b      	lsrs	r3, r5, #8
 8020cca:	0c2a      	lsrs	r2, r5, #16
 8020ccc:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020cd0:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020cd4:	00db      	lsls	r3, r3, #3
 8020cd6:	0212      	lsls	r2, r2, #8
 8020cd8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8020cdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8020ce0:	4313      	orrs	r3, r2
 8020ce2:	f109 0201 	add.w	r2, r9, #1
 8020ce6:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020cea:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020cee:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020cf2:	431d      	orrs	r5, r3
 8020cf4:	9b01      	ldr	r3, [sp, #4]
 8020cf6:	801d      	strh	r5, [r3, #0]
 8020cf8:	b009      	add	sp, #36	; 0x24
 8020cfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020cfe:	2000      	movs	r0, #0
 8020d00:	e701      	b.n	8020b06 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020d02:	2600      	movs	r6, #0
 8020d04:	4630      	mov	r0, r6
 8020d06:	e70b      	b.n	8020b20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020d08:	2600      	movs	r6, #0
 8020d0a:	e709      	b.n	8020b20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020d0c:	462e      	mov	r6, r5
 8020d0e:	e707      	b.n	8020b20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020d10:	2700      	movs	r7, #0
 8020d12:	e71a      	b.n	8020b4a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020d14:	2100      	movs	r1, #0
 8020d16:	460f      	mov	r7, r1
 8020d18:	e723      	b.n	8020b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d1a:	4621      	mov	r1, r4
 8020d1c:	4627      	mov	r7, r4
 8020d1e:	e720      	b.n	8020b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d20:	2100      	movs	r1, #0
 8020d22:	e71e      	b.n	8020b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020d24:	4629      	mov	r1, r5
 8020d26:	e71c      	b.n	8020b62 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020d28 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d2c:	b09b      	sub	sp, #108	; 0x6c
 8020d2e:	9218      	str	r2, [sp, #96]	; 0x60
 8020d30:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8020d32:	9116      	str	r1, [sp, #88]	; 0x58
 8020d34:	9307      	str	r3, [sp, #28]
 8020d36:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8020d3a:	9019      	str	r0, [sp, #100]	; 0x64
 8020d3c:	6850      	ldr	r0, [r2, #4]
 8020d3e:	6812      	ldr	r2, [r2, #0]
 8020d40:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8020d42:	fb00 1303 	mla	r3, r0, r3, r1
 8020d46:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020d4a:	930a      	str	r3, [sp, #40]	; 0x28
 8020d4c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d4e:	681b      	ldr	r3, [r3, #0]
 8020d50:	930f      	str	r3, [sp, #60]	; 0x3c
 8020d52:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d54:	685e      	ldr	r6, [r3, #4]
 8020d56:	3604      	adds	r6, #4
 8020d58:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8020d5a:	2b00      	cmp	r3, #0
 8020d5c:	dc03      	bgt.n	8020d66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020d5e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8020d60:	2b00      	cmp	r3, #0
 8020d62:	f340 8373 	ble.w	802144c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020d66:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020d68:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020d6c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020d70:	1e48      	subs	r0, r1, #1
 8020d72:	1e57      	subs	r7, r2, #1
 8020d74:	9b07      	ldr	r3, [sp, #28]
 8020d76:	2b00      	cmp	r3, #0
 8020d78:	f340 8190 	ble.w	802109c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020d7c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8020d7e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020d82:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020d86:	d406      	bmi.n	8020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d88:	4584      	cmp	ip, r0
 8020d8a:	da04      	bge.n	8020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d8c:	2b00      	cmp	r3, #0
 8020d8e:	db02      	blt.n	8020d96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020d90:	42bb      	cmp	r3, r7
 8020d92:	f2c0 8184 	blt.w	802109e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020d96:	f11c 0c01 	adds.w	ip, ip, #1
 8020d9a:	f100 8172 	bmi.w	8021082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020d9e:	4561      	cmp	r1, ip
 8020da0:	f2c0 816f 	blt.w	8021082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020da4:	3301      	adds	r3, #1
 8020da6:	f100 816c 	bmi.w	8021082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020daa:	429a      	cmp	r2, r3
 8020dac:	f2c0 8169 	blt.w	8021082 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020db0:	9b07      	ldr	r3, [sp, #28]
 8020db2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8020db4:	9317      	str	r3, [sp, #92]	; 0x5c
 8020db6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8020db8:	2b00      	cmp	r3, #0
 8020dba:	f340 818e 	ble.w	80210da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020dbe:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020dc0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020dc4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8020dc6:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020dca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8020dcc:	141b      	asrs	r3, r3, #16
 8020dce:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020dd2:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020dd6:	f100 81d1 	bmi.w	802117c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dda:	f101 38ff 	add.w	r8, r1, #4294967295
 8020dde:	4543      	cmp	r3, r8
 8020de0:	f280 81cc 	bge.w	802117c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020de4:	f1bc 0f00 	cmp.w	ip, #0
 8020de8:	f2c0 81c8 	blt.w	802117c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020dec:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020df0:	45c4      	cmp	ip, r8
 8020df2:	f280 81c3 	bge.w	802117c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020df6:	b209      	sxth	r1, r1
 8020df8:	fb0c 3301 	mla	r3, ip, r1, r3
 8020dfc:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8020dfe:	eb04 0803 	add.w	r8, r4, r3
 8020e02:	5ce3      	ldrb	r3, [r4, r3]
 8020e04:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020e08:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020e0c:	2a00      	cmp	r2, #0
 8020e0e:	f000 81aa 	beq.w	8021166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020e12:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020e16:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020e1a:	940b      	str	r4, [sp, #44]	; 0x2c
 8020e1c:	0e24      	lsrs	r4, r4, #24
 8020e1e:	9412      	str	r4, [sp, #72]	; 0x48
 8020e20:	b178      	cbz	r0, 8020e42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020e22:	eb08 0c01 	add.w	ip, r8, r1
 8020e26:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020e2a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e2e:	9108      	str	r1, [sp, #32]
 8020e30:	0e09      	lsrs	r1, r1, #24
 8020e32:	9110      	str	r1, [sp, #64]	; 0x40
 8020e34:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020e38:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020e3c:	910c      	str	r1, [sp, #48]	; 0x30
 8020e3e:	0e09      	lsrs	r1, r1, #24
 8020e40:	9113      	str	r1, [sp, #76]	; 0x4c
 8020e42:	b292      	uxth	r2, r2
 8020e44:	b280      	uxth	r0, r0
 8020e46:	fb02 f900 	mul.w	r9, r2, r0
 8020e4a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020e4e:	0112      	lsls	r2, r2, #4
 8020e50:	eba2 0809 	sub.w	r8, r2, r9
 8020e54:	b280      	uxth	r0, r0
 8020e56:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8020e5a:	9912      	ldr	r1, [sp, #72]	; 0x48
 8020e5c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020e5e:	fa1f f888 	uxth.w	r8, r8
 8020e62:	1a12      	subs	r2, r2, r0
 8020e64:	b292      	uxth	r2, r2
 8020e66:	fb08 f101 	mul.w	r1, r8, r1
 8020e6a:	fb02 110e 	mla	r1, r2, lr, r1
 8020e6e:	fb00 1104 	mla	r1, r0, r4, r1
 8020e72:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020e74:	fb09 1104 	mla	r1, r9, r4, r1
 8020e78:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020e7c:	2900      	cmp	r1, #0
 8020e7e:	f000 80f5 	beq.w	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020e82:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8020e86:	d01b      	beq.n	8020ec0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020e88:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8020e8c:	fb0e fa0a 	mul.w	sl, lr, sl
 8020e90:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020e94:	fb0e fe03 	mul.w	lr, lr, r3
 8020e98:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020e9c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020ea0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8020ea4:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8020ea8:	4453      	add	r3, sl
 8020eaa:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020eae:	0a1b      	lsrs	r3, r3, #8
 8020eb0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020eb4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8020eb8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8020ebc:	ea43 030c 	orr.w	r3, r3, ip
 8020ec0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ec2:	2cff      	cmp	r4, #255	; 0xff
 8020ec4:	d021      	beq.n	8020f0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020ec6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ec8:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020ecc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020ece:	fb04 fb0b 	mul.w	fp, r4, fp
 8020ed2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020ed4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020ed8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8020eda:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ede:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ee2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020ee6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020eea:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020eee:	44de      	add	lr, fp
 8020ef0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020ef4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020ef8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020efc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f04:	ea4e 040a 	orr.w	r4, lr, sl
 8020f08:	940b      	str	r4, [sp, #44]	; 0x2c
 8020f0a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f0c:	2cff      	cmp	r4, #255	; 0xff
 8020f0e:	d021      	beq.n	8020f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020f10:	9c08      	ldr	r4, [sp, #32]
 8020f12:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f16:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f18:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f1c:	9c08      	ldr	r4, [sp, #32]
 8020f1e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f22:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8020f24:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f28:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f2c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f30:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f34:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f38:	44de      	add	lr, fp
 8020f3a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f3e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f42:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f4a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f4e:	ea4e 040a 	orr.w	r4, lr, sl
 8020f52:	9408      	str	r4, [sp, #32]
 8020f54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f56:	2cff      	cmp	r4, #255	; 0xff
 8020f58:	d021      	beq.n	8020f9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020f5a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f5c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8020f60:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f62:	fb04 fb0b 	mul.w	fp, r4, fp
 8020f66:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020f68:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8020f6c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8020f6e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020f72:	fb04 fa0a 	mul.w	sl, r4, sl
 8020f76:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f7a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8020f7e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8020f82:	44de      	add	lr, fp
 8020f84:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020f88:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020f8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020f90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8020f94:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8020f98:	ea4e 040a 	orr.w	r4, lr, sl
 8020f9c:	940c      	str	r4, [sp, #48]	; 0x30
 8020f9e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fa0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8020fa4:	9c08      	ldr	r4, [sp, #32]
 8020fa6:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8020faa:	fb08 fc0c 	mul.w	ip, r8, ip
 8020fae:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020fb2:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fb6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8020fb8:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020fbc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8020fc0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8020fc2:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020fc6:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8020fca:	fb08 f80e 	mul.w	r8, r8, lr
 8020fce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8020fd2:	fb02 8303 	mla	r3, r2, r3, r8
 8020fd6:	9a08      	ldr	r2, [sp, #32]
 8020fd8:	f8b7 8000 	ldrh.w	r8, [r7]
 8020fdc:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8020fe0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020fe2:	fb00 330a 	mla	r3, r0, sl, r3
 8020fe6:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8020fea:	fb09 3900 	mla	r9, r9, r0, r3
 8020fee:	43c9      	mvns	r1, r1
 8020ff0:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020ff4:	fa5f fe81 	uxtb.w	lr, r1
 8020ff8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020ffc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021000:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8021004:	fb02 f20e 	mul.w	r2, r2, lr
 8021008:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802100c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8021010:	ea4c 0c09 	orr.w	ip, ip, r9
 8021014:	1c53      	adds	r3, r2, #1
 8021016:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802101a:	ea4f 00e8 	mov.w	r0, r8, asr #3
 802101e:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8021022:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021026:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802102a:	4a63      	ldr	r2, [pc, #396]	; (80211b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 802102c:	fb00 f00e 	mul.w	r0, r0, lr
 8021030:	b2db      	uxtb	r3, r3
 8021032:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8021036:	1c43      	adds	r3, r0, #1
 8021038:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802103c:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8021040:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8021044:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8021048:	b2c9      	uxtb	r1, r1
 802104a:	00db      	lsls	r3, r3, #3
 802104c:	fb01 f10e 	mul.w	r1, r1, lr
 8021050:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021054:	4313      	orrs	r3, r2
 8021056:	1c4a      	adds	r2, r1, #1
 8021058:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802105c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8021060:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8021064:	ea4c 0c03 	orr.w	ip, ip, r3
 8021068:	f8a7 c000 	strh.w	ip, [r7]
 802106c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802106e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021070:	441a      	add	r2, r3
 8021072:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021074:	9225      	str	r2, [sp, #148]	; 0x94
 8021076:	441d      	add	r5, r3
 8021078:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802107a:	3b01      	subs	r3, #1
 802107c:	3702      	adds	r7, #2
 802107e:	9317      	str	r3, [sp, #92]	; 0x5c
 8021080:	e699      	b.n	8020db6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021082:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021084:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8021086:	441c      	add	r4, r3
 8021088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802108a:	9425      	str	r4, [sp, #148]	; 0x94
 802108c:	441d      	add	r5, r3
 802108e:	9b07      	ldr	r3, [sp, #28]
 8021090:	3b01      	subs	r3, #1
 8021092:	9307      	str	r3, [sp, #28]
 8021094:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8021096:	3302      	adds	r3, #2
 8021098:	930a      	str	r3, [sp, #40]	; 0x28
 802109a:	e66b      	b.n	8020d74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802109c:	d024      	beq.n	80210e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802109e:	9b07      	ldr	r3, [sp, #28]
 80210a0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80210a2:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80210a4:	3b01      	subs	r3, #1
 80210a6:	fb00 4003 	mla	r0, r0, r3, r4
 80210aa:	1400      	asrs	r0, r0, #16
 80210ac:	f53f ae80 	bmi.w	8020db0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210b0:	3901      	subs	r1, #1
 80210b2:	4288      	cmp	r0, r1
 80210b4:	f6bf ae7c 	bge.w	8020db0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210b8:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80210ba:	fb01 5303 	mla	r3, r1, r3, r5
 80210be:	141b      	asrs	r3, r3, #16
 80210c0:	f53f ae76 	bmi.w	8020db0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210c4:	3a01      	subs	r2, #1
 80210c6:	4293      	cmp	r3, r2
 80210c8:	f6bf ae72 	bge.w	8020db0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 80210cc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80210d0:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 80210d4:	f1bb 0f00 	cmp.w	fp, #0
 80210d8:	dc70      	bgt.n	80211bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 80210da:	9b07      	ldr	r3, [sp, #28]
 80210dc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80210e0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80210e2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80210e6:	930a      	str	r3, [sp, #40]	; 0x28
 80210e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80210ea:	2b00      	cmp	r3, #0
 80210ec:	f340 81ae 	ble.w	802144c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80210f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80210f4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80210f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80210fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80210fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021102:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021106:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802110a:	eef0 6a62 	vmov.f32	s13, s5
 802110e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021112:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021116:	ee77 2a62 	vsub.f32	s5, s14, s5
 802111a:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 802111e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021122:	eef0 6a43 	vmov.f32	s13, s6
 8021126:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802112a:	ee12 2a90 	vmov	r2, s5
 802112e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021132:	fb92 f3f3 	sdiv	r3, r2, r3
 8021136:	ee13 2a10 	vmov	r2, s6
 802113a:	9327      	str	r3, [sp, #156]	; 0x9c
 802113c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802113e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021142:	9328      	str	r3, [sp, #160]	; 0xa0
 8021144:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8021146:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8021148:	3b01      	subs	r3, #1
 802114a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802114e:	9316      	str	r3, [sp, #88]	; 0x58
 8021150:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021152:	bf08      	it	eq
 8021154:	4613      	moveq	r3, r2
 8021156:	ee16 5a90 	vmov	r5, s13
 802115a:	9307      	str	r3, [sp, #28]
 802115c:	eeb0 3a67 	vmov.f32	s6, s15
 8021160:	eef0 2a47 	vmov.f32	s5, s14
 8021164:	e5f8      	b.n	8020d58 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8021166:	2800      	cmp	r0, #0
 8021168:	f43f ae6b 	beq.w	8020e42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802116c:	f818 1001 	ldrb.w	r1, [r8, r1]
 8021170:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021174:	9108      	str	r1, [sp, #32]
 8021176:	0e09      	lsrs	r1, r1, #24
 8021178:	9110      	str	r1, [sp, #64]	; 0x40
 802117a:	e662      	b.n	8020e42 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802117c:	f113 0801 	adds.w	r8, r3, #1
 8021180:	f53f af74 	bmi.w	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021184:	4541      	cmp	r1, r8
 8021186:	f6ff af71 	blt.w	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802118a:	f11c 0801 	adds.w	r8, ip, #1
 802118e:	f53f af6d 	bmi.w	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021192:	45c6      	cmp	lr, r8
 8021194:	f6ff af6a 	blt.w	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8021198:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802119c:	b209      	sxth	r1, r1
 802119e:	fa0f f38e 	sxth.w	r3, lr
 80211a2:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80211a6:	9301      	str	r3, [sp, #4]
 80211a8:	9100      	str	r1, [sp, #0]
 80211aa:	4633      	mov	r3, r6
 80211ac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80211ae:	9819      	ldr	r0, [sp, #100]	; 0x64
 80211b0:	4639      	mov	r1, r7
 80211b2:	f7ff fc7a 	bl	8020aaa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80211b6:	e759      	b.n	802106c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 80211b8:	fffff800 	.word	0xfffff800
 80211bc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80211be:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80211c0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80211c4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80211c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80211ca:	1427      	asrs	r7, r4, #16
 80211cc:	142b      	asrs	r3, r5, #16
 80211ce:	fb01 7303 	mla	r3, r1, r3, r7
 80211d2:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80211d4:	18e7      	adds	r7, r4, r3
 80211d6:	5ce3      	ldrb	r3, [r4, r3]
 80211d8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80211dc:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80211e0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80211e4:	2a00      	cmp	r2, #0
 80211e6:	f000 8127 	beq.w	8021438 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 80211ea:	f897 e001 	ldrb.w	lr, [r7, #1]
 80211ee:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80211f2:	940d      	str	r4, [sp, #52]	; 0x34
 80211f4:	0e24      	lsrs	r4, r4, #24
 80211f6:	9414      	str	r4, [sp, #80]	; 0x50
 80211f8:	b170      	cbz	r0, 8021218 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211fa:	eb07 0e01 	add.w	lr, r7, r1
 80211fe:	5c79      	ldrb	r1, [r7, r1]
 8021200:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021204:	9109      	str	r1, [sp, #36]	; 0x24
 8021206:	0e09      	lsrs	r1, r1, #24
 8021208:	9111      	str	r1, [sp, #68]	; 0x44
 802120a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802120e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021212:	910e      	str	r1, [sp, #56]	; 0x38
 8021214:	0e09      	lsrs	r1, r1, #24
 8021216:	9115      	str	r1, [sp, #84]	; 0x54
 8021218:	b292      	uxth	r2, r2
 802121a:	b280      	uxth	r0, r0
 802121c:	fb02 f800 	mul.w	r8, r2, r0
 8021220:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8021224:	0112      	lsls	r2, r2, #4
 8021226:	eba2 0e08 	sub.w	lr, r2, r8
 802122a:	b280      	uxth	r0, r0
 802122c:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8021230:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021232:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8021234:	fa1f fe8e 	uxth.w	lr, lr
 8021238:	1a09      	subs	r1, r1, r0
 802123a:	b289      	uxth	r1, r1
 802123c:	fb0e f202 	mul.w	r2, lr, r2
 8021240:	fb01 220c 	mla	r2, r1, ip, r2
 8021244:	fb00 2204 	mla	r2, r0, r4, r2
 8021248:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802124a:	fb08 2204 	mla	r2, r8, r4, r2
 802124e:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8021252:	2a00      	cmp	r2, #0
 8021254:	f000 80e5 	beq.w	8021422 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8021258:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802125c:	d019      	beq.n	8021292 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 802125e:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8021262:	fb0c fa0a 	mul.w	sl, ip, sl
 8021266:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802126a:	fb0c fc03 	mul.w	ip, ip, r3
 802126e:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8021272:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8021276:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802127a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802127e:	4453      	add	r3, sl
 8021280:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8021284:	0a1b      	lsrs	r3, r3, #8
 8021286:	0a3f      	lsrs	r7, r7, #8
 8021288:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802128c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8021290:	433b      	orrs	r3, r7
 8021292:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8021294:	2cff      	cmp	r4, #255	; 0xff
 8021296:	d020      	beq.n	80212da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8021298:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802129a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802129e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80212a0:	4367      	muls	r7, r4
 80212a2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80212a4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212a8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80212aa:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212ae:	fb04 fa0a 	mul.w	sl, r4, sl
 80212b2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212ba:	44bc      	add	ip, r7
 80212bc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80212c0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80212c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80212c8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80212cc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80212d0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80212d4:	ea4c 040a 	orr.w	r4, ip, sl
 80212d8:	940d      	str	r4, [sp, #52]	; 0x34
 80212da:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212dc:	2cff      	cmp	r4, #255	; 0xff
 80212de:	d020      	beq.n	8021322 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 80212e0:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212e2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80212e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212e8:	4367      	muls	r7, r4
 80212ea:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80212ec:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80212f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80212f2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80212f6:	fb04 fa0a 	mul.w	sl, r4, sl
 80212fa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80212fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021302:	44bc      	add	ip, r7
 8021304:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021308:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802130c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021310:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021314:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021318:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802131c:	ea4c 040a 	orr.w	r4, ip, sl
 8021320:	9409      	str	r4, [sp, #36]	; 0x24
 8021322:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021324:	2cff      	cmp	r4, #255	; 0xff
 8021326:	d020      	beq.n	802136a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8021328:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802132a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802132e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8021330:	4367      	muls	r7, r4
 8021332:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021334:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8021338:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802133a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802133e:	fb04 fa0a 	mul.w	sl, r4, sl
 8021342:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8021346:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802134a:	44bc      	add	ip, r7
 802134c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8021350:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021358:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802135c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8021360:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8021364:	ea4c 040a 	orr.w	r4, ip, sl
 8021368:	940e      	str	r4, [sp, #56]	; 0x38
 802136a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802136c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8021370:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8021372:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8021376:	fb0e f707 	mul.w	r7, lr, r7
 802137a:	fb01 770c 	mla	r7, r1, ip, r7
 802137e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8021382:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8021384:	fb00 770c 	mla	r7, r0, ip, r7
 8021388:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802138c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802138e:	fb08 770c 	mla	r7, r8, ip, r7
 8021392:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8021396:	fb0e fe0c 	mul.w	lr, lr, ip
 802139a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802139e:	fb01 e303 	mla	r3, r1, r3, lr
 80213a2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80213a4:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80213a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80213aa:	fb00 330a 	mla	r3, r0, sl, r3
 80213ae:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80213b2:	fb08 3c0c 	mla	ip, r8, ip, r3
 80213b6:	f8b9 3000 	ldrh.w	r3, [r9]
 80213ba:	43d2      	mvns	r2, r2
 80213bc:	1218      	asrs	r0, r3, #8
 80213be:	b2d2      	uxtb	r2, r2
 80213c0:	10d9      	asrs	r1, r3, #3
 80213c2:	0a3f      	lsrs	r7, r7, #8
 80213c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80213c8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80213cc:	00db      	lsls	r3, r3, #3
 80213ce:	4350      	muls	r0, r2
 80213d0:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80213d4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80213d8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80213dc:	b2db      	uxtb	r3, r3
 80213de:	ea47 070c 	orr.w	r7, r7, ip
 80213e2:	4351      	muls	r1, r2
 80213e4:	4353      	muls	r3, r2
 80213e6:	1c42      	adds	r2, r0, #1
 80213e8:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213ec:	0c3a      	lsrs	r2, r7, #16
 80213ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80213f2:	4a18      	ldr	r2, [pc, #96]	; (8021454 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 80213f4:	b2c0      	uxtb	r0, r0
 80213f6:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 80213fa:	1c4a      	adds	r2, r1, #1
 80213fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021400:	0a3a      	lsrs	r2, r7, #8
 8021402:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021406:	00c9      	lsls	r1, r1, #3
 8021408:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802140c:	4301      	orrs	r1, r0
 802140e:	1c58      	adds	r0, r3, #1
 8021410:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021414:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021418:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 802141c:	4308      	orrs	r0, r1
 802141e:	f8a9 0000 	strh.w	r0, [r9]
 8021422:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8021424:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021426:	441a      	add	r2, r3
 8021428:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802142a:	9225      	str	r2, [sp, #148]	; 0x94
 802142c:	f109 0902 	add.w	r9, r9, #2
 8021430:	441d      	add	r5, r3
 8021432:	f10b 3bff 	add.w	fp, fp, #4294967295
 8021436:	e64d      	b.n	80210d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8021438:	2800      	cmp	r0, #0
 802143a:	f43f aeed 	beq.w	8021218 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802143e:	5c79      	ldrb	r1, [r7, r1]
 8021440:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8021444:	9109      	str	r1, [sp, #36]	; 0x24
 8021446:	0e09      	lsrs	r1, r1, #24
 8021448:	9111      	str	r1, [sp, #68]	; 0x44
 802144a:	e6e5      	b.n	8021218 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802144c:	b01b      	add	sp, #108	; 0x6c
 802144e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021452:	bf00      	nop
 8021454:	fffff800 	.word	0xfffff800

08021458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8021458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802145c:	b085      	sub	sp, #20
 802145e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021462:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021466:	9103      	str	r1, [sp, #12]
 8021468:	fb00 7406 	mla	r4, r0, r6, r7
 802146c:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8021470:	2800      	cmp	r0, #0
 8021472:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021476:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802147a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802147e:	9501      	str	r5, [sp, #4]
 8021480:	eb03 0904 	add.w	r9, r3, r4
 8021484:	f2c0 8150 	blt.w	8021728 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021488:	4583      	cmp	fp, r0
 802148a:	f340 814d 	ble.w	8021728 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802148e:	2f00      	cmp	r7, #0
 8021490:	f2c0 8146 	blt.w	8021720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021494:	42be      	cmp	r6, r7
 8021496:	f340 8143 	ble.w	8021720 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802149a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802149e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 80214a2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80214a6:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 80214aa:	4355      	muls	r5, r2
 80214ac:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214b0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 80214b4:	fb0c f203 	mul.w	r2, ip, r3
 80214b8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80214bc:	f605 0501 	addw	r5, r5, #2049	; 0x801
 80214c0:	441d      	add	r5, r3
 80214c2:	f102 0320 	add.w	r3, r2, #32
 80214c6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80214ca:	0a1b      	lsrs	r3, r3, #8
 80214cc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80214d0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80214d4:	431c      	orrs	r4, r3
 80214d6:	1c7b      	adds	r3, r7, #1
 80214d8:	f100 812b 	bmi.w	8021732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214dc:	429e      	cmp	r6, r3
 80214de:	f340 8128 	ble.w	8021732 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 80214e2:	2900      	cmp	r1, #0
 80214e4:	f000 8128 	beq.w	8021738 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 80214e8:	9a01      	ldr	r2, [sp, #4]
 80214ea:	f899 3001 	ldrb.w	r3, [r9, #1]
 80214ee:	8855      	ldrh	r5, [r2, #2]
 80214f0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 80214f4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 80214f8:	fb08 f802 	mul.w	r8, r8, r2
 80214fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021500:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021504:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021508:	435d      	muls	r5, r3
 802150a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802150e:	44d0      	add	r8, sl
 8021510:	f105 0a20 	add.w	sl, r5, #32
 8021514:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021518:	0a2d      	lsrs	r5, r5, #8
 802151a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802151e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021522:	432a      	orrs	r2, r5
 8021524:	3001      	adds	r0, #1
 8021526:	f100 810d 	bmi.w	8021744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802152a:	4583      	cmp	fp, r0
 802152c:	f340 810a 	ble.w	8021744 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8021530:	f1be 0f00 	cmp.w	lr, #0
 8021534:	f000 810b 	beq.w	802174e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8021538:	2f00      	cmp	r7, #0
 802153a:	f2c0 8100 	blt.w	802173e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 802153e:	42be      	cmp	r6, r7
 8021540:	f340 80fd 	ble.w	802173e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8021544:	9801      	ldr	r0, [sp, #4]
 8021546:	f819 5006 	ldrb.w	r5, [r9, r6]
 802154a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802154e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021552:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8021556:	fb0a fa00 	mul.w	sl, sl, r0
 802155a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802155e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8021562:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021566:	fb05 f808 	mul.w	r8, r5, r8
 802156a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802156e:	4482      	add	sl, r0
 8021570:	f108 0020 	add.w	r0, r8, #32
 8021574:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021578:	0a00      	lsrs	r0, r0, #8
 802157a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802157e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021582:	ea4b 0b00 	orr.w	fp, fp, r0
 8021586:	3701      	adds	r7, #1
 8021588:	f100 80e6 	bmi.w	8021758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802158c:	42be      	cmp	r6, r7
 802158e:	f340 80e3 	ble.w	8021758 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021592:	2900      	cmp	r1, #0
 8021594:	f000 80e3 	beq.w	802175e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8021598:	3601      	adds	r6, #1
 802159a:	9801      	ldr	r0, [sp, #4]
 802159c:	f819 7006 	ldrb.w	r7, [r9, r6]
 80215a0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80215a4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80215a8:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 80215ac:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215b0:	fb09 f906 	mul.w	r9, r9, r6
 80215b4:	fb07 f800 	mul.w	r8, r7, r0
 80215b8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80215bc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80215c0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80215c4:	44d1      	add	r9, sl
 80215c6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80215ca:	f108 0020 	add.w	r0, r8, #32
 80215ce:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80215d2:	0a00      	lsrs	r0, r0, #8
 80215d4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80215d8:	4330      	orrs	r0, r6
 80215da:	b28e      	uxth	r6, r1
 80215dc:	fa1f f98e 	uxth.w	r9, lr
 80215e0:	fb06 f809 	mul.w	r8, r6, r9
 80215e4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80215e8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80215ec:	0136      	lsls	r6, r6, #4
 80215ee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80215f2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80215f6:	9601      	str	r6, [sp, #4]
 80215f8:	ea4a 0404 	orr.w	r4, sl, r4
 80215fc:	fa1f f689 	uxth.w	r6, r9
 8021600:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021604:	fb11 f90e 	smulbb	r9, r1, lr
 8021608:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802160c:	9602      	str	r6, [sp, #8]
 802160e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021612:	4626      	mov	r6, r4
 8021614:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021618:	f1ce 0410 	rsb	r4, lr, #16
 802161c:	1a64      	subs	r4, r4, r1
 802161e:	ea4a 0202 	orr.w	r2, sl, r2
 8021622:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021626:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802162a:	434a      	muls	r2, r1
 802162c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021630:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021634:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021638:	fb04 2406 	mla	r4, r4, r6, r2
 802163c:	ea4a 0000 	orr.w	r0, sl, r0
 8021640:	fb09 4200 	mla	r2, r9, r0, r4
 8021644:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021648:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802164c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8021650:	ea44 0b0b 	orr.w	fp, r4, fp
 8021654:	9c01      	ldr	r4, [sp, #4]
 8021656:	9e02      	ldr	r6, [sp, #8]
 8021658:	9903      	ldr	r1, [sp, #12]
 802165a:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 802165e:	1ba4      	subs	r4, r4, r6
 8021660:	9e01      	ldr	r6, [sp, #4]
 8021662:	8808      	ldrh	r0, [r1, #0]
 8021664:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 8021668:	eba6 0608 	sub.w	r6, r6, r8
 802166c:	b2b6      	uxth	r6, r6
 802166e:	b2a4      	uxth	r4, r4
 8021670:	4373      	muls	r3, r6
 8021672:	fb0c 3304 	mla	r3, ip, r4, r3
 8021676:	9c02      	ldr	r4, [sp, #8]
 8021678:	fb04 3505 	mla	r5, r4, r5, r3
 802167c:	fb08 5707 	mla	r7, r8, r7, r5
 8021680:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021684:	b289      	uxth	r1, r1
 8021686:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802168a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802168e:	434f      	muls	r7, r1
 8021690:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021694:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021698:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802169c:	1c7b      	adds	r3, r7, #1
 802169e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80216a2:	ea42 0e0e 	orr.w	lr, r2, lr
 80216a6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80216aa:	fa1f f28e 	uxth.w	r2, lr
 80216ae:	1203      	asrs	r3, r0, #8
 80216b0:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 80216b4:	b2ff      	uxtb	r7, r7
 80216b6:	1215      	asrs	r5, r2, #8
 80216b8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 80216bc:	fb13 f307 	smulbb	r3, r3, r7
 80216c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80216c4:	fb05 3501 	mla	r5, r5, r1, r3
 80216c8:	10c3      	asrs	r3, r0, #3
 80216ca:	10d4      	asrs	r4, r2, #3
 80216cc:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80216d0:	fb13 f307 	smulbb	r3, r3, r7
 80216d4:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80216d8:	fb04 3401 	mla	r4, r4, r1, r3
 80216dc:	00c3      	lsls	r3, r0, #3
 80216de:	00d2      	lsls	r2, r2, #3
 80216e0:	b2db      	uxtb	r3, r3
 80216e2:	fb13 f307 	smulbb	r3, r3, r7
 80216e6:	b2d2      	uxtb	r2, r2
 80216e8:	fb02 3101 	mla	r1, r2, r1, r3
 80216ec:	b2ad      	uxth	r5, r5
 80216ee:	b289      	uxth	r1, r1
 80216f0:	b2a4      	uxth	r4, r4
 80216f2:	1c6b      	adds	r3, r5, #1
 80216f4:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80216f8:	1c62      	adds	r2, r4, #1
 80216fa:	1c4b      	adds	r3, r1, #1
 80216fc:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021700:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021704:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021708:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802170c:	0964      	lsrs	r4, r4, #5
 802170e:	432b      	orrs	r3, r5
 8021710:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8021714:	9a03      	ldr	r2, [sp, #12]
 8021716:	4323      	orrs	r3, r4
 8021718:	8013      	strh	r3, [r2, #0]
 802171a:	b005      	add	sp, #20
 802171c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021720:	f04f 0c00 	mov.w	ip, #0
 8021724:	4664      	mov	r4, ip
 8021726:	e6d6      	b.n	80214d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8021728:	2300      	movs	r3, #0
 802172a:	469c      	mov	ip, r3
 802172c:	461a      	mov	r2, r3
 802172e:	461c      	mov	r4, r3
 8021730:	e6f8      	b.n	8021524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021732:	2300      	movs	r3, #0
 8021734:	461a      	mov	r2, r3
 8021736:	e6f5      	b.n	8021524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8021738:	460b      	mov	r3, r1
 802173a:	460a      	mov	r2, r1
 802173c:	e6f2      	b.n	8021524 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 802173e:	2500      	movs	r5, #0
 8021740:	46ab      	mov	fp, r5
 8021742:	e720      	b.n	8021586 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8021744:	2700      	movs	r7, #0
 8021746:	463d      	mov	r5, r7
 8021748:	4638      	mov	r0, r7
 802174a:	46bb      	mov	fp, r7
 802174c:	e745      	b.n	80215da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802174e:	4677      	mov	r7, lr
 8021750:	4675      	mov	r5, lr
 8021752:	4670      	mov	r0, lr
 8021754:	46f3      	mov	fp, lr
 8021756:	e740      	b.n	80215da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8021758:	2700      	movs	r7, #0
 802175a:	4638      	mov	r0, r7
 802175c:	e73d      	b.n	80215da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 802175e:	460f      	mov	r7, r1
 8021760:	4608      	mov	r0, r1
 8021762:	e73a      	b.n	80215da <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08021764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021768:	b097      	sub	sp, #92	; 0x5c
 802176a:	9214      	str	r2, [sp, #80]	; 0x50
 802176c:	9308      	str	r3, [sp, #32]
 802176e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8021770:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8021774:	9312      	str	r3, [sp, #72]	; 0x48
 8021776:	9111      	str	r1, [sp, #68]	; 0x44
 8021778:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802177c:	9015      	str	r0, [sp, #84]	; 0x54
 802177e:	6850      	ldr	r0, [r2, #4]
 8021780:	6812      	ldr	r2, [r2, #0]
 8021782:	fb00 1303 	mla	r3, r0, r3, r1
 8021786:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802178a:	9309      	str	r3, [sp, #36]	; 0x24
 802178c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802178e:	681b      	ldr	r3, [r3, #0]
 8021790:	930b      	str	r3, [sp, #44]	; 0x2c
 8021792:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021794:	685b      	ldr	r3, [r3, #4]
 8021796:	930c      	str	r3, [sp, #48]	; 0x30
 8021798:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802179c:	930a      	str	r3, [sp, #40]	; 0x28
 802179e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80217a0:	2b00      	cmp	r3, #0
 80217a2:	dc03      	bgt.n	80217ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80217a4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80217a6:	2b00      	cmp	r3, #0
 80217a8:	f340 83cb 	ble.w	8021f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80217ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80217ae:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80217b2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80217b6:	1e48      	subs	r0, r1, #1
 80217b8:	1e55      	subs	r5, r2, #1
 80217ba:	9b08      	ldr	r3, [sp, #32]
 80217bc:	2b00      	cmp	r3, #0
 80217be:	f340 81a3 	ble.w	8021b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 80217c2:	9e21      	ldr	r6, [sp, #132]	; 0x84
 80217c4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80217c6:	1436      	asrs	r6, r6, #16
 80217c8:	ea4f 4323 	mov.w	r3, r3, asr #16
 80217cc:	d406      	bmi.n	80217dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217ce:	4286      	cmp	r6, r0
 80217d0:	da04      	bge.n	80217dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217d2:	2b00      	cmp	r3, #0
 80217d4:	db02      	blt.n	80217dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80217d6:	42ab      	cmp	r3, r5
 80217d8:	f2c0 8197 	blt.w	8021b0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80217dc:	3601      	adds	r6, #1
 80217de:	f100 8184 	bmi.w	8021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217e2:	42b1      	cmp	r1, r6
 80217e4:	f2c0 8181 	blt.w	8021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217e8:	3301      	adds	r3, #1
 80217ea:	f100 817e 	bmi.w	8021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217ee:	429a      	cmp	r2, r3
 80217f0:	f2c0 817b 	blt.w	8021aea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80217f4:	9b08      	ldr	r3, [sp, #32]
 80217f6:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80217f8:	9313      	str	r3, [sp, #76]	; 0x4c
 80217fa:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80217fe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021800:	2b00      	cmp	r3, #0
 8021802:	f340 81a4 	ble.w	8021b4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8021806:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021808:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802180a:	1418      	asrs	r0, r3, #16
 802180c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802180e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021812:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021814:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021818:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802181a:	142d      	asrs	r5, r5, #16
 802181c:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021820:	f100 81f8 	bmi.w	8021c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021824:	f102 3eff 	add.w	lr, r2, #4294967295
 8021828:	4575      	cmp	r5, lr
 802182a:	f280 81f3 	bge.w	8021c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802182e:	2800      	cmp	r0, #0
 8021830:	f2c0 81f0 	blt.w	8021c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021834:	f103 3eff 	add.w	lr, r3, #4294967295
 8021838:	4570      	cmp	r0, lr
 802183a:	f280 81eb 	bge.w	8021c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802183e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021840:	b212      	sxth	r2, r2
 8021842:	fb00 5002 	mla	r0, r0, r2, r5
 8021846:	fa1f fe81 	uxth.w	lr, r1
 802184a:	eb03 0a00 	add.w	sl, r3, r0
 802184e:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021852:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021856:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802185a:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802185e:	b29b      	uxth	r3, r3
 8021860:	f1bc 0f00 	cmp.w	ip, #0
 8021864:	f000 81b9 	beq.w	8021bda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8021868:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802186c:	940d      	str	r4, [sp, #52]	; 0x34
 802186e:	eb0a 0b02 	add.w	fp, sl, r2
 8021872:	fa1f fa8c 	uxth.w	sl, ip
 8021876:	fb0a fe0e 	mul.w	lr, sl, lr
 802187a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802187e:	fa1f fa8a 	uxth.w	sl, sl
 8021882:	eba5 050e 	sub.w	r5, r5, lr
 8021886:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802188a:	940e      	str	r4, [sp, #56]	; 0x38
 802188c:	eba3 030a 	sub.w	r3, r3, sl
 8021890:	b2ad      	uxth	r5, r5
 8021892:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021894:	b29b      	uxth	r3, r3
 8021896:	fb08 f505 	mul.w	r5, r8, r5
 802189a:	fb09 5303 	mla	r3, r9, r3, r5
 802189e:	fb0a 3304 	mla	r3, sl, r4, r3
 80218a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80218a4:	fb0e 3304 	mla	r3, lr, r4, r3
 80218a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80218ac:	2b00      	cmp	r3, #0
 80218ae:	f000 810f 	beq.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80218b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80218b4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80218b8:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80218bc:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80218c0:	f000 8190 	beq.w	8021be4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 80218c4:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80218c8:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80218cc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80218d0:	fb09 f000 	mul.w	r0, r9, r0
 80218d4:	fb0a fe0e 	mul.w	lr, sl, lr
 80218d8:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80218dc:	f100 0b20 	add.w	fp, r0, #32
 80218e0:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80218e4:	44ce      	add	lr, r9
 80218e6:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80218ea:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80218ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80218f2:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80218f6:	ea4e 0909 	orr.w	r9, lr, r9
 80218fa:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80218fe:	8868      	ldrh	r0, [r5, #2]
 8021900:	d019      	beq.n	8021936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021902:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8021906:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802190a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802190e:	fb08 f800 	mul.w	r8, r8, r0
 8021912:	fb0a fe0e 	mul.w	lr, sl, lr
 8021916:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802191a:	f108 0b20 	add.w	fp, r8, #32
 802191e:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8021922:	4486      	add	lr, r0
 8021924:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021928:	0a00      	lsrs	r0, r0, #8
 802192a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802192e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021932:	ea4e 0000 	orr.w	r0, lr, r0
 8021936:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802193a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802193e:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8021942:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021946:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802194a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802194e:	ea4e 0909 	orr.w	r9, lr, r9
 8021952:	ea4a 0000 	orr.w	r0, sl, r0
 8021956:	f1bc 0f00 	cmp.w	ip, #0
 802195a:	f000 8145 	beq.w	8021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 802195e:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8021962:	3a01      	subs	r2, #1
 8021964:	0052      	lsls	r2, r2, #1
 8021966:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8021968:	3202      	adds	r2, #2
 802196a:	2cff      	cmp	r4, #255	; 0xff
 802196c:	eb05 0e02 	add.w	lr, r5, r2
 8021970:	5aaa      	ldrh	r2, [r5, r2]
 8021972:	d018      	beq.n	80219a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8021974:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8021978:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802197c:	fb04 fa02 	mul.w	sl, r4, r2
 8021980:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021984:	fb08 f805 	mul.w	r8, r8, r5
 8021988:	f10a 0520 	add.w	r5, sl, #32
 802198c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021990:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021994:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021998:	4442      	add	r2, r8
 802199a:	0a2d      	lsrs	r5, r5, #8
 802199c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80219a0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219a4:	432a      	orrs	r2, r5
 80219a6:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80219a8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80219ac:	2cff      	cmp	r4, #255	; 0xff
 80219ae:	d01a      	beq.n	80219e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80219b0:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 80219b4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80219b8:	fb04 fa05 	mul.w	sl, r4, r5
 80219bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80219c0:	fb08 f80e 	mul.w	r8, r8, lr
 80219c4:	f10a 0e20 	add.w	lr, sl, #32
 80219c8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 80219cc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 80219d0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80219d4:	4445      	add	r5, r8
 80219d6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80219da:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80219de:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80219e2:	ea45 050e 	orr.w	r5, r5, lr
 80219e6:	fb1c fe01 	smulbb	lr, ip, r1
 80219ea:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80219ee:	f1cc 0810 	rsb	r8, ip, #16
 80219f2:	eba8 0801 	sub.w	r8, r8, r1
 80219f6:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80219fa:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80219fe:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021a02:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021a06:	4341      	muls	r1, r0
 8021a08:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021a0c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021a10:	ea4a 0202 	orr.w	r2, sl, r2
 8021a14:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021a18:	fb09 1108 	mla	r1, r9, r8, r1
 8021a1c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021a20:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8021a24:	fb0c 1102 	mla	r1, ip, r2, r1
 8021a28:	ea4b 0505 	orr.w	r5, fp, r5
 8021a2c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021a30:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021a34:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021a38:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021a3c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8021a40:	ea42 0e0e 	orr.w	lr, r2, lr
 8021a44:	fa1f f28e 	uxth.w	r2, lr
 8021a48:	2bff      	cmp	r3, #255	; 0xff
 8021a4a:	d103      	bne.n	8021a54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8021a4c:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021a4e:	29ff      	cmp	r1, #255	; 0xff
 8021a50:	f000 80de 	beq.w	8021c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 8021a54:	990a      	ldr	r1, [sp, #40]	; 0x28
 8021a56:	8838      	ldrh	r0, [r7, #0]
 8021a58:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021a5a:	434b      	muls	r3, r1
 8021a5c:	f103 0c01 	add.w	ip, r3, #1
 8021a60:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 8021a64:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021a68:	fa5f fc83 	uxtb.w	ip, r3
 8021a6c:	1203      	asrs	r3, r0, #8
 8021a6e:	1215      	asrs	r5, r2, #8
 8021a70:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8021a74:	fb13 f30c 	smulbb	r3, r3, ip
 8021a78:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021a7c:	fb05 3501 	mla	r5, r5, r1, r3
 8021a80:	10c3      	asrs	r3, r0, #3
 8021a82:	10d1      	asrs	r1, r2, #3
 8021a84:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8021a88:	fb13 f30c 	smulbb	r3, r3, ip
 8021a8c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8021a90:	fb01 3104 	mla	r1, r1, r4, r3
 8021a94:	00c3      	lsls	r3, r0, #3
 8021a96:	00d2      	lsls	r2, r2, #3
 8021a98:	b2db      	uxtb	r3, r3
 8021a9a:	b2d2      	uxtb	r2, r2
 8021a9c:	fb13 f30c 	smulbb	r3, r3, ip
 8021aa0:	b2ad      	uxth	r5, r5
 8021aa2:	fb02 3304 	mla	r3, r2, r4, r3
 8021aa6:	b29a      	uxth	r2, r3
 8021aa8:	1c6b      	adds	r3, r5, #1
 8021aaa:	b289      	uxth	r1, r1
 8021aac:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ab0:	1c53      	adds	r3, r2, #1
 8021ab2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021ab6:	1c4a      	adds	r2, r1, #1
 8021ab8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021abc:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021ac0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021ac4:	0949      	lsrs	r1, r1, #5
 8021ac6:	432b      	orrs	r3, r5
 8021ac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021acc:	430b      	orrs	r3, r1
 8021ace:	803b      	strh	r3, [r7, #0]
 8021ad0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ad2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ad4:	4413      	add	r3, r2
 8021ad6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ad8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021ada:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021adc:	441a      	add	r2, r3
 8021ade:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021ae0:	9222      	str	r2, [sp, #136]	; 0x88
 8021ae2:	3b01      	subs	r3, #1
 8021ae4:	3702      	adds	r7, #2
 8021ae6:	9313      	str	r3, [sp, #76]	; 0x4c
 8021ae8:	e689      	b.n	80217fe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8021aea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021aec:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8021aee:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8021af0:	4433      	add	r3, r6
 8021af2:	9321      	str	r3, [sp, #132]	; 0x84
 8021af4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021af6:	441c      	add	r4, r3
 8021af8:	9b08      	ldr	r3, [sp, #32]
 8021afa:	9422      	str	r4, [sp, #136]	; 0x88
 8021afc:	3b01      	subs	r3, #1
 8021afe:	9308      	str	r3, [sp, #32]
 8021b00:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b02:	3302      	adds	r3, #2
 8021b04:	9309      	str	r3, [sp, #36]	; 0x24
 8021b06:	e658      	b.n	80217ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021b08:	d028      	beq.n	8021b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021b0a:	9b08      	ldr	r3, [sp, #32]
 8021b0c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8021b0e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8021b10:	3b01      	subs	r3, #1
 8021b12:	fb00 5003 	mla	r0, r0, r3, r5
 8021b16:	1400      	asrs	r0, r0, #16
 8021b18:	f53f ae6c 	bmi.w	80217f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b1c:	3901      	subs	r1, #1
 8021b1e:	4288      	cmp	r0, r1
 8021b20:	f6bf ae68 	bge.w	80217f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b24:	9924      	ldr	r1, [sp, #144]	; 0x90
 8021b26:	9822      	ldr	r0, [sp, #136]	; 0x88
 8021b28:	fb01 0303 	mla	r3, r1, r3, r0
 8021b2c:	141b      	asrs	r3, r3, #16
 8021b2e:	f53f ae61 	bmi.w	80217f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b32:	3a01      	subs	r2, #1
 8021b34:	4293      	cmp	r3, r2
 8021b36:	f6bf ae5d 	bge.w	80217f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021b3a:	9b08      	ldr	r3, [sp, #32]
 8021b3c:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8021b40:	9313      	str	r3, [sp, #76]	; 0x4c
 8021b42:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8021b46:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021b48:	2b00      	cmp	r3, #0
 8021b4a:	f300 8082 	bgt.w	8021c52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8021b4e:	9b08      	ldr	r3, [sp, #32]
 8021b50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021b54:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021b56:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021b5a:	9309      	str	r3, [sp, #36]	; 0x24
 8021b5c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021b5e:	2b00      	cmp	r3, #0
 8021b60:	f340 81ef 	ble.w	8021f42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021b64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021b68:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8021b6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021b70:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021b72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021b76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021b7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021b7e:	eef0 6a62 	vmov.f32	s13, s5
 8021b82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021b86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021b8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021b8e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8021b92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021b96:	eef0 6a43 	vmov.f32	s13, s6
 8021b9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021b9e:	ee12 2a90 	vmov	r2, s5
 8021ba2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021ba6:	fb92 f3f3 	sdiv	r3, r2, r3
 8021baa:	ee13 2a10 	vmov	r2, s6
 8021bae:	9323      	str	r3, [sp, #140]	; 0x8c
 8021bb0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8021bb6:	9324      	str	r3, [sp, #144]	; 0x90
 8021bb8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8021bba:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8021bbc:	3b01      	subs	r3, #1
 8021bbe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021bc2:	9311      	str	r3, [sp, #68]	; 0x44
 8021bc4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8021bc6:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8021bca:	bf08      	it	eq
 8021bcc:	4613      	moveq	r3, r2
 8021bce:	9308      	str	r3, [sp, #32]
 8021bd0:	eeb0 3a67 	vmov.f32	s6, s15
 8021bd4:	eef0 2a47 	vmov.f32	s5, s14
 8021bd8:	e5e1      	b.n	802179e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8021bda:	fb08 f505 	mul.w	r5, r8, r5
 8021bde:	fb09 5303 	mla	r3, r9, r3, r5
 8021be2:	e661      	b.n	80218a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021be4:	4681      	mov	r9, r0
 8021be6:	e688      	b.n	80218fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021be8:	f1c1 0210 	rsb	r2, r1, #16
 8021bec:	4341      	muls	r1, r0
 8021bee:	fb09 1902 	mla	r9, r9, r2, r1
 8021bf2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021bf6:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021bfa:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021bfe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8021c02:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021c06:	ea42 0909 	orr.w	r9, r2, r9
 8021c0a:	fa1f f289 	uxth.w	r2, r9
 8021c0e:	e71b      	b.n	8021a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021c10:	803a      	strh	r2, [r7, #0]
 8021c12:	e75d      	b.n	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c14:	f115 0e01 	adds.w	lr, r5, #1
 8021c18:	f53f af5a 	bmi.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c1c:	4572      	cmp	r2, lr
 8021c1e:	f6ff af57 	blt.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c22:	f110 0e01 	adds.w	lr, r0, #1
 8021c26:	f53f af53 	bmi.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c2a:	4573      	cmp	r3, lr
 8021c2c:	f6ff af50 	blt.w	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8021c32:	9502      	str	r5, [sp, #8]
 8021c34:	b21b      	sxth	r3, r3
 8021c36:	b212      	sxth	r2, r2
 8021c38:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021c3c:	9301      	str	r3, [sp, #4]
 8021c3e:	9200      	str	r2, [sp, #0]
 8021c40:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021c44:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8021c48:	4639      	mov	r1, r7
 8021c4a:	9815      	ldr	r0, [sp, #84]	; 0x54
 8021c4c:	f7ff fc04 	bl	8021458 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021c50:	e73e      	b.n	8021ad0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021c52:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c54:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021c58:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c5a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021c5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8021c60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021c64:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8021c66:	141f      	asrs	r7, r3, #16
 8021c68:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021c6a:	141b      	asrs	r3, r3, #16
 8021c6c:	fb01 3707 	mla	r7, r1, r7, r3
 8021c70:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021c72:	fa1f fc82 	uxth.w	ip, r2
 8021c76:	eb03 0a07 	add.w	sl, r3, r7
 8021c7a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021c7e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021c82:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021c86:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8021c8a:	b29b      	uxth	r3, r3
 8021c8c:	2d00      	cmp	r5, #0
 8021c8e:	f000 813d 	beq.w	8021f0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021c92:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021c96:	940f      	str	r4, [sp, #60]	; 0x3c
 8021c98:	eb0a 0b01 	add.w	fp, sl, r1
 8021c9c:	fa1f fa85 	uxth.w	sl, r5
 8021ca0:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ca4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021ca8:	fa1f fa8a 	uxth.w	sl, sl
 8021cac:	eba0 000c 	sub.w	r0, r0, ip
 8021cb0:	eba3 030a 	sub.w	r3, r3, sl
 8021cb4:	b280      	uxth	r0, r0
 8021cb6:	fb08 f000 	mul.w	r0, r8, r0
 8021cba:	b29b      	uxth	r3, r3
 8021cbc:	fb09 0303 	mla	r3, r9, r3, r0
 8021cc0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021cc2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021cc6:	9410      	str	r4, [sp, #64]	; 0x40
 8021cc8:	fb0a 3300 	mla	r3, sl, r0, r3
 8021ccc:	fb0c 3304 	mla	r3, ip, r4, r3
 8021cd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021cd4:	2b00      	cmp	r3, #0
 8021cd6:	f000 810b 	beq.w	8021ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021cda:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8021cdc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8021cde:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8021ce2:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021ce6:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021cea:	f000 8114 	beq.w	8021f16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021cee:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021cf2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021cf6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021cfa:	fb09 f707 	mul.w	r7, r9, r7
 8021cfe:	fb0a fc0c 	mul.w	ip, sl, ip
 8021d02:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021d06:	f107 0b20 	add.w	fp, r7, #32
 8021d0a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021d0e:	44cc      	add	ip, r9
 8021d10:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021d14:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021d18:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d1c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8021d20:	ea4c 0909 	orr.w	r9, ip, r9
 8021d24:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8021d28:	8847      	ldrh	r7, [r0, #2]
 8021d2a:	d019      	beq.n	8021d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021d2c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8021d30:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021d34:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d38:	fb08 f807 	mul.w	r8, r8, r7
 8021d3c:	fb0a fc0c 	mul.w	ip, sl, ip
 8021d40:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021d44:	f108 0b20 	add.w	fp, r8, #32
 8021d48:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8021d4c:	44bc      	add	ip, r7
 8021d4e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021d52:	0a3f      	lsrs	r7, r7, #8
 8021d54:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021d58:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021d5c:	ea4c 0707 	orr.w	r7, ip, r7
 8021d60:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021d64:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021d68:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8021d6c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8021d70:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021d74:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8021d78:	ea4c 0909 	orr.w	r9, ip, r9
 8021d7c:	ea4a 0707 	orr.w	r7, sl, r7
 8021d80:	2d00      	cmp	r5, #0
 8021d82:	f000 80ca 	beq.w	8021f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021d86:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8021d8a:	3901      	subs	r1, #1
 8021d8c:	0049      	lsls	r1, r1, #1
 8021d8e:	3102      	adds	r1, #2
 8021d90:	eb00 0c01 	add.w	ip, r0, r1
 8021d94:	5a41      	ldrh	r1, [r0, r1]
 8021d96:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8021d98:	28ff      	cmp	r0, #255	; 0xff
 8021d9a:	d019      	beq.n	8021dd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021d9c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8021d9e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8021da2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8021da6:	fb04 fa01 	mul.w	sl, r4, r1
 8021daa:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021dae:	fb08 f800 	mul.w	r8, r8, r0
 8021db2:	f10a 0020 	add.w	r0, sl, #32
 8021db6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021dba:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021dbe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021dc2:	4441      	add	r1, r8
 8021dc4:	0a00      	lsrs	r0, r0, #8
 8021dc6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021dca:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021dce:	4301      	orrs	r1, r0
 8021dd0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8021dd2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021dd6:	2cff      	cmp	r4, #255	; 0xff
 8021dd8:	d01a      	beq.n	8021e10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021dda:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8021dde:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021de2:	fb04 fa00 	mul.w	sl, r4, r0
 8021de6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021dea:	fb08 f80c 	mul.w	r8, r8, ip
 8021dee:	f10a 0c20 	add.w	ip, sl, #32
 8021df2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021df6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021dfa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021dfe:	4440      	add	r0, r8
 8021e00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021e04:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021e08:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8021e0c:	ea40 000c 	orr.w	r0, r0, ip
 8021e10:	fb15 fc02 	smulbb	ip, r5, r2
 8021e14:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021e18:	f1c5 0810 	rsb	r8, r5, #16
 8021e1c:	eba8 0802 	sub.w	r8, r8, r2
 8021e20:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021e24:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021e28:	437a      	muls	r2, r7
 8021e2a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021e2e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021e32:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8021e36:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8021e3a:	fb09 2208 	mla	r2, r9, r8, r2
 8021e3e:	ea4a 0101 	orr.w	r1, sl, r1
 8021e42:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021e46:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8021e4a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8021e4e:	fb05 2201 	mla	r2, r5, r1, r2
 8021e52:	ea4b 0000 	orr.w	r0, fp, r0
 8021e56:	fb0c 2200 	mla	r2, ip, r0, r2
 8021e5a:	0d57      	lsrs	r7, r2, #21
 8021e5c:	0952      	lsrs	r2, r2, #5
 8021e5e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021e62:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021e66:	433a      	orrs	r2, r7
 8021e68:	2bff      	cmp	r3, #255	; 0xff
 8021e6a:	b292      	uxth	r2, r2
 8021e6c:	d102      	bne.n	8021e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021e6e:	9912      	ldr	r1, [sp, #72]	; 0x48
 8021e70:	29ff      	cmp	r1, #255	; 0xff
 8021e72:	d063      	beq.n	8021f3c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021e74:	980a      	ldr	r0, [sp, #40]	; 0x28
 8021e76:	f8be 1000 	ldrh.w	r1, [lr]
 8021e7a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8021e7c:	4343      	muls	r3, r0
 8021e7e:	1c58      	adds	r0, r3, #1
 8021e80:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021e84:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021e88:	1208      	asrs	r0, r1, #8
 8021e8a:	b2db      	uxtb	r3, r3
 8021e8c:	1215      	asrs	r5, r2, #8
 8021e8e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8021e92:	fb10 f003 	smulbb	r0, r0, r3
 8021e96:	10cf      	asrs	r7, r1, #3
 8021e98:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8021e9c:	00c9      	lsls	r1, r1, #3
 8021e9e:	fb05 0504 	mla	r5, r5, r4, r0
 8021ea2:	b2c9      	uxtb	r1, r1
 8021ea4:	10d0      	asrs	r0, r2, #3
 8021ea6:	00d2      	lsls	r2, r2, #3
 8021ea8:	fb11 f103 	smulbb	r1, r1, r3
 8021eac:	b2d2      	uxtb	r2, r2
 8021eae:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8021eb2:	fb02 1204 	mla	r2, r2, r4, r1
 8021eb6:	fb17 f703 	smulbb	r7, r7, r3
 8021eba:	b2ad      	uxth	r5, r5
 8021ebc:	b292      	uxth	r2, r2
 8021ebe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8021ec2:	fb00 7004 	mla	r0, r0, r4, r7
 8021ec6:	1c6b      	adds	r3, r5, #1
 8021ec8:	1c57      	adds	r7, r2, #1
 8021eca:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021ece:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021ed2:	b280      	uxth	r0, r0
 8021ed4:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021ed8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8021edc:	433d      	orrs	r5, r7
 8021ede:	1c47      	adds	r7, r0, #1
 8021ee0:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021ee4:	097f      	lsrs	r7, r7, #5
 8021ee6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8021eea:	433d      	orrs	r5, r7
 8021eec:	f8ae 5000 	strh.w	r5, [lr]
 8021ef0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8021ef2:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8021ef4:	4413      	add	r3, r2
 8021ef6:	9321      	str	r3, [sp, #132]	; 0x84
 8021ef8:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8021efa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8021efc:	441a      	add	r2, r3
 8021efe:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8021f00:	9222      	str	r2, [sp, #136]	; 0x88
 8021f02:	3b01      	subs	r3, #1
 8021f04:	f10e 0e02 	add.w	lr, lr, #2
 8021f08:	9313      	str	r3, [sp, #76]	; 0x4c
 8021f0a:	e61c      	b.n	8021b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021f0c:	fb08 f000 	mul.w	r0, r8, r0
 8021f10:	fb09 0303 	mla	r3, r9, r3, r0
 8021f14:	e6dc      	b.n	8021cd0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021f16:	46b9      	mov	r9, r7
 8021f18:	e704      	b.n	8021d24 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021f1a:	f1c2 0110 	rsb	r1, r2, #16
 8021f1e:	437a      	muls	r2, r7
 8021f20:	fb09 2901 	mla	r9, r9, r1, r2
 8021f24:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021f28:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021f2c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021f30:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8021f34:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8021f38:	4302      	orrs	r2, r0
 8021f3a:	e795      	b.n	8021e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021f3c:	f8ae 2000 	strh.w	r2, [lr]
 8021f40:	e7d6      	b.n	8021ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021f42:	b017      	add	sp, #92	; 0x5c
 8021f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021f48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021f4c:	b085      	sub	sp, #20
 8021f4e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8021f52:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8021f56:	9103      	str	r1, [sp, #12]
 8021f58:	fb00 7406 	mla	r4, r0, r6, r7
 8021f5c:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021f60:	2800      	cmp	r0, #0
 8021f62:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8021f66:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8021f6a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8021f6e:	9501      	str	r5, [sp, #4]
 8021f70:	eb02 0904 	add.w	r9, r2, r4
 8021f74:	f2c0 8141 	blt.w	80221fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f78:	4583      	cmp	fp, r0
 8021f7a:	f340 813e 	ble.w	80221fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021f7e:	2f00      	cmp	r7, #0
 8021f80:	f2c0 8137 	blt.w	80221f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f84:	42be      	cmp	r6, r7
 8021f86:	f340 8134 	ble.w	80221f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021f8a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021f8e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021f92:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021f96:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8021f9a:	4355      	muls	r5, r2
 8021f9c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021fa0:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8021fa4:	fb0c f203 	mul.w	r2, ip, r3
 8021fa8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021fac:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8021fb0:	441d      	add	r5, r3
 8021fb2:	f102 0320 	add.w	r3, r2, #32
 8021fb6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021fba:	0a1b      	lsrs	r3, r3, #8
 8021fbc:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021fc0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8021fc4:	431c      	orrs	r4, r3
 8021fc6:	1c7b      	adds	r3, r7, #1
 8021fc8:	f100 811c 	bmi.w	8022204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fcc:	429e      	cmp	r6, r3
 8021fce:	f340 8119 	ble.w	8022204 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021fd2:	2900      	cmp	r1, #0
 8021fd4:	f000 8119 	beq.w	802220a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021fd8:	9a01      	ldr	r2, [sp, #4]
 8021fda:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021fde:	8855      	ldrh	r5, [r2, #2]
 8021fe0:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021fe4:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8021fe8:	fb08 f802 	mul.w	r8, r8, r2
 8021fec:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8021ff0:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8021ff4:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021ff8:	435d      	muls	r5, r3
 8021ffa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8021ffe:	44d0      	add	r8, sl
 8022000:	f105 0a20 	add.w	sl, r5, #32
 8022004:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8022008:	0a2d      	lsrs	r5, r5, #8
 802200a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802200e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022012:	432a      	orrs	r2, r5
 8022014:	3001      	adds	r0, #1
 8022016:	f100 80fe 	bmi.w	8022216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802201a:	4583      	cmp	fp, r0
 802201c:	f340 80fb 	ble.w	8022216 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8022020:	f1be 0f00 	cmp.w	lr, #0
 8022024:	f000 80fc 	beq.w	8022220 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8022028:	2f00      	cmp	r7, #0
 802202a:	f2c0 80f1 	blt.w	8022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802202e:	42be      	cmp	r6, r7
 8022030:	f340 80ee 	ble.w	8022210 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8022034:	9801      	ldr	r0, [sp, #4]
 8022036:	f819 5006 	ldrb.w	r5, [r9, r6]
 802203a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 802203e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022042:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8022046:	fb0a fa00 	mul.w	sl, sl, r0
 802204a:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 802204e:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8022052:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8022056:	fb05 f808 	mul.w	r8, r5, r8
 802205a:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 802205e:	4482      	add	sl, r0
 8022060:	f108 0020 	add.w	r0, r8, #32
 8022064:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8022068:	0a00      	lsrs	r0, r0, #8
 802206a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802206e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022072:	ea4b 0b00 	orr.w	fp, fp, r0
 8022076:	3701      	adds	r7, #1
 8022078:	f100 80d7 	bmi.w	802222a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802207c:	42be      	cmp	r6, r7
 802207e:	f340 80d4 	ble.w	802222a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8022082:	2900      	cmp	r1, #0
 8022084:	f000 80d4 	beq.w	8022230 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8022088:	3601      	adds	r6, #1
 802208a:	9801      	ldr	r0, [sp, #4]
 802208c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8022090:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8022094:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8022098:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802209c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220a0:	fb09 f906 	mul.w	r9, r9, r6
 80220a4:	fb07 f800 	mul.w	r8, r7, r0
 80220a8:	f64f 001f 	movw	r0, #63519	; 0xf81f
 80220ac:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80220b0:	f609 0901 	addw	r9, r9, #2049	; 0x801
 80220b4:	44d1      	add	r9, sl
 80220b6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80220ba:	f108 0020 	add.w	r0, r8, #32
 80220be:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80220c2:	0a00      	lsrs	r0, r0, #8
 80220c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80220c8:	4330      	orrs	r0, r6
 80220ca:	b28e      	uxth	r6, r1
 80220cc:	fa1f f98e 	uxth.w	r9, lr
 80220d0:	fb06 f809 	mul.w	r8, r6, r9
 80220d4:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 80220d8:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 80220dc:	0136      	lsls	r6, r6, #4
 80220de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80220e2:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80220e6:	9601      	str	r6, [sp, #4]
 80220e8:	ea4a 0404 	orr.w	r4, sl, r4
 80220ec:	fa1f f689 	uxth.w	r6, r9
 80220f0:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80220f4:	fb11 f90e 	smulbb	r9, r1, lr
 80220f8:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 80220fc:	9602      	str	r6, [sp, #8]
 80220fe:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022102:	4626      	mov	r6, r4
 8022104:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022108:	f1ce 0410 	rsb	r4, lr, #16
 802210c:	1a64      	subs	r4, r4, r1
 802210e:	ea4a 0202 	orr.w	r2, sl, r2
 8022112:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8022116:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802211a:	434a      	muls	r2, r1
 802211c:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8022120:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022124:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022128:	fb04 2406 	mla	r4, r4, r6, r2
 802212c:	ea4a 0000 	orr.w	r0, sl, r0
 8022130:	fb09 4200 	mla	r2, r9, r0, r4
 8022134:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8022138:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802213c:	9801      	ldr	r0, [sp, #4]
 802213e:	9903      	ldr	r1, [sp, #12]
 8022140:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8022144:	ea44 0b0b 	orr.w	fp, r4, fp
 8022148:	9c02      	ldr	r4, [sp, #8]
 802214a:	8809      	ldrh	r1, [r1, #0]
 802214c:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 8022150:	1b00      	subs	r0, r0, r4
 8022152:	9c01      	ldr	r4, [sp, #4]
 8022154:	eba4 0608 	sub.w	r6, r4, r8
 8022158:	b2b6      	uxth	r6, r6
 802215a:	b280      	uxth	r0, r0
 802215c:	4373      	muls	r3, r6
 802215e:	fb0c 3300 	mla	r3, ip, r0, r3
 8022162:	9802      	ldr	r0, [sp, #8]
 8022164:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8022168:	fb00 3505 	mla	r5, r0, r5, r3
 802216c:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8022170:	fb08 5707 	mla	r7, r8, r7, r5
 8022174:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022178:	120b      	asrs	r3, r1, #8
 802217a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802217e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8022182:	b2ff      	uxtb	r7, r7
 8022184:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022188:	10c8      	asrs	r0, r1, #3
 802218a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802218e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8022192:	00c9      	lsls	r1, r1, #3
 8022194:	437b      	muls	r3, r7
 8022196:	ea42 0e0e 	orr.w	lr, r2, lr
 802219a:	b2c9      	uxtb	r1, r1
 802219c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80221a0:	fa1f f28e 	uxth.w	r2, lr
 80221a4:	4378      	muls	r0, r7
 80221a6:	434f      	muls	r7, r1
 80221a8:	1c59      	adds	r1, r3, #1
 80221aa:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80221ae:	1213      	asrs	r3, r2, #8
 80221b0:	f023 0307 	bic.w	r3, r3, #7
 80221b4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80221b8:	1c41      	adds	r1, r0, #1
 80221ba:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80221be:	10d1      	asrs	r1, r2, #3
 80221c0:	f021 0103 	bic.w	r1, r1, #3
 80221c4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80221c8:	021b      	lsls	r3, r3, #8
 80221ca:	00c9      	lsls	r1, r1, #3
 80221cc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80221d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80221d4:	430b      	orrs	r3, r1
 80221d6:	1c79      	adds	r1, r7, #1
 80221d8:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80221dc:	00d2      	lsls	r2, r2, #3
 80221de:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 80221e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80221e6:	431a      	orrs	r2, r3
 80221e8:	9b03      	ldr	r3, [sp, #12]
 80221ea:	801a      	strh	r2, [r3, #0]
 80221ec:	b005      	add	sp, #20
 80221ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80221f2:	f04f 0c00 	mov.w	ip, #0
 80221f6:	4664      	mov	r4, ip
 80221f8:	e6e5      	b.n	8021fc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 80221fa:	2300      	movs	r3, #0
 80221fc:	469c      	mov	ip, r3
 80221fe:	461a      	mov	r2, r3
 8022200:	461c      	mov	r4, r3
 8022202:	e707      	b.n	8022014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022204:	2300      	movs	r3, #0
 8022206:	461a      	mov	r2, r3
 8022208:	e704      	b.n	8022014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802220a:	460b      	mov	r3, r1
 802220c:	460a      	mov	r2, r1
 802220e:	e701      	b.n	8022014 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8022210:	2500      	movs	r5, #0
 8022212:	46ab      	mov	fp, r5
 8022214:	e72f      	b.n	8022076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8022216:	2700      	movs	r7, #0
 8022218:	463d      	mov	r5, r7
 802221a:	4638      	mov	r0, r7
 802221c:	46bb      	mov	fp, r7
 802221e:	e754      	b.n	80220ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022220:	4677      	mov	r7, lr
 8022222:	4675      	mov	r5, lr
 8022224:	4670      	mov	r0, lr
 8022226:	46f3      	mov	fp, lr
 8022228:	e74f      	b.n	80220ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802222a:	2700      	movs	r7, #0
 802222c:	4638      	mov	r0, r7
 802222e:	e74c      	b.n	80220ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8022230:	460f      	mov	r7, r1
 8022232:	4608      	mov	r0, r1
 8022234:	e749      	b.n	80220ca <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08022238 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022238:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802223c:	b093      	sub	sp, #76	; 0x4c
 802223e:	9210      	str	r2, [sp, #64]	; 0x40
 8022240:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8022242:	910e      	str	r1, [sp, #56]	; 0x38
 8022244:	9306      	str	r3, [sp, #24]
 8022246:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802224a:	9011      	str	r0, [sp, #68]	; 0x44
 802224c:	6850      	ldr	r0, [r2, #4]
 802224e:	6812      	ldr	r2, [r2, #0]
 8022250:	fb00 1303 	mla	r3, r0, r3, r1
 8022254:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022258:	9307      	str	r3, [sp, #28]
 802225a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802225c:	681b      	ldr	r3, [r3, #0]
 802225e:	9308      	str	r3, [sp, #32]
 8022260:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022262:	685b      	ldr	r3, [r3, #4]
 8022264:	9309      	str	r3, [sp, #36]	; 0x24
 8022266:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022268:	2b00      	cmp	r3, #0
 802226a:	dc03      	bgt.n	8022274 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802226c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802226e:	2b00      	cmp	r3, #0
 8022270:	f340 83b4 	ble.w	80229dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022274:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022276:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802227a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802227e:	1e48      	subs	r0, r1, #1
 8022280:	1e55      	subs	r5, r2, #1
 8022282:	9b06      	ldr	r3, [sp, #24]
 8022284:	2b00      	cmp	r3, #0
 8022286:	f340 8163 	ble.w	8022550 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802228a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802228c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802228e:	1436      	asrs	r6, r6, #16
 8022290:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022294:	d406      	bmi.n	80222a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022296:	4286      	cmp	r6, r0
 8022298:	da04      	bge.n	80222a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802229a:	2b00      	cmp	r3, #0
 802229c:	db02      	blt.n	80222a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802229e:	42ab      	cmp	r3, r5
 80222a0:	f2c0 8157 	blt.w	8022552 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 80222a4:	3601      	adds	r6, #1
 80222a6:	f100 8144 	bmi.w	8022532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222aa:	42b1      	cmp	r1, r6
 80222ac:	f2c0 8141 	blt.w	8022532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222b0:	3301      	adds	r3, #1
 80222b2:	f100 813e 	bmi.w	8022532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222b6:	429a      	cmp	r2, r3
 80222b8:	f2c0 813b 	blt.w	8022532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 80222bc:	9b06      	ldr	r3, [sp, #24]
 80222be:	9f07      	ldr	r7, [sp, #28]
 80222c0:	930f      	str	r3, [sp, #60]	; 0x3c
 80222c2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80222c6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80222c8:	2b00      	cmp	r3, #0
 80222ca:	f340 8164 	ble.w	8022596 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 80222ce:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222d0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80222d2:	1418      	asrs	r0, r3, #16
 80222d4:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80222d6:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80222da:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80222dc:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80222e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80222e2:	142d      	asrs	r5, r5, #16
 80222e4:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80222e8:	f100 81ee 	bmi.w	80226c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222ec:	f102 3eff 	add.w	lr, r2, #4294967295
 80222f0:	4575      	cmp	r5, lr
 80222f2:	f280 81e9 	bge.w	80226c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222f6:	2800      	cmp	r0, #0
 80222f8:	f2c0 81e6 	blt.w	80226c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 80222fc:	f103 3eff 	add.w	lr, r3, #4294967295
 8022300:	4570      	cmp	r0, lr
 8022302:	f280 81e1 	bge.w	80226c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022306:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022308:	b212      	sxth	r2, r2
 802230a:	fb00 5002 	mla	r0, r0, r2, r5
 802230e:	fa1f fe81 	uxth.w	lr, r1
 8022312:	eb03 0a00 	add.w	sl, r3, r0
 8022316:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802231a:	f813 9000 	ldrb.w	r9, [r3, r0]
 802231e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022322:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8022326:	b29b      	uxth	r3, r3
 8022328:	f1bc 0f00 	cmp.w	ip, #0
 802232c:	f000 8179 	beq.w	8022622 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8022330:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8022334:	940a      	str	r4, [sp, #40]	; 0x28
 8022336:	eb0a 0b02 	add.w	fp, sl, r2
 802233a:	fa1f fa8c 	uxth.w	sl, ip
 802233e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022342:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8022346:	fa1f fa8a 	uxth.w	sl, sl
 802234a:	eba5 050e 	sub.w	r5, r5, lr
 802234e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022352:	940b      	str	r4, [sp, #44]	; 0x2c
 8022354:	eba3 030a 	sub.w	r3, r3, sl
 8022358:	b2ad      	uxth	r5, r5
 802235a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802235c:	b29b      	uxth	r3, r3
 802235e:	fb08 f505 	mul.w	r5, r8, r5
 8022362:	fb09 5303 	mla	r3, r9, r3, r5
 8022366:	fb0a 3304 	mla	r3, sl, r4, r3
 802236a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802236c:	fb0e 3304 	mla	r3, lr, r4, r3
 8022370:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022374:	2b00      	cmp	r3, #0
 8022376:	f000 80cf 	beq.w	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802237a:	9c08      	ldr	r4, [sp, #32]
 802237c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022380:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8022384:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8022388:	f000 8150 	beq.w	802262c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802238c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8022390:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022394:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022398:	fb09 f000 	mul.w	r0, r9, r0
 802239c:	fb0a fe0e 	mul.w	lr, sl, lr
 80223a0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 80223a4:	f100 0b20 	add.w	fp, r0, #32
 80223a8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80223ac:	44ce      	add	lr, r9
 80223ae:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 80223b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80223b6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223ba:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80223be:	ea4e 0909 	orr.w	r9, lr, r9
 80223c2:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80223c6:	8868      	ldrh	r0, [r5, #2]
 80223c8:	d019      	beq.n	80223fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80223ca:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 80223ce:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80223d2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223d6:	fb08 f800 	mul.w	r8, r8, r0
 80223da:	fb0a fe0e 	mul.w	lr, sl, lr
 80223de:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80223e2:	f108 0b20 	add.w	fp, r8, #32
 80223e6:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80223ea:	4486      	add	lr, r0
 80223ec:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80223f0:	0a00      	lsrs	r0, r0, #8
 80223f2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80223f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80223fa:	ea4e 0000 	orr.w	r0, lr, r0
 80223fe:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022402:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8022406:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802240a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802240e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022412:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022416:	ea4e 0909 	orr.w	r9, lr, r9
 802241a:	ea4a 0000 	orr.w	r0, sl, r0
 802241e:	f1bc 0f00 	cmp.w	ip, #0
 8022422:	f000 8105 	beq.w	8022630 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8022426:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802242a:	3a01      	subs	r2, #1
 802242c:	0052      	lsls	r2, r2, #1
 802242e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8022430:	3202      	adds	r2, #2
 8022432:	2cff      	cmp	r4, #255	; 0xff
 8022434:	eb05 0e02 	add.w	lr, r5, r2
 8022438:	5aaa      	ldrh	r2, [r5, r2]
 802243a:	d018      	beq.n	802246e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802243c:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8022440:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022444:	fb04 fa02 	mul.w	sl, r4, r2
 8022448:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802244c:	fb08 f805 	mul.w	r8, r8, r5
 8022450:	f10a 0520 	add.w	r5, sl, #32
 8022454:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8022458:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802245c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022460:	4442      	add	r2, r8
 8022462:	0a2d      	lsrs	r5, r5, #8
 8022464:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8022468:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802246c:	432a      	orrs	r2, r5
 802246e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8022470:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8022474:	2cff      	cmp	r4, #255	; 0xff
 8022476:	d01a      	beq.n	80224ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8022478:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802247c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022480:	fb04 fa05 	mul.w	sl, r4, r5
 8022484:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8022488:	fb08 f80e 	mul.w	r8, r8, lr
 802248c:	f10a 0e20 	add.w	lr, sl, #32
 8022490:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022494:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8022498:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802249c:	4445      	add	r5, r8
 802249e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80224a2:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 80224a6:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80224aa:	ea45 050e 	orr.w	r5, r5, lr
 80224ae:	fb1c fe01 	smulbb	lr, ip, r1
 80224b2:	ea4f 0eee 	mov.w	lr, lr, asr #3
 80224b6:	f1cc 0810 	rsb	r8, ip, #16
 80224ba:	eba8 0801 	sub.w	r8, r8, r1
 80224be:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80224c2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 80224c6:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 80224ca:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 80224ce:	4341      	muls	r1, r0
 80224d0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80224d4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80224d8:	ea4a 0202 	orr.w	r2, sl, r2
 80224dc:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80224e0:	fb09 1108 	mla	r1, r9, r8, r1
 80224e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80224e8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80224ec:	fb0c 1102 	mla	r1, ip, r2, r1
 80224f0:	ea4b 0505 	orr.w	r5, fp, r5
 80224f4:	fb0e 1e05 	mla	lr, lr, r5, r1
 80224f8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80224fc:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022500:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022504:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022508:	ea42 0e0e 	orr.w	lr, r2, lr
 802250c:	fa1f f28e 	uxth.w	r2, lr
 8022510:	2bff      	cmp	r3, #255	; 0xff
 8022512:	f040 80a1 	bne.w	8022658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 8022516:	803a      	strh	r2, [r7, #0]
 8022518:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802251a:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802251c:	4413      	add	r3, r2
 802251e:	931d      	str	r3, [sp, #116]	; 0x74
 8022520:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8022522:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022524:	441a      	add	r2, r3
 8022526:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022528:	921e      	str	r2, [sp, #120]	; 0x78
 802252a:	3b01      	subs	r3, #1
 802252c:	3702      	adds	r7, #2
 802252e:	930f      	str	r3, [sp, #60]	; 0x3c
 8022530:	e6c9      	b.n	80222c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8022532:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022534:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8022536:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 8022538:	4433      	add	r3, r6
 802253a:	931d      	str	r3, [sp, #116]	; 0x74
 802253c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802253e:	441c      	add	r4, r3
 8022540:	9b06      	ldr	r3, [sp, #24]
 8022542:	941e      	str	r4, [sp, #120]	; 0x78
 8022544:	3b01      	subs	r3, #1
 8022546:	9306      	str	r3, [sp, #24]
 8022548:	9b07      	ldr	r3, [sp, #28]
 802254a:	3302      	adds	r3, #2
 802254c:	9307      	str	r3, [sp, #28]
 802254e:	e698      	b.n	8022282 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022550:	d028      	beq.n	80225a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8022552:	9b06      	ldr	r3, [sp, #24]
 8022554:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022556:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8022558:	3b01      	subs	r3, #1
 802255a:	fb00 5003 	mla	r0, r0, r3, r5
 802255e:	1400      	asrs	r0, r0, #16
 8022560:	f53f aeac 	bmi.w	80222bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022564:	3901      	subs	r1, #1
 8022566:	4288      	cmp	r0, r1
 8022568:	f6bf aea8 	bge.w	80222bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802256c:	9920      	ldr	r1, [sp, #128]	; 0x80
 802256e:	981e      	ldr	r0, [sp, #120]	; 0x78
 8022570:	fb01 0303 	mla	r3, r1, r3, r0
 8022574:	141b      	asrs	r3, r3, #16
 8022576:	f53f aea1 	bmi.w	80222bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802257a:	3a01      	subs	r2, #1
 802257c:	4293      	cmp	r3, r2
 802257e:	f6bf ae9d 	bge.w	80222bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022582:	9b06      	ldr	r3, [sp, #24]
 8022584:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8022588:	930f      	str	r3, [sp, #60]	; 0x3c
 802258a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802258e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022590:	2b00      	cmp	r3, #0
 8022592:	f300 80b6 	bgt.w	8022702 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 8022596:	9b06      	ldr	r3, [sp, #24]
 8022598:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802259c:	9b07      	ldr	r3, [sp, #28]
 802259e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80225a2:	9307      	str	r3, [sp, #28]
 80225a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80225a6:	2b00      	cmp	r3, #0
 80225a8:	f340 8218 	ble.w	80229dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 80225ac:	ee30 0a04 	vadd.f32	s0, s0, s8
 80225b0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225b8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225c6:	eef0 6a62 	vmov.f32	s13, s5
 80225ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225d6:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80225da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225de:	eef0 6a43 	vmov.f32	s13, s6
 80225e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225e6:	ee12 2a90 	vmov	r2, s5
 80225ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80225f2:	ee13 2a10 	vmov	r2, s6
 80225f6:	931f      	str	r3, [sp, #124]	; 0x7c
 80225f8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80225fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80225fe:	9320      	str	r3, [sp, #128]	; 0x80
 8022600:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022602:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022604:	3b01      	subs	r3, #1
 8022606:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802260a:	930e      	str	r3, [sp, #56]	; 0x38
 802260c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802260e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 8022612:	bf08      	it	eq
 8022614:	4613      	moveq	r3, r2
 8022616:	9306      	str	r3, [sp, #24]
 8022618:	eeb0 3a67 	vmov.f32	s6, s15
 802261c:	eef0 2a47 	vmov.f32	s5, s14
 8022620:	e621      	b.n	8022266 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022622:	fb08 f505 	mul.w	r5, r8, r5
 8022626:	fb09 5303 	mla	r3, r9, r3, r5
 802262a:	e6a1      	b.n	8022370 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802262c:	4681      	mov	r9, r0
 802262e:	e6c8      	b.n	80223c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8022630:	f1c1 0210 	rsb	r2, r1, #16
 8022634:	4341      	muls	r1, r0
 8022636:	fb09 1902 	mla	r9, r9, r2, r1
 802263a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802263e:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8022642:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8022646:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802264a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802264e:	ea42 0909 	orr.w	r9, r2, r9
 8022652:	fa1f f289 	uxth.w	r2, r9
 8022656:	e75b      	b.n	8022510 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022658:	f8b7 c000 	ldrh.w	ip, [r7]
 802265c:	43db      	mvns	r3, r3
 802265e:	ea4f 202c 	mov.w	r0, ip, asr #8
 8022662:	fa5f fe83 	uxtb.w	lr, r3
 8022666:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802266a:	fb00 f00e 	mul.w	r0, r0, lr
 802266e:	1c41      	adds	r1, r0, #1
 8022670:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8022674:	1211      	asrs	r1, r2, #8
 8022676:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802267a:	f021 0107 	bic.w	r1, r1, #7
 802267e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8022682:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8022686:	48d7      	ldr	r0, [pc, #860]	; (80229e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022688:	fb05 f50e 	mul.w	r5, r5, lr
 802268c:	b2c9      	uxtb	r1, r1
 802268e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022692:	1c69      	adds	r1, r5, #1
 8022694:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8022698:	10d1      	asrs	r1, r2, #3
 802269a:	f021 0103 	bic.w	r1, r1, #3
 802269e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 80226a2:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80226a6:	b2db      	uxtb	r3, r3
 80226a8:	00c9      	lsls	r1, r1, #3
 80226aa:	fb03 f30e 	mul.w	r3, r3, lr
 80226ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80226b2:	4301      	orrs	r1, r0
 80226b4:	1c58      	adds	r0, r3, #1
 80226b6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 80226ba:	00d2      	lsls	r2, r2, #3
 80226bc:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80226c0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80226c4:	430a      	orrs	r2, r1
 80226c6:	e726      	b.n	8022516 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 80226c8:	f115 0e01 	adds.w	lr, r5, #1
 80226cc:	f53f af24 	bmi.w	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226d0:	4572      	cmp	r2, lr
 80226d2:	f6ff af21 	blt.w	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226d6:	f110 0e01 	adds.w	lr, r0, #1
 80226da:	f53f af1d 	bmi.w	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226de:	4573      	cmp	r3, lr
 80226e0:	f6ff af1a 	blt.w	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80226e4:	b21b      	sxth	r3, r3
 80226e6:	b212      	sxth	r2, r2
 80226e8:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80226ec:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80226f0:	9301      	str	r3, [sp, #4]
 80226f2:	9200      	str	r2, [sp, #0]
 80226f4:	4639      	mov	r1, r7
 80226f6:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80226fa:	9811      	ldr	r0, [sp, #68]	; 0x44
 80226fc:	f7ff fc24 	bl	8021f48 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022700:	e70a      	b.n	8022518 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022702:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022704:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8022708:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802270a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802270e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022710:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022714:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8022716:	141f      	asrs	r7, r3, #16
 8022718:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802271a:	141b      	asrs	r3, r3, #16
 802271c:	fb01 3707 	mla	r7, r1, r7, r3
 8022720:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022722:	fa1f fc82 	uxth.w	ip, r2
 8022726:	eb03 0a07 	add.w	sl, r3, r7
 802272a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802272e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8022732:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022736:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802273a:	b29b      	uxth	r3, r3
 802273c:	2d00      	cmp	r5, #0
 802273e:	f000 80fe 	beq.w	802293e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 8022742:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8022746:	940c      	str	r4, [sp, #48]	; 0x30
 8022748:	eb0a 0b01 	add.w	fp, sl, r1
 802274c:	fa1f fa85 	uxth.w	sl, r5
 8022750:	fb0a fc0c 	mul.w	ip, sl, ip
 8022754:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8022758:	fa1f fa8a 	uxth.w	sl, sl
 802275c:	eba0 000c 	sub.w	r0, r0, ip
 8022760:	eba3 030a 	sub.w	r3, r3, sl
 8022764:	b280      	uxth	r0, r0
 8022766:	fb08 f000 	mul.w	r0, r8, r0
 802276a:	b29b      	uxth	r3, r3
 802276c:	fb09 0303 	mla	r3, r9, r3, r0
 8022770:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022772:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8022776:	940d      	str	r4, [sp, #52]	; 0x34
 8022778:	fb0a 3300 	mla	r3, sl, r0, r3
 802277c:	fb0c 3304 	mla	r3, ip, r4, r3
 8022780:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8022784:	2b00      	cmp	r3, #0
 8022786:	f000 80cc 	beq.w	8022922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802278a:	9808      	ldr	r0, [sp, #32]
 802278c:	9c08      	ldr	r4, [sp, #32]
 802278e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8022792:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8022796:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802279a:	f000 80d5 	beq.w	8022948 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802279e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80227a2:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80227a6:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227aa:	fb09 f707 	mul.w	r7, r9, r7
 80227ae:	fb0a fc0c 	mul.w	ip, sl, ip
 80227b2:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80227b6:	f107 0b20 	add.w	fp, r7, #32
 80227ba:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227be:	44cc      	add	ip, r9
 80227c0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80227c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80227c8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80227cc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80227d0:	ea4c 0909 	orr.w	r9, ip, r9
 80227d4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80227d8:	8847      	ldrh	r7, [r0, #2]
 80227da:	d019      	beq.n	8022810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 80227dc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80227e0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80227e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80227e8:	fb08 f807 	mul.w	r8, r8, r7
 80227ec:	fb0a fc0c 	mul.w	ip, sl, ip
 80227f0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80227f4:	f108 0b20 	add.w	fp, r8, #32
 80227f8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80227fc:	44bc      	add	ip, r7
 80227fe:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022802:	0a3f      	lsrs	r7, r7, #8
 8022804:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022808:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802280c:	ea4c 0707 	orr.w	r7, ip, r7
 8022810:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022814:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022818:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802281c:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8022820:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022824:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8022828:	ea4c 0909 	orr.w	r9, ip, r9
 802282c:	ea4a 0707 	orr.w	r7, sl, r7
 8022830:	2d00      	cmp	r5, #0
 8022832:	f000 808b 	beq.w	802294c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8022836:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802283a:	3901      	subs	r1, #1
 802283c:	0049      	lsls	r1, r1, #1
 802283e:	3102      	adds	r1, #2
 8022840:	eb00 0c01 	add.w	ip, r0, r1
 8022844:	5a41      	ldrh	r1, [r0, r1]
 8022846:	980c      	ldr	r0, [sp, #48]	; 0x30
 8022848:	28ff      	cmp	r0, #255	; 0xff
 802284a:	d019      	beq.n	8022880 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802284c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802284e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8022852:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022856:	fb04 fa01 	mul.w	sl, r4, r1
 802285a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802285e:	fb08 f800 	mul.w	r8, r8, r0
 8022862:	f10a 0020 	add.w	r0, sl, #32
 8022866:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802286a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802286e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8022872:	4441      	add	r1, r8
 8022874:	0a00      	lsrs	r0, r0, #8
 8022876:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802287a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802287e:	4301      	orrs	r1, r0
 8022880:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8022882:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8022886:	2cff      	cmp	r4, #255	; 0xff
 8022888:	d01a      	beq.n	80228c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802288a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802288e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022892:	fb04 fa00 	mul.w	sl, r4, r0
 8022896:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802289a:	fb08 f80c 	mul.w	r8, r8, ip
 802289e:	f10a 0c20 	add.w	ip, sl, #32
 80228a2:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80228a6:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80228aa:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80228ae:	4440      	add	r0, r8
 80228b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80228b4:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80228b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80228bc:	ea40 000c 	orr.w	r0, r0, ip
 80228c0:	fb15 fc02 	smulbb	ip, r5, r2
 80228c4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80228c8:	f1c5 0810 	rsb	r8, r5, #16
 80228cc:	eba8 0802 	sub.w	r8, r8, r2
 80228d0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80228d4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80228d8:	437a      	muls	r2, r7
 80228da:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80228de:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80228e2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80228e6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80228ea:	fb09 2208 	mla	r2, r9, r8, r2
 80228ee:	ea4a 0101 	orr.w	r1, sl, r1
 80228f2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80228f6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80228fa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80228fe:	fb05 2201 	mla	r2, r5, r1, r2
 8022902:	ea4b 0000 	orr.w	r0, fp, r0
 8022906:	fb0c 2200 	mla	r2, ip, r0, r2
 802290a:	0d57      	lsrs	r7, r2, #21
 802290c:	0952      	lsrs	r2, r2, #5
 802290e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8022912:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022916:	433a      	orrs	r2, r7
 8022918:	2bff      	cmp	r3, #255	; 0xff
 802291a:	b292      	uxth	r2, r2
 802291c:	d127      	bne.n	802296e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802291e:	f8ae 2000 	strh.w	r2, [lr]
 8022922:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8022924:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 8022926:	4413      	add	r3, r2
 8022928:	931d      	str	r3, [sp, #116]	; 0x74
 802292a:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802292c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802292e:	441a      	add	r2, r3
 8022930:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8022932:	921e      	str	r2, [sp, #120]	; 0x78
 8022934:	3b01      	subs	r3, #1
 8022936:	f10e 0e02 	add.w	lr, lr, #2
 802293a:	930f      	str	r3, [sp, #60]	; 0x3c
 802293c:	e627      	b.n	802258e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802293e:	fb08 f000 	mul.w	r0, r8, r0
 8022942:	fb09 0303 	mla	r3, r9, r3, r0
 8022946:	e71b      	b.n	8022780 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 8022948:	46b9      	mov	r9, r7
 802294a:	e743      	b.n	80227d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802294c:	f1c2 0110 	rsb	r1, r2, #16
 8022950:	437a      	muls	r2, r7
 8022952:	fb09 2901 	mla	r9, r9, r1, r2
 8022956:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802295a:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802295e:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8022962:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022966:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802296a:	4302      	orrs	r2, r0
 802296c:	e7d4      	b.n	8022918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802296e:	f8be 7000 	ldrh.w	r7, [lr]
 8022972:	4c1c      	ldr	r4, [pc, #112]	; (80229e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 8022974:	43db      	mvns	r3, r3
 8022976:	1238      	asrs	r0, r7, #8
 8022978:	fa5f fc83 	uxtb.w	ip, r3
 802297c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022980:	10fd      	asrs	r5, r7, #3
 8022982:	fb00 f00c 	mul.w	r0, r0, ip
 8022986:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802298a:	fb05 f10c 	mul.w	r1, r5, ip
 802298e:	1c45      	adds	r5, r0, #1
 8022990:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022994:	1215      	asrs	r5, r2, #8
 8022996:	f025 0507 	bic.w	r5, r5, #7
 802299a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802299e:	1c4d      	adds	r5, r1, #1
 80229a0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80229a4:	10d1      	asrs	r1, r2, #3
 80229a6:	f021 0103 	bic.w	r1, r1, #3
 80229aa:	00fb      	lsls	r3, r7, #3
 80229ac:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 80229b0:	b2db      	uxtb	r3, r3
 80229b2:	b2c0      	uxtb	r0, r0
 80229b4:	00c9      	lsls	r1, r1, #3
 80229b6:	fb03 f30c 	mul.w	r3, r3, ip
 80229ba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80229be:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80229c2:	4308      	orrs	r0, r1
 80229c4:	1c59      	adds	r1, r3, #1
 80229c6:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80229ca:	00d2      	lsls	r2, r2, #3
 80229cc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80229d0:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 80229d4:	4318      	orrs	r0, r3
 80229d6:	f8ae 0000 	strh.w	r0, [lr]
 80229da:	e7a2      	b.n	8022922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80229dc:	b013      	add	sp, #76	; 0x4c
 80229de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80229e2:	bf00      	nop
 80229e4:	fffff800 	.word	0xfffff800

080229e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80229e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80229ec:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 80229f0:	fb05 4c03 	mla	ip, r5, r3, r4
 80229f4:	2d00      	cmp	r5, #0
 80229f6:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80229fa:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 80229fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8022a02:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8022a06:	8808      	ldrh	r0, [r1, #0]
 8022a08:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022a0c:	f2c0 80a7 	blt.w	8022b5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a10:	45aa      	cmp	sl, r5
 8022a12:	f340 80a4 	ble.w	8022b5e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022a16:	2c00      	cmp	r4, #0
 8022a18:	f2c0 809f 	blt.w	8022b5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a1c:	42a3      	cmp	r3, r4
 8022a1e:	f340 809c 	ble.w	8022b5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022a22:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 8022a26:	1c62      	adds	r2, r4, #1
 8022a28:	f100 809c 	bmi.w	8022b64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a2c:	4293      	cmp	r3, r2
 8022a2e:	f340 8099 	ble.w	8022b64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a32:	f1b9 0f00 	cmp.w	r9, #0
 8022a36:	f000 8095 	beq.w	8022b64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022a3a:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022a3e:	3501      	adds	r5, #1
 8022a40:	f100 8094 	bmi.w	8022b6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a44:	45aa      	cmp	sl, r5
 8022a46:	f340 8091 	ble.w	8022b6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a4a:	2f00      	cmp	r7, #0
 8022a4c:	f000 808e 	beq.w	8022b6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022a50:	2c00      	cmp	r4, #0
 8022a52:	f2c0 8089 	blt.w	8022b68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a56:	42a3      	cmp	r3, r4
 8022a58:	f340 8086 	ble.w	8022b68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 8022a5c:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 8022a60:	3401      	adds	r4, #1
 8022a62:	f100 8086 	bmi.w	8022b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a66:	42a3      	cmp	r3, r4
 8022a68:	f340 8083 	ble.w	8022b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a6c:	f1b9 0f00 	cmp.w	r9, #0
 8022a70:	d07f      	beq.n	8022b72 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 8022a72:	3301      	adds	r3, #1
 8022a74:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 8022a78:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8022a7c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a80:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8022a84:	fb19 fe07 	smulbb	lr, r9, r7
 8022a88:	ea44 0808 	orr.w	r8, r4, r8
 8022a8c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022a90:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022a94:	f1c7 0210 	rsb	r2, r7, #16
 8022a98:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8022a9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022aa0:	ea44 0c0c 	orr.w	ip, r4, ip
 8022aa4:	eba2 0209 	sub.w	r2, r2, r9
 8022aa8:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022aac:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022ab0:	fb04 f40c 	mul.w	r4, r4, ip
 8022ab4:	fb02 4808 	mla	r8, r2, r8, r4
 8022ab8:	041a      	lsls	r2, r3, #16
 8022aba:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022abe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022ac2:	4313      	orrs	r3, r2
 8022ac4:	042a      	lsls	r2, r5, #16
 8022ac6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022aca:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8022ace:	fb0e 8303 	mla	r3, lr, r3, r8
 8022ad2:	432a      	orrs	r2, r5
 8022ad4:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8022ad8:	fb07 3202 	mla	r2, r7, r2, r3
 8022adc:	0d53      	lsrs	r3, r2, #21
 8022ade:	0952      	lsrs	r2, r2, #5
 8022ae0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8022ae4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022ae8:	431a      	orrs	r2, r3
 8022aea:	b293      	uxth	r3, r2
 8022aec:	b2b4      	uxth	r4, r6
 8022aee:	1202      	asrs	r2, r0, #8
 8022af0:	43f6      	mvns	r6, r6
 8022af2:	b2f6      	uxtb	r6, r6
 8022af4:	121d      	asrs	r5, r3, #8
 8022af6:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8022afa:	fb12 f206 	smulbb	r2, r2, r6
 8022afe:	10c7      	asrs	r7, r0, #3
 8022b00:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8022b04:	00c0      	lsls	r0, r0, #3
 8022b06:	fb05 2504 	mla	r5, r5, r4, r2
 8022b0a:	b2c0      	uxtb	r0, r0
 8022b0c:	10da      	asrs	r2, r3, #3
 8022b0e:	00db      	lsls	r3, r3, #3
 8022b10:	b2db      	uxtb	r3, r3
 8022b12:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022b16:	fb10 f006 	smulbb	r0, r0, r6
 8022b1a:	b2ad      	uxth	r5, r5
 8022b1c:	fb03 0004 	mla	r0, r3, r4, r0
 8022b20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8022b24:	fb17 f706 	smulbb	r7, r7, r6
 8022b28:	b280      	uxth	r0, r0
 8022b2a:	1c6b      	adds	r3, r5, #1
 8022b2c:	fb02 7204 	mla	r2, r2, r4, r7
 8022b30:	b292      	uxth	r2, r2
 8022b32:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022b36:	1c43      	adds	r3, r0, #1
 8022b38:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022b3c:	1c50      	adds	r0, r2, #1
 8022b3e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8022b42:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8022b46:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022b4a:	0952      	lsrs	r2, r2, #5
 8022b4c:	432b      	orrs	r3, r5
 8022b4e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022b52:	4313      	orrs	r3, r2
 8022b54:	800b      	strh	r3, [r1, #0]
 8022b56:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8022b5a:	4680      	mov	r8, r0
 8022b5c:	e763      	b.n	8022a26 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 8022b5e:	4684      	mov	ip, r0
 8022b60:	4680      	mov	r8, r0
 8022b62:	e76c      	b.n	8022a3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b64:	4684      	mov	ip, r0
 8022b66:	e76a      	b.n	8022a3e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 8022b68:	4605      	mov	r5, r0
 8022b6a:	e779      	b.n	8022a60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 8022b6c:	4603      	mov	r3, r0
 8022b6e:	4605      	mov	r5, r0
 8022b70:	e782      	b.n	8022a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 8022b72:	4603      	mov	r3, r0
 8022b74:	e780      	b.n	8022a78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

08022b76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b7a:	b093      	sub	sp, #76	; 0x4c
 8022b7c:	461d      	mov	r5, r3
 8022b7e:	9210      	str	r2, [sp, #64]	; 0x40
 8022b80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8022b82:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 8022b86:	920b      	str	r2, [sp, #44]	; 0x2c
 8022b88:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 8022b8c:	910a      	str	r1, [sp, #40]	; 0x28
 8022b8e:	6859      	ldr	r1, [r3, #4]
 8022b90:	681b      	ldr	r3, [r3, #0]
 8022b92:	9011      	str	r0, [sp, #68]	; 0x44
 8022b94:	fb01 2707 	mla	r7, r1, r7, r2
 8022b98:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022b9c:	9307      	str	r3, [sp, #28]
 8022b9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022ba0:	681b      	ldr	r3, [r3, #0]
 8022ba2:	9309      	str	r3, [sp, #36]	; 0x24
 8022ba4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8022ba6:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8022baa:	43db      	mvns	r3, r3
 8022bac:	b2db      	uxtb	r3, r3
 8022bae:	9308      	str	r3, [sp, #32]
 8022bb0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022bb2:	2b00      	cmp	r3, #0
 8022bb4:	dc03      	bgt.n	8022bbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022bb6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022bb8:	2b00      	cmp	r3, #0
 8022bba:	f340 8203 	ble.w	8022fc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022bbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022bc0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bc4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022bc8:	1e48      	subs	r0, r1, #1
 8022bca:	f102 3cff 	add.w	ip, r2, #4294967295
 8022bce:	2d00      	cmp	r5, #0
 8022bd0:	f340 80da 	ble.w	8022d88 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022bd4:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022bd8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022bdc:	d406      	bmi.n	8022bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bde:	4586      	cmp	lr, r0
 8022be0:	da04      	bge.n	8022bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022be2:	2b00      	cmp	r3, #0
 8022be4:	db02      	blt.n	8022bec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022be6:	4563      	cmp	r3, ip
 8022be8:	f2c0 80cf 	blt.w	8022d8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022bec:	f11e 0e01 	adds.w	lr, lr, #1
 8022bf0:	f100 80c1 	bmi.w	8022d76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bf4:	4571      	cmp	r1, lr
 8022bf6:	f2c0 80be 	blt.w	8022d76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022bfa:	3301      	adds	r3, #1
 8022bfc:	f100 80bb 	bmi.w	8022d76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022c00:	429a      	cmp	r2, r3
 8022c02:	f2c0 80b8 	blt.w	8022d76 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022c06:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022c0a:	46a9      	mov	r9, r5
 8022c0c:	f1b9 0f00 	cmp.w	r9, #0
 8022c10:	f340 80d8 	ble.w	8022dc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022c14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022c16:	1421      	asrs	r1, r4, #16
 8022c18:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022c1c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c20:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022c24:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022c28:	f100 8111 	bmi.w	8022e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c2c:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022c30:	4551      	cmp	r1, sl
 8022c32:	f280 810c 	bge.w	8022e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c36:	2800      	cmp	r0, #0
 8022c38:	f2c0 8109 	blt.w	8022e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c3c:	f103 3aff 	add.w	sl, r3, #4294967295
 8022c40:	4550      	cmp	r0, sl
 8022c42:	f280 8104 	bge.w	8022e4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 8022c46:	fa0f f38e 	sxth.w	r3, lr
 8022c4a:	fb00 1103 	mla	r1, r0, r3, r1
 8022c4e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8022c50:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022c54:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8022c58:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8022c5c:	f1bc 0f00 	cmp.w	ip, #0
 8022c60:	d007      	beq.n	8022c72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 8022c62:	005b      	lsls	r3, r3, #1
 8022c64:	eb0a 0003 	add.w	r0, sl, r3
 8022c68:	f83a 3003 	ldrh.w	r3, [sl, r3]
 8022c6c:	930c      	str	r3, [sp, #48]	; 0x30
 8022c6e:	8843      	ldrh	r3, [r0, #2]
 8022c70:	930d      	str	r3, [sp, #52]	; 0x34
 8022c72:	ea4f 400e 	mov.w	r0, lr, lsl #16
 8022c76:	fb12 f30c 	smulbb	r3, r2, ip
 8022c7a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8022c7e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022c82:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022c86:	10db      	asrs	r3, r3, #3
 8022c88:	ea40 000e 	orr.w	r0, r0, lr
 8022c8c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8022c90:	f1cc 0e10 	rsb	lr, ip, #16
 8022c94:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8022c98:	ebae 0e02 	sub.w	lr, lr, r2
 8022c9c:	ea4a 0101 	orr.w	r1, sl, r1
 8022ca0:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022ca4:	4351      	muls	r1, r2
 8022ca6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8022ca8:	9f08      	ldr	r7, [sp, #32]
 8022caa:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022cae:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022cb2:	0410      	lsls	r0, r2, #16
 8022cb4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8022cb8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8022cbc:	4310      	orrs	r0, r2
 8022cbe:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8022cc0:	990c      	ldr	r1, [sp, #48]	; 0x30
 8022cc2:	0412      	lsls	r2, r2, #16
 8022cc4:	fb03 e000 	mla	r0, r3, r0, lr
 8022cc8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022ccc:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8022cd0:	ea42 020e 	orr.w	r2, r2, lr
 8022cd4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022cd8:	fb03 0302 	mla	r3, r3, r2, r0
 8022cdc:	0d5a      	lsrs	r2, r3, #21
 8022cde:	095b      	lsrs	r3, r3, #5
 8022ce0:	f8b8 0000 	ldrh.w	r0, [r8]
 8022ce4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8022ce8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8022cec:	4313      	orrs	r3, r2
 8022cee:	b29b      	uxth	r3, r3
 8022cf0:	1201      	asrs	r1, r0, #8
 8022cf2:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8022cf6:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022cfa:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022cfe:	fb11 f107 	smulbb	r1, r1, r7
 8022d02:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022d06:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022d0a:	00c0      	lsls	r0, r0, #3
 8022d0c:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022d10:	b2c0      	uxtb	r0, r0
 8022d12:	10d9      	asrs	r1, r3, #3
 8022d14:	00db      	lsls	r3, r3, #3
 8022d16:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8022d1a:	b2db      	uxtb	r3, r3
 8022d1c:	fb10 f007 	smulbb	r0, r0, r7
 8022d20:	fa1f fc8c 	uxth.w	ip, ip
 8022d24:	fb03 0302 	mla	r3, r3, r2, r0
 8022d28:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022d2c:	fb1e fe07 	smulbb	lr, lr, r7
 8022d30:	fb01 e102 	mla	r1, r1, r2, lr
 8022d34:	b29a      	uxth	r2, r3
 8022d36:	f10c 0301 	add.w	r3, ip, #1
 8022d3a:	b289      	uxth	r1, r1
 8022d3c:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022d40:	1c53      	adds	r3, r2, #1
 8022d42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022d46:	1c4a      	adds	r2, r1, #1
 8022d48:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022d4c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022d50:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022d54:	0949      	lsrs	r1, r1, #5
 8022d56:	ea43 030c 	orr.w	r3, r3, ip
 8022d5a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8022d5e:	430b      	orrs	r3, r1
 8022d60:	f8a8 3000 	strh.w	r3, [r8]
 8022d64:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d66:	441c      	add	r4, r3
 8022d68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d6a:	f108 0802 	add.w	r8, r8, #2
 8022d6e:	441e      	add	r6, r3
 8022d70:	f109 39ff 	add.w	r9, r9, #4294967295
 8022d74:	e74a      	b.n	8022c0c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022d76:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022d78:	441c      	add	r4, r3
 8022d7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022d7c:	441e      	add	r6, r3
 8022d7e:	9b07      	ldr	r3, [sp, #28]
 8022d80:	3302      	adds	r3, #2
 8022d82:	3d01      	subs	r5, #1
 8022d84:	9307      	str	r3, [sp, #28]
 8022d86:	e722      	b.n	8022bce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022d88:	d022      	beq.n	8022dd0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022d8a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8022d8c:	1e6b      	subs	r3, r5, #1
 8022d8e:	fb00 4003 	mla	r0, r0, r3, r4
 8022d92:	1400      	asrs	r0, r0, #16
 8022d94:	f53f af37 	bmi.w	8022c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022d98:	3901      	subs	r1, #1
 8022d9a:	4288      	cmp	r0, r1
 8022d9c:	f6bf af33 	bge.w	8022c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022da0:	9920      	ldr	r1, [sp, #128]	; 0x80
 8022da2:	fb01 6303 	mla	r3, r1, r3, r6
 8022da6:	141b      	asrs	r3, r3, #16
 8022da8:	f53f af2d 	bmi.w	8022c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022dac:	3a01      	subs	r2, #1
 8022dae:	4293      	cmp	r3, r2
 8022db0:	f6bf af29 	bge.w	8022c06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022db4:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022db8:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 8022dbc:	46a8      	mov	r8, r5
 8022dbe:	f1b8 0f00 	cmp.w	r8, #0
 8022dc2:	dc5e      	bgt.n	8022e82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022dc4:	9b07      	ldr	r3, [sp, #28]
 8022dc6:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022dca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022dce:	9307      	str	r3, [sp, #28]
 8022dd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022dd2:	2b00      	cmp	r3, #0
 8022dd4:	f340 80f6 	ble.w	8022fc4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022dd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ddc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022de0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022de4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022de6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022dea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022dee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022df2:	eef0 6a62 	vmov.f32	s13, s5
 8022df6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022dfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022dfe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022e02:	ee16 4a90 	vmov	r4, s13
 8022e06:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022e0a:	eef0 6a43 	vmov.f32	s13, s6
 8022e0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022e12:	ee12 2a90 	vmov	r2, s5
 8022e16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022e1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e1e:	ee13 2a10 	vmov	r2, s6
 8022e22:	931f      	str	r3, [sp, #124]	; 0x7c
 8022e24:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e26:	fb92 f3f3 	sdiv	r3, r2, r3
 8022e2a:	9320      	str	r3, [sp, #128]	; 0x80
 8022e2c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8022e2e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022e30:	3b01      	subs	r3, #1
 8022e32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022e36:	930a      	str	r3, [sp, #40]	; 0x28
 8022e38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8022e3a:	ee16 6a90 	vmov	r6, s13
 8022e3e:	bf14      	ite	ne
 8022e40:	461d      	movne	r5, r3
 8022e42:	4615      	moveq	r5, r2
 8022e44:	eeb0 3a67 	vmov.f32	s6, s15
 8022e48:	eef0 2a47 	vmov.f32	s5, s14
 8022e4c:	e6b0      	b.n	8022bb0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022e4e:	f111 0a01 	adds.w	sl, r1, #1
 8022e52:	d487      	bmi.n	8022d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e54:	45d6      	cmp	lr, sl
 8022e56:	db85      	blt.n	8022d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e58:	f110 0a01 	adds.w	sl, r0, #1
 8022e5c:	d482      	bmi.n	8022d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e5e:	4553      	cmp	r3, sl
 8022e60:	db80      	blt.n	8022d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e62:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8022e64:	9101      	str	r1, [sp, #4]
 8022e66:	b21b      	sxth	r3, r3
 8022e68:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022e6c:	9300      	str	r3, [sp, #0]
 8022e6e:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022e72:	fa0f f38e 	sxth.w	r3, lr
 8022e76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022e78:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022e7a:	4641      	mov	r1, r8
 8022e7c:	f7ff fdb4 	bl	80229e8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022e80:	e770      	b.n	8022d64 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022e82:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8022e84:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8022e86:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e8a:	1430      	asrs	r0, r6, #16
 8022e8c:	1423      	asrs	r3, r4, #16
 8022e8e:	fb01 3000 	mla	r0, r1, r0, r3
 8022e92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8022e94:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022e98:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022e9c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022ea0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022ea4:	8858      	ldrh	r0, [r3, #2]
 8022ea6:	f1be 0f00 	cmp.w	lr, #0
 8022eaa:	d00b      	beq.n	8022ec4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022eac:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8022eb0:	3901      	subs	r1, #1
 8022eb2:	0049      	lsls	r1, r1, #1
 8022eb4:	3102      	adds	r1, #2
 8022eb6:	eb03 0b01 	add.w	fp, r3, r1
 8022eba:	5a5b      	ldrh	r3, [r3, r1]
 8022ebc:	930e      	str	r3, [sp, #56]	; 0x38
 8022ebe:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022ec2:	930f      	str	r3, [sp, #60]	; 0x3c
 8022ec4:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022ec8:	fb12 f30e 	smulbb	r3, r2, lr
 8022ecc:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8022ed0:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022ed4:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8022ed8:	10db      	asrs	r3, r3, #3
 8022eda:	ea41 010c 	orr.w	r1, r1, ip
 8022ede:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022ee2:	f1ce 0c10 	rsb	ip, lr, #16
 8022ee6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022eea:	ebac 0c02 	sub.w	ip, ip, r2
 8022eee:	ea4b 0000 	orr.w	r0, fp, r0
 8022ef2:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022ef6:	4350      	muls	r0, r2
 8022ef8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022efa:	9f08      	ldr	r7, [sp, #32]
 8022efc:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022f00:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022f04:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022f08:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8022f0c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8022f0e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8022f10:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8022f14:	0412      	lsls	r2, r2, #16
 8022f16:	ea4b 0101 	orr.w	r1, fp, r1
 8022f1a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8022f1e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8022f22:	fb03 c101 	mla	r1, r3, r1, ip
 8022f26:	4302      	orrs	r2, r0
 8022f28:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022f2c:	fb03 1202 	mla	r2, r3, r2, r1
 8022f30:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022f34:	0952      	lsrs	r2, r2, #5
 8022f36:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8022f3a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022f3e:	f8b9 2000 	ldrh.w	r2, [r9]
 8022f42:	ea4b 0303 	orr.w	r3, fp, r3
 8022f46:	b29b      	uxth	r3, r3
 8022f48:	1211      	asrs	r1, r2, #8
 8022f4a:	1218      	asrs	r0, r3, #8
 8022f4c:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8022f50:	fb11 f107 	smulbb	r1, r1, r7
 8022f54:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022f58:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8022f5c:	00d2      	lsls	r2, r2, #3
 8022f5e:	fb00 100a 	mla	r0, r0, sl, r1
 8022f62:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8022f66:	10d9      	asrs	r1, r3, #3
 8022f68:	b2d2      	uxtb	r2, r2
 8022f6a:	00db      	lsls	r3, r3, #3
 8022f6c:	fb1c fc07 	smulbb	ip, ip, r7
 8022f70:	fb12 f207 	smulbb	r2, r2, r7
 8022f74:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8022f78:	b2db      	uxtb	r3, r3
 8022f7a:	b280      	uxth	r0, r0
 8022f7c:	fb01 c10a 	mla	r1, r1, sl, ip
 8022f80:	fb03 230a 	mla	r3, r3, sl, r2
 8022f84:	b29b      	uxth	r3, r3
 8022f86:	b289      	uxth	r1, r1
 8022f88:	1c42      	adds	r2, r0, #1
 8022f8a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022f8e:	f101 0c01 	add.w	ip, r1, #1
 8022f92:	1c5a      	adds	r2, r3, #1
 8022f94:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022f98:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022f9c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8022f9e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8022fa2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022fa6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022faa:	4310      	orrs	r0, r2
 8022fac:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8022fb0:	441c      	add	r4, r3
 8022fb2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8022fb4:	ea40 000c 	orr.w	r0, r0, ip
 8022fb8:	f829 0b02 	strh.w	r0, [r9], #2
 8022fbc:	441e      	add	r6, r3
 8022fbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8022fc2:	e6fc      	b.n	8022dbe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022fc4:	b013      	add	sp, #76	; 0x4c
 8022fc6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022fca:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022fce:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022fd2:	fb0e 4703 	mla	r7, lr, r3, r4
 8022fd6:	f1be 0f00 	cmp.w	lr, #0
 8022fda:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022fde:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 8022fe2:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 8022fe6:	8808      	ldrh	r0, [r1, #0]
 8022fe8:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022fec:	db60      	blt.n	80230b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022fee:	45f1      	cmp	r9, lr
 8022ff0:	dd5e      	ble.n	80230b0 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022ff2:	2c00      	cmp	r4, #0
 8022ff4:	db5a      	blt.n	80230ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022ff6:	42a3      	cmp	r3, r4
 8022ff8:	dd58      	ble.n	80230ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022ffa:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022ffe:	1c62      	adds	r2, r4, #1
 8023000:	d459      	bmi.n	80230b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023002:	4293      	cmp	r3, r2
 8023004:	dd57      	ble.n	80230b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8023006:	2d00      	cmp	r5, #0
 8023008:	d055      	beq.n	80230b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802300a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802300e:	f11e 0e01 	adds.w	lr, lr, #1
 8023012:	d454      	bmi.n	80230be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023014:	45f1      	cmp	r9, lr
 8023016:	dd52      	ble.n	80230be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8023018:	2e00      	cmp	r6, #0
 802301a:	d050      	beq.n	80230be <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802301c:	2c00      	cmp	r4, #0
 802301e:	db4c      	blt.n	80230ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023020:	42a3      	cmp	r3, r4
 8023022:	dd4a      	ble.n	80230ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8023024:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8023028:	3401      	adds	r4, #1
 802302a:	d405      	bmi.n	8023038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802302c:	42a3      	cmp	r3, r4
 802302e:	dd03      	ble.n	8023038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023030:	b115      	cbz	r5, 8023038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8023032:	3301      	adds	r3, #1
 8023034:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8023038:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802303c:	fb15 f406 	smulbb	r4, r5, r6
 8023040:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023044:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8023048:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802304c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8023050:	ea43 0c0c 	orr.w	ip, r3, ip
 8023054:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8023058:	f1c6 0310 	rsb	r3, r6, #16
 802305c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8023060:	1b5b      	subs	r3, r3, r5
 8023062:	ea4e 0707 	orr.w	r7, lr, r7
 8023066:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802306a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802306e:	437d      	muls	r5, r7
 8023070:	fb03 5c0c 	mla	ip, r3, ip, r5
 8023074:	0403      	lsls	r3, r0, #16
 8023076:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802307a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802307e:	4318      	orrs	r0, r3
 8023080:	0413      	lsls	r3, r2, #16
 8023082:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8023086:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802308a:	4313      	orrs	r3, r2
 802308c:	fb04 c000 	mla	r0, r4, r0, ip
 8023090:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8023094:	fb06 0003 	mla	r0, r6, r3, r0
 8023098:	0d43      	lsrs	r3, r0, #21
 802309a:	0940      	lsrs	r0, r0, #5
 802309c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80230a0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80230a4:	4318      	orrs	r0, r3
 80230a6:	8008      	strh	r0, [r1, #0]
 80230a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80230ac:	4684      	mov	ip, r0
 80230ae:	e7a6      	b.n	8022ffe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80230b0:	4607      	mov	r7, r0
 80230b2:	4684      	mov	ip, r0
 80230b4:	e7ab      	b.n	802300e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230b6:	4607      	mov	r7, r0
 80230b8:	e7a9      	b.n	802300e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80230ba:	4602      	mov	r2, r0
 80230bc:	e7b4      	b.n	8023028 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 80230be:	4602      	mov	r2, r0
 80230c0:	e7ba      	b.n	8023038 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

080230c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80230c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80230c6:	b08f      	sub	sp, #60	; 0x3c
 80230c8:	461d      	mov	r5, r3
 80230ca:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80230cc:	920c      	str	r2, [sp, #48]	; 0x30
 80230ce:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 80230d2:	9107      	str	r1, [sp, #28]
 80230d4:	6859      	ldr	r1, [r3, #4]
 80230d6:	681b      	ldr	r3, [r3, #0]
 80230d8:	900d      	str	r0, [sp, #52]	; 0x34
 80230da:	fb01 2707 	mla	r7, r1, r7, r2
 80230de:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 80230e2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230e4:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 80230e8:	f8d3 8000 	ldr.w	r8, [r3]
 80230ec:	9b07      	ldr	r3, [sp, #28]
 80230ee:	2b00      	cmp	r3, #0
 80230f0:	dc03      	bgt.n	80230fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80230f2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80230f4:	2b00      	cmp	r3, #0
 80230f6:	f340 8181 	ble.w	80233fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 80230fa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80230fc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023100:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023104:	1e48      	subs	r0, r1, #1
 8023106:	f102 3cff 	add.w	ip, r2, #4294967295
 802310a:	2d00      	cmp	r5, #0
 802310c:	f340 809b 	ble.w	8023246 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8023110:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8023114:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023118:	d406      	bmi.n	8023128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802311a:	4586      	cmp	lr, r0
 802311c:	da04      	bge.n	8023128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802311e:	2b00      	cmp	r3, #0
 8023120:	db02      	blt.n	8023128 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023122:	4563      	cmp	r3, ip
 8023124:	f2c0 8090 	blt.w	8023248 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8023128:	f11e 0e01 	adds.w	lr, lr, #1
 802312c:	f100 8084 	bmi.w	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023130:	4571      	cmp	r1, lr
 8023132:	f2c0 8081 	blt.w	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8023136:	3301      	adds	r3, #1
 8023138:	d47e      	bmi.n	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802313a:	429a      	cmp	r2, r3
 802313c:	db7c      	blt.n	8023238 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802313e:	46aa      	mov	sl, r5
 8023140:	46b9      	mov	r9, r7
 8023142:	f1ba 0f00 	cmp.w	sl, #0
 8023146:	f340 8099 	ble.w	802327c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802314a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802314c:	1421      	asrs	r1, r4, #16
 802314e:	ea4f 4026 	mov.w	r0, r6, asr #16
 8023152:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023156:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802315a:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802315e:	f100 80d0 	bmi.w	8023302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023162:	f10e 3bff 	add.w	fp, lr, #4294967295
 8023166:	4559      	cmp	r1, fp
 8023168:	f280 80cb 	bge.w	8023302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802316c:	2800      	cmp	r0, #0
 802316e:	f2c0 80c8 	blt.w	8023302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8023172:	f103 3bff 	add.w	fp, r3, #4294967295
 8023176:	4558      	cmp	r0, fp
 8023178:	f280 80c3 	bge.w	8023302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802317c:	fa0f fe8e 	sxth.w	lr, lr
 8023180:	fb00 110e 	mla	r1, r0, lr, r1
 8023184:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023188:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802318c:	8841      	ldrh	r1, [r0, #2]
 802318e:	f1bc 0f00 	cmp.w	ip, #0
 8023192:	d00b      	beq.n	80231ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8023194:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8023198:	3b01      	subs	r3, #1
 802319a:	005b      	lsls	r3, r3, #1
 802319c:	3302      	adds	r3, #2
 802319e:	eb00 0e03 	add.w	lr, r0, r3
 80231a2:	5ac3      	ldrh	r3, [r0, r3]
 80231a4:	9308      	str	r3, [sp, #32]
 80231a6:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80231aa:	9309      	str	r3, [sp, #36]	; 0x24
 80231ac:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80231b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231b4:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80231b8:	ea40 000b 	orr.w	r0, r0, fp
 80231bc:	fb12 f30c 	smulbb	r3, r2, ip
 80231c0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80231c4:	10db      	asrs	r3, r3, #3
 80231c6:	f1cc 0e10 	rsb	lr, ip, #16
 80231ca:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80231ce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80231d2:	ebae 0e02 	sub.w	lr, lr, r2
 80231d6:	ea4b 0101 	orr.w	r1, fp, r1
 80231da:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80231de:	4351      	muls	r1, r2
 80231e0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80231e2:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80231e6:	fb0e 1e00 	mla	lr, lr, r0, r1
 80231ea:	0410      	lsls	r0, r2, #16
 80231ec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80231f0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80231f4:	4310      	orrs	r0, r2
 80231f6:	9a08      	ldr	r2, [sp, #32]
 80231f8:	9908      	ldr	r1, [sp, #32]
 80231fa:	0412      	lsls	r2, r2, #16
 80231fc:	fb03 e000 	mla	r0, r3, r0, lr
 8023200:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8023204:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8023208:	ea42 020e 	orr.w	r2, r2, lr
 802320c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8023210:	fb03 0302 	mla	r3, r3, r2, r0
 8023214:	0d5a      	lsrs	r2, r3, #21
 8023216:	095b      	lsrs	r3, r3, #5
 8023218:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802321c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8023220:	4313      	orrs	r3, r2
 8023222:	f8a9 3000 	strh.w	r3, [r9]
 8023226:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8023228:	441c      	add	r4, r3
 802322a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802322c:	f109 0902 	add.w	r9, r9, #2
 8023230:	441e      	add	r6, r3
 8023232:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023236:	e784      	b.n	8023142 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023238:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802323a:	441c      	add	r4, r3
 802323c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802323e:	3d01      	subs	r5, #1
 8023240:	441e      	add	r6, r3
 8023242:	3702      	adds	r7, #2
 8023244:	e761      	b.n	802310a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023246:	d01d      	beq.n	8023284 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8023248:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802324a:	1e6b      	subs	r3, r5, #1
 802324c:	fb00 4003 	mla	r0, r0, r3, r4
 8023250:	1400      	asrs	r0, r0, #16
 8023252:	f53f af74 	bmi.w	802313e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023256:	3901      	subs	r1, #1
 8023258:	4288      	cmp	r0, r1
 802325a:	f6bf af70 	bge.w	802313e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802325e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8023260:	fb01 6303 	mla	r3, r1, r3, r6
 8023264:	141b      	asrs	r3, r3, #16
 8023266:	f53f af6a 	bmi.w	802313e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802326a:	3a01      	subs	r2, #1
 802326c:	4293      	cmp	r3, r2
 802326e:	f6bf af66 	bge.w	802313e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8023272:	46a9      	mov	r9, r5
 8023274:	46ba      	mov	sl, r7
 8023276:	f1b9 0f00 	cmp.w	r9, #0
 802327a:	dc5a      	bgt.n	8023332 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802327c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8023280:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8023284:	9b07      	ldr	r3, [sp, #28]
 8023286:	2b00      	cmp	r3, #0
 8023288:	f340 80b8 	ble.w	80233fc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802328c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023290:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023294:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023298:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802329a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802329e:	ee31 1a05 	vadd.f32	s2, s2, s10
 80232a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80232a6:	eef0 6a62 	vmov.f32	s13, s5
 80232aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232b6:	ee16 4a90 	vmov	r4, s13
 80232ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232be:	eef0 6a43 	vmov.f32	s13, s6
 80232c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232c6:	ee12 2a90 	vmov	r2, s5
 80232ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80232d2:	ee13 2a10 	vmov	r2, s6
 80232d6:	931b      	str	r3, [sp, #108]	; 0x6c
 80232d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232da:	fb92 f3f3 	sdiv	r3, r2, r3
 80232de:	931c      	str	r3, [sp, #112]	; 0x70
 80232e0:	9b07      	ldr	r3, [sp, #28]
 80232e2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80232e4:	3b01      	subs	r3, #1
 80232e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232ea:	9307      	str	r3, [sp, #28]
 80232ec:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80232ee:	ee16 6a90 	vmov	r6, s13
 80232f2:	bf14      	ite	ne
 80232f4:	461d      	movne	r5, r3
 80232f6:	4615      	moveq	r5, r2
 80232f8:	eeb0 3a67 	vmov.f32	s6, s15
 80232fc:	eef0 2a47 	vmov.f32	s5, s14
 8023300:	e6f4      	b.n	80230ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023302:	f111 0b01 	adds.w	fp, r1, #1
 8023306:	d48e      	bmi.n	8023226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023308:	45de      	cmp	lr, fp
 802330a:	db8c      	blt.n	8023226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802330c:	f110 0b01 	adds.w	fp, r0, #1
 8023310:	d489      	bmi.n	8023226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023312:	455b      	cmp	r3, fp
 8023314:	db87      	blt.n	8023226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023316:	b21b      	sxth	r3, r3
 8023318:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802331c:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023320:	9300      	str	r3, [sp, #0]
 8023322:	4642      	mov	r2, r8
 8023324:	fa0f f38e 	sxth.w	r3, lr
 8023328:	4649      	mov	r1, r9
 802332a:	980d      	ldr	r0, [sp, #52]	; 0x34
 802332c:	f7ff fe4d 	bl	8022fca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8023330:	e779      	b.n	8023226 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023332:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8023334:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8023338:	1420      	asrs	r0, r4, #16
 802333a:	1431      	asrs	r1, r6, #16
 802333c:	fb03 0101 	mla	r1, r3, r1, r0
 8023340:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8023344:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8023348:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802334c:	8841      	ldrh	r1, [r0, #2]
 802334e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023352:	f1be 0f00 	cmp.w	lr, #0
 8023356:	d00b      	beq.n	8023370 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8023358:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802335c:	3b01      	subs	r3, #1
 802335e:	005b      	lsls	r3, r3, #1
 8023360:	3302      	adds	r3, #2
 8023362:	eb00 0b03 	add.w	fp, r0, r3
 8023366:	5ac3      	ldrh	r3, [r0, r3]
 8023368:	930a      	str	r3, [sp, #40]	; 0x28
 802336a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802336e:	930b      	str	r3, [sp, #44]	; 0x2c
 8023370:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8023374:	fb12 f30e 	smulbb	r3, r2, lr
 8023378:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802337c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8023380:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8023384:	10db      	asrs	r3, r3, #3
 8023386:	ea40 000c 	orr.w	r0, r0, ip
 802338a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802338e:	f1ce 0c10 	rsb	ip, lr, #16
 8023392:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8023396:	ebac 0c02 	sub.w	ip, ip, r2
 802339a:	ea4b 0101 	orr.w	r1, fp, r1
 802339e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80233a2:	4351      	muls	r1, r2
 80233a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80233a6:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 80233aa:	fb0c 1c00 	mla	ip, ip, r0, r1
 80233ae:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80233b2:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 80233b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80233b8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80233ba:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80233be:	0412      	lsls	r2, r2, #16
 80233c0:	ea4b 0000 	orr.w	r0, fp, r0
 80233c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80233c8:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 80233cc:	fb03 c000 	mla	r0, r3, r0, ip
 80233d0:	ea42 0b0b 	orr.w	fp, r2, fp
 80233d4:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 80233d8:	fb03 000b 	mla	r0, r3, fp, r0
 80233dc:	0d43      	lsrs	r3, r0, #21
 80233de:	0940      	lsrs	r0, r0, #5
 80233e0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80233e4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80233e8:	4318      	orrs	r0, r3
 80233ea:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80233ec:	f82a 0b02 	strh.w	r0, [sl], #2
 80233f0:	441c      	add	r4, r3
 80233f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80233f4:	f109 39ff 	add.w	r9, r9, #4294967295
 80233f8:	441e      	add	r6, r3
 80233fa:	e73c      	b.n	8023276 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 80233fc:	b00f      	add	sp, #60	; 0x3c
 80233fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023402:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023406:	b085      	sub	sp, #20
 8023408:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802340c:	9102      	str	r1, [sp, #8]
 802340e:	2c00      	cmp	r4, #0
 8023410:	fb04 7103 	mla	r1, r4, r3, r7
 8023414:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023418:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802341c:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023420:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023424:	f2c0 811b 	blt.w	802365e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8023428:	45a6      	cmp	lr, r4
 802342a:	f340 8118 	ble.w	802365e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802342e:	2f00      	cmp	r7, #0
 8023430:	f2c0 8113 	blt.w	802365a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8023434:	42bb      	cmp	r3, r7
 8023436:	f340 8110 	ble.w	802365a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802343a:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802343e:	1c7a      	adds	r2, r7, #1
 8023440:	f100 8110 	bmi.w	8023664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8023444:	4293      	cmp	r3, r2
 8023446:	f340 810d 	ble.w	8023664 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802344a:	2e00      	cmp	r6, #0
 802344c:	f000 810c 	beq.w	8023668 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8023450:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023454:	3401      	adds	r4, #1
 8023456:	f100 810b 	bmi.w	8023670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802345a:	45a6      	cmp	lr, r4
 802345c:	f340 8108 	ble.w	8023670 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8023460:	2800      	cmp	r0, #0
 8023462:	f000 8108 	beq.w	8023676 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8023466:	2f00      	cmp	r7, #0
 8023468:	f2c0 8100 	blt.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802346c:	42bb      	cmp	r3, r7
 802346e:	f340 80fd 	ble.w	802366c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8023472:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023476:	3701      	adds	r7, #1
 8023478:	f100 8100 	bmi.w	802367c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802347c:	42bb      	cmp	r3, r7
 802347e:	f340 80fd 	ble.w	802367c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8023482:	2e00      	cmp	r6, #0
 8023484:	f000 80fc 	beq.w	8023680 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8023488:	3301      	adds	r3, #1
 802348a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802348e:	b2b6      	uxth	r6, r6
 8023490:	b280      	uxth	r0, r0
 8023492:	fb00 fe06 	mul.w	lr, r0, r6
 8023496:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802349a:	0136      	lsls	r6, r6, #4
 802349c:	eba6 070e 	sub.w	r7, r6, lr
 80234a0:	b280      	uxth	r0, r0
 80234a2:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80234a6:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80234aa:	b2bf      	uxth	r7, r7
 80234ac:	1a1b      	subs	r3, r3, r0
 80234ae:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80234b2:	b29b      	uxth	r3, r3
 80234b4:	fb0a f607 	mul.w	r6, sl, r7
 80234b8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80234bc:	fb0b 6603 	mla	r6, fp, r3, r6
 80234c0:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80234c4:	fb00 6609 	mla	r6, r0, r9, r6
 80234c8:	fb0e 6608 	mla	r6, lr, r8, r6
 80234cc:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80234d0:	9600      	str	r6, [sp, #0]
 80234d2:	2e00      	cmp	r6, #0
 80234d4:	f000 80be 	beq.w	8023654 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 80234d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80234dc:	fb0b fc0c 	mul.w	ip, fp, ip
 80234e0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80234e4:	fb0b f505 	mul.w	r5, fp, r5
 80234e8:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80234ec:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 80234f0:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80234f4:	44dc      	add	ip, fp
 80234f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234fa:	9501      	str	r5, [sp, #4]
 80234fc:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023500:	9503      	str	r5, [sp, #12]
 8023502:	9d01      	ldr	r5, [sp, #4]
 8023504:	9e02      	ldr	r6, [sp, #8]
 8023506:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802350a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802350e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023512:	fb0a fc0c 	mul.w	ip, sl, ip
 8023516:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802351a:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802351e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023522:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023526:	4465      	add	r5, ip
 8023528:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802352c:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023530:	fb09 fc0c 	mul.w	ip, r9, ip
 8023534:	fb09 f904 	mul.w	r9, r9, r4
 8023538:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802353c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023540:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023544:	fb08 f404 	mul.w	r4, r8, r4
 8023548:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802354c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023550:	fb08 f802 	mul.w	r8, r8, r2
 8023554:	fb0a fa01 	mul.w	sl, sl, r1
 8023558:	0a22      	lsrs	r2, r4, #8
 802355a:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802355e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023562:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023566:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802356a:	4414      	add	r4, r2
 802356c:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023570:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023574:	0a2d      	lsrs	r5, r5, #8
 8023576:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802357a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802357e:	9a03      	ldr	r2, [sp, #12]
 8023580:	8836      	ldrh	r6, [r6, #0]
 8023582:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023586:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802358a:	437d      	muls	r5, r7
 802358c:	4461      	add	r1, ip
 802358e:	0a24      	lsrs	r4, r4, #8
 8023590:	fb02 5503 	mla	r5, r2, r3, r5
 8023594:	0a09      	lsrs	r1, r1, #8
 8023596:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802359a:	fb04 540e 	mla	r4, r4, lr, r5
 802359e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80235a2:	fb01 4100 	mla	r1, r1, r0, r4
 80235a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235aa:	0a09      	lsrs	r1, r1, #8
 80235ac:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80235b0:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 80235b4:	fb07 f70a 	mul.w	r7, r7, sl
 80235b8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80235bc:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 80235c0:	fb03 7101 	mla	r1, r3, r1, r7
 80235c4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80235c8:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80235cc:	fb0e 1e08 	mla	lr, lr, r8, r1
 80235d0:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 80235d4:	fb00 e101 	mla	r1, r0, r1, lr
 80235d8:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 80235dc:	9a00      	ldr	r2, [sp, #0]
 80235de:	b287      	uxth	r7, r0
 80235e0:	437a      	muls	r2, r7
 80235e2:	0a09      	lsrs	r1, r1, #8
 80235e4:	1c53      	adds	r3, r2, #1
 80235e6:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80235ea:	4321      	orrs	r1, r4
 80235ec:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80235f0:	1235      	asrs	r5, r6, #8
 80235f2:	0c0a      	lsrs	r2, r1, #16
 80235f4:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 80235f8:	b2db      	uxtb	r3, r3
 80235fa:	fb12 f207 	smulbb	r2, r2, r7
 80235fe:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8023602:	fb05 2503 	mla	r5, r5, r3, r2
 8023606:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802360a:	10f2      	asrs	r2, r6, #3
 802360c:	b2c8      	uxtb	r0, r1
 802360e:	00f6      	lsls	r6, r6, #3
 8023610:	fb14 f407 	smulbb	r4, r4, r7
 8023614:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8023618:	b2f6      	uxtb	r6, r6
 802361a:	fb10 f007 	smulbb	r0, r0, r7
 802361e:	fb02 4203 	mla	r2, r2, r3, r4
 8023622:	b2ad      	uxth	r5, r5
 8023624:	fb06 0303 	mla	r3, r6, r3, r0
 8023628:	b299      	uxth	r1, r3
 802362a:	b294      	uxth	r4, r2
 802362c:	1c6b      	adds	r3, r5, #1
 802362e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8023632:	1c62      	adds	r2, r4, #1
 8023634:	1c4b      	adds	r3, r1, #1
 8023636:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802363a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802363e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8023642:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023646:	0952      	lsrs	r2, r2, #5
 8023648:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802364c:	432b      	orrs	r3, r5
 802364e:	4313      	orrs	r3, r2
 8023650:	9a02      	ldr	r2, [sp, #8]
 8023652:	8013      	strh	r3, [r2, #0]
 8023654:	b005      	add	sp, #20
 8023656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802365a:	2500      	movs	r5, #0
 802365c:	e6ef      	b.n	802343e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802365e:	2100      	movs	r1, #0
 8023660:	460d      	mov	r5, r1
 8023662:	e6f7      	b.n	8023454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023664:	2100      	movs	r1, #0
 8023666:	e6f5      	b.n	8023454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8023668:	4631      	mov	r1, r6
 802366a:	e6f3      	b.n	8023454 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802366c:	2400      	movs	r4, #0
 802366e:	e702      	b.n	8023476 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8023670:	2200      	movs	r2, #0
 8023672:	4614      	mov	r4, r2
 8023674:	e70b      	b.n	802348e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023676:	4602      	mov	r2, r0
 8023678:	4604      	mov	r4, r0
 802367a:	e708      	b.n	802348e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802367c:	2200      	movs	r2, #0
 802367e:	e706      	b.n	802348e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8023680:	4632      	mov	r2, r6
 8023682:	e704      	b.n	802348e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08023684 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023684:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023688:	b09d      	sub	sp, #116	; 0x74
 802368a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802368e:	9219      	str	r2, [sp, #100]	; 0x64
 8023690:	9307      	str	r3, [sp, #28]
 8023692:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8023694:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8023698:	931a      	str	r3, [sp, #104]	; 0x68
 802369a:	9117      	str	r1, [sp, #92]	; 0x5c
 802369c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80236a0:	901b      	str	r0, [sp, #108]	; 0x6c
 80236a2:	6850      	ldr	r0, [r2, #4]
 80236a4:	6812      	ldr	r2, [r2, #0]
 80236a6:	fb00 1303 	mla	r3, r0, r3, r1
 80236aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80236ae:	930a      	str	r3, [sp, #40]	; 0x28
 80236b0:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236b2:	681b      	ldr	r3, [r3, #0]
 80236b4:	9310      	str	r3, [sp, #64]	; 0x40
 80236b6:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 80236ba:	930b      	str	r3, [sp, #44]	; 0x2c
 80236bc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80236be:	2b00      	cmp	r3, #0
 80236c0:	dc03      	bgt.n	80236ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80236c2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80236c4:	2b00      	cmp	r3, #0
 80236c6:	f340 8375 	ble.w	8023db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80236ca:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80236cc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80236d0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80236d4:	1e48      	subs	r0, r1, #1
 80236d6:	1e57      	subs	r7, r2, #1
 80236d8:	9b07      	ldr	r3, [sp, #28]
 80236da:	2b00      	cmp	r3, #0
 80236dc:	f340 818e 	ble.w	80239fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 80236e0:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80236e4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80236e8:	d406      	bmi.n	80236f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236ea:	4584      	cmp	ip, r0
 80236ec:	da04      	bge.n	80236f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236ee:	2b00      	cmp	r3, #0
 80236f0:	db02      	blt.n	80236f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80236f2:	42bb      	cmp	r3, r7
 80236f4:	f2c0 8183 	blt.w	80239fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 80236f8:	f11c 0c01 	adds.w	ip, ip, #1
 80236fc:	f100 8173 	bmi.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023700:	4561      	cmp	r1, ip
 8023702:	f2c0 8170 	blt.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023706:	3301      	adds	r3, #1
 8023708:	f100 816d 	bmi.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802370c:	429a      	cmp	r2, r3
 802370e:	f2c0 816a 	blt.w	80239e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023712:	9b07      	ldr	r3, [sp, #28]
 8023714:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8023716:	9318      	str	r3, [sp, #96]	; 0x60
 8023718:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802371a:	2b00      	cmp	r3, #0
 802371c:	f340 818c 	ble.w	8023a38 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023720:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8023722:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023724:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023728:	689b      	ldr	r3, [r3, #8]
 802372a:	1422      	asrs	r2, r4, #16
 802372c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023730:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8023734:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8023738:	f100 81cd 	bmi.w	8023ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802373c:	f103 38ff 	add.w	r8, r3, #4294967295
 8023740:	4542      	cmp	r2, r8
 8023742:	f280 81c8 	bge.w	8023ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023746:	f1bc 0f00 	cmp.w	ip, #0
 802374a:	f2c0 81c4 	blt.w	8023ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802374e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023752:	45c4      	cmp	ip, r8
 8023754:	f280 81bf 	bge.w	8023ad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8023758:	b21b      	sxth	r3, r3
 802375a:	fb0c 2203 	mla	r2, ip, r3, r2
 802375e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023760:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023764:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023768:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802376c:	2800      	cmp	r0, #0
 802376e:	f000 81a9 	beq.w	8023ac4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8023772:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023776:	950c      	str	r5, [sp, #48]	; 0x30
 8023778:	0e2d      	lsrs	r5, r5, #24
 802377a:	9513      	str	r5, [sp, #76]	; 0x4c
 802377c:	b181      	cbz	r1, 80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802377e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8023782:	3b01      	subs	r3, #1
 8023784:	009b      	lsls	r3, r3, #2
 8023786:	3304      	adds	r3, #4
 8023788:	eb08 0c03 	add.w	ip, r8, r3
 802378c:	f858 3003 	ldr.w	r3, [r8, r3]
 8023790:	9308      	str	r3, [sp, #32]
 8023792:	0e1b      	lsrs	r3, r3, #24
 8023794:	9311      	str	r3, [sp, #68]	; 0x44
 8023796:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802379a:	930d      	str	r3, [sp, #52]	; 0x34
 802379c:	0e1b      	lsrs	r3, r3, #24
 802379e:	9314      	str	r3, [sp, #80]	; 0x50
 80237a0:	b280      	uxth	r0, r0
 80237a2:	b289      	uxth	r1, r1
 80237a4:	fb00 f901 	mul.w	r9, r0, r1
 80237a8:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80237ac:	0100      	lsls	r0, r0, #4
 80237ae:	eba0 0809 	sub.w	r8, r0, r9
 80237b2:	b289      	uxth	r1, r1
 80237b4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80237b8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80237ba:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80237bc:	fa1f f888 	uxth.w	r8, r8
 80237c0:	1a5b      	subs	r3, r3, r1
 80237c2:	b29b      	uxth	r3, r3
 80237c4:	fb08 f000 	mul.w	r0, r8, r0
 80237c8:	fb03 000e 	mla	r0, r3, lr, r0
 80237cc:	fb01 0005 	mla	r0, r1, r5, r0
 80237d0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80237d2:	fb09 0005 	mla	r0, r9, r5, r0
 80237d6:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80237da:	2800      	cmp	r0, #0
 80237dc:	f000 80fa 	beq.w	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 80237e0:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80237e4:	d01b      	beq.n	802381e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 80237e6:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80237ea:	fb0e fa0a 	mul.w	sl, lr, sl
 80237ee:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80237f2:	fb0e fe02 	mul.w	lr, lr, r2
 80237f6:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80237fa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80237fe:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023802:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8023806:	4452      	add	r2, sl
 8023808:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802380c:	0a12      	lsrs	r2, r2, #8
 802380e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023812:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023816:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802381a:	ea42 020c 	orr.w	r2, r2, ip
 802381e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023820:	2dff      	cmp	r5, #255	; 0xff
 8023822:	d021      	beq.n	8023868 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023824:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023826:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802382a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802382c:	fb05 fb0b 	mul.w	fp, r5, fp
 8023830:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023832:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023836:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023838:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802383c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023840:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8023844:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023848:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802384c:	44de      	add	lr, fp
 802384e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023852:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023856:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802385a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802385e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023862:	ea4e 050a 	orr.w	r5, lr, sl
 8023866:	950c      	str	r5, [sp, #48]	; 0x30
 8023868:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802386a:	2dff      	cmp	r5, #255	; 0xff
 802386c:	d021      	beq.n	80238b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802386e:	9d08      	ldr	r5, [sp, #32]
 8023870:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8023874:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023876:	fb05 fb0b 	mul.w	fp, r5, fp
 802387a:	9d08      	ldr	r5, [sp, #32]
 802387c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023880:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023882:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023886:	fb05 fa0a 	mul.w	sl, r5, sl
 802388a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802388e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8023892:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8023896:	44de      	add	lr, fp
 8023898:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802389c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80238a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238a4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238ac:	ea4e 050a 	orr.w	r5, lr, sl
 80238b0:	9508      	str	r5, [sp, #32]
 80238b2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238b4:	2dff      	cmp	r5, #255	; 0xff
 80238b6:	d021      	beq.n	80238fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 80238b8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238ba:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80238be:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80238c4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80238c6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80238ca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80238cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80238d0:	fb05 fa0a 	mul.w	sl, r5, sl
 80238d4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238d8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80238dc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80238e0:	44de      	add	lr, fp
 80238e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80238e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80238ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80238ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80238f2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80238f6:	ea4e 050a 	orr.w	r5, lr, sl
 80238fa:	950d      	str	r5, [sp, #52]	; 0x34
 80238fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80238fe:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023902:	9d08      	ldr	r5, [sp, #32]
 8023904:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8023908:	fb08 fc0c 	mul.w	ip, r8, ip
 802390c:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023910:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8023914:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8023916:	fb01 cc0e 	mla	ip, r1, lr, ip
 802391a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802391e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8023920:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023924:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8023928:	fb08 f80e 	mul.w	r8, r8, lr
 802392c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023930:	fb03 8202 	mla	r2, r3, r2, r8
 8023934:	9b08      	ldr	r3, [sp, #32]
 8023936:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023938:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802393c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802393e:	fb01 220a 	mla	r2, r1, sl, r2
 8023942:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 8023946:	fb09 2901 	mla	r9, r9, r1, r2
 802394a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802394c:	883b      	ldrh	r3, [r7, #0]
 802394e:	4342      	muls	r2, r0
 8023950:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023954:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023958:	1c50      	adds	r0, r2, #1
 802395a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802395e:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8023962:	ea4c 0c09 	orr.w	ip, ip, r9
 8023966:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802396a:	1219      	asrs	r1, r3, #8
 802396c:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8023970:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8023974:	b2c0      	uxtb	r0, r0
 8023976:	fb12 f205 	smulbb	r2, r2, r5
 802397a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802397e:	fb01 2100 	mla	r1, r1, r0, r2
 8023982:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8023986:	10da      	asrs	r2, r3, #3
 8023988:	fa5f fc8c 	uxtb.w	ip, ip
 802398c:	00db      	lsls	r3, r3, #3
 802398e:	fb1c fc05 	smulbb	ip, ip, r5
 8023992:	b2db      	uxtb	r3, r3
 8023994:	b289      	uxth	r1, r1
 8023996:	fb03 c300 	mla	r3, r3, r0, ip
 802399a:	fa1f fc83 	uxth.w	ip, r3
 802399e:	1c4b      	adds	r3, r1, #1
 80239a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80239a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80239a8:	fb1e fe05 	smulbb	lr, lr, r5
 80239ac:	f10c 0301 	add.w	r3, ip, #1
 80239b0:	fb02 e200 	mla	r2, r2, r0, lr
 80239b4:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80239b8:	b292      	uxth	r2, r2
 80239ba:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80239be:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80239c2:	430b      	orrs	r3, r1
 80239c4:	1c51      	adds	r1, r2, #1
 80239c6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80239ca:	0952      	lsrs	r2, r2, #5
 80239cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80239d0:	4313      	orrs	r3, r2
 80239d2:	803b      	strh	r3, [r7, #0]
 80239d4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239d6:	441c      	add	r4, r3
 80239d8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239da:	441e      	add	r6, r3
 80239dc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80239de:	3b01      	subs	r3, #1
 80239e0:	3702      	adds	r7, #2
 80239e2:	9318      	str	r3, [sp, #96]	; 0x60
 80239e4:	e698      	b.n	8023718 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80239e6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80239e8:	441c      	add	r4, r3
 80239ea:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80239ec:	441e      	add	r6, r3
 80239ee:	9b07      	ldr	r3, [sp, #28]
 80239f0:	3b01      	subs	r3, #1
 80239f2:	9307      	str	r3, [sp, #28]
 80239f4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80239f6:	3302      	adds	r3, #2
 80239f8:	930a      	str	r3, [sp, #40]	; 0x28
 80239fa:	e66d      	b.n	80236d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80239fc:	d023      	beq.n	8023a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 80239fe:	9b07      	ldr	r3, [sp, #28]
 8023a00:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8023a02:	3b01      	subs	r3, #1
 8023a04:	fb00 4003 	mla	r0, r0, r3, r4
 8023a08:	1400      	asrs	r0, r0, #16
 8023a0a:	f53f ae82 	bmi.w	8023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a0e:	3901      	subs	r1, #1
 8023a10:	4288      	cmp	r0, r1
 8023a12:	f6bf ae7e 	bge.w	8023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a16:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8023a18:	fb01 6303 	mla	r3, r1, r3, r6
 8023a1c:	141b      	asrs	r3, r3, #16
 8023a1e:	f53f ae78 	bmi.w	8023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a22:	3a01      	subs	r2, #1
 8023a24:	4293      	cmp	r3, r2
 8023a26:	f6bf ae74 	bge.w	8023712 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023a2a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023a2e:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8023a32:	f1bb 0f00 	cmp.w	fp, #0
 8023a36:	dc6c      	bgt.n	8023b12 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023a38:	9b07      	ldr	r3, [sp, #28]
 8023a3a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023a3e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023a40:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023a44:	930a      	str	r3, [sp, #40]	; 0x28
 8023a46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023a48:	2b00      	cmp	r3, #0
 8023a4a:	f340 81b3 	ble.w	8023db4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023a4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023a52:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023a56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023a5a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023a60:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023a64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023a68:	eef0 6a62 	vmov.f32	s13, s5
 8023a6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023a70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023a74:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023a78:	ee16 4a90 	vmov	r4, s13
 8023a7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023a80:	eef0 6a43 	vmov.f32	s13, s6
 8023a84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023a88:	ee12 2a90 	vmov	r2, s5
 8023a8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023a90:	fb92 f3f3 	sdiv	r3, r2, r3
 8023a94:	ee13 2a10 	vmov	r2, s6
 8023a98:	9329      	str	r3, [sp, #164]	; 0xa4
 8023a9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023a9c:	fb92 f3f3 	sdiv	r3, r2, r3
 8023aa0:	932a      	str	r3, [sp, #168]	; 0xa8
 8023aa2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8023aa4:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8023aa6:	3b01      	subs	r3, #1
 8023aa8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023aac:	9317      	str	r3, [sp, #92]	; 0x5c
 8023aae:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8023ab0:	bf08      	it	eq
 8023ab2:	4613      	moveq	r3, r2
 8023ab4:	ee16 6a90 	vmov	r6, s13
 8023ab8:	9307      	str	r3, [sp, #28]
 8023aba:	eeb0 3a67 	vmov.f32	s6, s15
 8023abe:	eef0 2a47 	vmov.f32	s5, s14
 8023ac2:	e5fb      	b.n	80236bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023ac4:	2900      	cmp	r1, #0
 8023ac6:	f43f ae6b 	beq.w	80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023aca:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023ace:	9308      	str	r3, [sp, #32]
 8023ad0:	0e1b      	lsrs	r3, r3, #24
 8023ad2:	9311      	str	r3, [sp, #68]	; 0x44
 8023ad4:	e664      	b.n	80237a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023ad6:	f112 0801 	adds.w	r8, r2, #1
 8023ada:	f53f af7b 	bmi.w	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ade:	4543      	cmp	r3, r8
 8023ae0:	f6ff af78 	blt.w	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023ae4:	f11c 0801 	adds.w	r8, ip, #1
 8023ae8:	f53f af74 	bmi.w	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023aec:	45c6      	cmp	lr, r8
 8023aee:	f6ff af71 	blt.w	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023af2:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8023af4:	9201      	str	r2, [sp, #4]
 8023af6:	fa0f f28e 	sxth.w	r2, lr
 8023afa:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023afe:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023b02:	9200      	str	r2, [sp, #0]
 8023b04:	b21b      	sxth	r3, r3
 8023b06:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023b08:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8023b0a:	4639      	mov	r1, r7
 8023b0c:	f7ff fc79 	bl	8023402 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023b10:	e760      	b.n	80239d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023b12:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8023b14:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8023b16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023b1a:	1427      	asrs	r7, r4, #16
 8023b1c:	1433      	asrs	r3, r6, #16
 8023b1e:	fb01 7303 	mla	r3, r1, r3, r7
 8023b22:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023b26:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023b2a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023b2e:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023b32:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023b36:	2a00      	cmp	r2, #0
 8023b38:	f000 8133 	beq.w	8023da2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023b3c:	687d      	ldr	r5, [r7, #4]
 8023b3e:	950e      	str	r5, [sp, #56]	; 0x38
 8023b40:	0e2d      	lsrs	r5, r5, #24
 8023b42:	9515      	str	r5, [sp, #84]	; 0x54
 8023b44:	b178      	cbz	r0, 8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b46:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 8023b4a:	3901      	subs	r1, #1
 8023b4c:	0089      	lsls	r1, r1, #2
 8023b4e:	3104      	adds	r1, #4
 8023b50:	eb07 0e01 	add.w	lr, r7, r1
 8023b54:	5879      	ldr	r1, [r7, r1]
 8023b56:	9109      	str	r1, [sp, #36]	; 0x24
 8023b58:	0e09      	lsrs	r1, r1, #24
 8023b5a:	9112      	str	r1, [sp, #72]	; 0x48
 8023b5c:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023b60:	910f      	str	r1, [sp, #60]	; 0x3c
 8023b62:	0e09      	lsrs	r1, r1, #24
 8023b64:	9116      	str	r1, [sp, #88]	; 0x58
 8023b66:	b292      	uxth	r2, r2
 8023b68:	b280      	uxth	r0, r0
 8023b6a:	fb02 f800 	mul.w	r8, r2, r0
 8023b6e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8023b72:	0112      	lsls	r2, r2, #4
 8023b74:	eba2 0e08 	sub.w	lr, r2, r8
 8023b78:	b280      	uxth	r0, r0
 8023b7a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8023b7e:	9915      	ldr	r1, [sp, #84]	; 0x54
 8023b80:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b82:	fa1f fe8e 	uxth.w	lr, lr
 8023b86:	1a12      	subs	r2, r2, r0
 8023b88:	b292      	uxth	r2, r2
 8023b8a:	fb0e f101 	mul.w	r1, lr, r1
 8023b8e:	fb02 110c 	mla	r1, r2, ip, r1
 8023b92:	fb00 1105 	mla	r1, r0, r5, r1
 8023b96:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023b98:	fb08 1105 	mla	r1, r8, r5, r1
 8023b9c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023ba0:	2900      	cmp	r1, #0
 8023ba2:	f000 80f5 	beq.w	8023d90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 8023ba6:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8023baa:	d019      	beq.n	8023be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023bac:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8023bb0:	fb0c fa0a 	mul.w	sl, ip, sl
 8023bb4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023bb8:	fb0c fc03 	mul.w	ip, ip, r3
 8023bbc:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023bc0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bc4:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8023bc8:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8023bcc:	4453      	add	r3, sl
 8023bce:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023bd2:	0a1b      	lsrs	r3, r3, #8
 8023bd4:	0a3f      	lsrs	r7, r7, #8
 8023bd6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8023bda:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8023bde:	433b      	orrs	r3, r7
 8023be0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023be2:	2dff      	cmp	r5, #255	; 0xff
 8023be4:	d020      	beq.n	8023c28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023be6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023be8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023bec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bee:	436f      	muls	r7, r5
 8023bf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023bf2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023bf6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8023bf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023bfc:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c00:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c08:	44bc      	add	ip, r7
 8023c0a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c0e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c16:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c1e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c22:	ea4c 050a 	orr.w	r5, ip, sl
 8023c26:	950e      	str	r5, [sp, #56]	; 0x38
 8023c28:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c2a:	2dff      	cmp	r5, #255	; 0xff
 8023c2c:	d020      	beq.n	8023c70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023c2e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c30:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c34:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c36:	436f      	muls	r7, r5
 8023c38:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023c3a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c3e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023c40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c44:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c48:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c4c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c50:	44bc      	add	ip, r7
 8023c52:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c56:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023c5a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023c62:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c66:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023c6a:	ea4c 050a 	orr.w	r5, ip, sl
 8023c6e:	9509      	str	r5, [sp, #36]	; 0x24
 8023c70:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c72:	2dff      	cmp	r5, #255	; 0xff
 8023c74:	d020      	beq.n	8023cb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 8023c76:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c78:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023c7c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c7e:	436f      	muls	r7, r5
 8023c80:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023c82:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8023c86:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023c88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023c8c:	fb05 fa0a 	mul.w	sl, r5, sl
 8023c90:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8023c94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023c98:	44bc      	add	ip, r7
 8023c9a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8023c9e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023ca2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ca6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023caa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8023cae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023cb2:	ea4c 050a 	orr.w	r5, ip, sl
 8023cb6:	950f      	str	r5, [sp, #60]	; 0x3c
 8023cb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023cba:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8023cbe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8023cc0:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8023cc4:	fb0e f707 	mul.w	r7, lr, r7
 8023cc8:	fb02 770c 	mla	r7, r2, ip, r7
 8023ccc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cd0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8023cd2:	fb00 770c 	mla	r7, r0, ip, r7
 8023cd6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023cda:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8023cdc:	fb08 770c 	mla	r7, r8, ip, r7
 8023ce0:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8023ce4:	fb0e fe0c 	mul.w	lr, lr, ip
 8023ce8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8023cec:	fb02 e303 	mla	r3, r2, r3, lr
 8023cf0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8023cf2:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8023cf4:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8023cf8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023cfa:	fb00 330a 	mla	r3, r0, sl, r3
 8023cfe:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8023d02:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023d06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8023d08:	f8b9 0000 	ldrh.w	r0, [r9]
 8023d0c:	4359      	muls	r1, r3
 8023d0e:	0a3f      	lsrs	r7, r7, #8
 8023d10:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023d14:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8023d18:	1c4b      	adds	r3, r1, #1
 8023d1a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8023d1e:	ea47 070c 	orr.w	r7, r7, ip
 8023d22:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023d26:	1202      	asrs	r2, r0, #8
 8023d28:	0c3b      	lsrs	r3, r7, #16
 8023d2a:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023d2e:	b2c9      	uxtb	r1, r1
 8023d30:	fb13 f305 	smulbb	r3, r3, r5
 8023d34:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8023d38:	fb02 3201 	mla	r2, r2, r1, r3
 8023d3c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023d40:	10c3      	asrs	r3, r0, #3
 8023d42:	b2ff      	uxtb	r7, r7
 8023d44:	00c0      	lsls	r0, r0, #3
 8023d46:	b2c0      	uxtb	r0, r0
 8023d48:	fb17 f705 	smulbb	r7, r7, r5
 8023d4c:	fb00 7001 	mla	r0, r0, r1, r7
 8023d50:	b292      	uxth	r2, r2
 8023d52:	fb1c fc05 	smulbb	ip, ip, r5
 8023d56:	b280      	uxth	r0, r0
 8023d58:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8023d5c:	fb03 c301 	mla	r3, r3, r1, ip
 8023d60:	1c51      	adds	r1, r2, #1
 8023d62:	f100 0c01 	add.w	ip, r0, #1
 8023d66:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023d6a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023d6e:	b29b      	uxth	r3, r3
 8023d70:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023d74:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8023d78:	ea4c 0202 	orr.w	r2, ip, r2
 8023d7c:	f103 0c01 	add.w	ip, r3, #1
 8023d80:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023d84:	095b      	lsrs	r3, r3, #5
 8023d86:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8023d8a:	431a      	orrs	r2, r3
 8023d8c:	f8a9 2000 	strh.w	r2, [r9]
 8023d90:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8023d92:	441c      	add	r4, r3
 8023d94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8023d96:	f109 0902 	add.w	r9, r9, #2
 8023d9a:	441e      	add	r6, r3
 8023d9c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023da0:	e647      	b.n	8023a32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023da2:	2800      	cmp	r0, #0
 8023da4:	f43f aedf 	beq.w	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023da8:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023dac:	9109      	str	r1, [sp, #36]	; 0x24
 8023dae:	0e09      	lsrs	r1, r1, #24
 8023db0:	9112      	str	r1, [sp, #72]	; 0x48
 8023db2:	e6d8      	b.n	8023b66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023db4:	b01d      	add	sp, #116	; 0x74
 8023db6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023dba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023dba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dbe:	b085      	sub	sp, #20
 8023dc0:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 8023dc4:	9102      	str	r1, [sp, #8]
 8023dc6:	2c00      	cmp	r4, #0
 8023dc8:	fb04 7103 	mla	r1, r4, r3, r7
 8023dcc:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8023dd0:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8023dd4:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8023dd8:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023ddc:	f2c0 810c 	blt.w	8023ff8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023de0:	45a6      	cmp	lr, r4
 8023de2:	f340 8109 	ble.w	8023ff8 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023de6:	2f00      	cmp	r7, #0
 8023de8:	f2c0 8104 	blt.w	8023ff4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023dec:	42bb      	cmp	r3, r7
 8023dee:	f340 8101 	ble.w	8023ff4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023df2:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023df6:	1c7a      	adds	r2, r7, #1
 8023df8:	f100 8101 	bmi.w	8023ffe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023dfc:	4293      	cmp	r3, r2
 8023dfe:	f340 80fe 	ble.w	8023ffe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023e02:	2e00      	cmp	r6, #0
 8023e04:	f000 80fd 	beq.w	8024002 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023e08:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023e0c:	3401      	adds	r4, #1
 8023e0e:	f100 80fc 	bmi.w	802400a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e12:	45a6      	cmp	lr, r4
 8023e14:	f340 80f9 	ble.w	802400a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023e18:	2800      	cmp	r0, #0
 8023e1a:	f000 80f9 	beq.w	8024010 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023e1e:	2f00      	cmp	r7, #0
 8023e20:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023e24:	f2c0 80ef 	blt.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e28:	42bb      	cmp	r3, r7
 8023e2a:	f340 80ec 	ble.w	8024006 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023e2e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023e32:	3701      	adds	r7, #1
 8023e34:	f100 80ef 	bmi.w	8024016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e38:	42bb      	cmp	r3, r7
 8023e3a:	f340 80ec 	ble.w	8024016 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023e3e:	2e00      	cmp	r6, #0
 8023e40:	f000 80eb 	beq.w	802401a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023e44:	6852      	ldr	r2, [r2, #4]
 8023e46:	b2b6      	uxth	r6, r6
 8023e48:	b280      	uxth	r0, r0
 8023e4a:	fb00 fe06 	mul.w	lr, r0, r6
 8023e4e:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023e52:	0136      	lsls	r6, r6, #4
 8023e54:	eba6 070e 	sub.w	r7, r6, lr
 8023e58:	b280      	uxth	r0, r0
 8023e5a:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 8023e5e:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023e62:	b2bf      	uxth	r7, r7
 8023e64:	1a1b      	subs	r3, r3, r0
 8023e66:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023e6a:	b29b      	uxth	r3, r3
 8023e6c:	fb07 f60a 	mul.w	r6, r7, sl
 8023e70:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023e74:	fb0b 6603 	mla	r6, fp, r3, r6
 8023e78:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023e7c:	fb00 6609 	mla	r6, r0, r9, r6
 8023e80:	fb0e 6608 	mla	r6, lr, r8, r6
 8023e84:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023e88:	9600      	str	r6, [sp, #0]
 8023e8a:	2e00      	cmp	r6, #0
 8023e8c:	f000 80af 	beq.w	8023fee <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023e90:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8023e94:	fb0b fc0c 	mul.w	ip, fp, ip
 8023e98:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8023e9c:	fb0b f505 	mul.w	r5, fp, r5
 8023ea0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023ea4:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8023ea8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023eac:	44dc      	add	ip, fp
 8023eae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023eb2:	9501      	str	r5, [sp, #4]
 8023eb4:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8023eb8:	9503      	str	r5, [sp, #12]
 8023eba:	9d01      	ldr	r5, [sp, #4]
 8023ebc:	9e02      	ldr	r6, [sp, #8]
 8023ebe:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8023ec2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023ec6:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8023eca:	fb0a fc0c 	mul.w	ip, sl, ip
 8023ece:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023ed2:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023ed6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023eda:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023ede:	4465      	add	r5, ip
 8023ee0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8023ee4:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8023ee8:	fb09 fc0c 	mul.w	ip, r9, ip
 8023eec:	fb09 f904 	mul.w	r9, r9, r4
 8023ef0:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8023ef4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023ef8:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 8023efc:	fb08 f404 	mul.w	r4, r8, r4
 8023f00:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023f04:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8023f08:	fb08 f802 	mul.w	r8, r8, r2
 8023f0c:	fb0a fa01 	mul.w	sl, sl, r1
 8023f10:	0a22      	lsrs	r2, r4, #8
 8023f12:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 8023f16:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8023f1a:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 8023f1e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023f22:	4414      	add	r4, r2
 8023f24:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023f28:	f508 7280 	add.w	r2, r8, #256	; 0x100
 8023f2c:	0a2d      	lsrs	r5, r5, #8
 8023f2e:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023f32:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8023f36:	9a03      	ldr	r2, [sp, #12]
 8023f38:	8836      	ldrh	r6, [r6, #0]
 8023f3a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f3e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8023f42:	437d      	muls	r5, r7
 8023f44:	4461      	add	r1, ip
 8023f46:	0a24      	lsrs	r4, r4, #8
 8023f48:	fb02 5503 	mla	r5, r2, r3, r5
 8023f4c:	0a09      	lsrs	r1, r1, #8
 8023f4e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8023f52:	fb04 540e 	mla	r4, r4, lr, r5
 8023f56:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 8023f5a:	fb01 4100 	mla	r1, r1, r0, r4
 8023f5e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f62:	0a09      	lsrs	r1, r1, #8
 8023f64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8023f68:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 8023f6c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023f70:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8023f74:	fb07 f70a 	mul.w	r7, r7, sl
 8023f78:	fb03 7101 	mla	r1, r3, r1, r7
 8023f7c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023f80:	9b00      	ldr	r3, [sp, #0]
 8023f82:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8023f86:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023f8a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 8023f8e:	fb00 e101 	mla	r1, r0, r1, lr
 8023f92:	43da      	mvns	r2, r3
 8023f94:	1233      	asrs	r3, r6, #8
 8023f96:	b2d2      	uxtb	r2, r2
 8023f98:	10f0      	asrs	r0, r6, #3
 8023f9a:	0a09      	lsrs	r1, r1, #8
 8023f9c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8023fa0:	00f6      	lsls	r6, r6, #3
 8023fa2:	4353      	muls	r3, r2
 8023fa4:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8023fa8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8023fac:	b2f6      	uxtb	r6, r6
 8023fae:	4321      	orrs	r1, r4
 8023fb0:	4350      	muls	r0, r2
 8023fb2:	4356      	muls	r6, r2
 8023fb4:	1c5a      	adds	r2, r3, #1
 8023fb6:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023fba:	0c0b      	lsrs	r3, r1, #16
 8023fbc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023fc0:	1c42      	adds	r2, r0, #1
 8023fc2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023fc6:	0a0a      	lsrs	r2, r1, #8
 8023fc8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023fcc:	021b      	lsls	r3, r3, #8
 8023fce:	00d2      	lsls	r2, r2, #3
 8023fd0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023fd4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8023fd8:	4313      	orrs	r3, r2
 8023fda:	1c72      	adds	r2, r6, #1
 8023fdc:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023fe0:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023fe4:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023fe8:	4319      	orrs	r1, r3
 8023fea:	9b02      	ldr	r3, [sp, #8]
 8023fec:	8019      	strh	r1, [r3, #0]
 8023fee:	b005      	add	sp, #20
 8023ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023ff4:	2500      	movs	r5, #0
 8023ff6:	e6fe      	b.n	8023df6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023ff8:	2100      	movs	r1, #0
 8023ffa:	460d      	mov	r5, r1
 8023ffc:	e706      	b.n	8023e0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023ffe:	2100      	movs	r1, #0
 8024000:	e704      	b.n	8023e0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024002:	4631      	mov	r1, r6
 8024004:	e702      	b.n	8023e0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8024006:	2400      	movs	r4, #0
 8024008:	e713      	b.n	8023e32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802400a:	2200      	movs	r2, #0
 802400c:	4614      	mov	r4, r2
 802400e:	e71a      	b.n	8023e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024010:	4602      	mov	r2, r0
 8024012:	4604      	mov	r4, r0
 8024014:	e717      	b.n	8023e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8024016:	2200      	movs	r2, #0
 8024018:	e715      	b.n	8023e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802401a:	4632      	mov	r2, r6
 802401c:	e713      	b.n	8023e46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08024020 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024024:	b09b      	sub	sp, #108	; 0x6c
 8024026:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802402a:	9218      	str	r2, [sp, #96]	; 0x60
 802402c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802402e:	9116      	str	r1, [sp, #88]	; 0x58
 8024030:	9307      	str	r3, [sp, #28]
 8024032:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8024036:	9019      	str	r0, [sp, #100]	; 0x64
 8024038:	6850      	ldr	r0, [r2, #4]
 802403a:	6812      	ldr	r2, [r2, #0]
 802403c:	fb00 1303 	mla	r3, r0, r3, r1
 8024040:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8024044:	930a      	str	r3, [sp, #40]	; 0x28
 8024046:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8024048:	681b      	ldr	r3, [r3, #0]
 802404a:	930f      	str	r3, [sp, #60]	; 0x3c
 802404c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802404e:	2b00      	cmp	r3, #0
 8024050:	dc03      	bgt.n	802405a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024052:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8024054:	2b00      	cmp	r3, #0
 8024056:	f340 8386 	ble.w	8024766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802405a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802405c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024060:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024064:	1e48      	subs	r0, r1, #1
 8024066:	1e57      	subs	r7, r2, #1
 8024068:	9b07      	ldr	r3, [sp, #28]
 802406a:	2b00      	cmp	r3, #0
 802406c:	f340 8166 	ble.w	802433c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8024070:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8024074:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024078:	d406      	bmi.n	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802407a:	4584      	cmp	ip, r0
 802407c:	da04      	bge.n	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802407e:	2b00      	cmp	r3, #0
 8024080:	db02      	blt.n	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8024082:	42bb      	cmp	r3, r7
 8024084:	f2c0 815b 	blt.w	802433e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8024088:	f11c 0c01 	adds.w	ip, ip, #1
 802408c:	f100 814b 	bmi.w	8024326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024090:	4561      	cmp	r1, ip
 8024092:	f2c0 8148 	blt.w	8024326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8024096:	3301      	adds	r3, #1
 8024098:	f100 8145 	bmi.w	8024326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802409c:	429a      	cmp	r2, r3
 802409e:	f2c0 8142 	blt.w	8024326 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80240a2:	9b07      	ldr	r3, [sp, #28]
 80240a4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80240a6:	9317      	str	r3, [sp, #92]	; 0x5c
 80240a8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80240aa:	2b00      	cmp	r3, #0
 80240ac:	f340 8165 	ble.w	802437a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80240b0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80240b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80240b4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80240b8:	689b      	ldr	r3, [r3, #8]
 80240ba:	1422      	asrs	r2, r4, #16
 80240bc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80240c0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 80240c4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80240c8:	f100 81d5 	bmi.w	8024476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240cc:	f103 38ff 	add.w	r8, r3, #4294967295
 80240d0:	4542      	cmp	r2, r8
 80240d2:	f280 81d0 	bge.w	8024476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240d6:	f1bc 0f00 	cmp.w	ip, #0
 80240da:	f2c0 81cc 	blt.w	8024476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240de:	f10e 38ff 	add.w	r8, lr, #4294967295
 80240e2:	45c4      	cmp	ip, r8
 80240e4:	f280 81c7 	bge.w	8024476 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 80240e8:	b21b      	sxth	r3, r3
 80240ea:	fb0c 2203 	mla	r2, ip, r3, r2
 80240ee:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80240f0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80240f4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80240f8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80240fc:	2900      	cmp	r1, #0
 80240fe:	f000 8182 	beq.w	8024406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8024102:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8024106:	950b      	str	r5, [sp, #44]	; 0x2c
 8024108:	0e2d      	lsrs	r5, r5, #24
 802410a:	9512      	str	r5, [sp, #72]	; 0x48
 802410c:	b180      	cbz	r0, 8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802410e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8024112:	3b01      	subs	r3, #1
 8024114:	009b      	lsls	r3, r3, #2
 8024116:	3304      	adds	r3, #4
 8024118:	eb08 0c03 	add.w	ip, r8, r3
 802411c:	f858 3003 	ldr.w	r3, [r8, r3]
 8024120:	9308      	str	r3, [sp, #32]
 8024122:	0e1b      	lsrs	r3, r3, #24
 8024124:	9310      	str	r3, [sp, #64]	; 0x40
 8024126:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802412a:	930c      	str	r3, [sp, #48]	; 0x30
 802412c:	0e1b      	lsrs	r3, r3, #24
 802412e:	9313      	str	r3, [sp, #76]	; 0x4c
 8024130:	b289      	uxth	r1, r1
 8024132:	b280      	uxth	r0, r0
 8024134:	fb01 f900 	mul.w	r9, r1, r0
 8024138:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802413c:	0109      	lsls	r1, r1, #4
 802413e:	eba1 0809 	sub.w	r8, r1, r9
 8024142:	b280      	uxth	r0, r0
 8024144:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8024148:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802414a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802414c:	fa1f f888 	uxth.w	r8, r8
 8024150:	1a09      	subs	r1, r1, r0
 8024152:	b289      	uxth	r1, r1
 8024154:	fb08 f303 	mul.w	r3, r8, r3
 8024158:	fb01 330e 	mla	r3, r1, lr, r3
 802415c:	fb00 3305 	mla	r3, r0, r5, r3
 8024160:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024162:	fb09 3305 	mla	r3, r9, r5, r3
 8024166:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802416a:	2b00      	cmp	r3, #0
 802416c:	f000 80d2 	beq.w	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024170:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8024174:	d01b      	beq.n	80241ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8024176:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802417a:	fb0e fa0a 	mul.w	sl, lr, sl
 802417e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8024182:	fb0e fe02 	mul.w	lr, lr, r2
 8024186:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802418a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802418e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024192:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8024196:	4452      	add	r2, sl
 8024198:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802419c:	0a12      	lsrs	r2, r2, #8
 802419e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80241a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80241a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80241aa:	ea42 020c 	orr.w	r2, r2, ip
 80241ae:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241b0:	2dff      	cmp	r5, #255	; 0xff
 80241b2:	d021      	beq.n	80241f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80241b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80241ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241bc:	fb05 fb0b 	mul.w	fp, r5, fp
 80241c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80241c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80241c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80241c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80241cc:	fb05 fa0a 	mul.w	sl, r5, sl
 80241d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80241d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80241dc:	44de      	add	lr, fp
 80241de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80241e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80241e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80241ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80241ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80241f2:	ea4e 050a 	orr.w	r5, lr, sl
 80241f6:	950b      	str	r5, [sp, #44]	; 0x2c
 80241f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80241fa:	2dff      	cmp	r5, #255	; 0xff
 80241fc:	d021      	beq.n	8024242 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80241fe:	9d08      	ldr	r5, [sp, #32]
 8024200:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8024204:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024206:	fb05 fb0b 	mul.w	fp, r5, fp
 802420a:	9d08      	ldr	r5, [sp, #32]
 802420c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8024210:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024212:	fb05 fa0e 	mul.w	sl, r5, lr
 8024216:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802421a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802421e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8024222:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024226:	44de      	add	lr, fp
 8024228:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802422c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8024230:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024234:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024238:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802423c:	ea4e 050a 	orr.w	r5, lr, sl
 8024240:	9508      	str	r5, [sp, #32]
 8024242:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024244:	2dff      	cmp	r5, #255	; 0xff
 8024246:	d021      	beq.n	802428c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8024248:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802424a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802424e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8024250:	fb05 fb0b 	mul.w	fp, r5, fp
 8024254:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8024256:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802425a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802425c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8024260:	fb05 fa0a 	mul.w	sl, r5, sl
 8024264:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024268:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802426c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8024270:	44de      	add	lr, fp
 8024272:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8024276:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802427a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802427e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8024282:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024286:	ea4e 050a 	orr.w	r5, lr, sl
 802428a:	950c      	str	r5, [sp, #48]	; 0x30
 802428c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802428e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024292:	9d08      	ldr	r5, [sp, #32]
 8024294:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8024298:	fb08 fc0c 	mul.w	ip, r8, ip
 802429c:	fb01 cc0e 	mla	ip, r1, lr, ip
 80242a0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80242a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80242a6:	fb00 cc0e 	mla	ip, r0, lr, ip
 80242aa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80242ae:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80242b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 80242b4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 80242b8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80242bc:	fb08 f80e 	mul.w	r8, r8, lr
 80242c0:	fb01 8202 	mla	r2, r1, r2, r8
 80242c4:	9908      	ldr	r1, [sp, #32]
 80242c6:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80242ca:	990c      	ldr	r1, [sp, #48]	; 0x30
 80242cc:	fb00 220a 	mla	r2, r0, sl, r2
 80242d0:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 80242d4:	fb09 2900 	mla	r9, r9, r0, r2
 80242d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80242dc:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80242e0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80242e4:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80242e8:	ea4c 0c09 	orr.w	ip, ip, r9
 80242ec:	2bff      	cmp	r3, #255	; 0xff
 80242ee:	ea4f 221c 	mov.w	r2, ip, lsr #8
 80242f2:	f040 8091 	bne.w	8024418 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 80242f6:	ea4f 135c 	mov.w	r3, ip, lsr #5
 80242fa:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 80242fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024302:	f022 0207 	bic.w	r2, r2, #7
 8024306:	431a      	orrs	r2, r3
 8024308:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802430c:	ea4c 0c02 	orr.w	ip, ip, r2
 8024310:	f8a7 c000 	strh.w	ip, [r7]
 8024314:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024316:	441c      	add	r4, r3
 8024318:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802431a:	441e      	add	r6, r3
 802431c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802431e:	3b01      	subs	r3, #1
 8024320:	3702      	adds	r7, #2
 8024322:	9317      	str	r3, [sp, #92]	; 0x5c
 8024324:	e6c0      	b.n	80240a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8024326:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8024328:	441c      	add	r4, r3
 802432a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802432c:	441e      	add	r6, r3
 802432e:	9b07      	ldr	r3, [sp, #28]
 8024330:	3b01      	subs	r3, #1
 8024332:	9307      	str	r3, [sp, #28]
 8024334:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024336:	3302      	adds	r3, #2
 8024338:	930a      	str	r3, [sp, #40]	; 0x28
 802433a:	e695      	b.n	8024068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802433c:	d024      	beq.n	8024388 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802433e:	9b07      	ldr	r3, [sp, #28]
 8024340:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8024342:	3b01      	subs	r3, #1
 8024344:	fb00 4003 	mla	r0, r0, r3, r4
 8024348:	1400      	asrs	r0, r0, #16
 802434a:	f53f aeaa 	bmi.w	80240a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802434e:	3901      	subs	r1, #1
 8024350:	4288      	cmp	r0, r1
 8024352:	f6bf aea6 	bge.w	80240a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024356:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8024358:	fb01 6303 	mla	r3, r1, r3, r6
 802435c:	141b      	asrs	r3, r3, #16
 802435e:	f53f aea0 	bmi.w	80240a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8024362:	3a01      	subs	r2, #1
 8024364:	4293      	cmp	r3, r2
 8024366:	f6bf ae9c 	bge.w	80240a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802436a:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802436e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8024372:	f1bb 0f00 	cmp.w	fp, #0
 8024376:	f300 809a 	bgt.w	80244ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802437a:	9b07      	ldr	r3, [sp, #28]
 802437c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024380:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024382:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8024386:	930a      	str	r3, [sp, #40]	; 0x28
 8024388:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802438a:	2b00      	cmp	r3, #0
 802438c:	f340 81eb 	ble.w	8024766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024390:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024394:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024398:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802439c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802439e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80243a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243aa:	eef0 6a62 	vmov.f32	s13, s5
 80243ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80243b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80243ba:	ee16 4a90 	vmov	r4, s13
 80243be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80243c2:	eef0 6a43 	vmov.f32	s13, s6
 80243c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80243ca:	ee12 2a90 	vmov	r2, s5
 80243ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80243d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80243d6:	ee13 2a10 	vmov	r2, s6
 80243da:	9327      	str	r3, [sp, #156]	; 0x9c
 80243dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243de:	fb92 f3f3 	sdiv	r3, r2, r3
 80243e2:	9328      	str	r3, [sp, #160]	; 0xa0
 80243e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80243e6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80243e8:	3b01      	subs	r3, #1
 80243ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243ee:	9316      	str	r3, [sp, #88]	; 0x58
 80243f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80243f2:	bf08      	it	eq
 80243f4:	4613      	moveq	r3, r2
 80243f6:	ee16 6a90 	vmov	r6, s13
 80243fa:	9307      	str	r3, [sp, #28]
 80243fc:	eeb0 3a67 	vmov.f32	s6, s15
 8024400:	eef0 2a47 	vmov.f32	s5, s14
 8024404:	e622      	b.n	802404c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8024406:	2800      	cmp	r0, #0
 8024408:	f43f ae92 	beq.w	8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802440c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024410:	9308      	str	r3, [sp, #32]
 8024412:	0e1b      	lsrs	r3, r3, #24
 8024414:	9310      	str	r3, [sp, #64]	; 0x40
 8024416:	e68b      	b.n	8024130 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024418:	8839      	ldrh	r1, [r7, #0]
 802441a:	4dd4      	ldr	r5, [pc, #848]	; (802476c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802441c:	43db      	mvns	r3, r3
 802441e:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024422:	fa5f f883 	uxtb.w	r8, r3
 8024426:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802442a:	fb0e fe08 	mul.w	lr, lr, r8
 802442e:	10c8      	asrs	r0, r1, #3
 8024430:	00cb      	lsls	r3, r1, #3
 8024432:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024436:	f10e 0101 	add.w	r1, lr, #1
 802443a:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802443e:	fb00 f008 	mul.w	r0, r0, r8
 8024442:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8024446:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802444a:	f100 0e01 	add.w	lr, r0, #1
 802444e:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8024452:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8024456:	b2db      	uxtb	r3, r3
 8024458:	b2c9      	uxtb	r1, r1
 802445a:	00d2      	lsls	r2, r2, #3
 802445c:	fb03 f308 	mul.w	r3, r3, r8
 8024460:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8024464:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024468:	430a      	orrs	r2, r1
 802446a:	1c59      	adds	r1, r3, #1
 802446c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8024470:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024474:	e748      	b.n	8024308 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8024476:	f112 0801 	adds.w	r8, r2, #1
 802447a:	f53f af4b 	bmi.w	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802447e:	4543      	cmp	r3, r8
 8024480:	f6ff af48 	blt.w	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024484:	f11c 0801 	adds.w	r8, ip, #1
 8024488:	f53f af44 	bmi.w	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802448c:	45c6      	cmp	lr, r8
 802448e:	f6ff af41 	blt.w	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024492:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8024496:	fa0f f28e 	sxth.w	r2, lr
 802449a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802449e:	9200      	str	r2, [sp, #0]
 80244a0:	b21b      	sxth	r3, r3
 80244a2:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80244a4:	9819      	ldr	r0, [sp, #100]	; 0x64
 80244a6:	4639      	mov	r1, r7
 80244a8:	f7ff fc87 	bl	8023dba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80244ac:	e732      	b.n	8024314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80244ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80244b0:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80244b2:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 80244b6:	1421      	asrs	r1, r4, #16
 80244b8:	1433      	asrs	r3, r6, #16
 80244ba:	fb07 1303 	mla	r3, r7, r3, r1
 80244be:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80244c0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 80244c4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 80244c8:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80244cc:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80244d0:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80244d4:	2a00      	cmp	r2, #0
 80244d6:	f000 8107 	beq.w	80246e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 80244da:	684d      	ldr	r5, [r1, #4]
 80244dc:	950d      	str	r5, [sp, #52]	; 0x34
 80244de:	0e2d      	lsrs	r5, r5, #24
 80244e0:	9514      	str	r5, [sp, #80]	; 0x50
 80244e2:	b178      	cbz	r0, 8024504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80244e4:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 80244e8:	3f01      	subs	r7, #1
 80244ea:	00bf      	lsls	r7, r7, #2
 80244ec:	3704      	adds	r7, #4
 80244ee:	eb01 0e07 	add.w	lr, r1, r7
 80244f2:	59c9      	ldr	r1, [r1, r7]
 80244f4:	9109      	str	r1, [sp, #36]	; 0x24
 80244f6:	0e09      	lsrs	r1, r1, #24
 80244f8:	9111      	str	r1, [sp, #68]	; 0x44
 80244fa:	f8de 1004 	ldr.w	r1, [lr, #4]
 80244fe:	910e      	str	r1, [sp, #56]	; 0x38
 8024500:	0e09      	lsrs	r1, r1, #24
 8024502:	9115      	str	r1, [sp, #84]	; 0x54
 8024504:	b292      	uxth	r2, r2
 8024506:	b280      	uxth	r0, r0
 8024508:	fb02 f900 	mul.w	r9, r2, r0
 802450c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024510:	0112      	lsls	r2, r2, #4
 8024512:	eba2 0e09 	sub.w	lr, r2, r9
 8024516:	b280      	uxth	r0, r0
 8024518:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802451c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802451e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8024520:	fa1f fe8e 	uxth.w	lr, lr
 8024524:	1a09      	subs	r1, r1, r0
 8024526:	b289      	uxth	r1, r1
 8024528:	fb0e f202 	mul.w	r2, lr, r2
 802452c:	fb01 220c 	mla	r2, r1, ip, r2
 8024530:	fb00 2205 	mla	r2, r0, r5, r2
 8024534:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024536:	fb09 2205 	mla	r2, r9, r5, r2
 802453a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802453e:	2a00      	cmp	r2, #0
 8024540:	f000 80c9 	beq.w	80246d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024544:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8024548:	d019      	beq.n	802457e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802454a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802454e:	fb0c fa0a 	mul.w	sl, ip, sl
 8024552:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8024556:	fb0c fc03 	mul.w	ip, ip, r3
 802455a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802455e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024562:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8024566:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802456a:	4453      	add	r3, sl
 802456c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8024570:	0a1b      	lsrs	r3, r3, #8
 8024572:	0a3f      	lsrs	r7, r7, #8
 8024574:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8024578:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802457c:	433b      	orrs	r3, r7
 802457e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024580:	2dff      	cmp	r5, #255	; 0xff
 8024582:	d020      	beq.n	80245c6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8024584:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024586:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802458a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802458c:	436f      	muls	r7, r5
 802458e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024590:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024594:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8024596:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802459a:	fb05 fa0a 	mul.w	sl, r5, sl
 802459e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245a2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245a6:	44bc      	add	ip, r7
 80245a8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245ac:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245b0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80245b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80245c0:	ea4c 050a 	orr.w	r5, ip, sl
 80245c4:	950d      	str	r5, [sp, #52]	; 0x34
 80245c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245c8:	2dff      	cmp	r5, #255	; 0xff
 80245ca:	d020      	beq.n	802460e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 80245cc:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245ce:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80245d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245d4:	436f      	muls	r7, r5
 80245d6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80245d8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80245dc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80245de:	fb05 fa0c 	mul.w	sl, r5, ip
 80245e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80245e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80245ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80245ee:	44bc      	add	ip, r7
 80245f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80245f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80245f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80245fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024600:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024604:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024608:	ea4c 050a 	orr.w	r5, ip, sl
 802460c:	9509      	str	r5, [sp, #36]	; 0x24
 802460e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024610:	2dff      	cmp	r5, #255	; 0xff
 8024612:	d020      	beq.n	8024656 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024614:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024616:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802461a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802461c:	436f      	muls	r7, r5
 802461e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024620:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8024624:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8024626:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802462a:	fb05 fa0a 	mul.w	sl, r5, sl
 802462e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8024632:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8024636:	44bc      	add	ip, r7
 8024638:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802463c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024640:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024644:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024648:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802464c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8024650:	ea4c 050a 	orr.w	r5, ip, sl
 8024654:	950e      	str	r5, [sp, #56]	; 0x38
 8024656:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8024658:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802465c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802465e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8024662:	fb0e f707 	mul.w	r7, lr, r7
 8024666:	fb01 770c 	mla	r7, r1, ip, r7
 802466a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802466e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024670:	fb00 770c 	mla	r7, r0, ip, r7
 8024674:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8024678:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802467a:	fb09 770c 	mla	r7, r9, ip, r7
 802467e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8024682:	fb0e fe0c 	mul.w	lr, lr, ip
 8024686:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802468a:	fb01 e303 	mla	r3, r1, r3, lr
 802468e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8024690:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8024694:	990e      	ldr	r1, [sp, #56]	; 0x38
 8024696:	fb00 330a 	mla	r3, r0, sl, r3
 802469a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802469e:	fb09 3c0c 	mla	ip, r9, ip, r3
 80246a2:	0a3f      	lsrs	r7, r7, #8
 80246a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80246a8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80246ac:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80246b0:	ea47 070c 	orr.w	r7, r7, ip
 80246b4:	2aff      	cmp	r2, #255	; 0xff
 80246b6:	ea4f 2317 	mov.w	r3, r7, lsr #8
 80246ba:	d11e      	bne.n	80246fa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 80246bc:	097a      	lsrs	r2, r7, #5
 80246be:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80246c2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80246c6:	f023 0307 	bic.w	r3, r3, #7
 80246ca:	4313      	orrs	r3, r2
 80246cc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80246d0:	431f      	orrs	r7, r3
 80246d2:	f8a8 7000 	strh.w	r7, [r8]
 80246d6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80246d8:	441c      	add	r4, r3
 80246da:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80246dc:	f108 0802 	add.w	r8, r8, #2
 80246e0:	441e      	add	r6, r3
 80246e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80246e6:	e644      	b.n	8024372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80246e8:	2800      	cmp	r0, #0
 80246ea:	f43f af0b 	beq.w	8024504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246ee:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 80246f2:	9109      	str	r1, [sp, #36]	; 0x24
 80246f4:	0e09      	lsrs	r1, r1, #24
 80246f6:	9111      	str	r1, [sp, #68]	; 0x44
 80246f8:	e704      	b.n	8024504 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80246fa:	f8b8 1000 	ldrh.w	r1, [r8]
 80246fe:	43d2      	mvns	r2, r2
 8024700:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024704:	fa5f fe82 	uxtb.w	lr, r2
 8024708:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802470c:	fb0c fc0e 	mul.w	ip, ip, lr
 8024710:	10c8      	asrs	r0, r1, #3
 8024712:	00ca      	lsls	r2, r1, #3
 8024714:	f10c 0101 	add.w	r1, ip, #1
 8024718:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802471c:	0c39      	lsrs	r1, r7, #16
 802471e:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024722:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024726:	4911      	ldr	r1, [pc, #68]	; (802476c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024728:	fb00 f00e 	mul.w	r0, r0, lr
 802472c:	fa5f fc8c 	uxtb.w	ip, ip
 8024730:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8024734:	b2d2      	uxtb	r2, r2
 8024736:	1c41      	adds	r1, r0, #1
 8024738:	fb02 f20e 	mul.w	r2, r2, lr
 802473c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8024740:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024744:	1c51      	adds	r1, r2, #1
 8024746:	00c0      	lsls	r0, r0, #3
 8024748:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802474c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024750:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8024754:	ea4c 0c00 	orr.w	ip, ip, r0
 8024758:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802475c:	ea47 0c0c 	orr.w	ip, r7, ip
 8024760:	f8a8 c000 	strh.w	ip, [r8]
 8024764:	e7b7      	b.n	80246d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 8024766:	b01b      	add	sp, #108	; 0x6c
 8024768:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802476c:	fffff800 	.word	0xfffff800

08024770 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8024770:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024774:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024778:	2d00      	cmp	r5, #0
 802477a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802477e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024782:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024786:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802478a:	fb05 0e03 	mla	lr, r5, r3, r0
 802478e:	f2c0 808c 	blt.w	80248aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024792:	45a9      	cmp	r9, r5
 8024794:	f340 8089 	ble.w	80248aa <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024798:	2800      	cmp	r0, #0
 802479a:	f2c0 8084 	blt.w	80248a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802479e:	4580      	cmp	r8, r0
 80247a0:	f340 8081 	ble.w	80248a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 80247a4:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80247a8:	f01e 0f01 	tst.w	lr, #1
 80247ac:	5d16      	ldrb	r6, [r2, r4]
 80247ae:	bf0c      	ite	eq
 80247b0:	f006 060f 	andeq.w	r6, r6, #15
 80247b4:	1136      	asrne	r6, r6, #4
 80247b6:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80247ba:	b2f6      	uxtb	r6, r6
 80247bc:	1c44      	adds	r4, r0, #1
 80247be:	d477      	bmi.n	80248b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247c0:	45a0      	cmp	r8, r4
 80247c2:	dd75      	ble.n	80248b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 80247c4:	2f00      	cmp	r7, #0
 80247c6:	d075      	beq.n	80248b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 80247c8:	f10e 0a01 	add.w	sl, lr, #1
 80247cc:	ea4f 045a 	mov.w	r4, sl, lsr #1
 80247d0:	f01a 0f01 	tst.w	sl, #1
 80247d4:	5d14      	ldrb	r4, [r2, r4]
 80247d6:	bf0c      	ite	eq
 80247d8:	f004 040f 	andeq.w	r4, r4, #15
 80247dc:	1124      	asrne	r4, r4, #4
 80247de:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 80247e2:	b2e4      	uxtb	r4, r4
 80247e4:	3501      	adds	r5, #1
 80247e6:	d469      	bmi.n	80248bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247e8:	45a9      	cmp	r9, r5
 80247ea:	dd67      	ble.n	80248bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 80247ec:	f1bc 0f00 	cmp.w	ip, #0
 80247f0:	d067      	beq.n	80248c2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 80247f2:	2800      	cmp	r0, #0
 80247f4:	db60      	blt.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247f6:	4580      	cmp	r8, r0
 80247f8:	dd5e      	ble.n	80248b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 80247fa:	eb03 090e 	add.w	r9, r3, lr
 80247fe:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024802:	f019 0f01 	tst.w	r9, #1
 8024806:	5d55      	ldrb	r5, [r2, r5]
 8024808:	bf0c      	ite	eq
 802480a:	f005 050f 	andeq.w	r5, r5, #15
 802480e:	112d      	asrne	r5, r5, #4
 8024810:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024814:	b2ed      	uxtb	r5, r5
 8024816:	3001      	adds	r0, #1
 8024818:	d456      	bmi.n	80248c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802481a:	4580      	cmp	r8, r0
 802481c:	dd54      	ble.n	80248c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802481e:	2f00      	cmp	r7, #0
 8024820:	d054      	beq.n	80248cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024822:	3301      	adds	r3, #1
 8024824:	449e      	add	lr, r3
 8024826:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802482a:	f01e 0f01 	tst.w	lr, #1
 802482e:	5cd0      	ldrb	r0, [r2, r3]
 8024830:	bf0c      	ite	eq
 8024832:	f000 000f 	andeq.w	r0, r0, #15
 8024836:	1100      	asrne	r0, r0, #4
 8024838:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802483c:	b2c3      	uxtb	r3, r0
 802483e:	b2ba      	uxth	r2, r7
 8024840:	fa1f fc8c 	uxth.w	ip, ip
 8024844:	fb02 f00c 	mul.w	r0, r2, ip
 8024848:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802484c:	0112      	lsls	r2, r2, #4
 802484e:	fa1f fc8c 	uxth.w	ip, ip
 8024852:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024856:	1a12      	subs	r2, r2, r0
 8024858:	eba7 070c 	sub.w	r7, r7, ip
 802485c:	b292      	uxth	r2, r2
 802485e:	b2bf      	uxth	r7, r7
 8024860:	4362      	muls	r2, r4
 8024862:	fb06 2207 	mla	r2, r6, r7, r2
 8024866:	fb0c 2505 	mla	r5, ip, r5, r2
 802486a:	fb00 5303 	mla	r3, r0, r3, r5
 802486e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024872:	b1b3      	cbz	r3, 80248a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024874:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8024878:	435a      	muls	r2, r3
 802487a:	1c53      	adds	r3, r2, #1
 802487c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024880:	4a2d      	ldr	r2, [pc, #180]	; (8024938 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8024882:	121b      	asrs	r3, r3, #8
 8024884:	6812      	ldr	r2, [r2, #0]
 8024886:	2bff      	cmp	r3, #255	; 0xff
 8024888:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802488c:	d120      	bne.n	80248d0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802488e:	4b2b      	ldr	r3, [pc, #172]	; (802493c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024890:	0950      	lsrs	r0, r2, #5
 8024892:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024896:	4033      	ands	r3, r6
 8024898:	4318      	orrs	r0, r3
 802489a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802489e:	4302      	orrs	r2, r0
 80248a0:	800a      	strh	r2, [r1, #0]
 80248a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80248a6:	2600      	movs	r6, #0
 80248a8:	e788      	b.n	80247bc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80248aa:	2400      	movs	r4, #0
 80248ac:	4626      	mov	r6, r4
 80248ae:	e799      	b.n	80247e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248b0:	2400      	movs	r4, #0
 80248b2:	e797      	b.n	80247e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248b4:	463c      	mov	r4, r7
 80248b6:	e795      	b.n	80247e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80248b8:	2500      	movs	r5, #0
 80248ba:	e7ac      	b.n	8024816 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 80248bc:	2300      	movs	r3, #0
 80248be:	461d      	mov	r5, r3
 80248c0:	e7bd      	b.n	802483e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248c2:	4663      	mov	r3, ip
 80248c4:	4665      	mov	r5, ip
 80248c6:	e7ba      	b.n	802483e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248c8:	2300      	movs	r3, #0
 80248ca:	e7b8      	b.n	802483e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248cc:	463b      	mov	r3, r7
 80248ce:	e7b6      	b.n	802483e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 80248d0:	880d      	ldrh	r5, [r1, #0]
 80248d2:	b29f      	uxth	r7, r3
 80248d4:	122c      	asrs	r4, r5, #8
 80248d6:	f3c2 4007 	ubfx	r0, r2, #16, #8
 80248da:	43db      	mvns	r3, r3
 80248dc:	b2db      	uxtb	r3, r3
 80248de:	fb10 f007 	smulbb	r0, r0, r7
 80248e2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80248e6:	fb04 0403 	mla	r4, r4, r3, r0
 80248ea:	b2f6      	uxtb	r6, r6
 80248ec:	10e8      	asrs	r0, r5, #3
 80248ee:	b2d2      	uxtb	r2, r2
 80248f0:	00ed      	lsls	r5, r5, #3
 80248f2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80248f6:	fb12 f207 	smulbb	r2, r2, r7
 80248fa:	fb16 f607 	smulbb	r6, r6, r7
 80248fe:	b2ed      	uxtb	r5, r5
 8024900:	b2a4      	uxth	r4, r4
 8024902:	fb00 6603 	mla	r6, r0, r3, r6
 8024906:	fb05 2303 	mla	r3, r5, r3, r2
 802490a:	b29a      	uxth	r2, r3
 802490c:	1c63      	adds	r3, r4, #1
 802490e:	b2b0      	uxth	r0, r6
 8024910:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024914:	1c53      	adds	r3, r2, #1
 8024916:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802491a:	1c42      	adds	r2, r0, #1
 802491c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024920:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024924:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024928:	0940      	lsrs	r0, r0, #5
 802492a:	4323      	orrs	r3, r4
 802492c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024930:	4303      	orrs	r3, r0
 8024932:	800b      	strh	r3, [r1, #0]
 8024934:	e7b5      	b.n	80248a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024936:	bf00      	nop
 8024938:	2000ef2c 	.word	0x2000ef2c
 802493c:	00fff800 	.word	0x00fff800

08024940 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024944:	b097      	sub	sp, #92	; 0x5c
 8024946:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802494a:	9214      	str	r2, [sp, #80]	; 0x50
 802494c:	9309      	str	r3, [sp, #36]	; 0x24
 802494e:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8024950:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8024954:	910d      	str	r1, [sp, #52]	; 0x34
 8024956:	930f      	str	r3, [sp, #60]	; 0x3c
 8024958:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802495c:	9015      	str	r0, [sp, #84]	; 0x54
 802495e:	6850      	ldr	r0, [r2, #4]
 8024960:	6812      	ldr	r2, [r2, #0]
 8024962:	fb00 1303 	mla	r3, r0, r3, r1
 8024966:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802496a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802496c:	689b      	ldr	r3, [r3, #8]
 802496e:	3301      	adds	r3, #1
 8024970:	f023 0301 	bic.w	r3, r3, #1
 8024974:	930a      	str	r3, [sp, #40]	; 0x28
 8024976:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8024978:	681f      	ldr	r7, [r3, #0]
 802497a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802497c:	2b00      	cmp	r3, #0
 802497e:	dc03      	bgt.n	8024988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024980:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8024982:	2b00      	cmp	r3, #0
 8024984:	f340 8287 	ble.w	8024e96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024988:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802498a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802498e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024992:	1e48      	subs	r0, r1, #1
 8024994:	f102 3cff 	add.w	ip, r2, #4294967295
 8024998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802499a:	2b00      	cmp	r3, #0
 802499c:	f340 80c4 	ble.w	8024b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80249a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80249a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80249a8:	d406      	bmi.n	80249b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80249aa:	4586      	cmp	lr, r0
 80249ac:	da04      	bge.n	80249b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80249ae:	2b00      	cmp	r3, #0
 80249b0:	db02      	blt.n	80249b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80249b2:	4563      	cmp	r3, ip
 80249b4:	f2c0 80b9 	blt.w	8024b2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80249b8:	f11e 0e01 	adds.w	lr, lr, #1
 80249bc:	f100 80aa 	bmi.w	8024b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249c0:	4571      	cmp	r1, lr
 80249c2:	f2c0 80a7 	blt.w	8024b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249c6:	3301      	adds	r3, #1
 80249c8:	f100 80a4 	bmi.w	8024b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249cc:	429a      	cmp	r2, r3
 80249ce:	f2c0 80a1 	blt.w	8024b14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80249d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80249d4:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 80249d8:	930e      	str	r3, [sp, #56]	; 0x38
 80249da:	46c8      	mov	r8, r9
 80249dc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80249de:	2b00      	cmp	r3, #0
 80249e0:	f340 80c3 	ble.w	8024b6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80249e4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80249e6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80249ea:	1423      	asrs	r3, r4, #16
 80249ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 80249f0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80249f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80249f8:	f100 814d 	bmi.w	8024c96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80249fc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024a00:	455b      	cmp	r3, fp
 8024a02:	f280 8148 	bge.w	8024c96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a06:	2800      	cmp	r0, #0
 8024a08:	f2c0 8145 	blt.w	8024c96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a0c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024a10:	4558      	cmp	r0, fp
 8024a12:	f280 8140 	bge.w	8024c96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024a16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024a18:	fb00 3305 	mla	r3, r0, r5, r3
 8024a1c:	0858      	lsrs	r0, r3, #1
 8024a1e:	07dd      	lsls	r5, r3, #31
 8024a20:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024a24:	bf54      	ite	pl
 8024a26:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024a2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024a2e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a32:	fa5f fc8c 	uxtb.w	ip, ip
 8024a36:	2a00      	cmp	r2, #0
 8024a38:	f000 80db 	beq.w	8024bf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 8024a3c:	1c58      	adds	r0, r3, #1
 8024a3e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024a42:	07c0      	lsls	r0, r0, #31
 8024a44:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024a48:	bf54      	ite	pl
 8024a4a:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024a4e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024a52:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024a56:	fa5f f08e 	uxtb.w	r0, lr
 8024a5a:	9010      	str	r0, [sp, #64]	; 0x40
 8024a5c:	b1c9      	cbz	r1, 8024a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024a5e:	4453      	add	r3, sl
 8024a60:	0858      	lsrs	r0, r3, #1
 8024a62:	07dd      	lsls	r5, r3, #31
 8024a64:	5c38      	ldrb	r0, [r7, r0]
 8024a66:	bf54      	ite	pl
 8024a68:	f000 000f 	andpl.w	r0, r0, #15
 8024a6c:	1100      	asrmi	r0, r0, #4
 8024a6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024a72:	3301      	adds	r3, #1
 8024a74:	b2c0      	uxtb	r0, r0
 8024a76:	900b      	str	r0, [sp, #44]	; 0x2c
 8024a78:	0858      	lsrs	r0, r3, #1
 8024a7a:	07dd      	lsls	r5, r3, #31
 8024a7c:	f817 e000 	ldrb.w	lr, [r7, r0]
 8024a80:	bf54      	ite	pl
 8024a82:	f00e 030f 	andpl.w	r3, lr, #15
 8024a86:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8024a8a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024a8e:	b2db      	uxtb	r3, r3
 8024a90:	9311      	str	r3, [sp, #68]	; 0x44
 8024a92:	b292      	uxth	r2, r2
 8024a94:	b289      	uxth	r1, r1
 8024a96:	fb02 f301 	mul.w	r3, r2, r1
 8024a9a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024a9e:	0112      	lsls	r2, r2, #4
 8024aa0:	b289      	uxth	r1, r1
 8024aa2:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8024aa6:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8024aa8:	1ad2      	subs	r2, r2, r3
 8024aaa:	1a40      	subs	r0, r0, r1
 8024aac:	b292      	uxth	r2, r2
 8024aae:	436a      	muls	r2, r5
 8024ab0:	b280      	uxth	r0, r0
 8024ab2:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024ab6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024ab8:	fb01 c102 	mla	r1, r1, r2, ip
 8024abc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024abe:	fb03 1302 	mla	r3, r3, r2, r1
 8024ac2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024ac6:	b1db      	cbz	r3, 8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ac8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024aca:	4353      	muls	r3, r2
 8024acc:	1c5a      	adds	r2, r3, #1
 8024ace:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024ad2:	4ac6      	ldr	r2, [pc, #792]	; (8024dec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024ad4:	121b      	asrs	r3, r3, #8
 8024ad6:	6812      	ldr	r2, [r2, #0]
 8024ad8:	2bff      	cmp	r3, #255	; 0xff
 8024ada:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024ade:	f040 8099 	bne.w	8024c14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024ae2:	0953      	lsrs	r3, r2, #5
 8024ae4:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024ae8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024aec:	f02c 0c07 	bic.w	ip, ip, #7
 8024af0:	ea43 0c0c 	orr.w	ip, r3, ip
 8024af4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024af8:	ea4c 0202 	orr.w	r2, ip, r2
 8024afc:	f8a8 2000 	strh.w	r2, [r8]
 8024b00:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b02:	441c      	add	r4, r3
 8024b04:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b06:	441e      	add	r6, r3
 8024b08:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8024b0a:	3b01      	subs	r3, #1
 8024b0c:	f108 0802 	add.w	r8, r8, #2
 8024b10:	930e      	str	r3, [sp, #56]	; 0x38
 8024b12:	e763      	b.n	80249dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024b14:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024b16:	441c      	add	r4, r3
 8024b18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024b1a:	441e      	add	r6, r3
 8024b1c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b1e:	3b01      	subs	r3, #1
 8024b20:	9309      	str	r3, [sp, #36]	; 0x24
 8024b22:	f109 0902 	add.w	r9, r9, #2
 8024b26:	e737      	b.n	8024998 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024b28:	d024      	beq.n	8024b74 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024b2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b2c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8024b2e:	3b01      	subs	r3, #1
 8024b30:	fb00 4003 	mla	r0, r0, r3, r4
 8024b34:	1400      	asrs	r0, r0, #16
 8024b36:	f53f af4c 	bmi.w	80249d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b3a:	3901      	subs	r1, #1
 8024b3c:	4288      	cmp	r0, r1
 8024b3e:	f6bf af48 	bge.w	80249d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b42:	9924      	ldr	r1, [sp, #144]	; 0x90
 8024b44:	fb01 6303 	mla	r3, r1, r3, r6
 8024b48:	141b      	asrs	r3, r3, #16
 8024b4a:	f53f af42 	bmi.w	80249d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b4e:	3a01      	subs	r2, #1
 8024b50:	4293      	cmp	r3, r2
 8024b52:	f6bf af3e 	bge.w	80249d2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024b56:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024b5a:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8024b5e:	930e      	str	r3, [sp, #56]	; 0x38
 8024b60:	46c8      	mov	r8, r9
 8024b62:	f1bb 0f00 	cmp.w	fp, #0
 8024b66:	f300 80b7 	bgt.w	8024cd8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8024b6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024b6c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8024b70:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024b76:	2b00      	cmp	r3, #0
 8024b78:	f340 818d 	ble.w	8024e96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 8024b7c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024b80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8024b84:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024b88:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024b8a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024b8e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024b92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024b96:	eef0 6a62 	vmov.f32	s13, s5
 8024b9a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024b9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ba2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024ba6:	ee16 4a90 	vmov	r4, s13
 8024baa:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024bae:	eef0 6a43 	vmov.f32	s13, s6
 8024bb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024bb6:	ee12 2a90 	vmov	r2, s5
 8024bba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024bbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bc2:	ee13 2a10 	vmov	r2, s6
 8024bc6:	9323      	str	r3, [sp, #140]	; 0x8c
 8024bc8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bca:	fb92 f3f3 	sdiv	r3, r2, r3
 8024bce:	9324      	str	r3, [sp, #144]	; 0x90
 8024bd0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024bd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024bd4:	3b01      	subs	r3, #1
 8024bd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024bda:	930d      	str	r3, [sp, #52]	; 0x34
 8024bdc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8024bde:	bf08      	it	eq
 8024be0:	4613      	moveq	r3, r2
 8024be2:	ee16 6a90 	vmov	r6, s13
 8024be6:	9309      	str	r3, [sp, #36]	; 0x24
 8024be8:	eeb0 3a67 	vmov.f32	s6, s15
 8024bec:	eef0 2a47 	vmov.f32	s5, s14
 8024bf0:	e6c3      	b.n	802497a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024bf2:	2900      	cmp	r1, #0
 8024bf4:	f43f af4d 	beq.w	8024a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024bf8:	eb0a 0003 	add.w	r0, sl, r3
 8024bfc:	0843      	lsrs	r3, r0, #1
 8024bfe:	07c0      	lsls	r0, r0, #31
 8024c00:	5cfb      	ldrb	r3, [r7, r3]
 8024c02:	bf54      	ite	pl
 8024c04:	f003 030f 	andpl.w	r3, r3, #15
 8024c08:	111b      	asrmi	r3, r3, #4
 8024c0a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024c0e:	b2db      	uxtb	r3, r3
 8024c10:	930b      	str	r3, [sp, #44]	; 0x2c
 8024c12:	e73e      	b.n	8024a92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024c14:	f8b8 e000 	ldrh.w	lr, [r8]
 8024c18:	fa1f fb83 	uxth.w	fp, r3
 8024c1c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024c20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024c24:	43db      	mvns	r3, r3
 8024c26:	b2db      	uxtb	r3, r3
 8024c28:	fb11 f10b 	smulbb	r1, r1, fp
 8024c2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024c30:	fb00 1003 	mla	r0, r0, r3, r1
 8024c34:	fa5f fc8c 	uxtb.w	ip, ip
 8024c38:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024c3c:	b2d2      	uxtb	r2, r2
 8024c3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024c42:	b280      	uxth	r0, r0
 8024c44:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024c48:	fb1c fc0b 	smulbb	ip, ip, fp
 8024c4c:	fa5f fe8e 	uxtb.w	lr, lr
 8024c50:	fb12 fb0b 	smulbb	fp, r2, fp
 8024c54:	fb01 cc03 	mla	ip, r1, r3, ip
 8024c58:	fb0e bb03 	mla	fp, lr, r3, fp
 8024c5c:	1c43      	adds	r3, r0, #1
 8024c5e:	fa1f fc8c 	uxth.w	ip, ip
 8024c62:	fa1f fb8b 	uxth.w	fp, fp
 8024c66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024c6a:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 8024c6e:	f10c 0101 	add.w	r1, ip, #1
 8024c72:	f10b 0001 	add.w	r0, fp, #1
 8024c76:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8024c7a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024c7e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024c82:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024c86:	4318      	orrs	r0, r3
 8024c88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024c8c:	ea40 000c 	orr.w	r0, r0, ip
 8024c90:	f8a8 0000 	strh.w	r0, [r8]
 8024c94:	e734      	b.n	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c96:	f113 0b01 	adds.w	fp, r3, #1
 8024c9a:	f53f af31 	bmi.w	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024c9e:	45dc      	cmp	ip, fp
 8024ca0:	f6ff af2e 	blt.w	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024ca4:	f110 0b01 	adds.w	fp, r0, #1
 8024ca8:	f53f af2a 	bmi.w	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024cac:	45de      	cmp	lr, fp
 8024cae:	f6ff af27 	blt.w	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024cb2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8024cb4:	9302      	str	r3, [sp, #8]
 8024cb6:	fa0f f38e 	sxth.w	r3, lr
 8024cba:	9301      	str	r3, [sp, #4]
 8024cbc:	fa0f f38c 	sxth.w	r3, ip
 8024cc0:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024cc4:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024cc8:	9300      	str	r3, [sp, #0]
 8024cca:	463a      	mov	r2, r7
 8024ccc:	4653      	mov	r3, sl
 8024cce:	4641      	mov	r1, r8
 8024cd0:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024cd2:	f7ff fd4d 	bl	8024770 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024cd6:	e713      	b.n	8024b00 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024cd8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8024cda:	1422      	asrs	r2, r4, #16
 8024cdc:	1433      	asrs	r3, r6, #16
 8024cde:	fb05 2303 	mla	r3, r5, r3, r2
 8024ce2:	085a      	lsrs	r2, r3, #1
 8024ce4:	07dd      	lsls	r5, r3, #31
 8024ce6:	5cba      	ldrb	r2, [r7, r2]
 8024ce8:	bf54      	ite	pl
 8024cea:	f002 020f 	andpl.w	r2, r2, #15
 8024cee:	1112      	asrmi	r2, r2, #4
 8024cf0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024cf4:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024cf8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024cfc:	b2d2      	uxtb	r2, r2
 8024cfe:	2900      	cmp	r1, #0
 8024d00:	d076      	beq.n	8024df0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024d02:	f103 0e01 	add.w	lr, r3, #1
 8024d06:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024d0a:	f01e 0f01 	tst.w	lr, #1
 8024d0e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d12:	bf0c      	ite	eq
 8024d14:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024d18:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024d1c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d20:	fa5f f58c 	uxtb.w	r5, ip
 8024d24:	9512      	str	r5, [sp, #72]	; 0x48
 8024d26:	b300      	cbz	r0, 8024d6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024d28:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024d2a:	442b      	add	r3, r5
 8024d2c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d30:	07dd      	lsls	r5, r3, #31
 8024d32:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d36:	bf54      	ite	pl
 8024d38:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d3c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d40:	3301      	adds	r3, #1
 8024d42:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d46:	fa5f f58c 	uxtb.w	r5, ip
 8024d4a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024d4e:	950c      	str	r5, [sp, #48]	; 0x30
 8024d50:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024d54:	07dd      	lsls	r5, r3, #31
 8024d56:	bf54      	ite	pl
 8024d58:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024d5c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024d60:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024d64:	fa5f f38c 	uxtb.w	r3, ip
 8024d68:	9313      	str	r3, [sp, #76]	; 0x4c
 8024d6a:	b289      	uxth	r1, r1
 8024d6c:	b280      	uxth	r0, r0
 8024d6e:	fb01 f300 	mul.w	r3, r1, r0
 8024d72:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024d76:	0109      	lsls	r1, r1, #4
 8024d78:	b280      	uxth	r0, r0
 8024d7a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 8024d7e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8024d80:	1ac9      	subs	r1, r1, r3
 8024d82:	ebac 0c00 	sub.w	ip, ip, r0
 8024d86:	b289      	uxth	r1, r1
 8024d88:	4369      	muls	r1, r5
 8024d8a:	fa1f fc8c 	uxth.w	ip, ip
 8024d8e:	fb02 120c 	mla	r2, r2, ip, r1
 8024d92:	990c      	ldr	r1, [sp, #48]	; 0x30
 8024d94:	fb00 2001 	mla	r0, r0, r1, r2
 8024d98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024d9a:	fb03 0302 	mla	r3, r3, r2, r0
 8024d9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024da2:	b1d3      	cbz	r3, 8024dda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024da4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8024da6:	4353      	muls	r3, r2
 8024da8:	1c5a      	adds	r2, r3, #1
 8024daa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024dae:	4a0f      	ldr	r2, [pc, #60]	; (8024dec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024db0:	121b      	asrs	r3, r3, #8
 8024db2:	6812      	ldr	r2, [r2, #0]
 8024db4:	2bff      	cmp	r3, #255	; 0xff
 8024db6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024dba:	d12d      	bne.n	8024e18 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024dbc:	0953      	lsrs	r3, r2, #5
 8024dbe:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024dc2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024dc6:	f02c 0c07 	bic.w	ip, ip, #7
 8024dca:	ea43 0c0c 	orr.w	ip, r3, ip
 8024dce:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024dd2:	ea4c 0202 	orr.w	r2, ip, r2
 8024dd6:	f8a8 2000 	strh.w	r2, [r8]
 8024dda:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8024ddc:	441c      	add	r4, r3
 8024dde:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8024de0:	f108 0802 	add.w	r8, r8, #2
 8024de4:	441e      	add	r6, r3
 8024de6:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024dea:	e6ba      	b.n	8024b62 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024dec:	2000ef2c 	.word	0x2000ef2c
 8024df0:	2800      	cmp	r0, #0
 8024df2:	d0ba      	beq.n	8024d6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024df4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8024df6:	442b      	add	r3, r5
 8024df8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024dfc:	07db      	lsls	r3, r3, #31
 8024dfe:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024e02:	bf54      	ite	pl
 8024e04:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024e08:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024e0c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024e10:	fa5f f38c 	uxtb.w	r3, ip
 8024e14:	930c      	str	r3, [sp, #48]	; 0x30
 8024e16:	e7a8      	b.n	8024d6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024e18:	f8b8 e000 	ldrh.w	lr, [r8]
 8024e1c:	fa1f fa83 	uxth.w	sl, r3
 8024e20:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024e24:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024e28:	43db      	mvns	r3, r3
 8024e2a:	b2db      	uxtb	r3, r3
 8024e2c:	fb11 f10a 	smulbb	r1, r1, sl
 8024e30:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8024e34:	fb00 1003 	mla	r0, r0, r3, r1
 8024e38:	b2d2      	uxtb	r2, r2
 8024e3a:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024e3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024e42:	fa5f fe8e 	uxtb.w	lr, lr
 8024e46:	fb12 f20a 	smulbb	r2, r2, sl
 8024e4a:	fb0e 2203 	mla	r2, lr, r3, r2
 8024e4e:	fa5f fc8c 	uxtb.w	ip, ip
 8024e52:	b280      	uxth	r0, r0
 8024e54:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8024e58:	b292      	uxth	r2, r2
 8024e5a:	fb1c fc0a 	smulbb	ip, ip, sl
 8024e5e:	fb01 cc03 	mla	ip, r1, r3, ip
 8024e62:	1c43      	adds	r3, r0, #1
 8024e64:	1c51      	adds	r1, r2, #1
 8024e66:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024e6a:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024e6e:	fa1f fc8c 	uxth.w	ip, ip
 8024e72:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024e76:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8024e7a:	4308      	orrs	r0, r1
 8024e7c:	f10c 0101 	add.w	r1, ip, #1
 8024e80:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024e84:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024e88:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8024e8c:	ea40 000c 	orr.w	r0, r0, ip
 8024e90:	f8a8 0000 	strh.w	r0, [r8]
 8024e94:	e7a1      	b.n	8024dda <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024e96:	b017      	add	sp, #92	; 0x5c
 8024e98:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024e9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024e9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024ea0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 8024ea4:	2d00      	cmp	r5, #0
 8024ea6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024eaa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8024eae:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 8024eb2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 8024eb6:	fb05 0e03 	mla	lr, r5, r3, r0
 8024eba:	f2c0 80b0 	blt.w	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024ebe:	45a9      	cmp	r9, r5
 8024ec0:	f340 80ad 	ble.w	802501e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024ec4:	2800      	cmp	r0, #0
 8024ec6:	f2c0 80a8 	blt.w	802501a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024eca:	4580      	cmp	r8, r0
 8024ecc:	f340 80a5 	ble.w	802501a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024ed0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024ed4:	f01e 0f01 	tst.w	lr, #1
 8024ed8:	5d16      	ldrb	r6, [r2, r4]
 8024eda:	bf0c      	ite	eq
 8024edc:	f006 060f 	andeq.w	r6, r6, #15
 8024ee0:	1136      	asrne	r6, r6, #4
 8024ee2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024ee6:	b2f6      	uxtb	r6, r6
 8024ee8:	1c44      	adds	r4, r0, #1
 8024eea:	f100 809b 	bmi.w	8025024 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024eee:	45a0      	cmp	r8, r4
 8024ef0:	f340 8098 	ble.w	8025024 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024ef4:	2f00      	cmp	r7, #0
 8024ef6:	f000 8097 	beq.w	8025028 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024efa:	f10e 0a01 	add.w	sl, lr, #1
 8024efe:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024f02:	f01a 0f01 	tst.w	sl, #1
 8024f06:	5d14      	ldrb	r4, [r2, r4]
 8024f08:	bf0c      	ite	eq
 8024f0a:	f004 040f 	andeq.w	r4, r4, #15
 8024f0e:	1124      	asrne	r4, r4, #4
 8024f10:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024f14:	b2e4      	uxtb	r4, r4
 8024f16:	3501      	adds	r5, #1
 8024f18:	f100 808a 	bmi.w	8025030 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f1c:	45a9      	cmp	r9, r5
 8024f1e:	f340 8087 	ble.w	8025030 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024f22:	f1bc 0f00 	cmp.w	ip, #0
 8024f26:	f000 8086 	beq.w	8025036 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024f2a:	2800      	cmp	r0, #0
 8024f2c:	db7e      	blt.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f2e:	4580      	cmp	r8, r0
 8024f30:	dd7c      	ble.n	802502c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024f32:	eb03 090e 	add.w	r9, r3, lr
 8024f36:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024f3a:	f019 0f01 	tst.w	r9, #1
 8024f3e:	5d55      	ldrb	r5, [r2, r5]
 8024f40:	bf0c      	ite	eq
 8024f42:	f005 050f 	andeq.w	r5, r5, #15
 8024f46:	112d      	asrne	r5, r5, #4
 8024f48:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024f4c:	b2ed      	uxtb	r5, r5
 8024f4e:	3001      	adds	r0, #1
 8024f50:	d474      	bmi.n	802503c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f52:	4580      	cmp	r8, r0
 8024f54:	dd72      	ble.n	802503c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024f56:	2f00      	cmp	r7, #0
 8024f58:	d072      	beq.n	8025040 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024f5a:	3301      	adds	r3, #1
 8024f5c:	449e      	add	lr, r3
 8024f5e:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024f62:	f01e 0f01 	tst.w	lr, #1
 8024f66:	5cd0      	ldrb	r0, [r2, r3]
 8024f68:	bf0c      	ite	eq
 8024f6a:	f000 000f 	andeq.w	r0, r0, #15
 8024f6e:	1100      	asrne	r0, r0, #4
 8024f70:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024f74:	b2c3      	uxtb	r3, r0
 8024f76:	b2ba      	uxth	r2, r7
 8024f78:	fa1f fc8c 	uxth.w	ip, ip
 8024f7c:	fb02 f00c 	mul.w	r0, r2, ip
 8024f80:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024f84:	0112      	lsls	r2, r2, #4
 8024f86:	fa1f fc8c 	uxth.w	ip, ip
 8024f8a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 8024f8e:	1a12      	subs	r2, r2, r0
 8024f90:	eba7 070c 	sub.w	r7, r7, ip
 8024f94:	b292      	uxth	r2, r2
 8024f96:	b2bf      	uxth	r7, r7
 8024f98:	4362      	muls	r2, r4
 8024f9a:	fb06 2207 	mla	r2, r6, r7, r2
 8024f9e:	fb0c 2505 	mla	r5, ip, r5, r2
 8024fa2:	fb00 5303 	mla	r3, r0, r3, r5
 8024fa6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024faa:	b3a3      	cbz	r3, 8025016 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024fac:	4a25      	ldr	r2, [pc, #148]	; (8025044 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024fae:	880e      	ldrh	r6, [r1, #0]
 8024fb0:	6815      	ldr	r5, [r2, #0]
 8024fb2:	1234      	asrs	r4, r6, #8
 8024fb4:	b29a      	uxth	r2, r3
 8024fb6:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024fba:	43db      	mvns	r3, r3
 8024fbc:	b2db      	uxtb	r3, r3
 8024fbe:	fb10 f002 	smulbb	r0, r0, r2
 8024fc2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024fc6:	fb04 0403 	mla	r4, r4, r3, r0
 8024fca:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024fce:	10f0      	asrs	r0, r6, #3
 8024fd0:	b2ed      	uxtb	r5, r5
 8024fd2:	00f6      	lsls	r6, r6, #3
 8024fd4:	fb17 f702 	smulbb	r7, r7, r2
 8024fd8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8024fdc:	fb15 f202 	smulbb	r2, r5, r2
 8024fe0:	b2f6      	uxtb	r6, r6
 8024fe2:	b2a4      	uxth	r4, r4
 8024fe4:	fb00 7003 	mla	r0, r0, r3, r7
 8024fe8:	fb06 2303 	mla	r3, r6, r3, r2
 8024fec:	b29a      	uxth	r2, r3
 8024fee:	1c63      	adds	r3, r4, #1
 8024ff0:	b280      	uxth	r0, r0
 8024ff2:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024ff6:	1c53      	adds	r3, r2, #1
 8024ff8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024ffc:	1c42      	adds	r2, r0, #1
 8024ffe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025002:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025006:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802500a:	0940      	lsrs	r0, r0, #5
 802500c:	4323      	orrs	r3, r4
 802500e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025012:	4303      	orrs	r3, r0
 8025014:	800b      	strh	r3, [r1, #0]
 8025016:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802501a:	2600      	movs	r6, #0
 802501c:	e764      	b.n	8024ee8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802501e:	2400      	movs	r4, #0
 8025020:	4626      	mov	r6, r4
 8025022:	e778      	b.n	8024f16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025024:	2400      	movs	r4, #0
 8025026:	e776      	b.n	8024f16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8025028:	463c      	mov	r4, r7
 802502a:	e774      	b.n	8024f16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802502c:	2500      	movs	r5, #0
 802502e:	e78e      	b.n	8024f4e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8025030:	2300      	movs	r3, #0
 8025032:	461d      	mov	r5, r3
 8025034:	e79f      	b.n	8024f76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025036:	4663      	mov	r3, ip
 8025038:	4665      	mov	r5, ip
 802503a:	e79c      	b.n	8024f76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802503c:	2300      	movs	r3, #0
 802503e:	e79a      	b.n	8024f76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025040:	463b      	mov	r3, r7
 8025042:	e798      	b.n	8024f76 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8025044:	2000ef2c 	.word	0x2000ef2c

08025048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8025048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802504c:	b093      	sub	sp, #76	; 0x4c
 802504e:	461d      	mov	r5, r3
 8025050:	920c      	str	r2, [sp, #48]	; 0x30
 8025052:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8025054:	9107      	str	r1, [sp, #28]
 8025056:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802505a:	9011      	str	r0, [sp, #68]	; 0x44
 802505c:	6850      	ldr	r0, [r2, #4]
 802505e:	6812      	ldr	r2, [r2, #0]
 8025060:	fb00 1303 	mla	r3, r0, r3, r1
 8025064:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8025068:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802506a:	689b      	ldr	r3, [r3, #8]
 802506c:	3301      	adds	r3, #1
 802506e:	f023 0301 	bic.w	r3, r3, #1
 8025072:	9306      	str	r3, [sp, #24]
 8025074:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8025076:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802507a:	681f      	ldr	r7, [r3, #0]
 802507c:	9b07      	ldr	r3, [sp, #28]
 802507e:	2b00      	cmp	r3, #0
 8025080:	dc03      	bgt.n	802508a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8025082:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025084:	2b00      	cmp	r3, #0
 8025086:	f340 8267 	ble.w	8025558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802508a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802508c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8025090:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8025094:	1e48      	subs	r0, r1, #1
 8025096:	f102 3cff 	add.w	ip, r2, #4294967295
 802509a:	2d00      	cmp	r5, #0
 802509c:	f340 80b8 	ble.w	8025210 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80250a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80250a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80250a8:	d406      	bmi.n	80250b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80250aa:	4586      	cmp	lr, r0
 80250ac:	da04      	bge.n	80250b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80250ae:	2b00      	cmp	r3, #0
 80250b0:	db02      	blt.n	80250b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80250b2:	4563      	cmp	r3, ip
 80250b4:	f2c0 80ad 	blt.w	8025212 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80250b8:	f11e 0e01 	adds.w	lr, lr, #1
 80250bc:	f100 80a0 	bmi.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250c0:	4571      	cmp	r1, lr
 80250c2:	f2c0 809d 	blt.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250c6:	3301      	adds	r3, #1
 80250c8:	f100 809a 	bmi.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250cc:	429a      	cmp	r2, r3
 80250ce:	f2c0 8097 	blt.w	8025200 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80250d2:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80250d6:	9509      	str	r5, [sp, #36]	; 0x24
 80250d8:	46c8      	mov	r8, r9
 80250da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80250dc:	2b00      	cmp	r3, #0
 80250de:	f340 80b6 	ble.w	802524e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80250e2:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80250e6:	9308      	str	r3, [sp, #32]
 80250e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80250ea:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80250ee:	1423      	asrs	r3, r4, #16
 80250f0:	ea4f 4026 	mov.w	r0, r6, asr #16
 80250f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80250f8:	f100 813e 	bmi.w	8025378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80250fc:	f10c 3bff 	add.w	fp, ip, #4294967295
 8025100:	455b      	cmp	r3, fp
 8025102:	f280 8139 	bge.w	8025378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025106:	2800      	cmp	r0, #0
 8025108:	f2c0 8136 	blt.w	8025378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802510c:	f10e 3bff 	add.w	fp, lr, #4294967295
 8025110:	4558      	cmp	r0, fp
 8025112:	f280 8131 	bge.w	8025378 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8025116:	9a06      	ldr	r2, [sp, #24]
 8025118:	fb00 3302 	mla	r3, r0, r2, r3
 802511c:	0858      	lsrs	r0, r3, #1
 802511e:	07da      	lsls	r2, r3, #31
 8025120:	f817 c000 	ldrb.w	ip, [r7, r0]
 8025124:	9a08      	ldr	r2, [sp, #32]
 8025126:	bf54      	ite	pl
 8025128:	f00c 0c0f 	andpl.w	ip, ip, #15
 802512c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8025130:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8025134:	fa5f fc8c 	uxtb.w	ip, ip
 8025138:	2a00      	cmp	r2, #0
 802513a:	f000 80cb 	beq.w	80252d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802513e:	1c58      	adds	r0, r3, #1
 8025140:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8025144:	07c0      	lsls	r0, r0, #31
 8025146:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802514a:	bf54      	ite	pl
 802514c:	f00e 0e0f 	andpl.w	lr, lr, #15
 8025150:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8025154:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8025158:	fa5f fe8e 	uxtb.w	lr, lr
 802515c:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8025160:	b1b9      	cbz	r1, 8025192 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8025162:	4453      	add	r3, sl
 8025164:	0858      	lsrs	r0, r3, #1
 8025166:	07da      	lsls	r2, r3, #31
 8025168:	5c38      	ldrb	r0, [r7, r0]
 802516a:	bf54      	ite	pl
 802516c:	f000 000f 	andpl.w	r0, r0, #15
 8025170:	1100      	asrmi	r0, r0, #4
 8025172:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8025176:	b2c0      	uxtb	r0, r0
 8025178:	900a      	str	r0, [sp, #40]	; 0x28
 802517a:	1c58      	adds	r0, r3, #1
 802517c:	0843      	lsrs	r3, r0, #1
 802517e:	07c2      	lsls	r2, r0, #31
 8025180:	5cfb      	ldrb	r3, [r7, r3]
 8025182:	bf54      	ite	pl
 8025184:	f003 030f 	andpl.w	r3, r3, #15
 8025188:	111b      	asrmi	r3, r3, #4
 802518a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802518e:	b2db      	uxtb	r3, r3
 8025190:	930e      	str	r3, [sp, #56]	; 0x38
 8025192:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8025196:	b289      	uxth	r1, r1
 8025198:	fb02 f301 	mul.w	r3, r2, r1
 802519c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80251a0:	0112      	lsls	r2, r2, #4
 80251a2:	b289      	uxth	r1, r1
 80251a4:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80251a8:	1a40      	subs	r0, r0, r1
 80251aa:	fa1f fe80 	uxth.w	lr, r0
 80251ae:	1ad2      	subs	r2, r2, r3
 80251b0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80251b2:	b292      	uxth	r2, r2
 80251b4:	4342      	muls	r2, r0
 80251b6:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80251ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80251bc:	fb01 c102 	mla	r1, r1, r2, ip
 80251c0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80251c2:	fb03 1302 	mla	r3, r3, r2, r1
 80251c6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251ca:	2bff      	cmp	r3, #255	; 0xff
 80251cc:	f040 8093 	bne.w	80252f6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80251d0:	4bbe      	ldr	r3, [pc, #760]	; (80254cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251d2:	681a      	ldr	r2, [r3, #0]
 80251d4:	4bbe      	ldr	r3, [pc, #760]	; (80254d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80251d6:	0951      	lsrs	r1, r2, #5
 80251d8:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80251dc:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80251e0:	430b      	orrs	r3, r1
 80251e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80251e6:	4313      	orrs	r3, r2
 80251e8:	f8a8 3000 	strh.w	r3, [r8]
 80251ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80251ee:	441c      	add	r4, r3
 80251f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80251f2:	441e      	add	r6, r3
 80251f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80251f6:	3b01      	subs	r3, #1
 80251f8:	f108 0802 	add.w	r8, r8, #2
 80251fc:	9309      	str	r3, [sp, #36]	; 0x24
 80251fe:	e76c      	b.n	80250da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8025200:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025202:	441c      	add	r4, r3
 8025204:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8025206:	3d01      	subs	r5, #1
 8025208:	441e      	add	r6, r3
 802520a:	f109 0902 	add.w	r9, r9, #2
 802520e:	e744      	b.n	802509a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8025210:	d021      	beq.n	8025256 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8025212:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8025214:	1e6b      	subs	r3, r5, #1
 8025216:	fb00 4003 	mla	r0, r0, r3, r4
 802521a:	1400      	asrs	r0, r0, #16
 802521c:	f53f af59 	bmi.w	80250d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025220:	3901      	subs	r1, #1
 8025222:	4288      	cmp	r0, r1
 8025224:	f6bf af55 	bge.w	80250d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025228:	9920      	ldr	r1, [sp, #128]	; 0x80
 802522a:	fb01 6303 	mla	r3, r1, r3, r6
 802522e:	141b      	asrs	r3, r3, #16
 8025230:	f53f af4f 	bmi.w	80250d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8025234:	3a01      	subs	r2, #1
 8025236:	4293      	cmp	r3, r2
 8025238:	f6bf af4b 	bge.w	80250d2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802523c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8025240:	9308      	str	r3, [sp, #32]
 8025242:	46a8      	mov	r8, r5
 8025244:	46ce      	mov	lr, r9
 8025246:	f1b8 0f00 	cmp.w	r8, #0
 802524a:	f300 80b5 	bgt.w	80253b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802524e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8025252:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8025256:	9b07      	ldr	r3, [sp, #28]
 8025258:	2b00      	cmp	r3, #0
 802525a:	f340 817d 	ble.w	8025558 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802525e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8025262:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8025266:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802526a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802526c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8025270:	ee31 1a05 	vadd.f32	s2, s2, s10
 8025274:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8025278:	eef0 6a62 	vmov.f32	s13, s5
 802527c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8025280:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025284:	ee77 2a62 	vsub.f32	s5, s14, s5
 8025288:	ee16 4a90 	vmov	r4, s13
 802528c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025290:	eef0 6a43 	vmov.f32	s13, s6
 8025294:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8025298:	ee12 2a90 	vmov	r2, s5
 802529c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80252a0:	fb92 f3f3 	sdiv	r3, r2, r3
 80252a4:	ee13 2a10 	vmov	r2, s6
 80252a8:	931f      	str	r3, [sp, #124]	; 0x7c
 80252aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80252ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80252b0:	9320      	str	r3, [sp, #128]	; 0x80
 80252b2:	9b07      	ldr	r3, [sp, #28]
 80252b4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80252b6:	3b01      	subs	r3, #1
 80252b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80252bc:	9307      	str	r3, [sp, #28]
 80252be:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80252c0:	ee16 6a90 	vmov	r6, s13
 80252c4:	bf14      	ite	ne
 80252c6:	461d      	movne	r5, r3
 80252c8:	4615      	moveq	r5, r2
 80252ca:	eeb0 3a67 	vmov.f32	s6, s15
 80252ce:	eef0 2a47 	vmov.f32	s5, s14
 80252d2:	e6d3      	b.n	802507c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80252d4:	2900      	cmp	r1, #0
 80252d6:	f43f af5c 	beq.w	8025192 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252da:	eb0a 0003 	add.w	r0, sl, r3
 80252de:	0843      	lsrs	r3, r0, #1
 80252e0:	07c0      	lsls	r0, r0, #31
 80252e2:	5cfb      	ldrb	r3, [r7, r3]
 80252e4:	bf54      	ite	pl
 80252e6:	f003 030f 	andpl.w	r3, r3, #15
 80252ea:	111b      	asrmi	r3, r3, #4
 80252ec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80252f0:	b2db      	uxtb	r3, r3
 80252f2:	930a      	str	r3, [sp, #40]	; 0x28
 80252f4:	e74d      	b.n	8025192 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80252f6:	2b00      	cmp	r3, #0
 80252f8:	f43f af78 	beq.w	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80252fc:	4a73      	ldr	r2, [pc, #460]	; (80254cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80252fe:	f8b8 c000 	ldrh.w	ip, [r8]
 8025302:	6810      	ldr	r0, [r2, #0]
 8025304:	fa1f fe83 	uxth.w	lr, r3
 8025308:	ea4f 212c 	mov.w	r1, ip, asr #8
 802530c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025310:	43db      	mvns	r3, r3
 8025312:	b2db      	uxtb	r3, r3
 8025314:	fb12 f20e 	smulbb	r2, r2, lr
 8025318:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802531c:	fb01 2103 	mla	r1, r1, r3, r2
 8025320:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025324:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025328:	b2c0      	uxtb	r0, r0
 802532a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802532e:	fb1b fb0e 	smulbb	fp, fp, lr
 8025332:	b289      	uxth	r1, r1
 8025334:	fb10 fe0e 	smulbb	lr, r0, lr
 8025338:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802533c:	fa5f fc8c 	uxtb.w	ip, ip
 8025340:	fb02 b203 	mla	r2, r2, r3, fp
 8025344:	1c48      	adds	r0, r1, #1
 8025346:	fb0c e303 	mla	r3, ip, r3, lr
 802534a:	b292      	uxth	r2, r2
 802534c:	b29b      	uxth	r3, r3
 802534e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8025352:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8025356:	f102 0b01 	add.w	fp, r2, #1
 802535a:	1c59      	adds	r1, r3, #1
 802535c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8025360:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8025364:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8025368:	0952      	lsrs	r2, r2, #5
 802536a:	4301      	orrs	r1, r0
 802536c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025370:	4311      	orrs	r1, r2
 8025372:	f8a8 1000 	strh.w	r1, [r8]
 8025376:	e739      	b.n	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025378:	f113 0b01 	adds.w	fp, r3, #1
 802537c:	f53f af36 	bmi.w	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025380:	45dc      	cmp	ip, fp
 8025382:	f6ff af33 	blt.w	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025386:	f110 0b01 	adds.w	fp, r0, #1
 802538a:	f53f af2f 	bmi.w	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802538e:	45de      	cmp	lr, fp
 8025390:	f6ff af2c 	blt.w	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025394:	9a08      	ldr	r2, [sp, #32]
 8025396:	9302      	str	r3, [sp, #8]
 8025398:	fa0f f38e 	sxth.w	r3, lr
 802539c:	9301      	str	r3, [sp, #4]
 802539e:	fa0f f38c 	sxth.w	r3, ip
 80253a2:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80253a6:	9105      	str	r1, [sp, #20]
 80253a8:	9300      	str	r3, [sp, #0]
 80253aa:	463a      	mov	r2, r7
 80253ac:	4653      	mov	r3, sl
 80253ae:	4641      	mov	r1, r8
 80253b0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80253b2:	f7ff fd73 	bl	8024e9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80253b6:	e719      	b.n	80251ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80253b8:	9906      	ldr	r1, [sp, #24]
 80253ba:	1422      	asrs	r2, r4, #16
 80253bc:	1433      	asrs	r3, r6, #16
 80253be:	fb01 2303 	mla	r3, r1, r3, r2
 80253c2:	085a      	lsrs	r2, r3, #1
 80253c4:	07d9      	lsls	r1, r3, #31
 80253c6:	5cba      	ldrb	r2, [r7, r2]
 80253c8:	bf54      	ite	pl
 80253ca:	f002 020f 	andpl.w	r2, r2, #15
 80253ce:	1112      	asrmi	r2, r2, #4
 80253d0:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80253d4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80253d8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80253dc:	b2d2      	uxtb	r2, r2
 80253de:	2800      	cmp	r0, #0
 80253e0:	d062      	beq.n	80254a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80253e2:	f103 0a01 	add.w	sl, r3, #1
 80253e6:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80253ea:	f01a 0f01 	tst.w	sl, #1
 80253ee:	5c79      	ldrb	r1, [r7, r1]
 80253f0:	bf0c      	ite	eq
 80253f2:	f001 010f 	andeq.w	r1, r1, #15
 80253f6:	1109      	asrne	r1, r1, #4
 80253f8:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80253fc:	b2c9      	uxtb	r1, r1
 80253fe:	910f      	str	r1, [sp, #60]	; 0x3c
 8025400:	f1bc 0f00 	cmp.w	ip, #0
 8025404:	d019      	beq.n	802543a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025406:	9908      	ldr	r1, [sp, #32]
 8025408:	440b      	add	r3, r1
 802540a:	0859      	lsrs	r1, r3, #1
 802540c:	f013 0f01 	tst.w	r3, #1
 8025410:	5c79      	ldrb	r1, [r7, r1]
 8025412:	bf0c      	ite	eq
 8025414:	f001 010f 	andeq.w	r1, r1, #15
 8025418:	1109      	asrne	r1, r1, #4
 802541a:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802541e:	b2c9      	uxtb	r1, r1
 8025420:	3301      	adds	r3, #1
 8025422:	910b      	str	r1, [sp, #44]	; 0x2c
 8025424:	0859      	lsrs	r1, r3, #1
 8025426:	07db      	lsls	r3, r3, #31
 8025428:	5c79      	ldrb	r1, [r7, r1]
 802542a:	bf54      	ite	pl
 802542c:	f001 010f 	andpl.w	r1, r1, #15
 8025430:	1109      	asrmi	r1, r1, #4
 8025432:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025436:	b2c9      	uxtb	r1, r1
 8025438:	9110      	str	r1, [sp, #64]	; 0x40
 802543a:	b280      	uxth	r0, r0
 802543c:	fa1f fc8c 	uxth.w	ip, ip
 8025440:	fb00 f30c 	mul.w	r3, r0, ip
 8025444:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8025448:	0100      	lsls	r0, r0, #4
 802544a:	fa1f fc8c 	uxth.w	ip, ip
 802544e:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 8025452:	eba1 010c 	sub.w	r1, r1, ip
 8025456:	fa1f fa81 	uxth.w	sl, r1
 802545a:	1ac0      	subs	r0, r0, r3
 802545c:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802545e:	b280      	uxth	r0, r0
 8025460:	4348      	muls	r0, r1
 8025462:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8025464:	fb02 020a 	mla	r2, r2, sl, r0
 8025468:	fb0c 2c01 	mla	ip, ip, r1, r2
 802546c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802546e:	fb03 c302 	mla	r3, r3, r2, ip
 8025472:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8025476:	2bff      	cmp	r3, #255	; 0xff
 8025478:	d12c      	bne.n	80254d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802547a:	4b14      	ldr	r3, [pc, #80]	; (80254cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802547c:	681a      	ldr	r2, [r3, #0]
 802547e:	4b14      	ldr	r3, [pc, #80]	; (80254d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8025480:	0951      	lsrs	r1, r2, #5
 8025482:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8025486:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802548a:	430b      	orrs	r3, r1
 802548c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025490:	4313      	orrs	r3, r2
 8025492:	f8ae 3000 	strh.w	r3, [lr]
 8025496:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8025498:	441c      	add	r4, r3
 802549a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802549c:	f10e 0e02 	add.w	lr, lr, #2
 80254a0:	441e      	add	r6, r3
 80254a2:	f108 38ff 	add.w	r8, r8, #4294967295
 80254a6:	e6ce      	b.n	8025246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80254a8:	f1bc 0f00 	cmp.w	ip, #0
 80254ac:	d0c5      	beq.n	802543a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80254ae:	9908      	ldr	r1, [sp, #32]
 80254b0:	440b      	add	r3, r1
 80254b2:	0859      	lsrs	r1, r3, #1
 80254b4:	07db      	lsls	r3, r3, #31
 80254b6:	5c79      	ldrb	r1, [r7, r1]
 80254b8:	bf54      	ite	pl
 80254ba:	f001 010f 	andpl.w	r1, r1, #15
 80254be:	1109      	asrmi	r1, r1, #4
 80254c0:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80254c4:	b2c9      	uxtb	r1, r1
 80254c6:	910b      	str	r1, [sp, #44]	; 0x2c
 80254c8:	e7b7      	b.n	802543a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80254ca:	bf00      	nop
 80254cc:	2000ef2c 	.word	0x2000ef2c
 80254d0:	fffff800 	.word	0xfffff800
 80254d4:	2b00      	cmp	r3, #0
 80254d6:	d0de      	beq.n	8025496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80254d8:	4a21      	ldr	r2, [pc, #132]	; (8025560 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80254da:	f8be c000 	ldrh.w	ip, [lr]
 80254de:	6810      	ldr	r0, [r2, #0]
 80254e0:	fa1f fa83 	uxth.w	sl, r3
 80254e4:	ea4f 212c 	mov.w	r1, ip, asr #8
 80254e8:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80254ec:	43db      	mvns	r3, r3
 80254ee:	b2db      	uxtb	r3, r3
 80254f0:	fb12 f20a 	smulbb	r2, r2, sl
 80254f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80254f8:	fb01 2103 	mla	r1, r1, r3, r2
 80254fc:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025500:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025504:	b2c0      	uxtb	r0, r0
 8025506:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802550a:	fa5f fc8c 	uxtb.w	ip, ip
 802550e:	fb10 f00a 	smulbb	r0, r0, sl
 8025512:	fb0c 0003 	mla	r0, ip, r3, r0
 8025516:	b289      	uxth	r1, r1
 8025518:	fb1b fb0a 	smulbb	fp, fp, sl
 802551c:	b280      	uxth	r0, r0
 802551e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025522:	fb02 b203 	mla	r2, r2, r3, fp
 8025526:	1c4b      	adds	r3, r1, #1
 8025528:	f100 0b01 	add.w	fp, r0, #1
 802552c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8025530:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8025534:	b292      	uxth	r2, r2
 8025536:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802553a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802553e:	ea4b 0101 	orr.w	r1, fp, r1
 8025542:	f102 0b01 	add.w	fp, r2, #1
 8025546:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802554a:	0952      	lsrs	r2, r2, #5
 802554c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025550:	4311      	orrs	r1, r2
 8025552:	f8ae 1000 	strh.w	r1, [lr]
 8025556:	e79e      	b.n	8025496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8025558:	b013      	add	sp, #76	; 0x4c
 802555a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802555e:	bf00      	nop
 8025560:	2000ef2c 	.word	0x2000ef2c

08025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8025564:	b570      	push	{r4, r5, r6, lr}
 8025566:	1208      	asrs	r0, r1, #8
 8025568:	b29e      	uxth	r6, r3
 802556a:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 802556e:	1213      	asrs	r3, r2, #8
 8025570:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8025574:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8025578:	fb13 f305 	smulbb	r3, r3, r5
 802557c:	fb10 f006 	smulbb	r0, r0, r6
 8025580:	4418      	add	r0, r3
 8025582:	10cc      	asrs	r4, r1, #3
 8025584:	10d3      	asrs	r3, r2, #3
 8025586:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 802558a:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802558e:	fb13 f305 	smulbb	r3, r3, r5
 8025592:	fb14 f406 	smulbb	r4, r4, r6
 8025596:	00c9      	lsls	r1, r1, #3
 8025598:	00d2      	lsls	r2, r2, #3
 802559a:	441c      	add	r4, r3
 802559c:	b2d2      	uxtb	r2, r2
 802559e:	b2cb      	uxtb	r3, r1
 80255a0:	fb12 f205 	smulbb	r2, r2, r5
 80255a4:	b280      	uxth	r0, r0
 80255a6:	fb13 f306 	smulbb	r3, r3, r6
 80255aa:	4413      	add	r3, r2
 80255ac:	1c42      	adds	r2, r0, #1
 80255ae:	b29b      	uxth	r3, r3
 80255b0:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80255b4:	f400 4278 	and.w	r2, r0, #63488	; 0xf800
 80255b8:	1c58      	adds	r0, r3, #1
 80255ba:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255be:	b2a4      	uxth	r4, r4
 80255c0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80255c4:	4310      	orrs	r0, r2
 80255c6:	1c62      	adds	r2, r4, #1
 80255c8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80255cc:	0964      	lsrs	r4, r4, #5
 80255ce:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80255d2:	4320      	orrs	r0, r4
 80255d4:	bd70      	pop	{r4, r5, r6, pc}
	...

080255d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 80255d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255dc:	b08f      	sub	sp, #60	; 0x3c
 80255de:	461c      	mov	r4, r3
 80255e0:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 80255e4:	9004      	str	r0, [sp, #16]
 80255e6:	460d      	mov	r5, r1
 80255e8:	4616      	mov	r6, r2
 80255ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80255ec:	2f00      	cmp	r7, #0
 80255ee:	f000 80f6 	beq.w	80257de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 80255f2:	6820      	ldr	r0, [r4, #0]
 80255f4:	6861      	ldr	r1, [r4, #4]
 80255f6:	aa0a      	add	r2, sp, #40	; 0x28
 80255f8:	c203      	stmia	r2!, {r0, r1}
 80255fa:	6818      	ldr	r0, [r3, #0]
 80255fc:	6859      	ldr	r1, [r3, #4]
 80255fe:	aa0c      	add	r2, sp, #48	; 0x30
 8025600:	c203      	stmia	r2!, {r0, r1}
 8025602:	a80a      	add	r0, sp, #40	; 0x28
 8025604:	f7ef fa9c 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025608:	4621      	mov	r1, r4
 802560a:	a80c      	add	r0, sp, #48	; 0x30
 802560c:	f7ef fadc 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025610:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025614:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025618:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 802561c:	f002 0301 	and.w	r3, r2, #1
 8025620:	9306      	str	r3, [sp, #24]
 8025622:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025626:	f003 0101 	and.w	r1, r3, #1
 802562a:	9105      	str	r1, [sp, #20]
 802562c:	9805      	ldr	r0, [sp, #20]
 802562e:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025632:	4403      	add	r3, r0
 8025634:	fb01 2303 	mla	r3, r1, r3, r2
 8025638:	f04f 0802 	mov.w	r8, #2
 802563c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025640:	441d      	add	r5, r3
 8025642:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025646:	441a      	add	r2, r3
 8025648:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 802564c:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025650:	4419      	add	r1, r3
 8025652:	4b64      	ldr	r3, [pc, #400]	; (80257e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025654:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025658:	6818      	ldr	r0, [r3, #0]
 802565a:	6803      	ldr	r3, [r0, #0]
 802565c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802565e:	4798      	blx	r3
 8025660:	4a61      	ldr	r2, [pc, #388]	; (80257e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8025662:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025666:	8813      	ldrh	r3, [r2, #0]
 8025668:	f9bd a030 	ldrsh.w	sl, [sp, #48]	; 0x30
 802566c:	2fff      	cmp	r7, #255	; 0xff
 802566e:	fb03 a404 	mla	r4, r3, r4, sl
 8025672:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025676:	f106 0604 	add.w	r6, r6, #4
 802567a:	4611      	mov	r1, r2
 802567c:	fb03 fb0b 	mul.w	fp, r3, fp
 8025680:	d06b      	beq.n	802575a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 8025682:	f1c7 03ff 	rsb	r3, r7, #255	; 0xff
 8025686:	9303      	str	r3, [sp, #12]
 8025688:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 802568c:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025690:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025694:	9b07      	ldr	r3, [sp, #28]
 8025696:	42a3      	cmp	r3, r4
 8025698:	f240 809c 	bls.w	80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 802569c:	9b06      	ldr	r3, [sp, #24]
 802569e:	2b00      	cmp	r3, #0
 80256a0:	d039      	beq.n	8025716 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 80256a2:	782b      	ldrb	r3, [r5, #0]
 80256a4:	8822      	ldrh	r2, [r4, #0]
 80256a6:	9804      	ldr	r0, [sp, #16]
 80256a8:	f003 030f 	and.w	r3, r3, #15
 80256ac:	f105 0801 	add.w	r8, r5, #1
 80256b0:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256b4:	9b03      	ldr	r3, [sp, #12]
 80256b6:	9300      	str	r3, [sp, #0]
 80256b8:	463b      	mov	r3, r7
 80256ba:	f7ff ff53 	bl	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256be:	f824 0b02 	strh.w	r0, [r4], #2
 80256c2:	f109 3bff 	add.w	fp, r9, #4294967295
 80256c6:	f1bb 0f01 	cmp.w	fp, #1
 80256ca:	46a2      	mov	sl, r4
 80256cc:	f104 0404 	add.w	r4, r4, #4
 80256d0:	dd24      	ble.n	802571c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 80256d2:	f898 3000 	ldrb.w	r3, [r8]
 80256d6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80256da:	9804      	ldr	r0, [sp, #16]
 80256dc:	091b      	lsrs	r3, r3, #4
 80256de:	f1ab 0b02 	sub.w	fp, fp, #2
 80256e2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80256e6:	9b03      	ldr	r3, [sp, #12]
 80256e8:	9300      	str	r3, [sp, #0]
 80256ea:	463b      	mov	r3, r7
 80256ec:	f7ff ff3a 	bl	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80256f0:	f824 0c04 	strh.w	r0, [r4, #-4]
 80256f4:	f818 3b01 	ldrb.w	r3, [r8], #1
 80256f8:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80256fc:	9804      	ldr	r0, [sp, #16]
 80256fe:	f003 030f 	and.w	r3, r3, #15
 8025702:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025706:	9b03      	ldr	r3, [sp, #12]
 8025708:	9300      	str	r3, [sp, #0]
 802570a:	463b      	mov	r3, r7
 802570c:	f7ff ff2a 	bl	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025710:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025714:	e7d7      	b.n	80256c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025716:	46a8      	mov	r8, r5
 8025718:	46cb      	mov	fp, r9
 802571a:	e7d4      	b.n	80256c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802571c:	d10e      	bne.n	802573c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 802571e:	f898 3000 	ldrb.w	r3, [r8]
 8025722:	f8ba 2000 	ldrh.w	r2, [sl]
 8025726:	9804      	ldr	r0, [sp, #16]
 8025728:	091b      	lsrs	r3, r3, #4
 802572a:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802572e:	9b03      	ldr	r3, [sp, #12]
 8025730:	9300      	str	r3, [sp, #0]
 8025732:	463b      	mov	r3, r7
 8025734:	f7ff ff16 	bl	8025564 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025738:	f82a 0b02 	strh.w	r0, [sl], #2
 802573c:	9b08      	ldr	r3, [sp, #32]
 802573e:	9a05      	ldr	r2, [sp, #20]
 8025740:	881c      	ldrh	r4, [r3, #0]
 8025742:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025746:	eba4 0409 	sub.w	r4, r4, r9
 802574a:	4413      	add	r3, r2
 802574c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8025750:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025752:	fb93 f3f2 	sdiv	r3, r3, r2
 8025756:	441d      	add	r5, r3
 8025758:	e79c      	b.n	8025694 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 802575a:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 802575e:	45a3      	cmp	fp, r4
 8025760:	d938      	bls.n	80257d4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025762:	9b06      	ldr	r3, [sp, #24]
 8025764:	b1f3      	cbz	r3, 80257a4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8025766:	782b      	ldrb	r3, [r5, #0]
 8025768:	f003 030f 	and.w	r3, r3, #15
 802576c:	1c6a      	adds	r2, r5, #1
 802576e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025772:	8023      	strh	r3, [r4, #0]
 8025774:	f109 30ff 	add.w	r0, r9, #4294967295
 8025778:	3402      	adds	r4, #2
 802577a:	2801      	cmp	r0, #1
 802577c:	4623      	mov	r3, r4
 802577e:	f104 0404 	add.w	r4, r4, #4
 8025782:	dd12      	ble.n	80257aa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8025784:	7813      	ldrb	r3, [r2, #0]
 8025786:	091b      	lsrs	r3, r3, #4
 8025788:	3802      	subs	r0, #2
 802578a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802578e:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025792:	f812 3b01 	ldrb.w	r3, [r2], #1
 8025796:	f003 030f 	and.w	r3, r3, #15
 802579a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 802579e:	f824 3c02 	strh.w	r3, [r4, #-2]
 80257a2:	e7ea      	b.n	802577a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80257a4:	462a      	mov	r2, r5
 80257a6:	4648      	mov	r0, r9
 80257a8:	e7e7      	b.n	802577a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 80257aa:	d106      	bne.n	80257ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 80257ac:	7812      	ldrb	r2, [r2, #0]
 80257ae:	0912      	lsrs	r2, r2, #4
 80257b0:	3302      	adds	r3, #2
 80257b2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80257b6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80257ba:	880c      	ldrh	r4, [r1, #0]
 80257bc:	9a05      	ldr	r2, [sp, #20]
 80257be:	eba4 0409 	sub.w	r4, r4, r9
 80257c2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80257c6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80257ca:	4413      	add	r3, r2
 80257cc:	fb93 f3f8 	sdiv	r3, r3, r8
 80257d0:	441d      	add	r5, r3
 80257d2:	e7c4      	b.n	802575e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 80257d4:	4b03      	ldr	r3, [pc, #12]	; (80257e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80257d6:	6818      	ldr	r0, [r3, #0]
 80257d8:	6803      	ldr	r3, [r0, #0]
 80257da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80257dc:	4798      	blx	r3
 80257de:	b00f      	add	sp, #60	; 0x3c
 80257e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80257e4:	2000ef1c 	.word	0x2000ef1c
 80257e8:	2000ef16 	.word	0x2000ef16

080257ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 80257ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80257ee:	f89d 5014 	ldrb.w	r5, [sp, #20]
 80257f2:	2dff      	cmp	r5, #255	; 0xff
 80257f4:	ea4f 2711 	mov.w	r7, r1, lsr #8
 80257f8:	d10c      	bne.n	8025814 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257fa:	2bff      	cmp	r3, #255	; 0xff
 80257fc:	d10a      	bne.n	8025814 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 80257fe:	4b25      	ldr	r3, [pc, #148]	; (8025894 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025800:	0948      	lsrs	r0, r1, #5
 8025802:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8025806:	403b      	ands	r3, r7
 8025808:	4318      	orrs	r0, r3
 802580a:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802580e:	4308      	orrs	r0, r1
 8025810:	b280      	uxth	r0, r0
 8025812:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025814:	fb15 f503 	smulbb	r5, r5, r3
 8025818:	b2ab      	uxth	r3, r5
 802581a:	1c5d      	adds	r5, r3, #1
 802581c:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025820:	1214      	asrs	r4, r2, #8
 8025822:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8025826:	fa1f fc85 	uxth.w	ip, r5
 802582a:	10d6      	asrs	r6, r2, #3
 802582c:	00d0      	lsls	r0, r2, #3
 802582e:	43ed      	mvns	r5, r5
 8025830:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025834:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025838:	b2eb      	uxtb	r3, r5
 802583a:	b2c0      	uxtb	r0, r0
 802583c:	fb12 f20c 	smulbb	r2, r2, ip
 8025840:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025844:	fb04 2403 	mla	r4, r4, r3, r2
 8025848:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 802584c:	b2c8      	uxtb	r0, r1
 802584e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8025852:	b2fd      	uxtb	r5, r7
 8025854:	fb10 f00c 	smulbb	r0, r0, ip
 8025858:	b2a4      	uxth	r4, r4
 802585a:	fb02 0003 	mla	r0, r2, r3, r0
 802585e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8025862:	fb15 f50c 	smulbb	r5, r5, ip
 8025866:	fb06 5503 	mla	r5, r6, r3, r5
 802586a:	b283      	uxth	r3, r0
 802586c:	1c60      	adds	r0, r4, #1
 802586e:	b2ad      	uxth	r5, r5
 8025870:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 8025874:	1c58      	adds	r0, r3, #1
 8025876:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 802587a:	1c6b      	adds	r3, r5, #1
 802587c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8025880:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8025884:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025888:	096d      	lsrs	r5, r5, #5
 802588a:	4320      	orrs	r0, r4
 802588c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025890:	4328      	orrs	r0, r5
 8025892:	e7be      	b.n	8025812 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025894:	00fff800 	.word	0x00fff800

08025898 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 8025898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802589c:	461c      	mov	r4, r3
 802589e:	b08d      	sub	sp, #52	; 0x34
 80258a0:	460d      	mov	r5, r1
 80258a2:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80258a4:	6861      	ldr	r1, [r4, #4]
 80258a6:	f89d 905c 	ldrb.w	r9, [sp, #92]	; 0x5c
 80258aa:	4680      	mov	r8, r0
 80258ac:	6820      	ldr	r0, [r4, #0]
 80258ae:	4616      	mov	r6, r2
 80258b0:	aa08      	add	r2, sp, #32
 80258b2:	c203      	stmia	r2!, {r0, r1}
 80258b4:	6818      	ldr	r0, [r3, #0]
 80258b6:	6859      	ldr	r1, [r3, #4]
 80258b8:	aa0a      	add	r2, sp, #40	; 0x28
 80258ba:	c203      	stmia	r2!, {r0, r1}
 80258bc:	a808      	add	r0, sp, #32
 80258be:	f7ef f93f 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80258c2:	4621      	mov	r1, r4
 80258c4:	a80a      	add	r0, sp, #40	; 0x28
 80258c6:	f7ef f97f 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80258ca:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 80258ce:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 80258d2:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 80258d6:	f002 0301 	and.w	r3, r2, #1
 80258da:	9303      	str	r3, [sp, #12]
 80258dc:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80258e0:	f003 0101 	and.w	r1, r3, #1
 80258e4:	9102      	str	r1, [sp, #8]
 80258e6:	9802      	ldr	r0, [sp, #8]
 80258e8:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80258ec:	4403      	add	r3, r0
 80258ee:	fb01 2303 	mla	r3, r1, r3, r2
 80258f2:	f04f 0a02 	mov.w	sl, #2
 80258f6:	fb93 f3fa 	sdiv	r3, r3, sl
 80258fa:	441d      	add	r5, r3
 80258fc:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025900:	441a      	add	r2, r3
 8025902:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8025906:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 802590a:	4a3f      	ldr	r2, [pc, #252]	; (8025a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 802590c:	9205      	str	r2, [sp, #20]
 802590e:	4419      	add	r1, r3
 8025910:	6810      	ldr	r0, [r2, #0]
 8025912:	f8ad 102a 	strh.w	r1, [sp, #42]	; 0x2a
 8025916:	6803      	ldr	r3, [r0, #0]
 8025918:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802591a:	4798      	blx	r3
 802591c:	4b3b      	ldr	r3, [pc, #236]	; (8025a0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 802591e:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 8025922:	8819      	ldrh	r1, [r3, #0]
 8025924:	f9bd c028 	ldrsh.w	ip, [sp, #40]	; 0x28
 8025928:	fb01 c404 	mla	r4, r1, r4, ip
 802592c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025930:	434f      	muls	r7, r1
 8025932:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 8025936:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 802593a:	3604      	adds	r6, #4
 802593c:	9204      	str	r2, [sp, #16]
 802593e:	9b04      	ldr	r3, [sp, #16]
 8025940:	429c      	cmp	r4, r3
 8025942:	d258      	bcs.n	80259f6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025944:	9b03      	ldr	r3, [sp, #12]
 8025946:	2b00      	cmp	r3, #0
 8025948:	d034      	beq.n	80259b4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802594a:	782b      	ldrb	r3, [r5, #0]
 802594c:	f003 030f 	and.w	r3, r3, #15
 8025950:	1c6f      	adds	r7, r5, #1
 8025952:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025956:	0e0b      	lsrs	r3, r1, #24
 8025958:	d006      	beq.n	8025968 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 802595a:	8822      	ldrh	r2, [r4, #0]
 802595c:	9300      	str	r3, [sp, #0]
 802595e:	4640      	mov	r0, r8
 8025960:	464b      	mov	r3, r9
 8025962:	f7ff ff43 	bl	80257ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025966:	8020      	strh	r0, [r4, #0]
 8025968:	3402      	adds	r4, #2
 802596a:	f10b 3aff 	add.w	sl, fp, #4294967295
 802596e:	f1ba 0f01 	cmp.w	sl, #1
 8025972:	dd22      	ble.n	80259ba <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 8025974:	783b      	ldrb	r3, [r7, #0]
 8025976:	091b      	lsrs	r3, r3, #4
 8025978:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802597c:	0e0b      	lsrs	r3, r1, #24
 802597e:	d006      	beq.n	802598e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 8025980:	8822      	ldrh	r2, [r4, #0]
 8025982:	9300      	str	r3, [sp, #0]
 8025984:	4640      	mov	r0, r8
 8025986:	464b      	mov	r3, r9
 8025988:	f7ff ff30 	bl	80257ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802598c:	8020      	strh	r0, [r4, #0]
 802598e:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025992:	f003 030f 	and.w	r3, r3, #15
 8025996:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802599a:	0e0b      	lsrs	r3, r1, #24
 802599c:	d006      	beq.n	80259ac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 802599e:	8862      	ldrh	r2, [r4, #2]
 80259a0:	9300      	str	r3, [sp, #0]
 80259a2:	4640      	mov	r0, r8
 80259a4:	464b      	mov	r3, r9
 80259a6:	f7ff ff21 	bl	80257ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80259aa:	8060      	strh	r0, [r4, #2]
 80259ac:	3404      	adds	r4, #4
 80259ae:	f1aa 0a02 	sub.w	sl, sl, #2
 80259b2:	e7dc      	b.n	802596e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259b4:	462f      	mov	r7, r5
 80259b6:	46da      	mov	sl, fp
 80259b8:	e7d9      	b.n	802596e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 80259ba:	d10d      	bne.n	80259d8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 80259bc:	783b      	ldrb	r3, [r7, #0]
 80259be:	091b      	lsrs	r3, r3, #4
 80259c0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80259c4:	0e0b      	lsrs	r3, r1, #24
 80259c6:	d006      	beq.n	80259d6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 80259c8:	8822      	ldrh	r2, [r4, #0]
 80259ca:	9300      	str	r3, [sp, #0]
 80259cc:	4640      	mov	r0, r8
 80259ce:	464b      	mov	r3, r9
 80259d0:	f7ff ff0c 	bl	80257ec <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80259d4:	8020      	strh	r0, [r4, #0]
 80259d6:	3402      	adds	r4, #2
 80259d8:	9b06      	ldr	r3, [sp, #24]
 80259da:	9a02      	ldr	r2, [sp, #8]
 80259dc:	881b      	ldrh	r3, [r3, #0]
 80259de:	eba3 030b 	sub.w	r3, r3, fp
 80259e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80259e6:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80259ea:	4413      	add	r3, r2
 80259ec:	9a07      	ldr	r2, [sp, #28]
 80259ee:	fb93 f3f2 	sdiv	r3, r3, r2
 80259f2:	441d      	add	r5, r3
 80259f4:	e7a3      	b.n	802593e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 80259f6:	9b05      	ldr	r3, [sp, #20]
 80259f8:	6818      	ldr	r0, [r3, #0]
 80259fa:	6803      	ldr	r3, [r0, #0]
 80259fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80259fe:	4798      	blx	r3
 8025a00:	b00d      	add	sp, #52	; 0x34
 8025a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a06:	bf00      	nop
 8025a08:	2000ef1c 	.word	0x2000ef1c
 8025a0c:	2000ef16 	.word	0x2000ef16

08025a10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025a10:	b570      	push	{r4, r5, r6, lr}
 8025a12:	1214      	asrs	r4, r2, #8
 8025a14:	788d      	ldrb	r5, [r1, #2]
 8025a16:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8025a1a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8025a1e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025a22:	fb15 f503 	smulbb	r5, r5, r3
 8025a26:	fb04 5506 	mla	r5, r4, r6, r5
 8025a2a:	10d0      	asrs	r0, r2, #3
 8025a2c:	784c      	ldrb	r4, [r1, #1]
 8025a2e:	7809      	ldrb	r1, [r1, #0]
 8025a30:	00d2      	lsls	r2, r2, #3
 8025a32:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8025a36:	b2d2      	uxtb	r2, r2
 8025a38:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 8025a3c:	fb14 f403 	smulbb	r4, r4, r3
 8025a40:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025a44:	fb11 f303 	smulbb	r3, r1, r3
 8025a48:	fb00 4406 	mla	r4, r0, r6, r4
 8025a4c:	fb02 3306 	mla	r3, r2, r6, r3
 8025a50:	b2ad      	uxth	r5, r5
 8025a52:	b29b      	uxth	r3, r3
 8025a54:	b2a4      	uxth	r4, r4
 8025a56:	1c68      	adds	r0, r5, #1
 8025a58:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8025a5c:	1c62      	adds	r2, r4, #1
 8025a5e:	1c58      	adds	r0, r3, #1
 8025a60:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025a64:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025a68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025a6c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025a70:	0964      	lsrs	r4, r4, #5
 8025a72:	4328      	orrs	r0, r5
 8025a74:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025a78:	4320      	orrs	r0, r4
 8025a7a:	bd70      	pop	{r4, r5, r6, pc}

08025a7c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 8025a7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a80:	b08f      	sub	sp, #60	; 0x3c
 8025a82:	461c      	mov	r4, r3
 8025a84:	f89d 7064 	ldrb.w	r7, [sp, #100]	; 0x64
 8025a88:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8025a8a:	4682      	mov	sl, r0
 8025a8c:	460e      	mov	r6, r1
 8025a8e:	4615      	mov	r5, r2
 8025a90:	2f00      	cmp	r7, #0
 8025a92:	f000 8142 	beq.w	8025d1a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 8025a96:	6820      	ldr	r0, [r4, #0]
 8025a98:	6861      	ldr	r1, [r4, #4]
 8025a9a:	aa0a      	add	r2, sp, #40	; 0x28
 8025a9c:	c203      	stmia	r2!, {r0, r1}
 8025a9e:	6818      	ldr	r0, [r3, #0]
 8025aa0:	6859      	ldr	r1, [r3, #4]
 8025aa2:	aa0c      	add	r2, sp, #48	; 0x30
 8025aa4:	c203      	stmia	r2!, {r0, r1}
 8025aa6:	a80a      	add	r0, sp, #40	; 0x28
 8025aa8:	f7ef f84a 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025aac:	4621      	mov	r1, r4
 8025aae:	a80c      	add	r0, sp, #48	; 0x30
 8025ab0:	f7ef f88a 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025ab4:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8025ab8:	f9bd b036 	ldrsh.w	fp, [sp, #54]	; 0x36
 8025abc:	f002 0301 	and.w	r3, r2, #1
 8025ac0:	9306      	str	r3, [sp, #24]
 8025ac2:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025ac6:	f003 0101 	and.w	r1, r3, #1
 8025aca:	9105      	str	r1, [sp, #20]
 8025acc:	9805      	ldr	r0, [sp, #20]
 8025ace:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	; 0x32
 8025ad2:	4403      	add	r3, r0
 8025ad4:	fb01 2303 	mla	r3, r1, r3, r2
 8025ad8:	f04f 0802 	mov.w	r8, #2
 8025adc:	fb93 f3f8 	sdiv	r3, r3, r8
 8025ae0:	441e      	add	r6, r3
 8025ae2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8025ae6:	441a      	add	r2, r3
 8025ae8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8025aec:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025af0:	4419      	add	r1, r3
 8025af2:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025af6:	9303      	str	r3, [sp, #12]
 8025af8:	4b89      	ldr	r3, [pc, #548]	; (8025d20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025afa:	f8ad 1032 	strh.w	r1, [sp, #50]	; 0x32
 8025afe:	6818      	ldr	r0, [r3, #0]
 8025b00:	6803      	ldr	r3, [r0, #0]
 8025b02:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025b04:	4798      	blx	r3
 8025b06:	4a87      	ldr	r2, [pc, #540]	; (8025d24 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 8025b08:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	; 0x32
 8025b0c:	8813      	ldrh	r3, [r2, #0]
 8025b0e:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	; 0x30
 8025b12:	2fff      	cmp	r7, #255	; 0xff
 8025b14:	fb03 9404 	mla	r4, r3, r4, r9
 8025b18:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025b1c:	f105 0504 	add.w	r5, r5, #4
 8025b20:	4694      	mov	ip, r2
 8025b22:	fb03 f30b 	mul.w	r3, r3, fp
 8025b26:	d071      	beq.n	8025c0c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 8025b28:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025b2c:	43f9      	mvns	r1, r7
 8025b2e:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025b32:	b2c9      	uxtb	r1, r1
 8025b34:	9104      	str	r1, [sp, #16]
 8025b36:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 8025b3a:	9b07      	ldr	r3, [sp, #28]
 8025b3c:	42a3      	cmp	r3, r4
 8025b3e:	f240 80e7 	bls.w	8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025b42:	9b06      	ldr	r3, [sp, #24]
 8025b44:	2b00      	cmp	r3, #0
 8025b46:	d03d      	beq.n	8025bc4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 8025b48:	7831      	ldrb	r1, [r6, #0]
 8025b4a:	9b04      	ldr	r3, [sp, #16]
 8025b4c:	8822      	ldrh	r2, [r4, #0]
 8025b4e:	9300      	str	r3, [sp, #0]
 8025b50:	f001 010f 	and.w	r1, r1, #15
 8025b54:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b58:	463b      	mov	r3, r7
 8025b5a:	4429      	add	r1, r5
 8025b5c:	4650      	mov	r0, sl
 8025b5e:	f7ff ff57 	bl	8025a10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b62:	9b03      	ldr	r3, [sp, #12]
 8025b64:	f824 0b02 	strh.w	r0, [r4], #2
 8025b68:	f106 0801 	add.w	r8, r6, #1
 8025b6c:	f103 3bff 	add.w	fp, r3, #4294967295
 8025b70:	f1bb 0f01 	cmp.w	fp, #1
 8025b74:	46a1      	mov	r9, r4
 8025b76:	f104 0404 	add.w	r4, r4, #4
 8025b7a:	dd27      	ble.n	8025bcc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 8025b7c:	f898 1000 	ldrb.w	r1, [r8]
 8025b80:	9b04      	ldr	r3, [sp, #16]
 8025b82:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8025b86:	9300      	str	r3, [sp, #0]
 8025b88:	0909      	lsrs	r1, r1, #4
 8025b8a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025b8e:	463b      	mov	r3, r7
 8025b90:	4429      	add	r1, r5
 8025b92:	4650      	mov	r0, sl
 8025b94:	f7ff ff3c 	bl	8025a10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025b98:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025b9c:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025ba0:	9b04      	ldr	r3, [sp, #16]
 8025ba2:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025ba6:	9300      	str	r3, [sp, #0]
 8025ba8:	f001 010f 	and.w	r1, r1, #15
 8025bac:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025bb0:	463b      	mov	r3, r7
 8025bb2:	4429      	add	r1, r5
 8025bb4:	4650      	mov	r0, sl
 8025bb6:	f7ff ff2b 	bl	8025a10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025bba:	f1ab 0b02 	sub.w	fp, fp, #2
 8025bbe:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025bc2:	e7d5      	b.n	8025b70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bc4:	46b0      	mov	r8, r6
 8025bc6:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025bca:	e7d1      	b.n	8025b70 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025bcc:	d10f      	bne.n	8025bee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025bce:	f898 1000 	ldrb.w	r1, [r8]
 8025bd2:	9b04      	ldr	r3, [sp, #16]
 8025bd4:	f8b9 2000 	ldrh.w	r2, [r9]
 8025bd8:	9300      	str	r3, [sp, #0]
 8025bda:	0909      	lsrs	r1, r1, #4
 8025bdc:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025be0:	463b      	mov	r3, r7
 8025be2:	4429      	add	r1, r5
 8025be4:	4650      	mov	r0, sl
 8025be6:	f7ff ff13 	bl	8025a10 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025bea:	f829 0b02 	strh.w	r0, [r9], #2
 8025bee:	9b08      	ldr	r3, [sp, #32]
 8025bf0:	9a05      	ldr	r2, [sp, #20]
 8025bf2:	881c      	ldrh	r4, [r3, #0]
 8025bf4:	9b03      	ldr	r3, [sp, #12]
 8025bf6:	1ae4      	subs	r4, r4, r3
 8025bf8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 8025bfc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025c00:	4413      	add	r3, r2
 8025c02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025c04:	fb93 f3f2 	sdiv	r3, r3, r2
 8025c08:	441e      	add	r6, r3
 8025c0a:	e796      	b.n	8025b3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025c0c:	4f46      	ldr	r7, [pc, #280]	; (8025d28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025c0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025c12:	42a3      	cmp	r3, r4
 8025c14:	d97c      	bls.n	8025d10 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 8025c16:	9a06      	ldr	r2, [sp, #24]
 8025c18:	2a00      	cmp	r2, #0
 8025c1a:	d054      	beq.n	8025cc6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025c1c:	7830      	ldrb	r0, [r6, #0]
 8025c1e:	f000 000f 	and.w	r0, r0, #15
 8025c22:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c26:	eb05 0e00 	add.w	lr, r5, r0
 8025c2a:	5c28      	ldrb	r0, [r5, r0]
 8025c2c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025c30:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025c34:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8025c38:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8025c3c:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025c40:	ea42 020e 	orr.w	r2, r2, lr
 8025c44:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025c48:	f824 2b02 	strh.w	r2, [r4], #2
 8025c4c:	9a03      	ldr	r2, [sp, #12]
 8025c4e:	1c71      	adds	r1, r6, #1
 8025c50:	f102 3eff 	add.w	lr, r2, #4294967295
 8025c54:	f1be 0f01 	cmp.w	lr, #1
 8025c58:	4620      	mov	r0, r4
 8025c5a:	f104 0404 	add.w	r4, r4, #4
 8025c5e:	dd36      	ble.n	8025cce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 8025c60:	7808      	ldrb	r0, [r1, #0]
 8025c62:	0900      	lsrs	r0, r0, #4
 8025c64:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c68:	eb05 0a00 	add.w	sl, r5, r0
 8025c6c:	f1ae 0e02 	sub.w	lr, lr, #2
 8025c70:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025c74:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025c78:	00d2      	lsls	r2, r2, #3
 8025c7a:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025c7e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025c82:	ea49 0202 	orr.w	r2, r9, r2
 8025c86:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025c8a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025c8e:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025c92:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025c96:	f000 000f 	and.w	r0, r0, #15
 8025c9a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025c9e:	eb05 0a00 	add.w	sl, r5, r0
 8025ca2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025ca6:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025caa:	00d2      	lsls	r2, r2, #3
 8025cac:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025cb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025cb4:	ea49 0202 	orr.w	r2, r9, r2
 8025cb8:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025cbc:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025cc0:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025cc4:	e7c6      	b.n	8025c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cc6:	4631      	mov	r1, r6
 8025cc8:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025ccc:	e7c2      	b.n	8025c54 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025cce:	d111      	bne.n	8025cf4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025cd0:	7809      	ldrb	r1, [r1, #0]
 8025cd2:	0909      	lsrs	r1, r1, #4
 8025cd4:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025cd8:	186c      	adds	r4, r5, r1
 8025cda:	5c69      	ldrb	r1, [r5, r1]
 8025cdc:	78a2      	ldrb	r2, [r4, #2]
 8025cde:	7864      	ldrb	r4, [r4, #1]
 8025ce0:	00e4      	lsls	r4, r4, #3
 8025ce2:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025ce6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025cea:	4322      	orrs	r2, r4
 8025cec:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025cf0:	f820 2b02 	strh.w	r2, [r0], #2
 8025cf4:	9a03      	ldr	r2, [sp, #12]
 8025cf6:	f8bc 4000 	ldrh.w	r4, [ip]
 8025cfa:	9905      	ldr	r1, [sp, #20]
 8025cfc:	1aa4      	subs	r4, r4, r2
 8025cfe:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8025d02:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025d06:	440a      	add	r2, r1
 8025d08:	fb92 f2f8 	sdiv	r2, r2, r8
 8025d0c:	4416      	add	r6, r2
 8025d0e:	e780      	b.n	8025c12 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025d10:	4b03      	ldr	r3, [pc, #12]	; (8025d20 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025d12:	6818      	ldr	r0, [r3, #0]
 8025d14:	6803      	ldr	r3, [r0, #0]
 8025d16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025d18:	4798      	blx	r3
 8025d1a:	b00f      	add	sp, #60	; 0x3c
 8025d1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025d20:	2000ef1c 	.word	0x2000ef1c
 8025d24:	2000ef16 	.word	0x2000ef16
 8025d28:	fffff800 	.word	0xfffff800

08025d2c <CRC_Lock>:
 8025d2c:	b530      	push	{r4, r5, lr}
 8025d2e:	4a20      	ldr	r2, [pc, #128]	; (8025db0 <CRC_Lock+0x84>)
 8025d30:	6813      	ldr	r3, [r2, #0]
 8025d32:	f023 0301 	bic.w	r3, r3, #1
 8025d36:	6013      	str	r3, [r2, #0]
 8025d38:	4b1e      	ldr	r3, [pc, #120]	; (8025db4 <CRC_Lock+0x88>)
 8025d3a:	681a      	ldr	r2, [r3, #0]
 8025d3c:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8025d40:	4022      	ands	r2, r4
 8025d42:	f24c 2540 	movw	r5, #49728	; 0xc240
 8025d46:	42aa      	cmp	r2, r5
 8025d48:	d005      	beq.n	8025d56 <CRC_Lock+0x2a>
 8025d4a:	681b      	ldr	r3, [r3, #0]
 8025d4c:	f24c 2270 	movw	r2, #49776	; 0xc270
 8025d50:	4023      	ands	r3, r4
 8025d52:	4293      	cmp	r3, r2
 8025d54:	d124      	bne.n	8025da0 <CRC_Lock+0x74>
 8025d56:	4b18      	ldr	r3, [pc, #96]	; (8025db8 <CRC_Lock+0x8c>)
 8025d58:	681b      	ldr	r3, [r3, #0]
 8025d5a:	bb0b      	cbnz	r3, 8025da0 <CRC_Lock+0x74>
 8025d5c:	4b17      	ldr	r3, [pc, #92]	; (8025dbc <CRC_Lock+0x90>)
 8025d5e:	681a      	ldr	r2, [r3, #0]
 8025d60:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d64:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8025d68:	d00d      	beq.n	8025d86 <CRC_Lock+0x5a>
 8025d6a:	681a      	ldr	r2, [r3, #0]
 8025d6c:	f240 4483 	movw	r4, #1155	; 0x483
 8025d70:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025d74:	42a2      	cmp	r2, r4
 8025d76:	d006      	beq.n	8025d86 <CRC_Lock+0x5a>
 8025d78:	681b      	ldr	r3, [r3, #0]
 8025d7a:	f240 4285 	movw	r2, #1157	; 0x485
 8025d7e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025d82:	4293      	cmp	r3, r2
 8025d84:	d10c      	bne.n	8025da0 <CRC_Lock+0x74>
 8025d86:	4b0e      	ldr	r3, [pc, #56]	; (8025dc0 <CRC_Lock+0x94>)
 8025d88:	2201      	movs	r2, #1
 8025d8a:	601a      	str	r2, [r3, #0]
 8025d8c:	681a      	ldr	r2, [r3, #0]
 8025d8e:	2a00      	cmp	r2, #0
 8025d90:	d1fc      	bne.n	8025d8c <CRC_Lock+0x60>
 8025d92:	4b0c      	ldr	r3, [pc, #48]	; (8025dc4 <CRC_Lock+0x98>)
 8025d94:	6018      	str	r0, [r3, #0]
 8025d96:	6818      	ldr	r0, [r3, #0]
 8025d98:	1a43      	subs	r3, r0, r1
 8025d9a:	4258      	negs	r0, r3
 8025d9c:	4158      	adcs	r0, r3
 8025d9e:	bd30      	pop	{r4, r5, pc}
 8025da0:	4b09      	ldr	r3, [pc, #36]	; (8025dc8 <CRC_Lock+0x9c>)
 8025da2:	2201      	movs	r2, #1
 8025da4:	601a      	str	r2, [r3, #0]
 8025da6:	681a      	ldr	r2, [r3, #0]
 8025da8:	2a00      	cmp	r2, #0
 8025daa:	d1fc      	bne.n	8025da6 <CRC_Lock+0x7a>
 8025dac:	4b07      	ldr	r3, [pc, #28]	; (8025dcc <CRC_Lock+0xa0>)
 8025dae:	e7f1      	b.n	8025d94 <CRC_Lock+0x68>
 8025db0:	e0002000 	.word	0xe0002000
 8025db4:	e000ed00 	.word	0xe000ed00
 8025db8:	e0042000 	.word	0xe0042000
 8025dbc:	5c001000 	.word	0x5c001000
 8025dc0:	58024c08 	.word	0x58024c08
 8025dc4:	58024c00 	.word	0x58024c00
 8025dc8:	40023008 	.word	0x40023008
 8025dcc:	40023000 	.word	0x40023000

08025dd0 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025dd0:	6101      	str	r1, [r0, #16]
 8025dd2:	4770      	bx	lr

08025dd4 <_ZN8touchgfx8Gestures4tickEv>:
 8025dd4:	7b83      	ldrb	r3, [r0, #14]
 8025dd6:	b14b      	cbz	r3, 8025dec <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025dd8:	8903      	ldrh	r3, [r0, #8]
 8025dda:	3301      	adds	r3, #1
 8025ddc:	b29b      	uxth	r3, r3
 8025dde:	2b07      	cmp	r3, #7
 8025de0:	8103      	strh	r3, [r0, #8]
 8025de2:	bf81      	itttt	hi
 8025de4:	2300      	movhi	r3, #0
 8025de6:	8143      	strhhi	r3, [r0, #10]
 8025de8:	8183      	strhhi	r3, [r0, #12]
 8025dea:	7383      	strbhi	r3, [r0, #14]
 8025dec:	4770      	bx	lr
	...

08025df0 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025df0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025df4:	4698      	mov	r8, r3
 8025df6:	8883      	ldrh	r3, [r0, #4]
 8025df8:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025dfc:	eba8 0303 	sub.w	r3, r8, r3
 8025e00:	b21b      	sxth	r3, r3
 8025e02:	4604      	mov	r4, r0
 8025e04:	2b00      	cmp	r3, #0
 8025e06:	4617      	mov	r7, r2
 8025e08:	4a18      	ldr	r2, [pc, #96]	; (8025e6c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025e0a:	9200      	str	r2, [sp, #0]
 8025e0c:	bfb8      	it	lt
 8025e0e:	425b      	neglt	r3, r3
 8025e10:	8aa2      	ldrh	r2, [r4, #20]
 8025e12:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8025e16:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025e1a:	b21b      	sxth	r3, r3
 8025e1c:	460e      	mov	r6, r1
 8025e1e:	4293      	cmp	r3, r2
 8025e20:	88c1      	ldrh	r1, [r0, #6]
 8025e22:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025e26:	f04f 0000 	mov.w	r0, #0
 8025e2a:	f88d 0004 	strb.w	r0, [sp, #4]
 8025e2e:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025e32:	dc07      	bgt.n	8025e44 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025e34:	1a69      	subs	r1, r5, r1
 8025e36:	b209      	sxth	r1, r1
 8025e38:	2900      	cmp	r1, #0
 8025e3a:	bfb8      	it	lt
 8025e3c:	4249      	neglt	r1, r1
 8025e3e:	b209      	sxth	r1, r1
 8025e40:	428a      	cmp	r2, r1
 8025e42:	da10      	bge.n	8025e66 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025e44:	6920      	ldr	r0, [r4, #16]
 8025e46:	6803      	ldr	r3, [r0, #0]
 8025e48:	4669      	mov	r1, sp
 8025e4a:	685b      	ldr	r3, [r3, #4]
 8025e4c:	4798      	blx	r3
 8025e4e:	eba8 0606 	sub.w	r6, r8, r6
 8025e52:	2300      	movs	r3, #0
 8025e54:	1bef      	subs	r7, r5, r7
 8025e56:	2001      	movs	r0, #1
 8025e58:	8123      	strh	r3, [r4, #8]
 8025e5a:	8166      	strh	r6, [r4, #10]
 8025e5c:	81a7      	strh	r7, [r4, #12]
 8025e5e:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025e62:	80e5      	strh	r5, [r4, #6]
 8025e64:	73a0      	strb	r0, [r4, #14]
 8025e66:	b004      	add	sp, #16
 8025e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025e6c:	0802a6fc 	.word	0x0802a6fc

08025e70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025e70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025e72:	461e      	mov	r6, r3
 8025e74:	1e4b      	subs	r3, r1, #1
 8025e76:	2b01      	cmp	r3, #1
 8025e78:	b085      	sub	sp, #20
 8025e7a:	4604      	mov	r4, r0
 8025e7c:	460d      	mov	r5, r1
 8025e7e:	4617      	mov	r7, r2
 8025e80:	d84b      	bhi.n	8025f1a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025e82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025e86:	1cd3      	adds	r3, r2, #3
 8025e88:	b29b      	uxth	r3, r3
 8025e8a:	2b06      	cmp	r3, #6
 8025e8c:	d916      	bls.n	8025ebc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025e8e:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8025f30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025e92:	f8cd c004 	str.w	ip, [sp, #4]
 8025e96:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025e9a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025e9e:	6900      	ldr	r0, [r0, #16]
 8025ea0:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025ea4:	f04f 0c00 	mov.w	ip, #0
 8025ea8:	f88d c008 	strb.w	ip, [sp, #8]
 8025eac:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025eb0:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025eb4:	6803      	ldr	r3, [r0, #0]
 8025eb6:	a901      	add	r1, sp, #4
 8025eb8:	689b      	ldr	r3, [r3, #8]
 8025eba:	4798      	blx	r3
 8025ebc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025ec0:	1cd3      	adds	r3, r2, #3
 8025ec2:	b29b      	uxth	r3, r3
 8025ec4:	2b06      	cmp	r3, #6
 8025ec6:	d916      	bls.n	8025ef6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025ec8:	f8df c064 	ldr.w	ip, [pc, #100]	; 8025f30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025ecc:	f8cd c004 	str.w	ip, [sp, #4]
 8025ed0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025ed4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025ed8:	6920      	ldr	r0, [r4, #16]
 8025eda:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025ede:	f04f 0c01 	mov.w	ip, #1
 8025ee2:	f88d c008 	strb.w	ip, [sp, #8]
 8025ee6:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025eea:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025eee:	6803      	ldr	r3, [r0, #0]
 8025ef0:	a901      	add	r1, sp, #4
 8025ef2:	689b      	ldr	r3, [r3, #8]
 8025ef4:	4798      	blx	r3
 8025ef6:	4b0d      	ldr	r3, [pc, #52]	; (8025f2c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025ef8:	9301      	str	r3, [sp, #4]
 8025efa:	6920      	ldr	r0, [r4, #16]
 8025efc:	f88d 5008 	strb.w	r5, [sp, #8]
 8025f00:	2300      	movs	r3, #0
 8025f02:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025f06:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025f0a:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025f0e:	6803      	ldr	r3, [r0, #0]
 8025f10:	a901      	add	r1, sp, #4
 8025f12:	681b      	ldr	r3, [r3, #0]
 8025f14:	4798      	blx	r3
 8025f16:	b005      	add	sp, #20
 8025f18:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025f1a:	2900      	cmp	r1, #0
 8025f1c:	d1eb      	bne.n	8025ef6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f1e:	80a2      	strh	r2, [r4, #4]
 8025f20:	80c6      	strh	r6, [r0, #6]
 8025f22:	60a1      	str	r1, [r4, #8]
 8025f24:	81a1      	strh	r1, [r4, #12]
 8025f26:	73a1      	strb	r1, [r4, #14]
 8025f28:	e7e5      	b.n	8025ef6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025f2a:	bf00      	nop
 8025f2c:	0802a6e8 	.word	0x0802a6e8
 8025f30:	0802a710 	.word	0x0802a710

08025f34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8025f34:	10c9      	asrs	r1, r1, #3
 8025f36:	2900      	cmp	r1, #0
 8025f38:	bfb8      	it	lt
 8025f3a:	4249      	neglt	r1, r1
 8025f3c:	2801      	cmp	r0, #1
 8025f3e:	d108      	bne.n	8025f52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f40:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8025f44:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8025f48:	4601      	mov	r1, r0
 8025f4a:	dd02      	ble.n	8025f52 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8025f4c:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8025f50:	4770      	bx	lr
 8025f52:	29ff      	cmp	r1, #255	; 0xff
 8025f54:	bfa8      	it	ge
 8025f56:	21ff      	movge	r1, #255	; 0xff
 8025f58:	4608      	mov	r0, r1
 8025f5a:	4770      	bx	lr

08025f5c <_ZN8touchgfx10Rasterizer6lineToEii>:
 8025f5c:	b410      	push	{r4}
 8025f5e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8025f62:	429c      	cmp	r4, r3
 8025f64:	d803      	bhi.n	8025f6e <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8025f66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f6a:	f7ed b8ef 	b.w	801314c <_ZN8touchgfx7Outline6lineToEii>
 8025f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8025f72:	4770      	bx	lr

08025f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8025f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025f78:	b08b      	sub	sp, #44	; 0x2c
 8025f7a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8025f7e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8025f82:	9308      	str	r3, [sp, #32]
 8025f84:	4606      	mov	r6, r0
 8025f86:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8025f8a:	9309      	str	r3, [sp, #36]	; 0x24
 8025f8c:	468a      	mov	sl, r1
 8025f8e:	f7ed fa4a 	bl	8013426 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8025f92:	68b5      	ldr	r5, [r6, #8]
 8025f94:	4604      	mov	r4, r0
 8025f96:	2d00      	cmp	r5, #0
 8025f98:	d044      	beq.n	8026024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8025f9a:	6873      	ldr	r3, [r6, #4]
 8025f9c:	42ab      	cmp	r3, r5
 8025f9e:	d33d      	bcc.n	802601c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8025fa0:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8025fa4:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8025fa8:	eb02 0b03 	add.w	fp, r2, r3
 8025fac:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8025fb0:	fb02 1203 	mla	r2, r2, r3, r1
 8025fb4:	9205      	str	r2, [sp, #20]
 8025fb6:	1e6a      	subs	r2, r5, #1
 8025fb8:	9204      	str	r2, [sp, #16]
 8025fba:	f04f 0800 	mov.w	r8, #0
 8025fbe:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8025fc2:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025fc6:	454b      	cmp	r3, r9
 8025fc8:	463a      	mov	r2, r7
 8025fca:	d008      	beq.n	8025fde <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8025fcc:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8025fd0:	eb03 0b09 	add.w	fp, r3, r9
 8025fd4:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8025fd8:	fb03 1309 	mla	r3, r3, r9, r1
 8025fdc:	9305      	str	r3, [sp, #20]
 8025fde:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8025fe2:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8025fe6:	4498      	add	r8, r3
 8025fe8:	9b04      	ldr	r3, [sp, #16]
 8025fea:	3b01      	subs	r3, #1
 8025fec:	9304      	str	r3, [sp, #16]
 8025fee:	9b04      	ldr	r3, [sp, #16]
 8025ff0:	3301      	adds	r3, #1
 8025ff2:	d015      	beq.n	8026020 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8025ff4:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8025ff8:	42bb      	cmp	r3, r7
 8025ffa:	d117      	bne.n	802602c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8025ffc:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8026000:	9b04      	ldr	r3, [sp, #16]
 8026002:	4548      	cmp	r0, r9
 8026004:	f103 33ff 	add.w	r3, r3, #4294967295
 8026008:	d17f      	bne.n	802610a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802600a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802600e:	4401      	add	r1, r0
 8026010:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8026014:	4480      	add	r8, r0
 8026016:	e7e9      	b.n	8025fec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8026018:	461f      	mov	r7, r3
 802601a:	e044      	b.n	80260a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802601c:	2000      	movs	r0, #0
 802601e:	e002      	b.n	8026026 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8026020:	2900      	cmp	r1, #0
 8026022:	d16f      	bne.n	8026104 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8026024:	2001      	movs	r0, #1
 8026026:	b00b      	add	sp, #44	; 0x2c
 8026028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802602c:	2900      	cmp	r1, #0
 802602e:	d030      	beq.n	8026092 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8026030:	2f00      	cmp	r7, #0
 8026032:	db29      	blt.n	8026088 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8026034:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8026038:	42bb      	cmp	r3, r7
 802603a:	dd25      	ble.n	8026088 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802603c:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8026040:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8026044:	f7ff ff76 	bl	8025f34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8026048:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802604a:	fb10 f003 	smulbb	r0, r0, r3
 802604e:	b280      	uxth	r0, r0
 8026050:	1c41      	adds	r1, r0, #1
 8026052:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8026056:	1209      	asrs	r1, r1, #8
 8026058:	f011 0fff 	tst.w	r1, #255	; 0xff
 802605c:	d014      	beq.n	8026088 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802605e:	9808      	ldr	r0, [sp, #32]
 8026060:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8026062:	b2c9      	uxtb	r1, r1
 8026064:	b2ba      	uxth	r2, r7
 8026066:	9102      	str	r1, [sp, #8]
 8026068:	2101      	movs	r1, #1
 802606a:	4413      	add	r3, r2
 802606c:	9101      	str	r1, [sp, #4]
 802606e:	4402      	add	r2, r0
 8026070:	fa0f f18b 	sxth.w	r1, fp
 8026074:	f8da 0000 	ldr.w	r0, [sl]
 8026078:	9100      	str	r1, [sp, #0]
 802607a:	6941      	ldr	r1, [r0, #20]
 802607c:	b21b      	sxth	r3, r3
 802607e:	460d      	mov	r5, r1
 8026080:	b212      	sxth	r2, r2
 8026082:	9905      	ldr	r1, [sp, #20]
 8026084:	4650      	mov	r0, sl
 8026086:	47a8      	blx	r5
 8026088:	9b04      	ldr	r3, [sp, #16]
 802608a:	3301      	adds	r3, #1
 802608c:	f107 0201 	add.w	r2, r7, #1
 8026090:	d0c8      	beq.n	8026024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8026092:	f9b4 7000 	ldrsh.w	r7, [r4]
 8026096:	1abb      	subs	r3, r7, r2
 8026098:	2b00      	cmp	r3, #0
 802609a:	dd31      	ble.n	8026100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802609c:	2a00      	cmp	r2, #0
 802609e:	dabb      	bge.n	8026018 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80260a0:	2f00      	cmp	r7, #0
 80260a2:	dd2d      	ble.n	8026100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260a4:	2200      	movs	r2, #0
 80260a6:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80260aa:	19d1      	adds	r1, r2, r7
 80260ac:	4299      	cmp	r1, r3
 80260ae:	db02      	blt.n	80260b6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80260b0:	1a9f      	subs	r7, r3, r2
 80260b2:	2f00      	cmp	r7, #0
 80260b4:	dd24      	ble.n	8026100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260b6:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80260ba:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80260be:	f7ff ff39 	bl	8025f34 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80260c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260c4:	fb10 f003 	smulbb	r0, r0, r3
 80260c8:	b280      	uxth	r0, r0
 80260ca:	1c41      	adds	r1, r0, #1
 80260cc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80260d0:	1209      	asrs	r1, r1, #8
 80260d2:	f011 0fff 	tst.w	r1, #255	; 0xff
 80260d6:	d013      	beq.n	8026100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80260d8:	9808      	ldr	r0, [sp, #32]
 80260da:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80260dc:	b292      	uxth	r2, r2
 80260de:	b2c9      	uxtb	r1, r1
 80260e0:	4413      	add	r3, r2
 80260e2:	9102      	str	r1, [sp, #8]
 80260e4:	4402      	add	r2, r0
 80260e6:	b23f      	sxth	r7, r7
 80260e8:	f8da 0000 	ldr.w	r0, [sl]
 80260ec:	9701      	str	r7, [sp, #4]
 80260ee:	fa0f f18b 	sxth.w	r1, fp
 80260f2:	9100      	str	r1, [sp, #0]
 80260f4:	6947      	ldr	r7, [r0, #20]
 80260f6:	9905      	ldr	r1, [sp, #20]
 80260f8:	b21b      	sxth	r3, r3
 80260fa:	b212      	sxth	r2, r2
 80260fc:	4650      	mov	r0, sl
 80260fe:	47b8      	blx	r7
 8026100:	464b      	mov	r3, r9
 8026102:	e75c      	b.n	8025fbe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8026104:	2f00      	cmp	r7, #0
 8026106:	da95      	bge.n	8026034 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8026108:	e78c      	b.n	8026024 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802610a:	2900      	cmp	r1, #0
 802610c:	d0f8      	beq.n	8026100 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802610e:	e78f      	b.n	8026030 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08026110 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8026110:	4b4b      	ldr	r3, [pc, #300]	; (8026240 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8026112:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8026116:	2500      	movs	r5, #0
 8026118:	f100 0620 	add.w	r6, r0, #32
 802611c:	4604      	mov	r4, r0
 802611e:	e9c0 3100 	strd	r3, r1, [r0]
 8026122:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8026126:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802612a:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802612e:	f100 0718 	add.w	r7, r0, #24
 8026132:	4630      	mov	r0, r6
 8026134:	4690      	mov	r8, r2
 8026136:	f7ec fb41 	bl	80127bc <_ZN8touchgfx7OutlineC1Ev>
 802613a:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802613e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8026142:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8026146:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802614a:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802614e:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8026152:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8026156:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802615a:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802615e:	f9b8 2000 	ldrsh.w	r2, [r8]
 8026162:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8026166:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802616a:	9500      	str	r5, [sp, #0]
 802616c:	4410      	add	r0, r2
 802616e:	b280      	uxth	r0, r0
 8026170:	fa0f fa80 	sxth.w	sl, r0
 8026174:	45aa      	cmp	sl, r5
 8026176:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802617a:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802617e:	dd5c      	ble.n	802623a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026180:	4591      	cmp	r9, r2
 8026182:	dd5a      	ble.n	802623a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026184:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8026188:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802618c:	440b      	add	r3, r1
 802618e:	b29b      	uxth	r3, r3
 8026190:	b21d      	sxth	r5, r3
 8026192:	2d00      	cmp	r5, #0
 8026194:	dd51      	ble.n	802623a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8026196:	458e      	cmp	lr, r1
 8026198:	dd4f      	ble.n	802623a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 802619a:	45d1      	cmp	r9, sl
 802619c:	bfb8      	it	lt
 802619e:	fa1f f089 	uxthlt.w	r0, r9
 80261a2:	45ae      	cmp	lr, r5
 80261a4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80261a8:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80261ac:	bfb8      	it	lt
 80261ae:	fa1f f38e 	uxthlt.w	r3, lr
 80261b2:	1a80      	subs	r0, r0, r2
 80261b4:	1a5b      	subs	r3, r3, r1
 80261b6:	f8ad 0004 	strh.w	r0, [sp, #4]
 80261ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 80261be:	f8ad 2000 	strh.w	r2, [sp]
 80261c2:	f8ad 1002 	strh.w	r1, [sp, #2]
 80261c6:	466d      	mov	r5, sp
 80261c8:	e895 0003 	ldmia.w	r5, {r0, r1}
 80261cc:	e887 0003 	stmia.w	r7, {r0, r1}
 80261d0:	f8dc 3000 	ldr.w	r3, [ip]
 80261d4:	4660      	mov	r0, ip
 80261d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80261d8:	4639      	mov	r1, r7
 80261da:	4798      	blx	r3
 80261dc:	6861      	ldr	r1, [r4, #4]
 80261de:	4628      	mov	r0, r5
 80261e0:	3104      	adds	r1, #4
 80261e2:	f7ee fcf1 	bl	8014bc8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80261e6:	4638      	mov	r0, r7
 80261e8:	f7ee fcaa 	bl	8014b40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80261ec:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 80261f0:	f8bd 2000 	ldrh.w	r2, [sp]
 80261f4:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 80261f8:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 80261fc:	4630      	mov	r0, r6
 80261fe:	f7ec fac1 	bl	8012784 <_ZN8touchgfx7Outline5resetEv>
 8026202:	f9bd 3000 	ldrsh.w	r3, [sp]
 8026206:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802620a:	015b      	lsls	r3, r3, #5
 802620c:	60a3      	str	r3, [r4, #8]
 802620e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8026212:	015b      	lsls	r3, r3, #5
 8026214:	60e3      	str	r3, [r4, #12]
 8026216:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802621a:	015b      	lsls	r3, r3, #5
 802621c:	6123      	str	r3, [r4, #16]
 802621e:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8026222:	015b      	lsls	r3, r3, #5
 8026224:	6163      	str	r3, [r4, #20]
 8026226:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802622a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802622e:	4620      	mov	r0, r4
 8026230:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8026234:	b002      	add	sp, #8
 8026236:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802623a:	2300      	movs	r3, #0
 802623c:	9301      	str	r3, [sp, #4]
 802623e:	e7c2      	b.n	80261c6 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8026240:	0802aa34 	.word	0x0802aa34

08026244 <_ZN8touchgfx6Canvas5closeEv>:
 8026244:	b538      	push	{r3, r4, r5, lr}
 8026246:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802624a:	4604      	mov	r4, r0
 802624c:	b193      	cbz	r3, 8026274 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802624e:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8026252:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8026256:	4213      	tst	r3, r2
 8026258:	d10c      	bne.n	8026274 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802625a:	f100 0520 	add.w	r5, r0, #32
 802625e:	b123      	cbz	r3, 802626a <_ZN8touchgfx6Canvas5closeEv+0x26>
 8026260:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8026264:	4628      	mov	r0, r5
 8026266:	f7ff fe79 	bl	8025f5c <_ZN8touchgfx10Rasterizer6lineToEii>
 802626a:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802626e:	4628      	mov	r0, r5
 8026270:	f7ff fe74 	bl	8025f5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026274:	2300      	movs	r3, #0
 8026276:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802627a:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802627e:	4298      	cmp	r0, r3
 8026280:	bf34      	ite	cc
 8026282:	2000      	movcc	r0, #0
 8026284:	2001      	movcs	r0, #1
 8026286:	bd38      	pop	{r3, r4, r5, pc}

08026288 <_ZN8touchgfx6Canvas6renderEh>:
 8026288:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802628c:	4604      	mov	r4, r0
 802628e:	6840      	ldr	r0, [r0, #4]
 8026290:	6803      	ldr	r3, [r0, #0]
 8026292:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8026294:	460d      	mov	r5, r1
 8026296:	4798      	blx	r3
 8026298:	fb10 f105 	smulbb	r1, r0, r5
 802629c:	b289      	uxth	r1, r1
 802629e:	1c4d      	adds	r5, r1, #1
 80262a0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80262a4:	122d      	asrs	r5, r5, #8
 80262a6:	f000 809d 	beq.w	80263e4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80262aa:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80262ae:	2b00      	cmp	r3, #0
 80262b0:	f000 8098 	beq.w	80263e4 <_ZN8touchgfx6Canvas6renderEh+0x15c>
 80262b4:	4620      	mov	r0, r4
 80262b6:	f7ff ffc5 	bl	8026244 <_ZN8touchgfx6Canvas5closeEv>
 80262ba:	4607      	mov	r7, r0
 80262bc:	2800      	cmp	r0, #0
 80262be:	d048      	beq.n	8026352 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80262c0:	6863      	ldr	r3, [r4, #4]
 80262c2:	4e49      	ldr	r6, [pc, #292]	; (80263e8 <_ZN8touchgfx6Canvas6renderEh+0x160>)
 80262c4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80262c6:	6837      	ldr	r7, [r6, #0]
 80262c8:	6803      	ldr	r3, [r0, #0]
 80262ca:	689b      	ldr	r3, [r3, #8]
 80262cc:	4798      	blx	r3
 80262ce:	4601      	mov	r1, r0
 80262d0:	4638      	mov	r0, r7
 80262d2:	f7ea fad9 	bl	8010888 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80262d6:	4607      	mov	r7, r0
 80262d8:	f7de f9ec 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80262dc:	6803      	ldr	r3, [r0, #0]
 80262de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80262e0:	4798      	blx	r3
 80262e2:	4680      	mov	r8, r0
 80262e4:	f7de f9e6 	bl	80046b4 <_ZN8touchgfx3HAL3lcdEv>
 80262e8:	6803      	ldr	r3, [r0, #0]
 80262ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80262ec:	4798      	blx	r3
 80262ee:	280b      	cmp	r0, #11
 80262f0:	d85d      	bhi.n	80263ae <_ZN8touchgfx6Canvas6renderEh+0x126>
 80262f2:	e8df f000 	tbb	[pc, r0]
 80262f6:	5e53      	.short	0x5e53
 80262f8:	325c066e 	.word	0x325c066e
 80262fc:	67676742 	.word	0x67676742
 8026300:	6767      	.short	0x6767
 8026302:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026306:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802630a:	2208      	movs	r2, #8
 802630c:	fb91 f2f2 	sdiv	r2, r1, r2
 8026310:	fb08 2303 	mla	r3, r8, r3, r2
 8026314:	441f      	add	r7, r3
 8026316:	424b      	negs	r3, r1
 8026318:	f003 0307 	and.w	r3, r3, #7
 802631c:	f001 0107 	and.w	r1, r1, #7
 8026320:	bf58      	it	pl
 8026322:	4259      	negpl	r1, r3
 8026324:	b2c9      	uxtb	r1, r1
 8026326:	b2ed      	uxtb	r5, r5
 8026328:	e9cd 1500 	strd	r1, r5, [sp]
 802632c:	6860      	ldr	r0, [r4, #4]
 802632e:	463a      	mov	r2, r7
 8026330:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8026332:	fa0f f388 	sxth.w	r3, r8
 8026336:	f104 0020 	add.w	r0, r4, #32
 802633a:	f7ff fe1b 	bl	8025f74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802633e:	6863      	ldr	r3, [r4, #4]
 8026340:	4607      	mov	r7, r0
 8026342:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8026344:	6803      	ldr	r3, [r0, #0]
 8026346:	691b      	ldr	r3, [r3, #16]
 8026348:	4798      	blx	r3
 802634a:	6830      	ldr	r0, [r6, #0]
 802634c:	6803      	ldr	r3, [r0, #0]
 802634e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026350:	4798      	blx	r3
 8026352:	4638      	mov	r0, r7
 8026354:	b002      	add	sp, #8
 8026356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802635a:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802635e:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8026362:	2204      	movs	r2, #4
 8026364:	fb91 f2f2 	sdiv	r2, r1, r2
 8026368:	fb08 2303 	mla	r3, r8, r3, r2
 802636c:	441f      	add	r7, r3
 802636e:	424b      	negs	r3, r1
 8026370:	f003 0303 	and.w	r3, r3, #3
 8026374:	f001 0103 	and.w	r1, r1, #3
 8026378:	e7d2      	b.n	8026320 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802637a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802637e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8026382:	2900      	cmp	r1, #0
 8026384:	f04f 0202 	mov.w	r2, #2
 8026388:	fb91 f2f2 	sdiv	r2, r1, r2
 802638c:	f001 0101 	and.w	r1, r1, #1
 8026390:	fb08 2303 	mla	r3, r8, r3, r2
 8026394:	441f      	add	r7, r3
 8026396:	bfb8      	it	lt
 8026398:	4249      	neglt	r1, r1
 802639a:	e7c3      	b.n	8026324 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802639c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263a0:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263a4:	fb08 f303 	mul.w	r3, r8, r3
 80263a8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80263ac:	441f      	add	r7, r3
 80263ae:	2100      	movs	r1, #0
 80263b0:	e7b9      	b.n	8026326 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80263b2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263b6:	fb08 f203 	mul.w	r2, r8, r3
 80263ba:	8b23      	ldrh	r3, [r4, #24]
 80263bc:	2103      	movs	r1, #3
 80263be:	fb13 2301 	smlabb	r3, r3, r1, r2
 80263c2:	e7f3      	b.n	80263ac <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263c4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263c8:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263cc:	fb08 2303 	mla	r3, r8, r3, r2
 80263d0:	e7ec      	b.n	80263ac <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263d2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80263d6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80263da:	fb08 f303 	mul.w	r3, r8, r3
 80263de:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80263e2:	e7e3      	b.n	80263ac <_ZN8touchgfx6Canvas6renderEh+0x124>
 80263e4:	2701      	movs	r7, #1
 80263e6:	e7b4      	b.n	8026352 <_ZN8touchgfx6Canvas6renderEh+0xca>
 80263e8:	2000ef1c 	.word	0x2000ef1c

080263ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80263ec:	b510      	push	{r4, lr}
 80263ee:	4b07      	ldr	r3, [pc, #28]	; (802640c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80263f0:	781b      	ldrb	r3, [r3, #0]
 80263f2:	2b01      	cmp	r3, #1
 80263f4:	d108      	bne.n	8026408 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80263f6:	6843      	ldr	r3, [r0, #4]
 80263f8:	6814      	ldr	r4, [r2, #0]
 80263fa:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80263fe:	680b      	ldr	r3, [r1, #0]
 8026400:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8026404:	6013      	str	r3, [r2, #0]
 8026406:	600c      	str	r4, [r1, #0]
 8026408:	bd10      	pop	{r4, pc}
 802640a:	bf00      	nop
 802640c:	2000ef14 	.word	0x2000ef14

08026410 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8026410:	b513      	push	{r0, r1, r4, lr}
 8026412:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8026416:	4604      	mov	r4, r0
 8026418:	e9cd 2100 	strd	r2, r1, [sp]
 802641c:	b9a3      	cbnz	r3, 8026448 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802641e:	466a      	mov	r2, sp
 8026420:	a901      	add	r1, sp, #4
 8026422:	4620      	mov	r0, r4
 8026424:	f7ff ffe2 	bl	80263ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8026428:	68a3      	ldr	r3, [r4, #8]
 802642a:	9901      	ldr	r1, [sp, #4]
 802642c:	9a00      	ldr	r2, [sp, #0]
 802642e:	1ac9      	subs	r1, r1, r3
 8026430:	68e3      	ldr	r3, [r4, #12]
 8026432:	9101      	str	r1, [sp, #4]
 8026434:	1ad2      	subs	r2, r2, r3
 8026436:	2a00      	cmp	r2, #0
 8026438:	9200      	str	r2, [sp, #0]
 802643a:	da0b      	bge.n	8026454 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802643c:	2301      	movs	r3, #1
 802643e:	2900      	cmp	r1, #0
 8026440:	da0e      	bge.n	8026460 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8026442:	f043 0304 	orr.w	r3, r3, #4
 8026446:	e013      	b.n	8026470 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8026448:	f7ff fefc 	bl	8026244 <_ZN8touchgfx6Canvas5closeEv>
 802644c:	2800      	cmp	r0, #0
 802644e:	d1e6      	bne.n	802641e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8026450:	b002      	add	sp, #8
 8026452:	bd10      	pop	{r4, pc}
 8026454:	6963      	ldr	r3, [r4, #20]
 8026456:	429a      	cmp	r2, r3
 8026458:	bfac      	ite	ge
 802645a:	2302      	movge	r3, #2
 802645c:	2300      	movlt	r3, #0
 802645e:	e7ee      	b.n	802643e <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8026460:	6920      	ldr	r0, [r4, #16]
 8026462:	4281      	cmp	r1, r0
 8026464:	bfac      	ite	ge
 8026466:	2008      	movge	r0, #8
 8026468:	2000      	movlt	r0, #0
 802646a:	4318      	orrs	r0, r3
 802646c:	b2c3      	uxtb	r3, r0
 802646e:	b158      	cbz	r0, 8026488 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8026470:	2200      	movs	r2, #0
 8026472:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 8026476:	9901      	ldr	r1, [sp, #4]
 8026478:	9a00      	ldr	r2, [sp, #0]
 802647a:	66a1      	str	r1, [r4, #104]	; 0x68
 802647c:	66e2      	str	r2, [r4, #108]	; 0x6c
 802647e:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8026482:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 8026486:	e7e3      	b.n	8026450 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 8026488:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802648c:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026490:	4298      	cmp	r0, r3
 8026492:	d803      	bhi.n	802649c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8026494:	f104 0020 	add.w	r0, r4, #32
 8026498:	f7ec fe72 	bl	8013180 <_ZN8touchgfx7Outline6moveToEii>
 802649c:	2301      	movs	r3, #1
 802649e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80264a2:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80264a6:	2300      	movs	r3, #0
 80264a8:	e7e5      	b.n	8026476 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080264aa <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80264aa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80264ac:	ab02      	add	r3, sp, #8
 80264ae:	4604      	mov	r4, r0
 80264b0:	f843 2d08 	str.w	r2, [r3, #-8]!
 80264b4:	9101      	str	r1, [sp, #4]
 80264b6:	461a      	mov	r2, r3
 80264b8:	a901      	add	r1, sp, #4
 80264ba:	f7ff ff97 	bl	80263ec <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80264be:	68a3      	ldr	r3, [r4, #8]
 80264c0:	9901      	ldr	r1, [sp, #4]
 80264c2:	9a00      	ldr	r2, [sp, #0]
 80264c4:	1ac9      	subs	r1, r1, r3
 80264c6:	68e3      	ldr	r3, [r4, #12]
 80264c8:	9101      	str	r1, [sp, #4]
 80264ca:	1ad2      	subs	r2, r2, r3
 80264cc:	2a00      	cmp	r2, #0
 80264ce:	9200      	str	r2, [sp, #0]
 80264d0:	db1c      	blt.n	802650c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80264d2:	6963      	ldr	r3, [r4, #20]
 80264d4:	429a      	cmp	r2, r3
 80264d6:	bfac      	ite	ge
 80264d8:	2002      	movge	r0, #2
 80264da:	2000      	movlt	r0, #0
 80264dc:	2900      	cmp	r1, #0
 80264de:	db17      	blt.n	8026510 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80264e0:	6923      	ldr	r3, [r4, #16]
 80264e2:	4299      	cmp	r1, r3
 80264e4:	bfac      	ite	ge
 80264e6:	2308      	movge	r3, #8
 80264e8:	2300      	movlt	r3, #0
 80264ea:	4303      	orrs	r3, r0
 80264ec:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80264f0:	b2dd      	uxtb	r5, r3
 80264f2:	b978      	cbnz	r0, 8026514 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80264f4:	f104 0020 	add.w	r0, r4, #32
 80264f8:	f7ff fd30 	bl	8025f5c <_ZN8touchgfx10Rasterizer6lineToEii>
 80264fc:	9b01      	ldr	r3, [sp, #4]
 80264fe:	65e3      	str	r3, [r4, #92]	; 0x5c
 8026500:	9b00      	ldr	r3, [sp, #0]
 8026502:	6623      	str	r3, [r4, #96]	; 0x60
 8026504:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8026508:	b002      	add	sp, #8
 802650a:	bd70      	pop	{r4, r5, r6, pc}
 802650c:	2001      	movs	r0, #1
 802650e:	e7e5      	b.n	80264dc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8026510:	2304      	movs	r3, #4
 8026512:	e7ea      	b.n	80264ea <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8026514:	b113      	cbz	r3, 802651c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8026516:	ea10 0305 	ands.w	r3, r0, r5
 802651a:	d11c      	bne.n	8026556 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 802651c:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8026520:	f104 0620 	add.w	r6, r4, #32
 8026524:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8026528:	b98b      	cbnz	r3, 802654e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 802652a:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802652e:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8026532:	4298      	cmp	r0, r3
 8026534:	d802      	bhi.n	802653c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8026536:	4630      	mov	r0, r6
 8026538:	f7ec fe22 	bl	8013180 <_ZN8touchgfx7Outline6moveToEii>
 802653c:	2301      	movs	r3, #1
 802653e:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8026542:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8026546:	e9dd 2100 	ldrd	r2, r1, [sp]
 802654a:	4630      	mov	r0, r6
 802654c:	e7d4      	b.n	80264f8 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802654e:	4630      	mov	r0, r6
 8026550:	f7ff fd04 	bl	8025f5c <_ZN8touchgfx10Rasterizer6lineToEii>
 8026554:	e7f7      	b.n	8026546 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8026556:	461d      	mov	r5, r3
 8026558:	e7d0      	b.n	80264fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

0802655c <_ZN8touchgfx6CanvasD1Ev>:
 802655c:	b510      	push	{r4, lr}
 802655e:	4b04      	ldr	r3, [pc, #16]	; (8026570 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 8026560:	4604      	mov	r4, r0
 8026562:	f840 3b20 	str.w	r3, [r0], #32
 8026566:	f7ec f905 	bl	8012774 <_ZN8touchgfx7OutlineD1Ev>
 802656a:	4620      	mov	r0, r4
 802656c:	bd10      	pop	{r4, pc}
 802656e:	bf00      	nop
 8026570:	0802aa34 	.word	0x0802aa34

08026574 <_ZN8touchgfx6CanvasD0Ev>:
 8026574:	b510      	push	{r4, lr}
 8026576:	4604      	mov	r4, r0
 8026578:	f7ff fff0 	bl	802655c <_ZN8touchgfx6CanvasD1Ev>
 802657c:	4620      	mov	r0, r4
 802657e:	2170      	movs	r1, #112	; 0x70
 8026580:	f000 f826 	bl	80265d0 <_ZdlPvj>
 8026584:	4620      	mov	r0, r4
 8026586:	bd10      	pop	{r4, pc}

08026588 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8026588:	b570      	push	{r4, r5, r6, lr}
 802658a:	790b      	ldrb	r3, [r1, #4]
 802658c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8026590:	2b00      	cmp	r3, #0
 8026592:	bf0c      	ite	eq
 8026594:	2301      	moveq	r3, #1
 8026596:	2300      	movne	r3, #0
 8026598:	4604      	mov	r4, r0
 802659a:	460e      	mov	r6, r1
 802659c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 80265a0:	d109      	bne.n	80265b6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 80265a2:	b14d      	cbz	r5, 80265b8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 80265a4:	7933      	ldrb	r3, [r6, #4]
 80265a6:	2b01      	cmp	r3, #1
 80265a8:	d10c      	bne.n	80265c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80265aa:	6823      	ldr	r3, [r4, #0]
 80265ac:	4620      	mov	r0, r4
 80265ae:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80265b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80265b4:	4718      	bx	r3
 80265b6:	b12d      	cbz	r5, 80265c4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 80265b8:	6823      	ldr	r3, [r4, #0]
 80265ba:	4620      	mov	r0, r4
 80265bc:	695b      	ldr	r3, [r3, #20]
 80265be:	4798      	blx	r3
 80265c0:	2d00      	cmp	r5, #0
 80265c2:	d1ef      	bne.n	80265a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80265c4:	bd70      	pop	{r4, r5, r6, pc}

080265c6 <__aeabi_atexit>:
 80265c6:	460b      	mov	r3, r1
 80265c8:	4601      	mov	r1, r0
 80265ca:	4618      	mov	r0, r3
 80265cc:	f000 b852 	b.w	8026674 <__cxa_atexit>

080265d0 <_ZdlPvj>:
 80265d0:	f000 b812 	b.w	80265f8 <_ZdlPv>

080265d4 <__cxa_guard_acquire>:
 80265d4:	6803      	ldr	r3, [r0, #0]
 80265d6:	07db      	lsls	r3, r3, #31
 80265d8:	d406      	bmi.n	80265e8 <__cxa_guard_acquire+0x14>
 80265da:	7843      	ldrb	r3, [r0, #1]
 80265dc:	b103      	cbz	r3, 80265e0 <__cxa_guard_acquire+0xc>
 80265de:	deff      	udf	#255	; 0xff
 80265e0:	2301      	movs	r3, #1
 80265e2:	7043      	strb	r3, [r0, #1]
 80265e4:	4618      	mov	r0, r3
 80265e6:	4770      	bx	lr
 80265e8:	2000      	movs	r0, #0
 80265ea:	4770      	bx	lr

080265ec <__cxa_guard_release>:
 80265ec:	2301      	movs	r3, #1
 80265ee:	6003      	str	r3, [r0, #0]
 80265f0:	4770      	bx	lr

080265f2 <__cxa_pure_virtual>:
 80265f2:	b508      	push	{r3, lr}
 80265f4:	f000 f80e 	bl	8026614 <_ZSt9terminatev>

080265f8 <_ZdlPv>:
 80265f8:	f000 b88e 	b.w	8026718 <free>

080265fc <_ZN10__cxxabiv111__terminateEPFvvE>:
 80265fc:	b508      	push	{r3, lr}
 80265fe:	4780      	blx	r0
 8026600:	f000 f80d 	bl	802661e <abort>

08026604 <_ZSt13get_terminatev>:
 8026604:	4b02      	ldr	r3, [pc, #8]	; (8026610 <_ZSt13get_terminatev+0xc>)
 8026606:	6818      	ldr	r0, [r3, #0]
 8026608:	f3bf 8f5b 	dmb	ish
 802660c:	4770      	bx	lr
 802660e:	bf00      	nop
 8026610:	200000dc 	.word	0x200000dc

08026614 <_ZSt9terminatev>:
 8026614:	b508      	push	{r3, lr}
 8026616:	f7ff fff5 	bl	8026604 <_ZSt13get_terminatev>
 802661a:	f7ff ffef 	bl	80265fc <_ZN10__cxxabiv111__terminateEPFvvE>

0802661e <abort>:
 802661e:	b508      	push	{r3, lr}
 8026620:	2006      	movs	r0, #6
 8026622:	f000 fc9d 	bl	8026f60 <raise>
 8026626:	2001      	movs	r0, #1
 8026628:	f7dc f9dc 	bl	80029e4 <_exit>

0802662c <__assert_func>:
 802662c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802662e:	4614      	mov	r4, r2
 8026630:	461a      	mov	r2, r3
 8026632:	4b09      	ldr	r3, [pc, #36]	; (8026658 <__assert_func+0x2c>)
 8026634:	681b      	ldr	r3, [r3, #0]
 8026636:	4605      	mov	r5, r0
 8026638:	68d8      	ldr	r0, [r3, #12]
 802663a:	b14c      	cbz	r4, 8026650 <__assert_func+0x24>
 802663c:	4b07      	ldr	r3, [pc, #28]	; (802665c <__assert_func+0x30>)
 802663e:	9100      	str	r1, [sp, #0]
 8026640:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8026644:	4906      	ldr	r1, [pc, #24]	; (8026660 <__assert_func+0x34>)
 8026646:	462b      	mov	r3, r5
 8026648:	f000 f828 	bl	802669c <fiprintf>
 802664c:	f7ff ffe7 	bl	802661e <abort>
 8026650:	4b04      	ldr	r3, [pc, #16]	; (8026664 <__assert_func+0x38>)
 8026652:	461c      	mov	r4, r3
 8026654:	e7f3      	b.n	802663e <__assert_func+0x12>
 8026656:	bf00      	nop
 8026658:	200000e0 	.word	0x200000e0
 802665c:	0802aa40 	.word	0x0802aa40
 8026660:	0802aa4d 	.word	0x0802aa4d
 8026664:	0802aa7b 	.word	0x0802aa7b

08026668 <atexit>:
 8026668:	2300      	movs	r3, #0
 802666a:	4601      	mov	r1, r0
 802666c:	461a      	mov	r2, r3
 802666e:	4618      	mov	r0, r3
 8026670:	f000 bd66 	b.w	8027140 <__register_exitproc>

08026674 <__cxa_atexit>:
 8026674:	b510      	push	{r4, lr}
 8026676:	4c05      	ldr	r4, [pc, #20]	; (802668c <__cxa_atexit+0x18>)
 8026678:	4613      	mov	r3, r2
 802667a:	b12c      	cbz	r4, 8026688 <__cxa_atexit+0x14>
 802667c:	460a      	mov	r2, r1
 802667e:	4601      	mov	r1, r0
 8026680:	2002      	movs	r0, #2
 8026682:	f000 fd5d 	bl	8027140 <__register_exitproc>
 8026686:	bd10      	pop	{r4, pc}
 8026688:	4620      	mov	r0, r4
 802668a:	e7fc      	b.n	8026686 <__cxa_atexit+0x12>
 802668c:	08027141 	.word	0x08027141

08026690 <__errno>:
 8026690:	4b01      	ldr	r3, [pc, #4]	; (8026698 <__errno+0x8>)
 8026692:	6818      	ldr	r0, [r3, #0]
 8026694:	4770      	bx	lr
 8026696:	bf00      	nop
 8026698:	200000e0 	.word	0x200000e0

0802669c <fiprintf>:
 802669c:	b40e      	push	{r1, r2, r3}
 802669e:	b503      	push	{r0, r1, lr}
 80266a0:	4601      	mov	r1, r0
 80266a2:	ab03      	add	r3, sp, #12
 80266a4:	4805      	ldr	r0, [pc, #20]	; (80266bc <fiprintf+0x20>)
 80266a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80266aa:	6800      	ldr	r0, [r0, #0]
 80266ac:	9301      	str	r3, [sp, #4]
 80266ae:	f000 f95b 	bl	8026968 <_vfiprintf_r>
 80266b2:	b002      	add	sp, #8
 80266b4:	f85d eb04 	ldr.w	lr, [sp], #4
 80266b8:	b003      	add	sp, #12
 80266ba:	4770      	bx	lr
 80266bc:	200000e0 	.word	0x200000e0

080266c0 <__libc_init_array>:
 80266c0:	b570      	push	{r4, r5, r6, lr}
 80266c2:	4d0d      	ldr	r5, [pc, #52]	; (80266f8 <__libc_init_array+0x38>)
 80266c4:	4c0d      	ldr	r4, [pc, #52]	; (80266fc <__libc_init_array+0x3c>)
 80266c6:	1b64      	subs	r4, r4, r5
 80266c8:	10a4      	asrs	r4, r4, #2
 80266ca:	2600      	movs	r6, #0
 80266cc:	42a6      	cmp	r6, r4
 80266ce:	d109      	bne.n	80266e4 <__libc_init_array+0x24>
 80266d0:	4d0b      	ldr	r5, [pc, #44]	; (8026700 <__libc_init_array+0x40>)
 80266d2:	4c0c      	ldr	r4, [pc, #48]	; (8026704 <__libc_init_array+0x44>)
 80266d4:	f001 f86e 	bl	80277b4 <_init>
 80266d8:	1b64      	subs	r4, r4, r5
 80266da:	10a4      	asrs	r4, r4, #2
 80266dc:	2600      	movs	r6, #0
 80266de:	42a6      	cmp	r6, r4
 80266e0:	d105      	bne.n	80266ee <__libc_init_array+0x2e>
 80266e2:	bd70      	pop	{r4, r5, r6, pc}
 80266e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80266e8:	4798      	blx	r3
 80266ea:	3601      	adds	r6, #1
 80266ec:	e7ee      	b.n	80266cc <__libc_init_array+0xc>
 80266ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80266f2:	4798      	blx	r3
 80266f4:	3601      	adds	r6, #1
 80266f6:	e7f2      	b.n	80266de <__libc_init_array+0x1e>
 80266f8:	0802b18c 	.word	0x0802b18c
 80266fc:	0802b18c 	.word	0x0802b18c
 8026700:	0802b18c 	.word	0x0802b18c
 8026704:	0802b1a4 	.word	0x0802b1a4

08026708 <malloc>:
 8026708:	4b02      	ldr	r3, [pc, #8]	; (8026714 <malloc+0xc>)
 802670a:	4601      	mov	r1, r0
 802670c:	6818      	ldr	r0, [r3, #0]
 802670e:	f000 b88d 	b.w	802682c <_malloc_r>
 8026712:	bf00      	nop
 8026714:	200000e0 	.word	0x200000e0

08026718 <free>:
 8026718:	4b02      	ldr	r3, [pc, #8]	; (8026724 <free+0xc>)
 802671a:	4601      	mov	r1, r0
 802671c:	6818      	ldr	r0, [r3, #0]
 802671e:	f000 b819 	b.w	8026754 <_free_r>
 8026722:	bf00      	nop
 8026724:	200000e0 	.word	0x200000e0

08026728 <memcpy>:
 8026728:	440a      	add	r2, r1
 802672a:	4291      	cmp	r1, r2
 802672c:	f100 33ff 	add.w	r3, r0, #4294967295
 8026730:	d100      	bne.n	8026734 <memcpy+0xc>
 8026732:	4770      	bx	lr
 8026734:	b510      	push	{r4, lr}
 8026736:	f811 4b01 	ldrb.w	r4, [r1], #1
 802673a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802673e:	4291      	cmp	r1, r2
 8026740:	d1f9      	bne.n	8026736 <memcpy+0xe>
 8026742:	bd10      	pop	{r4, pc}

08026744 <memset>:
 8026744:	4402      	add	r2, r0
 8026746:	4603      	mov	r3, r0
 8026748:	4293      	cmp	r3, r2
 802674a:	d100      	bne.n	802674e <memset+0xa>
 802674c:	4770      	bx	lr
 802674e:	f803 1b01 	strb.w	r1, [r3], #1
 8026752:	e7f9      	b.n	8026748 <memset+0x4>

08026754 <_free_r>:
 8026754:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8026756:	2900      	cmp	r1, #0
 8026758:	d044      	beq.n	80267e4 <_free_r+0x90>
 802675a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802675e:	9001      	str	r0, [sp, #4]
 8026760:	2b00      	cmp	r3, #0
 8026762:	f1a1 0404 	sub.w	r4, r1, #4
 8026766:	bfb8      	it	lt
 8026768:	18e4      	addlt	r4, r4, r3
 802676a:	f000 ff6b 	bl	8027644 <__malloc_lock>
 802676e:	4a1e      	ldr	r2, [pc, #120]	; (80267e8 <_free_r+0x94>)
 8026770:	9801      	ldr	r0, [sp, #4]
 8026772:	6813      	ldr	r3, [r2, #0]
 8026774:	b933      	cbnz	r3, 8026784 <_free_r+0x30>
 8026776:	6063      	str	r3, [r4, #4]
 8026778:	6014      	str	r4, [r2, #0]
 802677a:	b003      	add	sp, #12
 802677c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8026780:	f000 bf66 	b.w	8027650 <__malloc_unlock>
 8026784:	42a3      	cmp	r3, r4
 8026786:	d908      	bls.n	802679a <_free_r+0x46>
 8026788:	6825      	ldr	r5, [r4, #0]
 802678a:	1961      	adds	r1, r4, r5
 802678c:	428b      	cmp	r3, r1
 802678e:	bf01      	itttt	eq
 8026790:	6819      	ldreq	r1, [r3, #0]
 8026792:	685b      	ldreq	r3, [r3, #4]
 8026794:	1949      	addeq	r1, r1, r5
 8026796:	6021      	streq	r1, [r4, #0]
 8026798:	e7ed      	b.n	8026776 <_free_r+0x22>
 802679a:	461a      	mov	r2, r3
 802679c:	685b      	ldr	r3, [r3, #4]
 802679e:	b10b      	cbz	r3, 80267a4 <_free_r+0x50>
 80267a0:	42a3      	cmp	r3, r4
 80267a2:	d9fa      	bls.n	802679a <_free_r+0x46>
 80267a4:	6811      	ldr	r1, [r2, #0]
 80267a6:	1855      	adds	r5, r2, r1
 80267a8:	42a5      	cmp	r5, r4
 80267aa:	d10b      	bne.n	80267c4 <_free_r+0x70>
 80267ac:	6824      	ldr	r4, [r4, #0]
 80267ae:	4421      	add	r1, r4
 80267b0:	1854      	adds	r4, r2, r1
 80267b2:	42a3      	cmp	r3, r4
 80267b4:	6011      	str	r1, [r2, #0]
 80267b6:	d1e0      	bne.n	802677a <_free_r+0x26>
 80267b8:	681c      	ldr	r4, [r3, #0]
 80267ba:	685b      	ldr	r3, [r3, #4]
 80267bc:	6053      	str	r3, [r2, #4]
 80267be:	4421      	add	r1, r4
 80267c0:	6011      	str	r1, [r2, #0]
 80267c2:	e7da      	b.n	802677a <_free_r+0x26>
 80267c4:	d902      	bls.n	80267cc <_free_r+0x78>
 80267c6:	230c      	movs	r3, #12
 80267c8:	6003      	str	r3, [r0, #0]
 80267ca:	e7d6      	b.n	802677a <_free_r+0x26>
 80267cc:	6825      	ldr	r5, [r4, #0]
 80267ce:	1961      	adds	r1, r4, r5
 80267d0:	428b      	cmp	r3, r1
 80267d2:	bf04      	itt	eq
 80267d4:	6819      	ldreq	r1, [r3, #0]
 80267d6:	685b      	ldreq	r3, [r3, #4]
 80267d8:	6063      	str	r3, [r4, #4]
 80267da:	bf04      	itt	eq
 80267dc:	1949      	addeq	r1, r1, r5
 80267de:	6021      	streq	r1, [r4, #0]
 80267e0:	6054      	str	r4, [r2, #4]
 80267e2:	e7ca      	b.n	802677a <_free_r+0x26>
 80267e4:	b003      	add	sp, #12
 80267e6:	bd30      	pop	{r4, r5, pc}
 80267e8:	2000f870 	.word	0x2000f870

080267ec <sbrk_aligned>:
 80267ec:	b570      	push	{r4, r5, r6, lr}
 80267ee:	4e0e      	ldr	r6, [pc, #56]	; (8026828 <sbrk_aligned+0x3c>)
 80267f0:	460c      	mov	r4, r1
 80267f2:	6831      	ldr	r1, [r6, #0]
 80267f4:	4605      	mov	r5, r0
 80267f6:	b911      	cbnz	r1, 80267fe <sbrk_aligned+0x12>
 80267f8:	f000 fb7a 	bl	8026ef0 <_sbrk_r>
 80267fc:	6030      	str	r0, [r6, #0]
 80267fe:	4621      	mov	r1, r4
 8026800:	4628      	mov	r0, r5
 8026802:	f000 fb75 	bl	8026ef0 <_sbrk_r>
 8026806:	1c43      	adds	r3, r0, #1
 8026808:	d00a      	beq.n	8026820 <sbrk_aligned+0x34>
 802680a:	1cc4      	adds	r4, r0, #3
 802680c:	f024 0403 	bic.w	r4, r4, #3
 8026810:	42a0      	cmp	r0, r4
 8026812:	d007      	beq.n	8026824 <sbrk_aligned+0x38>
 8026814:	1a21      	subs	r1, r4, r0
 8026816:	4628      	mov	r0, r5
 8026818:	f000 fb6a 	bl	8026ef0 <_sbrk_r>
 802681c:	3001      	adds	r0, #1
 802681e:	d101      	bne.n	8026824 <sbrk_aligned+0x38>
 8026820:	f04f 34ff 	mov.w	r4, #4294967295
 8026824:	4620      	mov	r0, r4
 8026826:	bd70      	pop	{r4, r5, r6, pc}
 8026828:	2000f874 	.word	0x2000f874

0802682c <_malloc_r>:
 802682c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026830:	1ccd      	adds	r5, r1, #3
 8026832:	f025 0503 	bic.w	r5, r5, #3
 8026836:	3508      	adds	r5, #8
 8026838:	2d0c      	cmp	r5, #12
 802683a:	bf38      	it	cc
 802683c:	250c      	movcc	r5, #12
 802683e:	2d00      	cmp	r5, #0
 8026840:	4607      	mov	r7, r0
 8026842:	db01      	blt.n	8026848 <_malloc_r+0x1c>
 8026844:	42a9      	cmp	r1, r5
 8026846:	d905      	bls.n	8026854 <_malloc_r+0x28>
 8026848:	230c      	movs	r3, #12
 802684a:	603b      	str	r3, [r7, #0]
 802684c:	2600      	movs	r6, #0
 802684e:	4630      	mov	r0, r6
 8026850:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026854:	4e2e      	ldr	r6, [pc, #184]	; (8026910 <_malloc_r+0xe4>)
 8026856:	f000 fef5 	bl	8027644 <__malloc_lock>
 802685a:	6833      	ldr	r3, [r6, #0]
 802685c:	461c      	mov	r4, r3
 802685e:	bb34      	cbnz	r4, 80268ae <_malloc_r+0x82>
 8026860:	4629      	mov	r1, r5
 8026862:	4638      	mov	r0, r7
 8026864:	f7ff ffc2 	bl	80267ec <sbrk_aligned>
 8026868:	1c43      	adds	r3, r0, #1
 802686a:	4604      	mov	r4, r0
 802686c:	d14d      	bne.n	802690a <_malloc_r+0xde>
 802686e:	6834      	ldr	r4, [r6, #0]
 8026870:	4626      	mov	r6, r4
 8026872:	2e00      	cmp	r6, #0
 8026874:	d140      	bne.n	80268f8 <_malloc_r+0xcc>
 8026876:	6823      	ldr	r3, [r4, #0]
 8026878:	4631      	mov	r1, r6
 802687a:	4638      	mov	r0, r7
 802687c:	eb04 0803 	add.w	r8, r4, r3
 8026880:	f000 fb36 	bl	8026ef0 <_sbrk_r>
 8026884:	4580      	cmp	r8, r0
 8026886:	d13a      	bne.n	80268fe <_malloc_r+0xd2>
 8026888:	6821      	ldr	r1, [r4, #0]
 802688a:	3503      	adds	r5, #3
 802688c:	1a6d      	subs	r5, r5, r1
 802688e:	f025 0503 	bic.w	r5, r5, #3
 8026892:	3508      	adds	r5, #8
 8026894:	2d0c      	cmp	r5, #12
 8026896:	bf38      	it	cc
 8026898:	250c      	movcc	r5, #12
 802689a:	4629      	mov	r1, r5
 802689c:	4638      	mov	r0, r7
 802689e:	f7ff ffa5 	bl	80267ec <sbrk_aligned>
 80268a2:	3001      	adds	r0, #1
 80268a4:	d02b      	beq.n	80268fe <_malloc_r+0xd2>
 80268a6:	6823      	ldr	r3, [r4, #0]
 80268a8:	442b      	add	r3, r5
 80268aa:	6023      	str	r3, [r4, #0]
 80268ac:	e00e      	b.n	80268cc <_malloc_r+0xa0>
 80268ae:	6822      	ldr	r2, [r4, #0]
 80268b0:	1b52      	subs	r2, r2, r5
 80268b2:	d41e      	bmi.n	80268f2 <_malloc_r+0xc6>
 80268b4:	2a0b      	cmp	r2, #11
 80268b6:	d916      	bls.n	80268e6 <_malloc_r+0xba>
 80268b8:	1961      	adds	r1, r4, r5
 80268ba:	42a3      	cmp	r3, r4
 80268bc:	6025      	str	r5, [r4, #0]
 80268be:	bf18      	it	ne
 80268c0:	6059      	strne	r1, [r3, #4]
 80268c2:	6863      	ldr	r3, [r4, #4]
 80268c4:	bf08      	it	eq
 80268c6:	6031      	streq	r1, [r6, #0]
 80268c8:	5162      	str	r2, [r4, r5]
 80268ca:	604b      	str	r3, [r1, #4]
 80268cc:	4638      	mov	r0, r7
 80268ce:	f104 060b 	add.w	r6, r4, #11
 80268d2:	f000 febd 	bl	8027650 <__malloc_unlock>
 80268d6:	f026 0607 	bic.w	r6, r6, #7
 80268da:	1d23      	adds	r3, r4, #4
 80268dc:	1af2      	subs	r2, r6, r3
 80268de:	d0b6      	beq.n	802684e <_malloc_r+0x22>
 80268e0:	1b9b      	subs	r3, r3, r6
 80268e2:	50a3      	str	r3, [r4, r2]
 80268e4:	e7b3      	b.n	802684e <_malloc_r+0x22>
 80268e6:	6862      	ldr	r2, [r4, #4]
 80268e8:	42a3      	cmp	r3, r4
 80268ea:	bf0c      	ite	eq
 80268ec:	6032      	streq	r2, [r6, #0]
 80268ee:	605a      	strne	r2, [r3, #4]
 80268f0:	e7ec      	b.n	80268cc <_malloc_r+0xa0>
 80268f2:	4623      	mov	r3, r4
 80268f4:	6864      	ldr	r4, [r4, #4]
 80268f6:	e7b2      	b.n	802685e <_malloc_r+0x32>
 80268f8:	4634      	mov	r4, r6
 80268fa:	6876      	ldr	r6, [r6, #4]
 80268fc:	e7b9      	b.n	8026872 <_malloc_r+0x46>
 80268fe:	230c      	movs	r3, #12
 8026900:	603b      	str	r3, [r7, #0]
 8026902:	4638      	mov	r0, r7
 8026904:	f000 fea4 	bl	8027650 <__malloc_unlock>
 8026908:	e7a1      	b.n	802684e <_malloc_r+0x22>
 802690a:	6025      	str	r5, [r4, #0]
 802690c:	e7de      	b.n	80268cc <_malloc_r+0xa0>
 802690e:	bf00      	nop
 8026910:	2000f870 	.word	0x2000f870

08026914 <__sfputc_r>:
 8026914:	6893      	ldr	r3, [r2, #8]
 8026916:	3b01      	subs	r3, #1
 8026918:	2b00      	cmp	r3, #0
 802691a:	b410      	push	{r4}
 802691c:	6093      	str	r3, [r2, #8]
 802691e:	da08      	bge.n	8026932 <__sfputc_r+0x1e>
 8026920:	6994      	ldr	r4, [r2, #24]
 8026922:	42a3      	cmp	r3, r4
 8026924:	db01      	blt.n	802692a <__sfputc_r+0x16>
 8026926:	290a      	cmp	r1, #10
 8026928:	d103      	bne.n	8026932 <__sfputc_r+0x1e>
 802692a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802692e:	f000 bb47 	b.w	8026fc0 <__swbuf_r>
 8026932:	6813      	ldr	r3, [r2, #0]
 8026934:	1c58      	adds	r0, r3, #1
 8026936:	6010      	str	r0, [r2, #0]
 8026938:	7019      	strb	r1, [r3, #0]
 802693a:	4608      	mov	r0, r1
 802693c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026940:	4770      	bx	lr

08026942 <__sfputs_r>:
 8026942:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026944:	4606      	mov	r6, r0
 8026946:	460f      	mov	r7, r1
 8026948:	4614      	mov	r4, r2
 802694a:	18d5      	adds	r5, r2, r3
 802694c:	42ac      	cmp	r4, r5
 802694e:	d101      	bne.n	8026954 <__sfputs_r+0x12>
 8026950:	2000      	movs	r0, #0
 8026952:	e007      	b.n	8026964 <__sfputs_r+0x22>
 8026954:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026958:	463a      	mov	r2, r7
 802695a:	4630      	mov	r0, r6
 802695c:	f7ff ffda 	bl	8026914 <__sfputc_r>
 8026960:	1c43      	adds	r3, r0, #1
 8026962:	d1f3      	bne.n	802694c <__sfputs_r+0xa>
 8026964:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08026968 <_vfiprintf_r>:
 8026968:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802696c:	460d      	mov	r5, r1
 802696e:	b09d      	sub	sp, #116	; 0x74
 8026970:	4614      	mov	r4, r2
 8026972:	4698      	mov	r8, r3
 8026974:	4606      	mov	r6, r0
 8026976:	b118      	cbz	r0, 8026980 <_vfiprintf_r+0x18>
 8026978:	6983      	ldr	r3, [r0, #24]
 802697a:	b90b      	cbnz	r3, 8026980 <_vfiprintf_r+0x18>
 802697c:	f000 fd5c 	bl	8027438 <__sinit>
 8026980:	4b89      	ldr	r3, [pc, #548]	; (8026ba8 <_vfiprintf_r+0x240>)
 8026982:	429d      	cmp	r5, r3
 8026984:	d11b      	bne.n	80269be <_vfiprintf_r+0x56>
 8026986:	6875      	ldr	r5, [r6, #4]
 8026988:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802698a:	07d9      	lsls	r1, r3, #31
 802698c:	d405      	bmi.n	802699a <_vfiprintf_r+0x32>
 802698e:	89ab      	ldrh	r3, [r5, #12]
 8026990:	059a      	lsls	r2, r3, #22
 8026992:	d402      	bmi.n	802699a <_vfiprintf_r+0x32>
 8026994:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026996:	f000 fded 	bl	8027574 <__retarget_lock_acquire_recursive>
 802699a:	89ab      	ldrh	r3, [r5, #12]
 802699c:	071b      	lsls	r3, r3, #28
 802699e:	d501      	bpl.n	80269a4 <_vfiprintf_r+0x3c>
 80269a0:	692b      	ldr	r3, [r5, #16]
 80269a2:	b9eb      	cbnz	r3, 80269e0 <_vfiprintf_r+0x78>
 80269a4:	4629      	mov	r1, r5
 80269a6:	4630      	mov	r0, r6
 80269a8:	f000 fb5c 	bl	8027064 <__swsetup_r>
 80269ac:	b1c0      	cbz	r0, 80269e0 <_vfiprintf_r+0x78>
 80269ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80269b0:	07dc      	lsls	r4, r3, #31
 80269b2:	d50e      	bpl.n	80269d2 <_vfiprintf_r+0x6a>
 80269b4:	f04f 30ff 	mov.w	r0, #4294967295
 80269b8:	b01d      	add	sp, #116	; 0x74
 80269ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80269be:	4b7b      	ldr	r3, [pc, #492]	; (8026bac <_vfiprintf_r+0x244>)
 80269c0:	429d      	cmp	r5, r3
 80269c2:	d101      	bne.n	80269c8 <_vfiprintf_r+0x60>
 80269c4:	68b5      	ldr	r5, [r6, #8]
 80269c6:	e7df      	b.n	8026988 <_vfiprintf_r+0x20>
 80269c8:	4b79      	ldr	r3, [pc, #484]	; (8026bb0 <_vfiprintf_r+0x248>)
 80269ca:	429d      	cmp	r5, r3
 80269cc:	bf08      	it	eq
 80269ce:	68f5      	ldreq	r5, [r6, #12]
 80269d0:	e7da      	b.n	8026988 <_vfiprintf_r+0x20>
 80269d2:	89ab      	ldrh	r3, [r5, #12]
 80269d4:	0598      	lsls	r0, r3, #22
 80269d6:	d4ed      	bmi.n	80269b4 <_vfiprintf_r+0x4c>
 80269d8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80269da:	f000 fdcd 	bl	8027578 <__retarget_lock_release_recursive>
 80269de:	e7e9      	b.n	80269b4 <_vfiprintf_r+0x4c>
 80269e0:	2300      	movs	r3, #0
 80269e2:	9309      	str	r3, [sp, #36]	; 0x24
 80269e4:	2320      	movs	r3, #32
 80269e6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80269ea:	f8cd 800c 	str.w	r8, [sp, #12]
 80269ee:	2330      	movs	r3, #48	; 0x30
 80269f0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8026bb4 <_vfiprintf_r+0x24c>
 80269f4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80269f8:	f04f 0901 	mov.w	r9, #1
 80269fc:	4623      	mov	r3, r4
 80269fe:	469a      	mov	sl, r3
 8026a00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026a04:	b10a      	cbz	r2, 8026a0a <_vfiprintf_r+0xa2>
 8026a06:	2a25      	cmp	r2, #37	; 0x25
 8026a08:	d1f9      	bne.n	80269fe <_vfiprintf_r+0x96>
 8026a0a:	ebba 0b04 	subs.w	fp, sl, r4
 8026a0e:	d00b      	beq.n	8026a28 <_vfiprintf_r+0xc0>
 8026a10:	465b      	mov	r3, fp
 8026a12:	4622      	mov	r2, r4
 8026a14:	4629      	mov	r1, r5
 8026a16:	4630      	mov	r0, r6
 8026a18:	f7ff ff93 	bl	8026942 <__sfputs_r>
 8026a1c:	3001      	adds	r0, #1
 8026a1e:	f000 80aa 	beq.w	8026b76 <_vfiprintf_r+0x20e>
 8026a22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8026a24:	445a      	add	r2, fp
 8026a26:	9209      	str	r2, [sp, #36]	; 0x24
 8026a28:	f89a 3000 	ldrb.w	r3, [sl]
 8026a2c:	2b00      	cmp	r3, #0
 8026a2e:	f000 80a2 	beq.w	8026b76 <_vfiprintf_r+0x20e>
 8026a32:	2300      	movs	r3, #0
 8026a34:	f04f 32ff 	mov.w	r2, #4294967295
 8026a38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026a3c:	f10a 0a01 	add.w	sl, sl, #1
 8026a40:	9304      	str	r3, [sp, #16]
 8026a42:	9307      	str	r3, [sp, #28]
 8026a44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8026a48:	931a      	str	r3, [sp, #104]	; 0x68
 8026a4a:	4654      	mov	r4, sl
 8026a4c:	2205      	movs	r2, #5
 8026a4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026a52:	4858      	ldr	r0, [pc, #352]	; (8026bb4 <_vfiprintf_r+0x24c>)
 8026a54:	f7d9 fbd4 	bl	8000200 <memchr>
 8026a58:	9a04      	ldr	r2, [sp, #16]
 8026a5a:	b9d8      	cbnz	r0, 8026a94 <_vfiprintf_r+0x12c>
 8026a5c:	06d1      	lsls	r1, r2, #27
 8026a5e:	bf44      	itt	mi
 8026a60:	2320      	movmi	r3, #32
 8026a62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026a66:	0713      	lsls	r3, r2, #28
 8026a68:	bf44      	itt	mi
 8026a6a:	232b      	movmi	r3, #43	; 0x2b
 8026a6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8026a70:	f89a 3000 	ldrb.w	r3, [sl]
 8026a74:	2b2a      	cmp	r3, #42	; 0x2a
 8026a76:	d015      	beq.n	8026aa4 <_vfiprintf_r+0x13c>
 8026a78:	9a07      	ldr	r2, [sp, #28]
 8026a7a:	4654      	mov	r4, sl
 8026a7c:	2000      	movs	r0, #0
 8026a7e:	f04f 0c0a 	mov.w	ip, #10
 8026a82:	4621      	mov	r1, r4
 8026a84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8026a88:	3b30      	subs	r3, #48	; 0x30
 8026a8a:	2b09      	cmp	r3, #9
 8026a8c:	d94e      	bls.n	8026b2c <_vfiprintf_r+0x1c4>
 8026a8e:	b1b0      	cbz	r0, 8026abe <_vfiprintf_r+0x156>
 8026a90:	9207      	str	r2, [sp, #28]
 8026a92:	e014      	b.n	8026abe <_vfiprintf_r+0x156>
 8026a94:	eba0 0308 	sub.w	r3, r0, r8
 8026a98:	fa09 f303 	lsl.w	r3, r9, r3
 8026a9c:	4313      	orrs	r3, r2
 8026a9e:	9304      	str	r3, [sp, #16]
 8026aa0:	46a2      	mov	sl, r4
 8026aa2:	e7d2      	b.n	8026a4a <_vfiprintf_r+0xe2>
 8026aa4:	9b03      	ldr	r3, [sp, #12]
 8026aa6:	1d19      	adds	r1, r3, #4
 8026aa8:	681b      	ldr	r3, [r3, #0]
 8026aaa:	9103      	str	r1, [sp, #12]
 8026aac:	2b00      	cmp	r3, #0
 8026aae:	bfbb      	ittet	lt
 8026ab0:	425b      	neglt	r3, r3
 8026ab2:	f042 0202 	orrlt.w	r2, r2, #2
 8026ab6:	9307      	strge	r3, [sp, #28]
 8026ab8:	9307      	strlt	r3, [sp, #28]
 8026aba:	bfb8      	it	lt
 8026abc:	9204      	strlt	r2, [sp, #16]
 8026abe:	7823      	ldrb	r3, [r4, #0]
 8026ac0:	2b2e      	cmp	r3, #46	; 0x2e
 8026ac2:	d10c      	bne.n	8026ade <_vfiprintf_r+0x176>
 8026ac4:	7863      	ldrb	r3, [r4, #1]
 8026ac6:	2b2a      	cmp	r3, #42	; 0x2a
 8026ac8:	d135      	bne.n	8026b36 <_vfiprintf_r+0x1ce>
 8026aca:	9b03      	ldr	r3, [sp, #12]
 8026acc:	1d1a      	adds	r2, r3, #4
 8026ace:	681b      	ldr	r3, [r3, #0]
 8026ad0:	9203      	str	r2, [sp, #12]
 8026ad2:	2b00      	cmp	r3, #0
 8026ad4:	bfb8      	it	lt
 8026ad6:	f04f 33ff 	movlt.w	r3, #4294967295
 8026ada:	3402      	adds	r4, #2
 8026adc:	9305      	str	r3, [sp, #20]
 8026ade:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8026bc4 <_vfiprintf_r+0x25c>
 8026ae2:	7821      	ldrb	r1, [r4, #0]
 8026ae4:	2203      	movs	r2, #3
 8026ae6:	4650      	mov	r0, sl
 8026ae8:	f7d9 fb8a 	bl	8000200 <memchr>
 8026aec:	b140      	cbz	r0, 8026b00 <_vfiprintf_r+0x198>
 8026aee:	2340      	movs	r3, #64	; 0x40
 8026af0:	eba0 000a 	sub.w	r0, r0, sl
 8026af4:	fa03 f000 	lsl.w	r0, r3, r0
 8026af8:	9b04      	ldr	r3, [sp, #16]
 8026afa:	4303      	orrs	r3, r0
 8026afc:	3401      	adds	r4, #1
 8026afe:	9304      	str	r3, [sp, #16]
 8026b00:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026b04:	482c      	ldr	r0, [pc, #176]	; (8026bb8 <_vfiprintf_r+0x250>)
 8026b06:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8026b0a:	2206      	movs	r2, #6
 8026b0c:	f7d9 fb78 	bl	8000200 <memchr>
 8026b10:	2800      	cmp	r0, #0
 8026b12:	d03f      	beq.n	8026b94 <_vfiprintf_r+0x22c>
 8026b14:	4b29      	ldr	r3, [pc, #164]	; (8026bbc <_vfiprintf_r+0x254>)
 8026b16:	bb1b      	cbnz	r3, 8026b60 <_vfiprintf_r+0x1f8>
 8026b18:	9b03      	ldr	r3, [sp, #12]
 8026b1a:	3307      	adds	r3, #7
 8026b1c:	f023 0307 	bic.w	r3, r3, #7
 8026b20:	3308      	adds	r3, #8
 8026b22:	9303      	str	r3, [sp, #12]
 8026b24:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b26:	443b      	add	r3, r7
 8026b28:	9309      	str	r3, [sp, #36]	; 0x24
 8026b2a:	e767      	b.n	80269fc <_vfiprintf_r+0x94>
 8026b2c:	fb0c 3202 	mla	r2, ip, r2, r3
 8026b30:	460c      	mov	r4, r1
 8026b32:	2001      	movs	r0, #1
 8026b34:	e7a5      	b.n	8026a82 <_vfiprintf_r+0x11a>
 8026b36:	2300      	movs	r3, #0
 8026b38:	3401      	adds	r4, #1
 8026b3a:	9305      	str	r3, [sp, #20]
 8026b3c:	4619      	mov	r1, r3
 8026b3e:	f04f 0c0a 	mov.w	ip, #10
 8026b42:	4620      	mov	r0, r4
 8026b44:	f810 2b01 	ldrb.w	r2, [r0], #1
 8026b48:	3a30      	subs	r2, #48	; 0x30
 8026b4a:	2a09      	cmp	r2, #9
 8026b4c:	d903      	bls.n	8026b56 <_vfiprintf_r+0x1ee>
 8026b4e:	2b00      	cmp	r3, #0
 8026b50:	d0c5      	beq.n	8026ade <_vfiprintf_r+0x176>
 8026b52:	9105      	str	r1, [sp, #20]
 8026b54:	e7c3      	b.n	8026ade <_vfiprintf_r+0x176>
 8026b56:	fb0c 2101 	mla	r1, ip, r1, r2
 8026b5a:	4604      	mov	r4, r0
 8026b5c:	2301      	movs	r3, #1
 8026b5e:	e7f0      	b.n	8026b42 <_vfiprintf_r+0x1da>
 8026b60:	ab03      	add	r3, sp, #12
 8026b62:	9300      	str	r3, [sp, #0]
 8026b64:	462a      	mov	r2, r5
 8026b66:	4b16      	ldr	r3, [pc, #88]	; (8026bc0 <_vfiprintf_r+0x258>)
 8026b68:	a904      	add	r1, sp, #16
 8026b6a:	4630      	mov	r0, r6
 8026b6c:	f3af 8000 	nop.w
 8026b70:	4607      	mov	r7, r0
 8026b72:	1c78      	adds	r0, r7, #1
 8026b74:	d1d6      	bne.n	8026b24 <_vfiprintf_r+0x1bc>
 8026b76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8026b78:	07d9      	lsls	r1, r3, #31
 8026b7a:	d405      	bmi.n	8026b88 <_vfiprintf_r+0x220>
 8026b7c:	89ab      	ldrh	r3, [r5, #12]
 8026b7e:	059a      	lsls	r2, r3, #22
 8026b80:	d402      	bmi.n	8026b88 <_vfiprintf_r+0x220>
 8026b82:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8026b84:	f000 fcf8 	bl	8027578 <__retarget_lock_release_recursive>
 8026b88:	89ab      	ldrh	r3, [r5, #12]
 8026b8a:	065b      	lsls	r3, r3, #25
 8026b8c:	f53f af12 	bmi.w	80269b4 <_vfiprintf_r+0x4c>
 8026b90:	9809      	ldr	r0, [sp, #36]	; 0x24
 8026b92:	e711      	b.n	80269b8 <_vfiprintf_r+0x50>
 8026b94:	ab03      	add	r3, sp, #12
 8026b96:	9300      	str	r3, [sp, #0]
 8026b98:	462a      	mov	r2, r5
 8026b9a:	4b09      	ldr	r3, [pc, #36]	; (8026bc0 <_vfiprintf_r+0x258>)
 8026b9c:	a904      	add	r1, sp, #16
 8026b9e:	4630      	mov	r0, r6
 8026ba0:	f000 f880 	bl	8026ca4 <_printf_i>
 8026ba4:	e7e4      	b.n	8026b70 <_vfiprintf_r+0x208>
 8026ba6:	bf00      	nop
 8026ba8:	0802aad8 	.word	0x0802aad8
 8026bac:	0802aaf8 	.word	0x0802aaf8
 8026bb0:	0802aab8 	.word	0x0802aab8
 8026bb4:	0802aa80 	.word	0x0802aa80
 8026bb8:	0802aa8a 	.word	0x0802aa8a
 8026bbc:	00000000 	.word	0x00000000
 8026bc0:	08026943 	.word	0x08026943
 8026bc4:	0802aa86 	.word	0x0802aa86

08026bc8 <_printf_common>:
 8026bc8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026bcc:	4616      	mov	r6, r2
 8026bce:	4699      	mov	r9, r3
 8026bd0:	688a      	ldr	r2, [r1, #8]
 8026bd2:	690b      	ldr	r3, [r1, #16]
 8026bd4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8026bd8:	4293      	cmp	r3, r2
 8026bda:	bfb8      	it	lt
 8026bdc:	4613      	movlt	r3, r2
 8026bde:	6033      	str	r3, [r6, #0]
 8026be0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8026be4:	4607      	mov	r7, r0
 8026be6:	460c      	mov	r4, r1
 8026be8:	b10a      	cbz	r2, 8026bee <_printf_common+0x26>
 8026bea:	3301      	adds	r3, #1
 8026bec:	6033      	str	r3, [r6, #0]
 8026bee:	6823      	ldr	r3, [r4, #0]
 8026bf0:	0699      	lsls	r1, r3, #26
 8026bf2:	bf42      	ittt	mi
 8026bf4:	6833      	ldrmi	r3, [r6, #0]
 8026bf6:	3302      	addmi	r3, #2
 8026bf8:	6033      	strmi	r3, [r6, #0]
 8026bfa:	6825      	ldr	r5, [r4, #0]
 8026bfc:	f015 0506 	ands.w	r5, r5, #6
 8026c00:	d106      	bne.n	8026c10 <_printf_common+0x48>
 8026c02:	f104 0a19 	add.w	sl, r4, #25
 8026c06:	68e3      	ldr	r3, [r4, #12]
 8026c08:	6832      	ldr	r2, [r6, #0]
 8026c0a:	1a9b      	subs	r3, r3, r2
 8026c0c:	42ab      	cmp	r3, r5
 8026c0e:	dc26      	bgt.n	8026c5e <_printf_common+0x96>
 8026c10:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8026c14:	1e13      	subs	r3, r2, #0
 8026c16:	6822      	ldr	r2, [r4, #0]
 8026c18:	bf18      	it	ne
 8026c1a:	2301      	movne	r3, #1
 8026c1c:	0692      	lsls	r2, r2, #26
 8026c1e:	d42b      	bmi.n	8026c78 <_printf_common+0xb0>
 8026c20:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8026c24:	4649      	mov	r1, r9
 8026c26:	4638      	mov	r0, r7
 8026c28:	47c0      	blx	r8
 8026c2a:	3001      	adds	r0, #1
 8026c2c:	d01e      	beq.n	8026c6c <_printf_common+0xa4>
 8026c2e:	6823      	ldr	r3, [r4, #0]
 8026c30:	68e5      	ldr	r5, [r4, #12]
 8026c32:	6832      	ldr	r2, [r6, #0]
 8026c34:	f003 0306 	and.w	r3, r3, #6
 8026c38:	2b04      	cmp	r3, #4
 8026c3a:	bf08      	it	eq
 8026c3c:	1aad      	subeq	r5, r5, r2
 8026c3e:	68a3      	ldr	r3, [r4, #8]
 8026c40:	6922      	ldr	r2, [r4, #16]
 8026c42:	bf0c      	ite	eq
 8026c44:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026c48:	2500      	movne	r5, #0
 8026c4a:	4293      	cmp	r3, r2
 8026c4c:	bfc4      	itt	gt
 8026c4e:	1a9b      	subgt	r3, r3, r2
 8026c50:	18ed      	addgt	r5, r5, r3
 8026c52:	2600      	movs	r6, #0
 8026c54:	341a      	adds	r4, #26
 8026c56:	42b5      	cmp	r5, r6
 8026c58:	d11a      	bne.n	8026c90 <_printf_common+0xc8>
 8026c5a:	2000      	movs	r0, #0
 8026c5c:	e008      	b.n	8026c70 <_printf_common+0xa8>
 8026c5e:	2301      	movs	r3, #1
 8026c60:	4652      	mov	r2, sl
 8026c62:	4649      	mov	r1, r9
 8026c64:	4638      	mov	r0, r7
 8026c66:	47c0      	blx	r8
 8026c68:	3001      	adds	r0, #1
 8026c6a:	d103      	bne.n	8026c74 <_printf_common+0xac>
 8026c6c:	f04f 30ff 	mov.w	r0, #4294967295
 8026c70:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026c74:	3501      	adds	r5, #1
 8026c76:	e7c6      	b.n	8026c06 <_printf_common+0x3e>
 8026c78:	18e1      	adds	r1, r4, r3
 8026c7a:	1c5a      	adds	r2, r3, #1
 8026c7c:	2030      	movs	r0, #48	; 0x30
 8026c7e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8026c82:	4422      	add	r2, r4
 8026c84:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8026c88:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8026c8c:	3302      	adds	r3, #2
 8026c8e:	e7c7      	b.n	8026c20 <_printf_common+0x58>
 8026c90:	2301      	movs	r3, #1
 8026c92:	4622      	mov	r2, r4
 8026c94:	4649      	mov	r1, r9
 8026c96:	4638      	mov	r0, r7
 8026c98:	47c0      	blx	r8
 8026c9a:	3001      	adds	r0, #1
 8026c9c:	d0e6      	beq.n	8026c6c <_printf_common+0xa4>
 8026c9e:	3601      	adds	r6, #1
 8026ca0:	e7d9      	b.n	8026c56 <_printf_common+0x8e>
	...

08026ca4 <_printf_i>:
 8026ca4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8026ca8:	7e0f      	ldrb	r7, [r1, #24]
 8026caa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8026cac:	2f78      	cmp	r7, #120	; 0x78
 8026cae:	4691      	mov	r9, r2
 8026cb0:	4680      	mov	r8, r0
 8026cb2:	460c      	mov	r4, r1
 8026cb4:	469a      	mov	sl, r3
 8026cb6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8026cba:	d807      	bhi.n	8026ccc <_printf_i+0x28>
 8026cbc:	2f62      	cmp	r7, #98	; 0x62
 8026cbe:	d80a      	bhi.n	8026cd6 <_printf_i+0x32>
 8026cc0:	2f00      	cmp	r7, #0
 8026cc2:	f000 80d8 	beq.w	8026e76 <_printf_i+0x1d2>
 8026cc6:	2f58      	cmp	r7, #88	; 0x58
 8026cc8:	f000 80a3 	beq.w	8026e12 <_printf_i+0x16e>
 8026ccc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026cd0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8026cd4:	e03a      	b.n	8026d4c <_printf_i+0xa8>
 8026cd6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8026cda:	2b15      	cmp	r3, #21
 8026cdc:	d8f6      	bhi.n	8026ccc <_printf_i+0x28>
 8026cde:	a101      	add	r1, pc, #4	; (adr r1, 8026ce4 <_printf_i+0x40>)
 8026ce0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026ce4:	08026d3d 	.word	0x08026d3d
 8026ce8:	08026d51 	.word	0x08026d51
 8026cec:	08026ccd 	.word	0x08026ccd
 8026cf0:	08026ccd 	.word	0x08026ccd
 8026cf4:	08026ccd 	.word	0x08026ccd
 8026cf8:	08026ccd 	.word	0x08026ccd
 8026cfc:	08026d51 	.word	0x08026d51
 8026d00:	08026ccd 	.word	0x08026ccd
 8026d04:	08026ccd 	.word	0x08026ccd
 8026d08:	08026ccd 	.word	0x08026ccd
 8026d0c:	08026ccd 	.word	0x08026ccd
 8026d10:	08026e5d 	.word	0x08026e5d
 8026d14:	08026d81 	.word	0x08026d81
 8026d18:	08026e3f 	.word	0x08026e3f
 8026d1c:	08026ccd 	.word	0x08026ccd
 8026d20:	08026ccd 	.word	0x08026ccd
 8026d24:	08026e7f 	.word	0x08026e7f
 8026d28:	08026ccd 	.word	0x08026ccd
 8026d2c:	08026d81 	.word	0x08026d81
 8026d30:	08026ccd 	.word	0x08026ccd
 8026d34:	08026ccd 	.word	0x08026ccd
 8026d38:	08026e47 	.word	0x08026e47
 8026d3c:	682b      	ldr	r3, [r5, #0]
 8026d3e:	1d1a      	adds	r2, r3, #4
 8026d40:	681b      	ldr	r3, [r3, #0]
 8026d42:	602a      	str	r2, [r5, #0]
 8026d44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8026d48:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8026d4c:	2301      	movs	r3, #1
 8026d4e:	e0a3      	b.n	8026e98 <_printf_i+0x1f4>
 8026d50:	6820      	ldr	r0, [r4, #0]
 8026d52:	6829      	ldr	r1, [r5, #0]
 8026d54:	0606      	lsls	r6, r0, #24
 8026d56:	f101 0304 	add.w	r3, r1, #4
 8026d5a:	d50a      	bpl.n	8026d72 <_printf_i+0xce>
 8026d5c:	680e      	ldr	r6, [r1, #0]
 8026d5e:	602b      	str	r3, [r5, #0]
 8026d60:	2e00      	cmp	r6, #0
 8026d62:	da03      	bge.n	8026d6c <_printf_i+0xc8>
 8026d64:	232d      	movs	r3, #45	; 0x2d
 8026d66:	4276      	negs	r6, r6
 8026d68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026d6c:	485e      	ldr	r0, [pc, #376]	; (8026ee8 <_printf_i+0x244>)
 8026d6e:	230a      	movs	r3, #10
 8026d70:	e019      	b.n	8026da6 <_printf_i+0x102>
 8026d72:	680e      	ldr	r6, [r1, #0]
 8026d74:	602b      	str	r3, [r5, #0]
 8026d76:	f010 0f40 	tst.w	r0, #64	; 0x40
 8026d7a:	bf18      	it	ne
 8026d7c:	b236      	sxthne	r6, r6
 8026d7e:	e7ef      	b.n	8026d60 <_printf_i+0xbc>
 8026d80:	682b      	ldr	r3, [r5, #0]
 8026d82:	6820      	ldr	r0, [r4, #0]
 8026d84:	1d19      	adds	r1, r3, #4
 8026d86:	6029      	str	r1, [r5, #0]
 8026d88:	0601      	lsls	r1, r0, #24
 8026d8a:	d501      	bpl.n	8026d90 <_printf_i+0xec>
 8026d8c:	681e      	ldr	r6, [r3, #0]
 8026d8e:	e002      	b.n	8026d96 <_printf_i+0xf2>
 8026d90:	0646      	lsls	r6, r0, #25
 8026d92:	d5fb      	bpl.n	8026d8c <_printf_i+0xe8>
 8026d94:	881e      	ldrh	r6, [r3, #0]
 8026d96:	4854      	ldr	r0, [pc, #336]	; (8026ee8 <_printf_i+0x244>)
 8026d98:	2f6f      	cmp	r7, #111	; 0x6f
 8026d9a:	bf0c      	ite	eq
 8026d9c:	2308      	moveq	r3, #8
 8026d9e:	230a      	movne	r3, #10
 8026da0:	2100      	movs	r1, #0
 8026da2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8026da6:	6865      	ldr	r5, [r4, #4]
 8026da8:	60a5      	str	r5, [r4, #8]
 8026daa:	2d00      	cmp	r5, #0
 8026dac:	bfa2      	ittt	ge
 8026dae:	6821      	ldrge	r1, [r4, #0]
 8026db0:	f021 0104 	bicge.w	r1, r1, #4
 8026db4:	6021      	strge	r1, [r4, #0]
 8026db6:	b90e      	cbnz	r6, 8026dbc <_printf_i+0x118>
 8026db8:	2d00      	cmp	r5, #0
 8026dba:	d04d      	beq.n	8026e58 <_printf_i+0x1b4>
 8026dbc:	4615      	mov	r5, r2
 8026dbe:	fbb6 f1f3 	udiv	r1, r6, r3
 8026dc2:	fb03 6711 	mls	r7, r3, r1, r6
 8026dc6:	5dc7      	ldrb	r7, [r0, r7]
 8026dc8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8026dcc:	4637      	mov	r7, r6
 8026dce:	42bb      	cmp	r3, r7
 8026dd0:	460e      	mov	r6, r1
 8026dd2:	d9f4      	bls.n	8026dbe <_printf_i+0x11a>
 8026dd4:	2b08      	cmp	r3, #8
 8026dd6:	d10b      	bne.n	8026df0 <_printf_i+0x14c>
 8026dd8:	6823      	ldr	r3, [r4, #0]
 8026dda:	07de      	lsls	r6, r3, #31
 8026ddc:	d508      	bpl.n	8026df0 <_printf_i+0x14c>
 8026dde:	6923      	ldr	r3, [r4, #16]
 8026de0:	6861      	ldr	r1, [r4, #4]
 8026de2:	4299      	cmp	r1, r3
 8026de4:	bfde      	ittt	le
 8026de6:	2330      	movle	r3, #48	; 0x30
 8026de8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8026dec:	f105 35ff 	addle.w	r5, r5, #4294967295
 8026df0:	1b52      	subs	r2, r2, r5
 8026df2:	6122      	str	r2, [r4, #16]
 8026df4:	f8cd a000 	str.w	sl, [sp]
 8026df8:	464b      	mov	r3, r9
 8026dfa:	aa03      	add	r2, sp, #12
 8026dfc:	4621      	mov	r1, r4
 8026dfe:	4640      	mov	r0, r8
 8026e00:	f7ff fee2 	bl	8026bc8 <_printf_common>
 8026e04:	3001      	adds	r0, #1
 8026e06:	d14c      	bne.n	8026ea2 <_printf_i+0x1fe>
 8026e08:	f04f 30ff 	mov.w	r0, #4294967295
 8026e0c:	b004      	add	sp, #16
 8026e0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026e12:	4835      	ldr	r0, [pc, #212]	; (8026ee8 <_printf_i+0x244>)
 8026e14:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8026e18:	6829      	ldr	r1, [r5, #0]
 8026e1a:	6823      	ldr	r3, [r4, #0]
 8026e1c:	f851 6b04 	ldr.w	r6, [r1], #4
 8026e20:	6029      	str	r1, [r5, #0]
 8026e22:	061d      	lsls	r5, r3, #24
 8026e24:	d514      	bpl.n	8026e50 <_printf_i+0x1ac>
 8026e26:	07df      	lsls	r7, r3, #31
 8026e28:	bf44      	itt	mi
 8026e2a:	f043 0320 	orrmi.w	r3, r3, #32
 8026e2e:	6023      	strmi	r3, [r4, #0]
 8026e30:	b91e      	cbnz	r6, 8026e3a <_printf_i+0x196>
 8026e32:	6823      	ldr	r3, [r4, #0]
 8026e34:	f023 0320 	bic.w	r3, r3, #32
 8026e38:	6023      	str	r3, [r4, #0]
 8026e3a:	2310      	movs	r3, #16
 8026e3c:	e7b0      	b.n	8026da0 <_printf_i+0xfc>
 8026e3e:	6823      	ldr	r3, [r4, #0]
 8026e40:	f043 0320 	orr.w	r3, r3, #32
 8026e44:	6023      	str	r3, [r4, #0]
 8026e46:	2378      	movs	r3, #120	; 0x78
 8026e48:	4828      	ldr	r0, [pc, #160]	; (8026eec <_printf_i+0x248>)
 8026e4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8026e4e:	e7e3      	b.n	8026e18 <_printf_i+0x174>
 8026e50:	0659      	lsls	r1, r3, #25
 8026e52:	bf48      	it	mi
 8026e54:	b2b6      	uxthmi	r6, r6
 8026e56:	e7e6      	b.n	8026e26 <_printf_i+0x182>
 8026e58:	4615      	mov	r5, r2
 8026e5a:	e7bb      	b.n	8026dd4 <_printf_i+0x130>
 8026e5c:	682b      	ldr	r3, [r5, #0]
 8026e5e:	6826      	ldr	r6, [r4, #0]
 8026e60:	6961      	ldr	r1, [r4, #20]
 8026e62:	1d18      	adds	r0, r3, #4
 8026e64:	6028      	str	r0, [r5, #0]
 8026e66:	0635      	lsls	r5, r6, #24
 8026e68:	681b      	ldr	r3, [r3, #0]
 8026e6a:	d501      	bpl.n	8026e70 <_printf_i+0x1cc>
 8026e6c:	6019      	str	r1, [r3, #0]
 8026e6e:	e002      	b.n	8026e76 <_printf_i+0x1d2>
 8026e70:	0670      	lsls	r0, r6, #25
 8026e72:	d5fb      	bpl.n	8026e6c <_printf_i+0x1c8>
 8026e74:	8019      	strh	r1, [r3, #0]
 8026e76:	2300      	movs	r3, #0
 8026e78:	6123      	str	r3, [r4, #16]
 8026e7a:	4615      	mov	r5, r2
 8026e7c:	e7ba      	b.n	8026df4 <_printf_i+0x150>
 8026e7e:	682b      	ldr	r3, [r5, #0]
 8026e80:	1d1a      	adds	r2, r3, #4
 8026e82:	602a      	str	r2, [r5, #0]
 8026e84:	681d      	ldr	r5, [r3, #0]
 8026e86:	6862      	ldr	r2, [r4, #4]
 8026e88:	2100      	movs	r1, #0
 8026e8a:	4628      	mov	r0, r5
 8026e8c:	f7d9 f9b8 	bl	8000200 <memchr>
 8026e90:	b108      	cbz	r0, 8026e96 <_printf_i+0x1f2>
 8026e92:	1b40      	subs	r0, r0, r5
 8026e94:	6060      	str	r0, [r4, #4]
 8026e96:	6863      	ldr	r3, [r4, #4]
 8026e98:	6123      	str	r3, [r4, #16]
 8026e9a:	2300      	movs	r3, #0
 8026e9c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8026ea0:	e7a8      	b.n	8026df4 <_printf_i+0x150>
 8026ea2:	6923      	ldr	r3, [r4, #16]
 8026ea4:	462a      	mov	r2, r5
 8026ea6:	4649      	mov	r1, r9
 8026ea8:	4640      	mov	r0, r8
 8026eaa:	47d0      	blx	sl
 8026eac:	3001      	adds	r0, #1
 8026eae:	d0ab      	beq.n	8026e08 <_printf_i+0x164>
 8026eb0:	6823      	ldr	r3, [r4, #0]
 8026eb2:	079b      	lsls	r3, r3, #30
 8026eb4:	d413      	bmi.n	8026ede <_printf_i+0x23a>
 8026eb6:	68e0      	ldr	r0, [r4, #12]
 8026eb8:	9b03      	ldr	r3, [sp, #12]
 8026eba:	4298      	cmp	r0, r3
 8026ebc:	bfb8      	it	lt
 8026ebe:	4618      	movlt	r0, r3
 8026ec0:	e7a4      	b.n	8026e0c <_printf_i+0x168>
 8026ec2:	2301      	movs	r3, #1
 8026ec4:	4632      	mov	r2, r6
 8026ec6:	4649      	mov	r1, r9
 8026ec8:	4640      	mov	r0, r8
 8026eca:	47d0      	blx	sl
 8026ecc:	3001      	adds	r0, #1
 8026ece:	d09b      	beq.n	8026e08 <_printf_i+0x164>
 8026ed0:	3501      	adds	r5, #1
 8026ed2:	68e3      	ldr	r3, [r4, #12]
 8026ed4:	9903      	ldr	r1, [sp, #12]
 8026ed6:	1a5b      	subs	r3, r3, r1
 8026ed8:	42ab      	cmp	r3, r5
 8026eda:	dcf2      	bgt.n	8026ec2 <_printf_i+0x21e>
 8026edc:	e7eb      	b.n	8026eb6 <_printf_i+0x212>
 8026ede:	2500      	movs	r5, #0
 8026ee0:	f104 0619 	add.w	r6, r4, #25
 8026ee4:	e7f5      	b.n	8026ed2 <_printf_i+0x22e>
 8026ee6:	bf00      	nop
 8026ee8:	0802aa91 	.word	0x0802aa91
 8026eec:	0802aaa2 	.word	0x0802aaa2

08026ef0 <_sbrk_r>:
 8026ef0:	b538      	push	{r3, r4, r5, lr}
 8026ef2:	4d06      	ldr	r5, [pc, #24]	; (8026f0c <_sbrk_r+0x1c>)
 8026ef4:	2300      	movs	r3, #0
 8026ef6:	4604      	mov	r4, r0
 8026ef8:	4608      	mov	r0, r1
 8026efa:	602b      	str	r3, [r5, #0]
 8026efc:	f7db fda0 	bl	8002a40 <_sbrk>
 8026f00:	1c43      	adds	r3, r0, #1
 8026f02:	d102      	bne.n	8026f0a <_sbrk_r+0x1a>
 8026f04:	682b      	ldr	r3, [r5, #0]
 8026f06:	b103      	cbz	r3, 8026f0a <_sbrk_r+0x1a>
 8026f08:	6023      	str	r3, [r4, #0]
 8026f0a:	bd38      	pop	{r3, r4, r5, pc}
 8026f0c:	2000fa14 	.word	0x2000fa14

08026f10 <_raise_r>:
 8026f10:	291f      	cmp	r1, #31
 8026f12:	b538      	push	{r3, r4, r5, lr}
 8026f14:	4604      	mov	r4, r0
 8026f16:	460d      	mov	r5, r1
 8026f18:	d904      	bls.n	8026f24 <_raise_r+0x14>
 8026f1a:	2316      	movs	r3, #22
 8026f1c:	6003      	str	r3, [r0, #0]
 8026f1e:	f04f 30ff 	mov.w	r0, #4294967295
 8026f22:	bd38      	pop	{r3, r4, r5, pc}
 8026f24:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8026f26:	b112      	cbz	r2, 8026f2e <_raise_r+0x1e>
 8026f28:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8026f2c:	b94b      	cbnz	r3, 8026f42 <_raise_r+0x32>
 8026f2e:	4620      	mov	r0, r4
 8026f30:	f000 f830 	bl	8026f94 <_getpid_r>
 8026f34:	462a      	mov	r2, r5
 8026f36:	4601      	mov	r1, r0
 8026f38:	4620      	mov	r0, r4
 8026f3a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8026f3e:	f000 b817 	b.w	8026f70 <_kill_r>
 8026f42:	2b01      	cmp	r3, #1
 8026f44:	d00a      	beq.n	8026f5c <_raise_r+0x4c>
 8026f46:	1c59      	adds	r1, r3, #1
 8026f48:	d103      	bne.n	8026f52 <_raise_r+0x42>
 8026f4a:	2316      	movs	r3, #22
 8026f4c:	6003      	str	r3, [r0, #0]
 8026f4e:	2001      	movs	r0, #1
 8026f50:	e7e7      	b.n	8026f22 <_raise_r+0x12>
 8026f52:	2400      	movs	r4, #0
 8026f54:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8026f58:	4628      	mov	r0, r5
 8026f5a:	4798      	blx	r3
 8026f5c:	2000      	movs	r0, #0
 8026f5e:	e7e0      	b.n	8026f22 <_raise_r+0x12>

08026f60 <raise>:
 8026f60:	4b02      	ldr	r3, [pc, #8]	; (8026f6c <raise+0xc>)
 8026f62:	4601      	mov	r1, r0
 8026f64:	6818      	ldr	r0, [r3, #0]
 8026f66:	f7ff bfd3 	b.w	8026f10 <_raise_r>
 8026f6a:	bf00      	nop
 8026f6c:	200000e0 	.word	0x200000e0

08026f70 <_kill_r>:
 8026f70:	b538      	push	{r3, r4, r5, lr}
 8026f72:	4d07      	ldr	r5, [pc, #28]	; (8026f90 <_kill_r+0x20>)
 8026f74:	2300      	movs	r3, #0
 8026f76:	4604      	mov	r4, r0
 8026f78:	4608      	mov	r0, r1
 8026f7a:	4611      	mov	r1, r2
 8026f7c:	602b      	str	r3, [r5, #0]
 8026f7e:	f7db fd29 	bl	80029d4 <_kill>
 8026f82:	1c43      	adds	r3, r0, #1
 8026f84:	d102      	bne.n	8026f8c <_kill_r+0x1c>
 8026f86:	682b      	ldr	r3, [r5, #0]
 8026f88:	b103      	cbz	r3, 8026f8c <_kill_r+0x1c>
 8026f8a:	6023      	str	r3, [r4, #0]
 8026f8c:	bd38      	pop	{r3, r4, r5, pc}
 8026f8e:	bf00      	nop
 8026f90:	2000fa14 	.word	0x2000fa14

08026f94 <_getpid_r>:
 8026f94:	f7db bd1c 	b.w	80029d0 <_getpid>

08026f98 <strncpy>:
 8026f98:	b510      	push	{r4, lr}
 8026f9a:	3901      	subs	r1, #1
 8026f9c:	4603      	mov	r3, r0
 8026f9e:	b132      	cbz	r2, 8026fae <strncpy+0x16>
 8026fa0:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8026fa4:	f803 4b01 	strb.w	r4, [r3], #1
 8026fa8:	3a01      	subs	r2, #1
 8026faa:	2c00      	cmp	r4, #0
 8026fac:	d1f7      	bne.n	8026f9e <strncpy+0x6>
 8026fae:	441a      	add	r2, r3
 8026fb0:	2100      	movs	r1, #0
 8026fb2:	4293      	cmp	r3, r2
 8026fb4:	d100      	bne.n	8026fb8 <strncpy+0x20>
 8026fb6:	bd10      	pop	{r4, pc}
 8026fb8:	f803 1b01 	strb.w	r1, [r3], #1
 8026fbc:	e7f9      	b.n	8026fb2 <strncpy+0x1a>
	...

08026fc0 <__swbuf_r>:
 8026fc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026fc2:	460e      	mov	r6, r1
 8026fc4:	4614      	mov	r4, r2
 8026fc6:	4605      	mov	r5, r0
 8026fc8:	b118      	cbz	r0, 8026fd2 <__swbuf_r+0x12>
 8026fca:	6983      	ldr	r3, [r0, #24]
 8026fcc:	b90b      	cbnz	r3, 8026fd2 <__swbuf_r+0x12>
 8026fce:	f000 fa33 	bl	8027438 <__sinit>
 8026fd2:	4b21      	ldr	r3, [pc, #132]	; (8027058 <__swbuf_r+0x98>)
 8026fd4:	429c      	cmp	r4, r3
 8026fd6:	d12b      	bne.n	8027030 <__swbuf_r+0x70>
 8026fd8:	686c      	ldr	r4, [r5, #4]
 8026fda:	69a3      	ldr	r3, [r4, #24]
 8026fdc:	60a3      	str	r3, [r4, #8]
 8026fde:	89a3      	ldrh	r3, [r4, #12]
 8026fe0:	071a      	lsls	r2, r3, #28
 8026fe2:	d52f      	bpl.n	8027044 <__swbuf_r+0x84>
 8026fe4:	6923      	ldr	r3, [r4, #16]
 8026fe6:	b36b      	cbz	r3, 8027044 <__swbuf_r+0x84>
 8026fe8:	6923      	ldr	r3, [r4, #16]
 8026fea:	6820      	ldr	r0, [r4, #0]
 8026fec:	1ac0      	subs	r0, r0, r3
 8026fee:	6963      	ldr	r3, [r4, #20]
 8026ff0:	b2f6      	uxtb	r6, r6
 8026ff2:	4283      	cmp	r3, r0
 8026ff4:	4637      	mov	r7, r6
 8026ff6:	dc04      	bgt.n	8027002 <__swbuf_r+0x42>
 8026ff8:	4621      	mov	r1, r4
 8026ffa:	4628      	mov	r0, r5
 8026ffc:	f000 f988 	bl	8027310 <_fflush_r>
 8027000:	bb30      	cbnz	r0, 8027050 <__swbuf_r+0x90>
 8027002:	68a3      	ldr	r3, [r4, #8]
 8027004:	3b01      	subs	r3, #1
 8027006:	60a3      	str	r3, [r4, #8]
 8027008:	6823      	ldr	r3, [r4, #0]
 802700a:	1c5a      	adds	r2, r3, #1
 802700c:	6022      	str	r2, [r4, #0]
 802700e:	701e      	strb	r6, [r3, #0]
 8027010:	6963      	ldr	r3, [r4, #20]
 8027012:	3001      	adds	r0, #1
 8027014:	4283      	cmp	r3, r0
 8027016:	d004      	beq.n	8027022 <__swbuf_r+0x62>
 8027018:	89a3      	ldrh	r3, [r4, #12]
 802701a:	07db      	lsls	r3, r3, #31
 802701c:	d506      	bpl.n	802702c <__swbuf_r+0x6c>
 802701e:	2e0a      	cmp	r6, #10
 8027020:	d104      	bne.n	802702c <__swbuf_r+0x6c>
 8027022:	4621      	mov	r1, r4
 8027024:	4628      	mov	r0, r5
 8027026:	f000 f973 	bl	8027310 <_fflush_r>
 802702a:	b988      	cbnz	r0, 8027050 <__swbuf_r+0x90>
 802702c:	4638      	mov	r0, r7
 802702e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027030:	4b0a      	ldr	r3, [pc, #40]	; (802705c <__swbuf_r+0x9c>)
 8027032:	429c      	cmp	r4, r3
 8027034:	d101      	bne.n	802703a <__swbuf_r+0x7a>
 8027036:	68ac      	ldr	r4, [r5, #8]
 8027038:	e7cf      	b.n	8026fda <__swbuf_r+0x1a>
 802703a:	4b09      	ldr	r3, [pc, #36]	; (8027060 <__swbuf_r+0xa0>)
 802703c:	429c      	cmp	r4, r3
 802703e:	bf08      	it	eq
 8027040:	68ec      	ldreq	r4, [r5, #12]
 8027042:	e7ca      	b.n	8026fda <__swbuf_r+0x1a>
 8027044:	4621      	mov	r1, r4
 8027046:	4628      	mov	r0, r5
 8027048:	f000 f80c 	bl	8027064 <__swsetup_r>
 802704c:	2800      	cmp	r0, #0
 802704e:	d0cb      	beq.n	8026fe8 <__swbuf_r+0x28>
 8027050:	f04f 37ff 	mov.w	r7, #4294967295
 8027054:	e7ea      	b.n	802702c <__swbuf_r+0x6c>
 8027056:	bf00      	nop
 8027058:	0802aad8 	.word	0x0802aad8
 802705c:	0802aaf8 	.word	0x0802aaf8
 8027060:	0802aab8 	.word	0x0802aab8

08027064 <__swsetup_r>:
 8027064:	4b32      	ldr	r3, [pc, #200]	; (8027130 <__swsetup_r+0xcc>)
 8027066:	b570      	push	{r4, r5, r6, lr}
 8027068:	681d      	ldr	r5, [r3, #0]
 802706a:	4606      	mov	r6, r0
 802706c:	460c      	mov	r4, r1
 802706e:	b125      	cbz	r5, 802707a <__swsetup_r+0x16>
 8027070:	69ab      	ldr	r3, [r5, #24]
 8027072:	b913      	cbnz	r3, 802707a <__swsetup_r+0x16>
 8027074:	4628      	mov	r0, r5
 8027076:	f000 f9df 	bl	8027438 <__sinit>
 802707a:	4b2e      	ldr	r3, [pc, #184]	; (8027134 <__swsetup_r+0xd0>)
 802707c:	429c      	cmp	r4, r3
 802707e:	d10f      	bne.n	80270a0 <__swsetup_r+0x3c>
 8027080:	686c      	ldr	r4, [r5, #4]
 8027082:	89a3      	ldrh	r3, [r4, #12]
 8027084:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027088:	0719      	lsls	r1, r3, #28
 802708a:	d42c      	bmi.n	80270e6 <__swsetup_r+0x82>
 802708c:	06dd      	lsls	r5, r3, #27
 802708e:	d411      	bmi.n	80270b4 <__swsetup_r+0x50>
 8027090:	2309      	movs	r3, #9
 8027092:	6033      	str	r3, [r6, #0]
 8027094:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8027098:	81a3      	strh	r3, [r4, #12]
 802709a:	f04f 30ff 	mov.w	r0, #4294967295
 802709e:	e03e      	b.n	802711e <__swsetup_r+0xba>
 80270a0:	4b25      	ldr	r3, [pc, #148]	; (8027138 <__swsetup_r+0xd4>)
 80270a2:	429c      	cmp	r4, r3
 80270a4:	d101      	bne.n	80270aa <__swsetup_r+0x46>
 80270a6:	68ac      	ldr	r4, [r5, #8]
 80270a8:	e7eb      	b.n	8027082 <__swsetup_r+0x1e>
 80270aa:	4b24      	ldr	r3, [pc, #144]	; (802713c <__swsetup_r+0xd8>)
 80270ac:	429c      	cmp	r4, r3
 80270ae:	bf08      	it	eq
 80270b0:	68ec      	ldreq	r4, [r5, #12]
 80270b2:	e7e6      	b.n	8027082 <__swsetup_r+0x1e>
 80270b4:	0758      	lsls	r0, r3, #29
 80270b6:	d512      	bpl.n	80270de <__swsetup_r+0x7a>
 80270b8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80270ba:	b141      	cbz	r1, 80270ce <__swsetup_r+0x6a>
 80270bc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80270c0:	4299      	cmp	r1, r3
 80270c2:	d002      	beq.n	80270ca <__swsetup_r+0x66>
 80270c4:	4630      	mov	r0, r6
 80270c6:	f7ff fb45 	bl	8026754 <_free_r>
 80270ca:	2300      	movs	r3, #0
 80270cc:	6363      	str	r3, [r4, #52]	; 0x34
 80270ce:	89a3      	ldrh	r3, [r4, #12]
 80270d0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80270d4:	81a3      	strh	r3, [r4, #12]
 80270d6:	2300      	movs	r3, #0
 80270d8:	6063      	str	r3, [r4, #4]
 80270da:	6923      	ldr	r3, [r4, #16]
 80270dc:	6023      	str	r3, [r4, #0]
 80270de:	89a3      	ldrh	r3, [r4, #12]
 80270e0:	f043 0308 	orr.w	r3, r3, #8
 80270e4:	81a3      	strh	r3, [r4, #12]
 80270e6:	6923      	ldr	r3, [r4, #16]
 80270e8:	b94b      	cbnz	r3, 80270fe <__swsetup_r+0x9a>
 80270ea:	89a3      	ldrh	r3, [r4, #12]
 80270ec:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80270f0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80270f4:	d003      	beq.n	80270fe <__swsetup_r+0x9a>
 80270f6:	4621      	mov	r1, r4
 80270f8:	4630      	mov	r0, r6
 80270fa:	f000 fa63 	bl	80275c4 <__smakebuf_r>
 80270fe:	89a0      	ldrh	r0, [r4, #12]
 8027100:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8027104:	f010 0301 	ands.w	r3, r0, #1
 8027108:	d00a      	beq.n	8027120 <__swsetup_r+0xbc>
 802710a:	2300      	movs	r3, #0
 802710c:	60a3      	str	r3, [r4, #8]
 802710e:	6963      	ldr	r3, [r4, #20]
 8027110:	425b      	negs	r3, r3
 8027112:	61a3      	str	r3, [r4, #24]
 8027114:	6923      	ldr	r3, [r4, #16]
 8027116:	b943      	cbnz	r3, 802712a <__swsetup_r+0xc6>
 8027118:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802711c:	d1ba      	bne.n	8027094 <__swsetup_r+0x30>
 802711e:	bd70      	pop	{r4, r5, r6, pc}
 8027120:	0781      	lsls	r1, r0, #30
 8027122:	bf58      	it	pl
 8027124:	6963      	ldrpl	r3, [r4, #20]
 8027126:	60a3      	str	r3, [r4, #8]
 8027128:	e7f4      	b.n	8027114 <__swsetup_r+0xb0>
 802712a:	2000      	movs	r0, #0
 802712c:	e7f7      	b.n	802711e <__swsetup_r+0xba>
 802712e:	bf00      	nop
 8027130:	200000e0 	.word	0x200000e0
 8027134:	0802aad8 	.word	0x0802aad8
 8027138:	0802aaf8 	.word	0x0802aaf8
 802713c:	0802aab8 	.word	0x0802aab8

08027140 <__register_exitproc>:
 8027140:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027144:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8027200 <__register_exitproc+0xc0>
 8027148:	4606      	mov	r6, r0
 802714a:	f8d8 0000 	ldr.w	r0, [r8]
 802714e:	461f      	mov	r7, r3
 8027150:	460d      	mov	r5, r1
 8027152:	4691      	mov	r9, r2
 8027154:	f000 fa0e 	bl	8027574 <__retarget_lock_acquire_recursive>
 8027158:	4b25      	ldr	r3, [pc, #148]	; (80271f0 <__register_exitproc+0xb0>)
 802715a:	681c      	ldr	r4, [r3, #0]
 802715c:	b934      	cbnz	r4, 802716c <__register_exitproc+0x2c>
 802715e:	4c25      	ldr	r4, [pc, #148]	; (80271f4 <__register_exitproc+0xb4>)
 8027160:	601c      	str	r4, [r3, #0]
 8027162:	4b25      	ldr	r3, [pc, #148]	; (80271f8 <__register_exitproc+0xb8>)
 8027164:	b113      	cbz	r3, 802716c <__register_exitproc+0x2c>
 8027166:	681b      	ldr	r3, [r3, #0]
 8027168:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802716c:	6863      	ldr	r3, [r4, #4]
 802716e:	2b1f      	cmp	r3, #31
 8027170:	dd07      	ble.n	8027182 <__register_exitproc+0x42>
 8027172:	f8d8 0000 	ldr.w	r0, [r8]
 8027176:	f000 f9ff 	bl	8027578 <__retarget_lock_release_recursive>
 802717a:	f04f 30ff 	mov.w	r0, #4294967295
 802717e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027182:	b34e      	cbz	r6, 80271d8 <__register_exitproc+0x98>
 8027184:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8027188:	b988      	cbnz	r0, 80271ae <__register_exitproc+0x6e>
 802718a:	4b1c      	ldr	r3, [pc, #112]	; (80271fc <__register_exitproc+0xbc>)
 802718c:	b923      	cbnz	r3, 8027198 <__register_exitproc+0x58>
 802718e:	f8d8 0000 	ldr.w	r0, [r8]
 8027192:	f000 f9f0 	bl	8027576 <__retarget_lock_release>
 8027196:	e7f0      	b.n	802717a <__register_exitproc+0x3a>
 8027198:	f44f 7084 	mov.w	r0, #264	; 0x108
 802719c:	f7ff fab4 	bl	8026708 <malloc>
 80271a0:	2800      	cmp	r0, #0
 80271a2:	d0f4      	beq.n	802718e <__register_exitproc+0x4e>
 80271a4:	2300      	movs	r3, #0
 80271a6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80271aa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80271ae:	6863      	ldr	r3, [r4, #4]
 80271b0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80271b4:	2201      	movs	r2, #1
 80271b6:	409a      	lsls	r2, r3
 80271b8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80271bc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80271c0:	4313      	orrs	r3, r2
 80271c2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80271c6:	2e02      	cmp	r6, #2
 80271c8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80271cc:	bf02      	ittt	eq
 80271ce:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80271d2:	4313      	orreq	r3, r2
 80271d4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80271d8:	6863      	ldr	r3, [r4, #4]
 80271da:	f8d8 0000 	ldr.w	r0, [r8]
 80271de:	1c5a      	adds	r2, r3, #1
 80271e0:	3302      	adds	r3, #2
 80271e2:	6062      	str	r2, [r4, #4]
 80271e4:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80271e8:	f000 f9c6 	bl	8027578 <__retarget_lock_release_recursive>
 80271ec:	2000      	movs	r0, #0
 80271ee:	e7c6      	b.n	802717e <__register_exitproc+0x3e>
 80271f0:	2000fa0c 	.word	0x2000fa0c
 80271f4:	2000f980 	.word	0x2000f980
 80271f8:	0802aab4 	.word	0x0802aab4
 80271fc:	08026709 	.word	0x08026709
 8027200:	20000144 	.word	0x20000144

08027204 <__sflush_r>:
 8027204:	898a      	ldrh	r2, [r1, #12]
 8027206:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802720a:	4605      	mov	r5, r0
 802720c:	0710      	lsls	r0, r2, #28
 802720e:	460c      	mov	r4, r1
 8027210:	d458      	bmi.n	80272c4 <__sflush_r+0xc0>
 8027212:	684b      	ldr	r3, [r1, #4]
 8027214:	2b00      	cmp	r3, #0
 8027216:	dc05      	bgt.n	8027224 <__sflush_r+0x20>
 8027218:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802721a:	2b00      	cmp	r3, #0
 802721c:	dc02      	bgt.n	8027224 <__sflush_r+0x20>
 802721e:	2000      	movs	r0, #0
 8027220:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8027224:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027226:	2e00      	cmp	r6, #0
 8027228:	d0f9      	beq.n	802721e <__sflush_r+0x1a>
 802722a:	2300      	movs	r3, #0
 802722c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8027230:	682f      	ldr	r7, [r5, #0]
 8027232:	602b      	str	r3, [r5, #0]
 8027234:	d032      	beq.n	802729c <__sflush_r+0x98>
 8027236:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8027238:	89a3      	ldrh	r3, [r4, #12]
 802723a:	075a      	lsls	r2, r3, #29
 802723c:	d505      	bpl.n	802724a <__sflush_r+0x46>
 802723e:	6863      	ldr	r3, [r4, #4]
 8027240:	1ac0      	subs	r0, r0, r3
 8027242:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8027244:	b10b      	cbz	r3, 802724a <__sflush_r+0x46>
 8027246:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8027248:	1ac0      	subs	r0, r0, r3
 802724a:	2300      	movs	r3, #0
 802724c:	4602      	mov	r2, r0
 802724e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8027250:	6a21      	ldr	r1, [r4, #32]
 8027252:	4628      	mov	r0, r5
 8027254:	47b0      	blx	r6
 8027256:	1c43      	adds	r3, r0, #1
 8027258:	89a3      	ldrh	r3, [r4, #12]
 802725a:	d106      	bne.n	802726a <__sflush_r+0x66>
 802725c:	6829      	ldr	r1, [r5, #0]
 802725e:	291d      	cmp	r1, #29
 8027260:	d82c      	bhi.n	80272bc <__sflush_r+0xb8>
 8027262:	4a2a      	ldr	r2, [pc, #168]	; (802730c <__sflush_r+0x108>)
 8027264:	40ca      	lsrs	r2, r1
 8027266:	07d6      	lsls	r6, r2, #31
 8027268:	d528      	bpl.n	80272bc <__sflush_r+0xb8>
 802726a:	2200      	movs	r2, #0
 802726c:	6062      	str	r2, [r4, #4]
 802726e:	04d9      	lsls	r1, r3, #19
 8027270:	6922      	ldr	r2, [r4, #16]
 8027272:	6022      	str	r2, [r4, #0]
 8027274:	d504      	bpl.n	8027280 <__sflush_r+0x7c>
 8027276:	1c42      	adds	r2, r0, #1
 8027278:	d101      	bne.n	802727e <__sflush_r+0x7a>
 802727a:	682b      	ldr	r3, [r5, #0]
 802727c:	b903      	cbnz	r3, 8027280 <__sflush_r+0x7c>
 802727e:	6560      	str	r0, [r4, #84]	; 0x54
 8027280:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8027282:	602f      	str	r7, [r5, #0]
 8027284:	2900      	cmp	r1, #0
 8027286:	d0ca      	beq.n	802721e <__sflush_r+0x1a>
 8027288:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802728c:	4299      	cmp	r1, r3
 802728e:	d002      	beq.n	8027296 <__sflush_r+0x92>
 8027290:	4628      	mov	r0, r5
 8027292:	f7ff fa5f 	bl	8026754 <_free_r>
 8027296:	2000      	movs	r0, #0
 8027298:	6360      	str	r0, [r4, #52]	; 0x34
 802729a:	e7c1      	b.n	8027220 <__sflush_r+0x1c>
 802729c:	6a21      	ldr	r1, [r4, #32]
 802729e:	2301      	movs	r3, #1
 80272a0:	4628      	mov	r0, r5
 80272a2:	47b0      	blx	r6
 80272a4:	1c41      	adds	r1, r0, #1
 80272a6:	d1c7      	bne.n	8027238 <__sflush_r+0x34>
 80272a8:	682b      	ldr	r3, [r5, #0]
 80272aa:	2b00      	cmp	r3, #0
 80272ac:	d0c4      	beq.n	8027238 <__sflush_r+0x34>
 80272ae:	2b1d      	cmp	r3, #29
 80272b0:	d001      	beq.n	80272b6 <__sflush_r+0xb2>
 80272b2:	2b16      	cmp	r3, #22
 80272b4:	d101      	bne.n	80272ba <__sflush_r+0xb6>
 80272b6:	602f      	str	r7, [r5, #0]
 80272b8:	e7b1      	b.n	802721e <__sflush_r+0x1a>
 80272ba:	89a3      	ldrh	r3, [r4, #12]
 80272bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80272c0:	81a3      	strh	r3, [r4, #12]
 80272c2:	e7ad      	b.n	8027220 <__sflush_r+0x1c>
 80272c4:	690f      	ldr	r7, [r1, #16]
 80272c6:	2f00      	cmp	r7, #0
 80272c8:	d0a9      	beq.n	802721e <__sflush_r+0x1a>
 80272ca:	0793      	lsls	r3, r2, #30
 80272cc:	680e      	ldr	r6, [r1, #0]
 80272ce:	bf08      	it	eq
 80272d0:	694b      	ldreq	r3, [r1, #20]
 80272d2:	600f      	str	r7, [r1, #0]
 80272d4:	bf18      	it	ne
 80272d6:	2300      	movne	r3, #0
 80272d8:	eba6 0807 	sub.w	r8, r6, r7
 80272dc:	608b      	str	r3, [r1, #8]
 80272de:	f1b8 0f00 	cmp.w	r8, #0
 80272e2:	dd9c      	ble.n	802721e <__sflush_r+0x1a>
 80272e4:	6a21      	ldr	r1, [r4, #32]
 80272e6:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80272e8:	4643      	mov	r3, r8
 80272ea:	463a      	mov	r2, r7
 80272ec:	4628      	mov	r0, r5
 80272ee:	47b0      	blx	r6
 80272f0:	2800      	cmp	r0, #0
 80272f2:	dc06      	bgt.n	8027302 <__sflush_r+0xfe>
 80272f4:	89a3      	ldrh	r3, [r4, #12]
 80272f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80272fa:	81a3      	strh	r3, [r4, #12]
 80272fc:	f04f 30ff 	mov.w	r0, #4294967295
 8027300:	e78e      	b.n	8027220 <__sflush_r+0x1c>
 8027302:	4407      	add	r7, r0
 8027304:	eba8 0800 	sub.w	r8, r8, r0
 8027308:	e7e9      	b.n	80272de <__sflush_r+0xda>
 802730a:	bf00      	nop
 802730c:	20400001 	.word	0x20400001

08027310 <_fflush_r>:
 8027310:	b538      	push	{r3, r4, r5, lr}
 8027312:	690b      	ldr	r3, [r1, #16]
 8027314:	4605      	mov	r5, r0
 8027316:	460c      	mov	r4, r1
 8027318:	b913      	cbnz	r3, 8027320 <_fflush_r+0x10>
 802731a:	2500      	movs	r5, #0
 802731c:	4628      	mov	r0, r5
 802731e:	bd38      	pop	{r3, r4, r5, pc}
 8027320:	b118      	cbz	r0, 802732a <_fflush_r+0x1a>
 8027322:	6983      	ldr	r3, [r0, #24]
 8027324:	b90b      	cbnz	r3, 802732a <_fflush_r+0x1a>
 8027326:	f000 f887 	bl	8027438 <__sinit>
 802732a:	4b14      	ldr	r3, [pc, #80]	; (802737c <_fflush_r+0x6c>)
 802732c:	429c      	cmp	r4, r3
 802732e:	d11b      	bne.n	8027368 <_fflush_r+0x58>
 8027330:	686c      	ldr	r4, [r5, #4]
 8027332:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8027336:	2b00      	cmp	r3, #0
 8027338:	d0ef      	beq.n	802731a <_fflush_r+0xa>
 802733a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802733c:	07d0      	lsls	r0, r2, #31
 802733e:	d404      	bmi.n	802734a <_fflush_r+0x3a>
 8027340:	0599      	lsls	r1, r3, #22
 8027342:	d402      	bmi.n	802734a <_fflush_r+0x3a>
 8027344:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027346:	f000 f915 	bl	8027574 <__retarget_lock_acquire_recursive>
 802734a:	4628      	mov	r0, r5
 802734c:	4621      	mov	r1, r4
 802734e:	f7ff ff59 	bl	8027204 <__sflush_r>
 8027352:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8027354:	07da      	lsls	r2, r3, #31
 8027356:	4605      	mov	r5, r0
 8027358:	d4e0      	bmi.n	802731c <_fflush_r+0xc>
 802735a:	89a3      	ldrh	r3, [r4, #12]
 802735c:	059b      	lsls	r3, r3, #22
 802735e:	d4dd      	bmi.n	802731c <_fflush_r+0xc>
 8027360:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8027362:	f000 f909 	bl	8027578 <__retarget_lock_release_recursive>
 8027366:	e7d9      	b.n	802731c <_fflush_r+0xc>
 8027368:	4b05      	ldr	r3, [pc, #20]	; (8027380 <_fflush_r+0x70>)
 802736a:	429c      	cmp	r4, r3
 802736c:	d101      	bne.n	8027372 <_fflush_r+0x62>
 802736e:	68ac      	ldr	r4, [r5, #8]
 8027370:	e7df      	b.n	8027332 <_fflush_r+0x22>
 8027372:	4b04      	ldr	r3, [pc, #16]	; (8027384 <_fflush_r+0x74>)
 8027374:	429c      	cmp	r4, r3
 8027376:	bf08      	it	eq
 8027378:	68ec      	ldreq	r4, [r5, #12]
 802737a:	e7da      	b.n	8027332 <_fflush_r+0x22>
 802737c:	0802aad8 	.word	0x0802aad8
 8027380:	0802aaf8 	.word	0x0802aaf8
 8027384:	0802aab8 	.word	0x0802aab8

08027388 <std>:
 8027388:	2300      	movs	r3, #0
 802738a:	b510      	push	{r4, lr}
 802738c:	4604      	mov	r4, r0
 802738e:	e9c0 3300 	strd	r3, r3, [r0]
 8027392:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8027396:	6083      	str	r3, [r0, #8]
 8027398:	8181      	strh	r1, [r0, #12]
 802739a:	6643      	str	r3, [r0, #100]	; 0x64
 802739c:	81c2      	strh	r2, [r0, #14]
 802739e:	6183      	str	r3, [r0, #24]
 80273a0:	4619      	mov	r1, r3
 80273a2:	2208      	movs	r2, #8
 80273a4:	305c      	adds	r0, #92	; 0x5c
 80273a6:	f7ff f9cd 	bl	8026744 <memset>
 80273aa:	4b05      	ldr	r3, [pc, #20]	; (80273c0 <std+0x38>)
 80273ac:	6263      	str	r3, [r4, #36]	; 0x24
 80273ae:	4b05      	ldr	r3, [pc, #20]	; (80273c4 <std+0x3c>)
 80273b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80273b2:	4b05      	ldr	r3, [pc, #20]	; (80273c8 <std+0x40>)
 80273b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80273b6:	4b05      	ldr	r3, [pc, #20]	; (80273cc <std+0x44>)
 80273b8:	6224      	str	r4, [r4, #32]
 80273ba:	6323      	str	r3, [r4, #48]	; 0x30
 80273bc:	bd10      	pop	{r4, pc}
 80273be:	bf00      	nop
 80273c0:	0802765d 	.word	0x0802765d
 80273c4:	0802767f 	.word	0x0802767f
 80273c8:	080276b7 	.word	0x080276b7
 80273cc:	080276db 	.word	0x080276db

080273d0 <_cleanup_r>:
 80273d0:	4901      	ldr	r1, [pc, #4]	; (80273d8 <_cleanup_r+0x8>)
 80273d2:	f000 b8af 	b.w	8027534 <_fwalk_reent>
 80273d6:	bf00      	nop
 80273d8:	08027311 	.word	0x08027311

080273dc <__sfmoreglue>:
 80273dc:	b570      	push	{r4, r5, r6, lr}
 80273de:	2268      	movs	r2, #104	; 0x68
 80273e0:	1e4d      	subs	r5, r1, #1
 80273e2:	4355      	muls	r5, r2
 80273e4:	460e      	mov	r6, r1
 80273e6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80273ea:	f7ff fa1f 	bl	802682c <_malloc_r>
 80273ee:	4604      	mov	r4, r0
 80273f0:	b140      	cbz	r0, 8027404 <__sfmoreglue+0x28>
 80273f2:	2100      	movs	r1, #0
 80273f4:	e9c0 1600 	strd	r1, r6, [r0]
 80273f8:	300c      	adds	r0, #12
 80273fa:	60a0      	str	r0, [r4, #8]
 80273fc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8027400:	f7ff f9a0 	bl	8026744 <memset>
 8027404:	4620      	mov	r0, r4
 8027406:	bd70      	pop	{r4, r5, r6, pc}

08027408 <__sfp_lock_acquire>:
 8027408:	4801      	ldr	r0, [pc, #4]	; (8027410 <__sfp_lock_acquire+0x8>)
 802740a:	f000 b8b3 	b.w	8027574 <__retarget_lock_acquire_recursive>
 802740e:	bf00      	nop
 8027410:	2000fa12 	.word	0x2000fa12

08027414 <__sfp_lock_release>:
 8027414:	4801      	ldr	r0, [pc, #4]	; (802741c <__sfp_lock_release+0x8>)
 8027416:	f000 b8af 	b.w	8027578 <__retarget_lock_release_recursive>
 802741a:	bf00      	nop
 802741c:	2000fa12 	.word	0x2000fa12

08027420 <__sinit_lock_acquire>:
 8027420:	4801      	ldr	r0, [pc, #4]	; (8027428 <__sinit_lock_acquire+0x8>)
 8027422:	f000 b8a7 	b.w	8027574 <__retarget_lock_acquire_recursive>
 8027426:	bf00      	nop
 8027428:	2000fa13 	.word	0x2000fa13

0802742c <__sinit_lock_release>:
 802742c:	4801      	ldr	r0, [pc, #4]	; (8027434 <__sinit_lock_release+0x8>)
 802742e:	f000 b8a3 	b.w	8027578 <__retarget_lock_release_recursive>
 8027432:	bf00      	nop
 8027434:	2000fa13 	.word	0x2000fa13

08027438 <__sinit>:
 8027438:	b510      	push	{r4, lr}
 802743a:	4604      	mov	r4, r0
 802743c:	f7ff fff0 	bl	8027420 <__sinit_lock_acquire>
 8027440:	69a3      	ldr	r3, [r4, #24]
 8027442:	b11b      	cbz	r3, 802744c <__sinit+0x14>
 8027444:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8027448:	f7ff bff0 	b.w	802742c <__sinit_lock_release>
 802744c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8027450:	6523      	str	r3, [r4, #80]	; 0x50
 8027452:	4b13      	ldr	r3, [pc, #76]	; (80274a0 <__sinit+0x68>)
 8027454:	4a13      	ldr	r2, [pc, #76]	; (80274a4 <__sinit+0x6c>)
 8027456:	681b      	ldr	r3, [r3, #0]
 8027458:	62a2      	str	r2, [r4, #40]	; 0x28
 802745a:	42a3      	cmp	r3, r4
 802745c:	bf04      	itt	eq
 802745e:	2301      	moveq	r3, #1
 8027460:	61a3      	streq	r3, [r4, #24]
 8027462:	4620      	mov	r0, r4
 8027464:	f000 f820 	bl	80274a8 <__sfp>
 8027468:	6060      	str	r0, [r4, #4]
 802746a:	4620      	mov	r0, r4
 802746c:	f000 f81c 	bl	80274a8 <__sfp>
 8027470:	60a0      	str	r0, [r4, #8]
 8027472:	4620      	mov	r0, r4
 8027474:	f000 f818 	bl	80274a8 <__sfp>
 8027478:	2200      	movs	r2, #0
 802747a:	60e0      	str	r0, [r4, #12]
 802747c:	2104      	movs	r1, #4
 802747e:	6860      	ldr	r0, [r4, #4]
 8027480:	f7ff ff82 	bl	8027388 <std>
 8027484:	68a0      	ldr	r0, [r4, #8]
 8027486:	2201      	movs	r2, #1
 8027488:	2109      	movs	r1, #9
 802748a:	f7ff ff7d 	bl	8027388 <std>
 802748e:	68e0      	ldr	r0, [r4, #12]
 8027490:	2202      	movs	r2, #2
 8027492:	2112      	movs	r1, #18
 8027494:	f7ff ff78 	bl	8027388 <std>
 8027498:	2301      	movs	r3, #1
 802749a:	61a3      	str	r3, [r4, #24]
 802749c:	e7d2      	b.n	8027444 <__sinit+0xc>
 802749e:	bf00      	nop
 80274a0:	0802aa7c 	.word	0x0802aa7c
 80274a4:	080273d1 	.word	0x080273d1

080274a8 <__sfp>:
 80274a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80274aa:	4607      	mov	r7, r0
 80274ac:	f7ff ffac 	bl	8027408 <__sfp_lock_acquire>
 80274b0:	4b1e      	ldr	r3, [pc, #120]	; (802752c <__sfp+0x84>)
 80274b2:	681e      	ldr	r6, [r3, #0]
 80274b4:	69b3      	ldr	r3, [r6, #24]
 80274b6:	b913      	cbnz	r3, 80274be <__sfp+0x16>
 80274b8:	4630      	mov	r0, r6
 80274ba:	f7ff ffbd 	bl	8027438 <__sinit>
 80274be:	3648      	adds	r6, #72	; 0x48
 80274c0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80274c4:	3b01      	subs	r3, #1
 80274c6:	d503      	bpl.n	80274d0 <__sfp+0x28>
 80274c8:	6833      	ldr	r3, [r6, #0]
 80274ca:	b30b      	cbz	r3, 8027510 <__sfp+0x68>
 80274cc:	6836      	ldr	r6, [r6, #0]
 80274ce:	e7f7      	b.n	80274c0 <__sfp+0x18>
 80274d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80274d4:	b9d5      	cbnz	r5, 802750c <__sfp+0x64>
 80274d6:	4b16      	ldr	r3, [pc, #88]	; (8027530 <__sfp+0x88>)
 80274d8:	60e3      	str	r3, [r4, #12]
 80274da:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80274de:	6665      	str	r5, [r4, #100]	; 0x64
 80274e0:	f000 f847 	bl	8027572 <__retarget_lock_init_recursive>
 80274e4:	f7ff ff96 	bl	8027414 <__sfp_lock_release>
 80274e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80274ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80274f0:	6025      	str	r5, [r4, #0]
 80274f2:	61a5      	str	r5, [r4, #24]
 80274f4:	2208      	movs	r2, #8
 80274f6:	4629      	mov	r1, r5
 80274f8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80274fc:	f7ff f922 	bl	8026744 <memset>
 8027500:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8027504:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8027508:	4620      	mov	r0, r4
 802750a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802750c:	3468      	adds	r4, #104	; 0x68
 802750e:	e7d9      	b.n	80274c4 <__sfp+0x1c>
 8027510:	2104      	movs	r1, #4
 8027512:	4638      	mov	r0, r7
 8027514:	f7ff ff62 	bl	80273dc <__sfmoreglue>
 8027518:	4604      	mov	r4, r0
 802751a:	6030      	str	r0, [r6, #0]
 802751c:	2800      	cmp	r0, #0
 802751e:	d1d5      	bne.n	80274cc <__sfp+0x24>
 8027520:	f7ff ff78 	bl	8027414 <__sfp_lock_release>
 8027524:	230c      	movs	r3, #12
 8027526:	603b      	str	r3, [r7, #0]
 8027528:	e7ee      	b.n	8027508 <__sfp+0x60>
 802752a:	bf00      	nop
 802752c:	0802aa7c 	.word	0x0802aa7c
 8027530:	ffff0001 	.word	0xffff0001

08027534 <_fwalk_reent>:
 8027534:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8027538:	4606      	mov	r6, r0
 802753a:	4688      	mov	r8, r1
 802753c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8027540:	2700      	movs	r7, #0
 8027542:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8027546:	f1b9 0901 	subs.w	r9, r9, #1
 802754a:	d505      	bpl.n	8027558 <_fwalk_reent+0x24>
 802754c:	6824      	ldr	r4, [r4, #0]
 802754e:	2c00      	cmp	r4, #0
 8027550:	d1f7      	bne.n	8027542 <_fwalk_reent+0xe>
 8027552:	4638      	mov	r0, r7
 8027554:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8027558:	89ab      	ldrh	r3, [r5, #12]
 802755a:	2b01      	cmp	r3, #1
 802755c:	d907      	bls.n	802756e <_fwalk_reent+0x3a>
 802755e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8027562:	3301      	adds	r3, #1
 8027564:	d003      	beq.n	802756e <_fwalk_reent+0x3a>
 8027566:	4629      	mov	r1, r5
 8027568:	4630      	mov	r0, r6
 802756a:	47c0      	blx	r8
 802756c:	4307      	orrs	r7, r0
 802756e:	3568      	adds	r5, #104	; 0x68
 8027570:	e7e9      	b.n	8027546 <_fwalk_reent+0x12>

08027572 <__retarget_lock_init_recursive>:
 8027572:	4770      	bx	lr

08027574 <__retarget_lock_acquire_recursive>:
 8027574:	4770      	bx	lr

08027576 <__retarget_lock_release>:
 8027576:	4770      	bx	lr

08027578 <__retarget_lock_release_recursive>:
 8027578:	4770      	bx	lr

0802757a <__swhatbuf_r>:
 802757a:	b570      	push	{r4, r5, r6, lr}
 802757c:	460e      	mov	r6, r1
 802757e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027582:	2900      	cmp	r1, #0
 8027584:	b096      	sub	sp, #88	; 0x58
 8027586:	4614      	mov	r4, r2
 8027588:	461d      	mov	r5, r3
 802758a:	da08      	bge.n	802759e <__swhatbuf_r+0x24>
 802758c:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8027590:	2200      	movs	r2, #0
 8027592:	602a      	str	r2, [r5, #0]
 8027594:	061a      	lsls	r2, r3, #24
 8027596:	d410      	bmi.n	80275ba <__swhatbuf_r+0x40>
 8027598:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802759c:	e00e      	b.n	80275bc <__swhatbuf_r+0x42>
 802759e:	466a      	mov	r2, sp
 80275a0:	f000 f8c2 	bl	8027728 <_fstat_r>
 80275a4:	2800      	cmp	r0, #0
 80275a6:	dbf1      	blt.n	802758c <__swhatbuf_r+0x12>
 80275a8:	9a01      	ldr	r2, [sp, #4]
 80275aa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80275ae:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80275b2:	425a      	negs	r2, r3
 80275b4:	415a      	adcs	r2, r3
 80275b6:	602a      	str	r2, [r5, #0]
 80275b8:	e7ee      	b.n	8027598 <__swhatbuf_r+0x1e>
 80275ba:	2340      	movs	r3, #64	; 0x40
 80275bc:	2000      	movs	r0, #0
 80275be:	6023      	str	r3, [r4, #0]
 80275c0:	b016      	add	sp, #88	; 0x58
 80275c2:	bd70      	pop	{r4, r5, r6, pc}

080275c4 <__smakebuf_r>:
 80275c4:	898b      	ldrh	r3, [r1, #12]
 80275c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80275c8:	079d      	lsls	r5, r3, #30
 80275ca:	4606      	mov	r6, r0
 80275cc:	460c      	mov	r4, r1
 80275ce:	d507      	bpl.n	80275e0 <__smakebuf_r+0x1c>
 80275d0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80275d4:	6023      	str	r3, [r4, #0]
 80275d6:	6123      	str	r3, [r4, #16]
 80275d8:	2301      	movs	r3, #1
 80275da:	6163      	str	r3, [r4, #20]
 80275dc:	b002      	add	sp, #8
 80275de:	bd70      	pop	{r4, r5, r6, pc}
 80275e0:	ab01      	add	r3, sp, #4
 80275e2:	466a      	mov	r2, sp
 80275e4:	f7ff ffc9 	bl	802757a <__swhatbuf_r>
 80275e8:	9900      	ldr	r1, [sp, #0]
 80275ea:	4605      	mov	r5, r0
 80275ec:	4630      	mov	r0, r6
 80275ee:	f7ff f91d 	bl	802682c <_malloc_r>
 80275f2:	b948      	cbnz	r0, 8027608 <__smakebuf_r+0x44>
 80275f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80275f8:	059a      	lsls	r2, r3, #22
 80275fa:	d4ef      	bmi.n	80275dc <__smakebuf_r+0x18>
 80275fc:	f023 0303 	bic.w	r3, r3, #3
 8027600:	f043 0302 	orr.w	r3, r3, #2
 8027604:	81a3      	strh	r3, [r4, #12]
 8027606:	e7e3      	b.n	80275d0 <__smakebuf_r+0xc>
 8027608:	4b0d      	ldr	r3, [pc, #52]	; (8027640 <__smakebuf_r+0x7c>)
 802760a:	62b3      	str	r3, [r6, #40]	; 0x28
 802760c:	89a3      	ldrh	r3, [r4, #12]
 802760e:	6020      	str	r0, [r4, #0]
 8027610:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027614:	81a3      	strh	r3, [r4, #12]
 8027616:	9b00      	ldr	r3, [sp, #0]
 8027618:	6163      	str	r3, [r4, #20]
 802761a:	9b01      	ldr	r3, [sp, #4]
 802761c:	6120      	str	r0, [r4, #16]
 802761e:	b15b      	cbz	r3, 8027638 <__smakebuf_r+0x74>
 8027620:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027624:	4630      	mov	r0, r6
 8027626:	f000 f891 	bl	802774c <_isatty_r>
 802762a:	b128      	cbz	r0, 8027638 <__smakebuf_r+0x74>
 802762c:	89a3      	ldrh	r3, [r4, #12]
 802762e:	f023 0303 	bic.w	r3, r3, #3
 8027632:	f043 0301 	orr.w	r3, r3, #1
 8027636:	81a3      	strh	r3, [r4, #12]
 8027638:	89a0      	ldrh	r0, [r4, #12]
 802763a:	4305      	orrs	r5, r0
 802763c:	81a5      	strh	r5, [r4, #12]
 802763e:	e7cd      	b.n	80275dc <__smakebuf_r+0x18>
 8027640:	080273d1 	.word	0x080273d1

08027644 <__malloc_lock>:
 8027644:	4801      	ldr	r0, [pc, #4]	; (802764c <__malloc_lock+0x8>)
 8027646:	f7ff bf95 	b.w	8027574 <__retarget_lock_acquire_recursive>
 802764a:	bf00      	nop
 802764c:	2000fa11 	.word	0x2000fa11

08027650 <__malloc_unlock>:
 8027650:	4801      	ldr	r0, [pc, #4]	; (8027658 <__malloc_unlock+0x8>)
 8027652:	f7ff bf91 	b.w	8027578 <__retarget_lock_release_recursive>
 8027656:	bf00      	nop
 8027658:	2000fa11 	.word	0x2000fa11

0802765c <__sread>:
 802765c:	b510      	push	{r4, lr}
 802765e:	460c      	mov	r4, r1
 8027660:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027664:	f000 f894 	bl	8027790 <_read_r>
 8027668:	2800      	cmp	r0, #0
 802766a:	bfab      	itete	ge
 802766c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802766e:	89a3      	ldrhlt	r3, [r4, #12]
 8027670:	181b      	addge	r3, r3, r0
 8027672:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8027676:	bfac      	ite	ge
 8027678:	6563      	strge	r3, [r4, #84]	; 0x54
 802767a:	81a3      	strhlt	r3, [r4, #12]
 802767c:	bd10      	pop	{r4, pc}

0802767e <__swrite>:
 802767e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027682:	461f      	mov	r7, r3
 8027684:	898b      	ldrh	r3, [r1, #12]
 8027686:	05db      	lsls	r3, r3, #23
 8027688:	4605      	mov	r5, r0
 802768a:	460c      	mov	r4, r1
 802768c:	4616      	mov	r6, r2
 802768e:	d505      	bpl.n	802769c <__swrite+0x1e>
 8027690:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027694:	2302      	movs	r3, #2
 8027696:	2200      	movs	r2, #0
 8027698:	f000 f868 	bl	802776c <_lseek_r>
 802769c:	89a3      	ldrh	r3, [r4, #12]
 802769e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80276a2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80276a6:	81a3      	strh	r3, [r4, #12]
 80276a8:	4632      	mov	r2, r6
 80276aa:	463b      	mov	r3, r7
 80276ac:	4628      	mov	r0, r5
 80276ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80276b2:	f000 b817 	b.w	80276e4 <_write_r>

080276b6 <__sseek>:
 80276b6:	b510      	push	{r4, lr}
 80276b8:	460c      	mov	r4, r1
 80276ba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80276be:	f000 f855 	bl	802776c <_lseek_r>
 80276c2:	1c43      	adds	r3, r0, #1
 80276c4:	89a3      	ldrh	r3, [r4, #12]
 80276c6:	bf15      	itete	ne
 80276c8:	6560      	strne	r0, [r4, #84]	; 0x54
 80276ca:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80276ce:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80276d2:	81a3      	strheq	r3, [r4, #12]
 80276d4:	bf18      	it	ne
 80276d6:	81a3      	strhne	r3, [r4, #12]
 80276d8:	bd10      	pop	{r4, pc}

080276da <__sclose>:
 80276da:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80276de:	f000 b813 	b.w	8027708 <_close_r>
	...

080276e4 <_write_r>:
 80276e4:	b538      	push	{r3, r4, r5, lr}
 80276e6:	4d07      	ldr	r5, [pc, #28]	; (8027704 <_write_r+0x20>)
 80276e8:	4604      	mov	r4, r0
 80276ea:	4608      	mov	r0, r1
 80276ec:	4611      	mov	r1, r2
 80276ee:	2200      	movs	r2, #0
 80276f0:	602a      	str	r2, [r5, #0]
 80276f2:	461a      	mov	r2, r3
 80276f4:	f7db f98a 	bl	8002a0c <_write>
 80276f8:	1c43      	adds	r3, r0, #1
 80276fa:	d102      	bne.n	8027702 <_write_r+0x1e>
 80276fc:	682b      	ldr	r3, [r5, #0]
 80276fe:	b103      	cbz	r3, 8027702 <_write_r+0x1e>
 8027700:	6023      	str	r3, [r4, #0]
 8027702:	bd38      	pop	{r3, r4, r5, pc}
 8027704:	2000fa14 	.word	0x2000fa14

08027708 <_close_r>:
 8027708:	b538      	push	{r3, r4, r5, lr}
 802770a:	4d06      	ldr	r5, [pc, #24]	; (8027724 <_close_r+0x1c>)
 802770c:	2300      	movs	r3, #0
 802770e:	4604      	mov	r4, r0
 8027710:	4608      	mov	r0, r1
 8027712:	602b      	str	r3, [r5, #0]
 8027714:	f7db f988 	bl	8002a28 <_close>
 8027718:	1c43      	adds	r3, r0, #1
 802771a:	d102      	bne.n	8027722 <_close_r+0x1a>
 802771c:	682b      	ldr	r3, [r5, #0]
 802771e:	b103      	cbz	r3, 8027722 <_close_r+0x1a>
 8027720:	6023      	str	r3, [r4, #0]
 8027722:	bd38      	pop	{r3, r4, r5, pc}
 8027724:	2000fa14 	.word	0x2000fa14

08027728 <_fstat_r>:
 8027728:	b538      	push	{r3, r4, r5, lr}
 802772a:	4d07      	ldr	r5, [pc, #28]	; (8027748 <_fstat_r+0x20>)
 802772c:	2300      	movs	r3, #0
 802772e:	4604      	mov	r4, r0
 8027730:	4608      	mov	r0, r1
 8027732:	4611      	mov	r1, r2
 8027734:	602b      	str	r3, [r5, #0]
 8027736:	f7db f97a 	bl	8002a2e <_fstat>
 802773a:	1c43      	adds	r3, r0, #1
 802773c:	d102      	bne.n	8027744 <_fstat_r+0x1c>
 802773e:	682b      	ldr	r3, [r5, #0]
 8027740:	b103      	cbz	r3, 8027744 <_fstat_r+0x1c>
 8027742:	6023      	str	r3, [r4, #0]
 8027744:	bd38      	pop	{r3, r4, r5, pc}
 8027746:	bf00      	nop
 8027748:	2000fa14 	.word	0x2000fa14

0802774c <_isatty_r>:
 802774c:	b538      	push	{r3, r4, r5, lr}
 802774e:	4d06      	ldr	r5, [pc, #24]	; (8027768 <_isatty_r+0x1c>)
 8027750:	2300      	movs	r3, #0
 8027752:	4604      	mov	r4, r0
 8027754:	4608      	mov	r0, r1
 8027756:	602b      	str	r3, [r5, #0]
 8027758:	f7db f96e 	bl	8002a38 <_isatty>
 802775c:	1c43      	adds	r3, r0, #1
 802775e:	d102      	bne.n	8027766 <_isatty_r+0x1a>
 8027760:	682b      	ldr	r3, [r5, #0]
 8027762:	b103      	cbz	r3, 8027766 <_isatty_r+0x1a>
 8027764:	6023      	str	r3, [r4, #0]
 8027766:	bd38      	pop	{r3, r4, r5, pc}
 8027768:	2000fa14 	.word	0x2000fa14

0802776c <_lseek_r>:
 802776c:	b538      	push	{r3, r4, r5, lr}
 802776e:	4d07      	ldr	r5, [pc, #28]	; (802778c <_lseek_r+0x20>)
 8027770:	4604      	mov	r4, r0
 8027772:	4608      	mov	r0, r1
 8027774:	4611      	mov	r1, r2
 8027776:	2200      	movs	r2, #0
 8027778:	602a      	str	r2, [r5, #0]
 802777a:	461a      	mov	r2, r3
 802777c:	f7db f95e 	bl	8002a3c <_lseek>
 8027780:	1c43      	adds	r3, r0, #1
 8027782:	d102      	bne.n	802778a <_lseek_r+0x1e>
 8027784:	682b      	ldr	r3, [r5, #0]
 8027786:	b103      	cbz	r3, 802778a <_lseek_r+0x1e>
 8027788:	6023      	str	r3, [r4, #0]
 802778a:	bd38      	pop	{r3, r4, r5, pc}
 802778c:	2000fa14 	.word	0x2000fa14

08027790 <_read_r>:
 8027790:	b538      	push	{r3, r4, r5, lr}
 8027792:	4d07      	ldr	r5, [pc, #28]	; (80277b0 <_read_r+0x20>)
 8027794:	4604      	mov	r4, r0
 8027796:	4608      	mov	r0, r1
 8027798:	4611      	mov	r1, r2
 802779a:	2200      	movs	r2, #0
 802779c:	602a      	str	r2, [r5, #0]
 802779e:	461a      	mov	r2, r3
 80277a0:	f7db f926 	bl	80029f0 <_read>
 80277a4:	1c43      	adds	r3, r0, #1
 80277a6:	d102      	bne.n	80277ae <_read_r+0x1e>
 80277a8:	682b      	ldr	r3, [r5, #0]
 80277aa:	b103      	cbz	r3, 80277ae <_read_r+0x1e>
 80277ac:	6023      	str	r3, [r4, #0]
 80277ae:	bd38      	pop	{r3, r4, r5, pc}
 80277b0:	2000fa14 	.word	0x2000fa14

080277b4 <_init>:
 80277b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277b6:	bf00      	nop
 80277b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277ba:	bc08      	pop	{r3}
 80277bc:	469e      	mov	lr, r3
 80277be:	4770      	bx	lr

080277c0 <_fini>:
 80277c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277c2:	bf00      	nop
 80277c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277c6:	bc08      	pop	{r3}
 80277c8:	469e      	mov	lr, r3
 80277ca:	4770      	bx	lr
